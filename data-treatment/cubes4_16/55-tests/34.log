[     1.568][MainProcess][INFO] Parsing specification...
[     1.572][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.572][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.572][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.573][MainProcess][DEBUG] Reading input files...
[     1.578][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-1.txt: ['string', 'string']
[     1.582][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-2.txt: ['string', 'string']
[     1.585][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-3.txt: ['string', 'string']
[     1.589][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/34.out: ['string']
[     1.620][MainProcess][DEBUG] Generating DSL...
[     1.649][MainProcess][INFO] Creating 16 processes
[     1.714][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.714][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.715][MainProcess][DEBUG] Increasing generator loc to 3
[     1.716][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.717][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.721][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.724][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.728][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.732][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.739][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.741][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.741][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.748][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.751][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.752][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.759][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.795][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.540][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.541][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.543][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.544][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.545][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.546][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.578][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.579][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.582][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.678][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.679][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.681][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     3.040][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     3.049][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     3.050][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     3.055][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     3.055][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     3.059][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     3.061][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     3.064][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     3.066][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     3.067][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     3.067][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     3.070][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     3.072][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     3.072][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     3.072][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     3.073][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     3.073][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     3.076][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     3.077][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     3.079][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     3.080][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = inner_join())
[     3.081][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = left_join(), l2 = filter())
[     3.083][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter())
[     3.083][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = union(), l2 = filter())
[     3.087][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = semi_join(), l2 = filter())
[     3.087][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = intersect(), l2 = filter())
[     3.089][cube-solver-14][DEBUG] Solving cube (l0 = summarise([2]), l1 = cross_join(), l2 = filter())
[     3.089][cube-solver-9][DEBUG] Solving cube (l0 = summarise([2]), l1 = mutate(), l2 = filter())
[     3.091][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = inner_join(), l2 = filter())
[     3.092][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([2]))
[     3.093][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     3.094][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([2]))
[     3.095][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     3.095][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([2]))
[     3.097][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join())
[     3.097][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     3.098][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     3.098][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = summarise([2]))
[     3.099][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join4())
[     3.099][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join3())
[     3.102][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = union())
[     3.103][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = anti_join())
[     3.103][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = left_join())
[     3.104][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = filter())
[     3.106][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = intersect())
[     3.108][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = semi_join())
[     3.109][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = cross_join())
[     3.110][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = mutate())
[     3.111][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise([4]))
[     3.112][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = filter(), l2 = mutate())
[     3.113][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = inner_join())
[     3.114][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     3.115][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise([4]))
[     3.118][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     3.119][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise([5]))
[     3.119][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise([5]))
[     3.120][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     3.123][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     3.123][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise([5]))
[     3.123][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     3.124][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise([5]))
[     3.127][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise([6]))
[     3.128][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     3.128][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     3.129][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     3.130][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3([1]))
[     3.133][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join4())
[     3.133][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise([6]))
[     3.134][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = left_join())
[     3.135][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = anti_join())
[     3.135][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = filter())
[     3.136][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = union())
[     3.138][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = semi_join())
[     3.138][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = intersect())
[     3.140][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = inner_join())
[     3.141][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = cross_join())
[     3.141][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[     3.142][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = mutate())
[     3.143][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = summarise([6]))
[     3.144][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([6]), l2 = filter())
[     3.146][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = summarise([6]))
[     3.147][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = mutate())
[     3.147][cube-solver-14][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter())
[     3.149][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([6]), l2 = filter())
[     3.152][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = mutate())
[     3.152][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = summarise([6]))
[     3.153][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = mutate())
[     3.153][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter())
[     3.154][cube-solver-13][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = summarise([6]))
[     3.154][cube-solver-14][DEBUG] Solving cube (l0 = union(), l1 = summarise([6]), l2 = filter())
[     3.155][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter())
[     3.157][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([6]), l2 = filter())
[     3.158][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = summarise([6]))
[     3.161][cube-solver-10][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = mutate())
[     3.161][cube-solver-13][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([6]), l2 = filter())
[     3.161][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter())
[     3.162][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = summarise([6]))
[     3.166][cube-solver-14][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = mutate())
[     3.166][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = mutate())
[     3.167][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([6]), l2 = filter())
[     3.167][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter())
[     3.168][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = summarise([6]))
[     3.168][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter())
[     3.170][cube-solver-13][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter())
[     3.170][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter())
[     3.172][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([1]), l2 = filter())
[     3.174][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([6]), l2 = filter())
[     3.174][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join())
[     3.177][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join3([1]))
[     3.178][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join4())
[     3.178][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise([6]))
[     3.184][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = filter())
[     3.186][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = anti_join())
[     3.190][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = union())
[     3.192][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = left_join())
[     3.194][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = intersect())
[     3.198][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = cross_join())
[     3.198][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([1]), l2 = summarise([6]))
[     3.199][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = semi_join())
[     3.204][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = mutate())
[     3.207][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = inner_join())
[     3.208][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([1]))
[     3.211][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([1]))
[     3.213][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([1]))
[     3.217][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([1]))
[     3.218][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([1]))
[     3.221][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([2]))
[     3.223][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([2]))
[     3.224][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([2]))
[     3.226][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([7]), l2 = filter([2]))
[     3.230][cube-solver-5][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([2]), l2 = summarise([7]))
[     3.231][cube-solver-10][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([2]), l2 = mutate())
[     3.234][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([2]))
[     3.235][MainProcess][DEBUG] Increasing generator loc to 4
[     3.238][cube-solver-10][DEBUG] Initialising process for 4 lines of code.
[     3.239][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     3.241][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     3.249][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([3]))
[     3.260][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     3.999][cube-solver-3][DEBUG] Solving cube (l0 = summarise([15]), l1 = natural_join3([2]), l2 = filter([22]))
[     4.172][cube-solver-1][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join4(), l2 = filter([29]))
[     4.179][cube-solver-0][DEBUG] Solving cube (l0 = summarise([16]), l1 = summarise([16]), l2 = filter([30]))
[     4.194][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     4.229][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     4.497][cube-solver-2][DEBUG] Solving cube (l0 = summarise([20]), l1 = natural_join(), l2 = filter([33]))
[     4.540][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     5.142][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([42]))
[     5.236][cube-solver-10][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = natural_join([1]), l3 = filter([45]))
[     5.340][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([46]))
[     5.395][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([46]))
[     5.406][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = filter([46]), l3 = summarise([21]))
[     5.448][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([46]), l3 = filter([46]))
[     5.470][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([46]), l3 = anti_join())
[     5.521][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([46]), l3 = left_join())
[     6.185][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([47]), l3 = natural_join([2]))
[     6.251][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([48]), l3 = natural_join3([2]))
[     6.521][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([56]), l3 = natural_join4())
[     7.515][cube-solver-2][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([56]), l3 = natural_join4())
[     7.517][MainProcess][INFO] Statistics:
[     7.517][MainProcess][INFO] 	Generated cubes: 153
[     7.518][MainProcess][INFO] 	Attempted programs: 36
[     7.518][MainProcess][INFO] 		Rejected: 3
[     7.518][MainProcess][INFO] 		Failed: 32
[     7.518][MainProcess][INFO] 	Blacklist clauses: 81
[     7.518][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     7.520][MainProcess][DEBUG] 	0: Counter({'mutate': 1357, 'natural_join3': 667, 'summarise': 287})
[     7.521][MainProcess][DEBUG] 	1: Counter({'natural_join3': 590, 'natural_join4': 543, 'filter': 511, 'mutate': 463, 'summarise': 204})
[     7.522][MainProcess][DEBUG] 	2: Counter({'filter': 1800, 'natural_join3': 260, 'natural_join4': 251})
[     7.523][MainProcess][DEBUG] Printing statistics for good programs of size 4
[     7.523][MainProcess][DEBUG] 	0: Counter({'natural_join': 260})
[     7.523][MainProcess][DEBUG] 	1: Counter({'summarise': 260})
[     7.523][MainProcess][DEBUG] 	2: Counter({'natural_join3': 147, 'filter': 67, 'natural_join': 46})
[     7.524][MainProcess][DEBUG] 	3: Counter({'filter': 193, 'natural_join4': 37, 'left_join': 20, 'natural_join': 10})
[     7.524][MainProcess][INFO] Solution found: natural_join4(@param0, @param1, @param2, filter(summarise(natural_join(@param0, @param1), n = n(), P_id, color), color == 'red' & n == 3))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/34.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input2)
df5 <- df4 %>% group_by(P_id, color) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(color == 'red' & n == 3)
df7 <- inner_join(input1, input2) %>% inner_join(input3) %>% inner_join(df6)
out <- df7 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `LHS`.`S_key` AS `S_key`,
          `LHS`.`P_id` AS `P_id`,
          `LHS`.`color` AS `color`,
          `LHS`.`S_name` AS `S_name`,
          `RHS`.`n` AS `n`
   FROM
     (SELECT `LHS`.`S_key` AS `S_key`,
             `LHS`.`P_id` AS `P_id`,
             `LHS`.`color` AS `color`,
             `RHS`.`S_name` AS `S_name`
      FROM
        (SELECT `LHS`.`S_key` AS `S_key`,
                `LHS`.`P_id` AS `P_id`,
                `RHS`.`color` AS `color`
         FROM `input1` AS `LHS`
         INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)) AS `LHS`
      INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`)) AS `LHS`
   INNER JOIN
     (SELECT *
      FROM
        (SELECT `P_id`,
                `color`,
                COUNT() AS `n`
         FROM
           (SELECT `LHS`.`S_key` AS `S_key`,
                   `LHS`.`P_id` AS `P_id`,
                   `RHS`.`color` AS `color`
            FROM `input1` AS `LHS`
            INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
         GROUP BY `P_id`,
                  `color`)
      WHERE (`color` = 'red'
             AND n = 3.0)) AS RHS ON (LHS.P_id = RHS.P_id
                                      AND LHS.color = RHS.color))
ORDER BY S_name
