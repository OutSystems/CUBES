[     1.654][MainProcess][INFO] Parsing specification...
[     1.664][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.664][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.664][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.665][MainProcess][DEBUG] Reading input files...
[     1.672][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/19-1.txt: ['string', 'string']
[     1.677][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/19-2.txt: ['string', 'string']
[     1.682][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/19-3.txt: ['string', 'string']
[     1.699][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/32.out: ['string', 'int64']
[     1.734][MainProcess][DEBUG] Generating DSL...
[     1.787][MainProcess][INFO] Creating 16 processes
[     1.859][MainProcess][DEBUG] Increasing generator loc to 3
[     1.872][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.881][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.881][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.886][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.889][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.889][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.893][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.894][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.896][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.901][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.910][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.918][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.919][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.939][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.969][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.988][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     4.259][cube-solver-0][WARNING] There is no solution for current loc (2).
[     4.260][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     4.263][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     4.294][cube-solver-3][WARNING] There is no solution for current loc (2).
[     4.294][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     4.296][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     4.316][cube-solver-1][WARNING] There is no solution for current loc (2).
[     4.318][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     4.322][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     4.323][cube-solver-2][WARNING] There is no solution for current loc (2).
[     4.324][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     4.329][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     5.268][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     5.279][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     5.283][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     5.291][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     5.293][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     5.293][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     5.294][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     5.305][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     5.312][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     5.315][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     5.330][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     5.334][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     5.337][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([1]), l2 = summarise())
[     5.345][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = left_join())
[     5.362][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = union())
[     5.363][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = intersect())
[     5.369][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([1]))
[     5.371][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = semi_join())
[     5.378][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = cross_join())
[     5.379][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = mutate())
[     5.393][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([1]), l2 = mutate())
[     5.394][cube-solver-13][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter([1]), l2 = inner_join())
[     5.395][cube-solver-12][DEBUG] Solving cube (l0 = summarise([3]), l1 = anti_join(), l2 = filter([1]))
[     5.417][cube-solver-12][DEBUG] Solving cube (l0 = summarise([4]), l1 = left_join(), l2 = filter([1]))
[     5.418][cube-solver-6][DEBUG] Solving cube (l0 = summarise([4]), l1 = union(), l2 = filter([1]))
[     5.420][cube-solver-14][DEBUG] Solving cube (l0 = summarise([4]), l1 = intersect(), l2 = filter([1]))
[     5.424][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = filter([1]), l2 = summarise([4]))
[     5.426][cube-solver-13][DEBUG] Solving cube (l0 = summarise([4]), l1 = semi_join(), l2 = filter([1]))
[     5.432][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([1]))
[     5.436][cube-solver-12][DEBUG] Solving cube (l0 = summarise([4]), l1 = cross_join(), l2 = filter([1]))
[     5.439][cube-solver-6][DEBUG] Solving cube (l0 = summarise([4]), l1 = mutate(), l2 = filter([1]))
[     5.440][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([1]))
[     5.443][cube-solver-14][DEBUG] Solving cube (l0 = summarise([4]), l1 = inner_join(), l2 = filter([1]))
[     5.447][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = summarise([4]))
[     5.455][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = mutate())
[     5.455][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3([1]), l2 = mutate())
[     5.458][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3([1]), l2 = summarise([4]))
[     5.460][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = summarise([4]))
[     5.462][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = mutate())
[     5.465][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([4]), l2 = natural_join())
[     5.468][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([5]), l2 = natural_join3([2]))
[     5.482][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([5]), l2 = natural_join4())
[     5.493][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([5]), l2 = summarise([5]))
[     5.507][cube-solver-13][DEBUG] Solving cube (l0 = filter([6]), l1 = summarise([5]), l2 = filter([6]))
[     5.522][cube-solver-13][DEBUG] Solving cube (l0 = filter([12]), l1 = summarise([6]), l2 = anti_join())
[     5.540][cube-solver-13][DEBUG] Solving cube (l0 = filter([14]), l1 = summarise([6]), l2 = left_join())
[     5.556][cube-solver-13][DEBUG] Solving cube (l0 = filter([16]), l1 = summarise([6]), l2 = union())
[     5.573][cube-solver-13][DEBUG] Solving cube (l0 = filter([16]), l1 = summarise([6]), l2 = intersect())
[     5.589][cube-solver-13][DEBUG] Solving cube (l0 = filter([18]), l1 = summarise([7]), l2 = semi_join())
[     5.608][cube-solver-13][DEBUG] Solving cube (l0 = filter([20]), l1 = summarise([7]), l2 = cross_join())
[     5.637][cube-solver-13][DEBUG] Solving cube (l0 = filter([20]), l1 = summarise([8]), l2 = mutate())
[     5.661][cube-solver-13][DEBUG] Solving cube (l0 = filter([20]), l1 = summarise([8]), l2 = inner_join())
[     5.678][cube-solver-13][DEBUG] Solving cube (l0 = filter([20]), l1 = filter([20]), l2 = summarise([9]))
[     5.701][cube-solver-13][DEBUG] Solving cube (l0 = filter([21]), l1 = filter([21]), l2 = mutate())
[     5.721][cube-solver-13][DEBUG] Solving cube (l0 = filter([22]), l1 = anti_join(), l2 = summarise([10]))
[     5.741][cube-solver-13][DEBUG] Solving cube (l0 = filter([23]), l1 = anti_join(), l2 = mutate())
[     5.755][cube-solver-13][DEBUG] Solving cube (l0 = filter([23]), l1 = left_join(), l2 = summarise([10]))
[     5.774][cube-solver-13][DEBUG] Solving cube (l0 = filter([23]), l1 = left_join(), l2 = mutate())
[     5.788][cube-solver-13][DEBUG] Solving cube (l0 = filter([23]), l1 = union(), l2 = summarise([12]))
[     5.808][cube-solver-13][DEBUG] Solving cube (l0 = filter([23]), l1 = union(), l2 = mutate())
[     5.822][cube-solver-13][DEBUG] Solving cube (l0 = filter([23]), l1 = intersect(), l2 = summarise([12]))
[     5.842][cube-solver-13][DEBUG] Solving cube (l0 = filter([23]), l1 = intersect(), l2 = mutate())
[     5.857][cube-solver-13][DEBUG] Solving cube (l0 = filter([23]), l1 = semi_join(), l2 = summarise([13]))
[     5.876][cube-solver-13][DEBUG] Solving cube (l0 = filter([23]), l1 = semi_join(), l2 = mutate())
[     5.891][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = cross_join(), l2 = summarise([14]))
[     5.913][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = cross_join(), l2 = mutate())
[     5.928][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = natural_join())
[     5.944][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = natural_join3([2]))
[     5.972][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = natural_join4())
[     5.991][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = summarise([14]))
[     6.011][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = filter([24]))
[     6.032][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = anti_join())
[     6.047][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = left_join())
[     6.062][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = union())
[     6.077][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = intersect())
[     6.093][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = semi_join())
[     6.107][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = cross_join())
[     6.122][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = mutate())
[     6.137][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = inner_join())
[     6.152][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = inner_join(), l2 = summarise([14]))
[     6.175][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = inner_join(), l2 = mutate())
[     6.190][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([14]), l2 = filter([24]))
[     6.211][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([24]), l2 = summarise([14]))
[     6.215][cube-solver-9][DEBUG] Found solution with cube (l0 = natural_join3([1]), l1 = filter([1]), l2 = summarise([4]))
[     6.217][MainProcess][INFO] Statistics:
[     6.217][MainProcess][INFO] 	Generated cubes: 91
[     6.217][MainProcess][INFO] 	Attempted programs: 16
[     6.217][MainProcess][INFO] 		Rejected: 13
[     6.217][MainProcess][INFO] 		Failed: 2
[     6.217][MainProcess][INFO] 	Blacklist clauses: 40
[     6.217][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     6.218][MainProcess][DEBUG] 	0: Counter({'natural_join3': 267})
[     6.218][MainProcess][DEBUG] 	1: Counter({'filter': 152, 'mutate': 110, 'summarise': 5})
[     6.218][MainProcess][DEBUG] 	2: Counter({'filter': 115, 'mutate': 91, 'summarise': 61})
[     6.219][MainProcess][INFO] Solution found: summarise(filter(natural_join3(@param0, @param2, @param1), color == 'green' & S_key != 'S4'), n = n(), P_id)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/19-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/19-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/19-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/32.out", col_types = cols(P_id = col_character(),n = col_integer()))

df4 <- inner_join(input1, input3) %>% inner_join(input2)
df5 <- df4 %>% filter(color == 'green' & S_key != 'S4')
df6 <- df5 %>% group_by(P_id) %>% summarise(n = n()) %>% ungroup()
out <- df6 %>% select(P_id, n) %>% arrange(P_id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `P_id`,
       `n`
FROM
  (SELECT `P_id`,
          COUNT() AS `n`
   FROM
     (SELECT *
      FROM
        (SELECT `LHS`.`S_key` AS `S_key`,
                `LHS`.`P_id` AS `P_id`,
                `LHS`.`S_name` AS `S_name`,
                `RHS`.`color` AS `color`
         FROM
           (SELECT `LHS`.`S_key` AS `S_key`,
                   `LHS`.`P_id` AS `P_id`,
                   `RHS`.`S_name` AS `S_name`
            FROM `input1` AS `LHS`
            INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`)) AS `LHS`
         INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
      WHERE (`color` = 'green'
             AND `S_key` != 'S4'))
   GROUP BY P_id)
ORDER BY P_id
