[     1.967][MainProcess][INFO] Parsing specification...
[     1.978][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.978][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.978][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.980][MainProcess][DEBUG] Reading input files...
[     2.005][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/2-1.txt: ['string', 'string']
[     2.011][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/2-2.txt: ['string', 'string']
[     2.016][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/2-3.txt: ['string', 'string']
[     2.023][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/2-4.txt: ['string', 'string', 'int64']
[     2.027][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/2.out: ['int64']
[     2.064][MainProcess][DEBUG] Generating DSL...
[     2.343][MainProcess][INFO] Creating 16 processes
[     2.406][MainProcess][DEBUG] Increasing generator loc to 3
[     2.720][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     2.722][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     2.728][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     2.736][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     2.739][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     2.749][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     2.757][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     2.758][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     2.759][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     2.761][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     2.766][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.767][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     2.771][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.777][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     2.778][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.830][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[    19.090][cube-solver-2][WARNING] There is no solution for current loc (2).
[    19.091][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[    19.141][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[    19.143][cube-solver-3][WARNING] There is no solution for current loc (2).
[    19.144][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[    19.150][cube-solver-1][WARNING] There is no solution for current loc (2).
[    19.150][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[    19.178][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[    19.191][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[    19.692][cube-solver-0][WARNING] There is no solution for current loc (2).
[    19.692][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[    19.722][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[    25.794][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[    25.857][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[    25.891][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[    25.923][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[    25.963][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[    25.970][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4([2]), l1 = summarise(), l2 = filter())
[    25.976][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[    26.036][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[    26.051][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[    26.061][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4([2]))
[    26.091][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[    26.100][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[    26.104][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[    26.119][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4([3]), l1 = filter(), l2 = mutate())
[    26.127][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4([4]), l1 = mutate(), l2 = filter())
[    26.140][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[    26.184][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[    26.191][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([1]), l2 = filter())
[    26.208][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = intersect())
[    26.235][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = union())
[    26.245][cube-solver-4][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = cross_join())
[    26.264][cube-solver-9][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = inner_join())
[    26.267][cube-solver-11][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = mutate())
[    26.274][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = semi_join())
[    26.318][cube-solver-4][DEBUG] Solving cube (l0 = summarise([2]), l1 = anti_join(), l2 = filter())
[    26.323][cube-solver-9][DEBUG] Solving cube (l0 = summarise([3]), l1 = union(), l2 = filter())
[    26.341][cube-solver-8][DEBUG] Solving cube (l0 = summarise([3]), l1 = intersect(), l2 = filter())
[    26.349][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = left_join(), l2 = filter())
[    26.354][cube-solver-11][DEBUG] Solving cube (l0 = summarise([3]), l1 = semi_join(), l2 = filter())
[    26.362][cube-solver-10][DEBUG] Solving cube (l0 = summarise([3]), l1 = cross_join(), l2 = filter())
[    26.377][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[    26.379][cube-solver-9][DEBUG] Solving cube (l0 = summarise([4]), l1 = mutate(), l2 = filter())
[    26.384][cube-solver-4][DEBUG] Solving cube (l0 = summarise([5]), l1 = inner_join(), l2 = filter())
[    26.398][cube-solver-8][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([5]))
[    26.433][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[    26.435][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([6]))
[    26.440][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4([8]), l2 = summarise([6]))
[    26.441][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4([8]), l2 = mutate())
[    26.445][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[    26.457][cube-solver-8][DEBUG] Solving cube (l0 = filter(), l1 = summarise([7]), l2 = natural_join())
[    26.495][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([8]), l2 = natural_join3())
[    26.507][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = summarise([9]), l2 = natural_join4([8]))
[    26.510][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([9]), l2 = summarise([9]))
[    26.513][cube-solver-8][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([10]), l2 = filter([2]))
[    26.560][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = left_join())
[    26.560][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = anti_join())
[    26.564][cube-solver-9][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = union())
[    26.566][cube-solver-8][DEBUG] Solving cube (l0 = filter([6]), l1 = summarise([12]), l2 = intersect())
[    26.588][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = summarise([12]), l2 = semi_join())
[    26.623][cube-solver-6][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([14]), l2 = cross_join())
[    26.628][cube-solver-9][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([14]), l2 = mutate())
[    26.630][cube-solver-8][DEBUG] Solving cube (l0 = filter([10]), l1 = filter([10]), l2 = summarise([14]))
[    26.651][cube-solver-11][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([14]), l2 = inner_join())
[    26.652][cube-solver-7][DEBUG] Solving cube (l0 = filter([11]), l1 = filter([11]), l2 = mutate())
[    26.688][cube-solver-8][DEBUG] Solving cube (l0 = filter([12]), l1 = anti_join(), l2 = mutate())
[    26.688][cube-solver-9][DEBUG] Solving cube (l0 = filter([11]), l1 = anti_join(), l2 = summarise([16]))
[    26.709][cube-solver-6][DEBUG] Solving cube (l0 = filter([13]), l1 = left_join(), l2 = summarise([16]))
[    26.720][cube-solver-7][DEBUG] Solving cube (l0 = filter([13]), l1 = left_join(), l2 = mutate())
[    26.731][cube-solver-11][DEBUG] Solving cube (l0 = filter([13]), l1 = union(), l2 = summarise([16]))
[    26.749][cube-solver-8][DEBUG] Solving cube (l0 = filter([14]), l1 = union(), l2 = mutate())
[    26.762][cube-solver-9][DEBUG] Solving cube (l0 = filter([14]), l1 = intersect(), l2 = summarise([16]))
[    26.773][cube-solver-6][DEBUG] Solving cube (l0 = filter([15]), l1 = intersect(), l2 = mutate())
[    26.788][cube-solver-7][DEBUG] Solving cube (l0 = filter([15]), l1 = semi_join(), l2 = summarise([16]))
[    26.798][cube-solver-11][DEBUG] Solving cube (l0 = filter([15]), l1 = semi_join(), l2 = mutate())
[    26.802][cube-solver-8][DEBUG] Solving cube (l0 = filter([15]), l1 = cross_join(), l2 = summarise([17]))
[    26.830][cube-solver-6][DEBUG] Solving cube (l0 = filter([16]), l1 = mutate(), l2 = natural_join())
[    26.832][cube-solver-9][DEBUG] Solving cube (l0 = filter([16]), l1 = cross_join(), l2 = mutate())
[    26.862][cube-solver-7][DEBUG] Solving cube (l0 = filter([18]), l1 = mutate(), l2 = natural_join3())
[    26.863][cube-solver-11][DEBUG] Solving cube (l0 = filter([18]), l1 = mutate(), l2 = natural_join4([10]))
[    26.871][cube-solver-8][DEBUG] Solving cube (l0 = filter([18]), l1 = mutate(), l2 = summarise([18]))
[    26.891][cube-solver-9][DEBUG] Solving cube (l0 = filter([18]), l1 = mutate(), l2 = filter([18]))
[    26.892][cube-solver-6][DEBUG] Solving cube (l0 = filter([18]), l1 = mutate(), l2 = anti_join())
[    26.928][cube-solver-7][DEBUG] Solving cube (l0 = filter([18]), l1 = mutate(), l2 = left_join())
[    26.932][cube-solver-8][DEBUG] Solving cube (l0 = filter([18]), l1 = mutate(), l2 = union())
[    26.954][cube-solver-6][DEBUG] Solving cube (l0 = filter([19]), l1 = mutate(), l2 = intersect())
[    26.955][cube-solver-9][DEBUG] Solving cube (l0 = filter([19]), l1 = mutate(), l2 = semi_join())
[    26.992][cube-solver-7][DEBUG] Solving cube (l0 = filter([22]), l1 = mutate(), l2 = cross_join())
[    26.995][cube-solver-8][DEBUG] Solving cube (l0 = filter([22]), l1 = mutate(), l2 = mutate())
[    27.015][cube-solver-6][DEBUG] Solving cube (l0 = filter([23]), l1 = mutate([1]), l2 = inner_join())
[    27.019][cube-solver-9][DEBUG] Solving cube (l0 = filter([24]), l1 = inner_join(), l2 = summarise([23]))
[    27.048][cube-solver-8][DEBUG] Solving cube (l0 = filter([26]), l1 = inner_join(), l2 = mutate([1]))
[    27.063][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([23]), l2 = filter([27]))
[    27.086][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([27]), l2 = summarise([24]))
[    27.091][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([27]), l2 = mutate([1]))
[    27.102][cube-solver-8][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate([1]), l2 = filter([27]))
[    27.146][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([26]), l2 = filter([29]))
[    27.154][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = filter([29]), l2 = summarise([26]))
[    27.156][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = filter([29]), l2 = mutate([1]))
[    27.169][cube-solver-8][DEBUG] Solving cube (l0 = left_join(), l1 = mutate([1]), l2 = filter([29]))
[    27.216][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = summarise([29]), l2 = filter([30]))
[    27.222][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter([30]), l2 = summarise([29]))
[    27.225][cube-solver-8][DEBUG] Solving cube (l0 = union(), l1 = mutate([1]), l2 = filter([30]))
[    27.229][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = filter([30]), l2 = mutate([1]))
[    27.287][cube-solver-8][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([31]), l2 = filter([30]))
[    27.296][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = filter([30]), l2 = mutate([1]))
[    27.297][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = filter([30]), l2 = summarise([31]))
[    27.302][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = mutate([1]), l2 = filter([30]))
[    27.356][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([32]), l2 = filter([32]))
[    27.358][cube-solver-8][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([32]), l2 = summarise([32]))
[    27.363][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([32]), l2 = mutate([1]))
[    27.371][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate([1]), l2 = filter([32]))
[    27.429][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([35]), l2 = filter([32]))
[    27.430][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([32]), l2 = summarise([35]))
[    27.431][cube-solver-8][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([32]), l2 = mutate([1]))
[    27.440][cube-solver-6][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate([1]), l2 = filter([32]))
[    27.502][cube-solver-9][DEBUG] Solving cube (l0 = mutate([1]), l1 = natural_join(), l2 = filter([32]))
[    27.505][cube-solver-7][DEBUG] Solving cube (l0 = mutate([1]), l1 = natural_join3(), l2 = filter([32]))
[    27.506][cube-solver-8][DEBUG] Solving cube (l0 = mutate([1]), l1 = summarise([38]), l2 = filter([32]))
[    27.508][cube-solver-6][DEBUG] Solving cube (l0 = mutate([1]), l1 = natural_join4([14]), l2 = filter([32]))
[    27.564][cube-solver-9][DEBUG] Solving cube (l0 = mutate([2]), l1 = filter([32]), l2 = natural_join())
[    27.578][cube-solver-8][DEBUG] Solving cube (l0 = mutate([2]), l1 = filter([32]), l2 = natural_join3())
[    27.623][cube-solver-7][DEBUG] Solving cube (l0 = mutate([2]), l1 = filter([32]), l2 = natural_join4([14]))
[    27.631][cube-solver-9][DEBUG] Solving cube (l0 = mutate([3]), l1 = filter([32]), l2 = summarise([41]))
[    27.701][cube-solver-14][DEBUG] Found solution with cube (l0 = natural_join4([3]), l1 = filter(), l2 = mutate())
[    27.703][MainProcess][INFO] Statistics:
[    27.703][MainProcess][INFO] 	Generated cubes: 122
[    27.703][MainProcess][INFO] 	Attempted programs: 16
[    27.703][MainProcess][INFO] 		Rejected: 6
[    27.703][MainProcess][INFO] 		Failed: 9
[    27.704][MainProcess][INFO] 	Blacklist clauses: 91
[    27.704][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    27.704][MainProcess][DEBUG] 	0: Counter({'natural_join4': 270})
[    27.704][cube-solver-9][DEBUG] Solving cube (l0 = mutate([3]), l1 = filter([32]), l2 = filter([32]))
[    27.705][MainProcess][DEBUG] 	1: Counter({'filter': 172, 'mutate': 98})
[    27.705][MainProcess][DEBUG] 	2: Counter({'filter': 98, 'mutate': 88, 'summarise': 84})
[    27.705][MainProcess][INFO] Solution found: mutate(filter(natural_join4(@param0, @param1, @param2, @param3), F_name == 'faculty1' | major == 'History'), maxage = max(age))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/2-1.txt", col_types = cols(C_name = col_character(),F_key = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/2-2.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/2-3.txt", col_types = cols(F_key = col_character(),F_name = col_character()))
input3 <- copy_to(con, input3)
input4 <- read_csv("tests-examples/55-tests/tables/2-4.txt", col_types = cols(S_key = col_character(),major = col_character(),age = col_integer()))
input4 <- copy_to(con, input4)
expected_output <- read_csv("tests-examples/55-tests/tables/2.out", col_types = cols(maxage = col_integer()))

df5 <- inner_join(input1, input2) %>% inner_join(input3) %>% inner_join(input4)
df6 <- df5 %>% filter(F_name == 'faculty1' | major == 'History')
df7 <- df6 %>% mutate(maxage = max(age))
out <- df7 %>% select(maxage) %>% distinct() %>% arrange(maxage)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT MAX(`age`) OVER () AS `maxage`
FROM
  (SELECT `LHS`.`C_name` AS `C_name`,
          `LHS`.`F_key` AS `F_key`,
          `LHS`.`S_key` AS `S_key`,
          `LHS`.`F_name` AS `F_name`,
          `RHS`.`major` AS `major`,
          `RHS`.`age` AS `age`
   FROM
     (SELECT `LHS`.`C_name` AS `C_name`,
             `LHS`.`F_key` AS `F_key`,
             `LHS`.`S_key` AS `S_key`,
             `RHS`.`F_name` AS `F_name`
      FROM
        (SELECT `LHS`.`C_name` AS `C_name`,
                `LHS`.`F_key` AS `F_key`,
                `RHS`.`S_key` AS `S_key`
         FROM `input1` AS `LHS`
         INNER JOIN `input2` AS `RHS` ON (`LHS`.`C_name` = `RHS`.`C_name`)) AS `LHS`
      INNER JOIN `input3` AS `RHS` ON (`LHS`.`F_key` = `RHS`.`F_key`)) AS `LHS`
   INNER JOIN `input4` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
WHERE (`F_name` = 'faculty1'
       OR `major` = 'History')
ORDER BY maxage
