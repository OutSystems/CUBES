[     1.583][MainProcess][INFO] Parsing specification...
[     1.588][MainProcess][DEBUG] Reading input files...
[     1.595][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/9-1.txt: ['string', 'string', 'string']
[     1.600][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/9-2.txt: ['string', 'string']
[     1.605][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/9.out: ['string', 'int64']
[     1.633][MainProcess][DEBUG] Generating DSL...
[     1.660][MainProcess][INFO] Creating 16 processes
[     1.725][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.725][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.725][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.725][MainProcess][DEBUG] Increasing generator loc to 3
[     1.725][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.726][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.733][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.733][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.740][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.746][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.747][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.748][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.753][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.755][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.776][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.781][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.786][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.409][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.410][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.413][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.467][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.467][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.469][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.549][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.549][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.551][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.623][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.632][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.641][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.641][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.646][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.650][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.654][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.663][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.668][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([1]), l2 = summarise())
[     2.671][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = summarise())
[     2.674][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([1]))
[     2.677][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = filter([1]))
[     2.678][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = anti_join())
[     2.682][cube-solver-11][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = left_join())
[     2.683][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = union())
[     2.684][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([1]))
[     2.688][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.689][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]))
[     2.692][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.699][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([2]), l2 = filter([1]))
[     2.917][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([2]), l2 = mutate())
[     2.927][cube-solver-14][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([2]), l2 = semi_join())
[     3.003][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([2]), l2 = summarise([7]))
[     3.017][cube-solver-13][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([2]), l2 = cross_join())
[     3.024][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([2]), l2 = summarise([7]))
[     3.384][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([2]))
[     3.393][cube-solver-15][DEBUG] Solving cube (l0 = summarise([10]), l1 = filter([2]), l2 = mutate())
[     3.407][cube-solver-15][DEBUG] Solving cube (l0 = summarise([10]), l1 = filter([2]), l2 = inner_join())
[     3.557][cube-solver-0][DEBUG] Solving cube (l0 = summarise([11]), l1 = natural_join3(), l2 = filter([2]))
[     3.801][cube-solver-2][DEBUG] Solving cube (l0 = summarise([11]), l1 = natural_join(), l2 = filter([2]))
[     3.809][cube-solver-3][DEBUG] Solving cube (l0 = summarise([11]), l1 = filter([2]), l2 = intersect())
[     3.897][cube-solver-1][DEBUG] Solving cube (l0 = summarise([11]), l1 = natural_join4(), l2 = filter([2]))
[     3.915][cube-solver-1][DEBUG] Solving cube (l0 = summarise([11]), l1 = anti_join(), l2 = filter([2]))
[     4.044][cube-solver-7][DEBUG] Solving cube (l0 = summarise([11]), l1 = left_join(), l2 = filter([2]))
[     4.173][cube-solver-6][DEBUG] Solving cube (l0 = summarise([11]), l1 = union(), l2 = filter([2]))
[     4.600][cube-solver-4][DEBUG] Solving cube (l0 = summarise([11]), l1 = intersect(), l2 = filter([2]))
[     5.173][cube-solver-14][DEBUG] Solving cube (l0 = summarise([11]), l1 = semi_join(), l2 = filter([2]))
[     6.355][cube-solver-14][DEBUG] Solving cube (l0 = summarise([11]), l1 = cross_join(), l2 = filter([2]))
[     6.622][cube-solver-5][DEBUG] Solving cube (l0 = summarise([11]), l1 = mutate(), l2 = filter([2]))
[     6.637][cube-solver-5][DEBUG] Solving cube (l0 = summarise([11]), l1 = inner_join(), l2 = filter([2]))
[     6.868][cube-solver-2][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join(), l2 = summarise([11]))
[     7.084][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join(), l2 = mutate())
[     7.493][cube-solver-3][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join3(), l2 = summarise([11]))
[     7.757][cube-solver-11][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join3(), l2 = mutate())
[     7.905][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join4(), l2 = summarise([11]))
[     7.916][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join4(), l2 = mutate())
[     7.919][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([11]), l2 = natural_join())
[     8.072][cube-solver-8][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([11]), l2 = natural_join3())
[     8.285][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([11]), l2 = natural_join4())
[     8.294][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([11]), l2 = summarise([11]))
[     8.306][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([11]), l2 = filter([2]))
[     8.316][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([11]), l2 = anti_join())
[    10.065][cube-solver-2][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([11]), l2 = left_join())
[    10.103][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([11]), l2 = union())
[    10.166][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([11]), l2 = intersect())
[    11.486][cube-solver-11][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([11]), l2 = semi_join())
[    12.311][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([11]), l2 = cross_join())
[    12.440][cube-solver-1][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([11]), l2 = mutate())
[    12.450][cube-solver-1][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([11]), l2 = inner_join())
[    13.382][cube-solver-11][DEBUG] Solving cube (l0 = filter([2]), l1 = filter([2]), l2 = summarise([11]))
[    13.396][cube-solver-11][DEBUG] Solving cube (l0 = filter([2]), l1 = filter([2]), l2 = mutate())
[    13.400][cube-solver-11][DEBUG] Solving cube (l0 = filter([2]), l1 = anti_join(), l2 = summarise([11]))
[    14.282][cube-solver-2][DEBUG] Solving cube (l0 = filter([2]), l1 = anti_join(), l2 = mutate())
[    14.323][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = left_join(), l2 = summarise([11]))
[    15.997][cube-solver-2][DEBUG] Solving cube (l0 = filter([2]), l1 = left_join(), l2 = mutate())
[    16.937][cube-solver-3][DEBUG] Solving cube (l0 = filter([2]), l1 = union(), l2 = summarise([11]))
[    17.333][cube-solver-2][DEBUG] Solving cube (l0 = filter([2]), l1 = union(), l2 = mutate())
[    17.570][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = intersect(), l2 = summarise([11]))
[    17.679][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = intersect(), l2 = mutate())
[    18.068][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = semi_join(), l2 = summarise([11]))
[    18.529][cube-solver-2][DEBUG] Solving cube (l0 = filter([2]), l1 = semi_join(), l2 = mutate())
[    18.770][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = cross_join(), l2 = summarise([11]))
[    19.145][cube-solver-2][DEBUG] Solving cube (l0 = filter([2]), l1 = cross_join(), l2 = mutate())
[    19.562][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join())
[    19.979][cube-solver-3][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join3())
[    20.964][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join4())
[    21.593][cube-solver-11][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = summarise([11]))
[    21.602][cube-solver-11][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = filter([2]))
[    21.607][cube-solver-11][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = anti_join())
[    21.821][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = left_join())
[    24.187][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = union())
[    24.189][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = intersect())
[    24.400][cube-solver-11][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = semi_join())
[    24.909][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = cross_join())
[    25.327][cube-solver-11][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = mutate())
[    25.331][cube-solver-11][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = inner_join())
[    26.515][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = inner_join(), l2 = summarise([11]))
[    31.047][cube-solver-2][DEBUG] Solving cube (l0 = filter([2]), l1 = inner_join(), l2 = mutate())
[    31.071][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([11]), l2 = filter([2]))
[    37.433][cube-solver-3][DEBUG] Solving cube (l0 = anti_join([18]), l1 = filter([2]), l2 = summarise([11]))
[    38.386][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([18]), l1 = filter([2]), l2 = mutate())
[    39.574][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([18]), l1 = mutate(), l2 = filter([2]))
[    40.475][cube-solver-3][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([11]), l2 = filter([2]))
[    40.879][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = summarise([11]))
[    42.217][cube-solver-3][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = mutate())
[    43.395][cube-solver-3][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([2]))
[    43.944][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = summarise([11]), l2 = filter([2]))
[    44.658][cube-solver-3][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = summarise([11]))
[    45.605][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = mutate())
[    46.850][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([2]))
[    47.760][cube-solver-3][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([11]), l2 = filter([2]))
[    48.071][cube-solver-0][DEBUG] Solving cube (l0 = intersect([3]), l1 = filter([2]), l2 = summarise([11]))
[    50.231][cube-solver-0][DEBUG] Solving cube (l0 = intersect([8]), l1 = filter([2]), l2 = mutate())
[    50.245][cube-solver-0][DEBUG] Solving cube (l0 = intersect([8]), l1 = mutate(), l2 = filter([2]))
[    50.258][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([11]), l2 = filter([2]))
[    50.692][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = summarise([11]))
[    51.030][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = mutate())
[    51.249][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([2]))
[    51.495][cube-solver-3][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([11]), l2 = filter([2]))
[    51.651][cube-solver-0][DEBUG] Solving cube (l0 = cross_join([4]), l1 = filter([2]), l2 = summarise([11]))
[    51.906][cube-solver-12][DEBUG] Solving cube (l0 = cross_join([20]), l1 = filter([2]), l2 = mutate())
[    58.285][cube-solver-10][DEBUG] Solving cube (l0 = cross_join([257]), l1 = mutate(), l2 = filter([2]))
[    62.326][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([2]))
[    62.339][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter([2]))
[    62.394][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([2]))
[    62.399][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([11]), l2 = filter([2]))
[    62.408][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join())
[    62.978][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join3())
[    64.745][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join4())
[    64.792][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = summarise([11]))
[    64.801][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = filter([2]))
[    64.806][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = anti_join([18]))
[    68.094][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = left_join())
[    69.714][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = union())
[    70.717][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = intersect([8]))
[    71.662][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = semi_join())
[    72.239][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = cross_join([386]))
[    72.611][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = mutate())
[    72.615][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = inner_join())
[    77.540][cube-solver-8][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join([18]), l2 = filter([2]))
[    80.244][cube-solver-8][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([2]))
[    80.513][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([2]))
[    82.783][cube-solver-8][DEBUG] Solving cube (l0 = mutate(), l1 = intersect([8]), l2 = filter([2]))
[    82.805][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([2]))
[    83.480][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join([386]), l2 = filter([2]))
[    83.570][cube-solver-8][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([2]))
[    83.577][cube-solver-8][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([2]))
[    90.135][cube-solver-11][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([11]), l2 = filter([2]))
[   107.442][cube-solver-6][DEBUG] Solving cube (l0 = inner_join([118]), l1 = filter([2]), l2 = summarise([11]))
[   107.586][cube-solver-10][DEBUG] Solving cube (l0 = inner_join([156]), l1 = filter([2]), l2 = mutate())
[   108.155][cube-solver-2][DEBUG] Solving cube (l0 = inner_join([186]), l1 = mutate(), l2 = filter([2]))
[   122.282][MainProcess][DEBUG] Increasing generator loc to 4
[   122.283][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[   124.092][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([11]), l2 = natural_join(), l3 = filter([2]))
[   134.562][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[   134.602][cube-solver-10][DEBUG] Initialising process for 4 lines of code.
[   136.199][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([11]), l2 = natural_join3(), l3 = filter([2]))
[   136.203][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([11]), l2 = natural_join4(), l3 = filter([2]))
[   136.221][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([11]), l2 = summarise([11]), l3 = filter([2]))
[   136.235][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([11]), l2 = filter([2]), l3 = natural_join())
[   141.091][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[   142.742][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([11]), l2 = filter([2]), l3 = natural_join3())
[   143.745][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[   143.985][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[   145.339][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([11]), l2 = filter([2]), l3 = natural_join4())
[   145.363][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([11]), l2 = filter([2]), l3 = filter([2]))
[   145.536][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([11]), l2 = filter([2]), l3 = summarise([11]))
[   145.659][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[   146.314][cube-solver-8][DEBUG] Initialising process for 4 lines of code.
[   147.334][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([11]), l2 = filter([2]), l3 = anti_join([18]))
[   147.904][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([11]), l2 = filter([2]), l3 = left_join())
[   149.052][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([11]), l2 = filter([2]), l3 = union())
[   154.785][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([11]), l2 = filter([2]), l3 = intersect([8]))
[   159.188][cube-solver-5][DEBUG] Found solution with cube (l0 = natural_join(), l1 = summarise([11]), l2 = filter([2]), l3 = anti_join([18]))
[   159.195][MainProcess][INFO] Statistics:
[   159.196][MainProcess][INFO] 	Generated cubes: 155
[   159.196][MainProcess][INFO] 	Attempted programs: 47209
[   159.196][MainProcess][INFO] 		Rejected: 4105
[   159.196][MainProcess][INFO] 		Failed: 43103
[   159.196][MainProcess][INFO] 	Blacklist clauses: 646
[   159.196][MainProcess][DEBUG] Printing statistics for good programs of size 3
[   159.260][MainProcess][DEBUG] 	0: Counter({'filter': 48440, 'summarise': 29041, 'mutate': 25264, 'inner_join': 13584, 'natural_join': 832, 'anti_join': 832, 'left_join': 832, 'union': 832, 'semi_join': 248})
[   159.323][MainProcess][DEBUG] 	1: Counter({'filter': 40186, 'inner_join': 24696, 'summarise': 23281, 'mutate': 20328, 'natural_join3': 6176, 'union': 1600, 'natural_join': 1184, 'left_join': 1184, 'anti_join': 944, 'semi_join': 352})
[   159.384][MainProcess][DEBUG] 	2: Counter({'filter': 31296, 'inner_join': 28373, 'natural_join3': 19904, 'summarise': 13344, 'natural_join4': 11520, 'mutate': 8664, 'union': 2416, 'natural_join': 1488, 'left_join': 1488, 'anti_join': 960, 'semi_join': 480})
[   159.384][MainProcess][DEBUG] Printing statistics for good programs of size 4
[   159.391][MainProcess][DEBUG] 	0: Counter({'natural_join': 16767})
[   159.398][MainProcess][DEBUG] 	1: Counter({'summarise': 16768})
[   159.405][MainProcess][DEBUG] 	2: Counter({'filter': 9170, 'natural_join': 4623, 'natural_join3': 2976})
[   159.412][MainProcess][DEBUG] 	3: Counter({'filter': 7919, 'natural_join': 2952, 'natural_join3': 2063, 'left_join': 1388, 'union': 1386, 'anti_join': 805, 'summarise': 256})
[   159.412][MainProcess][INFO] Solution found: anti_join(summarise(natural_join(@param1, @param0), n = n(), F_name), filter(natural_join(@param1, @param0), Room != 'R128'), )

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/9-1.txt", col_types = cols(ID_class = col_character(),ID_key = col_character(),Room = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/9-2.txt", col_types = cols(ID_key = col_character(),F_name = col_character()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/55-tests/tables/9.out", col_types = cols(F_name = col_character(),n = col_integer()))

df3 <- inner_join(input2, input1)
df4 <- df3 %>% group_by(F_name) %>% summarise(n = n()) %>% ungroup()
df5 <- df3 %>% filter(Room != 'R128')
df6 <- anti_join(df4, df5, by=c())
out <- df6 %>% select(F_name, n) %>% arrange(F_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `F_name`,
       `n`
FROM
  (SELECT *
   FROM
     (SELECT `F_name`,
             COUNT() AS `n`
      FROM
        (SELECT `LHS`.`ID_key` AS `ID_key`,
                `LHS`.`F_name` AS `F_name`,
                `RHS`.`ID_class` AS `ID_class`,
                `RHS`.`Room` AS `Room`
         FROM `input2` AS `LHS`
         INNER JOIN `input1` AS `RHS` ON (`LHS`.`ID_key` = `RHS`.`ID_key`))
      GROUP BY `F_name`) AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM
             (SELECT `LHS`.`ID_key` AS `ID_key`,
                     `LHS`.`F_name` AS `F_name`,
                     `RHS`.`ID_class` AS `ID_class`,
                     `RHS`.`Room` AS `Room`
              FROM `input2` AS `LHS`
              INNER JOIN `input1` AS `RHS` ON (`LHS`.`ID_key` = `RHS`.`ID_key`))
           WHERE (`Room` != 'R128')) AS RHS
        WHERE (LHS.F_name = RHS.F_name) ))
ORDER BY F_name
