[     1.592][MainProcess][INFO] Parsing specification...
[     1.606][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.606][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.606][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.607][MainProcess][DEBUG] Reading input files...
[     1.615][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-1.txt: ['string', 'string']
[     1.621][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-2.txt: ['string', 'string']
[     1.625][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-3.txt: ['string', 'string']
[     1.640][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/33.out: ['string']
[     1.672][MainProcess][DEBUG] Generating DSL...
[     1.700][MainProcess][INFO] Creating 16 processes
[     1.768][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.768][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.768][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.769][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.769][MainProcess][DEBUG] Increasing generator loc to 3
[     1.773][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.775][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.778][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.782][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.786][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.786][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.791][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.798][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.802][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.807][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.830][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.846][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.386][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.387][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.389][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.471][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.472][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.473][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.565][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.566][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.568][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.734][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.735][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.737][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.953][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.957][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.958][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.963][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.964][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.965][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.968][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.969][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.971][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.977][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.979][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.981][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.983][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.989][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     2.989][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.991][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = intersect())
[     2.994][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = semi_join())
[     2.995][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = cross_join())
[     2.998][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = mutate())
[     2.999][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise([1]))
[     3.003][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = inner_join())
[     3.004][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = anti_join(), l2 = filter())
[     3.005][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = left_join(), l2 = filter())
[     3.011][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = intersect(), l2 = filter())
[     3.011][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = union(), l2 = filter())
[     3.012][cube-solver-9][DEBUG] Solving cube (l0 = summarise([2]), l1 = semi_join(), l2 = filter())
[     3.013][cube-solver-13][DEBUG] Solving cube (l0 = summarise([2]), l1 = cross_join(), l2 = filter())
[     3.017][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([2]), l2 = filter())
[     3.018][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = mutate(), l2 = filter())
[     3.020][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = inner_join(), l2 = filter())
[     3.020][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([2]))
[     3.023][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     3.026][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([2]))
[     3.028][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     3.028][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([2]))
[     3.030][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     3.031][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join())
[     3.034][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join3())
[     3.036][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join4())
[     3.036][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = summarise([2]))
[     3.039][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = filter())
[     3.043][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = anti_join())
[     3.043][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = left_join())
[     3.045][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = union())
[     3.046][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = intersect())
[     3.048][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = semi_join())
[     3.052][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = cross_join())
[     3.054][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = mutate())
[     3.054][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = inner_join())
[     3.056][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise([4]))
[     3.057][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     3.062][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise([4]))
[     3.063][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     3.063][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise([4]))
[     3.066][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     3.068][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise([4]))
[     3.068][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise([5]))
[     3.069][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     3.071][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise([5]))
[     3.072][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     3.073][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise([5]))
[     3.075][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     3.078][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise([5]))
[     3.078][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     3.081][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join4())
[     3.081][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     3.081][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3())
[     3.083][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise([5]))
[     3.085][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = filter())
[     3.087][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = anti_join())
[     3.088][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = left_join())
[     3.089][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = union())
[     3.092][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = intersect())
[     3.092][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = semi_join())
[     3.092][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[     3.093][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = cross_join())
[     3.095][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = inner_join())
[     3.096][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = summarise([5]))
[     3.096][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = mutate())
[     3.097][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([5]), l2 = filter())
[     3.100][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = summarise([5]))
[     3.100][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = mutate())
[     3.102][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter())
[     3.103][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([5]), l2 = filter())
[     3.104][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = summarise([5]))
[     3.107][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = mutate())
[     3.108][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = summarise([6]), l2 = filter())
[     3.109][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter())
[     3.111][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = summarise([6]))
[     3.112][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = mutate())
[     3.113][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter())
[     3.114][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([6]), l2 = filter())
[     3.115][cube-solver-13][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = summarise([6]))
[     3.118][cube-solver-10][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter())
[     3.119][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = mutate())
[     3.119][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([6]), l2 = filter())
[     3.120][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = summarise([6]))
[     3.122][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = mutate())
[     3.125][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter())
[     3.126][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([7]), l2 = filter())
[     3.126][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = mutate())
[     3.127][cube-solver-13][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = summarise([7]))
[     3.128][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter())
[     3.130][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter())
[     3.131][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter())
[     3.131][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([1]), l2 = filter())
[     3.135][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([7]), l2 = filter())
[     3.137][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join())
[     3.138][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join3([1]))
[     3.138][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join4())
[     3.143][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise([7]))
[     3.144][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = filter())
[     3.149][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = anti_join())
[     3.154][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = left_join())
[     3.156][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = union())
[     3.160][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = intersect())
[     3.161][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = semi_join())
[     3.166][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = cross_join())
[     3.167][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = mutate())
[     3.171][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = inner_join())
[     3.172][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter())
[     3.177][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter())
[     3.179][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter())
[     3.182][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter())
[     3.184][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter())
[     3.187][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter())
[     3.190][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter())
[     3.193][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter())
[     3.196][cube-solver-6][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([9]), l2 = filter())
[     3.198][cube-solver-5][DEBUG] Solving cube (l0 = inner_join(), l1 = filter(), l2 = summarise([9]))
[     3.205][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     3.209][cube-solver-6][DEBUG] Solving cube (l0 = inner_join(), l1 = filter(), l2 = mutate())
[     3.209][cube-solver-5][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter())
[     3.212][MainProcess][DEBUG] Increasing generator loc to 4
[     3.215][cube-solver-6][DEBUG] Initialising process for 4 lines of code.
[     3.215][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     3.216][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     3.506][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([4]))
[     3.519][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     3.554][cube-solver-2][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join(), l2 = filter([4]))
[     3.578][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     3.935][cube-solver-1][DEBUG] Solving cube (l0 = summarise([16]), l1 = summarise([16]), l2 = filter([15]))
[     3.973][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     4.014][cube-solver-0][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join4(), l2 = filter([17]))
[     4.031][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     4.149][cube-solver-3][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join3([2]), l2 = filter([19]))
[     5.069][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([20]), l2 = natural_join(), l3 = filter([23]))
[     5.072][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([20]), l2 = natural_join3([2]), l3 = filter([23]))
[     5.198][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([20]), l2 = natural_join4(), l3 = filter([24]))
[     5.222][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([20]), l2 = filter([24]), l3 = summarise([20]))
[     5.251][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([24]), l3 = filter([24]))
[     5.278][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([24]), l3 = anti_join())
[     5.380][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join([2]))
[     5.388][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([24]))
[     5.439][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = left_join())
[     5.862][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join4())
[     5.884][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join3([2]))
[     6.382][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     8.162][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = union())
[    10.604][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[    11.392][cube-solver-0][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join4())
[    11.397][MainProcess][INFO] Statistics:
[    11.398][MainProcess][INFO] 	Generated cubes: 155
[    11.398][MainProcess][INFO] 	Attempted programs: 726
[    11.398][MainProcess][INFO] 		Rejected: 83
[    11.398][MainProcess][INFO] 		Failed: 642
[    11.398][MainProcess][INFO] 	Blacklist clauses: 49
[    11.398][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    11.400][MainProcess][DEBUG] 	0: Counter({'mutate': 2367, 'natural_join3': 785, 'summarise': 659})
[    11.401][MainProcess][DEBUG] 	1: Counter({'natural_join3': 1451, 'natural_join4': 905, 'filter': 670, 'summarise': 465, 'mutate': 320})
[    11.402][MainProcess][DEBUG] 	2: Counter({'filter': 3141, 'natural_join3': 340, 'natural_join4': 330})
[    11.402][MainProcess][DEBUG] Printing statistics for good programs of size 4
[    11.403][MainProcess][DEBUG] 	0: Counter({'natural_join': 1529})
[    11.403][MainProcess][DEBUG] 	1: Counter({'summarise': 1529})
[    11.403][MainProcess][DEBUG] 	2: Counter({'filter': 803, 'natural_join': 518, 'natural_join3': 208})
[    11.404][MainProcess][DEBUG] 	3: Counter({'filter': 726, 'natural_join': 245, 'natural_join4': 199, 'union': 185, 'left_join': 88, 'natural_join3': 88})
[    11.404][MainProcess][INFO] Solution found: natural_join4(@param1, @param0, filter(summarise(natural_join(@param0, @param1), n = n(), P_id, color), color == 'green' & n == max(n)), @param2)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/33.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input2)
df5 <- df4 %>% group_by(P_id, color) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(color == 'green' & n == max(n))
df7 <- inner_join(input2, input1) %>% inner_join(df6) %>% inner_join(input3)
out <- df7 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `LHS`.`P_id` AS `P_id`,
          `LHS`.`color` AS `color`,
          `LHS`.`S_key` AS `S_key`,
          `LHS`.`n` AS `n`,
          `RHS`.`S_name` AS `S_name`
   FROM
     (SELECT `LHS`.`P_id` AS `P_id`,
             `LHS`.`color` AS `color`,
             `LHS`.`S_key` AS `S_key`,
             `RHS`.`n` AS `n`
      FROM
        (SELECT `LHS`.`P_id` AS `P_id`,
                `LHS`.`color` AS `color`,
                `RHS`.`S_key` AS `S_key`
         FROM `input2` AS `LHS`
         INNER JOIN `input1` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)) AS `LHS`
      INNER JOIN
        (SELECT `P_id`,
                `color`,
                `n`
         FROM
           (SELECT `P_id`,
                   `color`,
                   `n`,
                   MAX(`n`) OVER () AS `zzz4`
            FROM
              (SELECT `P_id`,
                      `color`,
                      COUNT() AS `n`
               FROM
                 (SELECT `LHS`.`S_key` AS `S_key`,
                         `LHS`.`P_id` AS `P_id`,
                         `RHS`.`color` AS `color`
                  FROM `input1` AS `LHS`
                  INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
               GROUP BY `P_id`,
                        `color`))
         WHERE (`color` = 'green'
                AND n = zzz4)) AS RHS ON (LHS.P_id = RHS.P_id
                                          AND LHS.color = RHS.color)) AS LHS
   INNER JOIN input3 AS RHS ON (LHS.S_key = RHS.S_key))
ORDER BY S_name
