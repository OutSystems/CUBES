[     1.566][MainProcess][INFO] Parsing specification...
[     1.570][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.570][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.570][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.571][MainProcess][DEBUG] Reading input files...
[     1.577][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-1.txt: ['string', 'string']
[     1.580][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-2.txt: ['string', 'string']
[     1.584][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-3.txt: ['string', 'string']
[     1.588][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16.out: ['string']
[     1.618][MainProcess][DEBUG] Generating DSL...
[     1.644][MainProcess][INFO] Creating 16 processes
[     1.705][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.705][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.706][MainProcess][DEBUG] Increasing generator loc to 3
[     1.707][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.708][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.711][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.712][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.716][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.719][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.723][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.727][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.731][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.736][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.738][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.739][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.748][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.771][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.289][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.290][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.293][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.296][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.297][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.299][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.329][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.330][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.332][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.352][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.353][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.356][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.805][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     2.809][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.809][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.811][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.816][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.816][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.822][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.823][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.823][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.827][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.831][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.832][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.833][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.835][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.836][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     2.839][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     2.840][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     2.841][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     2.842][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     2.844][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = inner_join())
[     2.844][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter())
[     2.845][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.847][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter())
[     2.847][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter())
[     2.850][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter())
[     2.851][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join(), l2 = filter([1]))
[     2.852][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter([1]))
[     2.853][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join(), l2 = filter([1]))
[     2.854][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join(), l2 = filter([1]))
[     2.855][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = summarise())
[     2.857][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3(), l2 = summarise())
[     2.857][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = mutate())
[     2.859][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3(), l2 = mutate())
[     2.861][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = summarise())
[     2.863][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = mutate())
[     2.920][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([3]))
[     2.925][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([3]))
[     2.927][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([3]), l2 = mutate())
[     2.930][cube-solver-15][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([7]), l2 = natural_join())
[     2.943][cube-solver-15][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([8]), l2 = natural_join3())
[     3.138][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([4]))
[     3.150][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([10]), l2 = natural_join4())
[     3.160][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([10]), l2 = summarise([10]))
[     3.172][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([10]), l2 = filter([4]))
[     3.182][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = anti_join())
[     3.190][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = left_join())
[     3.199][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = union())
[     3.207][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = intersect())
[     3.216][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = semi_join())
[     3.225][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = cross_join())
[     3.235][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = mutate())
[     3.244][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = inner_join())
[     3.253][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = summarise([11]))
[     3.264][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = mutate())
[     3.269][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = summarise([12]))
[     3.278][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = mutate())
[     3.283][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = summarise([12]))
[     3.291][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = mutate())
[     3.296][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = summarise([12]))
[     3.305][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = mutate())
[     3.309][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = summarise([13]))
[     3.318][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = mutate())
[     3.323][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = summarise([13]))
[     3.332][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = mutate())
[     3.337][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = summarise([13]))
[     3.347][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = mutate())
[     3.350][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join())
[     3.354][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join3([2]))
[     3.457][cube-solver-3][DEBUG] Solving cube (l0 = summarise([13]), l1 = natural_join3([2]), l2 = filter([4]))
[     3.591][cube-solver-0][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join4(), l2 = filter([4]))
[     3.607][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join4())
[     3.672][cube-solver-2][DEBUG] Solving cube (l0 = summarise([17]), l1 = natural_join(), l2 = filter([4]))
[     3.686][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = summarise([17]))
[     3.698][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = filter([4]))
[     3.703][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = anti_join())
[     3.708][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = left_join())
[     3.713][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = union())
[     3.717][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = intersect())
[     3.721][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = semi_join())
[     3.725][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = cross_join())
[     3.730][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = mutate())
[     3.734][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = inner_join())
[     3.739][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = summarise([18]))
[     3.751][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = mutate())
[     3.756][cube-solver-2][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([18]), l2 = filter([4]))
[     3.769][cube-solver-2][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = summarise([18]))
[     3.780][cube-solver-1][DEBUG] Solving cube (l0 = summarise([18]), l1 = summarise([18]), l2 = filter([4]))
[     3.781][cube-solver-2][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = mutate())
[     3.786][cube-solver-2][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([4]))
[     3.791][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([18]), l2 = filter([4]))
[     3.802][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = summarise([18]))
[     3.803][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = mutate())
[     3.807][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([4]))
[     3.812][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = summarise([19]), l2 = filter([4]))
[     3.815][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = summarise([19]))
[     3.825][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = mutate())
[     3.827][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([4]))
[     3.830][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([20]), l2 = filter([4]))
[     3.832][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = summarise([20]))
[     3.843][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = mutate())
[     3.845][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([4]))
[     3.849][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([20]), l2 = filter([4]))
[     3.850][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = summarise([21]))
[     3.861][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = mutate())
[     3.863][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([4]))
[     3.866][cube-solver-2][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([21]), l2 = filter([4]))
[     3.868][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = summarise([21]))
[     3.880][cube-solver-2][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = mutate())
[     3.882][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([4]))
[     3.885][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([4]))
[     3.886][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([2]), l2 = filter([4]))
[     3.889][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([4]))
[     3.937][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([21]), l2 = filter([4]))
[     3.950][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join())
[     3.954][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join3([2]))
[     4.035][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join4())
[     4.058][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = summarise([21]))
[     4.080][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = filter([4]))
[     4.087][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = anti_join())
[     4.091][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = left_join())
[     4.095][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = union())
[     4.099][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = intersect())
[     4.103][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = semi_join())
[     4.107][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = cross_join())
[     4.113][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = mutate())
[     4.117][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = inner_join())
[     4.121][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([4]))
[     4.126][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([4]))
[     4.130][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([4]))
[     4.134][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([4]))
[     4.138][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([4]))
[     4.142][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([4]))
[     4.146][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([4]))
[     4.150][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([4]))
[     4.154][cube-solver-11][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([21]), l2 = filter([4]))
[     4.168][cube-solver-11][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = summarise([21]))
[     4.190][cube-solver-11][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = mutate())
[     4.196][cube-solver-11][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([4]))
[     4.202][MainProcess][DEBUG] Increasing generator loc to 4
[     4.203][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     5.781][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     5.785][cube-solver-11][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([4]))
[     6.038][cube-solver-8][DEBUG] Initialising process for 4 lines of code.
[     6.220][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     6.498][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[     6.556][cube-solver-10][DEBUG] Initialising process for 4 lines of code.
[     7.574][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([4]))
[     7.650][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([4]))
[     7.672][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join4())
[     7.766][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[     7.946][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([4]))
[     7.972][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = filter([4]))
[     7.989][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[     8.046][cube-solver-12][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join([2]))
[     8.217][cube-solver-10][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join3([2]))
[     8.420][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     9.281][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     9.379][cube-solver-9][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = summarise([21]))
[     9.427][cube-solver-9][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = intersect())
[    10.173][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = left_join())
[    10.981][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = union())
[    11.053][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[    12.669][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = semi_join())
[    12.702][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[    14.286][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = mutate())
[    14.286][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = cross_join())
[    14.307][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = inner_join())
[    17.042][cube-solver-12][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = anti_join(), l3 = filter([4]))
[    17.233][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[    18.737][cube-solver-1][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[    18.739][MainProcess][INFO] Statistics:
[    18.740][MainProcess][INFO] 	Generated cubes: 161
[    18.740][MainProcess][INFO] 	Attempted programs: 3886
[    18.740][MainProcess][INFO] 		Rejected: 639
[    18.740][MainProcess][INFO] 		Failed: 3246
[    18.741][MainProcess][INFO] 	Blacklist clauses: 29
[    18.741][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    18.747][MainProcess][DEBUG] 	0: Counter({'filter': 3900, 'mutate': 2852, 'summarise': 1018, 'natural_join3': 752})
[    18.751][MainProcess][DEBUG] 	1: Counter({'filter': 2862, 'natural_join4': 2096, 'mutate': 1980, 'natural_join3': 1040, 'summarise': 544})
[    18.756][MainProcess][DEBUG] 	2: Counter({'natural_join4': 3482, 'filter': 1760, 'summarise': 1688, 'natural_join3': 1152, 'mutate': 440})
[    18.757][MainProcess][DEBUG] Printing statistics for good programs of size 4
[    18.759][MainProcess][DEBUG] 	0: Counter({'natural_join': 4226})
[    18.761][MainProcess][DEBUG] 	1: Counter({'summarise': 4227})
[    18.764][MainProcess][DEBUG] 	2: Counter({'filter': 3033, 'natural_join3': 678, 'natural_join': 464, 'anti_join': 52})
[    18.766][MainProcess][DEBUG] 	3: Counter({'filter': 1194, 'natural_join3': 791, 'union': 631, 'natural_join': 464, 'left_join': 444, 'natural_join4': 390, 'semi_join': 220, 'anti_join': 65, 'inner_join': 28})
[    18.766][MainProcess][INFO] Solution found: anti_join(summarise(@param1, n = n(), P_id, P_name), filter(natural_join(@param2, @param0), S_name != 'AWS'), )

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/16-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/16-2.txt", col_types = cols(P_id = col_character(),P_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/16-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/16.out", col_types = cols(P_name = col_character()))

df4 <- input2 %>% group_by(P_id, P_name) %>% summarise(n = n()) %>% ungroup()
df5 <- inner_join(input3, input1)
df6 <- df5 %>% filter(S_name != 'AWS')
df7 <- anti_join(df4, df6, by=c())
out <- df7 %>% select(P_name) %>% arrange(P_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `P_name`
FROM
  (SELECT *
   FROM
     (SELECT `P_id`,
             `P_name`,
             COUNT() AS `n`
      FROM `input2`
      GROUP BY `P_id`,
               `P_name`) AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM
             (SELECT `LHS`.`S_key` AS `S_key`,
                     `LHS`.`S_name` AS `S_name`,
                     `RHS`.`P_id` AS `P_id`
              FROM `input3` AS `LHS`
              INNER JOIN `input1` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
           WHERE (`S_name` != 'AWS')) AS RHS
        WHERE (LHS.P_id = RHS.P_id) ))
ORDER BY P_name
