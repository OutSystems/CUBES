[     1.574][MainProcess][INFO] Parsing specification...
[     1.591][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.592][MainProcess][DEBUG] Reading input files...
[     1.601][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-1.txt: ['string', 'string']
[     1.606][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-2.txt: ['string', 'string']
[     1.611][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-3.txt: ['string', 'string']
[     1.616][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/51.out: ['string', 'int64']
[     1.647][MainProcess][DEBUG] Generating DSL...
[     1.669][MainProcess][INFO] Creating 16 processes
[     1.727][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     1.727][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.728][MainProcess][DEBUG] Increasing generator loc to 2
[     1.729][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.729][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.731][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     1.736][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     1.739][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     1.739][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     1.743][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     1.748][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     1.751][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     1.755][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     1.756][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     1.759][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     1.772][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     1.778][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     1.933][cube-solver-1][WARNING] There is no solution for current loc (1).
[     1.934][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     1.935][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     2.098][cube-solver-0][WARNING] There is no solution for current loc (1).
[     2.099][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     2.100][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.243][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise())
[     2.246][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = mutate())
[     2.247][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join())
[     2.248][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise())
[     2.249][cube-solver-2][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise())
[     2.250][cube-solver-2][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate())
[     2.251][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = summarise())
[     2.253][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = mutate())
[     2.254][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = summarise())
[     2.255][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = mutate())
[     2.256][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = summarise())
[     2.258][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = mutate())
[     2.259][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise())
[     2.259][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join())
[     2.260][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate())
[     2.261][cube-solver-2][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise())
[     2.263][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join())
[     2.263][cube-solver-8][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate())
[     2.264][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3())
[     2.264][cube-solver-7][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate())
[     2.266][cube-solver-8][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4())
[     2.267][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = summarise())
[     2.268][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4())
[     2.269][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join())
[     2.270][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = left_join())
[     2.270][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3())
[     2.272][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = intersect())
[     2.272][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = union())
[     2.273][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join())
[     2.274][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = left_join())
[     2.274][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = mutate())
[     2.274][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join())
[     2.276][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join())
[     2.276][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join())
[     2.277][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise())
[     2.277][cube-solver-10][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate())
[     2.277][MainProcess][DEBUG] Increasing generator loc to 3
[     2.278][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     2.279][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     2.280][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     2.280][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     2.289][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = intersect())
[     2.294][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.315][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([1]))
[     2.320][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     2.330][cube-solver-11][DEBUG] Solving cube (l0 = summarise([1]), l1 = summarise([1]))
[     2.336][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     2.357][cube-solver-5][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate())
[     2.369][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate())
[     2.373][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.574][cube-solver-1][DEBUG] Solving cube (l0 = summarise([1]), l1 = semi_join())
[     2.578][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.675][cube-solver-14][DEBUG] Solving cube (l0 = summarise([1]), l1 = union())
[     2.680][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.953][cube-solver-0][DEBUG] Solving cube (l0 = summarise([5]), l1 = cross_join())
[     2.962][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     3.084][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([8]), l2 = natural_join3([2]))
[     3.123][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([8]), l2 = intersect())
[     3.141][cube-solver-6][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([8]), l2 = left_join())
[     3.198][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([8]), l2 = natural_join([2]))
[     3.280][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([8]), l2 = union())
[     3.465][cube-solver-10][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([10]), l2 = summarise([10]))
[     3.472][cube-solver-12][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([10]), l2 = natural_join4())
[     3.487][cube-solver-10][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([10]), l2 = inner_join())
[     3.489][cube-solver-12][DEBUG] Solving cube (l0 = natural_join([2]), l1 = anti_join(), l2 = summarise([10]))
[     3.501][cube-solver-12][DEBUG] Solving cube (l0 = natural_join([2]), l1 = anti_join(), l2 = mutate())
[     3.506][cube-solver-12][DEBUG] Solving cube (l0 = natural_join([2]), l1 = left_join(), l2 = summarise([10]))
[     3.633][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([15]), l2 = cross_join())
[     3.788][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([16]), l2 = anti_join())
[     3.832][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([16]), l2 = semi_join())
[     4.096][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([17]), l2 = mutate())
[     4.108][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = left_join(), l2 = mutate())
[     4.138][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     4.548][cube-solver-13][DEBUG] Found solution with cube (l0 = natural_join(), l1 = summarise([8]), l2 = natural_join3([2]))
[     4.549][MainProcess][INFO] Statistics:
[     4.550][MainProcess][INFO] 	Generated cubes: 63
[     4.550][MainProcess][INFO] 	Attempted programs: 28
[     4.550][MainProcess][INFO] 		Rejected: 7
[     4.550][MainProcess][INFO] 		Failed: 20
[     4.550][MainProcess][INFO] 	Blacklist clauses: 21
[     4.550][MainProcess][DEBUG] Printing statistics for good programs of size 2
[     4.551][MainProcess][DEBUG] 	0: Counter({'mutate': 408, 'natural_join3': 336, 'summarise': 205})
[     4.552][MainProcess][DEBUG] 	1: Counter({'natural_join3': 404, 'natural_join4': 210, 'summarise': 176, 'mutate': 160})
[     4.552][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     4.552][MainProcess][DEBUG] 	0: Counter({'natural_join': 785})
[     4.553][MainProcess][DEBUG] 	1: Counter({'summarise': 619, 'left_join': 166})
[     4.553][MainProcess][DEBUG] 	2: Counter({'natural_join3': 142, 'union': 140, 'natural_join': 128, 'left_join': 121, 'summarise': 112, 'mutate': 54, 'semi_join': 52, 'anti_join': 36})
[     4.553][MainProcess][INFO] Solution found: natural_join3(summarise(natural_join(@param1, @param0), n = n(), P_id, color), @param0, @param2)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/51.out", col_types = cols(S_name = col_character(),n = col_integer()))

df4 <- inner_join(input2, input1)
df5 <- df4 %>% group_by(P_id, color) %>% summarise(n = n()) %>% ungroup()
df6 <- inner_join(df5, input1) %>% inner_join(input3)
out <- df6 %>% select(S_name, n) %>% distinct() %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT S_name,
                n
FROM
  (SELECT LHS.P_id AS P_id,
          LHS.color AS color,
          LHS.n AS n,
          LHS.S_key AS S_key,
          RHS.S_name AS S_name
   FROM
     (SELECT LHS.P_id AS P_id,
             LHS.color AS color,
             LHS.n AS n,
             RHS.S_key AS S_key
      FROM
        (SELECT P_id,
                color,
                COUNT() AS n
         FROM
           (SELECT LHS.P_id AS P_id,
                   LHS.color AS color,
                   RHS.S_key AS S_key
            FROM input2 AS LHS
            INNER JOIN input1 AS RHS ON (LHS.P_id = RHS.P_id))
         GROUP BY P_id,
                  color) AS LHS
      INNER JOIN input1 AS RHS ON (LHS.P_id = RHS.P_id)) AS LHS
   INNER JOIN input3 AS RHS ON (LHS.S_key = RHS.S_key))
ORDER BY S_name
