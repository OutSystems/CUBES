[     1.637][MainProcess][INFO] Parsing specification...
[     1.663][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.663][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.663][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.664][MainProcess][DEBUG] Reading input files...
[     1.686][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15-1.txt: ['string', 'string']
[     1.691][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15-2.txt: ['string', 'string']
[     1.697][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15-3.txt: ['string', 'string']
[     1.701][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15.out: ['string']
[     1.734][MainProcess][DEBUG] Generating DSL...
[     1.762][MainProcess][INFO] Creating 16 processes
[     1.827][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.826][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.827][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.827][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.827][MainProcess][DEBUG] Increasing generator loc to 3
[     1.833][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.834][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.837][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.845][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.849][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.853][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.853][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.857][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.860][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.861][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.869][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.904][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.459][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.460][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.463][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.478][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.479][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.483][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.545][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.545][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.547][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.643][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.644][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.647][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     3.018][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     3.023][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     3.024][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     3.028][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     3.028][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     3.031][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     3.033][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     3.035][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     3.038][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     3.042][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     3.043][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     3.043][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     3.044][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     3.045][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     3.051][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = left_join())
[     3.051][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = union())
[     3.051][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     3.053][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = intersect())
[     3.056][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = semi_join())
[     3.058][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = cross_join())
[     3.059][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = mutate())
[     3.063][cube-solver-14][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = inner_join())
[     3.064][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = anti_join(), l2 = filter())
[     3.066][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = intersect(), l2 = filter())
[     3.066][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = left_join(), l2 = filter())
[     3.066][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = union(), l2 = filter())
[     3.067][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = semi_join(), l2 = filter())
[     3.073][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = cross_join(), l2 = filter())
[     3.074][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = mutate(), l2 = filter())
[     3.074][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = inner_join(), l2 = filter())
[     3.075][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([1]))
[     3.075][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     3.078][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([1]))
[     3.080][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([1]))
[     3.081][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     3.081][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     3.082][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = natural_join())
[     3.083][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = natural_join3())
[     3.088][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = anti_join())
[     3.088][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = natural_join4())
[     3.089][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = summarise([1]))
[     3.089][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = filter())
[     3.091][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = left_join())
[     3.095][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = union())
[     3.096][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = intersect())
[     3.096][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = semi_join())
[     3.098][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = mutate())
[     3.098][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = cross_join())
[     3.099][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = inner_join())
[     3.103][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise([1]))
[     3.104][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise([1]))
[     3.104][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     3.105][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     3.107][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise([1]))
[     3.107][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     3.110][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise([1]))
[     3.111][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     3.111][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise([1]))
[     3.112][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     3.113][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise([1]))
[     3.114][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     3.116][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise([1]))
[     3.117][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     3.118][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     3.119][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3())
[     3.120][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join4())
[     3.120][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise([1]))
[     3.122][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = filter())
[     3.124][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = left_join())
[     3.124][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = anti_join())
[     3.126][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = union())
[     3.128][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = intersect())
[     3.128][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = semi_join())
[     3.129][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = cross_join())
[     3.130][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[     3.132][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = inner_join())
[     3.133][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = summarise([1]))
[     3.134][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = mutate())
[     3.135][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([1]), l2 = filter())
[     3.136][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = summarise([1]))
[     3.137][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = mutate())
[     3.138][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter())
[     3.140][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([1]), l2 = filter())
[     3.143][cube-solver-14][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = summarise([1]))
[     3.143][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = mutate())
[     3.144][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter())
[     3.144][cube-solver-13][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = summarise([1]))
[     3.144][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = summarise([1]), l2 = filter())
[     3.147][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = mutate())
[     3.150][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter())
[     3.150][cube-solver-13][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = summarise([1]))
[     3.150][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([1]), l2 = filter())
[     3.151][cube-solver-14][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = mutate())
[     3.152][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter())
[     3.154][cube-solver-4][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([2]), l2 = filter())
[     3.156][cube-solver-13][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = mutate())
[     3.156][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = summarise([2]))
[     3.158][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([2]), l2 = filter())
[     3.158][cube-solver-14][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter())
[     3.158][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = summarise([2]))
[     3.162][cube-solver-13][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter())
[     3.162][cube-solver-4][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = mutate())
[     3.164][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter())
[     3.165][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter())
[     3.166][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter())
[     3.167][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([2]), l2 = filter())
[     3.167][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join())
[     3.169][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join3())
[     3.170][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join4())
[     3.173][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise([2]))
[     3.175][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = filter())
[     3.180][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = left_join())
[     3.180][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = anti_join())
[     3.185][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = union())
[     3.190][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = intersect())
[     3.190][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = semi_join())
[     3.196][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = cross_join())
[     3.197][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = mutate())
[     3.203][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = inner_join())
[     3.204][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([2]))
[     3.211][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([4]))
[     3.211][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([4]))
[     3.218][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([4]))
[     3.219][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([4]))
[     3.225][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([5]))
[     3.227][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([5]))
[     3.234][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([5]))
[     3.237][cube-solver-12][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([5]), l2 = filter([5]))
[     3.242][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([5]), l2 = summarise([5]))
[     3.249][cube-solver-12][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([6]), l2 = mutate())
[     3.253][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([6]))
[     3.256][MainProcess][DEBUG] Increasing generator loc to 4
[     3.259][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[     3.262][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     3.310][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = mutate(), l2 = filter([8]))
[     3.362][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([12]))
[     3.378][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     3.633][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([17]))
[     3.653][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     3.804][cube-solver-3][DEBUG] Solving cube (l0 = summarise([15]), l1 = natural_join(), l2 = filter([21]))
[     3.823][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     3.989][cube-solver-2][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join4(), l2 = filter([21]))
[     4.009][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     4.336][cube-solver-0][DEBUG] Solving cube (l0 = summarise([17]), l1 = summarise([17]), l2 = filter([24]))
[     4.352][cube-solver-1][DEBUG] Solving cube (l0 = summarise([17]), l1 = natural_join3([2]), l2 = filter([24]))
[     4.381][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     5.064][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = natural_join4(), l3 = filter([24]))
[     5.117][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = filter([24]), l3 = summarise([19]))
[     5.165][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = filter([24]), l3 = filter([24]))
[     5.194][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = natural_join(), l3 = filter([24]))
[     5.209][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = filter([24]), l3 = anti_join())
[     5.242][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = natural_join3([2]), l3 = filter([24]))
[     5.397][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = summarise([19]), l3 = filter([24]))
[     5.431][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([24]), l3 = left_join())
[     5.527][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join([2]))
[     5.757][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join3([2]))
[     6.026][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     6.279][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join4())
[     7.068][cube-solver-8][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     7.070][MainProcess][INFO] Statistics:
[     7.070][MainProcess][INFO] 	Generated cubes: 154
[     7.070][MainProcess][INFO] 	Attempted programs: 196
[     7.070][MainProcess][INFO] 		Rejected: 71
[     7.070][MainProcess][INFO] 		Failed: 124
[     7.071][MainProcess][INFO] 	Blacklist clauses: 49
[     7.071][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     7.072][MainProcess][DEBUG] 	0: Counter({'mutate': 1073, 'natural_join3': 525, 'summarise': 280})
[     7.073][MainProcess][DEBUG] 	1: Counter({'natural_join3': 609, 'natural_join4': 402, 'filter': 342, 'mutate': 320, 'summarise': 205})
[     7.074][MainProcess][DEBUG] 	2: Counter({'filter': 1536, 'natural_join3': 190, 'natural_join4': 152})
[     7.074][MainProcess][DEBUG] Printing statistics for good programs of size 4
[     7.075][MainProcess][DEBUG] 	0: Counter({'natural_join': 256})
[     7.075][MainProcess][DEBUG] 	1: Counter({'summarise': 256})
[     7.075][MainProcess][DEBUG] 	2: Counter({'natural_join': 106, 'filter': 102, 'natural_join3': 48})
[     7.075][MainProcess][DEBUG] 	3: Counter({'filter': 154, 'natural_join4': 50, 'natural_join': 42, 'natural_join3': 10})
[     7.076][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param1, @param0, @param2), n = n(), S_name, color), color == 'red' & n == max(n))
[     7.242][cube-solver-7][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([24]), l3 = left_join())

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/15-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/15-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/15-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/15.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input2, input1) %>% inner_join(input3)
df5 <- df4 %>% group_by(S_name, color) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(color == 'red' & n == max(n))
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `S_name`,
          `color`,
          `n`
   FROM
     (SELECT `S_name`,
             `color`,
             `n`,
             MAX(`n`) OVER () AS `zzz4`
      FROM
        (SELECT `S_name`,
                `color`,
                COUNT() AS `n`
         FROM
           (SELECT `LHS`.`P_id` AS `P_id`,
                   `LHS`.`color` AS `color`,
                   `LHS`.`S_key` AS `S_key`,
                   `RHS`.`S_name` AS `S_name`
            FROM
              (SELECT `LHS`.`P_id` AS `P_id`,
                      `LHS`.`color` AS `color`,
                      `RHS`.`S_key` AS `S_key`
               FROM `input2` AS `LHS`
               INNER JOIN `input1` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)) AS `LHS`
            INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
         GROUP BY `S_name`,
                  `color`))
   WHERE (`color` = 'red'
          AND n = zzz4))
ORDER BY S_name
