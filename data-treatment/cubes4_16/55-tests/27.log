[     3.222][MainProcess][INFO] Parsing specification...
[     3.233][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.233][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.234][MainProcess][DEBUG] Reading input files...
[     3.259][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/17-1.txt: ['string', 'string', 'int64']
[     3.264][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/17-2.txt: ['string', 'string']
[     3.270][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/27.out: ['string', 'string']
[     3.301][MainProcess][DEBUG] Generating DSL...
[     3.337][MainProcess][INFO] Creating 16 processes
[     3.415][MainProcess][DEBUG] Increasing generator loc to 2
[     3.415][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     3.415][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     3.416][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.416][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.416][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     3.422][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     3.423][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     3.438][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     3.441][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     3.442][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     3.445][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     3.450][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     3.451][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     3.466][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     3.479][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     3.500][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     3.838][cube-solver-1][WARNING] There is no solution for current loc (1).
[     3.839][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     3.840][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.911][cube-solver-0][WARNING] There is no solution for current loc (1).
[     3.912][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     3.913][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     4.198][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise())
[     4.204][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate())
[     4.204][cube-solver-5][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate())
[     4.206][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join())
[     4.208][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = mutate())
[     4.211][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join())
[     4.216][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise())
[     4.218][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4())
[     4.220][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join())
[     4.221][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     4.225][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     4.227][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = natural_join3())
[     4.228][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([2]))
[     4.229][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     4.233][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate())
[     4.246][cube-solver-11][DEBUG] Solving cube (l0 = summarise([4]), l1 = summarise([4]))
[     4.247][cube-solver-14][DEBUG] Solving cube (l0 = summarise([4]), l1 = left_join())
[     4.258][cube-solver-11][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([6]))
[     4.285][cube-solver-15][DEBUG] Solving cube (l0 = summarise([11]), l1 = union())
[     4.355][cube-solver-13][DEBUG] Solving cube (l0 = summarise([13]), l1 = anti_join([10]))
[     4.574][cube-solver-7][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate())
[     4.578][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = mutate())
[     4.667][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([14]))
[     4.686][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = summarise([14]))
[     4.793][cube-solver-1][DEBUG] Solving cube (l0 = summarise([14]), l1 = intersect())
[     4.929][cube-solver-0][DEBUG] Solving cube (l0 = summarise([14]), l1 = semi_join())
[     4.929][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = mutate())
[     4.974][cube-solver-3][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([14]))
[     5.217][cube-solver-7][DEBUG] Solving cube (l0 = intersect([4]), l1 = mutate())
[     5.440][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([14]))
[     5.449][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate())
[     5.587][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([14]))
[     5.654][cube-solver-14][DEBUG] Solving cube (l0 = cross_join([4]), l1 = mutate())
[     5.695][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join())
[     5.793][cube-solver-8][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3())
[     5.935][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4())
[     5.944][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([14]))
[     5.960][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     5.965][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join([18]))
[     5.995][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = left_join())
[     6.061][cube-solver-11][DEBUG] Solving cube (l0 = mutate([1]), l1 = union())
[     6.099][cube-solver-0][DEBUG] Solving cube (l0 = mutate([1]), l1 = intersect([8]))
[     6.174][cube-solver-4][DEBUG] Solving cube (l0 = mutate([1]), l1 = semi_join())
[     6.390][cube-solver-7][DEBUG] Solving cube (l0 = mutate([1]), l1 = cross_join([67]))
[     6.459][cube-solver-4][DEBUG] Solving cube (l0 = mutate([1]), l1 = mutate([1]))
[     6.460][cube-solver-0][DEBUG] Solving cube (l0 = mutate([1]), l1 = inner_join())
[     6.464][cube-solver-4][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([14]))
[     6.712][cube-solver-2][DEBUG] Solving cube (l0 = inner_join([10]), l1 = mutate([1]))
[     6.740][MainProcess][DEBUG] Increasing generator loc to 3
[     6.741][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     6.761][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     7.052][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     7.053][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     7.056][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     7.661][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     7.685][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     8.046][cube-solver-11][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([14]), l2 = natural_join())
[     8.381][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([14]), l2 = natural_join4())
[     8.396][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([14]), l2 = natural_join3())
[     8.403][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([14]), l2 = union())
[     8.572][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([14]), l2 = filter())
[     8.709][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([14]), l2 = summarise([14]))
[     8.735][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([14]), l2 = intersect([8]))
[     9.274][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([14]), l2 = anti_join([18]))
[     9.278][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([14]), l2 = left_join())
[    12.950][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([14]), l2 = semi_join())
[    13.795][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[    13.807][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[    13.896][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[    15.593][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([14]), l2 = mutate([1]))
[    15.600][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([14]), l2 = inner_join([86]))
[    15.659][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([14]), l2 = cross_join([822]))
[    16.633][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise([14]))
[    16.652][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate([1]))
[    16.660][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([18]), l2 = summarise([14]))
[    16.691][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([18]), l2 = mutate([1]))
[    16.710][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = summarise([14]))
[    16.746][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[    18.041][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = mutate([1]))
[    18.468][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[    19.867][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = union(), l2 = summarise([14]))
[    21.089][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = union(), l2 = mutate([1]))
[    24.113][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = intersect([8]), l2 = summarise([14]))
[    24.732][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = intersect([8]), l2 = mutate([1]))
[    25.665][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = semi_join(), l2 = summarise([14]))
[    25.800][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = semi_join(), l2 = mutate([1]))
[    27.905][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[    27.987][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate([1]), l2 = natural_join())
[    28.007][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = cross_join([914]), l2 = summarise([14]))
[    28.146][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate([1]), l2 = natural_join3())
[    29.891][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = cross_join([914]), l2 = mutate([1]))
[    31.668][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate([1]), l2 = natural_join4())
[    31.677][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate([1]), l2 = summarise([14]))
[    31.681][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate([1]), l2 = filter())
[    32.987][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate([1]), l2 = anti_join([18]))
[    33.370][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate([1]), l2 = left_join())
[    33.629][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate([1]), l2 = union())
[    34.154][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate([1]), l2 = intersect([8]))
[    34.753][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate([1]), l2 = semi_join())
[    35.708][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[    35.996][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate([1]), l2 = mutate([1]))
[    36.575][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate([1]), l2 = inner_join([86]))
[    37.570][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate([1]), l2 = cross_join([914]))
[    38.842][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = inner_join([86]), l2 = summarise([14]))
[    38.887][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = inner_join([86]), l2 = mutate([1]))
[    38.974][cube-solver-11][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join(), l2 = summarise([14]))
[    39.082][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join(), l2 = mutate([1]))
[    39.415][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join3(), l2 = summarise([14]))
[    39.433][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join3(), l2 = mutate([1]))
[    39.441][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join4(), l2 = summarise([14]))
[    39.458][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join4(), l2 = mutate([1]))
[    39.466][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([14]), l2 = natural_join())
[    39.485][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([14]), l2 = natural_join3())
[    39.502][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([14]), l2 = natural_join4())
[    39.519][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([14]), l2 = summarise([14]))
[    39.546][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([14]), l2 = filter())
[    39.562][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([14]), l2 = anti_join([18]))
[    39.589][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([14]), l2 = left_join())
[    39.602][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([14]), l2 = union())
[    39.612][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([14]), l2 = intersect([8]))
[    39.625][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([14]), l2 = semi_join())
[    39.945][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([14]), l2 = cross_join([914]))
[    40.441][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([14]), l2 = mutate([1]))
[    40.477][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([14]), l2 = inner_join([86]))
[    40.528][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise([14]))
[    40.540][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate([1]))
[    40.544][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = anti_join([18]), l2 = summarise([14]))
[    40.561][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = anti_join([18]), l2 = mutate([1]))
[    40.573][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = left_join(), l2 = summarise([14]))
[    40.583][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = left_join(), l2 = mutate([1]))
[    40.588][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = union(), l2 = summarise([14]))
[    40.598][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = union(), l2 = mutate([1]))
[    40.604][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = intersect([8]), l2 = summarise([14]))
[    40.626][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = intersect([8]), l2 = mutate([1]))
[    40.635][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = semi_join(), l2 = summarise([14]))
[    40.645][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = semi_join(), l2 = mutate([1]))
[    41.064][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = cross_join([914]), l2 = summarise([14]))
[    41.903][cube-solver-14][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate([1]), l2 = natural_join())
[    41.913][cube-solver-14][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate([1]), l2 = natural_join3())
[    41.921][cube-solver-14][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate([1]), l2 = natural_join4())
[    41.929][cube-solver-14][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate([1]), l2 = summarise([14]))
[    41.946][cube-solver-14][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate([1]), l2 = filter())
[    41.954][cube-solver-14][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate([1]), l2 = anti_join([18]))
[    41.970][cube-solver-14][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate([1]), l2 = left_join())
[    41.975][cube-solver-14][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate([1]), l2 = union())
[    41.980][cube-solver-14][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate([1]), l2 = intersect([8]))
[    41.988][cube-solver-14][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate([1]), l2 = semi_join())
[    41.991][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = cross_join([914]), l2 = mutate([1]))
[    42.254][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate([1]), l2 = mutate([1]))
[    42.260][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate([1]), l2 = inner_join([86]))
[    42.268][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = inner_join([86]), l2 = summarise([14]))
[    42.319][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = inner_join([86]), l2 = mutate([1]))
[    42.328][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join(), l2 = summarise([14]))
[    42.339][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join(), l2 = mutate([1]))
[    42.339][cube-solver-14][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate([1]), l2 = cross_join([914]))
[    42.343][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join3(), l2 = summarise([14]))
[    42.352][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join3(), l2 = mutate([1]))
[    42.356][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join4(), l2 = summarise([14]))
[    42.357][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join4(), l2 = mutate([1]))
[    42.360][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([14]), l2 = natural_join())
[    42.366][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([14]), l2 = natural_join3())
[    42.370][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([14]), l2 = natural_join4())
[    42.377][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([14]), l2 = summarise([14]))
[    42.379][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([14]), l2 = filter())
[    42.388][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([14]), l2 = anti_join([18]))
[    42.392][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([14]), l2 = left_join())
[    42.402][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([14]), l2 = union())
[    42.405][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([14]), l2 = intersect([8]))
[    42.412][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([14]), l2 = semi_join())
[    42.617][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([14]), l2 = mutate([1]))
[    42.631][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise([14]))
[    42.632][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([14]), l2 = inner_join([86]))
[    42.641][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate([1]))
[    42.646][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = anti_join([18]), l2 = summarise([14]))
[    42.663][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = anti_join([18]), l2 = mutate([1]))
[    42.675][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = left_join(), l2 = summarise([14]))
[    42.680][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = left_join(), l2 = mutate([1]))
[    42.680][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([14]), l2 = cross_join([914]))
[    42.685][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = union(), l2 = summarise([14]))
[    42.686][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = union(), l2 = mutate([1]))
[    42.691][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = intersect([8]), l2 = summarise([14]))
[    42.695][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = intersect([8]), l2 = mutate([1]))
[    42.703][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = semi_join(), l2 = summarise([14]))
[    42.704][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = semi_join(), l2 = mutate([1]))
[    42.979][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = cross_join([914]), l2 = summarise([14]))
[    43.103][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate([1]), l2 = natural_join())
[    43.135][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate([1]), l2 = natural_join3())
[    43.139][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate([1]), l2 = natural_join4())
[    43.144][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate([1]), l2 = summarise([14]))
[    43.154][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate([1]), l2 = filter())
[    43.159][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate([1]), l2 = anti_join([18]))
[    43.164][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate([1]), l2 = left_join())
[    43.171][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate([1]), l2 = union())
[    43.176][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = cross_join([914]), l2 = mutate([1]))
[    43.176][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate([1]), l2 = intersect([8]))
[    43.180][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate([1]), l2 = semi_join())
[    43.376][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate([1]), l2 = mutate([1]))
[    43.438][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate([1]), l2 = inner_join([86]))
[    43.480][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate([1]), l2 = cross_join([914]))
[    43.488][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = inner_join([86]), l2 = summarise([14]))
[    43.535][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join(), l2 = summarise([14]))
[    43.545][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join(), l2 = mutate([1]))
[    43.548][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = inner_join([86]), l2 = mutate([1]))
[    43.548][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join3(), l2 = summarise([14]))
[    43.558][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join3(), l2 = mutate([1]))
[    43.561][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join4(), l2 = summarise([14]))
[    43.570][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join4(), l2 = mutate([1]))
[    43.574][cube-solver-10][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = summarise([14]))
[    43.589][cube-solver-3][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = filter())
[    43.654][cube-solver-0][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = anti_join([18]))
[    43.672][cube-solver-0][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = left_join())
[    43.963][cube-solver-14][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = union())
[    44.899][cube-solver-1][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = intersect([8]))
[    45.305][cube-solver-11][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = semi_join())
[    46.204][cube-solver-3][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = mutate([1]))
[    46.266][cube-solver-10][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = cross_join([914]))
[    46.733][cube-solver-3][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = inner_join([86]))
[    56.610][cube-solver-1][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = natural_join())
[    57.240][cube-solver-11][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = natural_join3())
[    57.282][cube-solver-11][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = natural_join4())
[    57.295][cube-solver-11][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join3(), l2 = summarise([14]))
[    66.620][cube-solver-14][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join3(), l2 = filter())
[    66.627][cube-solver-0][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join3(), l2 = anti_join([18]))
[    70.041][cube-solver-14][DEBUG] Found solution with cube (l0 = summarise([14]), l1 = natural_join3(), l2 = filter())
[    70.042][MainProcess][INFO] Statistics:
[    70.043][MainProcess][INFO] 	Generated cubes: 210
[    70.043][MainProcess][INFO] 	Attempted programs: 11168
[    70.043][MainProcess][INFO] 		Rejected: 2316
[    70.043][MainProcess][INFO] 		Failed: 8851
[    70.043][MainProcess][INFO] 	Blacklist clauses: 1041
[    70.043][MainProcess][DEBUG] Printing statistics for good programs of size 2
[    70.049][MainProcess][DEBUG] 	0: Counter({'summarise': 2944, 'inner_join': 2304, 'mutate': 1396, 'natural_join': 256, 'left_join': 256, 'union': 256, 'anti_join': 144, 'semi_join': 72})
[    70.053][MainProcess][DEBUG] 	1: Counter({'summarise': 2144, 'inner_join': 1920, 'natural_join3': 1440, 'mutate': 1144, 'union': 376, 'natural_join': 200, 'left_join': 200, 'anti_join': 136, 'semi_join': 68})
[    70.054][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    70.081][MainProcess][DEBUG] 	0: Counter({'natural_join': 65489, 'summarise': 16176})
[    70.108][MainProcess][DEBUG] 	1: Counter({'summarise': 31991, 'natural_join': 14985, 'mutate': 13719, 'cross_join': 7915, 'inner_join': 7354, 'natural_join3': 2216, 'left_join': 1280, 'union': 1280, 'semi_join': 912, 'intersect': 16})
[    70.134][MainProcess][DEBUG] 	2: Counter({'inner_join': 12401, 'cross_join': 11801, 'mutate': 11046, 'summarise': 10596, 'union': 8552, 'left_join': 8040, 'natural_join': 6493, 'natural_join3': 4640, 'semi_join': 3640, 'anti_join': 2980, 'filter': 1481})
[    70.134][MainProcess][INFO] Solution found: filter(natural_join3(@param1, summarise(@param0, meancost = mean(cost), P_id), @param0), meancost >= cost)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/17-1.txt", col_types = cols(S_key = col_character(),P_id = col_character(),cost = col_integer()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/17-2.txt", col_types = cols(P_id = col_character(),S_name = col_character()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/55-tests/tables/27.out", col_types = cols(P_id = col_character(),S_name = col_character()))

df3 <- input1 %>% group_by(P_id) %>% summarise(meancost = mean(cost)) %>% ungroup()
df4 <- inner_join(input2, df3) %>% inner_join(input1)
df5 <- df4 %>% filter(meancost >= cost)
out <- df5 %>% select(P_id, S_name) %>% arrange(P_id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT P_id,
       S_name
FROM
  (SELECT LHS.P_id AS P_id,
          LHS.S_name AS S_name,
          LHS.meancost AS meancost,
          RHS.S_key AS S_key,
          RHS.cost AS cost
   FROM
     (SELECT LHS.P_id AS P_id,
             LHS.S_name AS S_name,
             RHS.meancost AS meancost
      FROM input2 AS LHS
      INNER JOIN
        (SELECT P_id,
                AVG(cost) AS meancost
         FROM input1
         GROUP BY P_id) AS RHS ON (LHS.P_id = RHS.P_id)) AS LHS
   INNER JOIN input1 AS RHS ON (LHS.P_id = RHS.P_id))
WHERE (meancost >= cost)
ORDER BY P_id
