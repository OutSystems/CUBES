[     1.953][MainProcess][INFO] Parsing specification...
[     1.970][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.970][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.970][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.971][MainProcess][DEBUG] Reading input files...
[     1.982][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/19-1.txt: ['string', 'string']
[     1.987][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/19-2.txt: ['string', 'string']
[     1.991][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/19-3.txt: ['string', 'string']
[     1.996][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/30.out: ['string', 'int64']
[     2.027][MainProcess][DEBUG] Generating DSL...
[     2.079][MainProcess][INFO] Creating 16 processes
[     2.148][MainProcess][DEBUG] Increasing generator loc to 3
[     2.166][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.170][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     2.175][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.177][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     2.182][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     2.183][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     2.189][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     2.191][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     2.195][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     2.196][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     2.199][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     2.203][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     2.207][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     2.209][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     2.219][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.266][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     4.590][cube-solver-3][WARNING] There is no solution for current loc (2).
[     4.592][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     4.597][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     4.614][cube-solver-2][WARNING] There is no solution for current loc (2).
[     4.615][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     4.619][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     4.627][cube-solver-0][WARNING] There is no solution for current loc (2).
[     4.627][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     4.630][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     4.686][cube-solver-1][WARNING] There is no solution for current loc (2).
[     4.688][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     4.693][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     5.599][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     5.606][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     5.617][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     5.618][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     5.620][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     5.630][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     5.634][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     5.643][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     5.648][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     5.662][cube-solver-14][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = summarise([1]))
[     5.663][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     5.674][cube-solver-14][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = filter())
[     5.673][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise([1]))
[     5.683][cube-solver-14][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = anti_join())
[     5.686][cube-solver-15][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = left_join())
[     5.698][cube-solver-14][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = union())
[     5.700][cube-solver-15][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = intersect())
[     5.708][cube-solver-14][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter(), l2 = semi_join())
[     5.711][cube-solver-15][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter(), l2 = cross_join())
[     5.716][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise([4]))
[     5.721][cube-solver-14][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = mutate())
[     5.734][cube-solver-14][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = inner_join())
[     5.738][cube-solver-15][DEBUG] Solving cube (l0 = summarise([4]), l1 = anti_join(), l2 = filter())
[     5.749][cube-solver-13][DEBUG] Solving cube (l0 = summarise([5]), l1 = left_join(), l2 = filter())
[     5.758][cube-solver-15][DEBUG] Solving cube (l0 = summarise([5]), l1 = union(), l2 = filter())
[     5.760][cube-solver-14][DEBUG] Solving cube (l0 = summarise([5]), l1 = intersect(), l2 = filter())
[     5.762][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([7]), l2 = filter())
[     5.773][cube-solver-13][DEBUG] Solving cube (l0 = summarise([7]), l1 = semi_join(), l2 = filter())
[     5.772][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     5.773][cube-solver-15][DEBUG] Solving cube (l0 = summarise([7]), l1 = cross_join(), l2 = filter())
[     5.778][cube-solver-14][DEBUG] Solving cube (l0 = summarise([8]), l1 = mutate(), l2 = filter())
[     5.792][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = mutate())
[     5.792][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = summarise([8]))
[     5.792][cube-solver-13][DEBUG] Solving cube (l0 = summarise([8]), l1 = inner_join(), l2 = filter())
[     5.796][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3([2]), l2 = summarise([8]))
[     5.799][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3([2]), l2 = mutate())
[     5.803][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = summarise([10]))
[     5.811][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = mutate())
[     5.815][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([11]), l2 = natural_join())
[     5.835][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = natural_join3([2]))
[     5.849][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([8]), l2 = mutate())
[     5.874][cube-solver-6][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([12]), l2 = natural_join4())
[     5.891][cube-solver-6][DEBUG] Solving cube (l0 = filter([12]), l1 = summarise([12]), l2 = summarise([12]))
[     5.911][cube-solver-6][DEBUG] Solving cube (l0 = filter([13]), l1 = summarise([13]), l2 = filter([13]))
[     5.934][cube-solver-6][DEBUG] Solving cube (l0 = filter([19]), l1 = summarise([13]), l2 = anti_join())
[     5.957][cube-solver-6][DEBUG] Solving cube (l0 = filter([22]), l1 = summarise([13]), l2 = left_join())
[     5.977][cube-solver-6][DEBUG] Solving cube (l0 = filter([23]), l1 = summarise([13]), l2 = union())
[     5.997][cube-solver-6][DEBUG] Solving cube (l0 = filter([23]), l1 = summarise([14]), l2 = intersect())
[     6.018][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([15]), l2 = semi_join())
[     6.041][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([16]), l2 = cross_join())
[     6.064][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([17]), l2 = mutate())
[     6.086][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([17]), l2 = inner_join())
[     6.108][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = filter([24]), l2 = summarise([17]))
[     6.138][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = filter([24]), l2 = mutate())
[     6.160][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = anti_join(), l2 = summarise([18]))
[     6.183][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = anti_join(), l2 = mutate())
[     6.198][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = left_join(), l2 = summarise([18]))
[     6.220][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = left_join(), l2 = mutate())
[     6.235][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = union(), l2 = summarise([19]))
[     6.257][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = union(), l2 = mutate())
[     6.272][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = intersect(), l2 = summarise([20]))
[     6.295][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = intersect(), l2 = mutate())
[     6.310][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = semi_join(), l2 = summarise([20]))
[     6.333][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = semi_join(), l2 = mutate())
[     6.348][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = cross_join(), l2 = summarise([20]))
[     6.371][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = cross_join(), l2 = mutate())
[     6.386][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = natural_join())
[     6.401][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = natural_join3([2]))
[     6.436][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = natural_join4())
[     6.457][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = summarise([20]))
[     6.479][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = filter([24]))
[     6.501][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = anti_join())
[     6.520][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = left_join())
[     6.535][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = union())
[     6.550][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = intersect())
[     6.565][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = semi_join())
[     6.580][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = cross_join())
[     6.597][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = mutate())
[     6.612][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = inner_join())
[     6.627][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = inner_join(), l2 = summarise([20]))
[     6.651][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = inner_join(), l2 = mutate())
[     6.666][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([20]), l2 = filter([24]))
[     6.690][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([24]), l2 = summarise([20]))
[     6.714][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([24]), l2 = mutate())
[     6.729][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([24]))
[     6.745][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([20]), l2 = filter([24]))
[     6.768][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = filter([24]), l2 = summarise([20]))
[     6.791][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = filter([24]), l2 = mutate())
[     6.806][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([24]))
[     6.820][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = summarise([20]), l2 = filter([24]))
[     6.843][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = filter([24]), l2 = summarise([20]))
[     6.866][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = filter([24]), l2 = mutate())
[     6.881][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([24]))
[     6.896][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([20]), l2 = filter([24]))
[     6.919][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = filter([24]), l2 = summarise([20]))
[     6.931][cube-solver-9][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = filter(), l2 = summarise([1]))
[     6.932][MainProcess][INFO] Statistics:
[     6.933][MainProcess][INFO] 	Generated cubes: 103
[     6.933][MainProcess][INFO] 	Attempted programs: 21
[     6.933][MainProcess][INFO] 		Rejected: 18
[     6.933][MainProcess][INFO] 		Failed: 2
[     6.933][MainProcess][INFO] 	Blacklist clauses: 46
[     6.933][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     6.934][MainProcess][DEBUG] 	0: Counter({'natural_join3': 437})
[     6.934][MainProcess][DEBUG] 	1: Counter({'filter': 251, 'mutate': 168, 'summarise': 18})
[     6.935][MainProcess][DEBUG] 	2: Counter({'filter': 186, 'mutate': 144, 'summarise': 107})
[     6.935][MainProcess][INFO] Solution found: summarise(filter(natural_join3(@param0, @param2, @param1), color == 'red' & S_key == 'S5'), n = n(), P_id, color)
[     7.159][cube-solver-10][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/19-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/19-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/19-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/30.out", col_types = cols(P_id = col_character(),n = col_integer()))

df4 <- inner_join(input1, input3) %>% inner_join(input2)
df5 <- df4 %>% filter(color == 'red' & S_key == 'S5')
df6 <- df5 %>% group_by(P_id, color) %>% summarise(n = n()) %>% ungroup()
out <- df6 %>% select(P_id, n) %>% arrange(P_id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `P_id`,
       `n`
FROM
  (SELECT `P_id`,
          `color`,
          COUNT() AS `n`
   FROM
     (SELECT *
      FROM
        (SELECT `LHS`.`S_key` AS `S_key`,
                `LHS`.`P_id` AS `P_id`,
                `LHS`.`S_name` AS `S_name`,
                `RHS`.`color` AS `color`
         FROM
           (SELECT `LHS`.`S_key` AS `S_key`,
                   `LHS`.`P_id` AS `P_id`,
                   `RHS`.`S_name` AS `S_name`
            FROM `input1` AS `LHS`
            INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`)) AS `LHS`
         INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
      WHERE (`color` = 'red'
             AND `S_key` = 'S5'))
   GROUP BY P_id,
            color)
ORDER BY P_id
