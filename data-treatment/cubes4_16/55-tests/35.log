[     1.595][MainProcess][INFO] Parsing specification...
[     1.599][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.599][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.600][MainProcess][DEBUG] Reading input files...
[     1.608][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-1.txt: ['string', 'string']
[     1.613][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-2.txt: ['string', 'string']
[     1.619][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-3.txt: ['string', 'string']
[     1.624][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/35.out: ['string']
[     1.656][MainProcess][DEBUG] Generating DSL...
[     1.681][MainProcess][INFO] Creating 16 processes
[     1.749][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.749][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.749][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.749][MainProcess][DEBUG] Increasing generator loc to 3
[     1.749][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.750][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.751][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.755][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.763][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.767][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.769][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.775][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.777][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.780][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.800][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.806][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.810][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.369][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.370][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.372][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.420][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.420][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.422][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.503][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.504][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.505][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.515][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.521][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     2.522][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.525][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.525][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.526][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.529][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.538][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.539][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.546][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = summarise())
[     2.548][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = filter([1]))
[     2.552][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = anti_join())
[     2.554][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([1]), l2 = summarise())
[     2.554][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([1]), l2 = mutate())
[     2.555][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = left_join())
[     2.555][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([1]))
[     2.559][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = union())
[     2.562][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = intersect())
[     2.563][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = semi_join())
[     2.563][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter([2]), l2 = cross_join())
[     2.564][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter([2]), l2 = mutate())
[     2.567][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([2]), l2 = inner_join())
[     2.569][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter([2]))
[     2.570][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter([2]))
[     2.571][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter([2]))
[     2.574][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter([2]))
[     2.576][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join(), l2 = filter([2]))
[     2.577][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join(), l2 = filter([2]))
[     2.578][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter([2]))
[     2.581][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join(), l2 = filter([2]))
[     2.582][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join(), l2 = summarise())
[     2.583][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join(), l2 = mutate())
[     2.584][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join3([2]), l2 = summarise())
[     2.587][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join3([2]), l2 = mutate())
[     2.587][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join4(), l2 = summarise())
[     2.588][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join4(), l2 = mutate())
[     2.591][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = natural_join())
[     2.592][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = natural_join3([2]))
[     2.593][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = natural_join4())
[     2.594][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = summarise())
[     2.597][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = filter([2]))
[     2.598][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = anti_join())
[     2.599][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = left_join())
[     2.599][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = union())
[     2.603][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = intersect())
[     2.603][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = semi_join())
[     2.604][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = cross_join())
[     2.604][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = mutate())
[     2.606][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.607][cube-solver-1][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]))
[     2.608][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = inner_join())
[     2.609][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = filter([2]), l2 = summarise([1]))
[     2.609][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = filter([2]), l2 = mutate())
[     2.609][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.610][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = anti_join(), l2 = summarise([1]))
[     2.614][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = left_join(), l2 = summarise([2]))
[     2.615][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = left_join(), l2 = mutate())
[     2.616][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = union(), l2 = summarise([2]))
[     2.616][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = union(), l2 = mutate())
[     2.620][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = intersect(), l2 = summarise([2]))
[     2.621][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = intersect(), l2 = mutate())
[     2.621][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = semi_join(), l2 = summarise([2]))
[     2.623][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = semi_join(), l2 = mutate())
[     2.626][cube-solver-10][DEBUG] Solving cube (l0 = filter([3]), l1 = cross_join(), l2 = summarise([3]))
[     2.627][cube-solver-4][DEBUG] Solving cube (l0 = filter([3]), l1 = cross_join(), l2 = mutate())
[     2.628][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = natural_join())
[     2.629][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = natural_join3([2]))
[     2.633][cube-solver-4][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = natural_join4())
[     2.634][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = summarise([3]))
[     2.634][cube-solver-10][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = filter([3]))
[     2.636][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = anti_join())
[     2.639][cube-solver-4][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = left_join())
[     2.641][cube-solver-10][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = union())
[     2.642][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = intersect())
[     2.642][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = semi_join())
[     2.645][cube-solver-4][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = cross_join())
[     2.647][cube-solver-10][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = mutate())
[     2.647][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = inner_join())
[     2.648][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = inner_join(), l2 = summarise([4]))
[     2.651][cube-solver-4][DEBUG] Solving cube (l0 = filter([3]), l1 = inner_join(), l2 = mutate())
[     2.653][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([4]), l2 = filter([3]))
[     2.653][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([3]), l2 = summarise([4]))
[     2.657][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = mutate())
[     2.657][cube-solver-4][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([4]))
[     2.663][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([4]), l2 = filter([4]))
[     2.664][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = summarise([4]))
[     2.664][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = mutate())
[     2.664][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([4]))
[     2.671][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = summarise([4]), l2 = filter([4]))
[     2.671][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = summarise([4]))
[     2.673][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = mutate())
[     2.673][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([4]))
[     2.673][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([4]))
[     2.680][cube-solver-10][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([4]), l2 = filter([4]))
[     2.680][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = summarise([4]))
[     2.681][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = mutate())
[     2.681][cube-solver-4][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([4]))
[     2.683][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([4]), l2 = filter([4]))
[     2.687][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = summarise([4]))
[     2.688][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = mutate())
[     2.689][cube-solver-4][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([4]))
[     2.690][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([4]), l2 = filter([4]))
[     2.693][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = mutate())
[     2.694][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = summarise([4]))
[     2.694][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([4]))
[     2.695][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([4]))
[     2.696][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([4]))
[     2.698][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([2]), l2 = filter([4]))
[     2.700][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([4]))
[     2.702][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([4]), l2 = filter([4]))
[     2.704][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join())
[     2.705][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join3([2]))
[     2.712][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = summarise([4]))
[     2.713][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = filter([4]))
[     2.713][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join4())
[     2.722][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = anti_join())
[     2.722][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = left_join())
[     2.728][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = union())
[     2.734][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = intersect())
[     2.741][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = cross_join())
[     2.740][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = semi_join())
[     2.748][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([6]), l2 = mutate())
[     2.750][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([6]), l2 = inner_join())
[     2.755][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([6]))
[     2.758][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([8]))
[     2.763][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([9]))
[     2.767][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([9]))
[     2.772][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([9]))
[     2.777][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([9]))
[     2.781][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([10]))
[     2.786][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([10]))
[     2.790][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([5]), l2 = filter([10]))
[     2.796][cube-solver-15][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([10]), l2 = summarise([5]))
[     2.804][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([10]), l2 = mutate())
[     2.809][cube-solver-15][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([10]))
[     2.811][MainProcess][DEBUG] Increasing generator loc to 4
[     2.813][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[     2.818][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     2.835][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([10]), l2 = summarise([5]))
[     2.851][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     3.055][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([11]), l2 = mutate())
[     3.062][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     3.231][cube-solver-3][DEBUG] Solving cube (l0 = summarise([11]), l1 = natural_join(), l2 = filter([11]))
[     3.253][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     3.421][cube-solver-2][DEBUG] Solving cube (l0 = summarise([13]), l1 = natural_join3([2]), l2 = filter([13]))
[     3.521][cube-solver-1][DEBUG] Solving cube (l0 = filter([15]), l1 = anti_join(), l2 = mutate())
[     3.534][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     3.728][cube-solver-0][DEBUG] Solving cube (l0 = summarise([17]), l1 = natural_join4(), l2 = filter([15]))
[     3.755][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     4.283][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([20]), l2 = natural_join4(), l3 = filter([15]))
[     4.316][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([20]), l2 = filter([15]), l3 = summarise([20]))
[     4.345][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([20]), l2 = summarise([20]), l3 = filter([15]))
[     4.361][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([20]), l2 = filter([15]), l3 = filter([15]))
[     4.386][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([20]), l2 = natural_join(), l3 = filter([15]))
[     4.390][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([20]), l2 = filter([15]), l3 = anti_join())
[     4.398][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([20]), l2 = filter([15]), l3 = left_join())
[     4.686][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([15]))
[     4.741][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join([2]))
[     4.801][cube-solver-15][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([15]))
[     4.802][MainProcess][INFO] Statistics:
[     4.803][MainProcess][INFO] 	Generated cubes: 153
[     4.803][MainProcess][INFO] 	Attempted programs: 1
[     4.803][MainProcess][INFO] 		Rejected: 0
[     4.803][MainProcess][INFO] 		Failed: 0
[     4.803][MainProcess][INFO] 	Blacklist clauses: 40
[     4.803][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     4.804][MainProcess][DEBUG] 	0: Counter({'mutate': 569, 'natural_join3': 311, 'summarise': 250})
[     4.805][MainProcess][DEBUG] 	1: Counter({'filter': 375, 'natural_join3': 289, 'mutate': 161, 'natural_join4': 155, 'summarise': 150})
[     4.806][MainProcess][DEBUG] 	2: Counter({'filter': 758, 'natural_join3': 196, 'natural_join4': 180})
[     4.806][MainProcess][DEBUG] Printing statistics for good programs of size 4
[     4.806][MainProcess][DEBUG] 	0: Counter({'natural_join': 52})
[     4.806][MainProcess][DEBUG] 	1: Counter({'summarise': 52})
[     4.806][MainProcess][DEBUG] 	2: Counter({'filter': 34, 'natural_join': 15, 'natural_join3': 3})
[     4.806][MainProcess][DEBUG] 	3: Counter({'left_join': 24, 'filter': 18, 'anti_join': 10})
[     4.807][MainProcess][INFO] Solution found: filter(natural_join3(@param2, @param0, summarise(natural_join(@param1, @param0), n = n(), P_id)), n == 2)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/35.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input2, input1)
df5 <- df4 %>% group_by(P_id) %>% summarise(n = n()) %>% ungroup()
df6 <- inner_join(input3, input1) %>% inner_join(df5)
df7 <- df6 %>% filter(n == 2)
out <- df7 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT LHS.S_key AS S_key,
          LHS.S_name AS S_name,
          LHS.P_id AS P_id,
          RHS.n AS n
   FROM
     (SELECT LHS.S_key AS S_key,
             LHS.S_name AS S_name,
             RHS.P_id AS P_id
      FROM input3 AS LHS
      INNER JOIN input1 AS RHS ON (LHS.S_key = RHS.S_key)) AS LHS
   INNER JOIN
     (SELECT P_id,
             COUNT() AS n
      FROM
        (SELECT LHS.P_id AS P_id,
                LHS.color AS color,
                RHS.S_key AS S_key
         FROM input2 AS LHS
         INNER JOIN input1 AS RHS ON (LHS.P_id = RHS.P_id))
      GROUP BY P_id) AS RHS ON (LHS.P_id = RHS.P_id))
WHERE (n = 2.0)
ORDER BY S_name
