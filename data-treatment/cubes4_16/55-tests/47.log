[     1.596][MainProcess][INFO] Parsing specification...
[     1.601][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.601][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.601][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.602][MainProcess][DEBUG] Reading input files...
[     1.607][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/aircraft.txt: ['int64', 'string', 'int64']
[     1.611][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/employees.txt: ['int64', 'string', 'int64']
[     1.614][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/certified.txt: ['int64', 'int64']
[     1.638][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/47.out: ['int64', 'string']
[     1.672][MainProcess][DEBUG] Generating DSL...
[     3.092][MainProcess][INFO] Creating 16 processes
[     3.171][MainProcess][DEBUG] Increasing generator loc to 3
[     4.874][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     4.885][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     4.891][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     4.892][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     4.893][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     4.901][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     4.907][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     4.910][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     4.914][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     4.914][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     4.920][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     4.936][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     4.936][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     4.941][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     4.941][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     4.955][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[   144.760][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[   145.005][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[   145.088][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[   145.125][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[   145.199][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[   145.238][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[   145.306][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[   145.398][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[   145.538][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[   145.608][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[   145.661][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = summarise([1]), l2 = filter())
[   145.692][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = natural_join())
[   145.711][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([3]), l2 = filter())
[   145.725][cube-solver-15][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = natural_join3())
[   145.766][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = mutate(), l2 = filter())
[   145.795][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter(), l2 = mutate())
[   145.812][cube-solver-6][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter(), l2 = natural_join4())
[   145.954][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([5]), l2 = filter())
[   146.087][cube-solver-14][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter(), l2 = summarise([5]))
[   146.108][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([1]), l2 = filter([1]))
[   146.258][cube-solver-5][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([1]), l2 = anti_join())
[   146.355][cube-solver-4][DEBUG] Solving cube (l0 = summarise([11]), l1 = filter([2]), l2 = left_join())
[   146.455][cube-solver-5][DEBUG] Solving cube (l0 = summarise([14]), l1 = filter([2]), l2 = union())
[   146.489][cube-solver-14][DEBUG] Solving cube (l0 = summarise([17]), l1 = filter([2]), l2 = intersect())
[   146.609][cube-solver-5][DEBUG] Solving cube (l0 = summarise([17]), l1 = filter([2]), l2 = semi_join())
[   146.699][cube-solver-12][DEBUG] Solving cube (l0 = summarise([18]), l1 = filter([3]), l2 = cross_join())
[   146.769][cube-solver-5][DEBUG] Solving cube (l0 = summarise([19]), l1 = filter([3]), l2 = mutate())
[   146.775][cube-solver-4][DEBUG] Solving cube (l0 = summarise([20]), l1 = filter([3]), l2 = inner_join())
[   146.804][cube-solver-14][DEBUG] Solving cube (l0 = summarise([20]), l1 = anti_join(), l2 = filter([3]))
[   146.929][cube-solver-5][DEBUG] Solving cube (l0 = summarise([21]), l1 = left_join(), l2 = filter([3]))
[   147.093][cube-solver-4][DEBUG] Solving cube (l0 = summarise([23]), l1 = union(), l2 = filter([3]))
[   147.102][cube-solver-14][DEBUG] Solving cube (l0 = summarise([27]), l1 = intersect(), l2 = filter([4]))
[   147.188][cube-solver-5][DEBUG] Solving cube (l0 = summarise([28]), l1 = semi_join(), l2 = filter([4]))
[   147.296][cube-solver-14][DEBUG] Solving cube (l0 = summarise([30]), l1 = cross_join(), l2 = filter([4]))
[   147.303][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = summarise([33]))
[   147.333][cube-solver-12][DEBUG] Solving cube (l0 = summarise([33]), l1 = mutate(), l2 = filter([4]))
[   147.338][cube-solver-4][DEBUG] Solving cube (l0 = summarise([35]), l1 = inner_join(), l2 = filter([4]))
[   147.364][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join(), l2 = summarise([35]))
[   147.480][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join(), l2 = mutate())
[   147.562][cube-solver-4][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = summarise([35]))
[   147.602][cube-solver-12][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = mutate())
[   147.620][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = summarise([36]))
[   147.695][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = mutate())
[   147.910][cube-solver-13][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([37]), l2 = natural_join())
[   148.261][cube-solver-13][DEBUG] Solving cube (l0 = filter([19]), l1 = summarise([40]), l2 = natural_join3([2]))
[   243.550][cube-solver-2][WARNING] There is no solution for current loc (2).
[   244.429][cube-solver-1][WARNING] There is no solution for current loc (2).
[   244.713][cube-solver-3][WARNING] There is no solution for current loc (2).
[   245.062][cube-solver-0][WARNING] There is no solution for current loc (2).
[   246.273][cube-solver-2][DEBUG] Solving cube (l0 = filter([324]), l1 = mutate())
[   247.667][cube-solver-1][DEBUG] Solving cube (l0 = filter([333]), l1 = summarise([111]))
[   254.288][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([468]))
[   256.538][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[   256.684][cube-solver-0][DEBUG] Solving cube (l0 = summarise([114]), l1 = filter([480]))
[   257.000][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[   261.032][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[   261.444][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[   357.173][cube-solver-2][DEBUG] Solving cube (l0 = filter([538]), l1 = summarise([114]), l2 = filter([538]))
[   362.955][cube-solver-2][DEBUG] Solving cube (l0 = filter([571]), l1 = summarise([114]), l2 = left_join())
[   368.062][cube-solver-2][DEBUG] Solving cube (l0 = filter([582]), l1 = summarise([114]), l2 = union())
[   369.699][cube-solver-3][DEBUG] Solving cube (l0 = filter([584]), l1 = summarise([114]), l2 = summarise([114]))
[   372.483][cube-solver-2][DEBUG] Solving cube (l0 = filter([594]), l1 = summarise([114]), l2 = intersect())
[   375.523][cube-solver-3][DEBUG] Solving cube (l0 = filter([596]), l1 = summarise([114]), l2 = semi_join())
[   378.216][cube-solver-2][DEBUG] Solving cube (l0 = filter([607]), l1 = summarise([114]), l2 = cross_join())
[   383.107][cube-solver-3][DEBUG] Solving cube (l0 = filter([621]), l1 = summarise([114]), l2 = mutate())
[   390.048][cube-solver-2][DEBUG] Solving cube (l0 = filter([674]), l1 = summarise([114]), l2 = inner_join())
[   392.643][cube-solver-3][DEBUG] Solving cube (l0 = filter([674]), l1 = filter([674]), l2 = summarise([114]))
[   394.875][cube-solver-1][DEBUG] Solving cube (l0 = filter([674]), l1 = summarise([114]), l2 = natural_join4())
[   396.969][cube-solver-3][DEBUG] Solving cube (l0 = filter([675]), l1 = filter([675]), l2 = mutate())
[   399.144][cube-solver-2][DEBUG] Solving cube (l0 = filter([681]), l1 = anti_join(), l2 = summarise([114]))
[   401.160][cube-solver-3][DEBUG] Solving cube (l0 = filter([686]), l1 = anti_join(), l2 = mutate())
[   403.211][cube-solver-1][DEBUG] Solving cube (l0 = filter([692]), l1 = left_join(), l2 = summarise([114]))
[   405.190][cube-solver-3][DEBUG] Solving cube (l0 = filter([693]), l1 = left_join(), l2 = mutate())
[   407.339][cube-solver-2][DEBUG] Solving cube (l0 = filter([693]), l1 = union(), l2 = summarise([114]))
[   409.403][cube-solver-1][DEBUG] Solving cube (l0 = filter([694]), l1 = union(), l2 = mutate())
[   411.813][cube-solver-3][DEBUG] Solving cube (l0 = filter([694]), l1 = intersect(), l2 = summarise([114]))
[   413.554][cube-solver-2][DEBUG] Solving cube (l0 = filter([694]), l1 = intersect(), l2 = mutate())
[   415.666][cube-solver-3][DEBUG] Solving cube (l0 = filter([694]), l1 = semi_join(), l2 = summarise([114]))
[   418.105][cube-solver-1][DEBUG] Solving cube (l0 = filter([703]), l1 = semi_join(), l2 = mutate())
[   420.127][cube-solver-3][DEBUG] Solving cube (l0 = filter([708]), l1 = cross_join(), l2 = summarise([114]))
[   421.908][cube-solver-2][DEBUG] Solving cube (l0 = filter([710]), l1 = cross_join(), l2 = mutate())
[   423.887][cube-solver-3][DEBUG] Solving cube (l0 = filter([713]), l1 = mutate(), l2 = natural_join())
[   426.631][cube-solver-1][DEBUG] Solving cube (l0 = filter([719]), l1 = mutate(), l2 = natural_join3([2]))
[   428.709][cube-solver-3][DEBUG] Solving cube (l0 = filter([720]), l1 = mutate(), l2 = natural_join4())
[   431.157][cube-solver-2][DEBUG] Solving cube (l0 = filter([721]), l1 = mutate([1]), l2 = summarise([114]))
[   434.874][cube-solver-2][DEBUG] Solving cube (l0 = filter([722]), l1 = mutate([3]), l2 = filter([722]))
[   439.270][cube-solver-2][DEBUG] Solving cube (l0 = filter([724]), l1 = mutate([3]), l2 = anti_join())
[   443.202][cube-solver-2][DEBUG] Solving cube (l0 = filter([724]), l1 = mutate([4]), l2 = left_join())
[   446.499][cube-solver-2][DEBUG] Solving cube (l0 = filter([724]), l1 = mutate([4]), l2 = union())
[   449.863][cube-solver-2][DEBUG] Solving cube (l0 = filter([724]), l1 = mutate([4]), l2 = intersect())
[   453.096][cube-solver-2][DEBUG] Solving cube (l0 = filter([724]), l1 = mutate([4]), l2 = semi_join())
[   456.909][cube-solver-2][DEBUG] Solving cube (l0 = filter([724]), l1 = mutate([4]), l2 = cross_join())
[   460.256][cube-solver-2][DEBUG] Solving cube (l0 = filter([731]), l1 = mutate([4]), l2 = mutate([4]))
[   463.492][cube-solver-2][DEBUG] Solving cube (l0 = filter([732]), l1 = mutate([4]), l2 = inner_join())
[   466.487][cube-solver-2][DEBUG] Solving cube (l0 = filter([732]), l1 = inner_join(), l2 = summarise([114]))
[   469.763][cube-solver-2][DEBUG] Solving cube (l0 = filter([733]), l1 = inner_join(), l2 = mutate([4]))
[   473.477][cube-solver-2][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([114]), l2 = filter([741]))
[   477.183][cube-solver-2][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([744]), l2 = summarise([114]))
[   480.519][cube-solver-2][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([749]), l2 = mutate([4]))
[   483.621][cube-solver-2][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate([4]), l2 = filter([749]))
[   486.757][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([114]), l2 = filter([749]))
[   490.035][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = filter([749]), l2 = summarise([114]))
[   493.026][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = filter([753]), l2 = mutate([4]))
[   496.367][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = mutate([4]), l2 = filter([765]))
[   499.365][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = summarise([114]), l2 = filter([766]))
[   502.795][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = filter([766]), l2 = summarise([114]))
[   505.954][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = filter([767]), l2 = mutate([4]))
[   509.101][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = mutate([4]), l2 = filter([767]))
[   512.400][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([114]), l2 = filter([767]))
[   515.464][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = filter([767]), l2 = summarise([114]))
[   518.948][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = filter([767]), l2 = mutate([4]))
[   522.219][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = mutate([4]), l2 = filter([768]))
[   525.351][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([114]), l2 = filter([772]))
[   528.416][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([772]), l2 = summarise([114]))
[   531.741][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([772]), l2 = mutate([4]))
[   535.406][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate([4]), l2 = filter([772]))
[   538.561][cube-solver-2][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([114]), l2 = filter([774]))
[   542.174][cube-solver-2][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([778]), l2 = summarise([114]))
[   545.248][cube-solver-2][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([778]), l2 = mutate([4]))
[   548.457][cube-solver-2][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate([4]), l2 = filter([778]))
[   552.283][cube-solver-2][DEBUG] Solving cube (l0 = mutate([4]), l1 = natural_join(), l2 = filter([780]))
[   555.662][cube-solver-2][DEBUG] Solving cube (l0 = mutate([4]), l1 = natural_join3([2]), l2 = filter([780]))
[   561.918][cube-solver-8][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[   561.958][MainProcess][INFO] Statistics:
[   561.958][MainProcess][INFO] 	Generated cubes: 115
[   561.959][MainProcess][INFO] 	Attempted programs: 5742
[   561.959][MainProcess][INFO] 		Rejected: 1212
[   561.959][MainProcess][INFO] 		Failed: 4529
[   561.959][MainProcess][INFO] 	Blacklist clauses: 900
[   561.959][MainProcess][DEBUG] Printing statistics for good programs of size 3
[   562.114][MainProcess][DEBUG] 	0: Counter({'natural_join3': 130485, 'filter': 95259, 'summarise': 25212, 'mutate': 584})
[   562.258][MainProcess][DEBUG] 	1: Counter({'filter': 84498, 'mutate': 67970, 'natural_join3': 48974, 'natural_join4': 31696, 'summarise': 18417})
[   562.415][MainProcess][DEBUG] 	2: Counter({'mutate': 105090, 'filter': 71793, 'summarise': 34288, 'natural_join3': 21294, 'natural_join4': 19108})
[   562.416][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param2, @param1, @param0), meansalary = mean(salary), aid, aname), meansalary > 1000 & meansalary >= 250000)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/aircraft.txt", col_types = cols(aid = col_integer(),aname = col_character(),crusingrange = col_integer()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/employees.txt", col_types = cols(eid = col_integer(),ename = col_character(),salary = col_integer()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/certified.txt", col_types = cols(eid = col_integer(),aid = col_integer()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/47.out", col_types = cols(aid = col_integer(),aname = col_character()))

df4 <- inner_join(input3, input2) %>% inner_join(input1)
df5 <- df4 %>% group_by(aid, aname) %>% summarise(meansalary = mean(salary)) %>% ungroup()
df6 <- df5 %>% filter(meansalary > 1000 & meansalary >= 250000)
out <- df6 %>% select(aid, aname) %>% arrange(aid)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT aid,
       aname
FROM
  (SELECT aid,
          aname,
          AVG(salary) AS meansalary
   FROM
     (SELECT LHS.eid AS eid,
             LHS.aid AS aid,
             LHS.ename AS ename,
             LHS.salary AS salary,
             RHS.aname AS aname,
             RHS.crusingrange AS crusingrange
      FROM
        (SELECT LHS.eid AS eid,
                LHS.aid AS aid,
                RHS.ename AS ename,
                RHS.salary AS salary
         FROM input3 AS LHS
         INNER JOIN input2 AS RHS ON (LHS.eid = RHS.eid)) AS LHS
      INNER JOIN input1 AS RHS ON (LHS.aid = RHS.aid))
   GROUP BY aid,
            aname)
WHERE (meansalary > 1000.0
       AND meansalary >= 250000.0)
ORDER BY aid
