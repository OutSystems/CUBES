[     1.592][MainProcess][INFO] Parsing specification...
[     1.596][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.596][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.597][MainProcess][DEBUG] Reading input files...
[     1.604][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4-1.txt: ['string', 'string']
[     1.610][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4-2.txt: ['string', 'string']
[     1.615][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4-3.txt: ['string', 'string']
[     1.620][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4.out: ['string']
[     1.652][MainProcess][DEBUG] Generating DSL...
[     1.676][MainProcess][INFO] Creating 16 processes
[     1.741][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.741][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.741][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.742][MainProcess][DEBUG] Increasing generator loc to 3
[     1.742][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.744][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.745][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.749][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.753][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.757][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.761][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.767][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.775][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.775][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.788][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     1.791][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.797][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.286][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.287][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.289][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.290][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.291][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.292][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.378][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.379][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.382][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.410][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.411][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.412][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.511][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.515][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.519][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.522][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.523][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.525][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.530][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     2.536][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.537][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.540][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.542][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.544][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.545][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.549][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     2.551][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     2.552][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = semi_join())
[     2.552][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = cross_join())
[     2.554][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.557][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = mutate())
[     2.558][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = inner_join())
[     2.559][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = anti_join(), l2 = filter())
[     2.562][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = union(), l2 = filter())
[     2.562][cube-solver-15][DEBUG] Solving cube (l0 = summarise([1]), l1 = left_join(), l2 = filter())
[     2.563][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.564][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = intersect(), l2 = filter())
[     2.566][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = semi_join(), l2 = filter())
[     2.567][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = cross_join(), l2 = filter())
[     2.569][cube-solver-15][DEBUG] Solving cube (l0 = summarise([1]), l1 = mutate(), l2 = filter())
[     2.571][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = inner_join(), l2 = filter())
[     2.571][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([1]))
[     2.572][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     2.574][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([1]))
[     2.576][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([1]))
[     2.576][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     2.577][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     2.580][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = natural_join())
[     2.580][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = natural_join3())
[     2.581][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = natural_join4())
[     2.581][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = summarise([1]))
[     2.585][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = filter())
[     2.585][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = anti_join())
[     2.585][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = left_join())
[     2.586][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise([1]))
[     2.587][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = union())
[     2.590][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = intersect())
[     2.590][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = cross_join())
[     2.590][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = semi_join())
[     2.592][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = mutate())
[     2.595][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise([1]))
[     2.595][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = inner_join())
[     2.595][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     2.595][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise([1]))
[     2.598][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     2.599][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise([1]))
[     2.599][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     2.600][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise([1]))
[     2.600][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     2.602][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise([1]))
[     2.603][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     2.604][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     2.604][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise([1]))
[     2.605][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise([1]))
[     2.606][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     2.606][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.607][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     2.608][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3())
[     2.610][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise([1]))
[     2.610][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join4())
[     2.610][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = filter())
[     2.612][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = anti_join())
[     2.613][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = left_join())
[     2.614][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = semi_join())
[     2.614][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = union())
[     2.614][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = intersect())
[     2.615][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = cross_join())
[     2.616][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[     2.617][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = inner_join())
[     2.617][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = summarise([1]))
[     2.618][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = mutate())
[     2.619][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([2]), l2 = filter())
[     2.619][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = summarise([2]))
[     2.621][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = mutate())
[     2.621][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter())
[     2.622][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([2]), l2 = filter())
[     2.622][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = summarise([2]))
[     2.625][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = mutate())
[     2.626][cube-solver-15][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter())
[     2.626][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = summarise([2]), l2 = filter())
[     2.626][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = summarise([2]))
[     2.628][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = mutate())
[     2.628][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter())
[     2.629][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([2]), l2 = filter())
[     2.631][cube-solver-15][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = summarise([2]))
[     2.632][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = mutate())
[     2.633][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([2]), l2 = filter())
[     2.633][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter())
[     2.633][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = summarise([2]))
[     2.636][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = mutate())
[     2.638][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([2]), l2 = filter())
[     2.638][cube-solver-15][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter())
[     2.638][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = summarise([2]))
[     2.640][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter())
[     2.640][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter())
[     2.640][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = mutate())
[     2.642][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter())
[     2.644][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter())
[     2.644][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([2]), l2 = filter())
[     2.645][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join())
[     2.646][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join4())
[     2.646][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join3())
[     2.646][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.650][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise([2]))
[     2.651][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = filter())
[     2.655][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = anti_join())
[     2.656][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = union())
[     2.657][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = left_join())
[     2.660][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = intersect())
[     2.660][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = semi_join())
[     2.663][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = mutate())
[     2.664][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = cross_join())
[     2.664][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = inner_join())
[     2.665][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter())
[     2.668][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([1]))
[     2.668][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([1]))
[     2.668][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([1]))
[     2.671][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([1]))
[     2.672][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([1]))
[     2.673][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([1]))
[     2.673][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([1]))
[     2.676][cube-solver-14][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([3]), l2 = filter([1]))
[     2.676][cube-solver-5][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([1]), l2 = summarise([3]))
[     2.678][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([1]), l2 = mutate())
[     2.679][cube-solver-14][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([1]))
[     2.681][MainProcess][DEBUG] Increasing generator loc to 4
[     2.681][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     2.683][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     2.684][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     2.796][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([7]), l2 = summarise([8]))
[     2.816][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     3.223][cube-solver-2][DEBUG] Solving cube (l0 = summarise([11]), l1 = natural_join3([2]), l2 = filter([13]))
[     3.431][cube-solver-0][DEBUG] Solving cube (l0 = summarise([15]), l1 = summarise([15]), l2 = filter([15]))
[     3.451][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     3.638][cube-solver-1][DEBUG] Solving cube (l0 = summarise([17]), l1 = natural_join4(), l2 = filter([15]))
[     3.642][cube-solver-3][DEBUG] Solving cube (l0 = summarise([17]), l1 = natural_join(), l2 = filter([15]))
[     3.655][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     3.668][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     4.031][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = natural_join(), l3 = filter([15]))
[     4.090][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = summarise([19]), l3 = filter([15]))
[     4.095][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = natural_join4(), l3 = filter([15]))
[     4.113][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = filter([15]), l3 = summarise([19]))
[     4.116][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = filter([15]), l3 = filter([15]))
[     4.137][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = filter([15]), l3 = anti_join())
[     4.138][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = filter([15]), l3 = left_join())
[     4.324][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = natural_join3([2]), l3 = filter([15]))
[     4.761][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([15]), l3 = natural_join([2]))
[     4.859][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     4.974][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([15]), l3 = natural_join4())
[     5.158][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([15]), l3 = natural_join3([2]))
[     6.279][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = union())
[     6.342][cube-solver-8][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     6.345][MainProcess][INFO] Statistics:
[     6.345][MainProcess][INFO] 	Generated cubes: 154
[     6.345][MainProcess][INFO] 	Attempted programs: 113
[     6.346][MainProcess][INFO] 		Rejected: 89
[     6.346][MainProcess][INFO] 		Failed: 23
[     6.346][MainProcess][INFO] 	Blacklist clauses: 40
[     6.346][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     6.348][MainProcess][DEBUG] 	0: Counter({'mutate': 1320, 'summarise': 568, 'natural_join3': 529})
[     6.349][MainProcess][DEBUG] 	1: Counter({'filter': 811, 'natural_join3': 677, 'natural_join4': 400, 'summarise': 329, 'mutate': 200})
[     6.350][MainProcess][DEBUG] 	2: Counter({'filter': 1606, 'natural_join4': 503, 'natural_join3': 308})
[     6.350][MainProcess][DEBUG] Printing statistics for good programs of size 4
[     6.351][MainProcess][DEBUG] 	0: Counter({'natural_join': 649})
[     6.351][MainProcess][DEBUG] 	1: Counter({'summarise': 649})
[     6.352][MainProcess][DEBUG] 	2: Counter({'filter': 347, 'natural_join': 186, 'natural_join3': 116})
[     6.352][MainProcess][DEBUG] 	3: Counter({'filter': 302, 'left_join': 140, 'natural_join': 106, 'natural_join4': 100, 'union': 1})
[     6.352][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param2, @param1, @param0), n = n(), S_name, meets_at), n == 2)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/4-1.txt", col_types = cols(C_name = col_character(),meets_at = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/4-2.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/4-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/4.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input3, input2) %>% inner_join(input1)
df5 <- df4 %>% group_by(S_name, meets_at) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n == 2)
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT S_name,
          meets_at,
          COUNT() AS n
   FROM
     (SELECT LHS.S_key AS S_key,
             LHS.S_name AS S_name,
             LHS.C_name AS C_name,
             RHS.meets_at AS meets_at
      FROM
        (SELECT LHS.S_key AS S_key,
                LHS.S_name AS S_name,
                RHS.C_name AS C_name
         FROM input3 AS LHS
         INNER JOIN input2 AS RHS ON (LHS.S_key = RHS.S_key)) AS LHS
      INNER JOIN input1 AS RHS ON (LHS.C_name = RHS.C_name))
   GROUP BY S_name,
            meets_at)
WHERE (n = 2.0)
ORDER BY S_name
