[     1.556][MainProcess][INFO] Parsing specification...
[     1.583][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.583][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.583][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.584][MainProcess][DEBUG] Reading input files...
[     1.593][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/aircraft.txt: ['int64', 'string', 'int64']
[     1.595][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/certified.txt: ['int64', 'int64']
[     1.600][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/25.out: ['int64']
[     1.628][MainProcess][DEBUG] Generating DSL...
[     2.670][MainProcess][INFO] Creating 16 processes
[     2.750][MainProcess][DEBUG] Increasing generator loc to 4
[     4.016][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     4.022][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     4.037][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     4.037][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     4.037][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     4.040][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     4.042][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     4.054][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     4.057][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[     4.058][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     4.065][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     4.067][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     4.071][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     4.080][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     4.148][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     4.154][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[   146.176][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = summarise(), l3 = filter())
[   146.202][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter(), l3 = mutate())
[   146.635][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise(), l3 = summarise())
[   146.797][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise(), l3 = mutate())
[   147.082][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter(), l3 = summarise())
[   147.357][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = mutate(), l3 = filter())
[   163.557][cube-solver-7][WARNING] There is no solution for current loc (3).
[   163.558][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[   163.703][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[   164.395][cube-solver-1][WARNING] There is no solution for current loc (3).
[   164.396][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[   164.491][cube-solver-3][WARNING] There is no solution for current loc (3).
[   164.492][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter())
[   164.554][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[   164.645][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[   164.672][cube-solver-8][WARNING] There is no solution for current loc (3).
[   164.673][cube-solver-8][DEBUG] Solving cube (l0 = mutate(), l1 = summarise(), l2 = filter())
[   164.895][cube-solver-5][WARNING] There is no solution for current loc (3).
[   164.896][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = mutate())
[   164.928][cube-solver-8][DEBUG] Initialising process for 4 lines of code.
[   164.935][cube-solver-4][WARNING] There is no solution for current loc (3).
[   164.935][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = summarise())
[   164.960][cube-solver-6][WARNING] There is no solution for current loc (3).
[   164.961][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise())
[   164.992][cube-solver-0][WARNING] There is no solution for current loc (3).
[   164.993][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[   165.065][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[   165.119][cube-solver-10][WARNING] There is no solution for current loc (3).
[   165.120][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = mutate())
[   165.238][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[   165.259][cube-solver-6][DEBUG] Initialising process for 4 lines of code.
[   165.281][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[   165.313][cube-solver-2][WARNING] There is no solution for current loc (3).
[   165.314][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[   165.399][cube-solver-10][DEBUG] Initialising process for 4 lines of code.
[   165.567][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[   165.936][cube-solver-11][WARNING] There is no solution for current loc (3).
[   165.936][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter())
[   166.080][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[   166.327][cube-solver-9][WARNING] There is no solution for current loc (3).
[   166.327][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise())
[   166.474][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[   189.592][cube-solver-12][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate(), l3 = summarise())
[   189.959][cube-solver-12][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate(), l3 = mutate())
[   190.176][cube-solver-12][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = summarise(), l3 = filter())
[   190.390][cube-solver-12][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter(), l3 = summarise())
[   190.644][cube-solver-12][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter(), l3 = mutate())
[   190.856][cube-solver-12][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = mutate(), l3 = filter())
[   191.079][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = summarise(), l3 = filter())
[   191.290][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter(), l3 = summarise())
[   191.524][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter(), l3 = mutate())
[   191.745][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = mutate(), l3 = filter())
[   191.966][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise(), l3 = summarise())
[   192.190][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise(), l3 = mutate())
[   192.428][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate(), l3 = summarise())
[   192.663][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate(), l3 = mutate())
[   192.905][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = summarise(), l3 = filter())
[   193.157][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter(), l3 = summarise())
[   193.402][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter(), l3 = mutate())
[   193.654][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = mutate(), l3 = filter())
[   193.901][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = summarise(), l3 = filter())
[   326.739][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = summarise([42]), l3 = filter())
[   326.747][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter(), l3 = summarise([42]))
[   327.004][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate(), l3 = mutate())
[   327.131][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter(), l3 = mutate())
[   327.372][cube-solver-6][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([42]), l2 = summarise([42]), l3 = filter())
[   327.455][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([42]), l2 = mutate(), l3 = filter())
[   327.588][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate(), l3 = summarise([42]))
[   327.635][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([42]), l2 = filter(), l3 = mutate())
[   328.054][cube-solver-6][DEBUG] Solving cube (l0 = summarise([42]), l1 = natural_join(), l2 = filter(), l3 = summarise([42]))
[   328.287][cube-solver-2][DEBUG] Solving cube (l0 = summarise([42]), l1 = natural_join(), l2 = filter(), l3 = mutate())
[   328.364][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([42]), l2 = filter(), l3 = summarise([42]))
[   328.497][cube-solver-10][DEBUG] Solving cube (l0 = summarise([42]), l1 = natural_join(), l2 = mutate(), l3 = filter())
[   328.768][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise([42]), l3 = mutate())
[   329.106][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = mutate(), l3 = filter())
[   329.375][cube-solver-0][DEBUG] Solving cube (l0 = summarise([42]), l1 = natural_join3(), l2 = summarise([42]), l3 = filter())
[   329.470][cube-solver-9][DEBUG] Solving cube (l0 = summarise([42]), l1 = natural_join3(), l2 = filter(), l3 = summarise([42]))
[   330.028][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise([42]), l3 = summarise([42]))
[   330.599][cube-solver-11][DEBUG] Solving cube (l0 = summarise([42]), l1 = natural_join3(), l2 = filter(), l3 = mutate())
[   335.257][cube-solver-1][DEBUG] Solving cube (l0 = summarise([42]), l1 = natural_join3(), l2 = mutate(), l3 = filter())
[   376.676][cube-solver-11][DEBUG] Found solution with cube (l0 = summarise([42]), l1 = natural_join3(), l2 = filter(), l3 = mutate())
[   376.680][MainProcess][INFO] Statistics:
[   376.680][MainProcess][INFO] 	Generated cubes: 56
[   376.680][MainProcess][INFO] 	Attempted programs: 692
[   376.680][MainProcess][INFO] 		Rejected: 513
[   376.681][MainProcess][INFO] 		Failed: 178
[   376.681][MainProcess][INFO] 	Blacklist clauses: 42
[   376.681][MainProcess][DEBUG] Printing statistics for good programs of size 4
[   376.702][MainProcess][DEBUG] 	0: Counter({'natural_join': 27683, 'summarise': 9190})
[   376.720][MainProcess][DEBUG] 	1: Counter({'summarise': 16314, 'mutate': 7550, 'natural_join3': 7235, 'filter': 3820, 'natural_join': 1956})
[   376.735][MainProcess][DEBUG] 	2: Counter({'filter': 18226, 'mutate': 16080, 'summarise': 2570})
[   376.752][MainProcess][DEBUG] 	3: Counter({'mutate': 15017, 'filter': 14831, 'summarise': 7030})
[   376.752][MainProcess][INFO] Solution found: mutate(filter(natural_join3(@param1, summarise(@param1, n = n(), eid), @param0), n > 3 | n == crusingrange), crusingrange = max(crusingrange))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/aircraft.txt", col_types = cols(aid = col_integer(),aname = col_character(),crusingrange = col_integer()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/certified.txt", col_types = cols(eid = col_integer(),aid = col_integer()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/55-tests/tables/25.out", col_types = cols(eid = col_integer()))

df3 <- input2 %>% group_by(eid) %>% summarise(n = n()) %>% ungroup()
df4 <- inner_join(input2, df3) %>% inner_join(input1)
df5 <- df4 %>% filter(n > 3 | n == crusingrange)
df6 <- df5 %>% mutate(crusingrange = max(crusingrange))
out <- df6 %>% select(eid) %>% distinct() %>% arrange(eid)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT eid
FROM
  (SELECT LHS.eid AS eid,
          LHS.aid AS aid,
          LHS.n AS n,
          RHS.aname AS aname,
          RHS.crusingrange AS crusingrange
   FROM
     (SELECT LHS.eid AS eid,
             LHS.aid AS aid,
             RHS.n AS n
      FROM input2 AS LHS
      INNER JOIN
        (SELECT eid,
                COUNT() AS n
         FROM input2
         GROUP BY eid) AS RHS ON (LHS.eid = RHS.eid)) AS LHS
   INNER JOIN input1 AS RHS ON (LHS.aid = RHS.aid))
WHERE (n > 3.0
       OR n = crusingrange)
ORDER BY eid
