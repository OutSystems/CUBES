[     1.661][MainProcess][INFO] Parsing specification...
[     1.665][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.665][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.666][MainProcess][DEBUG] Reading input files...
[     1.674][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i008_1.csv: ['int64', 'string', 'string']
[     1.680][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i008_2.csv: ['string', 'int64', 'int64', 'string']
[     1.686][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o008.csv: ['string', 'int64', 'string']
[     1.717][MainProcess][DEBUG] Generating DSL...
[     1.740][MainProcess][INFO] Creating 16 processes
[     1.799][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     1.798][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.798][MainProcess][DEBUG] Increasing generator loc to 2
[     1.800][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.800][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.800][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     1.802][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     1.805][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     1.811][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     1.812][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     1.813][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     1.819][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     1.821][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     1.827][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     1.839][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     1.846][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     1.851][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     2.150][cube-solver-0][WARNING] There is no solution for current loc (1).
[     2.150][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     2.152][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.169][cube-solver-1][WARNING] There is no solution for current loc (1).
[     2.169][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     2.171][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     2.216][cube-solver-5][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate())
[     2.219][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = mutate())
[     2.221][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join())
[     2.225][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join())
[     2.231][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4())
[     2.232][cube-solver-11][DEBUG] Solving cube (l0 = summarise(), l1 = summarise())
[     2.235][cube-solver-11][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise())
[     2.236][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate())
[     2.243][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = anti_join())
[     2.250][cube-solver-15][DEBUG] Solving cube (l0 = summarise([3]), l1 = intersect())
[     2.254][cube-solver-7][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate())
[     2.257][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([3]))
[     2.258][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([3]))
[     2.265][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = mutate())
[     2.279][cube-solver-9][DEBUG] Solving cube (l0 = summarise([9]), l1 = natural_join3())
[     2.279][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([9]))
[     2.290][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([11]))
[     2.292][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = summarise([11]))
[     2.307][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate())
[     2.311][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = mutate())
[     2.340][cube-solver-4][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([11]))
[     2.341][cube-solver-3][DEBUG] Solving cube (l0 = intersect(), l1 = mutate())
[     2.515][cube-solver-13][DEBUG] Solving cube (l0 = summarise([14]), l1 = left_join())
[     2.519][cube-solver-14][DEBUG] Solving cube (l0 = summarise([14]), l1 = union())
[     2.640][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([17]))
[     2.691][cube-solver-1][DEBUG] Solving cube (l0 = summarise([19]), l1 = cross_join())
[     2.747][cube-solver-0][DEBUG] Solving cube (l0 = summarise([19]), l1 = semi_join())
[     2.813][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate())
[     2.840][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([20]))
[     3.808][cube-solver-2][DEBUG] Found solution with cube (l0 = natural_join(), l1 = summarise([11]))
[     3.810][MainProcess][INFO] Statistics:
[     3.811][MainProcess][INFO] 	Generated cubes: 31
[     3.811][MainProcess][INFO] 	Attempted programs: 65
[     3.811][MainProcess][INFO] 		Rejected: 0
[     3.811][MainProcess][INFO] 		Failed: 64
[     3.811][MainProcess][INFO] 	Blacklist clauses: 72
[     3.811][MainProcess][DEBUG] Printing statistics for good programs of size 2
[     3.812][MainProcess][DEBUG] 	0: Counter({'summarise': 941, 'union': 174, 'left_join': 138, 'semi_join': 136, 'natural_join': 135, 'anti_join': 80})
[     3.813][MainProcess][DEBUG] 	1: Counter({'summarise': 663, 'natural_join': 183, 'natural_join3': 178, 'inner_join': 159, 'union': 152, 'left_join': 150, 'semi_join': 119})
[     3.813][MainProcess][INFO] Solution found: summarise(natural_join(@param0, @param1), all$first, OrderGUID, Quantity)
[     4.126][cube-solver-9][DEBUG] Found solution with cube (l0 = summarise([9]), l1 = natural_join3())
[     4.407][cube-solver-7][DEBUG] Found solution with cube (l0 = left_join(), l1 = summarise([3]))
[     5.301][MainProcess][ERROR] Error while trying to convert R code to SQL.

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i008_1.csv", col_types = cols(OrderID = col_integer(),OrderGUID = col_character(),OrderNumber = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i008_2.csv", col_types = cols(LineItemGUID = col_character(),OrderID = col_integer(),Quantity = col_integer(),Description = col_character()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o008.csv", col_types = cols(OrderNumber = col_character(),Quantity = col_integer(),Description = col_character()))

df3 <- inner_join(input1, input2)
df4 <- df3 %>% group_by(OrderGUID, Quantity) %>% summarise_all(first) %>% ungroup()
out <- df4 %>% select(OrderNumber, Quantity, Description) %>% arrange(OrderNumber)

Failed to generate SQL query
