[     1.656][MainProcess][INFO] Parsing specification...
[     1.669][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.669][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.670][MainProcess][DEBUG] Reading input files...
[     1.679][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i013.csv: ['string', 'int64']
[     1.694][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o013.csv: ['string', 'int64', 'int64']
[     1.725][MainProcess][DEBUG] Generating DSL...
[     1.743][MainProcess][INFO] Creating 16 processes
[     1.806][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.807][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.807][MainProcess][DEBUG] Increasing generator loc to 3
[     1.807][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.807][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.808][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.808][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.808][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.809][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.815][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.818][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.820][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.836][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.837][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.839][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.844][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.858][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.067][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.069][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.194][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.262][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.267][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     2.270][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     2.272][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.273][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.275][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.277][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.289][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.291][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.292][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.292][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.293][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.294][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.295][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.297][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.314][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([1]), l2 = summarise())
[     2.319][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = left_join())
[     2.319][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter([1]))
[     2.324][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = union())
[     2.327][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([1]), l2 = summarise())
[     2.331][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = intersect())
[     2.431][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([3]))
[     2.437][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = filter([3]), l2 = semi_join())
[     2.583][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter([4]))
[     2.590][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter([4]), l2 = cross_join())
[     2.598][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter([4]))
[     2.602][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([4]), l2 = mutate())
[     2.623][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([4]))
[     2.629][cube-solver-11][DEBUG] Solving cube (l0 = summarise(), l1 = filter([4]), l2 = inner_join())
[     2.716][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter([4]))
[     2.723][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = summarise())
[     2.729][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter([4]))
[     2.965][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = filter([5]), l2 = filter([5]))
[     2.973][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     3.008][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     3.327][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter([5]))
[     3.396][cube-solver-7][DEBUG] Found solution with cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     3.397][MainProcess][INFO] Statistics:
[     3.398][MainProcess][INFO] 	Generated cubes: 37
[     3.398][MainProcess][INFO] 	Attempted programs: 64
[     3.398][MainProcess][INFO] 		Rejected: 40
[     3.398][MainProcess][INFO] 		Failed: 23
[     3.398][MainProcess][INFO] 	Blacklist clauses: 5
[     3.398][MainProcess][DEBUG] Printing statistics for good programs of size 2
[     3.398][MainProcess][DEBUG] 	0: Counter({'mutate': 60, 'summarise': 60})
[     3.399][MainProcess][DEBUG] 	1: Counter({'filter': 120})
[     3.399][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     3.399][MainProcess][DEBUG] 	0: Counter({'summarise': 628})
[     3.400][MainProcess][DEBUG] 	1: Counter({'filter': 573, 'natural_join': 42, 'anti_join': 13})
[     3.400][MainProcess][DEBUG] 	2: Counter({'filter': 78, 'union': 68, 'natural_join3': 64, 'left_join': 64, 'semi_join': 60, 'mutate': 60, 'inner_join': 58, 'cross_join': 54, 'anti_join': 45, 'natural_join': 39, 'summarise': 38})
[     3.400][MainProcess][INFO] Solution found: natural_join(@param0, filter(summarise(@param0, n = n(), orgName), n > 1))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i013.csv", col_types = cols(orgName = col_character(),id = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o013.csv", col_types = cols(orgName = col_character(),n = col_integer(),id = col_integer()))

df2 <- input1 %>% group_by(orgName) %>% summarise(n = n()) %>% ungroup()
df3 <- df2 %>% filter(n > 1)
df4 <- inner_join(input1, df3)
out <- df4 %>% select(orgName, n, id) %>% arrange(orgName)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT orgName,
       n,
       id
FROM
  (SELECT LHS.orgName AS orgName,
          LHS.id AS id,
          RHS.n AS n
   FROM input1 AS LHS
   INNER JOIN
     (SELECT *
      FROM
        (SELECT orgName,
                COUNT() AS n
         FROM input1
         GROUP BY orgName)
      WHERE (n > 1.0)) AS RHS ON (LHS.orgName = RHS.orgName))
ORDER BY orgName
