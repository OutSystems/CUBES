[     1.610][MainProcess][INFO] Parsing specification...
[     1.624][MainProcess][DEBUG] Reading input files...
[     1.632][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i022.csv: ['int64', 'int64']
[     1.636][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o022.csv: ['int64']
[     1.663][MainProcess][DEBUG] Generating DSL...
[     1.825][MainProcess][INFO] Creating 16 processes
[     1.883][MainProcess][DEBUG] Increasing generator loc to 2
[     2.009][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.009][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     2.014][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     2.019][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     2.021][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     2.024][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     2.027][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     2.035][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     2.038][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     2.040][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     2.040][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     2.048][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     2.052][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     2.053][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     2.056][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     2.090][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     5.098][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     5.100][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     5.162][cube-solver-1][DEBUG] Found solution with cube (l0 = mutate(),)
[     5.163][MainProcess][INFO] Statistics:
[     5.163][MainProcess][INFO] 	Generated cubes: 16
[     5.163][MainProcess][INFO] 	Attempted programs: 1
[     5.163][MainProcess][INFO] 		Rejected: 0
[     5.164][MainProcess][INFO] 		Failed: 0
[     5.164][MainProcess][INFO] 	Blacklist clauses: 0
[     5.164][MainProcess][DEBUG] Printing statistics for good programs of size 1
[     5.164][MainProcess][DEBUG] 	0: Counter({'mutate': 6, 'summarise': 4})
[     5.164][MainProcess][INFO] Solution found: mutate(@param0, medianval = median(val))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i022.csv", col_types = cols(id = col_integer(),val = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o022.csv", col_types = cols(median = col_integer()))

df2 <- input1 %>% mutate(medianval = median(val))
out <- df2 %>% select(median = medianval) %>% distinct() %>% arrange(median)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT PERCENTILE_CONT(0.5) WITHIN GROUP (
                                                   ORDER BY val) OVER () AS median
FROM input1
ORDER BY median
