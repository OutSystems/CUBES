[     1.580][MainProcess][INFO] Parsing specification...
[     1.604][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.604][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.605][MainProcess][DEBUG] Reading input files...
[     1.615][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i032.csv: ['string', 'string', 'int64']
[     1.620][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o032.csv: ['string', 'int64', 'int64']
[     1.647][MainProcess][DEBUG] Generating DSL...
[     1.661][MainProcess][INFO] Creating 16 processes
[     1.733][MainProcess][DEBUG] Increasing generator loc to 2
[     1.733][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.733][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.734][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.734][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     1.734][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     1.734][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     1.734][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     1.734][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     1.734][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.738][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     1.739][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     1.743][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     1.756][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     1.757][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     1.759][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     1.773][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     1.860][cube-solver-0][DEBUG] Solving cube (l0 = filter(),)
[     1.881][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = intersect())
[     1.893][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = union())
[     1.894][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4())
[     1.895][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = inner_join())
[     1.897][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = filter())
[     2.006][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = left_join())
[     2.012][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = semi_join())
[     2.018][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter())
[     2.018][cube-solver-8][DEBUG] Solving cube (l0 = filter(), l1 = anti_join())
[     2.019][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = filter())
[     2.019][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter())
[     2.020][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter())
[     2.021][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = filter())
[     2.022][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = filter())
[     2.023][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = filter())
[     2.024][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3())
[     2.024][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join())
[     2.027][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = filter())
[     2.041][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = cross_join())
[     2.055][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = filter())
[     2.059][cube-solver-15][DEBUG] Solving cube (l0 = inner_join(), l1 = filter())
[     2.486][MainProcess][DEBUG] Increasing generator loc to 3
[     2.487][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.820][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = natural_join())
[     2.822][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = natural_join3())
[     2.824][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = natural_join4())
[     2.825][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = filter())
[     2.827][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = anti_join())
[     2.828][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = left_join())
[     2.829][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = union())
[     2.831][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = intersect())
[     2.832][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = semi_join())
[     2.833][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = cross_join())
[     2.834][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = inner_join())
[     2.836][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join(), l2 = filter())
[     2.837][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = filter())
[     2.839][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = union(), l2 = filter())
[     2.840][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = intersect(), l2 = filter())
[     2.841][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = semi_join(), l2 = filter())
[     2.843][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = cross_join(), l2 = filter())
[     2.844][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = inner_join(), l2 = filter())
[     2.845][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join(), l2 = filter())
[     2.847][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join3(), l2 = filter())
[     2.848][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join4(), l2 = filter())
[     2.850][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = natural_join())
[     2.851][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = natural_join3())
[     2.852][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = natural_join4())
[     2.854][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = filter())
[     2.855][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = anti_join())
[     2.856][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = left_join())
[     2.858][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = union())
[     2.859][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = intersect())
[     2.860][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = semi_join())
[     2.861][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = cross_join())
[     2.863][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = inner_join())
[     2.864][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = anti_join(), l2 = filter())
[     2.866][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = left_join(), l2 = filter())
[     2.867][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = union(), l2 = filter())
[     2.868][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = intersect(), l2 = filter())
[     2.870][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = semi_join(), l2 = filter())
[     2.871][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = cross_join(), l2 = filter())
[     2.872][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = inner_join(), l2 = filter())
[     2.874][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join(), l2 = filter())
[     2.875][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join3(), l2 = filter())
[     2.877][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join4(), l2 = filter())
[     2.878][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = natural_join())
[     2.879][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = natural_join3())
[     2.881][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = natural_join4())
[     2.882][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = filter())
[     2.883][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = anti_join())
[     2.884][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = left_join())
[     2.886][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = union())
[     2.887][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = intersect())
[     2.888][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = semi_join())
[     2.890][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = cross_join())
[     2.891][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = inner_join())
[     2.892][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = anti_join(), l2 = filter())
[     2.894][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = left_join(), l2 = filter())
[     2.895][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = union(), l2 = filter())
[     2.897][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = intersect(), l2 = filter())
[     2.897][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.898][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = cross_join(), l2 = filter())
[     2.900][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = inner_join(), l2 = filter())
[     2.901][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join(), l2 = filter())
[     2.902][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join3(), l2 = filter())
[     2.904][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join4(), l2 = filter())
[     2.905][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = filter())
[     3.116][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     3.212][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = semi_join(), l2 = filter())
[     3.215][cube-solver-0][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = left_join())
[     3.217][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     3.283][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     3.324][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     3.385][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = anti_join())
[     3.387][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = cross_join())
[     3.560][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = union())
[     3.567][cube-solver-3][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = intersect())
[     3.591][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = semi_join())
[     4.069][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     4.431][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = inner_join())
[     4.814][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     4.865][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     4.939][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     5.099][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = natural_join())
[     5.169][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = natural_join3())
[     5.174][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = filter())
[     5.177][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = anti_join())
[     5.180][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = left_join())
[     5.182][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = union())
[     5.185][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = intersect())
[     5.188][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = semi_join())
[     5.190][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = cross_join())
[     5.193][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = inner_join())
[     5.195][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = natural_join())
[     5.198][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = natural_join3())
[     5.200][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = natural_join4())
[     5.203][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = filter())
[     5.205][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = anti_join())
[     5.208][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = left_join())
[     5.210][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = union())
[     5.213][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = intersect())
[     5.215][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = semi_join())
[     5.218][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = cross_join())
[     5.220][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = inner_join())
[     5.222][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = natural_join())
[     5.225][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = natural_join3())
[     5.227][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = natural_join4())
[     5.230][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = natural_join())
[     5.235][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = natural_join4())
[     5.239][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = natural_join3())
[     9.315][cube-solver-3][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = natural_join4())
[     9.317][cube-solver-3][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = filter())
[    11.912][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = anti_join())
[    12.180][cube-solver-0][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = left_join())
[    12.509][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = union())
[    12.543][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = intersect())
[    13.875][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[    14.166][cube-solver-8][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = semi_join())
[    15.789][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[    16.161][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = cross_join())
[    32.171][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = inner_join())
[    76.920][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[    77.320][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = natural_join())
[    79.113][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = natural_join3())
[    79.115][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = natural_join4())
[    79.118][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = filter())
[    91.913][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = anti_join())
[    91.915][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = left_join())
[   114.342][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = union())
[   115.181][cube-solver-0][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = intersect())
[   116.863][cube-solver-8][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = semi_join())
[   124.757][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = cross_join([1]))
[   126.967][cube-solver-2][DEBUG] Found solution with cube (l0 = filter(), l1 = filter(), l2 = inner_join())
[   126.969][MainProcess][INFO] Statistics:
[   126.970][MainProcess][INFO] 	Generated cubes: 139
[   126.970][MainProcess][INFO] 	Attempted programs: 8551
[   126.970][MainProcess][INFO] 		Rejected: 7204
[   126.970][MainProcess][INFO] 		Failed: 1346
[   126.970][MainProcess][INFO] 	Blacklist clauses: 1
[   126.970][MainProcess][DEBUG] Printing statistics for good programs of size 1
[   126.971][MainProcess][DEBUG] 	0: Counter({'filter': 96})
[   126.971][MainProcess][DEBUG] Printing statistics for good programs of size 2
[   127.040][MainProcess][DEBUG] 	0: Counter({'filter': 36871, 'cross_join': 16669, 'inner_join': 9792, 'left_join': 96, 'union': 96, 'semi_join': 96})
[   127.074][MainProcess][DEBUG] 	1: Counter({'filter': 28381, 'cross_join': 16531, 'inner_join': 16308, 'anti_join': 1344, 'union': 288, 'left_join': 288, 'semi_join': 288, 'natural_join': 192})
[   127.074][MainProcess][DEBUG] Printing statistics for good programs of size 3
[   127.114][MainProcess][DEBUG] 	0: Counter({'filter': 166787})
[   127.154][MainProcess][DEBUG] 	1: Counter({'filter': 110583, 'natural_join': 38754, 'anti_join': 17454})
[   127.194][MainProcess][DEBUG] 	2: Counter({'cross_join': 30799, 'inner_join': 28031, 'filter': 21820, 'left_join': 16333, 'natural_join': 15936, 'union': 13804, 'natural_join3': 13573, 'semi_join': 13497, 'anti_join': 13002})
[   127.194][MainProcess][INFO] Solution found: inner_join(filter(@param0, Status != 'Active'), filter(@param0, Status == 'Active' & Status != 'Inactive'), 'Section' = 'Section','Status' = 'Section')

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i032.csv", col_types = cols(Section = col_character(),Status = col_character(),Count = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o032.csv", col_types = cols(Section = col_character(),Count = col_integer(),Count.other = col_integer()))

df2 <- input1 %>% filter(Status != 'Active')
df3 <- input1 %>% filter(Status == 'Active' & Status != 'Inactive')
df4 <- inner_join(df2, df3, by=c('Section' = 'Section','Status' = 'Section'), suffix = c('', '.other'))
out <- df4 %>% select(Section, Count = Count.other, Count.other = Count) %>% arrange(Section)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `Section`,
       `Count.other` AS `Count`,
       `Count` AS `Count.other`
FROM
  (SELECT `LHS`.`Section` AS `Section`,
          `LHS`.`Status` AS `Status`,
          `LHS`.`Count` AS `Count`,
          `RHS`.`Status` AS `Status.other`,
          `RHS`.`Count` AS `Count.other`
   FROM
     (SELECT *
      FROM `input1`
      WHERE (`Status` != 'Active')) AS `LHS`
   INNER JOIN
     (SELECT *
      FROM `input1`
      WHERE (`Status` = 'Active'
             AND `Status` != 'Inactive')) AS RHS ON (LHS.Section = RHS.Section))
ORDER BY SECTION
