[     1.613][MainProcess][INFO] Parsing specification...
[     1.624][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.624][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.625][MainProcess][DEBUG] Reading input files...
[     1.637][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i021.csv: ['int64', 'int64', 'string', 'datetime64[ns]']
[     1.645][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o021.csv: ['int64', 'string', 'datetime64[ns]']
[     1.681][MainProcess][DEBUG] Generating DSL...
[     1.856][MainProcess][INFO] Creating 16 processes
[     1.925][MainProcess][DEBUG] Increasing generator loc to 2
[     2.053][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     2.053][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     2.057][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     2.062][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.068][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     2.069][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     2.082][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     2.083][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     2.087][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     2.089][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     2.092][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     2.096][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     2.110][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     2.127][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     2.178][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     2.185][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     5.146][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     5.153][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     5.687][cube-solver-0][DEBUG] Found solution with cube (l0 = summarise(),)
[     5.688][MainProcess][INFO] Statistics:
[     5.689][MainProcess][INFO] 	Generated cubes: 16
[     5.689][MainProcess][INFO] 	Attempted programs: 8
[     5.689][MainProcess][INFO] 		Rejected: 7
[     5.689][MainProcess][INFO] 		Failed: 0
[     5.689][MainProcess][INFO] 	Blacklist clauses: 0
[     5.689][MainProcess][DEBUG] Printing statistics for good programs of size 1
[     5.689][MainProcess][DEBUG] 	0: Counter({'mutate': 70, 'summarise': 61})
[     5.690][MainProcess][INFO] Solution found: summarise(@param0, maxSERVICEMONTH = max(SERVICEMONTH), CHARGEID, CHARGETYPE)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i021.csv", col_types = cols(ID = col_integer(),CHARGEID = col_integer(),CHARGETYPE = col_character(),SERVICEMONTH = col_character()))
input1$SERVICEMONTH <- mdy(input1$SERVICEMONTH)
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o021.csv", col_types = cols(CHARGEID = col_integer(),CHARGETYPE = col_character(),maxSERVICEMONTH = col_character()))
expected_output$maxSERVICEMONTH <- mdy(expected_output$maxSERVICEMONTH)

df2 <- input1 %>% group_by(CHARGEID, CHARGETYPE) %>% summarise(maxSERVICEMONTH = max(SERVICEMONTH)) %>% ungroup()
out <- df2 %>% select(CHARGEID, CHARGETYPE, maxSERVICEMONTH) %>% arrange(CHARGEID)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT CHARGEID,
       CHARGETYPE,
       maxSERVICEMONTH
FROM
  (SELECT CHARGEID,
          CHARGETYPE,
          MAX(SERVICEMONTH) AS maxSERVICEMONTH
   FROM input1
   GROUP BY CHARGEID,
            CHARGETYPE)
ORDER BY CHARGEID
