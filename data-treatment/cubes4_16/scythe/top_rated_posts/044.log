[     3.108][MainProcess][INFO] Parsing specification...
[     3.128][MainProcess][DEBUG] Reading input files...
[     3.159][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i044.csv: ['int64', 'int64']
[     3.174][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o044.csv: ['int64', 'int64', 'int64']
[     3.207][MainProcess][DEBUG] Generating DSL...
[     3.381][MainProcess][INFO] Creating 16 processes
[     3.443][MainProcess][DEBUG] Increasing generator loc to 2
[     3.571][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.576][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     3.578][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     3.583][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     3.584][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     3.588][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.588][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     3.595][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     3.596][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     3.613][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     3.615][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     3.618][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     3.619][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     3.627][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     3.708][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     3.741][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     6.707][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     6.724][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     6.774][cube-solver-1][DEBUG] Found solution with cube (l0 = mutate(),)
[     6.776][MainProcess][INFO] Statistics:
[     6.776][MainProcess][INFO] 	Generated cubes: 16
[     6.776][MainProcess][INFO] 	Attempted programs: 1
[     6.776][MainProcess][INFO] 		Rejected: 0
[     6.776][MainProcess][INFO] 		Failed: 0
[     6.776][MainProcess][INFO] 	Blacklist clauses: 0
[     6.776][MainProcess][DEBUG] Printing statistics for good programs of size 1
[     6.777][MainProcess][DEBUG] 	0: Counter({'mutate': 1, 'summarise': 1})
[     6.777][MainProcess][INFO] Solution found: mutate(@param0, cumsumcount = cumsum(count))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i044.csv", col_types = cols(id = col_integer(),count = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o044.csv", col_types = cols(id = col_integer(),count = col_integer(),sumcount = col_integer()))

df2 <- input1 %>% mutate(cumsumcount = cumsum(count))
out <- df2 %>% select(id, count, sumcount = cumsumcount) %>% arrange(id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT id,
       COUNT,
       SUM(COUNT) OVER (ROWS UNBOUNDED PRECEDING) AS sumcount
FROM input1
ORDER BY id
