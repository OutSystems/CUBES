[     3.455][MainProcess][INFO] Parsing specification...
[     3.489][MainProcess][DEBUG] Reading input files...
[     3.501][MainProcess][INFO] Inferred data types for table tests-examples/leetcode/tables/180.csv: ['int64', 'int64']
[     3.506][MainProcess][INFO] Inferred data types for table tests-examples/leetcode/tables/180_o.csv: ['int64']
[     3.545][MainProcess][DEBUG] Generating DSL...
[     4.477][MainProcess][INFO] Creating 16 processes
[     4.554][MainProcess][DEBUG] Increasing generator loc to 3
[     5.654][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     5.657][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     5.667][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     5.671][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     5.680][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     5.684][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     5.688][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     5.690][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     5.695][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     5.696][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     5.696][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     5.701][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     5.707][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     5.713][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     5.721][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     5.740][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[    62.125][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = mutate())
[    62.557][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[    62.657][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = summarise())
[    62.860][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[    62.972][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = mutate())
[    63.330][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([1]))
[    63.534][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[    63.947][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[    94.135][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = summarise([2]))
[    94.335][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([2]), l2 = summarise([2]))
[    94.419][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = natural_join4(), l2 = summarise([2]))
[    94.430][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = mutate())
[    94.559][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = natural_join4(), l2 = mutate())
[    94.643][cube-solver-8][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = natural_join())
[    94.748][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = natural_join3())
[    94.758][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = natural_join4())
[    94.877][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([2]), l2 = summarise([2]))
[    94.899][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = summarise([2]))
[    95.038][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = filter())
[    95.180][cube-solver-4][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = anti_join())
[    95.199][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = left_join())
[    95.930][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = summarise([2]))
[    96.395][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = union())
[    96.568][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = summarise([2]))
[    96.601][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = mutate())
[    96.724][cube-solver-8][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = intersect())
[    96.861][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([2]), l2 = mutate())
[    96.886][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([2]), l2 = mutate())
[    96.965][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = mutate())
[    96.974][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([2]), l2 = summarise([2]))
[    96.980][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([2]), l2 = mutate())
[    97.060][cube-solver-14][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = semi_join())
[    97.153][cube-solver-11][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = cross_join())
[    97.438][cube-solver-15][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = inner_join())
[    97.453][cube-solver-13][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = mutate())
[    97.518][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = mutate())
[    97.608][cube-solver-5][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = summarise([2]))
[    97.640][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = anti_join(), l2 = summarise([2]))
[    97.701][cube-solver-9][DEBUG] Solving cube (l0 = summarise([2]), l1 = anti_join(), l2 = mutate())
[    97.706][cube-solver-13][DEBUG] Solving cube (l0 = summarise([2]), l1 = left_join(), l2 = summarise([2]))
[    98.548][cube-solver-15][DEBUG] Found solution with cube (l0 = summarise([2]), l1 = summarise([2]), l2 = inner_join())
[    98.550][MainProcess][INFO] Statistics:
[    98.550][MainProcess][INFO] 	Generated cubes: 40
[    98.550][MainProcess][INFO] 	Attempted programs: 55
[    98.550][MainProcess][INFO] 		Rejected: 43
[    98.550][MainProcess][INFO] 		Failed: 11
[    98.550][MainProcess][INFO] 	Blacklist clauses: 2
[    98.550][MainProcess][DEBUG] Printing statistics for good programs of size 2
[    98.551][MainProcess][DEBUG] 	0: Counter({'mutate': 36, 'summarise': 16})
[    98.551][MainProcess][DEBUG] 	1: Counter({'mutate': 32, 'summarise': 20})
[    98.551][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    98.551][MainProcess][DEBUG] 	0: Counter({'summarise': 912})
[    98.552][MainProcess][DEBUG] 	1: Counter({'summarise': 770, 'filter': 65, 'anti_join': 57, 'left_join': 20})
[    98.552][MainProcess][DEBUG] 	2: Counter({'natural_join3': 219, 'natural_join': 120, 'left_join': 120, 'anti_join': 110, 'union': 95, 'summarise': 73, 'mutate': 69, 'semi_join': 56, 'inner_join': 28, 'intersect': 22})
[    98.553][MainProcess][INFO] Solution found: inner_join(summarise(@param0, leadNum = lead(Num), Id, Num), summarise(@param0, lagNum = lag(Num), Id, Num), 'Num' = 'Id')
[    99.162][MainProcess][ERROR] Error while trying to convert R code to SQL.

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/leetcode/tables/180.csv", col_types = cols(Id = col_integer(),Num = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/leetcode/tables/180_o.csv", col_types = cols(ConsecutiveNums = col_integer()))

df2 <- input1 %>% group_by(Id, Num) %>% summarise(leadNum = lead(Num)) %>% ungroup()
df3 <- input1 %>% group_by(Id, Num) %>% summarise(lagNum = lag(Num)) %>% ungroup()
df4 <- inner_join(df2, df3, by=c('Num' = 'Id'), suffix = c('', '.other'))
out <- df4 %>% select(ConsecutiveNums = Num.other) %>% distinct() %>% arrange(ConsecutiveNums)

Failed to generate SQL query
