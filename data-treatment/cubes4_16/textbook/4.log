[     3.442][MainProcess][INFO] Parsing specification...
[     3.460][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.460][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     3.461][MainProcess][DEBUG] Reading input files...
[     3.473][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/4-1.txt: ['string', 'string']
[     3.479][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/4-2.txt: ['string', 'string']
[     3.484][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/4-3.txt: ['string', 'string']
[     3.489][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/4.out: ['string']
[     3.527][MainProcess][DEBUG] Generating DSL...
[     3.556][MainProcess][INFO] Creating 16 processes
[     3.626][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.626][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.626][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.627][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.626][MainProcess][DEBUG] Increasing generator loc to 3
[     3.628][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     3.632][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     3.632][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     3.638][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     3.641][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     3.644][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     3.645][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     3.658][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     3.660][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     3.661][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     3.665][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     3.695][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     4.253][cube-solver-2][WARNING] There is no solution for current loc (2).
[     4.254][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     4.255][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     4.258][cube-solver-3][WARNING] There is no solution for current loc (2).
[     4.258][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     4.259][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     4.285][cube-solver-0][WARNING] There is no solution for current loc (2).
[     4.285][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     4.288][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     4.374][cube-solver-1][WARNING] There is no solution for current loc (2).
[     4.375][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     4.376][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     4.410][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     4.417][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     4.418][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     4.422][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     4.423][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     4.423][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     4.425][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     4.425][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     4.427][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     4.430][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     4.430][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     4.432][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     4.433][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     4.433][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     4.434][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     4.434][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     4.436][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = cross_join())
[     4.436][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = semi_join())
[     4.438][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([1]), l2 = mutate())
[     4.439][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = mutate())
[     4.440][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = inner_join())
[     4.440][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter([1]))
[     4.444][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter([1]))
[     4.445][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter([1]))
[     4.446][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join(), l2 = filter([1]))
[     4.446][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter([1]))
[     4.449][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join(), l2 = filter([1]))
[     4.451][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter([1]))
[     4.451][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join(), l2 = filter([1]))
[     4.454][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = summarise([1]))
[     4.455][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join(), l2 = mutate())
[     4.456][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join3(), l2 = summarise([1]))
[     4.456][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join3(), l2 = mutate())
[     4.460][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join4(), l2 = summarise([1]))
[     4.460][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join4(), l2 = mutate())
[     4.461][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = natural_join())
[     4.462][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = natural_join3())
[     4.465][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = summarise([1]))
[     4.465][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = natural_join4())
[     4.466][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = filter([2]))
[     4.468][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = anti_join())
[     4.471][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([2]), l2 = union())
[     4.472][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([2]), l2 = left_join())
[     4.473][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([2]), l2 = intersect())
[     4.474][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([2]), l2 = semi_join())
[     4.478][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([2]), l2 = cross_join())
[     4.479][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([3]), l2 = mutate())
[     4.479][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([3]), l2 = inner_join())
[     4.481][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = filter([2]), l2 = summarise([3]))
[     4.484][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = filter([2]), l2 = mutate())
[     4.486][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = anti_join(), l2 = mutate())
[     4.486][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = anti_join(), l2 = summarise([3]))
[     4.487][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([2]), l2 = summarise([3]))
[     4.490][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = left_join(), l2 = summarise([3]))
[     4.490][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = left_join(), l2 = mutate())
[     4.491][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = union(), l2 = summarise([4]))
[     4.494][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = union(), l2 = mutate())
[     4.495][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = intersect(), l2 = summarise([4]))
[     4.496][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = intersect(), l2 = mutate())
[     4.497][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = semi_join(), l2 = summarise([5]))
[     4.499][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = semi_join(), l2 = mutate())
[     4.500][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = cross_join(), l2 = summarise([5]))
[     4.500][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = cross_join(), l2 = mutate())
[     4.502][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join())
[     4.504][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join3())
[     4.504][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join4())
[     4.506][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = summarise([5]))
[     4.507][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = filter([2]))
[     4.507][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = anti_join())
[     4.508][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = left_join())
[     4.509][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = union())
[     4.511][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = intersect())
[     4.513][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = cross_join())
[     4.513][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = semi_join())
[     4.514][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = inner_join())
[     4.515][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = mutate())
[     4.515][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = inner_join(), l2 = summarise([7]))
[     4.517][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = inner_join(), l2 = mutate())
[     4.518][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([7]), l2 = filter([2]))
[     4.518][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([2]), l2 = summarise([7]))
[     4.520][cube-solver-14][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([2]), l2 = mutate())
[     4.521][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([2]))
[     4.521][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([7]), l2 = filter([2]))
[     4.525][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = summarise([7]))
[     4.526][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([7]), l2 = filter([2]))
[     4.526][cube-solver-14][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = mutate())
[     4.529][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([2]))
[     4.529][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = summarise([7]), l2 = filter([2]))
[     4.531][cube-solver-13][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = summarise([7]))
[     4.532][cube-solver-14][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = mutate())
[     4.534][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([2]))
[     4.536][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([7]), l2 = filter([2]))
[     4.537][cube-solver-10][DEBUG] Solving cube (l0 = intersect(), l1 = filter([2]), l2 = summarise([7]))
[     4.538][cube-solver-14][DEBUG] Solving cube (l0 = intersect(), l1 = filter([2]), l2 = mutate())
[     4.538][cube-solver-13][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([2]))
[     4.540][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([7]), l2 = filter([2]))
[     4.540][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = summarise([7]))
[     4.542][cube-solver-13][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = mutate())
[     4.544][cube-solver-14][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([2]))
[     4.545][cube-solver-13][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([8]), l2 = filter([2]))
[     4.548][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([2]), l2 = summarise([8]))
[     4.549][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([2]), l2 = mutate())
[     4.550][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([2]))
[     4.550][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([2]))
[     4.550][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter([2]))
[     4.553][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([2]))
[     4.555][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([9]), l2 = filter([2]))
[     4.555][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join())
[     4.555][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join3())
[     4.560][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join4())
[     4.560][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = summarise([9]))
[     4.567][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = filter([2]))
[     4.572][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = anti_join())
[     4.575][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = left_join())
[     4.577][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = union())
[     4.582][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = intersect())
[     4.582][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = semi_join())
[     4.588][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = cross_join())
[     4.589][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = mutate())
[     4.594][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = inner_join())
[     4.595][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([3]))
[     4.600][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([3]))
[     4.602][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([4]))
[     4.606][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([4]))
[     4.609][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([4]))
[     4.612][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([4]))
[     4.619][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([4]))
[     4.620][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([4]))
[     4.625][cube-solver-5][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([10]), l2 = filter([5]))
[     4.629][cube-solver-12][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([5]), l2 = summarise([10]))
[     4.639][cube-solver-5][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([5]), l2 = mutate())
[     4.643][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([5]))
[     4.645][MainProcess][DEBUG] Increasing generator loc to 4
[     4.646][cube-solver-5][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([5]))
[     4.646][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[     4.650][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     4.652][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     4.687][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([11]), l2 = filter([5]))
[     4.705][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[     5.176][cube-solver-2][DEBUG] Solving cube (l0 = summarise([15]), l1 = natural_join(), l2 = filter([14]))
[     5.192][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     5.247][cube-solver-3][DEBUG] Solving cube (l0 = summarise([15]), l1 = natural_join3([2]), l2 = filter([14]))
[     5.343][cube-solver-0][DEBUG] Solving cube (l0 = summarise([15]), l1 = natural_join4(), l2 = filter([15]))
[     5.358][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     5.443][cube-solver-1][DEBUG] Solving cube (l0 = summarise([15]), l1 = summarise([15]), l2 = filter([15]))
[     5.478][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     5.974][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([17]), l2 = natural_join3([2]), l3 = filter([15]))
[     6.098][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([17]), l2 = natural_join4(), l3 = filter([15]))
[     6.129][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([17]), l2 = filter([15]), l3 = summarise([17]))
[     6.168][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([17]), l2 = filter([15]), l3 = filter([15]))
[     6.202][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([17]), l2 = filter([15]), l3 = anti_join())
[     6.214][cube-solver-15][DEBUG] Found solution with cube (l0 = natural_join(), l1 = summarise([17]), l2 = natural_join3([2]), l3 = filter([15]))
[     6.216][MainProcess][INFO] Statistics:
[     6.216][MainProcess][INFO] 	Generated cubes: 152
[     6.216][MainProcess][INFO] 	Attempted programs: 4
[     6.216][MainProcess][INFO] 		Rejected: 1
[     6.216][MainProcess][INFO] 		Failed: 2
[     6.216][MainProcess][INFO] 	Blacklist clauses: 35
[     6.216][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     6.217][MainProcess][DEBUG] 	0: Counter({'mutate': 643, 'natural_join3': 275, 'summarise': 245})
[     6.218][MainProcess][DEBUG] 	1: Counter({'filter': 450, 'natural_join3': 235, 'natural_join4': 203, 'mutate': 156, 'summarise': 120})
[     6.219][MainProcess][DEBUG] 	2: Counter({'filter': 714, 'natural_join4': 240, 'natural_join3': 210})
[     6.219][MainProcess][DEBUG] Printing statistics for good programs of size 4
[     6.219][MainProcess][DEBUG] 	0: Counter({'natural_join': 18})
[     6.219][MainProcess][DEBUG] 	1: Counter({'summarise': 18})
[     6.219][MainProcess][DEBUG] 	2: Counter({'natural_join3': 18})
[     6.219][MainProcess][DEBUG] 	3: Counter({'filter': 18})
[     6.219][MainProcess][INFO] Solution found: filter(natural_join3(summarise(natural_join(@param1, @param0), n = n(), S_key, meets_at), @param1, @param2), n == 2)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/4-1.txt", col_types = cols(C_name = col_character(),meets_at = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/4-2.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/4-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/4.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input2, input1)
df5 <- df4 %>% group_by(S_key, meets_at) %>% summarise(n = n()) %>% ungroup()
df6 <- inner_join(df5, input2) %>% inner_join(input3)
df7 <- df6 %>% filter(n == 2)
out <- df7 %>% select(S_name) %>% distinct() %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT S_name
FROM
  (SELECT LHS.S_key AS S_key,
          LHS.meets_at AS meets_at,
          LHS.n AS n,
          LHS.C_name AS C_name,
          RHS.S_name AS S_name
   FROM
     (SELECT LHS.S_key AS S_key,
             LHS.meets_at AS meets_at,
             LHS.n AS n,
             RHS.C_name AS C_name
      FROM
        (SELECT S_key,
                meets_at,
                COUNT() AS n
         FROM
           (SELECT LHS.S_key AS S_key,
                   LHS.C_name AS C_name,
                   RHS.meets_at AS meets_at
            FROM input2 AS LHS
            INNER JOIN input1 AS RHS ON (LHS.C_name = RHS.C_name))
         GROUP BY S_key,
                  meets_at) AS LHS
      INNER JOIN input2 AS RHS ON (LHS.S_key = RHS.S_key)) AS LHS
   INNER JOIN input3 AS RHS ON (LHS.S_key = RHS.S_key))
WHERE (n = 2.0)
ORDER BY S_name
