[     2.427][MainProcess][INFO] Parsing specification...
[     2.435][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     2.435][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     2.435][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     2.436][MainProcess][DEBUG] Reading input files...
[     2.461][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16-1.txt: ['string', 'string']
[     2.466][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16-2.txt: ['string', 'string']
[     2.471][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16-3.txt: ['string', 'string']
[     2.475][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16.out: ['string']
[     2.507][MainProcess][DEBUG] Generating DSL...
[     2.534][MainProcess][INFO] Creating 16 processes
[     2.602][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     2.602][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.602][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     2.602][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.602][MainProcess][DEBUG] Increasing generator loc to 3
[     2.604][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     2.611][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     2.612][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     2.619][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     2.621][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     2.626][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     2.634][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     2.635][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     2.639][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     2.640][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     2.648][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.677][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     3.177][cube-solver-1][WARNING] There is no solution for current loc (2).
[     3.178][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     3.180][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     3.357][cube-solver-2][WARNING] There is no solution for current loc (2).
[     3.358][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     3.359][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     3.412][cube-solver-3][WARNING] There is no solution for current loc (2).
[     3.413][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     3.416][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     3.468][cube-solver-0][WARNING] There is no solution for current loc (2).
[     3.469][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     3.471][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     3.697][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     3.702][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     3.704][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     3.704][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     3.726][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     3.728][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     3.733][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     3.734][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     3.738][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     3.742][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     3.745][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = filter([1]))
[     3.749][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = anti_join())
[     3.751][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = left_join())
[     3.754][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = union())
[     3.757][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = intersect())
[     3.760][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = semi_join())
[     3.763][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = cross_join())
[     3.766][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = mutate())
[     3.769][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = inner_join())
[     3.772][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = anti_join(), l2 = filter([1]))
[     3.776][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = left_join(), l2 = filter([1]))
[     3.780][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = union(), l2 = filter([1]))
[     3.783][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = intersect(), l2 = filter([1]))
[     3.783][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([1]), l2 = summarise([1]))
[     3.786][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = semi_join(), l2 = filter([1]))
[     3.788][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([1]))
[     3.789][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = cross_join(), l2 = filter([1]))
[     3.790][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = mutate(), l2 = filter([1]))
[     3.793][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = inner_join(), l2 = filter([1]))
[     3.793][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = summarise([2]))
[     3.794][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = mutate())
[     3.795][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([2]), l2 = filter([1]))
[     3.797][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3([1]), l2 = summarise([3]))
[     3.797][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3([1]), l2 = mutate())
[     3.798][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = summarise([3]))
[     3.802][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = mutate())
[     3.868][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = filter([4]), l2 = summarise([8]))
[     3.899][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = mutate())
[     3.909][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([9]), l2 = natural_join())
[     3.924][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([10]), l2 = natural_join3([1]))
[     4.017][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([4]))
[     4.026][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = natural_join4())
[     4.037][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = summarise([12]))
[     4.051][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = filter([4]))
[     4.061][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = anti_join())
[     4.070][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = left_join())
[     4.079][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = union())
[     4.088][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = intersect())
[     4.097][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = semi_join())
[     4.106][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = cross_join())
[     4.117][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = mutate())
[     4.126][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = inner_join())
[     4.136][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = summarise([12]))
[     4.146][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = mutate())
[     4.152][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = summarise([12]))
[     4.161][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = mutate())
[     4.165][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = summarise([12]))
[     4.174][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = mutate())
[     4.178][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = summarise([12]))
[     4.188][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = mutate())
[     4.192][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = summarise([12]))
[     4.201][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = mutate())
[     4.205][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = summarise([12]))
[     4.215][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = mutate())
[     4.221][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = summarise([12]))
[     4.236][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = mutate())
[     4.241][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join())
[     4.244][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join3([2]))
[     4.245][cube-solver-1][DEBUG] Solving cube (l0 = summarise([13]), l1 = natural_join(), l2 = filter([4]))
[     4.265][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join4())
[     4.457][cube-solver-2][DEBUG] Solving cube (l0 = summarise([15]), l1 = natural_join3([2]), l2 = filter([4]))
[     4.520][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = summarise([16]))
[     4.539][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = filter([4]))
[     4.546][cube-solver-0][DEBUG] Solving cube (l0 = summarise([16]), l1 = summarise([16]), l2 = filter([4]))
[     4.547][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = anti_join())
[     4.553][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = left_join())
[     4.560][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = union())
[     4.566][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = intersect())
[     4.572][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = semi_join())
[     4.577][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = cross_join())
[     4.578][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = mutate())
[     4.584][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = inner_join())
[     4.587][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = summarise([17]))
[     4.592][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = mutate())
[     4.593][cube-solver-3][DEBUG] Solving cube (l0 = summarise([18]), l1 = natural_join4(), l2 = filter([4]))
[     4.598][cube-solver-11][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([18]), l2 = filter([4]))
[     4.607][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = summarise([18]))
[     4.616][cube-solver-3][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = mutate())
[     4.617][cube-solver-11][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([4]))
[     4.623][cube-solver-3][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([18]), l2 = filter([4]))
[     4.624][cube-solver-11][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = summarise([18]))
[     4.627][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = mutate())
[     4.634][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([4]))
[     4.641][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = summarise([18]), l2 = filter([4]))
[     4.643][cube-solver-11][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = mutate())
[     4.643][cube-solver-3][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = summarise([18]))
[     4.650][cube-solver-11][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([4]))
[     4.656][cube-solver-11][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([18]), l2 = filter([4]))
[     4.660][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = summarise([18]))
[     4.663][cube-solver-3][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = mutate())
[     4.663][cube-solver-10][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([4]))
[     4.669][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([18]), l2 = filter([4]))
[     4.670][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = summarise([18]))
[     4.674][cube-solver-11][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = mutate())
[     4.679][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([4]))
[     4.681][cube-solver-11][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([18]), l2 = filter([4]))
[     4.681][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = summarise([18]))
[     4.686][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = mutate())
[     4.689][cube-solver-3][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([4]))
[     4.694][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([2]), l2 = filter([4]))
[     4.694][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([4]))
[     4.697][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([4]))
[     4.701][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([18]), l2 = filter([4]))
[     4.701][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join())
[     4.708][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join3([2]))
[     4.720][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join4())
[     4.985][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = summarise([21]))
[     4.998][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = filter([4]))
[     5.004][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = anti_join())
[     5.008][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = left_join())
[     5.012][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = union())
[     5.016][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = intersect())
[     5.021][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = semi_join())
[     5.025][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = cross_join())
[     5.029][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = mutate())
[     5.033][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = inner_join())
[     5.038][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([4]))
[     5.042][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([4]))
[     5.046][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([4]))
[     5.050][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([4]))
[     5.054][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([4]))
[     5.058][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([4]))
[     5.063][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([4]))
[     5.067][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([4]))
[     5.071][cube-solver-12][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([21]), l2 = filter([4]))
[     5.084][cube-solver-12][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = summarise([21]))
[     5.096][cube-solver-12][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = mutate())
[     5.100][cube-solver-12][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([4]))
[     5.103][MainProcess][DEBUG] Increasing generator loc to 4
[     5.104][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[     6.532][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     6.650][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([4]))
[     6.753][cube-solver-8][DEBUG] Initialising process for 4 lines of code.
[     6.822][cube-solver-10][DEBUG] Initialising process for 4 lines of code.
[     7.522][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[     7.555][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     8.253][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([4]))
[     8.414][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([4]))
[     8.414][cube-solver-10][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([4]))
[     8.433][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join4())
[     8.448][cube-solver-10][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = summarise([21]))
[     8.472][cube-solver-10][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = filter([4]))
[     8.489][cube-solver-10][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[     8.491][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[     9.105][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join([2]))
[     9.115][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     9.173][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join3([2]))
[     9.876][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[    10.093][cube-solver-9][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = left_join())
[    10.262][cube-solver-10][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[    10.263][MainProcess][INFO] Statistics:
[    10.264][MainProcess][INFO] 	Generated cubes: 155
[    10.264][MainProcess][INFO] 	Attempted programs: 1030
[    10.264][MainProcess][INFO] 		Rejected: 316
[    10.264][MainProcess][INFO] 		Failed: 713
[    10.264][MainProcess][INFO] 	Blacklist clauses: 29
[    10.264][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    10.267][MainProcess][DEBUG] 	0: Counter({'filter': 2460, 'mutate': 1609, 'natural_join3': 752, 'summarise': 572})
[    10.270][MainProcess][DEBUG] 	1: Counter({'filter': 1503, 'natural_join4': 1364, 'natural_join3': 1036, 'mutate': 946, 'summarise': 544})
[    10.273][MainProcess][DEBUG] 	2: Counter({'filter': 1430, 'summarise': 1282, 'natural_join4': 1245, 'natural_join3': 996, 'mutate': 440})
[    10.273][MainProcess][DEBUG] Printing statistics for good programs of size 4
[    10.273][MainProcess][DEBUG] 	0: Counter({'natural_join': 655})
[    10.274][MainProcess][DEBUG] 	1: Counter({'summarise': 655})
[    10.274][MainProcess][DEBUG] 	2: Counter({'natural_join': 286, 'filter': 279, 'natural_join3': 90})
[    10.275][MainProcess][DEBUG] 	3: Counter({'filter': 376, 'natural_join3': 92, 'natural_join': 77, 'natural_join4': 51, 'anti_join': 51, 'left_join': 8})
[    10.275][MainProcess][INFO] Solution found: anti_join(summarise(@param1, n = n(), P_id, P_name), filter(natural_join(@param2, @param0), S_name != 'AWS'), )

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/16-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/16-2.txt", col_types = cols(P_id = col_character(),P_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/16-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/16.out", col_types = cols(P_name = col_character()))

df4 <- input2 %>% group_by(P_id, P_name) %>% summarise(n = n()) %>% ungroup()
df5 <- inner_join(input3, input1)
df6 <- df5 %>% filter(S_name != 'AWS')
df7 <- anti_join(df4, df6, by=c())
out <- df7 %>% select(P_name) %>% arrange(P_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `P_name`
FROM
  (SELECT *
   FROM
     (SELECT `P_id`,
             `P_name`,
             COUNT() AS `n`
      FROM `input2`
      GROUP BY `P_id`,
               `P_name`) AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM
             (SELECT `LHS`.`S_key` AS `S_key`,
                     `LHS`.`S_name` AS `S_name`,
                     `RHS`.`P_id` AS `P_id`
              FROM `input3` AS `LHS`
              INNER JOIN `input1` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
           WHERE (`S_name` != 'AWS')) AS RHS
        WHERE (LHS.P_id = RHS.P_id) ))
ORDER BY P_name
