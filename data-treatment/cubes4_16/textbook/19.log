[     3.378][MainProcess][INFO] Parsing specification...
[     3.390][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.390][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     3.391][MainProcess][DEBUG] Reading input files...
[     3.415][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/19-1.txt: ['string', 'string']
[     3.421][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/19-2.txt: ['string', 'string']
[     3.427][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/19-3.txt: ['string', 'string']
[     3.432][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/19.out: ['string']
[     3.467][MainProcess][DEBUG] Generating DSL...
[     3.489][MainProcess][INFO] Creating 16 processes
[     3.565][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     3.565][MainProcess][DEBUG] Increasing generator loc to 2
[     3.566][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.566][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.567][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     3.566][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.567][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     3.567][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     3.568][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     3.574][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     3.582][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     3.585][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     3.597][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     3.600][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     3.602][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     3.612][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     3.619][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     3.748][cube-solver-0][WARNING] There is no solution for current loc (1).
[     3.749][cube-solver-0][DEBUG] Solving cube (l0 = filter(),)
[     3.750][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.856][cube-solver-8][DEBUG] Solving cube (l0 = filter(), l1 = anti_join())
[     3.861][cube-solver-8][DEBUG] Solving cube (l0 = union(), l1 = filter())
[     3.865][cube-solver-8][DEBUG] Solving cube (l0 = intersect(), l1 = filter())
[     3.865][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = union())
[     3.868][cube-solver-8][DEBUG] Solving cube (l0 = semi_join(), l1 = filter())
[     3.868][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = filter())
[     3.869][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = filter())
[     3.870][cube-solver-8][DEBUG] Solving cube (l0 = inner_join(), l1 = filter())
[     3.870][MainProcess][DEBUG] Increasing generator loc to 3
[     3.870][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     3.871][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     3.872][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     3.880][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = cross_join())
[     3.884][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     3.921][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = semi_join())
[     3.925][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4())
[     3.926][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     3.953][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = intersect())
[     3.958][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     3.995][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter())
[     4.078][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join())
[     4.081][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     4.084][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3())
[     4.090][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = left_join())
[     4.095][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     4.098][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([1]))
[     4.103][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     4.106][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([2]))
[     4.112][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     4.133][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join())
[     4.139][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     4.142][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]))
[     4.148][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     4.165][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]))
[     4.170][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     4.502][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([4]), l2 = anti_join())
[     4.614][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([4]), l2 = filter([4]))
[     4.626][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = union(), l2 = filter([4]))
[     4.634][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([4]), l2 = natural_join3([1]))
[     4.635][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([4]), l2 = natural_join([2]))
[     4.655][cube-solver-10][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([4]), l2 = natural_join4())
[     4.778][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([4]), l2 = semi_join())
[     4.778][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([4]), l2 = left_join())
[     4.824][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     4.846][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = anti_join(), l2 = filter([4]))
[     4.854][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = semi_join(), l2 = filter([4]))
[     4.861][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     4.909][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = left_join(), l2 = filter([4]))
[     4.989][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([4]), l2 = union())
[     5.017][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([4]), l2 = cross_join())
[     5.025][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([4]), l2 = inner_join())
[     5.027][cube-solver-9][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([4]), l2 = intersect())
[     5.297][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = intersect(), l2 = filter([4]))
[     5.433][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = cross_join(), l2 = filter([4]))
[     5.656][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = inner_join(), l2 = filter([4]))
[     5.810][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = natural_join([2]), l2 = filter([4]))
[     6.241][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = natural_join3([2]), l2 = filter([4]))
[     6.247][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = natural_join4(), l2 = filter([4]))
[     6.251][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = natural_join([2]))
[     6.314][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = natural_join3([2]))
[     6.330][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = natural_join4())
[     6.350][cube-solver-7][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = filter([4]))
[     6.460][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = anti_join())
[     6.977][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = left_join())
[     6.989][cube-solver-5][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = union())
[     7.388][cube-solver-7][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = intersect())
[     7.479][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     7.596][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = cross_join())
[     8.019][cube-solver-6][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = semi_join())
[     8.580][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = inner_join())
[     8.989][cube-solver-12][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = anti_join(), l2 = filter([4]))
[     8.989][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = left_join(), l2 = filter([4]))
[     9.765][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = union(), l2 = filter([4]))
[    10.555][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = intersect(), l2 = filter([4]))
[    12.437][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = semi_join(), l2 = filter([4]))
[    12.753][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = cross_join(), l2 = filter([4]))
[    13.128][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = inner_join(), l2 = filter([4]))
[    13.406][cube-solver-6][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = natural_join([2]), l2 = filter([4]))
[    13.411][cube-solver-6][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = natural_join3([2]), l2 = filter([4]))
[    13.416][cube-solver-6][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = natural_join4(), l2 = filter([4]))
[    13.420][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = natural_join([2]))
[    13.425][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = natural_join3([2]))
[    13.429][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = natural_join4())
[    13.433][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = filter([4]))
[    13.437][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = anti_join())
[    13.440][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = left_join())
[    13.444][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = union())
[    13.447][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = intersect())
[    13.450][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = semi_join())
[    13.453][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = cross_join())
[    13.457][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = inner_join())
[    13.460][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = anti_join(), l2 = filter([4]))
[    13.463][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = left_join(), l2 = filter([4]))
[    13.466][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = union(), l2 = filter([4]))
[    13.470][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = intersect(), l2 = filter([4]))
[    13.473][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = semi_join(), l2 = filter([4]))
[    13.476][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = cross_join(), l2 = filter([4]))
[    13.479][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = inner_join(), l2 = filter([4]))
[    13.482][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join([2]), l2 = filter([4]))
[    13.486][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join3([2]), l2 = filter([4]))
[    13.491][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join4(), l2 = filter([4]))
[    13.494][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = filter([4]))
[    13.499][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = anti_join())
[    13.503][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = left_join())
[    13.510][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = union())
[    13.539][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = intersect())
[    14.618][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = semi_join())
[    14.662][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = cross_join())
[    15.192][cube-solver-10][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = inner_join())
[    15.439][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = natural_join([2]))
[    15.446][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = natural_join3([2]))
[    15.451][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = natural_join4())
[    15.455][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = filter([4]))
[    15.520][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = anti_join())
[    15.818][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = left_join())
[    16.581][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = union())
[    16.618][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = intersect())
[    17.018][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = semi_join())
[    17.893][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = cross_join())
[    19.528][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = inner_join())
[    23.833][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = natural_join([2]))
[    23.838][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = natural_join3([2]))
[    23.843][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = natural_join4())
[    23.847][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = filter([4]))
[    24.150][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = anti_join())
[    24.154][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = left_join())
[    24.544][cube-solver-12][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = union())
[    24.738][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = intersect())
[    28.140][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = semi_join())
[    29.300][cube-solver-4][DEBUG] Found solution with cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = anti_join())
[    29.301][MainProcess][INFO] Statistics:
[    29.302][MainProcess][INFO] 	Generated cubes: 113
[    29.302][MainProcess][INFO] 	Attempted programs: 5262
[    29.302][MainProcess][INFO] 		Rejected: 2054
[    29.302][MainProcess][INFO] 		Failed: 3207
[    29.302][MainProcess][INFO] 	Blacklist clauses: 8
[    29.302][MainProcess][DEBUG] Printing statistics for good programs of size 2
[    29.303][MainProcess][DEBUG] 	0: Counter({'filter': 288, 'natural_join3': 64})
[    29.304][MainProcess][DEBUG] 	1: Counter({'natural_join4': 224, 'filter': 64, 'natural_join3': 64})
[    29.304][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    29.320][MainProcess][DEBUG] 	0: Counter({'natural_join3': 16579, 'filter': 7464, 'natural_join': 4465})
[    29.333][MainProcess][DEBUG] 	1: Counter({'filter': 13721, 'natural_join3': 4854, 'inner_join': 2920, 'cross_join': 1628, 'natural_join4': 1546, 'natural_join': 1194, 'anti_join': 1152, 'union': 576, 'left_join': 576, 'semi_join': 328, 'intersect': 16})
[    29.346][MainProcess][DEBUG] 	2: Counter({'filter': 8028, 'inner_join': 4105, 'cross_join': 3337, 'anti_join': 2793, 'left_join': 2471, 'union': 2299, 'natural_join4': 1920, 'semi_join': 1441, 'natural_join3': 1344, 'natural_join': 640, 'intersect': 138})
[    29.346][MainProcess][INFO] Solution found: anti_join(natural_join3(@param0, @param2, @param1), filter(natural_join3(@param0, @param2, @param1), color != 'red'), 'S_key', 'S_name')

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/19-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/19-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/19-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/19.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input3) %>% inner_join(input2)
df5 <- df4 %>% filter(color != 'red')
df6 <- anti_join(df4, df5, by=c('S_key', 'S_name'))
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT *
   FROM
     (SELECT `LHS`.`S_key` AS `S_key`,
             `LHS`.`P_id` AS `P_id`,
             `LHS`.`S_name` AS `S_name`,
             `RHS`.`color` AS `color`
      FROM
        (SELECT `LHS`.`S_key` AS `S_key`,
                `LHS`.`P_id` AS `P_id`,
                `RHS`.`S_name` AS `S_name`
         FROM `input1` AS `LHS`
         INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`)) AS `LHS`
      INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)) AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM
             (SELECT `LHS`.`S_key` AS `S_key`,
                     `LHS`.`P_id` AS `P_id`,
                     `LHS`.`S_name` AS `S_name`,
                     `RHS`.`color` AS `color`
              FROM
                (SELECT `LHS`.`S_key` AS `S_key`,
                        `LHS`.`P_id` AS `P_id`,
                        `RHS`.`S_name` AS `S_name`
                 FROM `input1` AS `LHS`
                 INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`)) AS `LHS`
              INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
           WHERE (`color` != 'red')) AS RHS
        WHERE (LHS.S_key = RHS.S_key
               AND LHS.S_name = RHS.S_name) ))
ORDER BY S_name
