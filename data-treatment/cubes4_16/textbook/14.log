[     3.566][MainProcess][INFO] Parsing specification...
[     3.586][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.587][MainProcess][DEBUG] Reading input files...
[     3.601][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/14-1.txt: ['string', 'string']
[     3.606][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/14-2.txt: ['string', 'string']
[     3.622][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/14-3.txt: ['string', 'string']
[     3.629][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/14.out: ['string']
[     3.667][MainProcess][DEBUG] Generating DSL...
[     3.699][MainProcess][INFO] Creating 16 processes
[     3.770][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.770][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.770][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.771][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.771][MainProcess][DEBUG] Increasing generator loc to 3
[     3.773][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     3.777][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     3.777][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     3.785][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     3.788][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     3.790][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     3.797][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     3.805][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     3.808][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     3.821][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     3.822][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     3.824][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     4.274][cube-solver-2][WARNING] There is no solution for current loc (2).
[     4.274][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     4.276][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     4.288][cube-solver-1][WARNING] There is no solution for current loc (2).
[     4.288][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     4.290][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     4.407][cube-solver-3][WARNING] There is no solution for current loc (2).
[     4.408][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     4.411][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     4.440][cube-solver-0][WARNING] There is no solution for current loc (2).
[     4.441][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     4.442][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     4.632][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     4.638][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     4.643][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     4.644][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     4.644][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     4.650][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     4.650][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     4.651][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     4.654][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     4.655][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     4.657][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     4.659][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     4.660][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     4.661][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     4.664][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     4.664][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     4.664][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     4.666][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = inner_join())
[     4.668][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter())
[     4.669][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter())
[     4.670][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     4.670][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter())
[     4.671][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter())
[     4.673][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join(), l2 = filter())
[     4.674][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = cross_join(), l2 = filter())
[     4.675][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = mutate(), l2 = filter())
[     4.677][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     4.677][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = inner_join(), l2 = filter())
[     4.678][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([1]))
[     4.679][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([1]))
[     4.680][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     4.682][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([1]))
[     4.683][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     4.683][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = natural_join())
[     4.683][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     4.684][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = natural_join3())
[     4.684][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = natural_join4())
[     4.687][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = summarise([1]))
[     4.687][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = left_join())
[     4.687][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = filter())
[     4.688][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = anti_join())
[     4.688][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = union())
[     4.690][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = intersect())
[     4.690][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = semi_join())
[     4.692][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise([2]))
[     4.693][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = cross_join())
[     4.693][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = mutate())
[     4.693][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = inner_join())
[     4.694][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     4.696][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise([2]))
[     4.696][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     4.698][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise([2]))
[     4.699][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     4.699][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     4.699][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise([2]))
[     4.699][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise([2]))
[     4.701][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     4.702][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     4.703][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise([2]))
[     4.703][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     4.704][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise([2]))
[     4.704][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     4.705][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3())
[     4.705][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     4.707][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join4())
[     4.708][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = anti_join())
[     4.709][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = filter())
[     4.709][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise([3]))
[     4.709][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = left_join())
[     4.710][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = union())
[     4.711][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = semi_join())
[     4.712][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = intersect())
[     4.712][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = inner_join())
[     4.712][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = cross_join())
[     4.713][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[     4.715][cube-solver-14][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([4]), l2 = filter())
[     4.715][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = summarise([4]))
[     4.715][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = mutate())
[     4.716][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = summarise([4]))
[     4.716][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = mutate())
[     4.717][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter())
[     4.717][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise([4]))
[     4.719][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([4]), l2 = filter())
[     4.721][cube-solver-14][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = summarise([4]))
[     4.721][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = mutate())
[     4.721][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter())
[     4.721][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = summarise([4]), l2 = filter())
[     4.725][cube-solver-15][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = summarise([4]))
[     4.725][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = mutate())
[     4.725][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter())
[     4.726][cube-solver-14][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = summarise([4]))
[     4.726][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([4]), l2 = filter())
[     4.728][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter())
[     4.728][cube-solver-4][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = mutate())
[     4.729][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([4]), l2 = filter())
[     4.730][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = summarise([4]))
[     4.732][cube-solver-14][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = mutate())
[     4.732][cube-solver-4][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = summarise([4]))
[     4.732][cube-solver-15][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter())
[     4.733][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([4]), l2 = filter())
[     4.734][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = mutate())
[     4.734][cube-solver-14][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter())
[     4.737][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join3())
[     4.737][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter())
[     4.737][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join())
[     4.737][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter())
[     4.738][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([4]), l2 = filter())
[     4.738][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter())
[     4.739][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join4())
[     4.741][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise([4]))
[     4.742][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = filter())
[     4.745][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = anti_join())
[     4.745][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = left_join())
[     4.748][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = union())
[     4.750][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = semi_join())
[     4.750][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = intersect())
[     4.751][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = cross_join())
[     4.753][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = mutate())
[     4.755][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = inner_join())
[     4.756][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter())
[     4.758][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter())
[     4.758][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([5]), l2 = filter())
[     4.759][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter())
[     4.760][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter())
[     4.760][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter())
[     4.761][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter())
[     4.762][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter())
[     4.764][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter())
[     4.765][cube-solver-14][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([5]), l2 = filter())
[     4.765][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = filter(), l2 = summarise([5]))
[     4.767][cube-solver-12][DEBUG] Solving cube (l0 = inner_join(), l1 = filter(), l2 = mutate())
[     4.769][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter())
[     4.769][MainProcess][DEBUG] Increasing generator loc to 4
[     4.770][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     4.771][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[     4.772][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[     4.823][cube-solver-8][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise([5]), l2 = filter())
[     4.825][MainProcess][INFO] Statistics:
[     4.826][MainProcess][INFO] 	Generated cubes: 145
[     4.826][MainProcess][INFO] 	Attempted programs: 1
[     4.826][MainProcess][INFO] 		Rejected: 0
[     4.826][MainProcess][INFO] 		Failed: 0
[     4.826][MainProcess][INFO] 	Blacklist clauses: 5
[     4.826][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     4.827][MainProcess][DEBUG] 	0: Counter({'mutate': 24, 'summarise': 1, 'natural_join3': 1})
[     4.827][MainProcess][DEBUG] 	1: Counter({'filter': 14, 'natural_join4': 6, 'natural_join3': 5, 'summarise': 1})
[     4.827][MainProcess][DEBUG] 	2: Counter({'filter': 12, 'natural_join3': 8, 'natural_join4': 6})
[     4.827][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param0, @param1, @param2), n = n(), S_name), n == max(n))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/14-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/14-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/14-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/14.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input2) %>% inner_join(input3)
df5 <- df4 %>% group_by(S_name) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n == max(n))
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT S_name,
          n
   FROM
     (SELECT S_name,
             n,
             MAX(n) OVER () AS zzz4
      FROM
        (SELECT S_name,
                COUNT() AS n
         FROM
           (SELECT LHS.S_key AS S_key,
                   LHS.P_id AS P_id,
                   LHS.color AS color,
                   RHS.S_name AS S_name
            FROM
              (SELECT LHS.S_key AS S_key,
                      LHS.P_id AS P_id,
                      RHS.color AS color
               FROM input1 AS LHS
               INNER JOIN input2 AS RHS ON (LHS.P_id = RHS.P_id)) AS LHS
            INNER JOIN input3 AS RHS ON (LHS.S_key = RHS.S_key))
         GROUP BY S_name))
   WHERE (n = zzz4))
ORDER BY S_name
