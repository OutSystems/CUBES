[     3.319][MainProcess][INFO] Parsing specification...
[     3.333][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.333][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     3.334][MainProcess][DEBUG] Reading input files...
[     3.345][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/6-1.txt: ['string', 'string']
[     3.351][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/6-2.txt: ['string', 'string']
[     3.356][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/6-3.txt: ['string', 'string']
[     3.361][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/6.out: ['string']
[     3.397][MainProcess][DEBUG] Generating DSL...
[     3.426][MainProcess][INFO] Creating 16 processes
[     3.500][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.500][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.500][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.501][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.501][MainProcess][DEBUG] Increasing generator loc to 3
[     3.502][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     3.503][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     3.503][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     3.511][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     3.514][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     3.518][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     3.521][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     3.530][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     3.530][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     3.534][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     3.550][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     3.554][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     4.084][cube-solver-3][WARNING] There is no solution for current loc (2).
[     4.084][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     4.086][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     4.107][cube-solver-2][WARNING] There is no solution for current loc (2).
[     4.108][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     4.109][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     4.143][cube-solver-0][WARNING] There is no solution for current loc (2).
[     4.144][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     4.145][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     4.217][cube-solver-1][WARNING] There is no solution for current loc (2).
[     4.217][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     4.219][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     4.277][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     4.284][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     4.285][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     4.287][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     4.290][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     4.291][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     4.293][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     4.297][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     4.301][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     4.302][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     4.304][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     4.305][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     4.306][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     4.307][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     4.308][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     4.311][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = intersect())
[     4.312][cube-solver-14][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = cross_join())
[     4.312][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = mutate())
[     4.313][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = semi_join())
[     4.313][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     4.314][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = inner_join())
[     4.318][cube-solver-14][DEBUG] Solving cube (l0 = summarise([2]), l1 = left_join(), l2 = filter())
[     4.318][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = union(), l2 = filter())
[     4.318][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = anti_join(), l2 = filter())
[     4.321][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = intersect(), l2 = filter())
[     4.321][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = semi_join(), l2 = filter())
[     4.322][cube-solver-14][DEBUG] Solving cube (l0 = summarise([2]), l1 = cross_join(), l2 = filter())
[     4.325][cube-solver-7][DEBUG] Solving cube (l0 = summarise([3]), l1 = mutate(), l2 = filter())
[     4.327][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([3]))
[     4.327][cube-solver-10][DEBUG] Solving cube (l0 = summarise([3]), l1 = inner_join(), l2 = filter())
[     4.328][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     4.329][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([3]))
[     4.329][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise([3]))
[     4.331][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     4.331][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     4.332][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([3]))
[     4.332][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     4.334][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = natural_join())
[     4.335][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = natural_join4())
[     4.335][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = natural_join3())
[     4.338][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = anti_join())
[     4.338][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = summarise([3]))
[     4.339][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = filter([1]))
[     4.339][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = union())
[     4.340][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = left_join())
[     4.342][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = intersect())
[     4.343][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = semi_join())
[     4.343][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = cross_join())
[     4.346][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = mutate())
[     4.347][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = summarise([3]))
[     4.347][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = mutate())
[     4.347][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = inner_join())
[     4.348][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = summarise([3]))
[     4.349][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = mutate())
[     4.350][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = summarise([3]))
[     4.352][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = left_join(), l2 = mutate())
[     4.354][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = union(), l2 = summarise([3]))
[     4.354][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = intersect(), l2 = summarise([3]))
[     4.354][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = union(), l2 = mutate())
[     4.354][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = semi_join(), l2 = summarise([3]))
[     4.354][cube-solver-15][DEBUG] Solving cube (l0 = filter([2]), l1 = intersect(), l2 = mutate())
[     4.356][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = semi_join(), l2 = mutate())
[     4.359][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = cross_join(), l2 = mutate())
[     4.359][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join3())
[     4.360][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = cross_join(), l2 = summarise([3]))
[     4.360][cube-solver-15][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join())
[     4.361][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join4())
[     4.361][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = summarise([3]))
[     4.362][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = filter([2]))
[     4.363][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = anti_join())
[     4.365][cube-solver-15][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = left_join())
[     4.366][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = intersect())
[     4.366][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = union())
[     4.366][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = semi_join())
[     4.367][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = cross_join())
[     4.369][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = inner_join())
[     4.369][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = mutate())
[     4.370][cube-solver-14][DEBUG] Solving cube (l0 = filter([3]), l1 = inner_join(), l2 = summarise([3]))
[     4.371][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([3]), l2 = filter([3]))
[     4.371][cube-solver-15][DEBUG] Solving cube (l0 = filter([3]), l1 = inner_join(), l2 = mutate())
[     4.372][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([3]), l2 = mutate())
[     4.373][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([3]), l2 = summarise([3]))
[     4.375][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([3]))
[     4.376][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = filter([3]), l2 = summarise([3]))
[     4.376][cube-solver-14][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([3]), l2 = filter([3]))
[     4.377][cube-solver-15][DEBUG] Solving cube (l0 = left_join(), l1 = filter([3]), l2 = mutate())
[     4.380][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([3]))
[     4.381][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter([3]), l2 = summarise([3]))
[     4.381][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = summarise([3]), l2 = filter([3]))
[     4.382][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = filter([3]), l2 = mutate())
[     4.383][cube-solver-14][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([3]))
[     4.383][cube-solver-15][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([3]), l2 = filter([3]))
[     4.386][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter([3]), l2 = mutate())
[     4.386][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = filter([3]), l2 = summarise([3]))
[     4.387][cube-solver-14][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([4]))
[     4.389][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([3]), l2 = filter([4]))
[     4.389][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = mutate())
[     4.390][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = summarise([3]))
[     4.392][cube-solver-14][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([4]))
[     4.393][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = mutate())
[     4.394][cube-solver-15][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([3]), l2 = filter([4]))
[     4.394][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = summarise([3]))
[     4.397][cube-solver-14][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([4]))
[     4.397][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([4]))
[     4.399][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter([4]))
[     4.400][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([4]))
[     4.401][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([3]), l2 = filter([4]))
[     4.402][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join())
[     4.402][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join3())
[     4.403][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join4())
[     4.407][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = summarise([3]))
[     4.410][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = filter([5]))
[     4.412][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = anti_join())
[     4.416][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = left_join())
[     4.419][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = union())
[     4.421][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = intersect())
[     4.422][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([6]), l2 = summarise([3]))
[     4.426][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([7]), l2 = semi_join())
[     4.427][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([7]), l2 = cross_join())
[     4.434][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([7]), l2 = mutate())
[     4.435][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([7]), l2 = inner_join())
[     4.435][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([7]))
[     4.442][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([7]))
[     4.443][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([7]))
[     4.446][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([7]))
[     4.450][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([7]))
[     4.452][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([7]))
[     4.454][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([7]))
[     4.457][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([8]))
[     4.460][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([3]), l2 = filter([8]))
[     4.463][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([8]), l2 = summarise([3]))
[     4.465][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([8]), l2 = mutate())
[     4.470][MainProcess][DEBUG] Increasing generator loc to 4
[     4.471][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     4.472][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([8]))
[     4.474][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     4.480][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[     4.491][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([3]), l2 = filter([9]))
[     4.506][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[     5.036][cube-solver-3][DEBUG] Solving cube (l0 = summarise([13]), l1 = natural_join(), l2 = filter([15]))
[     5.059][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     5.131][cube-solver-1][DEBUG] Solving cube (l0 = summarise([13]), l1 = summarise([13]), l2 = filter([15]))
[     5.154][cube-solver-2][DEBUG] Solving cube (l0 = summarise([13]), l1 = natural_join3([2]), l2 = filter([15]))
[     5.157][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     5.224][cube-solver-0][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join4(), l2 = filter([15]))
[     5.247][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     5.775][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = natural_join4(), l3 = filter([15]))
[     5.800][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = natural_join(), l3 = filter([15]))
[     5.806][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = filter([15]), l3 = summarise([19]))
[     5.848][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = filter([15]), l3 = filter([15]))
[     5.883][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = filter([15]), l3 = anti_join())
[     6.005][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([15]))
[     6.032][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = filter([15]), l3 = left_join())
[     6.142][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([15]))
[     6.478][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join3([2]))
[     6.599][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join4())
[     6.620][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join([2]))
[     6.840][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     7.036][cube-solver-8][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     7.038][MainProcess][INFO] Statistics:
[     7.038][MainProcess][INFO] 	Generated cubes: 154
[     7.038][MainProcess][INFO] 	Attempted programs: 82
[     7.039][MainProcess][INFO] 		Rejected: 58
[     7.039][MainProcess][INFO] 		Failed: 23
[     7.039][MainProcess][INFO] 	Blacklist clauses: 40
[     7.039][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     7.041][MainProcess][DEBUG] 	0: Counter({'mutate': 820, 'natural_join3': 385, 'summarise': 232})
[     7.042][MainProcess][DEBUG] 	1: Counter({'filter': 466, 'natural_join3': 370, 'natural_join4': 216, 'mutate': 200, 'summarise': 185})
[     7.044][MainProcess][DEBUG] 	2: Counter({'filter': 972, 'natural_join4': 294, 'natural_join3': 173})
[     7.044][MainProcess][DEBUG] Printing statistics for good programs of size 4
[     7.044][MainProcess][DEBUG] 	0: Counter({'natural_join': 264})
[     7.045][MainProcess][DEBUG] 	1: Counter({'summarise': 264})
[     7.045][MainProcess][DEBUG] 	2: Counter({'filter': 126, 'natural_join': 88, 'natural_join3': 50})
[     7.045][MainProcess][DEBUG] 	3: Counter({'filter': 138, 'left_join': 68, 'natural_join': 34, 'natural_join4': 20, 'anti_join': 4})
[     7.046][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param0, @param1, @param2), n = n(), F_key, F_name), n <= 5)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/6-1.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/6-2.txt", col_types = cols(C_name = col_character(),F_key = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/6-3.txt", col_types = cols(F_key = col_character(),F_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/6.out", col_types = cols(F_name = col_character()))

df4 <- inner_join(input1, input2) %>% inner_join(input3)
df5 <- df4 %>% group_by(F_key, F_name) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n <= 5)
out <- df6 %>% select(F_name) %>% arrange(F_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT F_name
FROM
  (SELECT F_key,
          F_name,
          COUNT() AS n
   FROM
     (SELECT LHS.S_key AS S_key,
             LHS.C_name AS C_name,
             LHS.F_key AS F_key,
             RHS.F_name AS F_name
      FROM
        (SELECT LHS.S_key AS S_key,
                LHS.C_name AS C_name,
                RHS.F_key AS F_key
         FROM input1 AS LHS
         INNER JOIN input2 AS RHS ON (LHS.C_name = RHS.C_name)) AS LHS
      INNER JOIN input3 AS RHS ON (LHS.F_key = RHS.F_key))
   GROUP BY F_key,
            F_name)
WHERE (n <= 5.0)
ORDER BY F_name
