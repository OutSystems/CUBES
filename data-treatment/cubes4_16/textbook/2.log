[     3.438][MainProcess][INFO] Parsing specification...
[     3.455][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.455][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.455][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     3.456][MainProcess][DEBUG] Reading input files...
[     3.481][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/2-1.txt: ['string', 'string']
[     3.486][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/2-2.txt: ['string', 'string']
[     3.492][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/2-3.txt: ['string', 'string']
[     3.498][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/2-4.txt: ['string', 'string', 'int64']
[     3.502][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/2.out: ['int64']
[     3.541][MainProcess][DEBUG] Generating DSL...
[     3.826][MainProcess][INFO] Creating 16 processes
[     3.892][MainProcess][DEBUG] Increasing generator loc to 3
[     4.225][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     4.230][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     4.231][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     4.240][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     4.246][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     4.247][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     4.247][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     4.250][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     4.250][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     4.257][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     4.257][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     4.265][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     4.266][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     4.299][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     4.300][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     4.336][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[    20.603][cube-solver-1][WARNING] There is no solution for current loc (2).
[    20.604][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[    20.633][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[    20.646][cube-solver-2][WARNING] There is no solution for current loc (2).
[    20.647][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[    20.650][cube-solver-3][WARNING] There is no solution for current loc (2).
[    20.650][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[    20.699][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[    20.700][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[    21.010][cube-solver-0][WARNING] There is no solution for current loc (2).
[    21.011][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[    21.039][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[    27.281][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[    27.394][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[    27.396][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[    27.428][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[    27.493][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[    27.495][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[    27.508][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[    27.542][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[    27.552][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[    27.554][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4([3]), l1 = summarise(), l2 = filter())
[    27.576][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4([3]), l1 = mutate(), l2 = filter())
[    27.580][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4([3]))
[    27.588][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4([3]), l1 = filter(), l2 = mutate())
[    27.612][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[    27.637][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[    27.650][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[    27.672][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[    27.710][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = left_join())
[    27.712][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = union())
[    27.725][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[    27.767][cube-solver-10][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter(), l2 = inner_join())
[    27.767][cube-solver-8][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = semi_join())
[    27.779][cube-solver-11][DEBUG] Solving cube (l0 = summarise([3]), l1 = anti_join(), l2 = filter())
[    27.779][cube-solver-4][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter(), l2 = cross_join())
[    27.781][cube-solver-9][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter(), l2 = mutate())
[    27.832][cube-solver-8][DEBUG] Solving cube (l0 = summarise([4]), l1 = union(), l2 = filter())
[    27.835][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = intersect())
[    27.848][cube-solver-10][DEBUG] Solving cube (l0 = summarise([5]), l1 = cross_join(), l2 = filter())
[    27.853][cube-solver-11][DEBUG] Solving cube (l0 = summarise([5]), l1 = semi_join(), l2 = filter())
[    27.856][cube-solver-9][DEBUG] Solving cube (l0 = summarise([4]), l1 = left_join(), l2 = filter())
[    27.856][cube-solver-7][DEBUG] Solving cube (l0 = summarise([5]), l1 = intersect(), l2 = filter())
[    27.888][cube-solver-8][DEBUG] Solving cube (l0 = summarise([5]), l1 = mutate(), l2 = filter())
[    27.902][cube-solver-4][DEBUG] Solving cube (l0 = summarise([6]), l1 = inner_join(), l2 = filter())
[    27.914][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([6]))
[    27.914][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[    27.938][cube-solver-8][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4([5]), l2 = summarise([6]))
[    27.951][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([6]))
[    27.953][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[    27.969][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4([5]), l2 = mutate())
[    27.973][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([7]), l2 = natural_join3())
[    27.989][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = summarise([7]), l2 = natural_join4([5]))
[    27.994][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = summarise([7]), l2 = natural_join())
[    28.051][cube-solver-10][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([10]), l2 = left_join())
[    28.053][cube-solver-11][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([9]), l2 = filter([2]))
[    28.053][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([9]), l2 = summarise([9]))
[    28.055][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([9]), l2 = anti_join())
[    28.091][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([10]), l2 = union())
[    28.106][cube-solver-10][DEBUG] Solving cube (l0 = filter([7]), l1 = summarise([11]), l2 = intersect())
[    28.119][cube-solver-9][DEBUG] Solving cube (l0 = filter([7]), l1 = summarise([12]), l2 = semi_join())
[    28.121][cube-solver-11][DEBUG] Solving cube (l0 = filter([7]), l1 = summarise([12]), l2 = cross_join())
[    28.130][cube-solver-7][DEBUG] Solving cube (l0 = filter([8]), l1 = summarise([12]), l2 = mutate())
[    28.162][cube-solver-10][DEBUG] Solving cube (l0 = filter([10]), l1 = filter([10]), l2 = summarise([12]))
[    28.170][cube-solver-6][DEBUG] Solving cube (l0 = filter([9]), l1 = summarise([12]), l2 = inner_join())
[    28.186][cube-solver-9][DEBUG] Solving cube (l0 = filter([10]), l1 = filter([10]), l2 = mutate())
[    28.193][cube-solver-7][DEBUG] Solving cube (l0 = filter([11]), l1 = anti_join(), l2 = summarise([12]))
[    28.225][cube-solver-10][DEBUG] Solving cube (l0 = filter([12]), l1 = anti_join(), l2 = mutate())
[    28.237][cube-solver-11][DEBUG] Solving cube (l0 = filter([12]), l1 = left_join(), l2 = summarise([13]))
[    28.256][cube-solver-9][DEBUG] Solving cube (l0 = filter([14]), l1 = left_join(), l2 = mutate())
[    28.274][cube-solver-6][DEBUG] Solving cube (l0 = filter([14]), l1 = union(), l2 = summarise([13]))
[    28.282][cube-solver-7][DEBUG] Solving cube (l0 = filter([15]), l1 = union(), l2 = mutate())
[    28.283][cube-solver-10][DEBUG] Solving cube (l0 = filter([15]), l1 = intersect(), l2 = summarise([14]))
[    28.308][cube-solver-11][DEBUG] Solving cube (l0 = filter([15]), l1 = intersect(), l2 = mutate())
[    28.333][cube-solver-9][DEBUG] Solving cube (l0 = filter([16]), l1 = semi_join(), l2 = summarise([14]))
[    28.345][cube-solver-10][DEBUG] Solving cube (l0 = filter([16]), l1 = cross_join(), l2 = summarise([14]))
[    28.355][cube-solver-7][DEBUG] Solving cube (l0 = filter([16]), l1 = semi_join(), l2 = mutate())
[    28.374][cube-solver-6][DEBUG] Solving cube (l0 = filter([16]), l1 = cross_join(), l2 = mutate())
[    28.379][cube-solver-11][DEBUG] Solving cube (l0 = filter([17]), l1 = mutate(), l2 = natural_join())
[    28.404][cube-solver-9][DEBUG] Solving cube (l0 = filter([19]), l1 = mutate(), l2 = natural_join3())
[    28.406][cube-solver-10][DEBUG] Solving cube (l0 = filter([19]), l1 = mutate(), l2 = natural_join4([11]))
[    28.422][cube-solver-7][DEBUG] Solving cube (l0 = filter([19]), l1 = mutate(), l2 = summarise([16]))
[    28.454][cube-solver-11][DEBUG] Solving cube (l0 = filter([19]), l1 = mutate(), l2 = anti_join())
[    28.461][cube-solver-6][DEBUG] Solving cube (l0 = filter([19]), l1 = mutate(), l2 = filter([19]))
[    28.493][cube-solver-7][DEBUG] Solving cube (l0 = filter([20]), l1 = mutate(), l2 = left_join())
[    28.512][cube-solver-9][DEBUG] Solving cube (l0 = filter([20]), l1 = mutate(), l2 = union())
[    28.521][cube-solver-11][DEBUG] Solving cube (l0 = filter([21]), l1 = mutate(), l2 = intersect())
[    28.547][cube-solver-6][DEBUG] Solving cube (l0 = filter([22]), l1 = mutate(), l2 = semi_join())
[    28.569][cube-solver-7][DEBUG] Solving cube (l0 = filter([23]), l1 = mutate([1]), l2 = cross_join())
[    28.574][cube-solver-9][DEBUG] Solving cube (l0 = filter([23]), l1 = mutate([1]), l2 = mutate([1]))
[    28.586][cube-solver-11][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate([1]), l2 = inner_join())
[    28.633][cube-solver-6][DEBUG] Solving cube (l0 = filter([25]), l1 = inner_join(), l2 = summarise([17]))
[    28.637][cube-solver-9][DEBUG] Solving cube (l0 = filter([25]), l1 = inner_join(), l2 = mutate([1]))
[    28.664][cube-solver-11][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([17]), l2 = filter([25]))
[    28.699][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([26]), l2 = summarise([17]))
[    28.720][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([26]), l2 = mutate([1]))
[    28.732][cube-solver-11][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate([1]), l2 = filter([27]))
[    28.759][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([17]), l2 = filter([28]))
[    28.768][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = filter([28]), l2 = summarise([17]))
[    28.796][cube-solver-11][DEBUG] Solving cube (l0 = left_join(), l1 = filter([28]), l2 = mutate([1]))
[    28.814][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = mutate([1]), l2 = filter([28]))
[    28.844][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = summarise([19]), l2 = filter([28]))
[    28.847][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter([28]), l2 = summarise([19]))
[    28.867][cube-solver-11][DEBUG] Solving cube (l0 = union(), l1 = filter([28]), l2 = mutate([1]))
[    28.908][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = mutate([1]), l2 = filter([28]))
[    28.928][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([21]), l2 = filter([28]))
[    28.934][cube-solver-11][DEBUG] Solving cube (l0 = intersect(), l1 = filter([28]), l2 = mutate([1]))
[    28.936][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter([28]), l2 = summarise([21]))
[    28.986][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = mutate([1]), l2 = filter([28]))
[    29.004][cube-solver-11][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([23]), l2 = filter([28]))
[    29.006][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([28]), l2 = summarise([24]))
[    29.018][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([28]), l2 = mutate([1]))
[    29.058][cube-solver-14][DEBUG] Found solution with cube (l0 = natural_join4([3]), l1 = filter(), l2 = mutate())
[    29.060][MainProcess][INFO] Statistics:
[    29.060][MainProcess][INFO] 	Generated cubes: 112
[    29.060][MainProcess][INFO] 	Attempted programs: 16
[    29.060][MainProcess][INFO] 		Rejected: 6
[    29.060][MainProcess][INFO] 		Failed: 9
[    29.060][MainProcess][INFO] 	Blacklist clauses: 70
[    29.060][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    29.061][MainProcess][DEBUG] 	0: Counter({'natural_join4': 230})
[    29.061][MainProcess][DEBUG] 	1: Counter({'filter': 156, 'mutate': 74})
[    29.062][MainProcess][DEBUG] 	2: Counter({'mutate': 88, 'filter': 74, 'summarise': 68})
[    29.062][MainProcess][INFO] Solution found: mutate(filter(natural_join4(@param0, @param1, @param2, @param3), F_name == 'faculty1' | major == 'History'), maxage = max(age))
[    29.064][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate([2]), l2 = filter([28]))
[    29.081][cube-solver-11][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([25]), l2 = filter([28]))
[    29.083][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([28]), l2 = summarise([25]))
[    29.090][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([28]), l2 = mutate([2]))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/2-1.txt", col_types = cols(C_name = col_character(),F_key = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/2-2.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/2-3.txt", col_types = cols(F_key = col_character(),F_name = col_character()))
input3 <- copy_to(con, input3)
input4 <- read_csv("tests-examples/textbook/tables/2-4.txt", col_types = cols(S_key = col_character(),major = col_character(),age = col_integer()))
input4 <- copy_to(con, input4)
expected_output <- read_csv("tests-examples/textbook/tables/2.out", col_types = cols(maxage = col_integer()))

df5 <- inner_join(input1, input2) %>% inner_join(input3) %>% inner_join(input4)
df6 <- df5 %>% filter(F_name == 'faculty1' | major == 'History')
df7 <- df6 %>% mutate(maxage = max(age))
out <- df7 %>% select(maxage) %>% distinct() %>% arrange(maxage)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT MAX(`age`) OVER () AS `maxage`
FROM
  (SELECT `LHS`.`C_name` AS `C_name`,
          `LHS`.`F_key` AS `F_key`,
          `LHS`.`S_key` AS `S_key`,
          `LHS`.`F_name` AS `F_name`,
          `RHS`.`major` AS `major`,
          `RHS`.`age` AS `age`
   FROM
     (SELECT `LHS`.`C_name` AS `C_name`,
             `LHS`.`F_key` AS `F_key`,
             `LHS`.`S_key` AS `S_key`,
             `RHS`.`F_name` AS `F_name`
      FROM
        (SELECT `LHS`.`C_name` AS `C_name`,
                `LHS`.`F_key` AS `F_key`,
                `RHS`.`S_key` AS `S_key`
         FROM `input1` AS `LHS`
         INNER JOIN `input2` AS `RHS` ON (`LHS`.`C_name` = `RHS`.`C_name`)) AS `LHS`
      INNER JOIN `input3` AS `RHS` ON (`LHS`.`F_key` = `RHS`.`F_key`)) AS `LHS`
   INNER JOIN `input4` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
WHERE (`F_name` = 'faculty1'
       OR `major` = 'History')
ORDER BY maxage
