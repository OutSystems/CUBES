[     1.576][MainProcess][INFO] Parsing specification...
[     1.591][MainProcess][DEBUG] Reading input files...
[     1.608][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15-1.txt: ['string', 'string']
[     1.628][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15-2.txt: ['string', 'string']
[     1.636][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15-3.txt: ['string', 'string']
[     1.642][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15.out: ['string']
[     1.674][MainProcess][DEBUG] Generating DSL...
[     1.701][MainProcess][INFO] Creating 16 processes
[     1.760][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.761][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.761][MainProcess][DEBUG] Increasing generator loc to 3
[     1.764][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.768][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.771][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.772][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.776][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.780][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.784][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.788][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.790][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.795][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.795][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.795][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.804][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.829][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.376][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.377][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.379][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.379][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.380][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.383][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.384][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.384][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.386][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.436][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.436][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.440][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.946][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.948][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.955][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.955][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.956][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.959][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.963][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.965][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.969][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.975][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = filter())
[     2.977][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = anti_join())
[     2.980][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.982][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = left_join())
[     2.988][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = union())
[     2.991][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = intersect())
[     2.992][cube-solver-14][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = semi_join())
[     2.993][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = cross_join())
[     2.998][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = inner_join())
[     2.998][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise([2]))
[     2.999][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = mutate())
[     3.001][cube-solver-14][DEBUG] Solving cube (l0 = summarise([2]), l1 = anti_join(), l2 = filter())
[     3.006][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = left_join(), l2 = filter())
[     3.007][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = union(), l2 = filter())
[     3.010][cube-solver-14][DEBUG] Solving cube (l0 = summarise([2]), l1 = intersect(), l2 = filter())
[     3.012][cube-solver-13][DEBUG] Solving cube (l0 = summarise([3]), l1 = semi_join(), l2 = filter())
[     3.014][cube-solver-10][DEBUG] Solving cube (l0 = summarise([3]), l1 = cross_join(), l2 = filter())
[     3.016][cube-solver-12][DEBUG] Solving cube (l0 = summarise([3]), l1 = mutate(), l2 = filter())
[     3.018][cube-solver-14][DEBUG] Solving cube (l0 = summarise([3]), l1 = inner_join(), l2 = filter())
[     3.021][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([3]))
[     3.023][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     3.024][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([3]))
[     3.026][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     3.028][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     3.029][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([3]))
[     3.031][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     3.032][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = natural_join())
[     3.034][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = natural_join3())
[     3.036][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = natural_join4())
[     3.041][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = summarise([4]))
[     3.041][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = filter())
[     3.043][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = anti_join())
[     3.043][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = left_join())
[     3.045][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = union())
[     3.051][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = intersect())
[     3.052][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = cross_join())
[     3.053][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = semi_join())
[     3.055][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = mutate())
[     3.056][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = inner_join())
[     3.063][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise([5]))
[     3.063][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     3.065][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise([5]))
[     3.066][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     3.067][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise([5]))
[     3.068][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     3.072][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise([5]))
[     3.073][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise([5]))
[     3.073][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     3.076][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     3.077][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise([5]))
[     3.078][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     3.081][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise([5]))
[     3.082][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     3.083][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     3.084][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3())
[     3.088][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = summarise([5]))
[     3.088][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join4())
[     3.089][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = filter([1]))
[     3.092][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = anti_join())
[     3.092][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = left_join())
[     3.096][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = union())
[     3.098][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = intersect())
[     3.099][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = cross_join())
[     3.099][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = semi_join())
[     3.099][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = mutate())
[     3.099][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([1]))
[     3.103][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = inner_join())
[     3.105][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = inner_join(), l2 = mutate())
[     3.106][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = inner_join(), l2 = summarise([6]))
[     3.107][cube-solver-14][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([6]), l2 = filter([1]))
[     3.110][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([1]), l2 = summarise([6]))
[     3.110][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([1]), l2 = mutate())
[     3.111][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([1]))
[     3.112][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([7]), l2 = filter([1]))
[     3.117][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = filter([1]), l2 = mutate())
[     3.118][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = filter([1]), l2 = summarise([7]))
[     3.120][cube-solver-14][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([1]))
[     3.120][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = summarise([7]), l2 = filter([1]))
[     3.123][cube-solver-13][DEBUG] Solving cube (l0 = union(), l1 = filter([1]), l2 = mutate())
[     3.124][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = filter([1]), l2 = summarise([7]))
[     3.125][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([1]))
[     3.127][cube-solver-14][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([7]), l2 = filter([1]))
[     3.129][cube-solver-13][DEBUG] Solving cube (l0 = intersect(), l1 = filter([1]), l2 = summarise([7]))
[     3.130][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter([1]), l2 = mutate())
[     3.132][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([1]))
[     3.133][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([8]), l2 = filter([1]))
[     3.136][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([1]), l2 = summarise([8]))
[     3.137][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([1]), l2 = mutate())
[     3.138][cube-solver-14][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([8]), l2 = filter([1]))
[     3.138][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([1]))
[     3.140][cube-solver-13][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([1]), l2 = summarise([8]))
[     3.140][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = mutate(), l2 = filter([1]))
[     3.143][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([1]), l2 = mutate())
[     3.145][cube-solver-6][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([1]))
[     3.146][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([1]))
[     3.146][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([1]), l2 = filter([1]))
[     3.149][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([1]))
[     3.150][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([9]), l2 = filter([1]))
[     3.150][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([1]))
[     3.151][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = natural_join3([1]))
[     3.151][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = natural_join())
[     3.154][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = natural_join4())
[     3.160][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = summarise([10]))
[     3.163][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = filter([1]))
[     3.166][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = anti_join())
[     3.170][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = left_join())
[     3.172][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = union())
[     3.174][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = intersect())
[     3.176][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = semi_join())
[     3.179][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = mutate())
[     3.179][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = cross_join())
[     3.182][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = inner_join())
[     3.182][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([2]))
[     3.187][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([2]))
[     3.187][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([2]))
[     3.190][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([2]))
[     3.190][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([2]))
[     3.193][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([2]))
[     3.195][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([2]))
[     3.197][cube-solver-15][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([10]), l2 = filter([3]))
[     3.198][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([2]))
[     3.202][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([3]), l2 = summarise([10]))
[     3.202][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([3]), l2 = summarise([10]))
[     3.205][cube-solver-15][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([3]))
[     3.206][cube-solver-6][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([3]), l2 = mutate())
[     3.208][MainProcess][DEBUG] Increasing generator loc to 4
[     3.209][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     3.211][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     3.214][cube-solver-6][DEBUG] Initialising process for 4 lines of code.
[     3.219][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     3.731][cube-solver-3][DEBUG] Solving cube (l0 = summarise([21]), l1 = natural_join4(), l2 = filter([14]))
[     3.756][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     3.812][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = natural_join3([2]), l2 = filter([15]))
[     3.841][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = natural_join(), l2 = filter([15]))
[     3.860][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     4.195][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = summarise([21]), l2 = filter([20]))
[     4.243][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     4.922][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([24]))
[     4.923][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([24]))
[     4.924][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([24]))
[     4.938][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([24]))
[     4.959][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = filter([24]), l3 = summarise([21]))
[     4.976][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = filter([24]), l3 = filter([24]))
[     4.989][cube-solver-6][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = filter([24]), l3 = anti_join())
[     5.006][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = filter([24]), l3 = left_join())
[     5.449][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join([2]))
[     5.546][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join3([2]))
[     5.888][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     5.945][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join4())
[     6.329][cube-solver-0][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join4())
[     6.330][MainProcess][INFO] Statistics:
[     6.331][MainProcess][INFO] 	Generated cubes: 154
[     6.331][MainProcess][INFO] 	Attempted programs: 45
[     6.331][MainProcess][INFO] 		Rejected: 33
[     6.331][MainProcess][INFO] 		Failed: 11
[     6.331][MainProcess][INFO] 	Blacklist clauses: 49
[     6.331][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     6.332][MainProcess][DEBUG] 	0: Counter({'mutate': 850, 'natural_join3': 463, 'summarise': 335})
[     6.333][MainProcess][DEBUG] 	1: Counter({'natural_join3': 584, 'filter': 351, 'mutate': 320, 'natural_join4': 250, 'summarise': 143})
[     6.334][MainProcess][DEBUG] 	2: Counter({'filter': 1297, 'natural_join4': 181, 'natural_join3': 170})
[     6.334][MainProcess][DEBUG] Printing statistics for good programs of size 4
[     6.335][MainProcess][DEBUG] 	0: Counter({'natural_join': 104})
[     6.335][MainProcess][DEBUG] 	1: Counter({'summarise': 104})
[     6.335][MainProcess][DEBUG] 	2: Counter({'natural_join': 48, 'filter': 46, 'natural_join3': 10})
[     6.335][MainProcess][DEBUG] 	3: Counter({'filter': 58, 'natural_join4': 20, 'natural_join': 16, 'left_join': 10})
[     6.335][MainProcess][INFO] Solution found: natural_join4(filter(summarise(natural_join(@param1, @param0), n = n(), S_key, color), color == 'red' & n == max(n)), @param1, @param0, @param2)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/15-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/15-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/15-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/15.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input2, input1)
df5 <- df4 %>% group_by(S_key, color) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(color == 'red' & n == max(n))
df7 <- inner_join(df6, input2) %>% inner_join(input1) %>% inner_join(input3)
out <- df7 %>% select(S_name) %>% distinct() %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT `S_name`
FROM
  (SELECT `LHS`.`S_key` AS `S_key`,
          `LHS`.`color` AS `color`,
          `LHS`.`n` AS `n`,
          `LHS`.`P_id` AS `P_id`,
          `RHS`.`S_name` AS `S_name`
   FROM
     (SELECT `LHS`.`S_key` AS `S_key`,
             `LHS`.`color` AS `color`,
             `LHS`.`n` AS `n`,
             `LHS`.`P_id` AS `P_id`
      FROM
        (SELECT `LHS`.`S_key` AS `S_key`,
                `LHS`.`color` AS `color`,
                `LHS`.`n` AS `n`,
                `RHS`.`P_id` AS `P_id`
         FROM
           (SELECT `S_key`,
                   `color`,
                   `n`
            FROM
              (SELECT `S_key`,
                      `color`,
                      `n`,
                      MAX(`n`) OVER () AS `zzz4`
               FROM
                 (SELECT `S_key`,
                         `color`,
                         COUNT() AS `n`
                  FROM
                    (SELECT `LHS`.`P_id` AS `P_id`,
                            `LHS`.`color` AS `color`,
                            `RHS`.`S_key` AS `S_key`
                     FROM `input2` AS `LHS`
                     INNER JOIN `input1` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
                  GROUP BY `S_key`,
                           `color`))
            WHERE (`color` = 'red'
                   AND n = zzz4)) AS LHS
         INNER JOIN input2 AS RHS ON (LHS.color = RHS.color)) AS LHS
      INNER JOIN input1 AS RHS ON (LHS.S_key = RHS.S_key
                                   AND LHS.P_id = RHS.P_id)) AS LHS
   INNER JOIN input3 AS RHS ON (LHS.S_key = RHS.S_key))
ORDER BY S_name
