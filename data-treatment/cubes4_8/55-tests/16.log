[     1.565][MainProcess][INFO] Parsing specification...
[     1.569][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.569][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.569][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.570][MainProcess][DEBUG] Reading input files...
[     1.575][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-1.txt: ['string', 'string']
[     1.579][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-2.txt: ['string', 'string']
[     1.582][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-3.txt: ['string', 'string']
[     1.586][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16.out: ['string']
[     1.615][MainProcess][DEBUG] Generating DSL...
[     1.640][MainProcess][INFO] Creating 8 processes
[     1.672][MainProcess][DEBUG] Increasing generator loc to 3
[     1.697][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.698][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.699][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.705][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.711][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.713][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.715][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.720][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     2.196][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.197][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.200][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.207][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.208][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.210][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.210][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.210][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.212][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.242][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.242][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.244][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.641][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.646][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.652][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.656][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.657][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.659][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.661][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     2.664][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     2.669][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     2.670][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     2.673][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.675][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.678][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.681][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.706][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.710][cube-solver-7][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter(), l2 = summarise([3]))
[     2.716][cube-solver-7][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = filter())
[     2.720][cube-solver-7][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = anti_join())
[     2.724][cube-solver-7][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter(), l2 = left_join())
[     2.729][cube-solver-7][DEBUG] Solving cube (l0 = summarise([6]), l1 = filter(), l2 = union())
[     2.734][cube-solver-7][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter(), l2 = intersect())
[     2.739][cube-solver-7][DEBUG] Solving cube (l0 = summarise([8]), l1 = filter(), l2 = semi_join())
[     2.744][cube-solver-7][DEBUG] Solving cube (l0 = summarise([8]), l1 = filter(), l2 = cross_join())
[     2.751][cube-solver-7][DEBUG] Solving cube (l0 = summarise([9]), l1 = filter(), l2 = mutate())
[     2.757][cube-solver-7][DEBUG] Solving cube (l0 = summarise([9]), l1 = filter(), l2 = inner_join())
[     2.764][cube-solver-7][DEBUG] Solving cube (l0 = summarise([9]), l1 = anti_join(), l2 = filter())
[     2.770][cube-solver-7][DEBUG] Solving cube (l0 = summarise([9]), l1 = left_join(), l2 = filter())
[     2.776][cube-solver-7][DEBUG] Solving cube (l0 = summarise([9]), l1 = union(), l2 = filter())
[     2.782][cube-solver-7][DEBUG] Solving cube (l0 = summarise([9]), l1 = intersect(), l2 = filter())
[     2.788][cube-solver-7][DEBUG] Solving cube (l0 = summarise([9]), l1 = semi_join(), l2 = filter())
[     2.794][cube-solver-7][DEBUG] Solving cube (l0 = summarise([11]), l1 = cross_join(), l2 = filter())
[     2.802][cube-solver-7][DEBUG] Solving cube (l0 = summarise([11]), l1 = mutate(), l2 = filter())
[     2.809][cube-solver-7][DEBUG] Solving cube (l0 = summarise([12]), l1 = inner_join(), l2 = filter())
[     2.816][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([12]))
[     2.823][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     2.826][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([12]))
[     3.190][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([4]), l2 = mutate())
[     3.191][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([4]), l2 = summarise([19]))
[     3.250][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = mutate(), l2 = filter([4]))
[     3.267][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = summarise([19]), l2 = filter([4]))
[     3.929][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = mutate())
[     3.930][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = summarise([21]))
[     4.580][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = mutate())
[     5.803][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = natural_join())
[     5.826][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = natural_join3([2]))
[     6.972][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = natural_join4())
[     6.988][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = summarise([21]))
[     7.007][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = filter([4]))
[     7.022][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = anti_join())
[     7.035][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = left_join())
[     7.048][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = union())
[     7.061][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = intersect())
[     7.075][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = semi_join())
[     7.089][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = cross_join())
[     7.102][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = mutate())
[     7.114][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = inner_join())
[     7.126][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = summarise([21]))
[     7.138][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = mutate())
[     7.143][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = summarise([21]))
[     7.155][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = mutate())
[     7.159][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = summarise([21]))
[     7.172][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = mutate())
[     7.176][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = summarise([21]))
[     7.188][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = mutate())
[     7.192][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = summarise([21]))
[     7.204][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = mutate())
[     7.208][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = summarise([21]))
[     7.219][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = mutate())
[     7.223][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = summarise([21]))
[     7.235][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = mutate())
[     7.239][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join())
[     7.243][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join3([2]))
[     7.512][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join4())
[     8.443][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = summarise([21]))
[     8.460][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = filter([4]))
[     8.465][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = anti_join())
[     8.469][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = left_join())
[     8.472][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = union())
[     8.476][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = intersect())
[     8.479][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = semi_join())
[     8.482][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = cross_join())
[     8.487][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = mutate())
[     8.490][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = inner_join())
[     8.495][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = summarise([21]))
[     8.507][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = mutate())
[     8.512][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([21]), l2 = filter([4]))
[     8.525][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = summarise([21]))
[     8.536][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = mutate())
[     8.540][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([4]))
[     8.545][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([21]), l2 = filter([4]))
[     8.556][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = summarise([21]))
[     8.568][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = mutate())
[     8.572][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([4]))
[     8.576][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = summarise([21]), l2 = filter([4]))
[     8.588][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = summarise([21]))
[     8.600][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = mutate())
[     8.604][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([4]))
[     8.608][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([21]), l2 = filter([4]))
[     8.621][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = summarise([21]))
[     8.634][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = mutate())
[     8.638][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([4]))
[     8.643][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([21]), l2 = filter([4]))
[     8.655][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = summarise([21]))
[     8.666][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = mutate())
[     8.671][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([4]))
[     8.675][cube-solver-6][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([21]), l2 = filter([4]))
[     8.688][cube-solver-6][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = summarise([21]))
[     8.699][cube-solver-6][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = mutate())
[     8.703][cube-solver-6][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([4]))
[     8.707][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([4]))
[     8.711][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([2]), l2 = filter([4]))
[     9.076][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([4]))
[     9.085][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([21]), l2 = filter([4]))
[     9.098][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join())
[     9.101][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join3([2]))
[    10.534][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join4())
[    10.545][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = summarise([21]))
[    10.557][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = filter([4]))
[    10.562][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = anti_join())
[    10.566][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = left_join())
[    10.569][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = union())
[    10.573][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = intersect())
[    10.576][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = semi_join())
[    10.580][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = cross_join())
[    10.583][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = mutate())
[    10.587][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = inner_join())
[    10.590][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([4]))
[    10.594][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([4]))
[    10.597][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([4]))
[    10.601][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([4]))
[    10.605][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([4]))
[    10.608][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([4]))
[    10.612][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([4]))
[    10.616][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([4]))
[    10.620][cube-solver-6][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([21]), l2 = filter([4]))
[    10.632][cube-solver-6][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = summarise([21]))
[    10.648][cube-solver-6][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = mutate())
[    10.653][cube-solver-6][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([4]))
[    10.656][MainProcess][DEBUG] Increasing generator loc to 4
[    10.657][cube-solver-6][DEBUG] Initialising process for 4 lines of code.
[    11.224][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[    12.099][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([4]))
[    12.692][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([4]))
[    15.790][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[    16.413][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[    17.272][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([4]))
[    17.299][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join([2]))
[    17.838][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([4]))
[    17.864][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join3([2]))
[    19.416][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[    19.525][cube-solver-6][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = summarise([21]))
[    19.547][cube-solver-6][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = filter([4]))
[    19.562][cube-solver-6][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[    20.212][cube-solver-6][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[    20.214][MainProcess][INFO] Statistics:
[    20.215][MainProcess][INFO] 	Generated cubes: 152
[    20.215][MainProcess][INFO] 	Attempted programs: 3369
[    20.215][MainProcess][INFO] 		Rejected: 858
[    20.215][MainProcess][INFO] 		Failed: 2510
[    20.216][MainProcess][INFO] 	Blacklist clauses: 29
[    20.216][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    20.224][MainProcess][DEBUG] 	0: Counter({'filter': 4416, 'mutate': 2426, 'summarise': 1048, 'natural_join3': 752})
[    20.227][MainProcess][DEBUG] 	1: Counter({'natural_join4': 2696, 'filter': 2467, 'mutate': 1896, 'natural_join3': 1040, 'summarise': 544})
[    20.230][MainProcess][DEBUG] 	2: Counter({'natural_join4': 3003, 'summarise': 2288, 'filter': 1760, 'natural_join3': 1152, 'mutate': 440})
[    20.230][MainProcess][DEBUG] Printing statistics for good programs of size 4
[    20.230][MainProcess][DEBUG] 	0: Counter({'natural_join': 1293})
[    20.231][MainProcess][DEBUG] 	1: Counter({'summarise': 1293})
[    20.231][MainProcess][DEBUG] 	2: Counter({'natural_join': 464, 'natural_join3': 438, 'filter': 391})
[    20.232][MainProcess][DEBUG] 	3: Counter({'filter': 902, 'natural_join3': 186, 'natural_join': 174, 'anti_join': 31})
[    20.232][MainProcess][INFO] Solution found: anti_join(@param1, filter(summarise(natural_join(@param0, @param2), n = n(), P_id, S_name), S_name != 'AWS'), 'P_id')

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/16-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/16-2.txt", col_types = cols(P_id = col_character(),P_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/16-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/16.out", col_types = cols(P_name = col_character()))

df4 <- inner_join(input1, input3)
df5 <- df4 %>% group_by(P_id, S_name) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(S_name != 'AWS')
df7 <- anti_join(input2, df6, by=c('P_id'))
out <- df7 %>% select(P_name) %>% arrange(P_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `P_name`
FROM
  (SELECT *
   FROM `input2` AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM
             (SELECT `P_id`,
                     `S_name`,
                     COUNT() AS `n`
              FROM
                (SELECT `LHS`.`S_key` AS `S_key`,
                        `LHS`.`P_id` AS `P_id`,
                        `RHS`.`S_name` AS `S_name`
                 FROM `input1` AS `LHS`
                 INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
              GROUP BY `P_id`,
                       `S_name`)
           WHERE (`S_name` != 'AWS')) AS RHS
        WHERE (LHS.P_id = RHS.P_id) ))
ORDER BY P_name
