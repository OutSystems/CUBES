[     1.585][MainProcess][INFO] Parsing specification...
[     1.588][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.588][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.589][MainProcess][DEBUG] Reading input files...
[     1.596][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-1.txt: ['string', 'string']
[     1.600][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-2.txt: ['string', 'string']
[     1.605][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-3.txt: ['string', 'string']
[     1.609][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/35.out: ['string']
[     1.638][MainProcess][DEBUG] Generating DSL...
[     1.661][MainProcess][INFO] Creating 8 processes
[     1.689][MainProcess][DEBUG] Increasing generator loc to 3
[     1.713][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.716][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.718][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.722][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.722][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.726][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.729][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.737][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     2.179][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.180][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.183][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.195][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.195][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.196][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.196][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.197][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.197][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.201][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.202][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.204][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.406][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.416][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.418][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.422][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.425][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.425][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.427][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     2.430][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     2.431][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     2.432][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.434][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.438][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.455][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([1]))
[     2.456][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([1]), l2 = summarise([1]))
[     2.461][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = natural_join4())
[     2.467][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter([1]), l2 = summarise([2]))
[     2.473][cube-solver-7][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([1]), l2 = filter([1]))
[     2.478][cube-solver-7][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([1]), l2 = anti_join())
[     2.484][cube-solver-7][DEBUG] Solving cube (l0 = summarise([6]), l1 = filter([2]), l2 = left_join())
[     2.490][cube-solver-7][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([2]), l2 = union())
[     2.496][cube-solver-7][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([2]), l2 = intersect())
[     2.503][cube-solver-7][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([2]), l2 = semi_join())
[     2.509][cube-solver-7][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([2]), l2 = cross_join())
[     2.515][cube-solver-7][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([2]), l2 = mutate())
[     2.521][cube-solver-7][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([2]), l2 = inner_join())
[     2.528][cube-solver-7][DEBUG] Solving cube (l0 = summarise([8]), l1 = anti_join(), l2 = filter([2]))
[     2.535][cube-solver-7][DEBUG] Solving cube (l0 = summarise([8]), l1 = left_join(), l2 = filter([2]))
[     2.542][cube-solver-7][DEBUG] Solving cube (l0 = summarise([8]), l1 = union(), l2 = filter([3]))
[     2.548][cube-solver-7][DEBUG] Solving cube (l0 = summarise([8]), l1 = intersect(), l2 = filter([3]))
[     2.556][cube-solver-7][DEBUG] Solving cube (l0 = summarise([10]), l1 = semi_join(), l2 = filter([3]))
[     2.564][cube-solver-7][DEBUG] Solving cube (l0 = summarise([11]), l1 = cross_join(), l2 = filter([3]))
[     2.572][cube-solver-7][DEBUG] Solving cube (l0 = summarise([11]), l1 = mutate(), l2 = filter([3]))
[     2.581][cube-solver-7][DEBUG] Solving cube (l0 = summarise([11]), l1 = inner_join(), l2 = filter([3]))
[     2.589][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join(), l2 = summarise([11]))
[     2.596][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join(), l2 = mutate())
[     2.600][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join3(), l2 = summarise([12]))
[     2.608][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join3(), l2 = mutate())
[     2.612][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join4(), l2 = summarise([13]))
[     2.620][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join4(), l2 = mutate())
[     2.624][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([14]), l2 = natural_join())
[     2.633][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([14]), l2 = natural_join3())
[     2.642][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([15]), l2 = natural_join4())
[     2.652][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([15]), l2 = summarise([15]))
[     2.667][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([15]), l2 = filter([3]))
[     2.678][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([15]), l2 = anti_join())
[     2.687][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([16]), l2 = left_join())
[     2.697][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([16]), l2 = union())
[     2.713][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([16]), l2 = intersect())
[     2.724][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([16]), l2 = semi_join())
[     2.735][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([16]), l2 = cross_join())
[     2.745][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([16]), l2 = mutate())
[     2.756][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([16]), l2 = inner_join())
[     2.767][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = filter([5]), l2 = summarise([16]))
[     2.778][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = filter([5]), l2 = mutate())
[     2.784][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = anti_join(), l2 = summarise([16]))
[     2.794][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = anti_join(), l2 = mutate())
[     2.798][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = left_join(), l2 = summarise([16]))
[     2.808][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = left_join(), l2 = mutate())
[     2.812][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = union(), l2 = summarise([18]))
[     2.823][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = union(), l2 = mutate())
[     2.827][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = intersect(), l2 = summarise([18]))
[     2.838][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = intersect(), l2 = mutate())
[     2.842][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = semi_join(), l2 = summarise([18]))
[     2.853][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = semi_join(), l2 = mutate())
[     2.857][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = cross_join(), l2 = summarise([18]))
[     2.868][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = cross_join(), l2 = mutate())
[     2.872][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = natural_join())
[     2.875][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = natural_join3())
[     2.879][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = natural_join4())
[     2.883][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = summarise([18]))
[     2.893][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = filter([5]))
[     2.898][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = anti_join())
[     2.902][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = left_join())
[     2.906][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = union())
[     2.909][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = intersect())
[     2.913][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = semi_join())
[     2.916][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = cross_join())
[     2.919][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = mutate())
[     2.923][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = inner_join())
[     2.926][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = inner_join(), l2 = summarise([18]))
[     2.936][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = inner_join(), l2 = mutate())
[     2.940][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([18]), l2 = filter([5]))
[     2.952][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([5]), l2 = summarise([18]))
[     2.962][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([5]), l2 = mutate())
[     2.967][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([5]))
[     2.973][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([18]), l2 = filter([5]))
[     2.984][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = filter([5]), l2 = summarise([18]))
[     2.993][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = filter([5]), l2 = mutate())
[     2.997][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([5]))
[     3.001][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = summarise([18]), l2 = filter([5]))
[     3.009][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([5]))
[     3.012][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter([5]), l2 = summarise([18]))
[     3.022][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter([5]), l2 = mutate())
[     3.027][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([5]))
[     3.031][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([18]), l2 = filter([5]))
[     3.037][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([18]), l2 = filter([5]))
[     3.043][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter([5]), l2 = summarise([18]))
[     3.054][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter([5]), l2 = mutate())
[     3.058][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([5]))
[     3.063][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([18]), l2 = filter([5]))
[     3.074][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([5]), l2 = summarise([18]))
[     3.074][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([5]), l2 = summarise([18]))
[     3.085][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = filter([6]), l2 = mutate())
[     3.086][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([6]), l2 = mutate())
[     3.087][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([6]))
[     3.091][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([18]), l2 = filter([6]))
[     3.092][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([6]), l2 = summarise([18]))
[     3.096][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([6]), l2 = mutate())
[     3.102][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([6]))
[     3.102][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([6]))
[     3.103][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([1]), l2 = filter([6]))
[     3.107][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([6]))
[     3.108][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([19]), l2 = filter([6]))
[     3.120][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([6]), l2 = natural_join())
[     3.125][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([6]), l2 = natural_join3([1]))
[     3.309][cube-solver-5][DEBUG] Found solution with cube (l0 = summarise([1]), l1 = filter([1]), l2 = natural_join4())
[     3.311][MainProcess][INFO] Statistics:
[     3.311][MainProcess][INFO] 	Generated cubes: 119
[     3.311][MainProcess][INFO] 	Attempted programs: 41
[     3.311][MainProcess][INFO] 		Rejected: 5
[     3.312][MainProcess][INFO] 		Failed: 35
[     3.312][MainProcess][INFO] 	Blacklist clauses: 26
[     3.312][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     3.313][MainProcess][DEBUG] 	0: Counter({'summarise': 147, 'mutate': 47, 'natural_join3': 45})
[     3.313][MainProcess][DEBUG] 	1: Counter({'filter': 120, 'natural_join3': 56, 'mutate': 27, 'natural_join4': 19, 'summarise': 18})
[     3.313][MainProcess][DEBUG] 	2: Counter({'filter': 120, 'natural_join3': 67, 'natural_join4': 53})
[     3.314][MainProcess][INFO] Solution found: natural_join4(@param2, @param0, @param1, filter(summarise(@param0, n = n(), P_id), n == 2))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/35.out", col_types = cols(S_name = col_character()))

df4 <- input1 %>% group_by(P_id) %>% summarise(n = n()) %>% ungroup()
df5 <- df4 %>% filter(n == 2)
df6 <- inner_join(input3, input1) %>% inner_join(input2) %>% inner_join(df5)
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT LHS.S_key AS S_key,
          LHS.S_name AS S_name,
          LHS.P_id AS P_id,
          LHS.color AS color,
          RHS.n AS n
   FROM
     (SELECT LHS.S_key AS S_key,
             LHS.S_name AS S_name,
             LHS.P_id AS P_id,
             RHS.color AS color
      FROM
        (SELECT LHS.S_key AS S_key,
                LHS.S_name AS S_name,
                RHS.P_id AS P_id
         FROM input3 AS LHS
         INNER JOIN input1 AS RHS ON (LHS.S_key = RHS.S_key)) AS LHS
      INNER JOIN input2 AS RHS ON (LHS.P_id = RHS.P_id)) AS LHS
   INNER JOIN
     (SELECT *
      FROM
        (SELECT P_id,
                COUNT() AS n
         FROM input1
         GROUP BY P_id)
      WHERE (n = 2.0)) AS RHS ON (LHS.P_id = RHS.P_id))
ORDER BY S_name
