[     1.568][MainProcess][INFO] Parsing specification...
[     1.572][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.572][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.572][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.573][MainProcess][DEBUG] Reading input files...
[     1.578][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-1.txt: ['string', 'string']
[     1.582][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-2.txt: ['string', 'string']
[     1.585][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-3.txt: ['string', 'string']
[     1.589][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/34.out: ['string']
[     1.618][MainProcess][DEBUG] Generating DSL...
[     1.646][MainProcess][INFO] Creating 8 processes
[     1.679][MainProcess][DEBUG] Increasing generator loc to 3
[     1.704][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.708][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.709][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.716][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.716][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.723][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.724][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.730][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     2.449][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.449][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.450][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.450][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.452][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.455][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.468][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.468][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.470][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.478][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.478][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.480][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.896][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.911][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.914][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.917][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.919][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.922][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     2.926][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     2.961][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.971][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.974][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     2.977][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.980][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = natural_join3())
[     2.982][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = natural_join())
[     2.989][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = natural_join4())
[     3.011][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([1]), l2 = summarise([4]))
[     3.024][cube-solver-5][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([1]), l2 = summarise([4]))
[     3.038][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([1]), l2 = filter([1]))
[     3.049][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([1]), l2 = anti_join())
[     3.060][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([1]), l2 = left_join())
[     3.071][cube-solver-5][DEBUG] Solving cube (l0 = summarise([6]), l1 = filter([1]), l2 = union())
[     3.083][cube-solver-5][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([1]), l2 = intersect())
[     3.094][cube-solver-5][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([1]), l2 = semi_join())
[     3.105][cube-solver-5][DEBUG] Solving cube (l0 = summarise([9]), l1 = filter([1]), l2 = cross_join())
[     3.115][cube-solver-5][DEBUG] Solving cube (l0 = summarise([9]), l1 = filter([2]), l2 = mutate())
[     3.123][cube-solver-5][DEBUG] Solving cube (l0 = summarise([9]), l1 = filter([3]), l2 = inner_join())
[     3.132][cube-solver-5][DEBUG] Solving cube (l0 = summarise([9]), l1 = anti_join(), l2 = filter([3]))
[     3.141][cube-solver-5][DEBUG] Solving cube (l0 = summarise([10]), l1 = left_join(), l2 = filter([3]))
[     3.150][cube-solver-5][DEBUG] Solving cube (l0 = summarise([10]), l1 = union(), l2 = filter([3]))
[     3.158][cube-solver-5][DEBUG] Solving cube (l0 = summarise([10]), l1 = intersect(), l2 = filter([3]))
[     3.167][cube-solver-5][DEBUG] Solving cube (l0 = summarise([11]), l1 = semi_join(), l2 = filter([4]))
[     3.176][cube-solver-5][DEBUG] Solving cube (l0 = summarise([11]), l1 = cross_join(), l2 = filter([4]))
[     3.186][cube-solver-5][DEBUG] Solving cube (l0 = summarise([12]), l1 = mutate(), l2 = filter([4]))
[     3.195][cube-solver-5][DEBUG] Solving cube (l0 = summarise([13]), l1 = inner_join(), l2 = filter([4]))
[     3.206][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = natural_join(), l2 = summarise([13]))
[     3.216][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = natural_join(), l2 = mutate())
[     3.221][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = natural_join3(), l2 = summarise([13]))
[     3.232][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = natural_join3(), l2 = mutate())
[     3.237][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = natural_join4(), l2 = summarise([13]))
[     3.247][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = natural_join4(), l2 = mutate())
[     3.252][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([13]), l2 = natural_join())
[     3.264][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([13]), l2 = natural_join3())
[     3.277][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([13]), l2 = natural_join4())
[     3.287][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([13]), l2 = summarise([13]))
[     3.303][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([13]), l2 = filter([5]))
[     3.315][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([13]), l2 = anti_join())
[     3.327][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([13]), l2 = left_join())
[     3.338][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = summarise([13]), l2 = union())
[     3.349][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = summarise([13]), l2 = intersect())
[     3.360][cube-solver-5][DEBUG] Solving cube (l0 = filter([7]), l1 = summarise([13]), l2 = semi_join())
[     3.371][cube-solver-5][DEBUG] Solving cube (l0 = filter([8]), l1 = summarise([13]), l2 = cross_join())
[     3.385][cube-solver-5][DEBUG] Solving cube (l0 = filter([9]), l1 = summarise([13]), l2 = mutate())
[     3.397][cube-solver-5][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([13]), l2 = inner_join())
[     3.409][cube-solver-5][DEBUG] Solving cube (l0 = filter([10]), l1 = filter([10]), l2 = summarise([13]))
[     3.424][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = filter([11]), l2 = mutate())
[     3.435][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = anti_join(), l2 = summarise([13]))
[     3.446][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = anti_join(), l2 = mutate())
[     3.453][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = left_join(), l2 = summarise([14]))
[     3.466][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = left_join(), l2 = mutate())
[     3.473][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = union(), l2 = summarise([14]))
[     3.485][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = union(), l2 = mutate())
[     3.492][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = intersect(), l2 = summarise([14]))
[     3.504][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = intersect(), l2 = mutate())
[     3.511][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = semi_join(), l2 = summarise([14]))
[     3.524][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = semi_join(), l2 = mutate())
[     3.531][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = cross_join(), l2 = summarise([14]))
[     3.543][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = cross_join(), l2 = mutate())
[     3.550][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = mutate(), l2 = natural_join())
[     3.557][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = mutate(), l2 = natural_join3())
[     3.565][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = mutate(), l2 = natural_join4())
[     3.577][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = mutate(), l2 = summarise([14]))
[     3.591][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = mutate(), l2 = filter([11]))
[     3.601][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = mutate(), l2 = anti_join())
[     3.608][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = mutate(), l2 = left_join())
[     3.615][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = mutate(), l2 = union())
[     3.622][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = mutate(), l2 = intersect())
[     3.629][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = mutate(), l2 = semi_join())
[     3.636][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = mutate(), l2 = cross_join())
[     3.646][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = mutate(), l2 = mutate())
[     3.653][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = mutate(), l2 = inner_join())
[     3.660][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = inner_join(), l2 = summarise([15]))
[     3.673][cube-solver-5][DEBUG] Solving cube (l0 = filter([11]), l1 = inner_join(), l2 = mutate())
[     3.681][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([15]), l2 = filter([11]))
[     3.685][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([15]), l2 = filter([11]))
[     3.703][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([11]), l2 = summarise([15]))
[     3.707][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([11]), l2 = summarise([15]))
[     3.727][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([11]), l2 = mutate())
[     3.728][cube-solver-2][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([11]))
[     3.734][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([15]), l2 = filter([11]))
[     3.737][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = filter([11]), l2 = summarise([15]))
[     3.748][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = filter([11]), l2 = mutate())
[     3.750][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([11]))
[     3.753][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([11]))
[     3.755][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = summarise([15]), l2 = filter([11]))
[     3.757][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = filter([11]), l2 = summarise([15]))
[     3.762][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([11]), l2 = mutate())
[     3.769][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = filter([11]), l2 = mutate())
[     3.770][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([11]))
[     3.777][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([15]), l2 = filter([11]))
[     3.778][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = filter([11]), l2 = mutate())
[     3.778][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = filter([11]), l2 = summarise([15]))
[     3.784][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([11]))
[     3.791][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([15]), l2 = filter([11]))
[     3.792][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([11]), l2 = summarise([15]))
[     3.800][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([11]), l2 = mutate())
[     3.804][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([11]))
[     3.806][cube-solver-2][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([15]), l2 = filter([11]))
[     3.812][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([11]), l2 = summarise([15]))
[     3.813][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([11]), l2 = mutate())
[     3.820][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([11]))
[     3.822][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([11]))
[     3.829][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter([11]))
[     3.830][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([11]))
[     3.835][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([15]), l2 = filter([11]))
[     3.858][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([11]), l2 = natural_join())
[     3.871][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([11]), l2 = natural_join3())
[    10.165][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = natural_join4())
[    17.715][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = summarise([21]))
[    17.919][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = filter([60]))
[    17.996][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = anti_join())
[    18.027][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = left_join())
[    18.052][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = union())
[    18.074][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = intersect())
[    18.097][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = semi_join())
[    18.119][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = cross_join())
[    18.143][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = mutate())
[    18.171][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = inner_join())
[    18.204][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([60]))
[    18.231][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([60]))
[    18.254][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([60]))
[    18.286][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([60]))
[    18.319][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([60]))
[    18.344][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([60]))
[    18.371][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([60]))
[    18.407][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([60]))
[    18.439][cube-solver-1][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([21]), l2 = filter([60]))
[    18.479][cube-solver-1][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([60]), l2 = summarise([21]))
[    18.524][cube-solver-1][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([60]), l2 = mutate())
[    18.553][cube-solver-1][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([60]))
[    18.574][MainProcess][DEBUG] Increasing generator loc to 4
[    18.575][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[    20.483][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([60]))
[    21.779][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[    23.556][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([60]))
[    24.659][cube-solver-5][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([60]))
[    24.663][MainProcess][INFO] Statistics:
[    24.664][MainProcess][INFO] 	Generated cubes: 144
[    24.664][MainProcess][INFO] 	Attempted programs: 1464
[    24.664][MainProcess][INFO] 		Rejected: 407
[    24.664][MainProcess][INFO] 		Failed: 1056
[    24.664][MainProcess][INFO] 	Blacklist clauses: 85
[    24.664][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    24.671][MainProcess][DEBUG] 	0: Counter({'mutate': 6970, 'natural_join3': 2250, 'summarise': 2220})
[    24.675][MainProcess][DEBUG] 	1: Counter({'natural_join3': 3520, 'filter': 3130, 'natural_join4': 2540, 'summarise': 1450, 'mutate': 800})
[    24.678][MainProcess][DEBUG] 	2: Counter({'filter': 8310, 'natural_join4': 2120, 'natural_join3': 1010})
[    24.678][MainProcess][DEBUG] Printing statistics for good programs of size 4
[    24.679][MainProcess][DEBUG] 	0: Counter({'natural_join': 458})
[    24.679][MainProcess][DEBUG] 	1: Counter({'summarise': 458})
[    24.679][MainProcess][DEBUG] 	2: Counter({'natural_join': 379, 'natural_join3': 79})
[    24.679][MainProcess][DEBUG] 	3: Counter({'filter': 458})
[    24.679][MainProcess][INFO] Solution found: filter(natural_join3(@param0, summarise(natural_join(@param0, @param1), n = n(), P_id, color), @param2), color == 'red' & n >= 3)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/34.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input2)
df5 <- df4 %>% group_by(P_id, color) %>% summarise(n = n()) %>% ungroup()
df6 <- inner_join(input1, df5) %>% inner_join(input3)
df7 <- df6 %>% filter(color == 'red' & n >= 3)
out <- df7 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `LHS`.`S_key` AS `S_key`,
          `LHS`.`P_id` AS `P_id`,
          `LHS`.`color` AS `color`,
          `LHS`.`n` AS `n`,
          `RHS`.`S_name` AS `S_name`
   FROM
     (SELECT `LHS`.`S_key` AS `S_key`,
             `LHS`.`P_id` AS `P_id`,
             `RHS`.`color` AS `color`,
             `RHS`.`n` AS `n`
      FROM `input1` AS `LHS`
      INNER JOIN
        (SELECT `P_id`,
                `color`,
                COUNT() AS `n`
         FROM
           (SELECT `LHS`.`S_key` AS `S_key`,
                   `LHS`.`P_id` AS `P_id`,
                   `RHS`.`color` AS `color`
            FROM `input1` AS `LHS`
            INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
         GROUP BY `P_id`,
                  `color`) AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)) AS `LHS`
   INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
WHERE (`color` = 'red'
       AND n >= 3.0)
ORDER BY S_name
