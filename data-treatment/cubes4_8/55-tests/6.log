[     1.554][MainProcess][INFO] Parsing specification...
[     1.557][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.557][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.558][MainProcess][DEBUG] Reading input files...
[     1.565][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/6-1.txt: ['string', 'string']
[     1.569][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/6-2.txt: ['string', 'string']
[     1.574][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/6-3.txt: ['string', 'string']
[     1.578][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/6.out: ['string']
[     1.608][MainProcess][DEBUG] Generating DSL...
[     1.632][MainProcess][INFO] Creating 8 processes
[     1.662][MainProcess][DEBUG] Increasing generator loc to 3
[     1.685][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.688][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.690][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.693][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.694][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.701][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.702][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.708][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     2.148][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.149][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.152][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.161][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.162][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.163][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.163][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.163][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.165][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.167][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.168][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.169][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.372][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.377][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.379][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.384][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.387][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.387][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.389][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     2.392][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     2.392][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     2.394][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.396][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.400][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.426][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([1]))
[     2.427][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([1]), l2 = summarise([2]))
[     2.431][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter([2]), l2 = natural_join4())
[     2.441][cube-solver-5][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter([2]), l2 = summarise([3]))
[     2.448][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([2]), l2 = filter([2]))
[     2.454][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([2]), l2 = anti_join())
[     2.461][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([2]), l2 = left_join())
[     2.466][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([2]), l2 = union())
[     2.471][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([2]), l2 = intersect())
[     2.477][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([2]), l2 = semi_join())
[     2.482][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([2]), l2 = cross_join())
[     2.487][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([2]), l2 = mutate())
[     2.492][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([2]), l2 = inner_join())
[     2.498][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = anti_join(), l2 = filter([2]))
[     2.504][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = left_join(), l2 = filter([3]))
[     2.509][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = union(), l2 = filter([3]))
[     2.515][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = intersect(), l2 = filter([3]))
[     2.520][cube-solver-5][DEBUG] Solving cube (l0 = summarise([6]), l1 = semi_join(), l2 = filter([3]))
[     2.526][cube-solver-5][DEBUG] Solving cube (l0 = summarise([6]), l1 = cross_join(), l2 = filter([3]))
[     2.533][cube-solver-5][DEBUG] Solving cube (l0 = summarise([7]), l1 = mutate(), l2 = filter([3]))
[     2.539][cube-solver-5][DEBUG] Solving cube (l0 = summarise([7]), l1 = inner_join(), l2 = filter([3]))
[     2.546][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join(), l2 = summarise([8]))
[     2.552][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join(), l2 = mutate())
[     2.555][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join3(), l2 = summarise([9]))
[     2.562][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join3(), l2 = mutate())
[     2.565][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join4(), l2 = summarise([10]))
[     2.572][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join4(), l2 = mutate())
[     2.575][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([10]), l2 = natural_join())
[     2.583][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([10]), l2 = natural_join3())
[     2.590][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([10]), l2 = natural_join4())
[     2.598][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([10]), l2 = summarise([10]))
[     2.609][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([10]), l2 = filter([3]))
[     2.617][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([10]), l2 = anti_join())
[     2.624][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([10]), l2 = left_join())
[     2.631][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([10]), l2 = union())
[     2.639][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([10]), l2 = intersect())
[     2.646][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([10]), l2 = semi_join())
[     2.653][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([10]), l2 = cross_join())
[     2.667][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([10]), l2 = mutate())
[     2.674][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([10]), l2 = inner_join())
[     2.681][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = filter([3]), l2 = summarise([10]))
[     2.690][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = filter([3]), l2 = mutate())
[     2.694][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = anti_join(), l2 = summarise([10]))
[     2.701][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = anti_join(), l2 = mutate())
[     2.704][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = left_join(), l2 = summarise([10]))
[     2.711][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = left_join(), l2 = mutate())
[     2.715][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = union(), l2 = summarise([10]))
[     2.722][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = union(), l2 = mutate())
[     2.725][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = intersect(), l2 = summarise([11]))
[     2.732][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = mutate())
[     2.736][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = summarise([11]))
[     2.743][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = semi_join(), l2 = mutate())
[     2.747][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = cross_join(), l2 = summarise([11]))
[     2.755][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = cross_join(), l2 = mutate())
[     2.759][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = natural_join())
[     2.763][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = natural_join3())
[     2.767][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = natural_join4())
[     2.771][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = summarise([11]))
[     2.779][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = filter([6]))
[     2.785][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = anti_join())
[     2.788][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = left_join())
[     2.792][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = union())
[     2.796][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = intersect())
[     2.800][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = semi_join())
[     2.804][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = cross_join())
[     2.808][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = mutate())
[     2.811][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = inner_join())
[     2.815][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = inner_join(), l2 = summarise([13]))
[     2.824][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = inner_join(), l2 = mutate())
[     2.829][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([14]), l2 = filter([6]))
[     2.839][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([6]), l2 = summarise([14]))
[     2.849][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([6]), l2 = mutate())
[     2.853][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([6]))
[     2.859][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([15]), l2 = filter([6]))
[     2.869][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = filter([6]), l2 = summarise([17]))
[     2.880][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = filter([6]), l2 = mutate())
[     2.885][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([6]))
[     2.890][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = summarise([17]), l2 = filter([6]))
[     2.902][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = filter([6]), l2 = summarise([18]))
[     2.913][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = filter([6]), l2 = mutate())
[     2.918][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([7]))
[     2.923][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([18]), l2 = filter([7]))
[     2.934][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = filter([7]), l2 = summarise([18]))
[     2.944][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = filter([7]), l2 = mutate())
[     2.949][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([8]))
[     2.954][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([18]), l2 = filter([8]))
[     2.965][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([8]), l2 = summarise([18]))
[     2.975][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([8]), l2 = mutate())
[     2.980][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([8]))
[     2.985][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([18]), l2 = filter([8]))
[     2.996][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([8]), l2 = summarise([18]))
[     2.997][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([8]), l2 = summarise([18]))
[     3.007][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([8]), l2 = mutate())
[     3.013][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([8]))
[     3.015][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([8]))
[     3.017][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter([8]))
[     3.021][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([8]))
[     3.021][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([18]), l2 = filter([8]))
[     3.022][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([8]), l2 = mutate())
[     3.033][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([18]), l2 = filter([8]))
[     3.036][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([8]))
[     3.046][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([8]), l2 = natural_join())
[     3.052][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([8]), l2 = natural_join3())
[     4.586][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([15]), l2 = natural_join4())
[     5.758][cube-solver-2][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise([18]), l2 = filter([8]))
[     5.761][MainProcess][INFO] Statistics:
[     5.761][MainProcess][INFO] 	Generated cubes: 120
[     5.761][MainProcess][INFO] 	Attempted programs: 121
[     5.761][MainProcess][INFO] 		Rejected: 66
[     5.762][MainProcess][INFO] 		Failed: 54
[     5.762][MainProcess][INFO] 	Blacklist clauses: 38
[     5.762][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     5.763][MainProcess][DEBUG] 	0: Counter({'mutate': 1046, 'summarise': 549, 'natural_join3': 439})
[     5.765][MainProcess][DEBUG] 	1: Counter({'filter': 812, 'natural_join3': 494, 'natural_join4': 289, 'summarise': 239, 'mutate': 200})
[     5.766][MainProcess][DEBUG] 	2: Counter({'filter': 1222, 'natural_join3': 426, 'natural_join4': 386})
[     5.766][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param1, @param0, @param2), n = n(), F_name), n <= 5)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/6-1.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/6-2.txt", col_types = cols(C_name = col_character(),F_key = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/6-3.txt", col_types = cols(F_key = col_character(),F_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/6.out", col_types = cols(F_name = col_character()))

df4 <- inner_join(input2, input1) %>% inner_join(input3)
df5 <- df4 %>% group_by(F_name) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n <= 5)
out <- df6 %>% select(F_name) %>% arrange(F_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT F_name
FROM
  (SELECT F_name,
          COUNT() AS n
   FROM
     (SELECT LHS.C_name AS C_name,
             LHS.F_key AS F_key,
             LHS.S_key AS S_key,
             RHS.F_name AS F_name
      FROM
        (SELECT LHS.C_name AS C_name,
                LHS.F_key AS F_key,
                RHS.S_key AS S_key
         FROM input2 AS LHS
         INNER JOIN input1 AS RHS ON (LHS.C_name = RHS.C_name)) AS LHS
      INNER JOIN input3 AS RHS ON (LHS.F_key = RHS.F_key))
   GROUP BY F_name)
WHERE (n <= 5.0)
ORDER BY F_name
