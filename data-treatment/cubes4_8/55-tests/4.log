[     1.580][MainProcess][INFO] Parsing specification...
[     1.583][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.583][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.584][MainProcess][DEBUG] Reading input files...
[     1.591][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4-1.txt: ['string', 'string']
[     1.596][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4-2.txt: ['string', 'string']
[     1.601][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4-3.txt: ['string', 'string']
[     1.605][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4.out: ['string']
[     1.635][MainProcess][DEBUG] Generating DSL...
[     1.659][MainProcess][INFO] Creating 8 processes
[     1.690][MainProcess][DEBUG] Increasing generator loc to 3
[     1.711][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.715][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.716][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.723][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.724][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.729][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.730][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.735][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     2.174][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.175][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.177][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.178][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.179][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.179][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.191][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.192][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.195][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.196][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.196][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.198][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.395][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.403][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.407][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.411][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.413][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.414][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.416][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     2.418][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     2.419][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     2.421][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.423][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.427][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.444][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([1]), l2 = summarise([1]))
[     2.452][cube-solver-5][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter([1]), l2 = natural_join4())
[     2.478][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([2]))
[     2.486][cube-solver-7][DEBUG] Solving cube (l0 = summarise([6]), l1 = filter([2]), l2 = summarise([6]))
[     2.500][cube-solver-7][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([2]), l2 = filter([2]))
[     2.510][cube-solver-7][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([2]), l2 = anti_join())
[     2.517][cube-solver-7][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([2]), l2 = left_join())
[     2.523][cube-solver-7][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([2]), l2 = union())
[     2.529][cube-solver-7][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([3]), l2 = intersect())
[     2.536][cube-solver-7][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([3]), l2 = semi_join())
[     2.542][cube-solver-7][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([3]), l2 = cross_join())
[     2.548][cube-solver-7][DEBUG] Solving cube (l0 = summarise([8]), l1 = filter([3]), l2 = mutate())
[     2.555][cube-solver-7][DEBUG] Solving cube (l0 = summarise([8]), l1 = filter([3]), l2 = inner_join())
[     2.562][cube-solver-7][DEBUG] Solving cube (l0 = summarise([9]), l1 = anti_join(), l2 = filter([3]))
[     2.570][cube-solver-7][DEBUG] Solving cube (l0 = summarise([9]), l1 = left_join(), l2 = filter([3]))
[     2.577][cube-solver-7][DEBUG] Solving cube (l0 = summarise([9]), l1 = union(), l2 = filter([3]))
[     2.584][cube-solver-7][DEBUG] Solving cube (l0 = summarise([9]), l1 = intersect(), l2 = filter([3]))
[     2.592][cube-solver-7][DEBUG] Solving cube (l0 = summarise([9]), l1 = semi_join(), l2 = filter([3]))
[     2.599][cube-solver-7][DEBUG] Solving cube (l0 = summarise([9]), l1 = cross_join(), l2 = filter([3]))
[     2.606][cube-solver-7][DEBUG] Solving cube (l0 = summarise([9]), l1 = mutate(), l2 = filter([3]))
[     2.613][cube-solver-7][DEBUG] Solving cube (l0 = summarise([9]), l1 = inner_join(), l2 = filter([3]))
[     2.620][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join(), l2 = summarise([9]))
[     2.627][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join(), l2 = mutate())
[     2.630][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join3(), l2 = summarise([9]))
[     2.637][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join3(), l2 = mutate())
[     2.640][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join4(), l2 = summarise([10]))
[     2.647][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join4(), l2 = mutate())
[     2.650][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([10]), l2 = natural_join())
[     2.657][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([10]), l2 = natural_join3())
[     2.665][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([11]), l2 = natural_join4())
[     2.673][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([13]), l2 = summarise([13]))
[     2.686][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([13]), l2 = filter([3]))
[     2.697][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([13]), l2 = anti_join())
[     2.706][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([13]), l2 = left_join())
[     2.714][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([13]), l2 = union())
[     2.723][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([13]), l2 = intersect())
[     2.731][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([13]), l2 = semi_join())
[     2.740][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([14]), l2 = cross_join())
[     2.749][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([14]), l2 = mutate())
[     2.758][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([14]), l2 = inner_join())
[     2.767][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = filter([5]), l2 = summarise([14]))
[     2.778][cube-solver-7][DEBUG] Solving cube (l0 = filter([5]), l1 = filter([5]), l2 = mutate())
[     2.783][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = anti_join(), l2 = summarise([16]))
[     2.794][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = anti_join(), l2 = mutate())
[     2.798][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = left_join(), l2 = summarise([16]))
[     2.808][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = left_join(), l2 = mutate())
[     2.812][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = union(), l2 = summarise([16]))
[     2.822][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = union(), l2 = mutate())
[     2.826][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = intersect(), l2 = summarise([16]))
[     2.836][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = intersect(), l2 = mutate())
[     2.840][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = semi_join(), l2 = summarise([16]))
[     2.850][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = semi_join(), l2 = mutate())
[     2.854][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = cross_join(), l2 = summarise([16]))
[     2.865][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = cross_join(), l2 = mutate())
[     2.869][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = natural_join())
[     2.873][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = natural_join3())
[     2.877][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = natural_join4())
[     2.881][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = summarise([16]))
[     2.891][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = filter([6]))
[     2.897][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = anti_join())
[     2.901][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = left_join())
[     2.905][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = union())
[     2.908][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = intersect())
[     2.912][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = semi_join())
[     2.916][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = cross_join())
[     2.920][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = mutate())
[     2.924][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = inner_join())
[     2.928][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = inner_join(), l2 = summarise([16]))
[     2.938][cube-solver-7][DEBUG] Solving cube (l0 = filter([7]), l1 = inner_join(), l2 = mutate())
[     2.943][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([16]), l2 = filter([7]))
[     2.954][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([7]), l2 = summarise([16]))
[     2.967][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([7]), l2 = mutate())
[     2.974][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([8]))
[     2.982][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([16]), l2 = filter([8]))
[     2.993][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = filter([8]), l2 = summarise([16]))
[     3.004][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = filter([8]), l2 = mutate())
[     3.007][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([16]), l2 = filter([8]))
[     3.009][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([8]))
[     3.014][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = summarise([16]), l2 = filter([8]))
[     3.025][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter([8]), l2 = summarise([16]))
[     3.036][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter([8]), l2 = mutate())
[     3.041][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([8]))
[     3.046][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([16]), l2 = filter([8]))
[     3.049][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([8]), l2 = mutate())
[     3.057][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter([8]), l2 = summarise([16]))
[     3.063][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = filter([8]), l2 = mutate())
[     3.068][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([8]))
[     3.069][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([16]), l2 = filter([8]))
[     3.073][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([8]), l2 = summarise([16]))
[     3.076][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([8]), l2 = summarise([16]))
[     3.081][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([8]))
[     3.082][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([8]), l2 = mutate())
[     3.085][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([8]))
[     3.087][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([16]), l2 = filter([8]))
[     3.089][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([8]), l2 = summarise([16]))
[     3.090][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([8]), l2 = mutate())
[     3.095][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([8]))
[     3.099][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([8]))
[     3.100][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter([8]))
[     3.100][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([8]))
[     3.105][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([16]), l2 = filter([8]))
[     3.117][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([8]), l2 = natural_join())
[     3.123][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([8]), l2 = natural_join3([1]))
[     3.507][cube-solver-2][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise([16]), l2 = filter([8]))
[     3.508][MainProcess][INFO] Statistics:
[     3.508][MainProcess][INFO] 	Generated cubes: 119
[     3.508][MainProcess][INFO] 	Attempted programs: 10
[     3.508][MainProcess][INFO] 		Rejected: 8
[     3.509][MainProcess][INFO] 		Failed: 1
[     3.509][MainProcess][INFO] 	Blacklist clauses: 25
[     3.509][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     3.509][MainProcess][DEBUG] 	0: Counter({'summarise': 152, 'mutate': 120, 'natural_join3': 85})
[     3.510][MainProcess][DEBUG] 	1: Counter({'filter': 147, 'natural_join3': 87, 'mutate': 44, 'summarise': 41, 'natural_join4': 38})
[     3.510][MainProcess][DEBUG] 	2: Counter({'filter': 210, 'natural_join4': 90, 'natural_join3': 57})
[     3.510][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param1, @param0, @param2), n = n(), S_name, meets_at), n >= 2)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/4-1.txt", col_types = cols(C_name = col_character(),meets_at = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/4-2.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/4-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/4.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input2, input1) %>% inner_join(input3)
df5 <- df4 %>% group_by(S_name, meets_at) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n >= 2)
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT S_name,
          meets_at,
          COUNT() AS n
   FROM
     (SELECT LHS.S_key AS S_key,
             LHS.C_name AS C_name,
             LHS.meets_at AS meets_at,
             RHS.S_name AS S_name
      FROM
        (SELECT LHS.S_key AS S_key,
                LHS.C_name AS C_name,
                RHS.meets_at AS meets_at
         FROM input2 AS LHS
         INNER JOIN input1 AS RHS ON (LHS.C_name = RHS.C_name)) AS LHS
      INNER JOIN input3 AS RHS ON (LHS.S_key = RHS.S_key))
   GROUP BY S_name,
            meets_at)
WHERE (n >= 2.0)
ORDER BY S_name
