[     1.574][MainProcess][INFO] Parsing specification...
[     1.577][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.578][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.578][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.578][MainProcess][DEBUG] Reading input files...
[     1.585][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15-1.txt: ['string', 'string']
[     1.590][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15-2.txt: ['string', 'string']
[     1.594][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15-3.txt: ['string', 'string']
[     1.598][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15.out: ['string']
[     1.627][MainProcess][DEBUG] Generating DSL...
[     1.654][MainProcess][INFO] Creating 8 processes
[     1.680][MainProcess][DEBUG] Increasing generator loc to 3
[     1.709][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.712][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.714][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.717][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.719][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.724][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.726][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.728][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     2.260][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.261][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.262][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.269][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.269][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.271][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.277][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.277][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.282][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.287][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.288][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.292][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.763][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.774][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.777][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.783][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.785][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.786][cube-solver-7][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.788][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     2.792][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     2.794][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     2.796][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.799][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.803][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     2.804][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.816][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = natural_join4())
[     2.824][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([1]), l2 = mutate())
[     2.830][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter([1]), l2 = summarise([2]))
[     2.836][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter([1]), l2 = filter([1]))
[     2.841][cube-solver-6][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([1]), l2 = anti_join())
[     2.852][cube-solver-6][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([2]), l2 = left_join())
[     2.857][cube-solver-6][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([2]), l2 = union())
[     2.863][cube-solver-6][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([2]), l2 = intersect())
[     2.869][cube-solver-6][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([2]), l2 = semi_join())
[     2.875][cube-solver-6][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([2]), l2 = cross_join())
[     2.883][cube-solver-6][DEBUG] Solving cube (l0 = summarise([7]), l1 = filter([2]), l2 = mutate())
[     2.889][cube-solver-6][DEBUG] Solving cube (l0 = summarise([8]), l1 = filter([2]), l2 = inner_join())
[     2.897][cube-solver-6][DEBUG] Solving cube (l0 = summarise([8]), l1 = anti_join(), l2 = filter([2]))
[     2.905][cube-solver-6][DEBUG] Solving cube (l0 = summarise([8]), l1 = left_join(), l2 = filter([2]))
[     2.912][cube-solver-6][DEBUG] Solving cube (l0 = summarise([9]), l1 = union(), l2 = filter([2]))
[     2.919][cube-solver-6][DEBUG] Solving cube (l0 = summarise([9]), l1 = intersect(), l2 = filter([2]))
[     2.927][cube-solver-6][DEBUG] Solving cube (l0 = summarise([10]), l1 = semi_join(), l2 = filter([2]))
[     2.935][cube-solver-6][DEBUG] Solving cube (l0 = summarise([10]), l1 = cross_join(), l2 = filter([2]))
[     2.943][cube-solver-6][DEBUG] Solving cube (l0 = summarise([10]), l1 = mutate(), l2 = filter([2]))
[     2.951][cube-solver-6][DEBUG] Solving cube (l0 = summarise([11]), l1 = inner_join(), l2 = filter([2]))
[     2.959][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join(), l2 = summarise([12]))
[     2.970][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join(), l2 = mutate())
[     2.975][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join3(), l2 = summarise([12]))
[     2.988][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join3(), l2 = mutate())
[     2.992][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join4(), l2 = summarise([12]))
[     3.002][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join4(), l2 = mutate())
[     3.006][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([12]), l2 = natural_join())
[     3.017][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([12]), l2 = natural_join3())
[     3.027][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([13]), l2 = natural_join4())
[     3.036][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([13]), l2 = summarise([13]))
[     3.051][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([13]), l2 = filter([2]))
[     3.060][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([13]), l2 = anti_join())
[     3.070][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([13]), l2 = left_join())
[     3.079][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([13]), l2 = union())
[     3.089][cube-solver-6][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([14]), l2 = intersect())
[     3.099][cube-solver-6][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([14]), l2 = semi_join())
[     3.110][cube-solver-6][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([14]), l2 = cross_join())
[     3.121][cube-solver-6][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([16]), l2 = mutate())
[     3.133][cube-solver-6][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([17]), l2 = inner_join())
[     3.145][cube-solver-6][DEBUG] Solving cube (l0 = filter([5]), l1 = filter([5]), l2 = summarise([18]))
[     3.158][cube-solver-6][DEBUG] Solving cube (l0 = filter([5]), l1 = filter([5]), l2 = mutate())
[     3.164][cube-solver-6][DEBUG] Solving cube (l0 = filter([5]), l1 = anti_join(), l2 = summarise([19]))
[     3.176][cube-solver-6][DEBUG] Solving cube (l0 = filter([5]), l1 = anti_join(), l2 = mutate())
[     3.181][cube-solver-6][DEBUG] Solving cube (l0 = filter([5]), l1 = left_join(), l2 = summarise([19]))
[     3.193][cube-solver-6][DEBUG] Solving cube (l0 = filter([5]), l1 = left_join(), l2 = mutate())
[     3.198][cube-solver-6][DEBUG] Solving cube (l0 = filter([5]), l1 = union(), l2 = summarise([20]))
[     3.211][cube-solver-6][DEBUG] Solving cube (l0 = filter([5]), l1 = union(), l2 = mutate())
[     3.216][cube-solver-6][DEBUG] Solving cube (l0 = filter([5]), l1 = intersect(), l2 = summarise([20]))
[     3.229][cube-solver-6][DEBUG] Solving cube (l0 = filter([6]), l1 = intersect(), l2 = mutate())
[     3.234][cube-solver-6][DEBUG] Solving cube (l0 = filter([6]), l1 = semi_join(), l2 = summarise([20]))
[     3.247][cube-solver-6][DEBUG] Solving cube (l0 = filter([6]), l1 = semi_join(), l2 = mutate())
[     3.252][cube-solver-6][DEBUG] Solving cube (l0 = filter([6]), l1 = cross_join(), l2 = summarise([20]))
[     3.265][cube-solver-6][DEBUG] Solving cube (l0 = filter([6]), l1 = cross_join(), l2 = mutate())
[     3.270][cube-solver-6][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = natural_join())
[     3.275][cube-solver-6][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = natural_join3())
[     3.280][cube-solver-6][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = natural_join4())
[     3.285][cube-solver-6][DEBUG] Solving cube (l0 = filter([7]), l1 = mutate(), l2 = summarise([20]))
[     3.297][cube-solver-6][DEBUG] Solving cube (l0 = filter([8]), l1 = mutate(), l2 = filter([8]))
[     3.304][cube-solver-6][DEBUG] Solving cube (l0 = filter([8]), l1 = mutate(), l2 = anti_join())
[     3.309][cube-solver-6][DEBUG] Solving cube (l0 = filter([8]), l1 = mutate(), l2 = left_join())
[     3.314][cube-solver-6][DEBUG] Solving cube (l0 = filter([8]), l1 = mutate(), l2 = union())
[     3.319][cube-solver-6][DEBUG] Solving cube (l0 = filter([8]), l1 = mutate(), l2 = intersect())
[     3.324][cube-solver-6][DEBUG] Solving cube (l0 = filter([8]), l1 = mutate(), l2 = semi_join())
[     3.329][cube-solver-6][DEBUG] Solving cube (l0 = filter([8]), l1 = mutate(), l2 = cross_join())
[     3.335][cube-solver-6][DEBUG] Solving cube (l0 = filter([8]), l1 = mutate(), l2 = mutate())
[     3.340][cube-solver-6][DEBUG] Solving cube (l0 = filter([8]), l1 = mutate(), l2 = inner_join())
[     3.346][cube-solver-6][DEBUG] Solving cube (l0 = filter([9]), l1 = inner_join(), l2 = summarise([20]))
[     3.358][cube-solver-6][DEBUG] Solving cube (l0 = filter([9]), l1 = inner_join(), l2 = mutate())
[     3.364][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([20]), l2 = filter([9]))
[     3.377][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([9]), l2 = summarise([20]))
[     3.389][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([9]), l2 = mutate())
[     3.395][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([9]))
[     3.396][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([9]))
[     3.401][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([20]), l2 = filter([9]))
[     3.407][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([20]), l2 = filter([9]))
[     3.415][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = filter([9]), l2 = summarise([20]))
[     3.427][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([9]), l2 = mutate())
[     3.429][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = filter([9]), l2 = mutate())
[     3.436][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([9]))
[     3.437][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([9]), l2 = summarise([20]))
[     3.439][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = summarise([20]), l2 = filter([9]))
[     3.442][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = filter([9]), l2 = summarise([20]))
[     3.452][cube-solver-3][DEBUG] Solving cube (l0 = union(), l1 = filter([9]), l2 = mutate())
[     3.456][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([9]))
[     3.457][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([20]), l2 = filter([9]))
[     3.458][cube-solver-3][DEBUG] Solving cube (l0 = intersect(), l1 = filter([9]), l2 = summarise([20]))
[     3.462][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = filter([9]), l2 = mutate())
[     3.468][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([9]))
[     3.471][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([20]), l2 = filter([9]))
[     3.472][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([9]), l2 = summarise([20]))
[     3.474][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([9]), l2 = mutate())
[     3.480][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([9]))
[     3.486][cube-solver-2][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([20]), l2 = filter([9]))
[     3.487][cube-solver-3][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([9]), l2 = summarise([20]))
[     3.487][cube-solver-6][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([9]), l2 = mutate())
[     3.493][cube-solver-6][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([9]))
[     3.499][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([9]))
[     3.500][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([1]), l2 = filter([9]))
[     3.501][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([9]))
[     3.505][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([20]), l2 = filter([9]))
[     3.519][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([9]), l2 = natural_join())
[     3.525][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([9]), l2 = natural_join3([1]))
[     4.697][cube-solver-1][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise([20]), l2 = filter([9]))
[     4.698][MainProcess][INFO] Statistics:
[     4.698][MainProcess][INFO] 	Generated cubes: 119
[     4.699][MainProcess][INFO] 	Attempted programs: 46
[     4.699][MainProcess][INFO] 		Rejected: 20
[     4.699][MainProcess][INFO] 		Failed: 25
[     4.699][MainProcess][INFO] 	Blacklist clauses: 30
[     4.699][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     4.700][MainProcess][DEBUG] 	0: Counter({'mutate': 337, 'natural_join3': 245, 'summarise': 210})
[     4.701][MainProcess][DEBUG] 	1: Counter({'natural_join3': 257, 'mutate': 156, 'natural_join4': 150, 'filter': 140, 'summarise': 89})
[     4.701][MainProcess][DEBUG] 	2: Counter({'filter': 652, 'natural_join3': 90, 'natural_join4': 50})
[     4.702][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param1, @param0, @param2), n = n(), S_name, color), color == 'red' & n == max(n))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/15-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/15-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/15-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/15.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input2, input1) %>% inner_join(input3)
df5 <- df4 %>% group_by(S_name, color) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(color == 'red' & n == max(n))
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `S_name`,
          `color`,
          `n`
   FROM
     (SELECT `S_name`,
             `color`,
             `n`,
             MAX(`n`) OVER () AS `zzz4`
      FROM
        (SELECT `S_name`,
                `color`,
                COUNT() AS `n`
         FROM
           (SELECT `LHS`.`P_id` AS `P_id`,
                   `LHS`.`color` AS `color`,
                   `LHS`.`S_key` AS `S_key`,
                   `RHS`.`S_name` AS `S_name`
            FROM
              (SELECT `LHS`.`P_id` AS `P_id`,
                      `LHS`.`color` AS `color`,
                      `RHS`.`S_key` AS `S_key`
               FROM `input2` AS `LHS`
               INNER JOIN `input1` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)) AS `LHS`
            INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
         GROUP BY `S_name`,
                  `color`))
   WHERE (`color` = 'red'
          AND n = zzz4))
ORDER BY S_name
