[     1.612][MainProcess][INFO] Parsing specification...
[     1.615][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.615][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.615][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.616][MainProcess][DEBUG] Reading input files...
[     1.623][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16-1.txt: ['string', 'string']
[     1.628][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16-2.txt: ['string', 'string']
[     1.633][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16-3.txt: ['string', 'string']
[     1.637][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16.out: ['string']
[     1.667][MainProcess][DEBUG] Generating DSL...
[     1.693][MainProcess][INFO] Creating 8 processes
[     1.722][MainProcess][DEBUG] Increasing generator loc to 3
[     1.748][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.752][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.756][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.757][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.761][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.762][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.764][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.775][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     2.256][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.257][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.263][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.271][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.271][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.273][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.292][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.292][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.294][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.332][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.333][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.337][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.697][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.705][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.708][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.710][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.712][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.721][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.724][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     2.729][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     2.736][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     2.738][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.740][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.743][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.787][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([2]), l2 = summarise([1]))
[     2.787][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([2]))
[     2.792][cube-solver-5][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter([2]), l2 = natural_join4())
[     2.801][cube-solver-7][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter([2]), l2 = summarise([3]))
[     2.808][cube-solver-7][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([2]), l2 = filter([2]))
[     2.814][cube-solver-7][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([2]), l2 = anti_join())
[     2.819][cube-solver-7][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([2]), l2 = left_join())
[     2.824][cube-solver-7][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([2]), l2 = union())
[     2.829][cube-solver-7][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([2]), l2 = intersect())
[     2.834][cube-solver-7][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([2]), l2 = semi_join())
[     2.840][cube-solver-7][DEBUG] Solving cube (l0 = summarise([6]), l1 = filter([2]), l2 = cross_join())
[     2.846][cube-solver-7][DEBUG] Solving cube (l0 = summarise([6]), l1 = filter([2]), l2 = mutate())
[     2.852][cube-solver-7][DEBUG] Solving cube (l0 = summarise([6]), l1 = filter([2]), l2 = inner_join())
[     2.858][cube-solver-7][DEBUG] Solving cube (l0 = summarise([6]), l1 = anti_join(), l2 = filter([2]))
[     2.864][cube-solver-7][DEBUG] Solving cube (l0 = summarise([6]), l1 = left_join(), l2 = filter([2]))
[     2.870][cube-solver-7][DEBUG] Solving cube (l0 = summarise([6]), l1 = union(), l2 = filter([2]))
[     2.875][cube-solver-7][DEBUG] Solving cube (l0 = summarise([6]), l1 = intersect(), l2 = filter([2]))
[     2.881][cube-solver-7][DEBUG] Solving cube (l0 = summarise([6]), l1 = semi_join(), l2 = filter([2]))
[     2.887][cube-solver-7][DEBUG] Solving cube (l0 = summarise([6]), l1 = cross_join(), l2 = filter([2]))
[     2.893][cube-solver-7][DEBUG] Solving cube (l0 = summarise([6]), l1 = mutate(), l2 = filter([2]))
[     2.898][cube-solver-7][DEBUG] Solving cube (l0 = summarise([6]), l1 = inner_join(), l2 = filter([2]))
[     2.904][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join(), l2 = summarise([6]))
[     2.910][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join(), l2 = mutate())
[     2.913][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join3(), l2 = summarise([7]))
[     3.288][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([4]), l2 = summarise([11]))
[     3.316][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([4]), l2 = mutate())
[     3.322][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([4]))
[     3.338][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([11]), l2 = filter([4]))
[     4.046][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = mutate())
[     4.056][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = summarise([21]))
[     4.705][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = mutate())
[     6.142][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = natural_join())
[     6.163][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = natural_join3([2]))
[     7.235][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = natural_join4())
[     7.259][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = summarise([21]))
[     7.282][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = filter([4]))
[     7.299][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = anti_join())
[     7.314][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = left_join())
[     7.329][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = union())
[     7.343][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = intersect())
[     7.358][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = semi_join())
[     7.372][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = cross_join())
[     7.387][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = mutate())
[     7.401][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = inner_join())
[     7.415][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = summarise([21]))
[     7.429][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = mutate())
[     7.435][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = summarise([21]))
[     7.448][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = mutate())
[     7.453][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = summarise([21]))
[     7.466][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = mutate())
[     7.470][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = summarise([21]))
[     7.483][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = mutate())
[     7.487][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = summarise([21]))
[     7.500][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = mutate())
[     7.505][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = summarise([21]))
[     7.518][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = mutate())
[     7.522][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = summarise([21]))
[     7.535][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = mutate())
[     7.540][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join())
[     7.544][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join3([2]))
[     7.608][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join4())
[     8.466][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = summarise([21]))
[     8.490][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = filter([4]))
[     8.496][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = anti_join())
[     8.500][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = left_join())
[     8.504][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = union())
[     8.509][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = intersect())
[     8.513][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = semi_join())
[     8.517][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = cross_join())
[     8.521][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = mutate())
[     8.526][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = inner_join())
[     8.530][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = summarise([21]))
[     8.545][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = mutate())
[     8.550][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([21]), l2 = filter([4]))
[     8.566][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = summarise([21]))
[     8.580][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = mutate())
[     8.585][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([4]))
[     8.591][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([21]), l2 = filter([4]))
[     8.605][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = summarise([21]))
[     8.618][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = mutate())
[     8.623][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([4]))
[     8.628][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = summarise([21]), l2 = filter([4]))
[     8.641][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = summarise([21]))
[     8.654][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = mutate())
[     8.658][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([4]))
[     8.663][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([21]), l2 = filter([4]))
[     8.676][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = summarise([21]))
[     8.688][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = mutate())
[     8.693][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([4]))
[     8.698][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([21]), l2 = filter([4]))
[     8.711][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = summarise([21]))
[     8.724][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = mutate())
[     8.728][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([4]))
[     8.734][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([21]), l2 = filter([4]))
[     8.738][cube-solver-4][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = summarise([21]))
[     8.747][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = mutate())
[     8.750][cube-solver-4][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([4]))
[     8.751][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([4]))
[     8.754][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([2]), l2 = filter([4]))
[     8.755][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([4]))
[     9.393][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([21]), l2 = filter([4]))
[     9.414][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join())
[     9.418][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join3([2]))
[    10.611][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join4())
[    10.798][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = summarise([21]))
[    10.811][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = filter([4]))
[    10.816][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = anti_join())
[    10.821][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = left_join())
[    10.825][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = union())
[    10.829][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = intersect())
[    10.833][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = semi_join())
[    10.836][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = cross_join())
[    10.840][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = mutate())
[    10.844][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = inner_join())
[    10.848][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([4]))
[    10.852][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([4]))
[    10.856][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([4]))
[    10.863][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([4]))
[    10.868][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([4]))
[    10.871][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([4]))
[    10.875][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([4]))
[    10.879][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([4]))
[    10.883][cube-solver-2][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([21]), l2 = filter([4]))
[    10.896][cube-solver-2][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = summarise([21]))
[    10.908][cube-solver-2][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = mutate())
[    10.912][cube-solver-2][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([4]))
[    10.916][MainProcess][DEBUG] Increasing generator loc to 4
[    10.917][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[    11.543][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[    12.390][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([4]))
[    13.037][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([4]))
[    15.867][cube-solver-6][DEBUG] Initialising process for 4 lines of code.
[    16.195][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[    17.317][cube-solver-6][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([4]))
[    17.335][cube-solver-6][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join([2]))
[    17.768][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([4]))
[    17.803][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join3([2]))
[    19.435][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[    19.436][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[    19.905][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = filter([4]))
[    19.919][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[    20.905][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join4())
[    20.949][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = summarise([21]))
[    20.987][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = left_join())
[    24.223][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[    25.276][cube-solver-6][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = intersect())
[    25.609][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = union())
[    29.001][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[    29.162][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = cross_join())
[    30.427][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = semi_join())
[    33.891][cube-solver-2][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[    33.893][MainProcess][INFO] Statistics:
[    33.894][MainProcess][INFO] 	Generated cubes: 157
[    33.894][MainProcess][INFO] 	Attempted programs: 7002
[    33.894][MainProcess][INFO] 		Rejected: 1448
[    33.894][MainProcess][INFO] 		Failed: 5553
[    33.895][MainProcess][INFO] 	Blacklist clauses: 29
[    33.895][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    33.904][MainProcess][DEBUG] 	0: Counter({'filter': 4920, 'mutate': 3520, 'summarise': 1048, 'natural_join3': 752})
[    33.908][MainProcess][DEBUG] 	1: Counter({'filter': 3560, 'natural_join4': 2696, 'mutate': 2400, 'natural_join3': 1040, 'summarise': 544})
[    33.911][MainProcess][DEBUG] 	2: Counter({'natural_join4': 4600, 'summarise': 2288, 'filter': 1760, 'natural_join3': 1152, 'mutate': 440})
[    33.912][MainProcess][DEBUG] Printing statistics for good programs of size 4
[    33.913][MainProcess][DEBUG] 	0: Counter({'natural_join': 5854})
[    33.915][MainProcess][DEBUG] 	1: Counter({'summarise': 5854})
[    33.917][MainProcess][DEBUG] 	2: Counter({'filter': 3914, 'natural_join3': 1476, 'natural_join': 464})
[    33.919][MainProcess][DEBUG] 	3: Counter({'filter': 1940, 'natural_join3': 1280, 'union': 787, 'natural_join4': 640, 'natural_join': 464, 'left_join': 464, 'semi_join': 164, 'anti_join': 115})
[    33.919][MainProcess][INFO] Solution found: anti_join(@param1, filter(summarise(natural_join(@param0, @param2), n = n(), P_id, S_name), S_name != 'AWS'), 'P_id')

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/16-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/16-2.txt", col_types = cols(P_id = col_character(),P_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/16-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/16.out", col_types = cols(P_name = col_character()))

df4 <- inner_join(input1, input3)
df5 <- df4 %>% group_by(P_id, S_name) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(S_name != 'AWS')
df7 <- anti_join(input2, df6, by=c('P_id'))
out <- df7 %>% select(P_name) %>% arrange(P_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `P_name`
FROM
  (SELECT *
   FROM `input2` AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM
             (SELECT `P_id`,
                     `S_name`,
                     COUNT() AS `n`
              FROM
                (SELECT `LHS`.`S_key` AS `S_key`,
                        `LHS`.`P_id` AS `P_id`,
                        `RHS`.`S_name` AS `S_name`
                 FROM `input1` AS `LHS`
                 INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
              GROUP BY `P_id`,
                       `S_name`)
           WHERE (`S_name` != 'AWS')) AS RHS
        WHERE (LHS.P_id = RHS.P_id) ))
ORDER BY P_name
