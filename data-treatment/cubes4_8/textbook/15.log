[     1.604][MainProcess][INFO] Parsing specification...
[     1.608][MainProcess][DEBUG] Reading input files...
[     1.615][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15-1.txt: ['string', 'string']
[     1.619][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15-2.txt: ['string', 'string']
[     1.624][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15-3.txt: ['string', 'string']
[     1.628][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15.out: ['string']
[     1.657][MainProcess][DEBUG] Generating DSL...
[     1.685][MainProcess][INFO] Creating 8 processes
[     1.713][MainProcess][DEBUG] Increasing generator loc to 3
[     1.743][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.744][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.744][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.751][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.752][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.754][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.762][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.763][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     2.291][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.292][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.293][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.293][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.294][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.295][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.300][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.301][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.306][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.308][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.308][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.310][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.810][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.811][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.820][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.821][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.827][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.830][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.830][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     2.833][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     2.834][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     2.836][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.836][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.839][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.843][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.846][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.846][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     2.852][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.855][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.858][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.865][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = left_join())
[     2.868][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = union())
[     2.871][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = intersect())
[     2.874][cube-solver-5][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter(), l2 = semi_join())
[     2.878][cube-solver-5][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter(), l2 = cross_join())
[     2.882][cube-solver-5][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter(), l2 = mutate())
[     2.887][cube-solver-5][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = inner_join())
[     2.891][cube-solver-5][DEBUG] Solving cube (l0 = summarise([4]), l1 = anti_join(), l2 = filter())
[     2.897][cube-solver-5][DEBUG] Solving cube (l0 = summarise([4]), l1 = left_join(), l2 = filter())
[     2.902][cube-solver-5][DEBUG] Solving cube (l0 = summarise([4]), l1 = union(), l2 = filter())
[     2.906][cube-solver-5][DEBUG] Solving cube (l0 = summarise([4]), l1 = intersect(), l2 = filter())
[     2.911][cube-solver-5][DEBUG] Solving cube (l0 = summarise([4]), l1 = semi_join(), l2 = filter())
[     2.915][cube-solver-5][DEBUG] Solving cube (l0 = summarise([4]), l1 = cross_join(), l2 = filter())
[     2.920][cube-solver-5][DEBUG] Solving cube (l0 = summarise([4]), l1 = mutate(), l2 = filter())
[     2.924][cube-solver-5][DEBUG] Solving cube (l0 = summarise([4]), l1 = inner_join(), l2 = filter())
[     2.929][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([5]))
[     2.934][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     2.937][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([5]))
[     2.943][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3(), l2 = mutate())
[     2.946][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = summarise([6]))
[     2.953][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = mutate())
[     2.957][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([6]), l2 = natural_join())
[     2.967][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([6]), l2 = natural_join3())
[     2.976][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([6]), l2 = natural_join4())
[     2.982][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([8]), l2 = summarise([8]))
[     2.992][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([10]), l2 = filter([3]))
[     3.001][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([10]), l2 = anti_join())
[     3.010][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([10]), l2 = left_join())
[     3.018][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = union())
[     3.026][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([12]), l2 = intersect())
[     3.036][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([12]), l2 = semi_join())
[     3.045][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([12]), l2 = cross_join())
[     3.054][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([13]), l2 = mutate())
[     3.064][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([13]), l2 = inner_join())
[     3.074][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = filter([5]), l2 = summarise([13]))
[     3.086][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = filter([5]), l2 = mutate())
[     3.092][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = anti_join(), l2 = summarise([13]))
[     3.101][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = anti_join(), l2 = mutate())
[     3.106][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = left_join(), l2 = summarise([13]))
[     3.115][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = left_join(), l2 = mutate())
[     3.120][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = union(), l2 = summarise([14]))
[     3.130][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = union(), l2 = mutate())
[     3.134][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = intersect(), l2 = summarise([14]))
[     3.144][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = intersect(), l2 = mutate())
[     3.149][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = semi_join(), l2 = summarise([15]))
[     3.160][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = semi_join(), l2 = mutate())
[     3.164][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = cross_join(), l2 = summarise([15]))
[     3.175][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = cross_join(), l2 = mutate())
[     3.179][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = natural_join())
[     3.183][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = natural_join3())
[     3.188][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = natural_join4())
[     3.193][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = summarise([15]))
[     3.204][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = filter([5]))
[     3.210][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = anti_join())
[     3.215][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = left_join())
[     3.219][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = union())
[     3.223][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = intersect())
[     3.228][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = semi_join())
[     3.233][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = cross_join())
[     3.237][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = mutate())
[     3.242][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = mutate(), l2 = inner_join())
[     3.246][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = inner_join(), l2 = summarise([15]))
[     3.257][cube-solver-5][DEBUG] Solving cube (l0 = filter([5]), l1 = inner_join(), l2 = mutate())
[     3.262][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([15]), l2 = filter([5]))
[     3.273][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([5]), l2 = summarise([15]))
[     3.284][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([5]), l2 = mutate())
[     3.288][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([5]))
[     3.293][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([16]), l2 = filter([5]))
[     3.309][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = filter([5]), l2 = summarise([16]))
[     3.320][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = filter([5]), l2 = mutate())
[     3.324][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([5]))
[     3.328][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = summarise([16]), l2 = filter([5]))
[     3.338][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = filter([5]), l2 = summarise([16]))
[     3.347][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = filter([5]), l2 = mutate())
[     3.351][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([5]))
[     3.355][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([16]), l2 = filter([5]))
[     3.365][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = filter([5]), l2 = summarise([16]))
[     3.375][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = filter([5]), l2 = mutate())
[     3.379][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([5]))
[     3.381][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([5]), l2 = summarise([17]))
[     3.383][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([17]), l2 = filter([5]))
[     3.393][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([5]), l2 = summarise([17]))
[     3.396][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([5]))
[     3.400][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([5]), l2 = mutate())
[     3.402][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([5]))
[     3.405][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([17]), l2 = filter([5]))
[     3.406][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([5]), l2 = summarise([17]))
[     3.415][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([5]), l2 = mutate())
[     3.418][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([5]))
[     3.419][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([5]))
[     3.422][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter([5]))
[     3.424][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([5]))
[     3.427][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([17]), l2 = filter([5]))
[     3.434][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([5]), l2 = mutate())
[     3.445][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([17]), l2 = filter([5]))
[     3.460][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = natural_join())
[     3.469][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = natural_join3())
[     4.647][cube-solver-0][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise([17]), l2 = filter([5]))
[     4.648][MainProcess][INFO] Statistics:
[     4.648][MainProcess][INFO] 	Generated cubes: 119
[     4.649][MainProcess][INFO] 	Attempted programs: 46
[     4.649][MainProcess][INFO] 		Rejected: 20
[     4.649][MainProcess][INFO] 		Failed: 25
[     4.649][MainProcess][INFO] 	Blacklist clauses: 22
[     4.649][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     4.650][MainProcess][DEBUG] 	0: Counter({'mutate': 365, 'natural_join3': 229, 'summarise': 186})
[     4.651][MainProcess][DEBUG] 	1: Counter({'natural_join3': 215, 'filter': 200, 'mutate': 140, 'natural_join4': 136, 'summarise': 89})
[     4.652][MainProcess][DEBUG] 	2: Counter({'filter': 580, 'natural_join3': 130, 'natural_join4': 70})
[     4.652][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param1, @param0, @param2), n = n(), S_name, color), color == 'red' & n == max(n))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/15-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/15-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/15-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/15.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input2, input1) %>% inner_join(input3)
df5 <- df4 %>% group_by(S_name, color) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(color == 'red' & n == max(n))
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `S_name`,
          `color`,
          `n`
   FROM
     (SELECT `S_name`,
             `color`,
             `n`,
             MAX(`n`) OVER () AS `zzz4`
      FROM
        (SELECT `S_name`,
                `color`,
                COUNT() AS `n`
         FROM
           (SELECT `LHS`.`P_id` AS `P_id`,
                   `LHS`.`color` AS `color`,
                   `LHS`.`S_key` AS `S_key`,
                   `RHS`.`S_name` AS `S_name`
            FROM
              (SELECT `LHS`.`P_id` AS `P_id`,
                      `LHS`.`color` AS `color`,
                      `RHS`.`S_key` AS `S_key`
               FROM `input2` AS `LHS`
               INNER JOIN `input1` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)) AS `LHS`
            INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
         GROUP BY `S_name`,
                  `color`))
   WHERE (`color` = 'red'
          AND n = zzz4))
ORDER BY S_name
