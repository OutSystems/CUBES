[     1.579][MainProcess][INFO] Parsing specification...
[     1.583][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.583][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.584][MainProcess][DEBUG] Reading input files...
[     1.591][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/aircraft.txt: ['int64', 'string', 'int64']
[     1.595][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/certified.txt: ['int64', 'int64']
[     1.600][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/employees.txt: ['int64', 'string', 'float64']
[     1.603][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/31.out: ['string']
[     1.633][MainProcess][DEBUG] Generating DSL...
[     1.656][MainProcess][INFO] Creating 8 processes
[     1.682][MainProcess][DEBUG] Increasing generator loc to 2
[     1.706][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.710][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.711][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.718][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.721][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     1.723][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     1.726][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     1.729][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     1.934][cube-solver-0][WARNING] There is no solution for current loc (1).
[     1.935][cube-solver-0][DEBUG] Solving cube (l0 = filter(),)
[     1.936][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.294][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter())
[     2.297][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = left_join())
[     2.299][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = union())
[     2.301][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = intersect())
[     2.302][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = semi_join())
[     2.303][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter())
[     2.304][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = cross_join())
[     2.305][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = inner_join())
[     2.307][cube-solver-3][DEBUG] Solving cube (l0 = anti_join(), l1 = filter())
[     2.307][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = filter())
[     2.309][cube-solver-3][DEBUG] Solving cube (l0 = union(), l1 = filter())
[     2.309][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = filter())
[     2.308][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter())
[     2.310][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = filter())
[     2.310][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = filter())
[     2.312][cube-solver-3][DEBUG] Solving cube (l0 = inner_join(), l1 = filter())
[     2.312][MainProcess][DEBUG] Increasing generator loc to 3
[     2.312][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.313][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.324][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = filter())
[     2.326][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     2.334][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3())
[     2.338][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join())
[     2.344][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     2.348][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4())
[     2.518][cube-solver-0][DEBUG] Solving cube (l0 = filter([13]), l1 = anti_join())
[     2.530][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     3.208][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([20]), l2 = filter([20]))
[     3.228][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([20]), l2 = left_join())
[     3.242][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([20]), l2 = natural_join())
[     3.258][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([1]), l1 = filter([20]), l2 = natural_join4())
[     3.273][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([1]), l1 = filter([20]), l2 = natural_join3([1]))
[     3.325][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = anti_join())
[     5.813][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     6.695][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = union())
[     6.755][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     7.708][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = intersect())
[    11.015][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = semi_join())
[    11.155][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = cross_join())
[    13.483][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = inner_join())
[    15.825][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = anti_join(), l2 = filter([20]))
[    15.853][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = left_join(), l2 = filter([20]))
[    17.675][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[    18.388][cube-solver-6][DEBUG] Solving cube (l0 = natural_join([2]), l1 = union(), l2 = filter([20]))
[    20.943][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = intersect(), l2 = filter([20]))
[    22.955][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = semi_join(), l2 = filter([20]))
[    24.481][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = cross_join(), l2 = filter([20]))
[    24.608][cube-solver-6][DEBUG] Solving cube (l0 = natural_join([2]), l1 = inner_join(), l2 = filter([20]))
[    25.670][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = natural_join([2]), l2 = filter([20]))
[    28.194][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = natural_join3([2]), l2 = filter([20]))
[    28.204][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = natural_join4(), l2 = filter([20]))
[    28.213][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = natural_join([2]))
[    30.647][cube-solver-5][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = natural_join3([2]))
[    32.237][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = natural_join4())
[    46.959][cube-solver-7][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = filter([20]))
[    47.752][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = anti_join())
[    48.401][cube-solver-0][DEBUG] Found solution with cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = anti_join())
[    48.403][MainProcess][INFO] Statistics:
[    48.404][MainProcess][INFO] 	Generated cubes: 48
[    48.405][MainProcess][INFO] 	Attempted programs: 6860
[    48.405][MainProcess][INFO] 		Rejected: 1749
[    48.405][MainProcess][INFO] 		Failed: 5110
[    48.405][MainProcess][INFO] 	Blacklist clauses: 24
[    48.405][MainProcess][DEBUG] Printing statistics for good programs of size 2
[    48.411][MainProcess][DEBUG] 	0: Counter({'filter': 2160, 'natural_join3': 480})
[    48.414][MainProcess][DEBUG] 	1: Counter({'natural_join4': 1680, 'filter': 480, 'natural_join3': 480})
[    48.414][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    48.424][MainProcess][DEBUG] 	0: Counter({'natural_join': 17797, 'natural_join3': 7840})
[    48.431][MainProcess][DEBUG] 	1: Counter({'filter': 20530, 'inner_join': 1947, 'left_join': 960, 'union': 960, 'natural_join': 960, 'semi_join': 280})
[    48.439][MainProcess][DEBUG] 	2: Counter({'natural_join4': 7059, 'filter': 5314, 'natural_join3': 4831, 'natural_join': 3840, 'inner_join': 1490, 'left_join': 960, 'union': 960, 'anti_join': 624, 'semi_join': 560})
[    48.439][MainProcess][INFO] Solution found: anti_join(natural_join3(@param0, @param1, @param2), filter(@param0, str_detect(aname, 'Boeing') | crusingrange < 3000), 'aname')
[    48.872][MainProcess][ERROR] Error while trying to convert R code to SQL.

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/aircraft.txt", col_types = cols(aid = col_integer(),aname = col_character(),crusingrange = col_integer()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/certified.txt", col_types = cols(eid = col_integer(),aid = col_integer()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/employees.txt", col_types = cols(eid = col_integer(),ename = col_character(),salary = col_double()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/31.out", col_types = cols(ename = col_character()))

df4 <- inner_join(input1, input2) %>% inner_join(input3)
df5 <- input1 %>% filter(str_detect(aname, 'Boeing') | crusingrange < 3000)
df6 <- anti_join(df4, df5, by=c('aname'))
out <- df6 %>% select(ename) %>% distinct() %>% arrange(ename)

Failed to generate SQL query
