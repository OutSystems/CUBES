[     3.477][MainProcess][INFO] Parsing specification...
[     3.483][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.483][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     3.484][MainProcess][DEBUG] Reading input files...
[     3.494][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/6-1.txt: ['string', 'string']
[     3.500][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/6-2.txt: ['string', 'string']
[     3.506][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/6-3.txt: ['string', 'string']
[     3.511][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/6.out: ['string']
[     3.556][MainProcess][DEBUG] Generating DSL...
[     3.593][MainProcess][INFO] Creating 8 processes
[     3.633][MainProcess][DEBUG] Increasing generator loc to 3
[     3.655][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.659][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.663][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     3.664][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.668][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.675][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     3.682][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     3.685][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     4.130][cube-solver-0][WARNING] There is no solution for current loc (2).
[     4.131][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     4.132][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     4.146][cube-solver-3][WARNING] There is no solution for current loc (2).
[     4.147][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     4.148][cube-solver-2][WARNING] There is no solution for current loc (2).
[     4.148][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     4.149][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     4.152][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     4.183][cube-solver-1][WARNING] There is no solution for current loc (2).
[     4.183][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     4.187][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     4.339][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     4.351][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     4.357][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     4.359][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     4.361][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     4.364][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     4.366][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     4.378][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     4.388][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     4.391][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     4.393][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     4.396][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     4.400][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     4.400][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     4.419][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     4.423][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = summarise([1]))
[     4.427][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = filter())
[     4.430][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = anti_join())
[     4.434][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = left_join())
[     4.437][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = union())
[     4.440][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = intersect())
[     4.442][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = semi_join())
[     4.445][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = cross_join())
[     4.448][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = mutate())
[     4.450][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = inner_join())
[     4.453][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = anti_join(), l2 = filter())
[     4.457][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = left_join(), l2 = filter())
[     4.460][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = union(), l2 = filter())
[     4.463][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = intersect(), l2 = filter())
[     4.466][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = semi_join(), l2 = filter())
[     4.470][cube-solver-7][DEBUG] Solving cube (l0 = summarise([3]), l1 = cross_join(), l2 = filter())
[     4.473][cube-solver-7][DEBUG] Solving cube (l0 = summarise([3]), l1 = mutate(), l2 = filter())
[     4.477][cube-solver-7][DEBUG] Solving cube (l0 = summarise([3]), l1 = inner_join(), l2 = filter())
[     4.481][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([3]))
[     4.484][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     4.486][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([4]))
[     4.490][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     4.492][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([4]))
[     4.496][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     4.498][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = natural_join())
[     4.502][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = natural_join3())
[     4.506][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = natural_join4())
[     4.510][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = summarise([5]))
[     4.516][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = filter())
[     4.521][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = anti_join())
[     4.525][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = left_join())
[     4.529][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = union())
[     4.533][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = intersect())
[     4.538][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = semi_join())
[     4.542][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = cross_join())
[     4.546][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([6]), l2 = mutate())
[     4.551][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([6]), l2 = inner_join())
[     4.555][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise([7]))
[     4.560][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     4.562][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise([7]))
[     4.567][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = mutate())
[     4.570][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = summarise([7]))
[     4.575][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = left_join(), l2 = mutate())
[     4.578][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = union(), l2 = summarise([7]))
[     4.583][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = union(), l2 = mutate())
[     4.586][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = intersect(), l2 = summarise([7]))
[     4.591][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = intersect(), l2 = mutate())
[     4.594][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = semi_join(), l2 = summarise([8]))
[     4.600][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = semi_join(), l2 = mutate())
[     4.603][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = cross_join(), l2 = summarise([8]))
[     4.609][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = cross_join(), l2 = mutate())
[     4.611][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join())
[     4.614][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join3())
[     4.617][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join4())
[     4.620][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = summarise([8]))
[     4.626][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = filter([2]))
[     4.629][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = anti_join())
[     4.632][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = left_join())
[     4.635][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = union())
[     4.638][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = intersect())
[     4.640][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = semi_join())
[     4.643][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = cross_join())
[     4.646][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = mutate())
[     4.648][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = inner_join())
[     4.651][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = inner_join(), l2 = summarise([9]))
[     4.657][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = inner_join(), l2 = mutate())
[     4.660][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([9]), l2 = filter([2]))
[     4.667][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([2]), l2 = summarise([9]))
[     4.674][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([2]), l2 = mutate())
[     4.677][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([2]))
[     4.680][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([9]), l2 = filter([2]))
[     4.686][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = summarise([9]))
[     4.693][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = mutate())
[     4.696][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([2]))
[     4.699][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = summarise([9]), l2 = filter([2]))
[     4.705][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = summarise([9]))
[     4.712][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = mutate())
[     4.715][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([2]))
[     4.718][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([10]), l2 = filter([2]))
[     4.725][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter([2]), l2 = summarise([11]))
[     4.732][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter([2]), l2 = mutate())
[     4.735][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([2]))
[     4.738][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([12]), l2 = filter([2]))
[     4.746][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = summarise([12]))
[     4.753][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = mutate())
[     4.756][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([2]))
[     4.759][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([12]), l2 = filter([2]))
[     4.767][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([2]), l2 = summarise([12]))
[     4.775][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([2]), l2 = mutate())
[     4.778][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([2]))
[     4.781][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([2]))
[     4.783][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter([2]))
[     4.998][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([4]), l2 = mutate())
[     5.011][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([4]))
[     5.027][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([4]), l2 = summarise([12]))
[     5.030][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([12]), l2 = filter([4]))
[     5.046][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([12]), l2 = filter([4]))
[     5.055][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join())
[     5.059][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join3())
[     5.095][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([4]))
[     6.796][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([6]), l2 = natural_join4())
[     7.742][cube-solver-0][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise([12]), l2 = filter([4]))
[     7.743][MainProcess][INFO] Statistics:
[     7.744][MainProcess][INFO] 	Generated cubes: 120
[     7.744][MainProcess][INFO] 	Attempted programs: 121
[     7.744][MainProcess][INFO] 		Rejected: 66
[     7.744][MainProcess][INFO] 		Failed: 54
[     7.744][MainProcess][INFO] 	Blacklist clauses: 22
[     7.744][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     7.746][MainProcess][DEBUG] 	0: Counter({'mutate': 1034, 'natural_join3': 439, 'summarise': 437})
[     7.748][MainProcess][DEBUG] 	1: Counter({'filter': 646, 'natural_join3': 491, 'natural_join4': 334, 'summarise': 239, 'mutate': 200})
[     7.748][MainProcess][DEBUG] 	2: Counter({'filter': 1264, 'natural_join4': 325, 'natural_join3': 321})
[     7.749][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param1, @param0, @param2), n = n(), F_name), n <= 5)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/6-1.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/6-2.txt", col_types = cols(C_name = col_character(),F_key = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/6-3.txt", col_types = cols(F_key = col_character(),F_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/6.out", col_types = cols(F_name = col_character()))

df4 <- inner_join(input2, input1) %>% inner_join(input3)
df5 <- df4 %>% group_by(F_name) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n <= 5)
out <- df6 %>% select(F_name) %>% arrange(F_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT F_name
FROM
  (SELECT F_name,
          COUNT() AS n
   FROM
     (SELECT LHS.C_name AS C_name,
             LHS.F_key AS F_key,
             LHS.S_key AS S_key,
             RHS.F_name AS F_name
      FROM
        (SELECT LHS.C_name AS C_name,
                LHS.F_key AS F_key,
                RHS.S_key AS S_key
         FROM input2 AS LHS
         INNER JOIN input1 AS RHS ON (LHS.C_name = RHS.C_name)) AS LHS
      INNER JOIN input3 AS RHS ON (LHS.F_key = RHS.F_key))
   GROUP BY F_name)
WHERE (n <= 5.0)
ORDER BY F_name
