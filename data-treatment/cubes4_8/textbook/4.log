[     3.598][MainProcess][INFO] Parsing specification...
[     3.603][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.604][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     3.604][MainProcess][DEBUG] Reading input files...
[     3.614][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/4-1.txt: ['string', 'string']
[     3.620][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/4-2.txt: ['string', 'string']
[     3.626][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/4-3.txt: ['string', 'string']
[     3.631][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/4.out: ['string']
[     3.673][MainProcess][DEBUG] Generating DSL...
[     3.701][MainProcess][INFO] Creating 8 processes
[     3.733][MainProcess][DEBUG] Increasing generator loc to 3
[     3.760][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.765][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.769][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.771][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.776][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     3.778][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     3.782][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     3.783][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     4.235][cube-solver-0][WARNING] There is no solution for current loc (2).
[     4.236][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     4.237][cube-solver-2][WARNING] There is no solution for current loc (2).
[     4.237][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     4.238][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     4.242][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     4.249][cube-solver-3][WARNING] There is no solution for current loc (2).
[     4.250][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     4.251][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     4.251][cube-solver-1][WARNING] There is no solution for current loc (2).
[     4.252][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     4.254][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     4.471][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     4.475][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     4.483][cube-solver-7][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     4.484][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     4.489][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     4.490][cube-solver-7][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     4.492][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     4.493][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     4.496][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     4.498][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     4.500][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     4.500][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     4.504][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     4.512][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     4.519][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise([1]))
[     4.524][cube-solver-5][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = summarise([2]))
[     4.529][cube-solver-5][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = filter())
[     4.532][cube-solver-5][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter(), l2 = anti_join())
[     4.537][cube-solver-5][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter(), l2 = left_join())
[     4.541][cube-solver-5][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter(), l2 = union())
[     4.545][cube-solver-5][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = intersect())
[     4.549][cube-solver-5][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = semi_join())
[     4.553][cube-solver-5][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = cross_join())
[     4.557][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter(), l2 = mutate())
[     4.562][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter(), l2 = inner_join())
[     4.566][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = anti_join(), l2 = filter())
[     4.572][cube-solver-5][DEBUG] Solving cube (l0 = summarise([6]), l1 = left_join(), l2 = filter())
[     4.577][cube-solver-5][DEBUG] Solving cube (l0 = summarise([6]), l1 = union(), l2 = filter())
[     4.582][cube-solver-5][DEBUG] Solving cube (l0 = summarise([6]), l1 = intersect(), l2 = filter())
[     4.587][cube-solver-5][DEBUG] Solving cube (l0 = summarise([7]), l1 = semi_join(), l2 = filter())
[     4.592][cube-solver-5][DEBUG] Solving cube (l0 = summarise([7]), l1 = cross_join(), l2 = filter())
[     4.599][cube-solver-5][DEBUG] Solving cube (l0 = summarise([7]), l1 = mutate(), l2 = filter())
[     4.604][cube-solver-5][DEBUG] Solving cube (l0 = summarise([7]), l1 = inner_join(), l2 = filter())
[     4.609][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([7]))
[     4.614][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     4.617][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([7]))
[     4.621][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     4.624][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([8]))
[     4.629][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     4.631][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([8]), l2 = natural_join())
[     4.637][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([8]), l2 = natural_join3())
[     4.642][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([8]), l2 = natural_join4())
[     4.648][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([8]), l2 = summarise([8]))
[     4.656][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([8]), l2 = filter())
[     4.662][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([8]), l2 = anti_join())
[     4.667][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([8]), l2 = left_join())
[     4.673][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([8]), l2 = union())
[     4.678][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([8]), l2 = intersect())
[     4.684][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([8]), l2 = semi_join())
[     4.689][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([8]), l2 = cross_join())
[     4.695][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([8]), l2 = mutate())
[     4.701][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([8]), l2 = inner_join())
[     4.706][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise([8]))
[     4.711][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     4.714][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise([8]))
[     4.719][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     4.721][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise([8]))
[     4.727][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     4.729][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise([8]))
[     4.734][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     4.737][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise([8]))
[     4.742][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     4.744][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise([8]))
[     4.749][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = semi_join(), l2 = mutate())
[     4.752][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = cross_join(), l2 = summarise([8]))
[     4.757][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = cross_join(), l2 = mutate())
[     4.760][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join())
[     4.762][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join3())
[     4.765][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join4())
[     4.767][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = summarise([8]))
[     4.773][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = filter([1]))
[     4.775][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = anti_join())
[     4.781][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = left_join())
[     4.786][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = union())
[     4.789][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = intersect())
[     4.792][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = semi_join())
[     4.796][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = cross_join())
[     4.801][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = mutate())
[     4.805][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = inner_join())
[     4.809][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = inner_join(), l2 = summarise([8]))
[     4.815][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = inner_join(), l2 = mutate())
[     4.819][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([8]), l2 = filter([3]))
[     4.826][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([3]), l2 = summarise([9]))
[     4.833][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([3]), l2 = mutate())
[     4.837][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([3]))
[     4.841][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([10]), l2 = filter([3]))
[     4.849][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = filter([3]), l2 = summarise([11]))
[     4.856][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = filter([3]), l2 = mutate())
[     4.860][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([3]))
[     4.864][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = summarise([11]), l2 = filter([3]))
[     4.872][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = filter([3]), l2 = summarise([11]))
[     4.880][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = mutate())
[     4.884][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([4]))
[     4.888][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([11]), l2 = filter([4]))
[     4.897][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = summarise([11]))
[     4.905][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = filter([5]), l2 = mutate())
[     4.910][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([5]))
[     4.914][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([11]), l2 = filter([5]))
[     4.923][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([5]), l2 = summarise([11]))
[     4.931][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([5]), l2 = mutate())
[     4.935][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([5]))
[     4.940][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([11]), l2 = filter([5]))
[     4.949][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([5]), l2 = summarise([11]))
[     4.957][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([5]), l2 = mutate())
[     4.961][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([5]))
[     4.966][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([5]))
[     4.970][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter([5]))
[     5.069][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([6]), l2 = mutate())
[     5.072][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([6]))
[     5.077][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([7]))
[     5.115][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = summarise([13]), l2 = filter([8]))
[     5.136][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = filter([9]), l2 = summarise([14]))
[     5.150][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([14]), l2 = filter([9]))
[     5.161][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([9]), l2 = natural_join())
[     5.167][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([9]), l2 = natural_join3([1]))
[     6.362][cube-solver-0][DEBUG] Found solution with cube (l0 = natural_join3([1]), l1 = summarise([13]), l2 = filter([8]))
[     6.364][MainProcess][INFO] Statistics:
[     6.364][MainProcess][INFO] 	Generated cubes: 119
[     6.364][MainProcess][INFO] 	Attempted programs: 24
[     6.364][MainProcess][INFO] 		Rejected: 23
[     6.365][MainProcess][INFO] 		Failed: 0
[     6.365][MainProcess][INFO] 	Blacklist clauses: 24
[     6.365][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     6.366][MainProcess][DEBUG] 	0: Counter({'mutate': 443, 'natural_join3': 280, 'summarise': 274})
[     6.367][MainProcess][DEBUG] 	1: Counter({'filter': 297, 'natural_join3': 276, 'mutate': 157, 'natural_join4': 144, 'summarise': 123})
[     6.368][MainProcess][DEBUG] 	2: Counter({'filter': 700, 'natural_join3': 177, 'natural_join4': 120})
[     6.368][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param1, @param0, @param2), n = n(), S_name, meets_at), n >= 2)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/4-1.txt", col_types = cols(C_name = col_character(),meets_at = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/4-2.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/4-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/4.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input2, input1) %>% inner_join(input3)
df5 <- df4 %>% group_by(S_name, meets_at) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n >= 2)
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT S_name,
          meets_at,
          COUNT() AS n
   FROM
     (SELECT LHS.S_key AS S_key,
             LHS.C_name AS C_name,
             LHS.meets_at AS meets_at,
             RHS.S_name AS S_name
      FROM
        (SELECT LHS.S_key AS S_key,
                LHS.C_name AS C_name,
                RHS.meets_at AS meets_at
         FROM input2 AS LHS
         INNER JOIN input1 AS RHS ON (LHS.C_name = RHS.C_name)) AS LHS
      INNER JOIN input3 AS RHS ON (LHS.S_key = RHS.S_key))
   GROUP BY S_name,
            meets_at)
WHERE (n >= 2.0)
ORDER BY S_name
