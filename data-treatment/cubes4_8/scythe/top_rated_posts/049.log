[     3.665][MainProcess][INFO] Parsing specification...
[     3.670][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.670][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.671][MainProcess][DEBUG] Reading input files...
[     3.680][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i049.csv: ['int64', 'string']
[     3.686][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o049.csv: ['int64', 'string']
[     3.727][MainProcess][DEBUG] Generating DSL...
[     3.767][MainProcess][INFO] Creating 8 processes
[     3.802][MainProcess][DEBUG] Increasing generator loc to 2
[     3.832][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     3.836][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     3.841][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.844][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.847][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     3.849][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     3.855][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     3.858][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     4.190][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     4.226][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     4.379][cube-solver-0][DEBUG] Found solution with cube (l0 = summarise(),)
[     4.381][MainProcess][INFO] Statistics:
[     4.381][MainProcess][INFO] 	Generated cubes: 8
[     4.381][MainProcess][INFO] 	Attempted programs: 3
[     4.381][MainProcess][INFO] 		Rejected: 2
[     4.381][MainProcess][INFO] 		Failed: 0
[     4.381][MainProcess][INFO] 	Blacklist clauses: 0
[     4.381][MainProcess][DEBUG] Printing statistics for good programs of size 1
[     4.382][MainProcess][DEBUG] 	0: Counter({'mutate': 18, 'summarise': 9})
[     4.382][MainProcess][INFO] Solution found: summarise(@param0, concatAlias = string_agg(Alias, ', '), UserId)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i049.csv", col_types = cols(UserId = col_integer(),Alias = col_character()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o049.csv", col_types = cols(UserId = col_integer(),concatAlias = col_character()))

string_agg <- function(v,s) {Reduce(function(x, y) paste(x, y, sep = s), v)}

df2 <- input1 %>% group_by(UserId) %>% summarise(concatAlias = string_agg(Alias, ', ')) %>% ungroup()
out <- df2 %>% select(UserId, concatAlias) %>% arrange(UserId)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `UserId`,
       `concatAlias`
FROM
  (SELECT `UserId`,
          string_agg(`Alias`, ', ') AS concatAlias
   FROM input1
   GROUP BY UserId)
ORDER BY UserId
