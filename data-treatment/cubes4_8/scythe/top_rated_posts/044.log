[     3.268][MainProcess][INFO] Parsing specification...
[     3.273][MainProcess][DEBUG] Reading input files...
[     3.280][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i044.csv: ['int64', 'int64']
[     3.285][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o044.csv: ['int64', 'int64', 'int64']
[     3.314][MainProcess][DEBUG] Generating DSL...
[     3.485][MainProcess][INFO] Creating 8 processes
[     3.516][MainProcess][DEBUG] Increasing generator loc to 2
[     3.658][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.665][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     3.667][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     3.673][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     3.677][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     3.687][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.689][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     3.707][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     6.407][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     6.455][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     6.498][cube-solver-1][DEBUG] Found solution with cube (l0 = mutate(),)
[     6.499][MainProcess][INFO] Statistics:
[     6.499][MainProcess][INFO] 	Generated cubes: 8
[     6.500][MainProcess][INFO] 	Attempted programs: 1
[     6.500][MainProcess][INFO] 		Rejected: 0
[     6.500][MainProcess][INFO] 		Failed: 0
[     6.500][MainProcess][INFO] 	Blacklist clauses: 0
[     6.500][MainProcess][DEBUG] Printing statistics for good programs of size 1
[     6.501][MainProcess][DEBUG] 	0: Counter({'summarise': 7, 'mutate': 1})
[     6.501][MainProcess][INFO] Solution found: mutate(@param0, cumsumcount = cumsum(count))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i044.csv", col_types = cols(id = col_integer(),count = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o044.csv", col_types = cols(id = col_integer(),count = col_integer(),sumcount = col_integer()))

df2 <- input1 %>% mutate(cumsumcount = cumsum(count))
out <- df2 %>% select(id, count, sumcount = cumsumcount) %>% arrange(id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT id,
       COUNT,
       SUM(COUNT) OVER (ROWS UNBOUNDED PRECEDING) AS sumcount
FROM input1
ORDER BY id
