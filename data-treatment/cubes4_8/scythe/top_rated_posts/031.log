[     1.598][MainProcess][INFO] Parsing specification...
[     1.601][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.601][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.601][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.602][MainProcess][DEBUG] Reading input files...
[     1.609][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i031.csv: ['int64', 'string', 'int64']
[     1.614][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o031.csv: ['int64', 'int64', 'string']
[     1.640][MainProcess][DEBUG] Generating DSL...
[     1.666][MainProcess][INFO] Creating 8 processes
[     1.694][MainProcess][DEBUG] Increasing generator loc to 3
[     1.715][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.719][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.720][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.723][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.726][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.730][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.730][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.737][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     2.155][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.156][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.159][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.168][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.540][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.546][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.548][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.553][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.554][cube-solver-6][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.557][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.559][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.559][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.561][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.562][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.563][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     2.564][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     2.566][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     2.568][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.570][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.578][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.585][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.607][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     2.611][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.614][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.634][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.837][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.927][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.943][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     3.461][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     3.709][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     3.801][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     3.822][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     3.826][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     4.500][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     8.613][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     8.948][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     9.432][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = inner_join())
[    10.798][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter())
[    16.214][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter())
[    17.644][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter())
[    17.872][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter())
[    18.351][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join(), l2 = filter())
[    19.982][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join(), l2 = filter())
[    20.527][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter())
[    21.012][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join(), l2 = filter())
[    21.436][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise())
[    22.740][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[    24.105][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise())
[    24.111][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[    24.115][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise())
[    24.120][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[    24.123][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join())
[    24.837][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join3())
[    26.244][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join4())
[    26.246][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = summarise())
[    26.248][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = filter())
[    27.201][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = anti_join())
[    39.478][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = left_join())
[    48.625][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = union())
[    49.398][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = intersect())
[    54.892][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = semi_join())
[    61.069][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = cross_join())
[    64.551][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = mutate())
[    65.191][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = inner_join())
[    73.350][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise())
[    73.473][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[    74.642][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise())
[    74.808][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[    83.747][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise())
[    84.220][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[    85.731][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise())
[    86.230][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[    87.242][cube-solver-6][DEBUG] Found solution with cube (l0 = filter(), l1 = union(), l2 = summarise())
[    87.245][MainProcess][INFO] Statistics:
[    87.246][MainProcess][INFO] 	Generated cubes: 68
[    87.246][MainProcess][INFO] 	Attempted programs: 3361
[    87.246][MainProcess][INFO] 		Rejected: 1806
[    87.246][MainProcess][INFO] 		Failed: 1554
[    87.246][MainProcess][INFO] 	Blacklist clauses: 0
[    87.246][MainProcess][DEBUG] Printing statistics for good programs of size 2
[    87.248][MainProcess][DEBUG] 	0: Counter({'filter': 168, 'mutate': 96, 'summarise': 48})
[    87.248][MainProcess][DEBUG] 	1: Counter({'filter': 144, 'mutate': 96, 'summarise': 72})
[    87.248][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    87.305][MainProcess][DEBUG] 	0: Counter({'summarise': 55951, 'filter': 30232})
[    87.313][cube-solver-1][DEBUG] Found solution with cube (l0 = filter(), l1 = union(), l2 = mutate())
[    87.329][MainProcess][DEBUG] 	1: Counter({'filter': 33786, 'summarise': 26389, 'cross_join': 9355, 'inner_join': 8587, 'anti_join': 3072, 'left_join': 1704, 'union': 1516, 'natural_join': 1488, 'semi_join': 240, 'mutate': 48})
[    87.353][MainProcess][DEBUG] 	2: Counter({'filter': 22695, 'cross_join': 13228, 'inner_join': 13180, 'natural_join3': 12096, 'union': 5400, 'left_join': 5400, 'natural_join': 5280, 'anti_join': 3696, 'mutate': 2281, 'summarise': 1731, 'semi_join': 1200})
[    87.353][MainProcess][INFO] Solution found: summarise(union(filter(@param0, name == 'Beta'), filter(@param0, name == 'Beta')), n = n(), id, name)
[    87.719][MainProcess][ERROR] Error while trying to convert R code to SQL.

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i031.csv", col_types = cols(id = col_integer(),name = col_character(),name_ascii = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o031.csv", col_types = cols(id = col_integer(),n = col_integer(),name = col_character()))

df2 <- input1 %>% filter(name == 'Beta')
df3 <- bind_rows(df2, df2)
df4 <- df3 %>% group_by(id, name) %>% summarise(n = n()) %>% ungroup()
out <- df4 %>% select(id, n, name) %>% arrange(id)

Failed to generate SQL query
