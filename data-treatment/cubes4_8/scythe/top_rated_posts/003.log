[     1.591][MainProcess][INFO] Parsing specification...
[     1.595][MainProcess][DEBUG] Reading input files...
[     1.600][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i003.csv: ['string']
[     1.604][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o003.csv: ['string']
[     1.630][MainProcess][DEBUG] Generating DSL...
[     1.659][MainProcess][INFO] Creating 8 processes
[     1.688][MainProcess][DEBUG] Increasing generator loc to 2
[     1.715][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.717][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.717][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     1.723][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     1.723][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.730][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     1.731][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     1.738][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     2.049][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     2.065][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     2.178][cube-solver-1][DEBUG] Found solution with cube (l0 = mutate(),)
[     2.180][MainProcess][INFO] Statistics:
[     2.180][MainProcess][INFO] 	Generated cubes: 8
[     2.180][MainProcess][INFO] 	Attempted programs: 3
[     2.180][MainProcess][INFO] 		Rejected: 2
[     2.180][MainProcess][INFO] 		Failed: 0
[     2.181][MainProcess][INFO] 	Blacklist clauses: 0
[     2.181][MainProcess][DEBUG] Printing statistics for good programs of size 1
[     2.181][MainProcess][DEBUG] 	0: Counter({'mutate': 12, 'summarise': 8})
[     2.182][MainProcess][INFO] Solution found: mutate(@param0, concatc = string_agg(c, ', '))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i003.csv", col_types = cols(c = col_character()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o003.csv", col_types = cols(concatc = col_character()))

string_agg <- function(v,s) {Reduce(function(x, y) paste(x, y, sep = s), v)}

df2 <- input1 %>% mutate(concatc = string_agg(c, ', '))
out <- df2 %>% select(concatc) %>% distinct() %>% arrange(concatc)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT string_agg(`c`, ', ') AS concatc
FROM input1
ORDER BY concatc
