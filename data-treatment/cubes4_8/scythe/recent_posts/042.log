[     1.578][MainProcess][INFO] Parsing specification...
[     1.581][MainProcess][DEBUG] Reading input files...
[     1.588][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/042.csv: ['int64', 'string', 'string']
[     1.593][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/042_o.csv: ['int64', 'string']
[     1.619][MainProcess][DEBUG] Generating DSL...
[     1.631][MainProcess][INFO] Creating 8 processes
[     1.671][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.673][cube-solver-2][DEBUG] Initialising process for 1 lines of code.
[     1.674][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     1.681][cube-solver-3][DEBUG] Initialising process for 1 lines of code.
[     1.681][cube-solver-4][DEBUG] Initialising process for 1 lines of code.
[     1.685][cube-solver-5][DEBUG] Initialising process for 1 lines of code.
[     1.686][cube-solver-6][DEBUG] Initialising process for 1 lines of code.
[     1.693][cube-solver-7][DEBUG] Initialising process for 1 lines of code.
[     1.718][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(),)
[     1.721][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(),)
[     1.721][cube-solver-2][DEBUG] Solving cube (l0 = cross_join(),)
[     1.722][cube-solver-0][DEBUG] Solving cube (l0 = inner_join(),)
[     1.724][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(),)
[     1.725][MainProcess][DEBUG] Increasing generator loc to 2
[     1.725][cube-solver-4][DEBUG] Solving cube (l0 = left_join(),)
[     1.726][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.729][cube-solver-6][DEBUG] Solving cube (l0 = intersect(),)
[     1.734][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.734][cube-solver-5][DEBUG] Solving cube (l0 = union(),)
[     1.737][cube-solver-3][DEBUG] Solving cube (l0 = anti_join(),)
[     1.739][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.749][cube-solver-0][DEBUG] Found solution with cube (l0 = inner_join(),)
[     1.750][MainProcess][INFO] Statistics:
[     1.750][MainProcess][INFO] 	Generated cubes: 13
[     1.750][MainProcess][INFO] 	Attempted programs: 2
[     1.751][MainProcess][INFO] 		Rejected: 0
[     1.751][MainProcess][INFO] 		Failed: 1
[     1.751][MainProcess][INFO] 	Blacklist clauses: 1
[     1.751][MainProcess][DEBUG] Printing statistics for good programs of size 1
[     1.752][MainProcess][DEBUG] 	0: Counter({'inner_join': 1})
[     1.752][MainProcess][INFO] Solution found: inner_join(@param0, @param0, 'id')
[     1.762][cube-solver-4][DEBUG] Found solution with cube (l0 = left_join(),)
[     1.767][cube-solver-5][DEBUG] Found solution with cube (l0 = union(),)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/042.csv", col_types = cols(id = col_integer(),name = col_character(),school = col_character()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/042_o.csv", col_types = cols(id = col_integer(),name = col_character()))

df2 <- inner_join(input1, input1, by=c('id'), suffix = c('', '.other'))
out <- df2 %>% select(id, name) %>% arrange(id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT id,
       name
FROM
  (SELECT LHS.id AS id,
          LHS.name AS name,
          LHS.school AS school,
          RHS.name AS name.other,
          RHS.school AS school.other
   FROM input1 AS LHS
   INNER JOIN input1 AS RHS ON (LHS.id = RHS.id))
ORDER BY id
