[     2.028][MainProcess][INFO] Parsing specification...
[     2.032][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     2.032][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     2.032][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     2.033][MainProcess][DEBUG] Reading input files...
[     2.043][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/005.csv: ['int64', 'int64', 'int64', 'datetime64[ns]']
[     2.049][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/005_o.csv: ['int64', 'int64', 'int64', 'datetime64[ns]']
[     2.082][MainProcess][DEBUG] Generating DSL...
[     2.285][MainProcess][INFO] Creating 8 processes
[     2.315][MainProcess][DEBUG] Increasing generator loc to 3
[     2.496][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     2.502][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     2.502][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     2.518][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.527][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     2.530][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.542][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     2.558][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     8.600][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     8.607][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     8.946][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     8.979][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     9.970][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[    13.230][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[    13.252][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise([3]))
[    13.266][cube-solver-7][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise([3]))
[    13.286][cube-solver-7][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[    13.290][cube-solver-5][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[    13.303][cube-solver-7][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([3]), l2 = filter())
[    13.307][cube-solver-5][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise([3]))
[    13.322][cube-solver-7][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[    13.326][cube-solver-5][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[    13.340][cube-solver-7][DEBUG] Solving cube (l0 = summarise([3]), l1 = natural_join(), l2 = filter())
[    13.344][cube-solver-5][DEBUG] Solving cube (l0 = summarise([3]), l1 = natural_join3(), l2 = filter())
[    13.372][cube-solver-5][DEBUG] Solving cube (l0 = summarise([3]), l1 = natural_join4(), l2 = filter())
[    13.391][cube-solver-5][DEBUG] Solving cube (l0 = summarise([3]), l1 = summarise([3]), l2 = filter())
[    13.415][cube-solver-5][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter(), l2 = natural_join())
[    13.510][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([3]), l2 = filter([3]))
[    13.571][cube-solver-4][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter([5]), l2 = natural_join3())
[    13.675][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([9]), l2 = mutate())
[    13.737][cube-solver-6][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([10]), l2 = natural_join4())
[    13.780][cube-solver-6][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([10]), l2 = summarise([4]))
[    19.910][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[    22.356][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([4]), l2 = filter([16]))
[    22.406][cube-solver-1][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([16]), l2 = anti_join())
[    29.673][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[    31.107][cube-solver-2][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([80]), l2 = filter([80]))
[    40.767][cube-solver-0][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([84]), l2 = left_join())
[   281.681][cube-solver-5][DEBUG] Found solution with cube (l0 = summarise([3]), l1 = filter(), l2 = natural_join())
[   281.688][MainProcess][INFO] Statistics:
[   281.690][MainProcess][INFO] 	Generated cubes: 27
[   281.690][MainProcess][INFO] 	Attempted programs: 2741
[   281.690][MainProcess][INFO] 		Rejected: 1025
[   281.690][MainProcess][INFO] 		Failed: 1715
[   281.691][MainProcess][INFO] 	Blacklist clauses: 88
[   281.691][MainProcess][DEBUG] Printing statistics for good programs of size 2
[   281.737][MainProcess][DEBUG] 	0: Counter({'mutate': 37243, 'filter': 1440})
[   281.756][MainProcess][DEBUG] 	1: Counter({'filter': 37244, 'mutate': 1440})
[   281.756][MainProcess][DEBUG] Printing statistics for good programs of size 3
[   281.798][MainProcess][DEBUG] 	0: Counter({'summarise': 145204})
[   281.831][MainProcess][DEBUG] 	1: Counter({'filter': 109561, 'natural_join': 35646})
[   281.865][MainProcess][DEBUG] 	2: Counter({'filter': 35647, 'natural_join3': 34308, 'natural_join': 34123, 'left_join': 29564, 'anti_join': 11568})
[   281.865][MainProcess][INFO] Solution found: natural_join(summarise(@param0, event_id = max(event_id), event_time, prim_cid), filter(@param0, event_id <= 17))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/005.csv", col_types = cols(g_event_id = col_integer(),prim_cid = col_integer(),event_id = col_integer(),event_time = col_character()))
input1$event_time <- dmy(input1$event_time)
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/005_o.csv", col_types = cols(g_event_id = col_integer(),prim_cid = col_integer(),event_id = col_integer(),event_time = col_character()))
expected_output$event_time <- dmy(expected_output$event_time)

df2 <- input1 %>% group_by(event_time, prim_cid) %>% summarise(event_id = max(event_id)) %>% ungroup()
df3 <- input1 %>% filter(event_id <= 17)
df4 <- inner_join(df2, df3)
out <- df4 %>% select(g_event_id, prim_cid, event_id, event_time) %>% arrange(g_event_id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT g_event_id,
       prim_cid,
       event_id,
       event_time
FROM
  (SELECT LHS.event_time AS event_time,
          LHS.prim_cid AS prim_cid,
          LHS.event_id AS event_id,
          RHS.g_event_id AS g_event_id
   FROM
     (SELECT event_time,
             prim_cid,
             MAX(event_id) AS event_id
      FROM input1
      GROUP BY event_time,
               prim_cid) AS LHS
   INNER JOIN
     (SELECT *
      FROM input1
      WHERE (event_id <= 17.0)) AS RHS ON (LHS.event_time = RHS.event_time
                                           AND LHS.prim_cid = RHS.prim_cid
                                           AND LHS.event_id = RHS.event_id))
ORDER BY g_event_id
