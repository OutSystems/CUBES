[     3.194][MainProcess][INFO] Parsing specification...
[     3.203][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.203][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.204][MainProcess][DEBUG] Reading input files...
[     3.211][MainProcess][WARNING] Using integers larger than 32 bits! Converting column isbn to string.
[     3.213][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/051_1.csv: ['object', 'string']
[     3.217][MainProcess][WARNING] Using integers larger than 32 bits! Converting column isbn to string.
[     3.218][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/051_2.csv: ['object', 'string']
[     3.223][MainProcess][WARNING] Using integers larger than 32 bits! Converting column isbn to string.
[     3.224][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/051_o.csv: ['object', 'string', 'string']
[     3.256][MainProcess][DEBUG] Generating DSL...
[     3.304][MainProcess][INFO] Creating 8 processes
[     3.337][MainProcess][DEBUG] Increasing generator loc to 2
[     3.379][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.386][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     3.388][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     3.389][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     3.394][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     3.399][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.404][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     3.411][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     3.843][cube-solver-1][WARNING] There is no solution for current loc (1).
[     3.844][cube-solver-0][WARNING] There is no solution for current loc (1).
[     3.844][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     3.844][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     3.845][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.845][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     4.341][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise())
[     4.347][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise())
[     4.354][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise())
[     4.358][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4())
[     4.360][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = summarise())
[     4.362][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join())
[     4.362][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = left_join())
[     4.389][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate())
[     4.410][cube-solver-5][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate())
[     4.416][cube-solver-5][DEBUG] Solving cube (l0 = summarise([4]), l1 = union())
[     4.416][cube-solver-7][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate())
[     4.422][cube-solver-7][DEBUG] Solving cube (l0 = summarise([4]), l1 = intersect())
[     4.899][cube-solver-1][DEBUG] Solving cube (l0 = summarise([19]), l1 = natural_join())
[     4.899][cube-solver-0][DEBUG] Solving cube (l0 = summarise([19]), l1 = natural_join3())
[     5.687][cube-solver-1][DEBUG] Found solution with cube (l0 = summarise([19]), l1 = natural_join())
[     5.688][MainProcess][INFO] Statistics:
[     5.689][MainProcess][INFO] 	Generated cubes: 16
[     5.689][MainProcess][INFO] 	Attempted programs: 13
[     5.689][MainProcess][INFO] 		Rejected: 6
[     5.689][MainProcess][INFO] 		Failed: 6
[     5.689][MainProcess][INFO] 	Blacklist clauses: 19
[     5.689][MainProcess][DEBUG] Printing statistics for good programs of size 2
[     5.690][MainProcess][DEBUG] 	0: Counter({'summarise': 447, 'natural_join': 288})
[     5.690][MainProcess][DEBUG] 	1: Counter({'mutate': 156, 'union': 142, 'summarise': 132, 'left_join': 120, 'natural_join3': 88, 'natural_join': 73, 'anti_join': 24})
[     5.691][MainProcess][INFO] Solution found: natural_join(@param0, summarise(@param1, concatAuthor = string_agg(Author, ', '), isbn))
[     5.849][cube-solver-0][DEBUG] Found solution with cube (l0 = summarise([19]), l1 = natural_join3())
[     6.016][cube-solver-2][DEBUG] Found solution with cube (l0 = natural_join(), l1 = summarise())

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/051_1.csv", col_types = cols(isbn = col_character(),title = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/scythe/recent_posts/tables/051_2.csv", col_types = cols(isbn = col_character(),Author = col_character()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/051_o.csv", col_types = cols(isbn = col_character(),title = col_character(),author = col_character()))

string_agg <- function(v,s) {Reduce(function(x, y) paste(x, y, sep = s), v)}

df3 <- input2 %>% group_by(isbn) %>% summarise(concatAuthor = string_agg(Author, ', ')) %>% ungroup()
df4 <- inner_join(input1, df3)
out <- df4 %>% select(isbn, title, author = concatAuthor) %>% arrange(isbn)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `isbn`,
       `title`,
       `concatAuthor` AS `author`
FROM
  (SELECT `LHS`.`isbn` AS `isbn`,
          `LHS`.`title` AS `title`,
          `RHS`.`concatAuthor` AS `concatAuthor`
   FROM `input1` AS `LHS`
   INNER JOIN
     (SELECT `isbn`,
             string_agg(`Author`, ', ') AS concatAuthor
      FROM input2
      GROUP BY isbn) AS RHS ON (LHS.isbn = RHS.isbn))
ORDER BY isbn
