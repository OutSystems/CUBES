[     3.642][MainProcess][INFO] Parsing specification...
[     3.647][MainProcess][DEBUG] Reading input files...
[     3.655][MainProcess][INFO] Inferred data types for table tests-examples/leetcode/tables/183_1.csv: ['int64', 'string']
[     3.659][MainProcess][INFO] Inferred data types for table tests-examples/leetcode/tables/183_2.csv: ['int64', 'int64']
[     3.663][MainProcess][INFO] Inferred data types for table tests-examples/leetcode/tables/183_o.csv: ['string']
[     3.695][MainProcess][DEBUG] Generating DSL...
[     3.713][MainProcess][INFO] Creating 8 processes
[     3.756][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     3.760][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     3.765][cube-solver-2][DEBUG] Initialising process for 1 lines of code.
[     3.767][cube-solver-3][DEBUG] Initialising process for 1 lines of code.
[     3.768][cube-solver-4][DEBUG] Initialising process for 1 lines of code.
[     3.772][cube-solver-5][DEBUG] Initialising process for 1 lines of code.
[     3.776][cube-solver-6][DEBUG] Initialising process for 1 lines of code.
[     3.779][cube-solver-7][DEBUG] Initialising process for 1 lines of code.
[     3.817][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(),)
[     3.822][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(),)
[     3.823][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(),)
[     3.826][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(),)
[     3.828][cube-solver-3][DEBUG] Solving cube (l0 = anti_join(),)
[     3.829][cube-solver-2][DEBUG] Solving cube (l0 = inner_join(),)
[     3.829][cube-solver-4][DEBUG] Solving cube (l0 = left_join(),)
[     3.834][cube-solver-5][DEBUG] Solving cube (l0 = union(),)
[     3.837][MainProcess][DEBUG] Increasing generator loc to 2
[     3.838][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.838][cube-solver-6][DEBUG] Solving cube (l0 = intersect(),)
[     3.840][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(),)
[     3.945][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     3.946][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     3.961][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([4]))
[     3.961][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.965][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = semi_join())
[     3.967][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     4.076][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = union())
[     4.076][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join())
[     4.076][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     4.077][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = intersect([5]))
[     4.083][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = cross_join([2]))
[     4.091][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     4.176][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join3())
[     4.177][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join4())
[     4.179][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = anti_join([10]))
[     4.185][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = left_join())
[     4.186][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = union())
[     4.187][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = intersect([6]))
[     4.191][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = semi_join())
[     4.193][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = inner_join([16]))
[     4.193][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = cross_join([2]))
[     4.196][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = inner_join([16]))
[     4.203][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join())
[     4.205][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join3())
[     4.206][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join4())
[     4.207][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = anti_join([10]))
[     4.211][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join())
[     4.212][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = left_join())
[     4.214][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = union())
[     4.215][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = intersect([6]))
[     4.219][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = semi_join())
[     4.220][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = cross_join([2]))
[     4.223][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = inner_join([16]))
[     4.231][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join())
[     4.232][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join3())
[     4.233][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join4())
[     4.235][cube-solver-4][DEBUG] Solving cube (l0 = anti_join([10]), l1 = natural_join())
[     4.311][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     4.433][cube-solver-2][DEBUG] Solving cube (l0 = anti_join([10]), l1 = natural_join3())
[     4.439][cube-solver-2][DEBUG] Solving cube (l0 = anti_join([10]), l1 = natural_join4())
[     4.440][cube-solver-1][DEBUG] Solving cube (l0 = anti_join([10]), l1 = anti_join([10]))
[     4.445][cube-solver-2][DEBUG] Solving cube (l0 = anti_join([10]), l1 = left_join())
[     4.449][cube-solver-1][DEBUG] Solving cube (l0 = anti_join([10]), l1 = union())
[     4.555][cube-solver-5][DEBUG] Solving cube (l0 = anti_join([10]), l1 = intersect([6]))
[     4.567][cube-solver-7][DEBUG] Solving cube (l0 = anti_join([10]), l1 = semi_join())
[     4.591][cube-solver-6][DEBUG] Solving cube (l0 = anti_join([10]), l1 = cross_join([2]))
[     4.760][cube-solver-6][DEBUG] Solving cube (l0 = anti_join([10]), l1 = inner_join([22]))
[     4.885][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join())
[     4.894][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join3())
[     5.231][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join4())
[     5.233][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = anti_join([10]))
[     5.284][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = left_join())
[     5.299][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = union())
[     5.439][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = intersect([6]))
[     5.777][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = semi_join())
[     5.928][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = cross_join([2]))
[     5.964][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = inner_join([22]))
[     6.048][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = natural_join())
[     6.073][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = natural_join3())
[     6.302][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = natural_join4())
[     6.308][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = left_join())
[     6.308][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = anti_join([10]))
[     6.619][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = union())
[     6.975][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = intersect([6]))
[     7.140][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = semi_join())
[     7.144][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = cross_join([2]))
[     7.238][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = inner_join([22]))
[     7.268][cube-solver-7][DEBUG] Solving cube (l0 = intersect([6]), l1 = natural_join())
[     7.607][cube-solver-7][DEBUG] Solving cube (l0 = intersect([8]), l1 = natural_join3())
[     7.687][cube-solver-1][DEBUG] Solving cube (l0 = intersect([8]), l1 = natural_join4())
[     7.692][cube-solver-1][DEBUG] Solving cube (l0 = intersect([8]), l1 = anti_join([10]))
[     7.749][cube-solver-5][DEBUG] Solving cube (l0 = intersect([8]), l1 = left_join())
[     8.046][cube-solver-5][DEBUG] Solving cube (l0 = intersect([8]), l1 = union())
[     8.171][cube-solver-0][DEBUG] Solving cube (l0 = intersect([8]), l1 = intersect([8]))
[     8.385][cube-solver-5][DEBUG] Solving cube (l0 = intersect([8]), l1 = semi_join())
[     8.569][cube-solver-5][DEBUG] Solving cube (l0 = intersect([8]), l1 = cross_join([2]))
[     8.665][cube-solver-5][DEBUG] Solving cube (l0 = intersect([8]), l1 = inner_join([22]))
[     8.678][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join())
[     8.766][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join3())
[     8.766][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join4())
[     8.769][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = anti_join([10]))
[     9.179][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = left_join())
[     9.771][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = union())
[     9.848][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = intersect([8]))
[    10.367][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = semi_join())
[    10.439][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = cross_join([2]))
[    10.524][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = inner_join([22]))
[    10.547][cube-solver-0][DEBUG] Solving cube (l0 = cross_join([2]), l1 = natural_join())
[    10.575][cube-solver-0][DEBUG] Solving cube (l0 = cross_join([4]), l1 = natural_join3())
[    10.578][cube-solver-0][DEBUG] Solving cube (l0 = cross_join([4]), l1 = natural_join4())
[    10.581][cube-solver-0][DEBUG] Solving cube (l0 = cross_join([4]), l1 = anti_join([10]))
[    10.588][cube-solver-0][DEBUG] Solving cube (l0 = cross_join([4]), l1 = left_join())
[    10.591][cube-solver-0][DEBUG] Solving cube (l0 = cross_join([4]), l1 = union())
[    10.595][cube-solver-0][DEBUG] Solving cube (l0 = cross_join([4]), l1 = intersect([8]))
[    10.601][cube-solver-0][DEBUG] Solving cube (l0 = cross_join([4]), l1 = semi_join())
[    10.604][cube-solver-0][DEBUG] Solving cube (l0 = cross_join([4]), l1 = cross_join([4]))
[    10.610][cube-solver-0][DEBUG] Solving cube (l0 = cross_join([4]), l1 = inner_join([22]))
[    10.622][cube-solver-0][DEBUG] Solving cube (l0 = inner_join([22]), l1 = natural_join())
[    10.670][cube-solver-7][DEBUG] Solving cube (l0 = inner_join([24]), l1 = natural_join3())
[    10.809][cube-solver-1][DEBUG] Solving cube (l0 = inner_join([28]), l1 = natural_join4())
[    10.813][cube-solver-5][DEBUG] Solving cube (l0 = inner_join([28]), l1 = anti_join([10]))
[    10.832][cube-solver-1][DEBUG] Solving cube (l0 = inner_join([28]), l1 = left_join())
[    11.497][cube-solver-6][DEBUG] Solving cube (l0 = inner_join([38]), l1 = union())
[    13.097][cube-solver-2][DEBUG] Solving cube (l0 = inner_join([38]), l1 = intersect([8]))
[    13.774][cube-solver-0][DEBUG] Solving cube (l0 = inner_join([38]), l1 = semi_join())
[    13.878][cube-solver-4][DEBUG] Solving cube (l0 = inner_join([38]), l1 = cross_join([4]))
[    14.144][cube-solver-1][DEBUG] Solving cube (l0 = inner_join([38]), l1 = inner_join([38]))
[    14.220][cube-solver-5][DEBUG] Found solution with cube (l0 = inner_join([28]), l1 = anti_join([10]))
[    14.221][MainProcess][INFO] Statistics:
[    14.222][MainProcess][INFO] 	Generated cubes: 110
[    14.222][MainProcess][INFO] 	Attempted programs: 2482
[    14.222][MainProcess][INFO] 		Rejected: 1226
[    14.222][MainProcess][INFO] 		Failed: 1255
[    14.222][MainProcess][INFO] 	Blacklist clauses: 60
[    14.223][MainProcess][DEBUG] Printing statistics for good programs of size 1
[    14.223][MainProcess][DEBUG] 	0: Counter({'inner_join': 46, 'anti_join': 16, 'natural_join': 12, 'union': 12, 'left_join': 12, 'semi_join': 8})
[    14.223][MainProcess][DEBUG] Printing statistics for good programs of size 2
[    14.229][MainProcess][DEBUG] 	0: Counter({'inner_join': 2009, 'left_join': 1524, 'union': 1508, 'natural_join': 1008, 'anti_join': 996, 'semi_join': 888, 'intersect': 286})
[    14.235][MainProcess][DEBUG] 	1: Counter({'inner_join': 3482, 'natural_join3': 1004, 'left_join': 858, 'union': 827, 'anti_join': 775, 'natural_join': 752, 'semi_join': 393, 'intersect': 130})
[    14.235][MainProcess][INFO] Solution found: anti_join(@param0, inner_join(@param1, @param0, 'CustomerId' = 'Id'), 'Name')

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/leetcode/tables/183_1.csv", col_types = cols(Id = col_integer(),Name = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/leetcode/tables/183_2.csv", col_types = cols(Id = col_integer(),CustomerId = col_integer()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/leetcode/tables/183_o.csv", col_types = cols(Customers = col_character()))

df3 <- inner_join(input2, input1, by=c('CustomerId' = 'Id'), suffix = c('', '.other'))
df4 <- anti_join(input1, df3, by=c('Name'))
out <- df4 %>% select(Customers = Name) %>% arrange(Customers)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT Name AS Customers
FROM
  (SELECT *
   FROM input1 AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT LHS.Id AS Id,
                  LHS.CustomerId AS CustomerId,
                  RHS.Name AS Name
           FROM input2 AS LHS
           INNER JOIN input1 AS RHS ON (LHS.CustomerId = RHS.Id)) AS RHS
        WHERE (LHS.Name = RHS.Name) ))
ORDER BY Customers
