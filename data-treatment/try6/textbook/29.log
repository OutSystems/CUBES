[prc0][info] Parsing specification...
[prc1][info] Parsing specification...
[prc3][info] Parsing specification...
[prc2][info] Parsing specification...
[prc3][debug] Reading input files...
[prc0][debug] Reading input files...
[prc4][info] Parsing specification...
[prc1][debug] Reading input files...
[prc2][debug] Reading input files...
[prc4][debug] Reading input files...
con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read.csv("tests-examples/textbook/tables/aircraft.txt")
input1 <- copy_to(con, input1)
input2 <- read.csv("tests-examples/textbook/tables/flights.txt")
input2 <- copy_to(con, input2)
expected_output <- read.table("tests-examples/textbook/tables/29.out", sep =",", header=T)

[prc3][debug] Generating DSL...
con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read.csv("tests-examples/textbook/tables/aircraft.txt")
input1 <- copy_to(con, input1)
input2 <- read.csv("tests-examples/textbook/tables/flights.txt")
input2 <- copy_to(con, input2)
expected_output <- read.table("tests-examples/textbook/tables/29.out", sep =",", header=T)

[prc1][debug] Generating DSL...
con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read.csv("tests-examples/textbook/tables/aircraft.txt")
input1 <- copy_to(con, input1)
input2 <- read.csv("tests-examples/textbook/tables/flights.txt")
input2 <- copy_to(con, input2)
expected_output <- read.table("tests-examples/textbook/tables/29.out", sep =",", header=T)

[prc0][debug] Generating DSL...
[prc3][debug] Building Tyrell spec from parse tree...
[prc3][debug] Processing type definitions...
con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read.csv("tests-examples/textbook/tables/aircraft.txt")
input1 <- copy_to(con, input1)
input2 <- read.csv("tests-examples/textbook/tables/flights.txt")
input2 <- copy_to(con, input2)
expected_output <- read.table("tests-examples/textbook/tables/29.out", sep =",", header=T)

[prc2][debug] Generating DSL...
[prc3][debug] Processing input/output definitions...
[prc3][debug] Processing function definitions...
[prc3][debug] Processing global predicates...
[prc3][info] Parsing succeeded
[prc3][info] Building synthesizer...
[prc3][info] Lines of Code: 1
con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read.csv("tests-examples/textbook/tables/aircraft.txt")
input1 <- copy_to(con, input1)
input2 <- read.csv("tests-examples/textbook/tables/flights.txt")
input2 <- copy_to(con, input2)
expected_output <- read.table("tests-examples/textbook/tables/29.out", sep =",", header=T)

[prc4][debug] Generating DSL...
[prc1][debug] Building Tyrell spec from parse tree...
[prc1][debug] Processing type definitions...
[prc2][debug] Building Tyrell spec from parse tree...
[prc2][debug] Processing type definitions...
[prc0][debug] Building Tyrell spec from parse tree...
[prc0][debug] Processing type definitions...
[prc1][debug] Processing input/output definitions...
[prc1][debug] Processing function definitions...
[prc2][debug] Processing input/output definitions...
[prc0][debug] Processing input/output definitions...
[prc1][debug] Processing global predicates...
[prc2][debug] Processing function definitions...
[prc4][debug] Building Tyrell spec from parse tree...
[prc4][debug] Processing type definitions...
[prc0][debug] Processing function definitions...
[prc2][debug] Processing global predicates...
[prc1][info] Parsing succeeded
[prc0][debug] Processing global predicates...
[prc1][info] Building synthesizer...
[prc1][info] Lines of Code: 1
[prc2][info] Parsing succeeded
[prc2][info] Building synthesizer...
[prc2][info] Lines of Code: 1
[prc4][debug] Processing input/output definitions...
[prc0][info] Parsing succeeded
[prc0][info] Building synthesizer...
[prc0][info] Lines of Code: 1
[prc4][debug] Processing function definitions...
[prc4][debug] Processing global predicates...
[prc4][info] Parsing succeeded
[prc4][info] Building synthesizer...
[prc4][info] Lines of Code: 1
No solution found
