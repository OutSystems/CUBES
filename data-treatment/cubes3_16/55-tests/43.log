[    3.1249][cube-solver-0][warning] There is no solution for current loc (2).

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/18-1.txt", col_types = cols(S_key = col_character(),P_id = col_character(),cost = col_integer()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/18-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/55-tests/tables/43.out", col_types = cols(S_name = col_character(),n = col_integer()))

df3 <- input1 %>% group_by(P_id) %>% summarise(cost = max(cost)) %>% ungroup()
df4 <- inner_join(input1, df3) %>% inner_join(input2)
df5 <- df4 %>% group_by(S_key, S_name) %>% summarise(n = n()) %>% ungroup()
out <- df5 %>% select(S_name, n)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`,
       `n`
FROM
  (SELECT `S_key`,
          `S_name`,
          COUNT() AS `n`
   FROM
     (SELECT `S_key`,
             `P_id`,
             `cost`,
             `S_name`
      FROM
        (SELECT `S_key`,
                `P_id`,
                `cost`
         FROM `input1` AS `LHS`
         INNER JOIN
           (SELECT `P_id`,
                   MAX(`cost`) AS `cost`
            FROM `input1`
            GROUP BY `P_id`) AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`
                                          AND `LHS`.`cost` = `RHS`.`cost`)) AS `LHS`
      INNER JOIN `input2` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
   GROUP BY `S_key`,
            `S_name`)
