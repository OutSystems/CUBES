[    1.9868][cube-solver-1][warning] There is no solution for current loc (2).
[    2.1914][cube-solver-0][warning] There is no solution for current loc (2).

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/34.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input2, input1)
df5 <- df4 %>% group_by(P_id, color) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(color == 'red' & n >= 3)
df7 <- inner_join(df6, input1) %>% inner_join(input2) %>% inner_join(input3)
out <- df7 %>% select(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `P_id`,
          `color`,
          `n`,
          `S_key`,
          `S_name`
   FROM
     (SELECT `P_id`,
             `color`,
             `n`,
             `S_key`
      FROM
        (SELECT `P_id`,
                `color`,
                `n`,
                `S_key`
         FROM
           (SELECT *
            FROM
              (SELECT `P_id`,
                      `color`,
                      COUNT() AS `n`
               FROM
                 (SELECT `P_id`,
                         `color`,
                         `S_key`
                  FROM `input2` AS `LHS`
                  INNER JOIN `input1` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
               GROUP BY `P_id`,
                        `color`)
            WHERE (`color` = 'red'
                   AND `n` >= 3.0)) AS `LHS`
         INNER JOIN `input1` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)) AS `LHS`
      INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`
                                       AND `LHS`.`color` = `RHS`.`color`)) AS `LHS`
   INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
