[    4.7327][cube-solver-0][warning] There is no solution for current loc (2).
[    4.8138][cube-solver-1][warning] There is no solution for current loc (2).

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/2-1.txt", col_types = cols(C_name = col_character(),F_key = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/2-2.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/2-3.txt", col_types = cols(F_key = col_character(),F_name = col_character()))
input3 <- copy_to(con, input3)
input4 <- read_csv("tests-examples/textbook/tables/2-4.txt", col_types = cols(S_key = col_character(),major = col_character(),age = col_integer()))
input4 <- copy_to(con, input4)
expected_output <- read_csv("tests-examples/textbook/tables/2.out", col_types = cols(maxage = col_integer()))

df5 <- inner_join(input2, input1) %>% inner_join(input3) %>% inner_join(input4)
df6 <- df5 %>% filter(F_name != 'faculty1' & major == 'History')
df7 <- df6 %>% group_by(major) %>% summarise(maxage = max(age)) %>% ungroup()
out <- df7 %>% select(maxage)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `maxage`
FROM
  (SELECT `major`,
          MAX(`age`) AS `maxage`
   FROM
     (SELECT *
      FROM
        (SELECT `S_key`,
                `C_name`,
                `F_key`,
                `F_name`,
                `major`,
                `age`
         FROM
           (SELECT `S_key`,
                   `C_name`,
                   `F_key`,
                   `F_name`
            FROM
              (SELECT `S_key`,
                      `C_name`,
                      `F_key`
               FROM `input2` AS `LHS`
               INNER JOIN `input1` AS `RHS` ON (`LHS`.`C_name` = `RHS`.`C_name`)) AS `LHS`
            INNER JOIN `input3` AS `RHS` ON (`LHS`.`F_key` = `RHS`.`F_key`)) AS `LHS`
         INNER JOIN `input4` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
      WHERE (`F_name` != 'faculty1'
             AND `major` = 'History'))
   GROUP BY `major`)
