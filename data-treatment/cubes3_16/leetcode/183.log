
------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/leetcode/tables/183_1.csv", col_types = cols(Id = col_integer(),Name = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/leetcode/tables/183_2.csv", col_types = cols(Id = col_integer(),CustomerId = col_integer()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/leetcode/tables/183_o.csv", col_types = cols(Customers = col_character()))

df3 <- inner_join(input1, input2, by=c('Id' = 'CustomerId'), suffix = c('', '.other'))
df4 <- anti_join(input1, df3)
out <- df4 %>% select(Customers = Name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `Name` AS `Customers`
FROM
  (SELECT *
   FROM `input1` AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT `Id`,
                  `Name`,
                  `Id.other`
           FROM `input1` AS `LHS`
           INNER JOIN `input2` AS `RHS` ON (`LHS`.`Id` = `RHS`.`CustomerId`)) AS `RHS`
        WHERE (`LHS`.`Id` = `RHS`.`Id`
               AND `LHS`.`Name` = `RHS`.`Name`) ))
