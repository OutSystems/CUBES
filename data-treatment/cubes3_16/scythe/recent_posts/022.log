
------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/022_2.csv", col_types = cols(c1 = col_integer(),c2 = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/022_o.csv", col_types = cols(c3 = col_integer()))

df2 <- input1 %>% group_by(c2) %>% summarise(n = n()) %>% ungroup()
df3 <- input1 %>% group_by(c2) %>% summarise(maxc1 = max(c1)) %>% ungroup()
df4 <- inner_join(input1, df2) %>% inner_join(df3)
df5 <- df4 %>% filter(c1 < 3 | n >= 3)
out <- df5 %>% select(c3 = maxc1) %>% distinct()


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT `maxc1` AS `c3`
FROM
  (SELECT `c1`,
          `c2`,
          `n`,
          `maxc1`
   FROM
     (SELECT `c1`,
             `c2`,
             `n`
      FROM `input1` AS `LHS`
      INNER JOIN
        (SELECT `c2`,
                COUNT() AS `n`
         FROM `input1`
         GROUP BY `c2`) AS `RHS` ON (`LHS`.`c2` = `RHS`.`c2`)) AS `LHS`
   INNER JOIN
     (SELECT `c2`,
             MAX(`c1`) AS `maxc1`
      FROM `input1`
      GROUP BY `c2`) AS `RHS` ON (`LHS`.`c2` = `RHS`.`c2`))
WHERE (`c1` < 3.0
       OR `n` >= 3.0)
