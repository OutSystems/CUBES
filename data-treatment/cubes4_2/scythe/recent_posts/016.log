[     3.316][MainProcess][INFO] Parsing specification...
[     3.321][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.321][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.321][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     3.322][MainProcess][DEBUG] Reading input files...
[     3.331][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/016_2.csv: ['string', 'datetime64[ns]']
[     3.338][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/016_o.csv: ['string', 'datetime64[ns]', 'int64']
[     3.376][MainProcess][DEBUG] Generating DSL...
[     3.643][MainProcess][INFO] Creating 2 processes
[     3.962][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     4.024][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[    18.192][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[    18.194][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[    18.248][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[    29.848][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter())
[    37.555][cube-solver-0][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = summarise())
[    37.581][cube-solver-0][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = mutate())
[    37.609][cube-solver-0][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise())
[    37.640][cube-solver-0][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[    37.667][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = summarise(), l2 = filter())
[    51.295][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise())
[    57.453][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = mutate())
[    71.560][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter())
[   109.441][MainProcess][DEBUG] Increasing generator loc to 4
[   109.476][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[   127.888][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[   128.069][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = summarise(), l3 = filter())
[   128.178][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter(), l3 = mutate())
[   128.224][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = mutate(), l3 = filter())
[   128.265][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise(), l3 = summarise())
[   128.307][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise(), l3 = mutate())
[   128.348][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate(), l3 = summarise())
[   128.395][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate(), l3 = mutate())
[   128.435][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = summarise(), l3 = filter())
[   128.474][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter(), l3 = summarise())
[   128.513][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter(), l3 = mutate())
[   128.550][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = mutate(), l3 = filter())
[   128.583][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = summarise(), l3 = filter())
[   128.615][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter(), l3 = summarise())
[   128.647][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter(), l3 = mutate())
[   128.678][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = mutate(), l3 = filter())
[   128.709][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise(), l3 = summarise())
[   128.741][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise(), l3 = mutate())
[   128.772][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate(), l3 = summarise())
[   128.804][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate(), l3 = mutate())
[   128.835][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = summarise(), l3 = filter())
[   128.867][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter(), l3 = summarise())
[   128.898][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter(), l3 = mutate())
[   128.930][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = mutate(), l3 = filter())
[   128.962][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = summarise(), l3 = filter())
[   128.994][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter(), l3 = summarise())
[   129.026][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter(), l3 = mutate())
[   129.058][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = mutate(), l3 = filter())
[   129.089][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise(), l3 = summarise())
[   129.121][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise(), l3 = mutate())
[   129.152][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate(), l3 = summarise())
[   129.183][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate(), l3 = mutate())
[   129.215][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = summarise(), l3 = filter())
[   129.247][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter(), l3 = summarise())
[   129.278][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter(), l3 = mutate())
[   129.310][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = mutate(), l3 = filter())
[   129.342][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = summarise(), l3 = filter())
[   152.350][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter(), l3 = summarise())
[   152.427][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter(), l3 = summarise())
[   196.243][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter(), l3 = mutate())
[   202.378][cube-solver-0][DEBUG] Found solution with cube (l0 = summarise(), l1 = natural_join(), l2 = filter(), l3 = mutate())
[   202.381][MainProcess][INFO] Statistics:
[   202.382][MainProcess][INFO] 	Generated cubes: 51
[   202.382][MainProcess][INFO] 	Attempted programs: 3122
[   202.382][MainProcess][INFO] 		Rejected: 2171
[   202.382][MainProcess][INFO] 		Failed: 950
[   202.382][MainProcess][INFO] 	Blacklist clauses: 0
[   202.382][MainProcess][DEBUG] Printing statistics for good programs of size 3
[   202.402][MainProcess][DEBUG] 	0: Counter({'summarise': 16200, 'mutate': 13200})
[   202.409][MainProcess][DEBUG] 	1: Counter({'mutate': 22200, 'filter': 6600, 'summarise': 600})
[   202.416][MainProcess][DEBUG] 	2: Counter({'filter': 22800, 'mutate': 5400, 'summarise': 1200})
[   202.416][MainProcess][DEBUG] Printing statistics for good programs of size 4
[   202.418][MainProcess][DEBUG] 	0: Counter({'summarise': 7546})
[   202.420][MainProcess][DEBUG] 	1: Counter({'natural_join': 7546})
[   202.422][MainProcess][DEBUG] 	2: Counter({'filter': 4618, 'summarise': 2928})
[   202.424][MainProcess][DEBUG] 	3: Counter({'summarise': 3600, 'filter': 2928, 'mutate': 1018})
[   202.424][MainProcess][INFO] Solution found: mutate(filter(natural_join(summarise(@param0, n = n(), CustomerId), @param0), n > 1 & ReportDt > mdy('10/19/2016')), maxReportDt = max(ReportDt))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/016_2.csv", col_types = cols(CustomerId = col_character(),ReportDt = col_character()))
input1$ReportDt <- mdy(input1$ReportDt)
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/016_o.csv", col_types = cols(c1 = col_character(),c2 = col_character(),c3 = col_integer()))
expected_output$c2 <- mdy(expected_output$c2)

df2 <- input1 %>% group_by(CustomerId) %>% summarise(n = n()) %>% ungroup()
df3 <- inner_join(df2, input1)
df4 <- df3 %>% filter(n > 1 & ReportDt > mdy('10/19/2016'))
df5 <- df4 %>% mutate(maxReportDt = max(ReportDt))
out <- df5 %>% select(c1 = CustomerId, c2 = maxReportDt, c3 = n) %>% distinct() %>% arrange(c1)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT `CustomerId` AS `c1`,
                MAX(`ReportDt`) OVER () AS `c2`,
                                     `n` AS `c3`
FROM
  (SELECT `LHS`.`CustomerId` AS `CustomerId`,
          `LHS`.`n` AS `n`,
          `RHS`.`ReportDt` AS `ReportDt`
   FROM
     (SELECT `CustomerId`,
             COUNT() AS `n`
      FROM `input1`
      GROUP BY `CustomerId`) AS `LHS`
   INNER JOIN `input1` AS `RHS` ON (`LHS`.`CustomerId` = `RHS`.`CustomerId`))
WHERE (`n` > 1.0
       AND `ReportDt` > mdy('10/19/2016'))
ORDER BY c1
