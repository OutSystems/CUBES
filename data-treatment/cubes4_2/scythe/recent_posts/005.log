[     1.639][MainProcess][INFO] Parsing specification...
[     1.642][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.642][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.642][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.643][MainProcess][DEBUG] Reading input files...
[     1.653][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/005.csv: ['int64', 'int64', 'int64', 'datetime64[ns]']
[     1.659][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/005_o.csv: ['int64', 'int64', 'int64', 'datetime64[ns]']
[     1.692][MainProcess][DEBUG] Generating DSL...
[     1.894][MainProcess][INFO] Creating 2 processes
[     2.082][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.125][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     7.783][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     7.814][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     8.942][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[    17.970][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[    24.707][MainProcess][DEBUG] Increasing generator loc to 3
[    24.734][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[    34.205][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([4]), l2 = filter())
[    34.266][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise([4]))
[    34.295][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[    34.319][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[    34.343][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([4]), l2 = filter())
[    34.367][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise([4]))
[    34.392][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[    34.414][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[    34.435][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([4]), l2 = filter())
[    34.459][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise([4]))
[    34.484][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[    34.506][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[    34.527][cube-solver-0][DEBUG] Solving cube (l0 = summarise([4]), l1 = natural_join(), l2 = filter())
[   254.433][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[   263.834][cube-solver-1][DEBUG] Solving cube (l0 = summarise([4]), l1 = natural_join3(), l2 = filter())
[   263.876][cube-solver-1][DEBUG] Solving cube (l0 = summarise([4]), l1 = natural_join4(), l2 = filter())
[   263.896][cube-solver-1][DEBUG] Solving cube (l0 = summarise([4]), l1 = summarise([4]), l2 = filter())
[   263.919][cube-solver-1][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = natural_join())
[   597.658][cube-solver-1][DEBUG] Found solution with cube (l0 = summarise([4]), l1 = filter(), l2 = natural_join())
[   597.661][MainProcess][INFO] Statistics:
[   597.662][MainProcess][INFO] 	Generated cubes: 21
[   597.663][MainProcess][INFO] 	Attempted programs: 3282
[   597.663][MainProcess][INFO] 		Rejected: 1328
[   597.663][MainProcess][INFO] 		Failed: 1953
[   597.663][MainProcess][INFO] 	Blacklist clauses: 4
[   597.663][MainProcess][DEBUG] Printing statistics for good programs of size 2
[   597.693][MainProcess][DEBUG] 	0: Counter({'mutate': 38640, 'filter': 1440})
[   597.706][MainProcess][DEBUG] 	1: Counter({'filter': 38640, 'mutate': 1440})
[   597.706][MainProcess][DEBUG] Printing statistics for good programs of size 3
[   597.764][MainProcess][DEBUG] 	0: Counter({'summarise': 141476})
[   597.803][MainProcess][DEBUG] 	1: Counter({'natural_join': 89878, 'filter': 51601})
[   597.829][MainProcess][DEBUG] 	2: Counter({'filter': 89880, 'natural_join': 51601})
[   597.829][MainProcess][INFO] Solution found: natural_join(filter(@param0, event_id <= 17), summarise(@param0, event_id = max(event_id), prim_cid))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/005.csv", col_types = cols(g_event_id = col_integer(),prim_cid = col_integer(),event_id = col_integer(),event_time = col_character()))
input1$event_time <- dmy(input1$event_time)
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/005_o.csv", col_types = cols(g_event_id = col_integer(),prim_cid = col_integer(),event_id = col_integer(),event_time = col_character()))
expected_output$event_time <- dmy(expected_output$event_time)

df2 <- input1 %>% filter(event_id <= 17)
df3 <- input1 %>% group_by(prim_cid) %>% summarise(event_id = max(event_id)) %>% ungroup()
df4 <- inner_join(df2, df3)
out <- df4 %>% select(g_event_id, prim_cid, event_id, event_time) %>% arrange(g_event_id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT g_event_id,
       prim_cid,
       event_id,
       event_time
FROM
  (SELECT LHS.g_event_id AS g_event_id,
          LHS.prim_cid AS prim_cid,
          LHS.event_id AS event_id,
          LHS.event_time AS event_time
   FROM
     (SELECT *
      FROM input1
      WHERE (event_id <= 17.0)) AS LHS
   INNER JOIN
     (SELECT prim_cid,
             MAX(event_id) AS event_id
      FROM input1
      GROUP BY prim_cid) AS RHS ON (LHS.prim_cid = RHS.prim_cid
                                    AND LHS.event_id = RHS.event_id))
ORDER BY g_event_id
