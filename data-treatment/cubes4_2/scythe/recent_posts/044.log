[     1.631][MainProcess][INFO] Parsing specification...
[     1.635][MainProcess][DEBUG] Reading input files...
[     1.641][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/044_1.csv: ['int64', 'string']
[     1.646][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/044_2.csv: ['string', 'int64']
[     1.650][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/044_o.csv: ['int64', 'string']
[     1.677][MainProcess][DEBUG] Generating DSL...
[     1.690][MainProcess][INFO] Creating 2 processes
[     1.726][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.729][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     1.769][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(),)
[     1.771][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(),)
[     1.772][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(),)
[     1.773][cube-solver-1][DEBUG] Solving cube (l0 = anti_join(),)
[     1.951][cube-solver-0][DEBUG] Solving cube (l0 = left_join(),)
[     1.994][cube-solver-1][DEBUG] Solving cube (l0 = union(),)
[     2.090][cube-solver-0][DEBUG] Solving cube (l0 = intersect(),)
[     2.148][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(),)
[     2.202][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(),)
[     2.210][cube-solver-1][DEBUG] Solving cube (l0 = inner_join(),)
[     2.217][MainProcess][DEBUG] Increasing generator loc to 2
[     2.218][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.318][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]))
[     2.323][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join())
[     2.759][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     2.854][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = union())
[     3.083][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = intersect([6]))
[     3.527][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = semi_join())
[     3.570][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = cross_join([2]))
[     3.647][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = inner_join([23]))
[     4.129][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join())
[     4.739][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join3())
[     4.741][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join4())
[     4.743][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = anti_join([10]))
[     4.750][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = left_join())
[     4.752][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = union())
[     4.753][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = intersect([6]))
[     4.756][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = semi_join())
[     4.758][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = cross_join([2]))
[     4.760][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = inner_join([23]))
[     4.769][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join())
[     4.770][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join3())
[     4.771][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join4())
[     4.772][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = anti_join([10]))
[     4.776][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = left_join())
[     4.777][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = union())
[     4.779][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = intersect([6]))
[     4.782][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = semi_join())
[     4.783][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = cross_join([2]))
[     4.785][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = inner_join([23]))
[     4.794][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join())
[     4.795][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join3())
[     4.796][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join4())
[     4.797][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([10]), l1 = natural_join())
[     5.590][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([10]), l1 = natural_join3())
[     5.603][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([10]), l1 = natural_join4())
[     5.608][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([10]), l1 = anti_join([10]))
[     5.616][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([10]), l1 = left_join())
[     6.606][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([10]), l1 = union())
[     7.521][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([10]), l1 = intersect([6]))
[     8.328][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([10]), l1 = semi_join())
[     8.938][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([10]), l1 = cross_join([2]))
[     9.087][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([10]), l1 = inner_join([23]))
[    14.979][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join())
[    15.076][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join3())
[    15.833][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join4())
[    15.836][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = anti_join([10]))
[    16.789][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = left_join())
[    17.766][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = union())
[    18.015][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = intersect([6]))
[    18.656][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = semi_join())
[    18.732][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = cross_join([2]))
[    18.819][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = inner_join([23]))
[    19.307][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = natural_join())
[    20.151][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = natural_join3())
[    21.850][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = natural_join4())
[    21.854][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = anti_join([10]))
[    23.966][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = left_join())
[    24.967][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = union())
[    25.954][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = intersect([6]))
[    26.546][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = semi_join())
[    27.299][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = cross_join([2]))
[    27.406][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = inner_join([23]))
[    31.184][cube-solver-1][DEBUG] Solving cube (l0 = intersect([6]), l1 = natural_join())
[    31.448][cube-solver-1][DEBUG] Solving cube (l0 = intersect([8]), l1 = natural_join3())
[    32.960][cube-solver-1][DEBUG] Solving cube (l0 = intersect([8]), l1 = natural_join4())
[    32.964][cube-solver-1][DEBUG] Solving cube (l0 = intersect([8]), l1 = anti_join([10]))
[    33.663][cube-solver-1][DEBUG] Solving cube (l0 = intersect([8]), l1 = left_join())
[    33.835][cube-solver-1][DEBUG] Solving cube (l0 = intersect([8]), l1 = union())
[    34.249][cube-solver-1][DEBUG] Solving cube (l0 = intersect([8]), l1 = intersect([8]))
[    34.642][cube-solver-1][DEBUG] Solving cube (l0 = intersect([8]), l1 = semi_join())
[    34.774][cube-solver-1][DEBUG] Solving cube (l0 = intersect([8]), l1 = cross_join([2]))
[    34.858][cube-solver-1][DEBUG] Solving cube (l0 = intersect([8]), l1 = inner_join([23]))
[    36.397][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join())
[    37.066][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join3())
[    38.752][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join4())
[    38.753][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = anti_join([10]))
[    39.577][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = left_join())
[    40.067][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = union())
[    40.385][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = intersect([8]))
[    40.786][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = semi_join())
[    40.938][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = cross_join([2]))
[    41.033][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = inner_join([23]))
[    41.189][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([2]), l1 = natural_join())
[    41.211][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([4]), l1 = natural_join3())
[    41.214][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([4]), l1 = natural_join4())
[    41.217][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([4]), l1 = anti_join([10]))
[    41.222][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([4]), l1 = left_join())
[    41.225][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([4]), l1 = union())
[    41.228][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([4]), l1 = intersect([8]))
[    41.233][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([4]), l1 = semi_join())
[    41.236][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([4]), l1 = cross_join([4]))
[    41.240][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([4]), l1 = inner_join([23]))
[    41.250][cube-solver-1][DEBUG] Solving cube (l0 = inner_join([23]), l1 = natural_join())
[    45.245][cube-solver-0][DEBUG] Solving cube (l0 = inner_join([45]), l1 = natural_join3())
[    45.329][cube-solver-1][DEBUG] Solving cube (l0 = inner_join([46]), l1 = natural_join4())
[    45.345][cube-solver-1][DEBUG] Solving cube (l0 = inner_join([46]), l1 = anti_join([10]))
[    45.858][cube-solver-1][DEBUG] Found solution with cube (l0 = inner_join([46]), l1 = anti_join([10]))
[    45.859][MainProcess][INFO] Statistics:
[    45.860][MainProcess][INFO] 	Generated cubes: 104
[    45.860][MainProcess][INFO] 	Attempted programs: 2410
[    45.860][MainProcess][INFO] 		Rejected: 1024
[    45.860][MainProcess][INFO] 		Failed: 1385
[    45.860][MainProcess][INFO] 	Blacklist clauses: 68
[    45.860][MainProcess][DEBUG] Printing statistics for good programs of size 1
[    45.861][MainProcess][DEBUG] 	0: Counter({'inner_join': 68, 'natural_join': 24, 'left_join': 24, 'union': 24, 'anti_join': 16, 'semi_join': 8})
[    45.861][MainProcess][DEBUG] Printing statistics for good programs of size 2
[    45.870][MainProcess][DEBUG] 	0: Counter({'left_join': 3248, 'union': 3248, 'natural_join': 2376, 'semi_join': 1300, 'anti_join': 1176, 'inner_join': 838, 'intersect': 400})
[    45.877][MainProcess][DEBUG] 	1: Counter({'inner_join': 7324, 'natural_join': 1304, 'natural_join3': 1214, 'anti_join': 785, 'union': 784, 'left_join': 736, 'semi_join': 440})
[    45.877][MainProcess][INFO] Solution found: anti_join(@param0, inner_join(@param0, @param1, 'OriginalID' = 'OriginalID','Area' = 'Part'), 'Area', 'OriginalID')

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/044_1.csv", col_types = cols(OriginalID = col_integer(),Area = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/scythe/recent_posts/tables/044_2.csv", col_types = cols(Part = col_character(),OriginalID = col_integer()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/044_o.csv", col_types = cols(OriginalID = col_integer(),Area = col_character()))

df3 <- inner_join(input1, input2, by=c('OriginalID' = 'OriginalID','Area' = 'Part'), suffix = c('', '.other'))
df4 <- anti_join(input1, df3, by=c('Area', 'OriginalID'))
out <- df4 %>% select(OriginalID, Area) %>% arrange(OriginalID)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT OriginalID,
       Area
FROM
  (SELECT *
   FROM input1 AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT LHS.OriginalID AS OriginalID,
                  LHS.Area AS Area
           FROM input1 AS LHS
           INNER JOIN input2 AS RHS ON (LHS.OriginalID = RHS.OriginalID
                                        AND LHS.Area = RHS.Part)) AS RHS
        WHERE (LHS.Area = RHS.Area
               AND LHS.OriginalID = RHS.OriginalID) ))
ORDER BY OriginalID
