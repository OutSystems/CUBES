[     3.591][MainProcess][INFO] Parsing specification...
[     3.597][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.597][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.598][MainProcess][DEBUG] Reading input files...
[     3.607][MainProcess][WARNING] Using integers larger than 32 bits! Converting column isbn to string.
[     3.609][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/051_1.csv: ['object', 'string']
[     3.615][MainProcess][WARNING] Using integers larger than 32 bits! Converting column isbn to string.
[     3.616][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/051_2.csv: ['object', 'string']
[     3.622][MainProcess][WARNING] Using integers larger than 32 bits! Converting column isbn to string.
[     3.623][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/051_o.csv: ['object', 'string', 'string']
[     3.665][MainProcess][DEBUG] Generating DSL...
[     3.715][MainProcess][INFO] Creating 2 processes
[     3.796][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     3.799][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     4.224][cube-solver-1][WARNING] There is no solution for current loc (1).
[     4.225][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     4.225][MainProcess][DEBUG] Increasing generator loc to 2
[     4.226][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     4.253][cube-solver-0][WARNING] There is no solution for current loc (1).
[     4.254][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     4.257][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     5.178][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise())
[     5.224][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate())
[     6.386][cube-solver-1][DEBUG] Found solution with cube (l0 = natural_join(), l1 = summarise())
[     6.387][MainProcess][INFO] Statistics:
[     6.388][MainProcess][INFO] 	Generated cubes: 4
[     6.388][MainProcess][INFO] 	Attempted programs: 25
[     6.388][MainProcess][INFO] 		Rejected: 24
[     6.388][MainProcess][INFO] 		Failed: 0
[     6.388][MainProcess][INFO] 	Blacklist clauses: 0
[     6.389][MainProcess][DEBUG] Printing statistics for good programs of size 2
[     6.389][MainProcess][DEBUG] 	0: Counter({'natural_join': 333})
[     6.390][MainProcess][DEBUG] 	1: Counter({'mutate': 188, 'summarise': 145})
[     6.390][MainProcess][INFO] Solution found: summarise(natural_join(@param0, @param1), concatAuthor = string_agg(Author, ', '), isbn, title)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/051_1.csv", col_types = cols(isbn = col_character(),title = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/scythe/recent_posts/tables/051_2.csv", col_types = cols(isbn = col_character(),Author = col_character()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/051_o.csv", col_types = cols(isbn = col_character(),title = col_character(),author = col_character()))

string_agg <- function(v,s) {Reduce(function(x, y) paste(x, y, sep = s), v)}

df3 <- inner_join(input1, input2)
df4 <- df3 %>% group_by(isbn, title) %>% summarise(concatAuthor = string_agg(Author, ', ')) %>% ungroup()
out <- df4 %>% select(isbn, title, author = concatAuthor) %>% arrange(isbn)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `isbn`,
       `title`,
       `concatAuthor` AS `author`
FROM
  (SELECT `isbn`,
          `title`,
          string_agg(`Author`, ', ') AS concatAuthor
   FROM
     (SELECT LHS.isbn AS isbn,
             LHS.title AS title,
             RHS.Author AS Author
      FROM input1 AS LHS
      INNER JOIN input2 AS RHS ON (LHS.isbn = RHS.isbn))
   GROUP BY isbn,
            title)
ORDER BY isbn
