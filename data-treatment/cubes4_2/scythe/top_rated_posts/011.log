[     1.641][MainProcess][INFO] Parsing specification...
[     1.645][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.645][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.645][MainProcess][DEBUG] Reading input files...
[     1.653][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i011_1.csv: ['int64', 'string']
[     1.658][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i011_2.csv: ['int64', 'int64', 'string']
[     1.663][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o011.csv: ['int64', 'string', 'string']
[     1.692][MainProcess][DEBUG] Generating DSL...
[     1.730][MainProcess][INFO] Creating 2 processes
[     1.788][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.789][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     2.159][cube-solver-1][WARNING] There is no solution for current loc (1).
[     2.160][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     2.161][MainProcess][DEBUG] Increasing generator loc to 2
[     2.162][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     2.169][cube-solver-0][WARNING] There is no solution for current loc (1).
[     2.170][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     2.175][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.000][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise())
[     3.006][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate())
[     5.151][cube-solver-1][DEBUG] Found solution with cube (l0 = natural_join(), l1 = summarise())
[     5.153][MainProcess][INFO] Statistics:
[     5.153][MainProcess][INFO] 	Generated cubes: 4
[     5.153][MainProcess][INFO] 	Attempted programs: 36
[     5.153][MainProcess][INFO] 		Rejected: 35
[     5.154][MainProcess][INFO] 		Failed: 0
[     5.154][MainProcess][INFO] 	Blacklist clauses: 0
[     5.154][MainProcess][DEBUG] Printing statistics for good programs of size 2
[     5.155][MainProcess][DEBUG] 	0: Counter({'natural_join': 643})
[     5.155][MainProcess][DEBUG] 	1: Counter({'mutate': 350, 'summarise': 293})
[     5.155][MainProcess][INFO] Solution found: summarise(natural_join(@param0, @param1), concatCity = string_agg(City, ', '), Name, VehicleID)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i011_1.csv", col_types = cols(VehicleID = col_integer(),Name = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i011_2.csv", col_types = cols(LocationID = col_integer(),VehicleID = col_integer(),City = col_character()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o011.csv", col_types = cols(VehicleID = col_integer(),Name = col_character(),concatCity = col_character()))

string_agg <- function(v,s) {Reduce(function(x, y) paste(x, y, sep = s), v)}

df3 <- inner_join(input1, input2)
df4 <- df3 %>% group_by(Name, VehicleID) %>% summarise(concatCity = string_agg(City, ', ')) %>% ungroup()
out <- df4 %>% select(VehicleID, Name, concatCity) %>% arrange(VehicleID)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `VehicleID`,
       `Name`,
       `concatCity`
FROM
  (SELECT `Name`,
          `VehicleID`,
          string_agg(`City`, ', ') AS concatCity
   FROM
     (SELECT LHS.VehicleID AS VehicleID,
             LHS.Name AS Name,
             RHS.LocationID AS LocationID,
             RHS.City AS City
      FROM input1 AS LHS
      INNER JOIN input2 AS RHS ON (LHS.VehicleID = RHS.VehicleID))
   GROUP BY Name,
            VehicleID)
ORDER BY VehicleID
