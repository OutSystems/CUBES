[     3.148][MainProcess][INFO] Parsing specification...
[     3.153][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.153][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.154][MainProcess][DEBUG] Reading input files...
[     3.163][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i001.csv: ['int64', 'string']
[     3.168][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o001.csv: ['int64', 'string']
[     3.199][MainProcess][DEBUG] Generating DSL...
[     3.236][MainProcess][INFO] Creating 2 processes
[     3.301][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     3.302][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     3.623][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     3.629][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     3.778][cube-solver-0][DEBUG] Found solution with cube (l0 = summarise(),)
[     3.780][MainProcess][INFO] Statistics:
[     3.780][MainProcess][INFO] 	Generated cubes: 2
[     3.780][MainProcess][INFO] 	Attempted programs: 3
[     3.781][MainProcess][INFO] 		Rejected: 2
[     3.781][MainProcess][INFO] 		Failed: 0
[     3.781][MainProcess][INFO] 	Blacklist clauses: 0
[     3.781][MainProcess][DEBUG] Printing statistics for good programs of size 1
[     3.781][MainProcess][DEBUG] 	0: Counter({'mutate': 17, 'summarise': 9})
[     3.782][MainProcess][INFO] Solution found: summarise(@param0, concatStudentName = string_agg(StudentName, ', '), SubjectID)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i001.csv", col_types = cols(SubjectID = col_integer(),StudentName = col_character()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o001.csv", col_types = cols(SubjectID = col_integer(),concatStudentName = col_character()))

string_agg <- function(v,s) {Reduce(function(x, y) paste(x, y, sep = s), v)}

df2 <- input1 %>% group_by(SubjectID) %>% summarise(concatStudentName = string_agg(StudentName, ', ')) %>% ungroup()
out <- df2 %>% select(SubjectID, concatStudentName) %>% arrange(SubjectID)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `SubjectID`,
       `concatStudentName`
FROM
  (SELECT `SubjectID`,
          string_agg(`StudentName`, ', ') AS concatStudentName
   FROM input1
   GROUP BY SubjectID)
ORDER BY SubjectID
