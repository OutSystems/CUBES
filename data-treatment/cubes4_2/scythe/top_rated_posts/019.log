[     3.081][MainProcess][INFO] Parsing specification...
[     3.086][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.087][MainProcess][DEBUG] Reading input files...
[     3.094][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i019.csv: ['int64', 'int64']
[     3.099][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o019.csv: ['int64', 'int64', 'int64']
[     3.129][MainProcess][DEBUG] Generating DSL...
[     3.155][MainProcess][INFO] Creating 2 processes
[     3.205][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     3.205][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     3.344][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     3.374][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     3.444][MainProcess][DEBUG] Increasing generator loc to 2
[     3.445][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.530][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.709][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise())
[     3.711][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise())
[     3.712][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate())
[     3.713][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise())
[     3.714][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate())
[     3.715][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join())
[     3.866][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate())
[     3.871][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3())
[     3.875][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4())
[     3.878][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = summarise())
[     3.879][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join())
[     4.067][cube-solver-1][DEBUG] Found solution with cube (l0 = summarise(), l1 = natural_join())
[     4.070][MainProcess][INFO] Statistics:
[     4.070][MainProcess][INFO] 	Generated cubes: 13
[     4.070][MainProcess][INFO] 	Attempted programs: 9
[     4.071][MainProcess][INFO] 		Rejected: 8
[     4.071][MainProcess][INFO] 		Failed: 0
[     4.071][MainProcess][INFO] 	Blacklist clauses: 0
[     4.071][MainProcess][DEBUG] Printing statistics for good programs of size 1
[     4.072][MainProcess][DEBUG] 	0: Counter({'mutate': 12, 'summarise': 12})
[     4.072][MainProcess][DEBUG] Printing statistics for good programs of size 2
[     4.072][MainProcess][DEBUG] 	0: Counter({'summarise': 50})
[     4.072][MainProcess][DEBUG] 	1: Counter({'natural_join': 49, 'anti_join': 1})
[     4.073][MainProcess][INFO] Solution found: natural_join(@param0, summarise(@param0, n = n(), age))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i019.csv", col_types = cols(id = col_integer(),age = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o019.csv", col_types = cols(id = col_integer(),age = col_integer(),n = col_integer()))

df2 <- input1 %>% group_by(age) %>% summarise(n = n()) %>% ungroup()
df3 <- inner_join(input1, df2)
out <- df3 %>% select(id, age, n) %>% arrange(id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT id,
       age,
       n
FROM
  (SELECT LHS.id AS id,
          LHS.age AS age,
          RHS.n AS n
   FROM input1 AS LHS
   INNER JOIN
     (SELECT age,
             COUNT() AS n
      FROM input1
      GROUP BY age) AS RHS ON (LHS.age = RHS.age))
ORDER BY id
