[     1.576][MainProcess][INFO] Parsing specification...
[     1.579][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.579][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.580][MainProcess][DEBUG] Reading input files...
[     1.589][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i021.csv: ['int64', 'int64', 'string', 'datetime64[ns]']
[     1.596][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o021.csv: ['int64', 'string', 'datetime64[ns]']
[     1.630][MainProcess][DEBUG] Generating DSL...
[     1.803][MainProcess][INFO] Creating 2 processes
[     1.978][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     2.002][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     4.437][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     4.452][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     4.922][cube-solver-0][DEBUG] Found solution with cube (l0 = summarise(),)
[     4.924][MainProcess][INFO] Statistics:
[     4.924][MainProcess][INFO] 	Generated cubes: 2
[     4.924][MainProcess][INFO] 	Attempted programs: 8
[     4.924][MainProcess][INFO] 		Rejected: 7
[     4.925][MainProcess][INFO] 		Failed: 0
[     4.925][MainProcess][INFO] 	Blacklist clauses: 0
[     4.925][MainProcess][DEBUG] Printing statistics for good programs of size 1
[     4.925][MainProcess][DEBUG] 	0: Counter({'mutate': 75, 'summarise': 61})
[     4.926][MainProcess][INFO] Solution found: summarise(@param0, maxSERVICEMONTH = max(SERVICEMONTH), CHARGEID, CHARGETYPE)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i021.csv", col_types = cols(ID = col_integer(),CHARGEID = col_integer(),CHARGETYPE = col_character(),SERVICEMONTH = col_character()))
input1$SERVICEMONTH <- mdy(input1$SERVICEMONTH)
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o021.csv", col_types = cols(CHARGEID = col_integer(),CHARGETYPE = col_character(),maxSERVICEMONTH = col_character()))
expected_output$maxSERVICEMONTH <- mdy(expected_output$maxSERVICEMONTH)

df2 <- input1 %>% group_by(CHARGEID, CHARGETYPE) %>% summarise(maxSERVICEMONTH = max(SERVICEMONTH)) %>% ungroup()
out <- df2 %>% select(CHARGEID, CHARGETYPE, maxSERVICEMONTH) %>% arrange(CHARGEID)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT CHARGEID,
       CHARGETYPE,
       maxSERVICEMONTH
FROM
  (SELECT CHARGEID,
          CHARGETYPE,
          MAX(SERVICEMONTH) AS maxSERVICEMONTH
   FROM input1
   GROUP BY CHARGEID,
            CHARGETYPE)
ORDER BY CHARGEID
