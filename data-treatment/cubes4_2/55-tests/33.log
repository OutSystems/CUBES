[     1.588][MainProcess][INFO] Parsing specification...
[     1.591][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.591][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.591][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.592][MainProcess][DEBUG] Reading input files...
[     1.598][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-1.txt: ['string', 'string']
[     1.603][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-2.txt: ['string', 'string']
[     1.608][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-3.txt: ['string', 'string']
[     1.611][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/33.out: ['string']
[     1.640][MainProcess][DEBUG] Generating DSL...
[     1.667][MainProcess][INFO] Creating 2 processes
[     1.719][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.721][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     2.217][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.218][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.219][cube-solver-0][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.220][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.221][MainProcess][DEBUG] Increasing generator loc to 3
[     2.222][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.225][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.226][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.229][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     3.194][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     3.207][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     3.209][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     3.211][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     3.230][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     3.235][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     3.237][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     3.239][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     5.374][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     5.379][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     5.381][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     5.384][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     5.387][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     5.390][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3([2]), l2 = filter())
[    11.840][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = natural_join4(), l2 = filter())
[    11.861][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = summarise([21]), l2 = filter())
[    11.890][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter(), l2 = natural_join())
[    11.904][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter(), l2 = natural_join3([2]))
[    23.759][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = natural_join4())
[    24.321][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = summarise([21]))
[    24.360][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = filter([24]))
[    24.388][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = anti_join())
[    24.419][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = left_join())
[    24.438][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = union())
[    24.460][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = intersect())
[    24.481][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = semi_join())
[    24.500][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = cross_join())
[    24.520][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = mutate())
[    24.539][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = inner_join())
[    24.559][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = anti_join(), l2 = filter([24]))
[    24.584][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = left_join(), l2 = filter([24]))
[    24.606][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = union(), l2 = filter([24]))
[    24.629][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = intersect(), l2 = filter([24]))
[    24.655][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = semi_join(), l2 = filter([24]))
[    24.676][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = cross_join(), l2 = filter([24]))
[    24.701][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = mutate(), l2 = filter([24]))
[    24.724][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = inner_join(), l2 = filter([24]))
[    24.748][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = natural_join(), l2 = summarise([21]))
[    24.769][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = natural_join(), l2 = mutate())
[    24.783][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = natural_join3([2]), l2 = summarise([21]))
[    24.808][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = natural_join3([2]), l2 = mutate())
[    24.820][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = natural_join4(), l2 = summarise([21]))
[    24.840][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = natural_join4(), l2 = mutate())
[    24.852][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = natural_join())
[    24.873][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = natural_join3([2]))
[    24.897][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = natural_join4())
[    24.916][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = summarise([21]))
[    24.944][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = filter([24]))
[    24.975][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = anti_join())
[    24.998][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = left_join())
[    25.018][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = union())
[    25.037][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = intersect())
[    25.058][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = semi_join())
[    25.078][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = cross_join())
[    25.097][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = mutate())
[    25.117][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = inner_join())
[    25.138][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = filter([24]), l2 = summarise([21]))
[    25.174][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = filter([24]), l2 = mutate())
[    25.192][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = anti_join(), l2 = summarise([21]))
[    25.217][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = anti_join(), l2 = mutate())
[    25.229][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = left_join(), l2 = summarise([21]))
[    25.252][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = left_join(), l2 = mutate())
[    25.263][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = union(), l2 = summarise([21]))
[    25.286][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = union(), l2 = mutate())
[    25.301][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = intersect(), l2 = summarise([21]))
[    25.325][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = intersect(), l2 = mutate())
[    25.340][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = semi_join(), l2 = summarise([21]))
[    25.364][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = semi_join(), l2 = mutate())
[    25.379][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = cross_join(), l2 = summarise([21]))
[    25.402][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = cross_join(), l2 = mutate())
[    25.416][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = natural_join())
[    25.427][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = natural_join3([2]))
[    25.438][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = natural_join4())
[    25.448][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = summarise([21]))
[    25.468][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = filter([24]))
[    25.486][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = anti_join())
[    25.497][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = left_join())
[    25.507][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = union())
[    25.517][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = intersect())
[    25.528][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = semi_join())
[    25.538][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = cross_join())
[    25.548][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = mutate())
[    25.558][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = inner_join())
[    25.570][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = inner_join(), l2 = summarise([21]))
[    25.594][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = inner_join(), l2 = mutate())
[    25.606][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([21]), l2 = filter([24]))
[    25.627][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([24]), l2 = summarise([21]))
[    25.650][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([24]), l2 = mutate())
[    25.661][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([24]))
[    25.676][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([21]), l2 = filter([24]))
[    25.698][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = filter([24]), l2 = summarise([21]))
[    25.722][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = filter([24]), l2 = mutate())
[    25.733][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([24]))
[    25.749][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = summarise([21]), l2 = filter([24]))
[    25.771][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = filter([24]), l2 = summarise([21]))
[    25.793][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = filter([24]), l2 = mutate())
[    25.804][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([24]))
[    25.820][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([21]), l2 = filter([24]))
[    25.842][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = filter([24]), l2 = summarise([21]))
[    25.868][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = filter([24]), l2 = mutate())
[    25.879][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([24]))
[    25.893][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([21]), l2 = filter([24]))
[    25.915][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([24]), l2 = summarise([21]))
[    25.938][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([24]), l2 = mutate())
[    25.949][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([24]))
[    25.965][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([21]), l2 = filter([24]))
[    25.987][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([24]), l2 = summarise([21]))
[    26.011][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([24]), l2 = mutate())
[    26.021][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([24]))
[    26.037][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([24]))
[    26.051][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([2]), l2 = filter([24]))
[    32.193][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([24]))
[    48.311][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([21]), l2 = filter([24]))
[    48.325][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = natural_join())
[    48.334][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = natural_join3([2]))
[    51.136][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = natural_join4())
[    56.936][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = summarise([21]))
[    56.950][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = filter([24]))
[    56.963][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = anti_join())
[    56.971][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = left_join())
[    56.978][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = union())
[    56.985][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = intersect())
[    56.993][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = semi_join())
[    57.000][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = cross_join())
[    57.008][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = mutate())
[    57.015][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = inner_join())
[    57.023][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([24]))
[    57.032][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([24]))
[    57.040][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([24]))
[    57.048][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([24]))
[    57.056][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([24]))
[    57.064][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([24]))
[    57.074][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([24]))
[    57.089][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([24]))
[    57.103][cube-solver-0][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([21]), l2 = filter([24]))
[    57.121][cube-solver-0][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([24]), l2 = summarise([21]))
[    57.137][cube-solver-0][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([24]), l2 = mutate())
[    57.147][cube-solver-0][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([24]))
[    57.154][MainProcess][DEBUG] Increasing generator loc to 4
[    57.155][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[    58.473][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([24]))
[    72.985][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[    74.328][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([24]))
[    75.879][cube-solver-1][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([24]))
[    75.881][MainProcess][INFO] Statistics:
[    75.881][MainProcess][INFO] 	Generated cubes: 144
[    75.881][MainProcess][INFO] 	Attempted programs: 7099
[    75.881][MainProcess][INFO] 		Rejected: 1238
[    75.881][MainProcess][INFO] 		Failed: 5860
[    75.881][MainProcess][INFO] 	Blacklist clauses: 49
[    75.882][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    75.891][MainProcess][DEBUG] 	0: Counter({'mutate': 7360, 'summarise': 3296, 'natural_join3': 1024})
[    75.896][MainProcess][DEBUG] 	1: Counter({'filter': 4640, 'natural_join4': 3840, 'natural_join3': 2176, 'summarise': 704, 'mutate': 320})
[    75.899][MainProcess][DEBUG] 	2: Counter({'filter': 7040, 'natural_join4': 4000, 'natural_join3': 640})
[    75.900][MainProcess][DEBUG] Printing statistics for good programs of size 4
[    75.900][MainProcess][DEBUG] 	0: Counter({'natural_join': 1367})
[    75.900][MainProcess][DEBUG] 	1: Counter({'summarise': 1367})
[    75.901][MainProcess][DEBUG] 	2: Counter({'natural_join': 1304, 'natural_join3': 63})
[    75.901][MainProcess][DEBUG] 	3: Counter({'filter': 1367})
[    75.901][MainProcess][INFO] Solution found: filter(natural_join3(@param2, @param0, summarise(natural_join(@param1, @param0), n = n(), P_id, color)), color == 'green' & n == max(n))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/33.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input2, input1)
df5 <- df4 %>% group_by(P_id, color) %>% summarise(n = n()) %>% ungroup()
df6 <- inner_join(input3, input1) %>% inner_join(df5)
df7 <- df6 %>% filter(color == 'green' & n == max(n))
out <- df7 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `S_key`,
          `S_name`,
          `P_id`,
          `color`,
          `n`
   FROM
     (SELECT `S_key`,
             `S_name`,
             `P_id`,
             `color`,
             `n`,
             MAX(`n`) OVER () AS `zzz4`
      FROM
        (SELECT `LHS`.`S_key` AS `S_key`,
                `LHS`.`S_name` AS `S_name`,
                `LHS`.`P_id` AS `P_id`,
                `RHS`.`color` AS `color`,
                `RHS`.`n` AS `n`
         FROM
           (SELECT `LHS`.`S_key` AS `S_key`,
                   `LHS`.`S_name` AS `S_name`,
                   `RHS`.`P_id` AS `P_id`
            FROM `input3` AS `LHS`
            INNER JOIN `input1` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`)) AS `LHS`
         INNER JOIN
           (SELECT `P_id`,
                   `color`,
                   COUNT() AS `n`
            FROM
              (SELECT `LHS`.`P_id` AS `P_id`,
                      `LHS`.`color` AS `color`,
                      `RHS`.`S_key` AS `S_key`
               FROM `input2` AS `LHS`
               INNER JOIN `input1` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
            GROUP BY `P_id`,
                     `color`) AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)))
   WHERE (`color` = 'green'
          AND n = zzz4))
ORDER BY S_name
