[     1.955][MainProcess][INFO] Parsing specification...
[     1.960][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.960][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.960][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.961][MainProcess][DEBUG] Reading input files...
[     1.968][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-1.txt: ['string', 'string']
[     1.972][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-2.txt: ['string', 'string']
[     1.975][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-3.txt: ['string', 'string']
[     1.980][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16.out: ['string']
[     2.009][MainProcess][DEBUG] Generating DSL...
[     2.037][MainProcess][INFO] Creating 2 processes
[     2.090][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     2.096][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.556][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.557][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.558][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.560][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.561][MainProcess][DEBUG] Increasing generator loc to 3
[     2.562][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.582][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.583][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.588][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     3.424][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     3.429][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     3.432][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     3.435][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     3.507][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     3.511][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     5.727][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter(), l2 = mutate())
[     6.296][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = mutate(), l2 = filter())
[     6.827][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     6.833][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     6.838][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     6.843][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     6.845][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     6.847][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3([2]), l2 = filter())
[     7.010][cube-solver-0][DEBUG] Solving cube (l0 = summarise([4]), l1 = natural_join4(), l2 = filter())
[     7.016][cube-solver-0][DEBUG] Solving cube (l0 = summarise([4]), l1 = summarise([4]), l2 = filter())
[     7.022][cube-solver-0][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = natural_join())
[     7.026][cube-solver-0][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = natural_join3([2]))
[    11.386][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = natural_join4())
[    16.301][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = summarise([21]))
[    16.323][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = filter([4]))
[    16.334][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = anti_join())
[    16.344][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = left_join())
[    16.353][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = union())
[    16.363][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = intersect())
[    16.372][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = semi_join())
[    16.382][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = cross_join())
[    16.391][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = mutate())
[    16.401][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = inner_join())
[    16.411][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = anti_join(), l2 = filter([4]))
[    16.421][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = left_join(), l2 = filter([4]))
[    16.431][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = union(), l2 = filter([4]))
[    16.440][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = intersect(), l2 = filter([4]))
[    16.450][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = semi_join(), l2 = filter([4]))
[    16.460][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = cross_join(), l2 = filter([4]))
[    16.470][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = mutate(), l2 = filter([4]))
[    16.480][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = inner_join(), l2 = filter([4]))
[    16.490][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join(), l2 = summarise([21]))
[    16.499][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join(), l2 = mutate())
[    16.503][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = summarise([21]))
[    17.514][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = mutate())
[    18.090][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = summarise([21]))
[    19.869][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = mutate())
[    21.790][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = natural_join())
[    21.800][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = natural_join3([2]))
[    25.575][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = natural_join4())
[    25.585][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = summarise([21]))
[    25.600][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = filter([4]))
[    25.611][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = anti_join())
[    25.621][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = left_join())
[    25.631][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = union())
[    25.640][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = intersect())
[    25.650][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = semi_join())
[    25.660][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = cross_join())
[    25.670][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = mutate())
[    25.679][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = inner_join())
[    25.689][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = summarise([21]))
[    25.699][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = mutate())
[    25.704][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = summarise([21]))
[    25.713][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = mutate())
[    25.716][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = summarise([21]))
[    25.726][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = mutate())
[    25.729][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = summarise([21]))
[    25.738][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = mutate())
[    25.742][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = summarise([21]))
[    25.751][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = mutate())
[    25.755][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = summarise([21]))
[    25.764][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = mutate())
[    25.767][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = summarise([21]))
[    25.777][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = mutate())
[    25.780][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join())
[    25.783][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join3([2]))
[    27.323][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join4())
[    30.377][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = summarise([21]))
[    30.387][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = filter([4]))
[    30.390][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = anti_join())
[    30.394][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = left_join())
[    30.397][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = union())
[    30.400][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = intersect())
[    30.403][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = semi_join())
[    30.405][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = cross_join())
[    30.409][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = mutate())
[    30.411][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = inner_join())
[    30.416][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = summarise([21]))
[    30.455][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = mutate())
[    30.462][cube-solver-1][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([21]), l2 = filter([4]))
[    30.477][cube-solver-1][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = summarise([21]))
[    30.490][cube-solver-1][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = mutate())
[    30.495][cube-solver-1][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([4]))
[    30.500][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([21]), l2 = filter([4]))
[    30.514][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = summarise([21]))
[    30.528][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = mutate())
[    30.533][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([4]))
[    30.538][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = summarise([21]), l2 = filter([4]))
[    30.552][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = summarise([21]))
[    30.565][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = mutate())
[    30.569][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([4]))
[    30.574][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([21]), l2 = filter([4]))
[    30.588][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = summarise([21]))
[    30.598][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = mutate())
[    30.601][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([4]))
[    30.605][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([21]), l2 = filter([4]))
[    30.615][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = summarise([21]))
[    30.625][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = mutate())
[    30.629][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([4]))
[    30.634][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([21]), l2 = filter([4]))
[    30.649][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = summarise([21]))
[    30.665][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = mutate())
[    30.670][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([4]))
[    30.674][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([4]))
[    30.678][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([2]), l2 = filter([4]))
[    32.229][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([4]))
[    38.477][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([21]), l2 = filter([4]))
[    38.487][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join())
[    38.491][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join3([2]))
[    40.194][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join4())
[    41.355][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = summarise([21]))
[    41.365][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = filter([4]))
[    41.369][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = anti_join())
[    41.372][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = left_join())
[    41.375][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = union())
[    41.378][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = intersect())
[    41.381][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = semi_join())
[    41.384][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = cross_join())
[    41.387][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = mutate())
[    41.390][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = inner_join())
[    41.393][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([4]))
[    41.396][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([4]))
[    41.399][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([4]))
[    41.402][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([4]))
[    41.405][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([4]))
[    41.408][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([4]))
[    41.411][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([4]))
[    41.414][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([4]))
[    41.418][cube-solver-0][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([21]), l2 = filter([4]))
[    41.428][cube-solver-0][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = summarise([21]))
[    41.437][cube-solver-0][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = mutate())
[    41.441][cube-solver-0][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([4]))
[    41.443][MainProcess][DEBUG] Increasing generator loc to 4
[    41.444][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[    42.692][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([4]))
[    48.938][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([4]))
[    55.546][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[    56.769][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([4]))
[    56.805][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([4]))
[    56.836][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join([2]))
[    63.420][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join3([2]))
[    71.497][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join4())
[   104.180][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = summarise([21]))
[   104.198][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = filter([4]))
[   104.210][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[   104.801][cube-solver-0][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[   104.802][MainProcess][INFO] Statistics:
[   104.803][MainProcess][INFO] 	Generated cubes: 152
[   104.803][MainProcess][INFO] 	Attempted programs: 7551
[   104.804][MainProcess][INFO] 		Rejected: 1744
[   104.804][MainProcess][INFO] 		Failed: 5806
[   104.804][MainProcess][INFO] 	Blacklist clauses: 29
[   104.804][MainProcess][DEBUG] Printing statistics for good programs of size 3
[   104.814][MainProcess][DEBUG] 	0: Counter({'filter': 4920, 'mutate': 3520, 'summarise': 1048, 'natural_join3': 752})
[   104.817][MainProcess][DEBUG] 	1: Counter({'filter': 3560, 'natural_join4': 2696, 'mutate': 2400, 'natural_join3': 1040, 'summarise': 544})
[   104.820][MainProcess][DEBUG] 	2: Counter({'natural_join4': 4600, 'summarise': 2288, 'filter': 1760, 'natural_join3': 1152, 'mutate': 440})
[   104.820][MainProcess][DEBUG] Printing statistics for good programs of size 4
[   104.822][MainProcess][DEBUG] 	0: Counter({'natural_join': 7977})
[   104.825][MainProcess][DEBUG] 	1: Counter({'summarise': 7977})
[   104.827][MainProcess][DEBUG] 	2: Counter({'filter': 5561, 'natural_join3': 1952, 'natural_join': 464})
[   104.829][MainProcess][DEBUG] 	3: Counter({'natural_join3': 3414, 'filter': 2416, 'natural_join4': 1680, 'natural_join': 464, 'anti_join': 3})
[   104.829][MainProcess][INFO] Solution found: anti_join(@param1, filter(summarise(natural_join(@param2, @param0), n = n(), P_id, S_name), S_name != 'AWS'), 'P_id')

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/16-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/16-2.txt", col_types = cols(P_id = col_character(),P_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/16-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/16.out", col_types = cols(P_name = col_character()))

df4 <- inner_join(input3, input1)
df5 <- df4 %>% group_by(P_id, S_name) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(S_name != 'AWS')
df7 <- anti_join(input2, df6, by=c('P_id'))
out <- df7 %>% select(P_name) %>% arrange(P_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `P_name`
FROM
  (SELECT *
   FROM `input2` AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM
             (SELECT `P_id`,
                     `S_name`,
                     COUNT() AS `n`
              FROM
                (SELECT `LHS`.`S_key` AS `S_key`,
                        `LHS`.`S_name` AS `S_name`,
                        `RHS`.`P_id` AS `P_id`
                 FROM `input3` AS `LHS`
                 INNER JOIN `input1` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
              GROUP BY `P_id`,
                       `S_name`)
           WHERE (`S_name` != 'AWS')) AS RHS
        WHERE (LHS.P_id = RHS.P_id) ))
ORDER BY P_name
