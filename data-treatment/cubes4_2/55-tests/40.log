[     1.617][MainProcess][INFO] Parsing specification...
[     1.620][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.620][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.621][MainProcess][DEBUG] Reading input files...
[     1.627][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/aircraft.txt: ['int64', 'string', 'int64']
[     1.630][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/certified.txt: ['int64', 'int64']
[     1.634][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/40.out: ['int64', 'string']
[     1.662][MainProcess][DEBUG] Generating DSL...
[     1.693][MainProcess][INFO] Creating 2 processes
[     1.745][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.747][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     2.256][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.257][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.258][cube-solver-0][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.260][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.260][MainProcess][DEBUG] Increasing generator loc to 3
[     2.261][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.279][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.280][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.285][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     3.283][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     3.290][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     3.294][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     3.296][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     5.656][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     5.658][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     5.660][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     5.662][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     5.664][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     5.666][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     5.667][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     5.669][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     5.671][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     9.199][cube-solver-0][DEBUG] Solving cube (l0 = summarise([6]), l1 = natural_join3(), l2 = filter())
[    14.029][cube-solver-1][DEBUG] Solving cube (l0 = summarise([11]), l1 = natural_join4(), l2 = filter())
[    14.037][cube-solver-1][DEBUG] Solving cube (l0 = summarise([11]), l1 = summarise([11]), l2 = filter())
[    14.049][cube-solver-1][DEBUG] Solving cube (l0 = summarise([11]), l1 = filter(), l2 = natural_join())
[    15.776][cube-solver-0][DEBUG] Found solution with cube (l0 = summarise([6]), l1 = natural_join3(), l2 = filter())
[    15.777][MainProcess][INFO] Statistics:
[    15.778][MainProcess][INFO] 	Generated cubes: 21
[    15.778][MainProcess][INFO] 	Attempted programs: 372
[    15.778][MainProcess][INFO] 		Rejected: 188
[    15.778][MainProcess][INFO] 		Failed: 183
[    15.778][MainProcess][INFO] 	Blacklist clauses: 11
[    15.778][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    15.780][MainProcess][DEBUG] 	0: Counter({'summarise': 2668, 'natural_join': 1280})
[    15.782][MainProcess][DEBUG] 	1: Counter({'natural_join': 1240, 'natural_join3': 1123, 'summarise': 880, 'mutate': 400, 'filter': 305})
[    15.783][MainProcess][DEBUG] 	2: Counter({'filter': 3643, 'natural_join': 305})
[    15.784][MainProcess][INFO] Solution found: filter(natural_join3(@param1, @param0, summarise(@param1, n = n(), eid)), n < 3)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/aircraft.txt", col_types = cols(aid = col_integer(),aname = col_character(),crusingrange = col_integer()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/certified.txt", col_types = cols(eid = col_integer(),aid = col_integer()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/55-tests/tables/40.out", col_types = cols(eid = col_integer(),aname = col_character()))

df3 <- input2 %>% group_by(eid) %>% summarise(n = n()) %>% ungroup()
df4 <- inner_join(input2, input1) %>% inner_join(df3)
df5 <- df4 %>% filter(n < 3)
out <- df5 %>% select(eid, aname) %>% arrange(eid)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT eid,
       aname
FROM
  (SELECT LHS.eid AS eid,
          LHS.aid AS aid,
          LHS.aname AS aname,
          LHS.crusingrange AS crusingrange,
          RHS.n AS n
   FROM
     (SELECT LHS.eid AS eid,
             LHS.aid AS aid,
             RHS.aname AS aname,
             RHS.crusingrange AS crusingrange
      FROM input2 AS LHS
      INNER JOIN input1 AS RHS ON (LHS.aid = RHS.aid)) AS LHS
   INNER JOIN
     (SELECT eid,
             COUNT() AS n
      FROM input2
      GROUP BY eid) AS RHS ON (LHS.eid = RHS.eid))
WHERE (n < 3.0)
ORDER BY eid
