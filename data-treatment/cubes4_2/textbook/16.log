[     3.546][MainProcess][INFO] Parsing specification...
[     3.550][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.550][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.550][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     3.551][MainProcess][DEBUG] Reading input files...
[     3.558][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16-1.txt: ['string', 'string']
[     3.563][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16-2.txt: ['string', 'string']
[     3.568][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16-3.txt: ['string', 'string']
[     3.572][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16.out: ['string']
[     3.606][MainProcess][DEBUG] Generating DSL...
[     3.637][MainProcess][INFO] Creating 2 processes
[     3.697][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.700][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     4.186][cube-solver-0][WARNING] There is no solution for current loc (2).
[     4.187][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     4.189][cube-solver-0][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     4.191][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     4.192][MainProcess][DEBUG] Increasing generator loc to 3
[     4.193][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     4.242][cube-solver-1][WARNING] There is no solution for current loc (2).
[     4.243][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     4.248][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     5.057][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     5.066][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     5.072][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     5.074][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     5.166][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     5.170][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     7.485][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter(), l2 = mutate())
[     8.074][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = mutate(), l2 = filter())
[     8.554][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     8.561][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     8.567][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     8.572][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     8.575][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     8.579][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3([2]), l2 = filter())
[     8.769][cube-solver-1][DEBUG] Solving cube (l0 = summarise([4]), l1 = natural_join4(), l2 = filter())
[     8.774][cube-solver-1][DEBUG] Solving cube (l0 = summarise([4]), l1 = summarise([4]), l2 = filter())
[     8.781][cube-solver-1][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = natural_join())
[     8.786][cube-solver-1][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = natural_join3([2]))
[    13.240][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = natural_join4())
[    18.211][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = summarise([21]))
[    18.233][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = filter([4]))
[    18.244][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = anti_join())
[    18.254][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = left_join())
[    18.264][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = union())
[    18.273][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = intersect())
[    18.283][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = semi_join())
[    18.293][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = cross_join())
[    18.302][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = mutate())
[    18.312][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = inner_join())
[    18.322][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = anti_join(), l2 = filter([4]))
[    18.331][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = left_join(), l2 = filter([4]))
[    18.341][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = union(), l2 = filter([4]))
[    18.351][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = intersect(), l2 = filter([4]))
[    18.360][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = semi_join(), l2 = filter([4]))
[    18.370][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = cross_join(), l2 = filter([4]))
[    18.380][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = mutate(), l2 = filter([4]))
[    18.390][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = inner_join(), l2 = filter([4]))
[    18.400][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join(), l2 = summarise([21]))
[    18.409][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join(), l2 = mutate())
[    18.413][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = summarise([21]))
[    19.417][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = mutate())
[    20.002][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = summarise([21]))
[    21.837][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = mutate())
[    23.812][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = natural_join())
[    23.822][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = natural_join3([2]))
[    27.647][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = natural_join4())
[    27.657][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = summarise([21]))
[    27.673][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = filter([4]))
[    27.683][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = anti_join())
[    27.693][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = left_join())
[    27.703][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = union())
[    27.712][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = intersect())
[    27.722][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = semi_join())
[    27.732][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = cross_join())
[    27.741][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = mutate())
[    27.751][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = inner_join())
[    27.761][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = summarise([21]))
[    27.771][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = mutate())
[    27.775][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = summarise([21]))
[    27.784][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = mutate())
[    27.788][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = summarise([21]))
[    27.797][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = mutate())
[    27.801][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = summarise([21]))
[    27.810][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = mutate())
[    27.813][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = summarise([21]))
[    27.823][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = mutate())
[    27.826][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = summarise([21]))
[    27.835][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = mutate())
[    27.838][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = summarise([21]))
[    27.848][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = mutate())
[    27.851][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join())
[    27.854][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join3([2]))
[    29.455][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join4())
[    32.542][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = summarise([21]))
[    32.552][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = filter([4]))
[    32.556][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = anti_join())
[    32.559][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = left_join())
[    32.562][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = union())
[    32.564][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = intersect())
[    32.567][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = semi_join())
[    32.570][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = cross_join())
[    32.573][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = mutate())
[    32.576][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = inner_join())
[    32.580][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = summarise([21]))
[    32.602][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = mutate())
[    32.607][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([21]), l2 = filter([4]))
[    32.622][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = summarise([21]))
[    32.632][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = mutate())
[    32.635][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([4]))
[    32.641][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([21]), l2 = filter([4]))
[    32.658][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = summarise([21]))
[    32.671][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = mutate())
[    32.676][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([4]))
[    32.681][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = summarise([21]), l2 = filter([4]))
[    32.694][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = summarise([21]))
[    32.709][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = mutate())
[    32.713][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([4]))
[    32.718][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([21]), l2 = filter([4]))
[    32.732][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = summarise([21]))
[    32.745][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = mutate())
[    32.749][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([4]))
[    32.754][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([21]), l2 = filter([4]))
[    32.771][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = summarise([21]))
[    32.788][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = mutate())
[    32.792][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([4]))
[    32.798][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([21]), l2 = filter([4]))
[    32.815][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = summarise([21]))
[    32.828][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = mutate())
[    32.832][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([4]))
[    32.836][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([4]))
[    32.842][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([2]), l2 = filter([4]))
[    34.392][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([4]))
[    40.695][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([21]), l2 = filter([4]))
[    40.705][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join())
[    40.708][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join3([2]))
[    42.430][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join4())
[    43.837][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = summarise([21]))
[    43.847][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = filter([4]))
[    43.851][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = anti_join())
[    43.854][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = left_join())
[    43.856][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = union())
[    43.859][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = intersect())
[    43.862][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = semi_join())
[    43.865][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = cross_join())
[    43.868][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = mutate())
[    43.871][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = inner_join())
[    43.874][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([4]))
[    43.877][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([4]))
[    43.880][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([4]))
[    43.883][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([4]))
[    43.885][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([4]))
[    43.888][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([4]))
[    43.891][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([4]))
[    43.894][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([4]))
[    43.898][cube-solver-1][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([21]), l2 = filter([4]))
[    43.908][cube-solver-1][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = summarise([21]))
[    43.918][cube-solver-1][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = mutate())
[    43.921][cube-solver-1][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([4]))
[    43.923][MainProcess][DEBUG] Increasing generator loc to 4
[    43.924][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[    45.160][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([4]))
[    51.443][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([4]))
[    57.979][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[    59.205][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([4]))
[    59.234][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([4]))
[    59.259][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join([2]))
[    66.015][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join3([2]))
[    74.455][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join4())
[   107.630][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = summarise([21]))
[   107.648][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = filter([4]))
[   107.660][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[   132.494][cube-solver-1][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[   132.496][MainProcess][INFO] Statistics:
[   132.497][MainProcess][INFO] 	Generated cubes: 152
[   132.497][MainProcess][INFO] 	Attempted programs: 9323
[   132.497][MainProcess][INFO] 		Rejected: 1777
[   132.498][MainProcess][INFO] 		Failed: 7545
[   132.498][MainProcess][INFO] 	Blacklist clauses: 29
[   132.498][MainProcess][DEBUG] Printing statistics for good programs of size 3
[   132.508][MainProcess][DEBUG] 	0: Counter({'filter': 4920, 'mutate': 3520, 'summarise': 1048, 'natural_join3': 752})
[   132.511][MainProcess][DEBUG] 	1: Counter({'filter': 3560, 'natural_join4': 2696, 'mutate': 2400, 'natural_join3': 1040, 'summarise': 544})
[   132.514][MainProcess][DEBUG] 	2: Counter({'natural_join4': 4600, 'summarise': 2288, 'filter': 1760, 'natural_join3': 1152, 'mutate': 440})
[   132.514][MainProcess][DEBUG] Printing statistics for good programs of size 4
[   132.517][MainProcess][DEBUG] 	0: Counter({'natural_join': 10309})
[   132.520][MainProcess][DEBUG] 	1: Counter({'summarise': 10309})
[   132.523][MainProcess][DEBUG] 	2: Counter({'filter': 7893, 'natural_join3': 1952, 'natural_join': 464})
[   132.526][MainProcess][DEBUG] 	3: Counter({'natural_join3': 5576, 'filter': 2416, 'natural_join4': 1680, 'natural_join': 464, 'anti_join': 173})
[   132.526][MainProcess][INFO] Solution found: anti_join(summarise(@param1, n = n(), P_id, P_name), filter(natural_join(@param0, @param2), S_name != 'AWS'), )

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/16-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/16-2.txt", col_types = cols(P_id = col_character(),P_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/16-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/16.out", col_types = cols(P_name = col_character()))

df4 <- input2 %>% group_by(P_id, P_name) %>% summarise(n = n()) %>% ungroup()
df5 <- inner_join(input1, input3)
df6 <- df5 %>% filter(S_name != 'AWS')
df7 <- anti_join(df4, df6, by=c())
out <- df7 %>% select(P_name) %>% arrange(P_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `P_name`
FROM
  (SELECT *
   FROM
     (SELECT `P_id`,
             `P_name`,
             COUNT() AS `n`
      FROM `input2`
      GROUP BY `P_id`,
               `P_name`) AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM
             (SELECT `LHS`.`S_key` AS `S_key`,
                     `LHS`.`P_id` AS `P_id`,
                     `RHS`.`S_name` AS `S_name`
              FROM `input1` AS `LHS`
              INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
           WHERE (`S_name` != 'AWS')) AS RHS
        WHERE (LHS.P_id = RHS.P_id) ))
ORDER BY P_name
