[     1.591][MainProcess][INFO] Parsing specification...
[     1.594][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.594][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.595][MainProcess][DEBUG] Reading input files...
[     1.602][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/21-1.txt: ['string', 'string']
[     1.607][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/21-2.txt: ['string', 'string']
[     1.611][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/21-3.txt: ['string', 'string']
[     1.615][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/21.out: ['string']
[     1.645][MainProcess][DEBUG] Generating DSL...
[     1.662][MainProcess][INFO] Creating 2 processes
[     1.671][MainProcess][DEBUG] Increasing generator loc to 2
[     1.703][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.706][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.832][cube-solver-0][WARNING] There is no solution for current loc (1).
[     1.833][cube-solver-0][DEBUG] Solving cube (l0 = filter(),)
[     1.836][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.962][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter())
[     1.965][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter())
[     1.966][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = natural_join())
[     1.968][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3())
[     2.143][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([7]))
[     2.375][cube-solver-0][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = filter([7]))
[     2.376][MainProcess][INFO] Statistics:
[     2.377][MainProcess][INFO] 	Generated cubes: 6
[     2.377][MainProcess][INFO] 	Attempted programs: 4
[     2.377][MainProcess][INFO] 		Rejected: 3
[     2.377][MainProcess][INFO] 		Failed: 0
[     2.377][MainProcess][INFO] 	Blacklist clauses: 7
[     2.377][MainProcess][DEBUG] Printing statistics for good programs of size 2
[     2.378][MainProcess][DEBUG] 	0: Counter({'natural_join3': 32, 'filter': 28})
[     2.378][MainProcess][DEBUG] 	1: Counter({'filter': 32, 'natural_join3': 28})
[     2.379][MainProcess][INFO] Solution found: filter(natural_join3(@param1, @param0, @param2), color == 'red' | color == 'green')
[     2.439][cube-solver-1][DEBUG] Found solution with cube (l0 = filter(), l1 = natural_join3())

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/21.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input2, input1) %>% inner_join(input3)
df5 <- df4 %>% filter(color == 'red' | color == 'green')
out <- df5 %>% select(S_name) %>% distinct() %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT `S_name`
FROM
  (SELECT `LHS`.`P_id` AS `P_id`,
          `LHS`.`color` AS `color`,
          `LHS`.`S_key` AS `S_key`,
          `RHS`.`S_name` AS `S_name`
   FROM
     (SELECT `LHS`.`P_id` AS `P_id`,
             `LHS`.`color` AS `color`,
             `RHS`.`S_key` AS `S_key`
      FROM `input2` AS `LHS`
      INNER JOIN `input1` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)) AS `LHS`
   INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
WHERE (`color` = 'red'
       OR `color` = 'green')
ORDER BY S_name
