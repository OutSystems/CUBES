[     1.555][MainProcess][INFO] Parsing specification...
[     1.558][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.558][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.558][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.559][MainProcess][DEBUG] Reading input files...
[     1.565][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i017.csv: ['int64', 'string', 'string']
[     1.570][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o017.csv: ['int64', 'string', 'string']
[     1.595][MainProcess][DEBUG] Generating DSL...
[     1.766][MainProcess][INFO] Creating 4 processes
[     1.933][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.937][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.943][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.945][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     7.639][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     7.644][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     7.736][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     7.736][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     8.168][MainProcess][DEBUG] Increasing generator loc to 3
[     8.182][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     8.284][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     9.524][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[    11.144][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[    16.811][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([3]), l2 = filter())
[    16.852][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([3]), l2 = filter())
[    16.873][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise([3]))
[    16.893][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[    16.912][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[    16.930][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([3]), l2 = filter())
[    16.950][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise([3]))
[    16.970][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[    16.989][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[    17.008][cube-solver-1][DEBUG] Solving cube (l0 = summarise([3]), l1 = natural_join(), l2 = filter())
[    17.630][cube-solver-1][DEBUG] Found solution with cube (l0 = summarise([3]), l1 = natural_join(), l2 = filter())
[    17.631][MainProcess][INFO] Statistics:
[    17.631][MainProcess][INFO] 	Generated cubes: 17
[    17.631][MainProcess][INFO] 	Attempted programs: 103
[    17.631][MainProcess][INFO] 		Rejected: 42
[    17.631][MainProcess][INFO] 		Failed: 60
[    17.631][MainProcess][INFO] 	Blacklist clauses: 3
[    17.632][MainProcess][DEBUG] Printing statistics for good programs of size 2
[    17.632][MainProcess][DEBUG] 	0: Counter({'mutate': 540, 'summarise': 156, 'filter': 108})
[    17.633][MainProcess][DEBUG] 	1: Counter({'filter': 696, 'mutate': 60, 'summarise': 48})
[    17.633][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    17.633][MainProcess][DEBUG] 	0: Counter({'summarise': 85})
[    17.634][MainProcess][DEBUG] 	1: Counter({'natural_join': 85})
[    17.634][MainProcess][DEBUG] 	2: Counter({'filter': 85})
[    17.634][MainProcess][INFO] Solution found: filter(natural_join(@param0, summarise(@param0, ID = min(ID), PRODUCT)), str_detect(SKU, 'FOO-'))
[    17.895][MainProcess][ERROR] Error while trying to convert R code to SQL.

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i017.csv", col_types = cols(ID = col_integer(),SKU = col_character(),PRODUCT = col_character()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o017.csv", col_types = cols(ID = col_integer(),SKU = col_character(),PRODUCT = col_character()))

df2 <- input1 %>% group_by(PRODUCT) %>% summarise(ID = min(ID)) %>% ungroup()
df3 <- inner_join(input1, df2)
df4 <- df3 %>% filter(str_detect(SKU, 'FOO-'))
out <- df4 %>% select(ID, SKU, PRODUCT) %>% arrange(ID)

Failed to generate SQL query
