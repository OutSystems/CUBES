[     1.681][MainProcess][INFO] Parsing specification...
[     1.684][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.684][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.685][MainProcess][DEBUG] Reading input files...
[     1.691][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i014.csv: ['int64', 'string']
[     1.695][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o014.csv: ['int64', 'string']
[     1.723][MainProcess][DEBUG] Generating DSL...
[     1.762][MainProcess][INFO] Creating 4 processes
[     1.779][MainProcess][DEBUG] Increasing generator loc to 2
[     1.816][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.819][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     1.825][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.834][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     2.133][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     2.140][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     2.485][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     2.493][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate())
[     2.495][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise())
[     2.496][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate())
[     2.498][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise())
[     2.500][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate())
[     2.502][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3())
[     2.503][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join())
[     2.505][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4())
[     2.507][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = summarise())
[     2.509][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join())
[     2.562][cube-solver-0][DEBUG] Found solution with cube (l0 = summarise(),)
[     2.564][MainProcess][INFO] Statistics:
[     2.565][MainProcess][INFO] 	Generated cubes: 13
[     2.565][MainProcess][INFO] 	Attempted programs: 12
[     2.565][MainProcess][INFO] 		Rejected: 11
[     2.565][MainProcess][INFO] 		Failed: 0
[     2.565][MainProcess][INFO] 	Blacklist clauses: 0
[     2.565][MainProcess][DEBUG] Printing statistics for good programs of size 1
[     2.566][MainProcess][DEBUG] 	0: Counter({'summarise': 53, 'mutate': 48})
[     2.566][MainProcess][DEBUG] Printing statistics for good programs of size 2
[     2.567][MainProcess][DEBUG] 	0: Counter({'summarise': 1})
[     2.567][MainProcess][DEBUG] 	1: Counter({'natural_join': 1})
[     2.567][MainProcess][INFO] Solution found: summarise(@param0, concatstring = string_agg(string, ', '), id)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i014.csv", col_types = cols(id = col_integer(),string = col_character()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o014.csv", col_types = cols(id = col_integer(),concatstring = col_character()))

string_agg <- function(v,s) {Reduce(function(x, y) paste(x, y, sep = s), v)}

df2 <- input1 %>% group_by(id) %>% summarise(concatstring = string_agg(string, ', ')) %>% ungroup()
out <- df2 %>% select(id, concatstring) %>% arrange(id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `id`,
       `concatstring`
FROM
  (SELECT `id`,
          string_agg(`string`, ', ') AS concatstring
   FROM input1
   GROUP BY id)
ORDER BY id
