[     1.608][MainProcess][INFO] Parsing specification...
[     1.611][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.611][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.612][MainProcess][DEBUG] Reading input files...
[     1.625][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i045.csv: ['int64', 'int64', 'int64', 'datetime64[ns]']
[     1.629][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o045.csv: ['int64', 'int64']
[     1.662][MainProcess][DEBUG] Generating DSL...
[     1.696][MainProcess][INFO] Creating 4 processes
[     1.751][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.754][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.756][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.761][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.273][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.275][MainProcess][DEBUG] Increasing generator loc to 3
[     2.276][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.277][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.283][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.283][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.331][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     3.323][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     3.328][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     3.331][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     3.331][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     3.333][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     3.335][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     3.336][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     3.337][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     3.338][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     3.339][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     3.340][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     3.340][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     3.342][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     3.342][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     3.344][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     3.346][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     3.348][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     3.447][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     4.455][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     5.293][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     6.293][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = natural_join4())
[     6.301][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = summarise())
[    15.616][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter([5]), l2 = filter([5]))
[    26.404][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = filter([5]), l2 = anti_join())
[    30.616][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter([5]), l2 = left_join())
[    33.419][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = filter([5]), l2 = union())
[    63.206][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter([5]), l2 = intersect())
[    65.545][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = filter([5]), l2 = semi_join())
[    75.526][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = filter([5]), l2 = cross_join())
[    81.368][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter([5]), l2 = mutate())
[    84.399][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter([5]), l2 = inner_join())
[    84.945][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter([5]))
[    95.723][cube-solver-3][DEBUG] Found solution with cube (l0 = summarise(), l1 = filter([5]), l2 = cross_join())
[    95.726][MainProcess][INFO] Statistics:
[    95.727][MainProcess][INFO] 	Generated cubes: 34
[    95.727][MainProcess][INFO] 	Attempted programs: 3794
[    95.727][MainProcess][INFO] 		Rejected: 2063
[    95.727][MainProcess][INFO] 		Failed: 1730
[    95.727][MainProcess][INFO] 	Blacklist clauses: 5
[    95.728][MainProcess][DEBUG] Printing statistics for good programs of size 2
[    95.729][MainProcess][DEBUG] 	0: Counter({'summarise': 440, 'mutate': 200})
[    95.730][MainProcess][DEBUG] 	1: Counter({'filter': 640})
[    95.730][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    95.758][MainProcess][DEBUG] 	0: Counter({'summarise': 52037})
[    95.771][MainProcess][DEBUG] 	1: Counter({'filter': 46565, 'natural_join': 4000, 'anti_join': 1472})
[    95.785][MainProcess][DEBUG] 	2: Counter({'natural_join3': 12000, 'anti_join': 8008, 'filter': 7672, 'left_join': 5320, 'union': 5320, 'natural_join': 4880, 'cross_join': 3301, 'semi_join': 2960, 'inner_join': 1457, 'summarise': 680, 'mutate': 440})
[    95.785][MainProcess][INFO] Solution found: cross_join(summarise(@param0, n = n(), user_id), filter(summarise(@param0, n = n(), user_id), n > 1), n.other < n)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i045.csv", col_types = cols(user_id = col_integer(),account_no = col_integer(),zip = col_integer(),date = col_character()))
input1$date <- dmy(input1$date)
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o045.csv", col_types = cols(user_id = col_integer(),n = col_integer()))

df2 <- input1 %>% group_by(user_id) %>% summarise(n = n()) %>% ungroup()
df3 <- df2 %>% filter(n > 1)
df4 <- full_join(df2 %>% mutate(tmp.col=1), df3 %>% mutate(tmp.col=1), by="tmp.col", suffix = c("", ".other")) %>% select(-tmp.col) %>% filter(n.other < n)
out <- df4 %>% select(user_id = user_id.other, n = user_id) %>% arrange(user_id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT user_id.other AS user_id,
       user_id AS n
FROM
  (SELECT user_id,
          n,
          user_id.other,
          n.other
   FROM
     (SELECT LHS.user_id AS user_id,
             LHS.n AS n,
             COALESCE(LHS.tmp.col, RHS.tmp.col) AS tmp.col,
             RHS.user_id AS user_id.other,
             RHS.n AS n.other
      FROM
        (SELECT user_id,
                n,
                1.0 AS tmp.col
         FROM
           (SELECT user_id,
                   COUNT() AS n
            FROM input1
            GROUP BY user_id)) AS LHS
      FULL JOIN
        (SELECT user_id,
                n,
                1.0 AS tmp.col
         FROM
           (SELECT user_id,
                   COUNT() AS n
            FROM input1
            GROUP BY user_id)
         WHERE (n > 1.0)) AS RHS ON (LHS.tmp.col = RHS.tmp.col)))
WHERE (n.other < n)
ORDER BY user_id
