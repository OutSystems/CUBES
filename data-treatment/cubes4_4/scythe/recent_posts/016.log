[     3.395][MainProcess][INFO] Parsing specification...
[     3.401][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.401][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.401][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     3.402][MainProcess][DEBUG] Reading input files...
[     3.413][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/016_2.csv: ['string', 'datetime64[ns]']
[     3.421][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/016_o.csv: ['string', 'datetime64[ns]', 'int64']
[     3.463][MainProcess][DEBUG] Generating DSL...
[     3.733][MainProcess][INFO] Creating 4 processes
[     4.065][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     4.070][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     4.077][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     4.121][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[    18.469][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[    18.577][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter())
[    18.706][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[    18.822][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[    18.912][cube-solver-0][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = summarise())
[    18.953][cube-solver-0][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = mutate())
[    18.990][cube-solver-0][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise())
[    19.024][cube-solver-0][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[    19.052][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = summarise(), l2 = filter())
[    30.691][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise())
[    33.857][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = mutate())
[    37.240][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter())
[    39.360][MainProcess][DEBUG] Increasing generator loc to 4
[    39.399][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[    48.479][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[    63.458][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = summarise(), l3 = filter())
[    63.639][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter(), l3 = mutate())
[    63.687][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = mutate(), l3 = filter())
[    63.733][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise(), l3 = summarise())
[    63.780][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise(), l3 = mutate())
[    63.826][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate(), l3 = summarise())
[    63.937][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate(), l3 = mutate())
[    63.986][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = summarise(), l3 = filter())
[    64.023][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter(), l3 = summarise())
[    64.061][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter(), l3 = mutate())
[    64.123][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = mutate(), l3 = filter())
[    64.178][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = summarise(), l3 = filter())
[    64.230][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter(), l3 = summarise())
[    64.277][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter(), l3 = mutate())
[    64.324][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = mutate(), l3 = filter())
[    64.370][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise(), l3 = summarise())
[    64.418][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise(), l3 = mutate())
[    64.465][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate(), l3 = summarise())
[    64.511][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate(), l3 = mutate())
[    64.558][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = summarise(), l3 = filter())
[    64.605][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter(), l3 = summarise())
[    64.652][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter(), l3 = mutate())
[    64.700][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = mutate(), l3 = filter())
[    64.747][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = summarise(), l3 = filter())
[    64.795][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter(), l3 = summarise())
[    64.842][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter(), l3 = mutate())
[    64.887][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = mutate(), l3 = filter())
[    64.932][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise(), l3 = summarise())
[    64.978][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise(), l3 = mutate())
[    65.023][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate(), l3 = summarise())
[    65.067][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate(), l3 = mutate())
[    65.113][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = summarise(), l3 = filter())
[    65.158][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter(), l3 = summarise())
[    65.203][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter(), l3 = mutate())
[    65.250][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = mutate(), l3 = filter())
[    65.297][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = summarise(), l3 = filter())
[    74.374][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter(), l3 = summarise())
[    74.489][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter(), l3 = summarise())
[    95.734][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[   103.252][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[   121.469][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = summarise(), l3 = filter())
[   121.508][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter(), l3 = summarise())
[   121.544][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter(), l3 = mutate())
[   121.581][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = mutate(), l3 = filter())
[   121.617][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = summarise(), l3 = filter())
[   121.650][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter(), l3 = summarise())
[   121.683][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter(), l3 = mutate())
[   121.716][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = mutate(), l3 = filter())
[   121.748][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = natural_join(), l3 = filter())
[   122.104][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter(), l3 = mutate())
[   127.727][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = mutate(), l3 = filter())
[   140.144][cube-solver-3][DEBUG] Found solution with cube (l0 = summarise(), l1 = natural_join(), l2 = mutate(), l3 = filter())
[   140.147][MainProcess][INFO] Statistics:
[   140.148][MainProcess][INFO] 	Generated cubes: 61
[   140.148][MainProcess][INFO] 	Attempted programs: 3141
[   140.149][MainProcess][INFO] 		Rejected: 2190
[   140.149][MainProcess][INFO] 		Failed: 950
[   140.149][MainProcess][INFO] 	Blacklist clauses: 0
[   140.149][MainProcess][DEBUG] Printing statistics for good programs of size 3
[   140.166][MainProcess][DEBUG] 	0: Counter({'summarise': 16200, 'mutate': 13200})
[   140.173][MainProcess][DEBUG] 	1: Counter({'mutate': 22200, 'filter': 6600, 'summarise': 600})
[   140.181][MainProcess][DEBUG] 	2: Counter({'filter': 22800, 'mutate': 5400, 'summarise': 1200})
[   140.181][MainProcess][DEBUG] Printing statistics for good programs of size 4
[   140.186][MainProcess][DEBUG] 	0: Counter({'summarise': 13258})
[   140.190][MainProcess][DEBUG] 	1: Counter({'natural_join': 10476, 'summarise': 2782})
[   140.194][MainProcess][DEBUG] 	2: Counter({'filter': 6480, 'natural_join': 2782, 'summarise': 2064, 'mutate': 1932})
[   140.197][MainProcess][DEBUG] 	3: Counter({'filter': 6778, 'summarise': 3600, 'mutate': 2880})
[   140.197][MainProcess][INFO] Solution found: filter(mutate(natural_join(@param0, summarise(@param0, n = n(), CustomerId)), maxReportDt = max(ReportDt)), n < 1 | ReportDt > mdy('10/19/2016'))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/016_2.csv", col_types = cols(CustomerId = col_character(),ReportDt = col_character()))
input1$ReportDt <- mdy(input1$ReportDt)
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/016_o.csv", col_types = cols(c1 = col_character(),c2 = col_character(),c3 = col_integer()))
expected_output$c2 <- mdy(expected_output$c2)

df2 <- input1 %>% group_by(CustomerId) %>% summarise(n = n()) %>% ungroup()
df3 <- inner_join(input1, df2)
df4 <- df3 %>% mutate(maxReportDt = max(ReportDt))
df5 <- df4 %>% filter(n < 1 | ReportDt > mdy('10/19/2016'))
out <- df5 %>% select(c1 = CustomerId, c2 = maxReportDt, c3 = n) %>% distinct() %>% arrange(c1)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT `CustomerId` AS `c1`,
                `maxReportDt` AS `c2`,
                `n` AS `c3`
FROM
  (SELECT `CustomerId`,
          `ReportDt`,
          `n`,
          MAX(`ReportDt`) OVER () AS `maxReportDt`
   FROM
     (SELECT `LHS`.`CustomerId` AS `CustomerId`,
             `LHS`.`ReportDt` AS `ReportDt`,
             `RHS`.`n` AS `n`
      FROM `input1` AS `LHS`
      INNER JOIN
        (SELECT `CustomerId`,
                COUNT() AS `n`
         FROM `input1`
         GROUP BY `CustomerId`) AS `RHS` ON (`LHS`.`CustomerId` = `RHS`.`CustomerId`)))
WHERE (`n` < 1.0
       OR `ReportDt` > mdy('10/19/2016'))
ORDER BY c1
