[     3.235][MainProcess][INFO] Parsing specification...
[     3.240][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.241][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.241][MainProcess][DEBUG] Reading input files...
[     3.250][MainProcess][WARNING] Using integers larger than 32 bits! Converting column isbn to string.
[     3.252][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/051_1.csv: ['object', 'string']
[     3.257][MainProcess][WARNING] Using integers larger than 32 bits! Converting column isbn to string.
[     3.258][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/051_2.csv: ['object', 'string']
[     3.264][MainProcess][WARNING] Using integers larger than 32 bits! Converting column isbn to string.
[     3.265][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/051_o.csv: ['object', 'string', 'string']
[     3.308][MainProcess][DEBUG] Generating DSL...
[     3.362][MainProcess][INFO] Creating 4 processes
[     3.383][MainProcess][DEBUG] Increasing generator loc to 2
[     3.432][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     3.437][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.442][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.449][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     3.858][cube-solver-0][WARNING] There is no solution for current loc (1).
[     3.859][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     3.862][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.878][cube-solver-1][WARNING] There is no solution for current loc (1).
[     3.878][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     3.879][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     4.339][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise())
[     4.357][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate())
[     4.845][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise())
[     4.850][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise())
[     4.852][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate())
[     4.852][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate())
[     4.854][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join())
[     4.866][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3())
[     5.292][cube-solver-0][DEBUG] Found solution with cube (l0 = summarise(), l1 = natural_join())
[     5.294][MainProcess][INFO] Statistics:
[     5.294][MainProcess][INFO] 	Generated cubes: 10
[     5.294][MainProcess][INFO] 	Attempted programs: 16
[     5.294][MainProcess][INFO] 		Rejected: 3
[     5.294][MainProcess][INFO] 		Failed: 12
[     5.295][MainProcess][INFO] 	Blacklist clauses: 0
[     5.295][MainProcess][DEBUG] Printing statistics for good programs of size 2
[     5.296][MainProcess][DEBUG] 	0: Counter({'natural_join': 228, 'summarise': 87})
[     5.296][MainProcess][DEBUG] 	1: Counter({'mutate': 127, 'summarise': 102, 'natural_join3': 48, 'natural_join': 39})
[     5.296][MainProcess][INFO] Solution found: natural_join(summarise(@param1, concatAuthor = string_agg(Author, ', '), isbn), @param0)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/051_1.csv", col_types = cols(isbn = col_character(),title = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/scythe/recent_posts/tables/051_2.csv", col_types = cols(isbn = col_character(),Author = col_character()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/051_o.csv", col_types = cols(isbn = col_character(),title = col_character(),author = col_character()))

string_agg <- function(v,s) {Reduce(function(x, y) paste(x, y, sep = s), v)}

df3 <- input2 %>% group_by(isbn) %>% summarise(concatAuthor = string_agg(Author, ', ')) %>% ungroup()
df4 <- inner_join(df3, input1)
out <- df4 %>% select(isbn, title, author = concatAuthor) %>% arrange(isbn)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `isbn`,
       `title`,
       `concatAuthor` AS `author`
FROM
  (SELECT `LHS`.`isbn` AS `isbn`,
          `LHS`.`concatAuthor` AS `concatAuthor`,
          `RHS`.`title` AS `title`
   FROM
     (SELECT `isbn`,
             string_agg(`Author`, ', ') AS concatAuthor
      FROM input2
      GROUP BY isbn) AS LHS
   INNER JOIN input1 AS RHS ON (LHS.isbn = RHS.isbn))
ORDER BY isbn
