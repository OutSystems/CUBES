[     1.574][MainProcess][INFO] Parsing specification...
[     1.577][MainProcess][DEBUG] Reading input files...
[     1.583][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/044_1.csv: ['int64', 'string']
[     1.588][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/044_2.csv: ['string', 'int64']
[     1.593][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/044_o.csv: ['int64', 'string']
[     1.620][MainProcess][DEBUG] Generating DSL...
[     1.633][MainProcess][INFO] Creating 4 processes
[     1.673][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     1.674][cube-solver-2][DEBUG] Initialising process for 1 lines of code.
[     1.674][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.677][cube-solver-3][DEBUG] Initialising process for 1 lines of code.
[     1.717][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(),)
[     1.719][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(),)
[     1.720][cube-solver-2][DEBUG] Solving cube (l0 = left_join(),)
[     1.720][cube-solver-1][DEBUG] Solving cube (l0 = union(),)
[     1.723][cube-solver-3][DEBUG] Solving cube (l0 = anti_join(),)
[     1.733][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(),)
[     1.913][cube-solver-1][DEBUG] Solving cube (l0 = intersect(),)
[     1.934][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(),)
[     1.940][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(),)
[     1.949][cube-solver-0][DEBUG] Solving cube (l0 = inner_join(),)
[     1.951][MainProcess][DEBUG] Increasing generator loc to 2
[     1.952][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.012][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     2.043][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     2.057][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]))
[     2.062][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = intersect([6]))
[     2.129][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join())
[     2.143][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = union())
[     2.550][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.642][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = cross_join([2]))
[     2.658][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = semi_join())
[     2.726][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = inner_join([23]))
[     2.938][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join())
[     2.985][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join3())
[     2.986][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join4())
[     2.988][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = anti_join([10]))
[     2.993][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = left_join())
[     2.994][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = union())
[     2.995][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = intersect([6]))
[     2.999][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = semi_join())
[     3.000][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = cross_join([2]))
[     3.003][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = inner_join([23]))
[     3.012][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join())
[     3.013][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join3())
[     3.015][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join4())
[     3.016][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = anti_join([10]))
[     3.021][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = left_join())
[     3.022][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = union())
[     3.023][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = intersect([6]))
[     3.027][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = semi_join())
[     3.028][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = cross_join([2]))
[     3.031][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = inner_join([23]))
[     3.039][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join())
[     3.041][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join3())
[     3.042][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join4())
[     3.043][cube-solver-2][DEBUG] Solving cube (l0 = anti_join([10]), l1 = natural_join())
[     3.276][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([10]), l1 = natural_join3())
[     3.289][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([10]), l1 = natural_join4())
[     3.295][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([10]), l1 = anti_join([10]))
[     3.303][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([10]), l1 = left_join())
[     3.566][cube-solver-1][DEBUG] Solving cube (l0 = anti_join([10]), l1 = union())
[     3.966][cube-solver-2][DEBUG] Solving cube (l0 = anti_join([10]), l1 = intersect([6]))
[     4.277][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([10]), l1 = semi_join())
[     4.661][cube-solver-1][DEBUG] Solving cube (l0 = anti_join([10]), l1 = cross_join([2]))
[     4.845][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join())
[     4.845][cube-solver-1][DEBUG] Solving cube (l0 = anti_join([10]), l1 = inner_join([23]))
[     4.873][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join3())
[     5.718][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join4())
[     5.720][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = anti_join([10]))
[     6.643][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = left_join())
[     7.661][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = union())
[     7.992][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = intersect([6]))
[     8.606][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = semi_join())
[     8.658][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = cross_join([2]))
[     8.746][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = inner_join([23]))
[     9.276][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = natural_join())
[    10.127][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = natural_join3())
[    11.539][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = natural_join4())
[    11.543][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = anti_join([10]))
[    11.904][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = left_join())
[    12.895][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = union())
[    13.861][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = intersect([6]))
[    13.967][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = semi_join())
[    14.436][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = cross_join([2]))
[    14.510][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = inner_join([23]))
[    14.695][cube-solver-1][DEBUG] Solving cube (l0 = intersect([6]), l1 = natural_join())
[    14.949][cube-solver-1][DEBUG] Solving cube (l0 = intersect([8]), l1 = natural_join3())
[    15.056][cube-solver-3][DEBUG] Solving cube (l0 = intersect([8]), l1 = natural_join4())
[    15.064][cube-solver-3][DEBUG] Solving cube (l0 = intersect([8]), l1 = anti_join([10]))
[    15.902][cube-solver-3][DEBUG] Solving cube (l0 = intersect([8]), l1 = left_join())
[    16.091][cube-solver-3][DEBUG] Solving cube (l0 = intersect([8]), l1 = union())
[    16.614][cube-solver-3][DEBUG] Solving cube (l0 = intersect([8]), l1 = intersect([8]))
[    16.616][cube-solver-1][DEBUG] Solving cube (l0 = intersect([8]), l1 = semi_join())
[    16.798][cube-solver-1][DEBUG] Solving cube (l0 = intersect([8]), l1 = cross_join([2]))
[    16.896][cube-solver-1][DEBUG] Solving cube (l0 = intersect([8]), l1 = inner_join([23]))
[    17.047][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join())
[    17.801][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join3())
[    18.622][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join4())
[    18.624][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = anti_join([10]))
[    19.660][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = left_join())
[    20.083][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = union())
[    20.532][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = intersect([8]))
[    20.881][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = semi_join())
[    21.158][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = cross_join([2]))
[    21.248][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = inner_join([23]))
[    21.336][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([2]), l1 = natural_join())
[    21.375][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([4]), l1 = natural_join3())
[    21.378][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([4]), l1 = natural_join4())
[    21.382][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([4]), l1 = anti_join([10]))
[    21.390][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([4]), l1 = left_join())
[    21.393][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([4]), l1 = union())
[    21.397][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([4]), l1 = intersect([8]))
[    21.404][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([4]), l1 = semi_join())
[    21.407][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([4]), l1 = cross_join([4]))
[    21.413][cube-solver-1][DEBUG] Solving cube (l0 = cross_join([4]), l1 = inner_join([23]))
[    21.427][cube-solver-1][DEBUG] Solving cube (l0 = inner_join([23]), l1 = natural_join())
[    21.460][cube-solver-0][DEBUG] Solving cube (l0 = inner_join([23]), l1 = natural_join3())
[    25.878][cube-solver-3][DEBUG] Solving cube (l0 = inner_join([46]), l1 = natural_join4())
[    25.911][cube-solver-3][DEBUG] Solving cube (l0 = inner_join([46]), l1 = anti_join([10]))
[    25.942][cube-solver-1][DEBUG] Solving cube (l0 = inner_join([46]), l1 = left_join())
[    27.149][cube-solver-2][DEBUG] Solving cube (l0 = inner_join([46]), l1 = union())
[    30.648][cube-solver-1][DEBUG] Solving cube (l0 = inner_join([46]), l1 = intersect([8]))
[    31.319][cube-solver-2][DEBUG] Solving cube (l0 = inner_join([46]), l1 = semi_join())
[    31.502][cube-solver-0][DEBUG] Solving cube (l0 = inner_join([46]), l1 = cross_join([4]))
[    31.812][cube-solver-0][DEBUG] Solving cube (l0 = inner_join([46]), l1 = inner_join([46]))
[    32.297][cube-solver-3][DEBUG] Found solution with cube (l0 = inner_join([46]), l1 = anti_join([10]))
[    32.298][MainProcess][INFO] Statistics:
[    32.299][MainProcess][INFO] 	Generated cubes: 110
[    32.299][MainProcess][INFO] 	Attempted programs: 3006
[    32.299][MainProcess][INFO] 		Rejected: 1302
[    32.299][MainProcess][INFO] 		Failed: 1703
[    32.299][MainProcess][INFO] 	Blacklist clauses: 68
[    32.300][MainProcess][DEBUG] Printing statistics for good programs of size 1
[    32.300][MainProcess][DEBUG] 	0: Counter({'inner_join': 68, 'union': 24, 'left_join': 24, 'natural_join': 24, 'anti_join': 16, 'semi_join': 8})
[    32.301][MainProcess][DEBUG] Printing statistics for good programs of size 2
[    32.310][MainProcess][DEBUG] 	0: Counter({'inner_join': 4687, 'left_join': 3248, 'union': 3248, 'natural_join': 2376, 'semi_join': 1300, 'anti_join': 1176, 'intersect': 400})
[    32.315][MainProcess][DEBUG] 	1: Counter({'inner_join': 7395, 'natural_join3': 2688, 'union': 1516, 'anti_join': 1473, 'left_join': 1468, 'natural_join': 1304, 'semi_join': 593})
[    32.315][MainProcess][INFO] Solution found: anti_join(@param0, inner_join(@param0, @param1, 'OriginalID' = 'OriginalID','Area' = 'Part'), 'Area', 'OriginalID')

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/044_1.csv", col_types = cols(OriginalID = col_integer(),Area = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/scythe/recent_posts/tables/044_2.csv", col_types = cols(Part = col_character(),OriginalID = col_integer()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/044_o.csv", col_types = cols(OriginalID = col_integer(),Area = col_character()))

df3 <- inner_join(input1, input2, by=c('OriginalID' = 'OriginalID','Area' = 'Part'), suffix = c('', '.other'))
df4 <- anti_join(input1, df3, by=c('Area', 'OriginalID'))
out <- df4 %>% select(OriginalID, Area) %>% arrange(OriginalID)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT OriginalID,
       Area
FROM
  (SELECT *
   FROM input1 AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT LHS.OriginalID AS OriginalID,
                  LHS.Area AS Area
           FROM input1 AS LHS
           INNER JOIN input2 AS RHS ON (LHS.OriginalID = RHS.OriginalID
                                        AND LHS.Area = RHS.Part)) AS RHS
        WHERE (LHS.Area = RHS.Area
               AND LHS.OriginalID = RHS.OriginalID) ))
ORDER BY OriginalID
