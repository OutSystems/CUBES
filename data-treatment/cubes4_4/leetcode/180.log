[     3.223][MainProcess][INFO] Parsing specification...
[     3.227][MainProcess][DEBUG] Reading input files...
[     3.233][MainProcess][INFO] Inferred data types for table tests-examples/leetcode/tables/180.csv: ['int64', 'int64']
[     3.236][MainProcess][INFO] Inferred data types for table tests-examples/leetcode/tables/180_o.csv: ['int64']
[     3.263][MainProcess][DEBUG] Generating DSL...
[     4.139][MainProcess][INFO] Creating 4 processes
[     5.084][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     5.088][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     5.112][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     5.130][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[    49.376][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = mutate())
[    49.787][MainProcess][DEBUG] Increasing generator loc to 3
[    49.824][cube-solver-0][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]))
[    49.880][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[    49.999][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[    50.113][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = mutate())
[    50.131][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([2]))
[    50.588][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[    50.765][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[   115.773][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([2]), l2 = summarise([2]))
[   116.032][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([2]), l2 = summarise([2]))
[   116.137][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([2]), l2 = mutate())
[   116.242][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = summarise([2]))
[   116.346][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = mutate())
[   116.449][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([2]), l2 = summarise([2]))
[   116.563][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([2]), l2 = mutate())
[   116.677][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = summarise([2]))
[   116.791][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = mutate())
[   116.906][cube-solver-1][DEBUG] Solving cube (l0 = summarise([2]), l1 = natural_join(), l2 = summarise([2]))
[   118.722][cube-solver-1][DEBUG] Solving cube (l0 = summarise([2]), l1 = natural_join(), l2 = mutate())
[   119.554][cube-solver-1][DEBUG] Solving cube (l0 = summarise([2]), l1 = natural_join3(), l2 = summarise([2]))
[   119.728][cube-solver-1][DEBUG] Solving cube (l0 = summarise([2]), l1 = natural_join3(), l2 = mutate())
[   119.752][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = mutate())
[   119.856][cube-solver-1][DEBUG] Solving cube (l0 = summarise([2]), l1 = natural_join4(), l2 = summarise([2]))
[   119.974][cube-solver-1][DEBUG] Solving cube (l0 = summarise([2]), l1 = natural_join4(), l2 = mutate())
[   120.099][cube-solver-1][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = natural_join3())
[   120.114][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = summarise([2]))
[   120.133][cube-solver-2][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = natural_join())
[   120.510][cube-solver-3][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = natural_join4())
[   120.677][cube-solver-3][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = summarise([2]))
[   120.808][cube-solver-3][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = filter())
[   120.949][cube-solver-3][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = anti_join())
[   121.732][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([2]), l2 = mutate())
[   121.865][cube-solver-2][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = left_join())
[   121.988][cube-solver-0][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = union())
[   123.500][cube-solver-2][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = intersect())
[   123.703][cube-solver-0][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = semi_join())
[   124.759][cube-solver-1][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = cross_join())
[   125.088][cube-solver-0][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = mutate())
[   125.227][cube-solver-0][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = inner_join())
[   125.720][cube-solver-2][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = summarise([2]))
[   125.785][cube-solver-0][DEBUG] Found solution with cube (l0 = summarise([2]), l1 = summarise([2]), l2 = inner_join())
[   125.786][MainProcess][INFO] Statistics:
[   125.787][MainProcess][INFO] 	Generated cubes: 37
[   125.787][MainProcess][INFO] 	Attempted programs: 264
[   125.787][MainProcess][INFO] 		Rejected: 205
[   125.787][MainProcess][INFO] 		Failed: 58
[   125.787][MainProcess][INFO] 	Blacklist clauses: 2
[   125.787][MainProcess][DEBUG] Printing statistics for good programs of size 2
[   125.788][MainProcess][DEBUG] 	0: Counter({'mutate': 36, 'summarise': 16})
[   125.788][MainProcess][DEBUG] 	1: Counter({'mutate': 32, 'summarise': 20})
[   125.788][MainProcess][DEBUG] Printing statistics for good programs of size 3
[   125.790][MainProcess][DEBUG] 	0: Counter({'summarise': 1228})
[   125.791][MainProcess][DEBUG] 	1: Counter({'summarise': 1084, 'natural_join': 144})
[   125.792][MainProcess][DEBUG] 	2: Counter({'natural_join3': 384, 'anti_join': 208, 'natural_join': 120, 'left_join': 120, 'union': 120, 'summarise': 80, 'semi_join': 80, 'mutate': 64, 'intersect': 40, 'inner_join': 12})
[   125.792][MainProcess][INFO] Solution found: inner_join(summarise(@param0, leadNum = lead(Num), Id, Num), summarise(@param0, lagNum = lag(Num), Id, Num), 'Num' = 'Id','Num' = 'Num')
[   125.876][cube-solver-3][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = mutate())
[   126.177][MainProcess][ERROR] Error while trying to convert R code to SQL.

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/leetcode/tables/180.csv", col_types = cols(Id = col_integer(),Num = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/leetcode/tables/180_o.csv", col_types = cols(ConsecutiveNums = col_integer()))

df2 <- input1 %>% group_by(Id, Num) %>% summarise(leadNum = lead(Num)) %>% ungroup()
df3 <- input1 %>% group_by(Id, Num) %>% summarise(lagNum = lag(Num)) %>% ungroup()
df4 <- inner_join(df2, df3, by=c('Num' = 'Id','Num' = 'Num'), suffix = c('', '.other'))
out <- df4 %>% select(ConsecutiveNums = Num) %>% distinct() %>% arrange(ConsecutiveNums)

Failed to generate SQL query
