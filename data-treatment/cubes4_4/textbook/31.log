[     1.684][MainProcess][INFO] Parsing specification...
[     1.688][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.688][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.689][MainProcess][DEBUG] Reading input files...
[     1.696][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/aircraft.txt: ['int64', 'string', 'int64']
[     1.700][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/certified.txt: ['int64', 'int64']
[     1.705][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/employees.txt: ['int64', 'string', 'float64']
[     1.709][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/31.out: ['string']
[     1.738][MainProcess][DEBUG] Generating DSL...
[     1.763][MainProcess][INFO] Creating 4 processes
[     1.783][MainProcess][DEBUG] Increasing generator loc to 2
[     1.813][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.817][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.820][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.830][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.026][cube-solver-0][WARNING] There is no solution for current loc (1).
[     2.027][cube-solver-0][DEBUG] Solving cube (l0 = filter(),)
[     2.028][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.378][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter())
[     2.380][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3())
[     2.400][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([1]))
[     2.408][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([2]))
[     2.412][cube-solver-3][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join4())
[     2.593][cube-solver-0][DEBUG] Solving cube (l0 = filter([7]), l1 = natural_join())
[     2.601][cube-solver-0][DEBUG] Solving cube (l0 = filter([8]), l1 = filter([8]))
[     2.610][cube-solver-0][DEBUG] Solving cube (l0 = filter([10]), l1 = anti_join())
[     2.616][cube-solver-0][DEBUG] Solving cube (l0 = filter([10]), l1 = left_join())
[     2.620][cube-solver-0][DEBUG] Solving cube (l0 = filter([10]), l1 = union())
[     2.625][cube-solver-0][DEBUG] Solving cube (l0 = filter([10]), l1 = intersect())
[     2.629][cube-solver-0][DEBUG] Solving cube (l0 = filter([10]), l1 = semi_join())
[     2.634][cube-solver-0][DEBUG] Solving cube (l0 = filter([10]), l1 = cross_join())
[     2.639][cube-solver-0][DEBUG] Solving cube (l0 = filter([10]), l1 = inner_join())
[     2.645][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([10]))
[     2.651][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = filter([11]))
[     2.656][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = filter([12]))
[     2.661][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = filter([12]))
[     2.667][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([12]))
[     2.672][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([12]))
[     2.678][cube-solver-0][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([12]))
[     2.683][MainProcess][DEBUG] Increasing generator loc to 3
[     2.683][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     3.528][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([20]), l2 = natural_join())
[     5.527][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     6.173][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     6.400][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = natural_join3([2]))
[     7.018][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = natural_join4())
[    10.121][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = filter([20]))
[    10.140][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = anti_join())
[    15.740][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[    16.524][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = left_join())
[    22.529][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = union())
[    23.181][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = intersect())
[    28.376][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = semi_join())
[    31.532][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = cross_join())
[    32.369][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = inner_join())
[    34.078][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = anti_join(), l2 = filter([20]))
[    34.086][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = left_join(), l2 = filter([20]))
[    39.845][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = union(), l2 = filter([20]))
[    41.056][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = intersect(), l2 = filter([20]))
[    45.398][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = semi_join(), l2 = filter([20]))
[    47.655][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = cross_join(), l2 = filter([20]))
[    48.940][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = inner_join(), l2 = filter([20]))
[   204.841][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = natural_join([2]), l2 = filter([20]))
[   210.515][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = natural_join3([2]), l2 = filter([20]))
[   210.535][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = natural_join4(), l2 = filter([20]))
[   210.546][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = natural_join([2]))
[   227.931][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = natural_join3([2]))
[   238.720][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = natural_join4())
[   249.695][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = filter([20]))
[   275.641][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = anti_join())
[   300.719][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = left_join())
[   312.290][cube-solver-1][DEBUG] Found solution with cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = anti_join())
[   312.293][MainProcess][INFO] Statistics:
[   312.294][MainProcess][INFO] 	Generated cubes: 49
[   312.294][MainProcess][INFO] 	Attempted programs: 45700
[   312.294][MainProcess][INFO] 		Rejected: 5930
[   312.294][MainProcess][INFO] 		Failed: 39769
[   312.294][MainProcess][INFO] 	Blacklist clauses: 24
[   312.294][MainProcess][DEBUG] Printing statistics for good programs of size 2
[   312.298][MainProcess][DEBUG] 	0: Counter({'filter': 2160, 'natural_join3': 480})
[   312.300][MainProcess][DEBUG] 	1: Counter({'natural_join4': 1680, 'filter': 480, 'natural_join3': 480})
[   312.300][MainProcess][DEBUG] Printing statistics for good programs of size 3
[   312.328][MainProcess][DEBUG] 	0: Counter({'natural_join': 40200, 'natural_join3': 36522})
[   312.348][MainProcess][DEBUG] 	1: Counter({'filter': 60644, 'inner_join': 12920, 'left_join': 960, 'union': 960, 'natural_join': 960, 'semi_join': 280})
[   312.368][MainProcess][DEBUG] 	2: Counter({'filter': 26569, 'natural_join4': 14400, 'inner_join': 12920, 'natural_join3': 10080, 'anti_join': 4540, 'natural_join': 3840, 'left_join': 2856, 'union': 960, 'semi_join': 560})
[   312.368][MainProcess][INFO] Solution found: anti_join(natural_join3(@param2, @param1, @param0), filter(@param0, str_detect(aname, 'Boeing') | crusingrange < 3000), 'aid', 'aname')
[   312.796][MainProcess][ERROR] Error while trying to convert R code to SQL.

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/aircraft.txt", col_types = cols(aid = col_integer(),aname = col_character(),crusingrange = col_integer()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/certified.txt", col_types = cols(eid = col_integer(),aid = col_integer()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/employees.txt", col_types = cols(eid = col_integer(),ename = col_character(),salary = col_double()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/31.out", col_types = cols(ename = col_character()))

df4 <- inner_join(input3, input2) %>% inner_join(input1)
df5 <- input1 %>% filter(str_detect(aname, 'Boeing') | crusingrange < 3000)
df6 <- anti_join(df4, df5, by=c('aid', 'aname'))
out <- df6 %>% select(ename) %>% distinct() %>% arrange(ename)

Failed to generate SQL query
