[     1.579][MainProcess][INFO] Parsing specification...
[     1.583][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.583][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.583][MainProcess][DEBUG] Reading input files...
[     1.591][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/18-1.txt: ['string', 'string', 'int64']
[     1.596][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/18-3.txt: ['string', 'string']
[     1.600][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/18.out: ['string', 'string']
[     1.628][MainProcess][DEBUG] Generating DSL...
[     1.790][MainProcess][INFO] Creating 4 processes
[     1.806][MainProcess][DEBUG] Increasing generator loc to 2
[     1.946][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.957][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.960][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.991][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     4.548][cube-solver-1][WARNING] There is no solution for current loc (1).
[     4.548][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     4.556][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     4.558][cube-solver-0][WARNING] There is no solution for current loc (1).
[     4.559][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     4.577][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     7.063][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate())
[     7.137][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise())
[     7.964][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise())
[     7.983][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate())
[     8.000][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join())
[     9.359][cube-solver-2][DEBUG] Solving cube (l0 = summarise([24]), l1 = natural_join3())
[     9.780][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate())
[     9.829][cube-solver-0][DEBUG] Solving cube (l0 = summarise([29]), l1 = natural_join4())
[     9.855][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([29]))
[     9.859][cube-solver-0][DEBUG] Solving cube (l0 = summarise([29]), l1 = summarise([29]))
[     9.898][cube-solver-0][DEBUG] Solving cube (l0 = summarise([30]), l1 = filter())
[     9.904][cube-solver-1][DEBUG] Solving cube (l0 = summarise([30]), l1 = anti_join())
[     9.933][cube-solver-0][DEBUG] Solving cube (l0 = summarise([31]), l1 = left_join())
[    10.007][cube-solver-3][DEBUG] Solving cube (l0 = summarise([31]), l1 = union())
[    11.317][cube-solver-0][DEBUG] Solving cube (l0 = summarise([31]), l1 = intersect())
[    12.597][cube-solver-3][DEBUG] Solving cube (l0 = summarise([31]), l1 = semi_join())
[    12.781][cube-solver-0][DEBUG] Solving cube (l0 = summarise([31]), l1 = cross_join())
[    13.223][cube-solver-3][DEBUG] Solving cube (l0 = summarise([31]), l1 = mutate())
[    13.249][cube-solver-3][DEBUG] Solving cube (l0 = summarise([31]), l1 = inner_join())
[    13.584][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise([31]))
[    13.609][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[    13.623][cube-solver-1][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([31]))
[    15.321][cube-solver-2][DEBUG] Found solution with cube (l0 = summarise([24]), l1 = natural_join3())
[    15.322][MainProcess][INFO] Statistics:
[    15.323][MainProcess][INFO] 	Generated cubes: 24
[    15.323][MainProcess][INFO] 	Attempted programs: 529
[    15.323][MainProcess][INFO] 		Rejected: 135
[    15.323][MainProcess][INFO] 		Failed: 393
[    15.323][MainProcess][INFO] 	Blacklist clauses: 31
[    15.323][MainProcess][DEBUG] Printing statistics for good programs of size 2
[    15.326][MainProcess][DEBUG] 	0: Counter({'summarise': 2091, 'natural_join': 400, 'anti_join': 40})
[    15.328][MainProcess][DEBUG] 	1: Counter({'natural_join3': 947, 'union': 416, 'summarise': 312, 'natural_join': 192, 'left_join': 192, 'inner_join': 152, 'mutate': 128, 'anti_join': 128, 'semi_join': 64})
[    15.328][MainProcess][INFO] Solution found: natural_join3(@param0, @param1, summarise(@param0, cost = max(cost), P_id))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/18-1.txt", col_types = cols(S_key = col_character(),P_id = col_character(),cost = col_integer()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/18-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/textbook/tables/18.out", col_types = cols(P_id = col_character(),S_name = col_character()))

df3 <- input1 %>% group_by(P_id) %>% summarise(cost = max(cost)) %>% ungroup()
df4 <- inner_join(input1, input2) %>% inner_join(df3)
out <- df4 %>% select(P_id, S_name) %>% arrange(P_id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT P_id,
       S_name
FROM
  (SELECT LHS.S_key AS S_key,
          LHS.P_id AS P_id,
          LHS.cost AS cost,
          LHS.S_name AS S_name
   FROM
     (SELECT LHS.S_key AS S_key,
             LHS.P_id AS P_id,
             LHS.cost AS cost,
             RHS.S_name AS S_name
      FROM input1 AS LHS
      INNER JOIN input2 AS RHS ON (LHS.S_key = RHS.S_key)) AS LHS
   INNER JOIN
     (SELECT P_id,
             MAX(cost) AS cost
      FROM input1
      GROUP BY P_id) AS RHS ON (LHS.P_id = RHS.P_id
                                AND LHS.cost = RHS.cost))
ORDER BY P_id
