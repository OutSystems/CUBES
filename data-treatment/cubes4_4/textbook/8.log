[     3.283][MainProcess][INFO] Parsing specification...
[     3.288][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.288][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.288][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     3.289][MainProcess][DEBUG] Reading input files...
[     3.297][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/8-1.txt: ['string', 'string', 'int64']
[     3.302][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/8.out: ['string', 'int64']
[     3.330][MainProcess][DEBUG] Generating DSL...
[     3.370][MainProcess][INFO] Creating 4 processes
[     3.432][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.432][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.437][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.447][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     4.492][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     4.511][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     4.512][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     4.566][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     4.917][MainProcess][DEBUG] Increasing generator loc to 3
[     4.918][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     5.348][cube-solver-1][DEBUG] Found solution with cube (l0 = filter(), l1 = summarise())
[     5.349][MainProcess][INFO] Statistics:
[     5.350][MainProcess][INFO] 	Generated cubes: 5
[     5.350][MainProcess][INFO] 	Attempted programs: 14
[     5.350][MainProcess][INFO] 		Rejected: 13
[     5.350][MainProcess][INFO] 		Failed: 0
[     5.351][MainProcess][INFO] 	Blacklist clauses: 0
[     5.351][MainProcess][DEBUG] Printing statistics for good programs of size 2
[     5.351][MainProcess][DEBUG] 	0: Counter({'filter': 141, 'mutate': 122, 'summarise': 40})
[     5.352][MainProcess][DEBUG] 	1: Counter({'filter': 162, 'summarise': 93, 'mutate': 48})
[     5.352][MainProcess][INFO] Solution found: summarise(filter(@param0, level != 'JR'), meanage = mean(age), level)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/8-1.txt", col_types = cols(S_key = col_character(),level = col_character(),age = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/textbook/tables/8.out", col_types = cols(level = col_character(),meanage = col_integer()))

df2 <- input1 %>% filter(level != 'JR')
df3 <- df2 %>% group_by(level) %>% summarise(meanage = mean(age)) %>% ungroup()
out <- df3 %>% select(level, meanage) %>% arrange(level)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `level`,
       `meanage`
FROM
  (SELECT `level`,
          AVG(`age`) AS `meanage`
   FROM
     (SELECT *
      FROM `input1`
      WHERE (`level` != 'JR'))
   GROUP BY LEVEL)
ORDER BY LEVEL
