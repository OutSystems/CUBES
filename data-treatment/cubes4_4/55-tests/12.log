[     1.573][MainProcess][INFO] Parsing specification...
[     1.576][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.577][MainProcess][DEBUG] Reading input files...
[     1.584][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/12-1.txt: ['string', 'int64', 'string']
[     1.589][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/12.out: ['int64', 'string']
[     1.614][MainProcess][DEBUG] Generating DSL...
[     1.635][MainProcess][INFO] Creating 4 processes
[     1.676][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.679][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.682][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.686][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.951][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     1.957][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     1.961][MainProcess][DEBUG] Increasing generator loc to 3
[     1.962][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     1.963][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     1.967][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     1.973][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.502][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     2.504][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.506][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.507][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.509][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.510][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.512][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.513][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.515][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.516][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.518][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.519][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     2.526][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.533][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     2.539][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     2.542][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.544][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.900][cube-solver-0][DEBUG] Found solution with cube (l0 = summarise(), l1 = filter())
[     2.901][MainProcess][INFO] Statistics:
[     2.902][MainProcess][INFO] 	Generated cubes: 21
[     2.902][MainProcess][INFO] 	Attempted programs: 16
[     2.902][MainProcess][INFO] 		Rejected: 12
[     2.902][MainProcess][INFO] 		Failed: 3
[     2.903][MainProcess][INFO] 	Blacklist clauses: 0
[     2.903][MainProcess][DEBUG] Printing statistics for good programs of size 2
[     2.904][MainProcess][DEBUG] 	0: Counter({'mutate': 153, 'summarise': 129})
[     2.904][MainProcess][DEBUG] 	1: Counter({'filter': 282})
[     2.904][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     2.904][MainProcess][DEBUG] 	0: Counter({'summarise': 89})
[     2.905][MainProcess][DEBUG] 	1: Counter({'natural_join': 56, 'filter': 33})
[     2.905][MainProcess][DEBUG] 	2: Counter({'filter': 56, 'natural_join': 33})
[     2.905][MainProcess][INFO] Solution found: filter(summarise(@param0, n = n(), age, level), age == max(n) | n == max(n))
[     2.945][cube-solver-2][DEBUG] Found solution with cube (l0 = summarise(), l1 = filter(), l2 = natural_join())

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/12-1.txt", col_types = cols(S_key = col_character(),age = col_integer(),level = col_character()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/55-tests/tables/12.out", col_types = cols(age = col_integer(),level = col_character()))

df2 <- input1 %>% group_by(age, level) %>% summarise(n = n()) %>% ungroup()
df3 <- df2 %>% filter(age == max(n) | n == max(n))
out <- df3 %>% select(age, level) %>% arrange(age)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT age,
       LEVEL
FROM
  (SELECT age,
          LEVEL,
          n
   FROM
     (SELECT age,
             LEVEL,
             n,
             MAX(n) OVER () AS zzz2,
                         MAX(n) OVER () AS zzz3
      FROM
        (SELECT age,
                LEVEL,
                COUNT() AS n
         FROM input1
         GROUP BY age,
                  LEVEL))
   WHERE (age = zzz2
          OR n = zzz3))
ORDER BY age
