[     1.628][MainProcess][INFO] Parsing specification...
[     1.631][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.631][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.631][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.632][MainProcess][DEBUG] Reading input files...
[     1.638][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-1.txt: ['string', 'string']
[     1.641][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-2.txt: ['string', 'string']
[     1.645][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-3.txt: ['string', 'string']
[     1.649][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/34.out: ['string']
[     1.678][MainProcess][DEBUG] Generating DSL...
[     1.708][MainProcess][INFO] Creating 4 processes
[     1.766][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.769][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.769][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.774][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.459][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.460][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.461][MainProcess][DEBUG] Increasing generator loc to 3
[     2.462][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.469][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.470][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.471][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.475][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.476][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.481][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.493][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.494][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.499][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     3.535][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     3.540][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     3.547][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     3.552][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     3.556][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     3.559][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     3.559][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     3.563][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     3.566][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     3.568][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     3.571][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     3.573][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     3.577][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     3.586][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     3.601][cube-solver-0][DEBUG] Solving cube (l0 = summarise([1]), l1 = natural_join4(), l2 = filter())
[     3.605][cube-solver-0][DEBUG] Solving cube (l0 = summarise([1]), l1 = summarise([1]), l2 = filter())
[     3.608][cube-solver-0][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = natural_join())
[     3.614][cube-solver-0][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = natural_join3([1]))
[     9.239][cube-solver-3][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([25]), l2 = natural_join4())
[    26.444][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([58]), l2 = summarise([21]))
[    26.509][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([58]), l2 = filter([58]))
[    26.563][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([58]), l2 = anti_join())
[    26.605][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([58]), l2 = left_join())
[    26.647][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([58]), l2 = union())
[    26.683][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([58]), l2 = intersect())
[    26.725][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([58]), l2 = semi_join())
[    26.767][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([58]), l2 = cross_join())
[    26.809][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([58]), l2 = mutate())
[    26.850][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([58]), l2 = inner_join())
[    26.897][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = anti_join(), l2 = filter([58]))
[    26.944][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = left_join(), l2 = filter([58]))
[    26.988][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = union(), l2 = filter([58]))
[    27.028][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = intersect(), l2 = filter([58]))
[    27.070][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = semi_join(), l2 = filter([58]))
[    27.105][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = cross_join(), l2 = filter([58]))
[    27.150][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = mutate(), l2 = filter([58]))
[    27.187][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = inner_join(), l2 = filter([58]))
[    27.231][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = natural_join(), l2 = summarise([21]))
[    27.274][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = natural_join(), l2 = mutate())
[    27.303][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = natural_join3([2]), l2 = summarise([21]))
[    27.342][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = natural_join3([2]), l2 = mutate())
[    27.370][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = natural_join4(), l2 = summarise([21]))
[    27.409][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = natural_join4(), l2 = mutate())
[    27.439][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = summarise([21]), l2 = natural_join())
[    27.477][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = summarise([21]), l2 = natural_join3([2]))
[    27.522][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = summarise([21]), l2 = natural_join4())
[    27.566][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = summarise([21]), l2 = summarise([21]))
[    27.624][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = summarise([21]), l2 = filter([58]))
[    27.676][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = summarise([21]), l2 = anti_join())
[    27.727][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = summarise([21]), l2 = left_join())
[    27.773][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = summarise([21]), l2 = union())
[    27.807][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = summarise([21]), l2 = intersect())
[    27.847][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = summarise([21]), l2 = semi_join())
[    27.889][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = summarise([21]), l2 = cross_join())
[    27.927][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = summarise([21]), l2 = mutate())
[    27.971][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = summarise([21]), l2 = inner_join())
[    28.012][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = filter([58]), l2 = summarise([21]))
[    28.078][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = filter([58]), l2 = mutate())
[    28.129][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = anti_join(), l2 = summarise([21]))
[    28.174][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = anti_join(), l2 = mutate())
[    28.202][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = left_join(), l2 = summarise([21]))
[    28.236][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = left_join(), l2 = mutate())
[    28.265][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = union(), l2 = summarise([21]))
[    28.298][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = union(), l2 = mutate())
[    28.330][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = intersect(), l2 = summarise([21]))
[    28.368][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = intersect(), l2 = mutate())
[    28.399][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = semi_join(), l2 = summarise([21]))
[    28.438][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = semi_join(), l2 = mutate())
[    28.464][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = cross_join(), l2 = summarise([21]))
[    28.508][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = cross_join(), l2 = mutate())
[    28.536][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = mutate(), l2 = natural_join())
[    28.561][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = mutate(), l2 = natural_join3([2]))
[    28.588][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = mutate(), l2 = natural_join4())
[    28.623][cube-solver-1][DEBUG] Solving cube (l0 = filter([58]), l1 = mutate(), l2 = summarise([21]))
[    28.661][cube-solver-1][DEBUG] Solving cube (l0 = filter([59]), l1 = mutate(), l2 = filter([59]))
[    28.705][cube-solver-1][DEBUG] Solving cube (l0 = filter([59]), l1 = mutate(), l2 = anti_join())
[    28.735][cube-solver-1][DEBUG] Solving cube (l0 = filter([59]), l1 = mutate(), l2 = left_join())
[    28.759][cube-solver-1][DEBUG] Solving cube (l0 = filter([59]), l1 = mutate(), l2 = union())
[    28.785][cube-solver-1][DEBUG] Solving cube (l0 = filter([59]), l1 = mutate(), l2 = intersect())
[    28.817][cube-solver-1][DEBUG] Solving cube (l0 = filter([59]), l1 = mutate(), l2 = semi_join())
[    28.850][cube-solver-1][DEBUG] Solving cube (l0 = filter([59]), l1 = mutate(), l2 = cross_join())
[    28.876][cube-solver-1][DEBUG] Solving cube (l0 = filter([59]), l1 = mutate(), l2 = mutate())
[    28.909][cube-solver-1][DEBUG] Solving cube (l0 = filter([59]), l1 = mutate(), l2 = inner_join())
[    28.940][cube-solver-1][DEBUG] Solving cube (l0 = filter([59]), l1 = inner_join(), l2 = summarise([21]))
[    28.986][cube-solver-1][DEBUG] Solving cube (l0 = filter([59]), l1 = inner_join(), l2 = mutate())
[    29.022][cube-solver-1][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([21]), l2 = filter([59]))
[    29.062][cube-solver-1][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([59]), l2 = summarise([21]))
[    29.108][cube-solver-1][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([59]), l2 = mutate())
[    29.138][cube-solver-1][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([59]))
[    29.164][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([21]), l2 = filter([59]))
[    29.205][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = filter([59]), l2 = summarise([21]))
[    29.250][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = filter([59]), l2 = mutate())
[    29.280][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([59]))
[    29.307][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = summarise([21]), l2 = filter([59]))
[    29.347][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = filter([59]), l2 = summarise([21]))
[    29.390][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = filter([59]), l2 = mutate())
[    29.419][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([59]))
[    29.445][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([21]), l2 = filter([59]))
[    29.483][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = filter([59]), l2 = summarise([21]))
[    29.525][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = filter([59]), l2 = mutate())
[    29.553][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([59]))
[    29.577][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([21]), l2 = filter([59]))
[    29.618][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([59]), l2 = summarise([21]))
[    29.662][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([59]), l2 = mutate())
[    29.695][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([59]))
[    29.724][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([21]), l2 = filter([59]))
[    29.767][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([59]), l2 = summarise([21]))
[    29.813][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([59]), l2 = mutate())
[    29.840][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([59]))
[    29.865][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([59]))
[    29.889][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([2]), l2 = filter([59]))
[    45.996][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([60]))
[    53.323][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([21]), l2 = filter([60]))
[    53.361][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = natural_join())
[    53.388][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = natural_join3([2]))
[    60.892][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = natural_join4())
[    75.270][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = summarise([21]))
[    75.422][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = filter([60]))
[    75.485][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = anti_join())
[    75.571][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = left_join())
[    75.673][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = union())
[    75.702][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = intersect())
[    75.727][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = semi_join())
[    75.750][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = cross_join())
[    75.775][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = mutate())
[    75.798][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([60]), l2 = inner_join())
[    75.822][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([60]))
[    75.846][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([60]))
[    75.869][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([60]))
[    75.893][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([60]))
[    75.917][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([60]))
[    75.940][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([60]))
[    75.958][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([60]))
[    75.976][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([60]))
[    75.996][cube-solver-3][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([21]), l2 = filter([60]))
[    76.022][cube-solver-3][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([60]), l2 = summarise([21]))
[    76.047][cube-solver-3][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([60]), l2 = mutate())
[    76.066][cube-solver-3][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([60]))
[    76.083][MainProcess][DEBUG] Increasing generator loc to 4
[    76.084][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[    77.702][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([60]))
[    93.074][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[    94.832][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([60]))
[   113.004][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[   114.612][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([60]))
[   114.667][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([60]))
[   114.710][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([60]), l3 = natural_join([2]))
[   119.559][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[   121.100][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([60]), l3 = natural_join3([2]))
[   124.024][cube-solver-0][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([60]))
[   124.026][MainProcess][INFO] Statistics:
[   124.027][MainProcess][INFO] 	Generated cubes: 148
[   124.027][MainProcess][INFO] 	Attempted programs: 25367
[   124.028][MainProcess][INFO] 		Rejected: 3394
[   124.028][MainProcess][INFO] 		Failed: 21972
[   124.028][MainProcess][INFO] 	Blacklist clauses: 85
[   124.028][MainProcess][DEBUG] Printing statistics for good programs of size 3
[   124.045][MainProcess][DEBUG] 	0: Counter({'mutate': 18400, 'summarise': 8240, 'natural_join3': 2560})
[   124.054][MainProcess][DEBUG] 	1: Counter({'filter': 11600, 'natural_join4': 9600, 'natural_join3': 5440, 'summarise': 1760, 'mutate': 800})
[   124.063][MainProcess][DEBUG] 	2: Counter({'filter': 17600, 'natural_join4': 10000, 'natural_join3': 1600})
[   124.063][MainProcess][DEBUG] Printing statistics for good programs of size 4
[   124.066][MainProcess][DEBUG] 	0: Counter({'natural_join': 6787})
[   124.068][MainProcess][DEBUG] 	1: Counter({'summarise': 6787})
[   124.070][MainProcess][DEBUG] 	2: Counter({'natural_join': 3550, 'natural_join3': 2853, 'filter': 384})
[   124.072][MainProcess][DEBUG] 	3: Counter({'filter': 6403, 'natural_join': 354, 'natural_join3': 30})
[   124.072][MainProcess][INFO] Solution found: filter(natural_join3(@param0, summarise(natural_join(@param0, @param1), n = n(), P_id, color), @param2), color == 'red' & n >= 3)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/34.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input2)
df5 <- df4 %>% group_by(P_id, color) %>% summarise(n = n()) %>% ungroup()
df6 <- inner_join(input1, df5) %>% inner_join(input3)
df7 <- df6 %>% filter(color == 'red' & n >= 3)
out <- df7 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `LHS`.`S_key` AS `S_key`,
          `LHS`.`P_id` AS `P_id`,
          `LHS`.`color` AS `color`,
          `LHS`.`n` AS `n`,
          `RHS`.`S_name` AS `S_name`
   FROM
     (SELECT `LHS`.`S_key` AS `S_key`,
             `LHS`.`P_id` AS `P_id`,
             `RHS`.`color` AS `color`,
             `RHS`.`n` AS `n`
      FROM `input1` AS `LHS`
      INNER JOIN
        (SELECT `P_id`,
                `color`,
                COUNT() AS `n`
         FROM
           (SELECT `LHS`.`S_key` AS `S_key`,
                   `LHS`.`P_id` AS `P_id`,
                   `RHS`.`color` AS `color`
            FROM `input1` AS `LHS`
            INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
         GROUP BY `P_id`,
                  `color`) AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)) AS `LHS`
   INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
WHERE (`color` = 'red'
       AND n >= 3.0)
ORDER BY S_name
