[     1.635][MainProcess][INFO] Parsing specification...
[     1.639][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.639][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.639][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.640][MainProcess][DEBUG] Reading input files...
[     1.648][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-1.txt: ['string', 'string']
[     1.653][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-2.txt: ['string', 'string']
[     1.658][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-3.txt: ['string', 'string']
[     1.662][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/33.out: ['string']
[     1.691][MainProcess][DEBUG] Generating DSL...
[     1.719][MainProcess][INFO] Creating 4 processes
[     1.769][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.774][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.780][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.788][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     2.280][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.281][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.282][MainProcess][DEBUG] Increasing generator loc to 3
[     2.282][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.288][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.288][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.290][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.303][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.304][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.309][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.318][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.319][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.324][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     3.284][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     3.289][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     3.299][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     3.310][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     3.311][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     3.315][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     3.317][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     3.317][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     3.322][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     3.325][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     3.327][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     3.329][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     3.332][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     3.343][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     3.353][cube-solver-2][DEBUG] Solving cube (l0 = summarise([1]), l1 = natural_join4(), l2 = filter())
[     3.358][cube-solver-2][DEBUG] Solving cube (l0 = summarise([1]), l1 = summarise([1]), l2 = filter())
[     3.362][cube-solver-2][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = natural_join())
[     3.368][cube-solver-2][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = natural_join3([1]))
[     5.616][cube-solver-1][DEBUG] Solving cube (l0 = summarise([16]), l1 = filter([8]), l2 = natural_join4())
[    12.662][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = summarise([21]))
[    12.724][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = filter([24]))
[    12.758][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = anti_join())
[    12.780][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = left_join())
[    12.801][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = union())
[    12.828][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = intersect())
[    12.851][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = semi_join())
[    12.872][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = cross_join())
[    12.895][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = mutate())
[    12.918][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([24]), l2 = inner_join())
[    12.942][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = anti_join(), l2 = filter([24]))
[    12.974][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = left_join(), l2 = filter([24]))
[    12.995][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = union(), l2 = filter([24]))
[    13.016][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = intersect(), l2 = filter([24]))
[    13.037][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = semi_join(), l2 = filter([24]))
[    13.059][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = cross_join(), l2 = filter([24]))
[    13.082][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = mutate(), l2 = filter([24]))
[    13.102][cube-solver-0][DEBUG] Solving cube (l0 = summarise([21]), l1 = inner_join(), l2 = filter([24]))
[    13.120][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = natural_join(), l2 = summarise([21]))
[    13.135][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = natural_join(), l2 = mutate())
[    13.143][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = natural_join3([2]), l2 = summarise([21]))
[    13.158][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = natural_join3([2]), l2 = mutate())
[    13.168][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = natural_join4(), l2 = summarise([21]))
[    13.182][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = natural_join4(), l2 = mutate())
[    13.192][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = natural_join())
[    13.207][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = natural_join3([2]))
[    13.224][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = natural_join4())
[    13.240][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = summarise([21]))
[    13.262][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = filter([24]))
[    13.283][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = anti_join())
[    13.298][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = left_join())
[    13.314][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = union())
[    13.330][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = intersect())
[    13.346][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = semi_join())
[    13.362][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = cross_join())
[    13.378][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = mutate())
[    13.394][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([21]), l2 = inner_join())
[    13.410][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = filter([24]), l2 = summarise([21]))
[    13.431][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = filter([24]), l2 = mutate())
[    13.446][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = anti_join(), l2 = summarise([21]))
[    13.461][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = anti_join(), l2 = mutate())
[    13.471][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = left_join(), l2 = summarise([21]))
[    13.486][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = left_join(), l2 = mutate())
[    13.496][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = union(), l2 = summarise([21]))
[    13.512][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = union(), l2 = mutate())
[    13.521][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = intersect(), l2 = summarise([21]))
[    13.536][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = intersect(), l2 = mutate())
[    13.546][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = semi_join(), l2 = summarise([21]))
[    13.561][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = semi_join(), l2 = mutate())
[    13.570][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = cross_join(), l2 = summarise([21]))
[    13.586][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = cross_join(), l2 = mutate())
[    13.595][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = natural_join())
[    13.603][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = natural_join3([2]))
[    13.612][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = natural_join4())
[    13.621][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = summarise([21]))
[    13.637][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = filter([24]))
[    13.652][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = anti_join())
[    13.660][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = left_join())
[    13.668][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = union())
[    13.676][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = intersect())
[    13.691][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = semi_join())
[    13.700][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = cross_join())
[    13.708][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = mutate())
[    13.717][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = inner_join())
[    13.726][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = inner_join(), l2 = summarise([21]))
[    13.742][cube-solver-0][DEBUG] Solving cube (l0 = filter([24]), l1 = inner_join(), l2 = mutate())
[    13.752][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([21]), l2 = filter([24]))
[    13.768][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([24]), l2 = summarise([21]))
[    13.784][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([24]), l2 = mutate())
[    13.793][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([24]))
[    13.803][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([21]), l2 = filter([24]))
[    13.819][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = filter([24]), l2 = summarise([21]))
[    13.835][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = filter([24]), l2 = mutate())
[    13.844][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([24]))
[    13.854][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = summarise([21]), l2 = filter([24]))
[    13.871][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = filter([24]), l2 = summarise([21]))
[    13.886][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = filter([24]), l2 = mutate())
[    13.895][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([24]))
[    13.905][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([21]), l2 = filter([24]))
[    13.921][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = filter([24]), l2 = summarise([21]))
[    13.936][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = filter([24]), l2 = mutate())
[    13.946][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([24]))
[    13.955][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([21]), l2 = filter([24]))
[    13.971][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([24]), l2 = summarise([21]))
[    13.987][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([24]), l2 = mutate())
[    13.996][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([24]))
[    14.006][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([21]), l2 = filter([24]))
[    14.023][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([24]), l2 = summarise([21]))
[    14.038][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([24]), l2 = mutate())
[    14.048][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([24]))
[    14.057][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([24]))
[    14.065][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([2]), l2 = filter([24]))
[    20.697][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([24]))
[    22.924][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([21]), l2 = filter([24]))
[    22.950][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = natural_join())
[    22.964][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = natural_join3([2]))
[    26.082][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = natural_join4())
[    39.445][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = summarise([21]))
[    39.550][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = filter([24]))
[    39.630][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = anti_join())
[    39.645][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = left_join())
[    39.653][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = union())
[    39.662][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = intersect())
[    39.670][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = semi_join())
[    39.678][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = cross_join())
[    39.688][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = mutate())
[    39.696][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([24]), l2 = inner_join())
[    39.705][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([24]))
[    39.714][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([24]))
[    39.723][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([24]))
[    39.732][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([24]))
[    39.740][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([24]))
[    39.748][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([24]))
[    39.757][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([24]))
[    39.766][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([24]))
[    39.776][cube-solver-1][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([21]), l2 = filter([24]))
[    39.792][cube-solver-1][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([24]), l2 = summarise([21]))
[    39.807][cube-solver-1][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([24]), l2 = mutate())
[    39.816][cube-solver-1][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([24]))
[    39.824][MainProcess][DEBUG] Increasing generator loc to 4
[    39.825][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[    40.417][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[    41.207][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([24]))
[    41.917][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([24]))
[    43.881][cube-solver-2][DEBUG] Found solution with cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([24]))
[    43.883][MainProcess][INFO] Statistics:
[    43.883][MainProcess][INFO] 	Generated cubes: 144
[    43.883][MainProcess][INFO] 	Attempted programs: 9257
[    43.884][MainProcess][INFO] 		Rejected: 626
[    43.884][MainProcess][INFO] 		Failed: 8630
[    43.884][MainProcess][INFO] 	Blacklist clauses: 47
[    43.884][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    43.892][MainProcess][DEBUG] 	0: Counter({'mutate': 6305, 'summarise': 3296, 'natural_join3': 1024})
[    43.897][MainProcess][DEBUG] 	1: Counter({'filter': 4055, 'natural_join4': 3370, 'natural_join3': 2176, 'summarise': 704, 'mutate': 320})
[    43.900][MainProcess][DEBUG] 	2: Counter({'filter': 6570, 'natural_join4': 3415, 'natural_join3': 640})
[    43.900][MainProcess][DEBUG] Printing statistics for good programs of size 4
[    43.901][MainProcess][DEBUG] 	0: Counter({'natural_join': 321})
[    43.901][MainProcess][DEBUG] 	1: Counter({'summarise': 321})
[    43.901][MainProcess][DEBUG] 	2: Counter({'natural_join': 296, 'natural_join3': 25})
[    43.901][MainProcess][DEBUG] 	3: Counter({'filter': 321})
[    43.901][MainProcess][INFO] Solution found: filter(natural_join3(@param0, @param2, summarise(natural_join(@param1, @param0), n = n(), P_id, color)), color == 'green' & n == max(n))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/33.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input2, input1)
df5 <- df4 %>% group_by(P_id, color) %>% summarise(n = n()) %>% ungroup()
df6 <- inner_join(input1, input3) %>% inner_join(df5)
df7 <- df6 %>% filter(color == 'green' & n == max(n))
out <- df7 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `S_key`,
          `P_id`,
          `S_name`,
          `color`,
          `n`
   FROM
     (SELECT `S_key`,
             `P_id`,
             `S_name`,
             `color`,
             `n`,
             MAX(`n`) OVER () AS `zzz4`
      FROM
        (SELECT `LHS`.`S_key` AS `S_key`,
                `LHS`.`P_id` AS `P_id`,
                `LHS`.`S_name` AS `S_name`,
                `RHS`.`color` AS `color`,
                `RHS`.`n` AS `n`
         FROM
           (SELECT `LHS`.`S_key` AS `S_key`,
                   `LHS`.`P_id` AS `P_id`,
                   `RHS`.`S_name` AS `S_name`
            FROM `input1` AS `LHS`
            INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`)) AS `LHS`
         INNER JOIN
           (SELECT `P_id`,
                   `color`,
                   COUNT() AS `n`
            FROM
              (SELECT `LHS`.`P_id` AS `P_id`,
                      `LHS`.`color` AS `color`,
                      `RHS`.`S_key` AS `S_key`
               FROM `input2` AS `LHS`
               INNER JOIN `input1` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
            GROUP BY `P_id`,
                     `color`) AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)))
   WHERE (`color` = 'green'
          AND n = zzz4))
ORDER BY S_name
