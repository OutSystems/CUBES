[     1.566][MainProcess][INFO] Parsing specification...
[     1.570][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.570][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.570][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.570][MainProcess][DEBUG] Reading input files...
[     1.576][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-1.txt: ['string', 'string']
[     1.580][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-2.txt: ['string', 'string']
[     1.583][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-3.txt: ['string', 'string']
[     1.587][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16.out: ['string']
[     1.616][MainProcess][DEBUG] Generating DSL...
[     1.641][MainProcess][INFO] Creating 4 processes
[     1.691][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.694][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.696][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.699][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.161][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.162][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.165][MainProcess][DEBUG] Increasing generator loc to 3
[     2.167][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.169][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.170][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.171][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.171][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.171][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.172][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.172][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.173][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.177][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     3.055][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     3.059][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     3.066][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     3.072][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     3.093][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     3.099][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = filter(), l2 = mutate())
[     3.115][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     3.119][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = mutate(), l2 = filter())
[     3.714][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     3.715][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     3.718][cube-solver-1][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     3.718][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     3.721][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     3.721][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3([2]), l2 = filter())
[     3.724][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     3.726][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     3.728][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     3.731][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3([2]))
[     5.591][cube-solver-3][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = natural_join4())
[     6.804][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = summarise([21]))
[     6.835][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = filter([4]))
[     6.848][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = anti_join())
[     6.861][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = left_join())
[     6.873][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = union())
[     6.885][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = intersect())
[     6.897][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = semi_join())
[     6.909][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = cross_join())
[     6.921][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = mutate())
[     6.932][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = filter([4]), l2 = inner_join())
[     6.944][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = anti_join(), l2 = filter([4]))
[     6.957][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = left_join(), l2 = filter([4]))
[     6.968][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = union(), l2 = filter([4]))
[     6.980][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = intersect(), l2 = filter([4]))
[     6.992][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = semi_join(), l2 = filter([4]))
[     7.003][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = cross_join(), l2 = filter([4]))
[     7.015][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = mutate(), l2 = filter([4]))
[     7.027][cube-solver-2][DEBUG] Solving cube (l0 = summarise([21]), l1 = inner_join(), l2 = filter([4]))
[     7.039][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join(), l2 = summarise([21]))
[     7.051][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join(), l2 = mutate())
[     7.055][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = summarise([21]))
[     8.953][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = mutate())
[     9.522][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = summarise([21]))
[    10.829][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = mutate())
[    12.263][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = natural_join())
[    12.279][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = natural_join3([2]))
[    12.904][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = natural_join4())
[    12.926][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = summarise([21]))
[    12.950][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = filter([4]))
[    12.966][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = anti_join())
[    12.981][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = left_join())
[    12.995][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = union())
[    13.009][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = intersect())
[    13.024][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = semi_join())
[    13.038][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = cross_join())
[    13.052][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = mutate())
[    13.063][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([21]), l2 = inner_join())
[    13.074][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = summarise([21]))
[    13.086][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = mutate())
[    13.092][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = summarise([21]))
[    13.103][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = mutate())
[    13.108][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = summarise([21]))
[    13.124][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = mutate())
[    13.128][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = summarise([21]))
[    13.144][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = mutate())
[    13.149][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = summarise([21]))
[    13.160][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = mutate())
[    13.164][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = summarise([21]))
[    13.175][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = mutate())
[    13.179][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = summarise([21]))
[    13.190][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = mutate())
[    13.194][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join())
[    13.197][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join3([2]))
[    14.836][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join4())
[    14.851][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = summarise([21]))
[    14.861][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = filter([4]))
[    14.866][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = anti_join())
[    14.869][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = left_join())
[    14.872][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = union())
[    14.875][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = intersect())
[    14.879][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = semi_join())
[    14.882][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = cross_join())
[    14.885][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = mutate())
[    14.888][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = inner_join())
[    14.891][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = summarise([21]))
[    14.907][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = mutate())
[    14.912][cube-solver-2][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([21]), l2 = filter([4]))
[    14.927][cube-solver-2][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = summarise([21]))
[    14.943][cube-solver-2][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = mutate())
[    14.947][cube-solver-2][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([4]))
[    14.953][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([21]), l2 = filter([4]))
[    14.970][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = summarise([21]))
[    14.985][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = mutate())
[    14.990][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([4]))
[    14.995][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = summarise([21]), l2 = filter([4]))
[    15.009][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = summarise([21]))
[    15.023][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = mutate())
[    15.028][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([4]))
[    15.033][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([21]), l2 = filter([4]))
[    15.048][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = summarise([21]))
[    15.063][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = mutate())
[    15.067][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([4]))
[    15.072][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([21]), l2 = filter([4]))
[    15.090][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = summarise([21]))
[    15.105][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = mutate())
[    15.109][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([4]))
[    15.114][cube-solver-2][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([21]), l2 = filter([4]))
[    15.131][cube-solver-2][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = summarise([21]))
[    15.146][cube-solver-2][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = mutate())
[    15.150][cube-solver-2][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([4]))
[    15.156][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([4]))
[    15.163][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([2]), l2 = filter([4]))
[    16.265][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([4]))
[    16.914][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([21]), l2 = filter([4]))
[    16.925][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join())
[    16.929][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join3([2]))
[    18.769][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join4())
[    22.839][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = summarise([21]))
[    22.850][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = filter([4]))
[    22.854][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = anti_join())
[    22.858][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = left_join())
[    22.861][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = union())
[    22.865][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = intersect())
[    22.868][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = semi_join())
[    22.871][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = cross_join())
[    22.876][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = mutate())
[    22.879][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = inner_join())
[    22.882][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([4]))
[    22.886][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([4]))
[    22.889][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([4]))
[    22.892][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([4]))
[    22.895][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([4]))
[    22.898][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([4]))
[    22.902][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([4]))
[    22.905][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([4]))
[    22.909][cube-solver-3][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([21]), l2 = filter([4]))
[    22.920][cube-solver-3][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = summarise([21]))
[    22.930][cube-solver-3][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = mutate())
[    22.934][cube-solver-3][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([4]))
[    22.936][MainProcess][DEBUG] Increasing generator loc to 4
[    22.937][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[    23.119][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[    24.207][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([4]))
[    24.404][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([4]))
[    29.235][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[    30.478][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([4]))
[    30.495][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([4]))
[    30.515][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join([2]))
[    30.669][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join3([2]))
[    35.110][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[    36.373][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join4())
[    37.294][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = summarise([21]))
[    37.312][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = filter([4]))
[    37.325][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[    41.128][cube-solver-0][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[    41.129][MainProcess][INFO] Statistics:
[    41.130][MainProcess][INFO] 	Generated cubes: 152
[    41.130][MainProcess][INFO] 	Attempted programs: 4988
[    41.130][MainProcess][INFO] 		Rejected: 1384
[    41.131][MainProcess][INFO] 		Failed: 3603
[    41.131][MainProcess][INFO] 	Blacklist clauses: 29
[    41.131][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    41.139][MainProcess][DEBUG] 	0: Counter({'filter': 4920, 'mutate': 3520, 'summarise': 1048, 'natural_join3': 752})
[    41.144][MainProcess][DEBUG] 	1: Counter({'filter': 3560, 'natural_join4': 2696, 'mutate': 2400, 'natural_join3': 1040, 'summarise': 544})
[    41.147][MainProcess][DEBUG] 	2: Counter({'natural_join4': 4600, 'summarise': 2288, 'filter': 1760, 'natural_join3': 1152, 'mutate': 440})
[    41.147][MainProcess][DEBUG] Printing statistics for good programs of size 4
[    41.148][MainProcess][DEBUG] 	0: Counter({'natural_join': 3247})
[    41.149][MainProcess][DEBUG] 	1: Counter({'summarise': 3247})
[    41.150][MainProcess][DEBUG] 	2: Counter({'filter': 1515, 'natural_join3': 1268, 'natural_join': 464})
[    41.151][MainProcess][DEBUG] 	3: Counter({'filter': 1732, 'natural_join3': 681, 'natural_join': 464, 'natural_join4': 287, 'anti_join': 83})
[    41.151][MainProcess][INFO] Solution found: anti_join(summarise(@param1, n = n(), P_id, P_name), filter(natural_join(@param2, @param0), S_name != 'AWS'), )

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/16-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/16-2.txt", col_types = cols(P_id = col_character(),P_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/16-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/16.out", col_types = cols(P_name = col_character()))

df4 <- input2 %>% group_by(P_id, P_name) %>% summarise(n = n()) %>% ungroup()
df5 <- inner_join(input3, input1)
df6 <- df5 %>% filter(S_name != 'AWS')
df7 <- anti_join(df4, df6, by=c())
out <- df7 %>% select(P_name) %>% arrange(P_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `P_name`
FROM
  (SELECT *
   FROM
     (SELECT `P_id`,
             `P_name`,
             COUNT() AS `n`
      FROM `input2`
      GROUP BY `P_id`,
               `P_name`) AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM
             (SELECT `LHS`.`S_key` AS `S_key`,
                     `LHS`.`S_name` AS `S_name`,
                     `RHS`.`P_id` AS `P_id`
              FROM `input3` AS `LHS`
              INNER JOIN `input1` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
           WHERE (`S_name` != 'AWS')) AS RHS
        WHERE (LHS.P_id = RHS.P_id) ))
ORDER BY P_name
