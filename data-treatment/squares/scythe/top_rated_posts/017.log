R[write to console]: 
Attaching package: ‘dplyr’


R[write to console]: The following objects are masked from ‘package:stats’:

    filter, lag


R[write to console]: The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


R[write to console]: 
Attaching package: ‘dbplyr’


R[write to console]: The following objects are masked from ‘package:dplyr’:

    ident, sql


# First, specify the types that will be used

enum Cols {
  "ID, PRODUCT", "ID, SKU", "PRODUCT, ID", "PRODUCT, SKU", "SKU, ID", "SKU, PRODUCT", "ID", "PRODUCT", "SKU"
}

enum Col {
  "ID", "PRODUCT", "SKU"
}

enum SelectCols{
  "ID,SKU,PRODUCT"
}

enum Distinct {
	"distinct", ""
}

enum FilterCondition{
"str_detect(SKU|FOO-)", "ID == minID", "ID > minID", "ID < minID", "ID >= minID", "ID <= minID"
}

enum SummariseCondition{
"minID = min(ID)"
}

enum Op{
 "|", "&"
}

value Table {
  col: int;
  row: int;
}

value TableSelect {
  col: int;
  row: int;
}

value Empty;

# Next, specify the input/output of the synthesized program
program Squares(Table) -> TableSelect;

# Finally, specify the production rules
func empty: Empty -> Empty;

func inner_join: Table r -> Table a, Table b
{
  col(r) <= col(a) + col(b);
}

func inner_join3: Table r -> Table a, Table b, Table c
{
  col(r) < col(a) + col(b) + col(c);
}

func inner_join4: Table r -> Table a, Table b, Table c, Table d {
  col(r) < col(a) + col(b) + col(c) + col(d);
}

func anti_join: Table r ->  Table a, Table b, Col c {
  #col(r) <= col(a) + col(b);
  col(r) == 1;
  row(r) <= row(a);
}

func left_join: Table r ->  Table a, Table b{
  col(r) <= col(a) + col(b);
  row(r) == row(a);
}

func bind_rows: Table r ->  Table a, Table b{
  col(r) <= col(a) + col(b);
  row(r) == row(a) + row(b);
}

func intersect: Table r ->  Table a, Table b, Col c {
  #col(r) <= col(a) + col(b);
  col(r) == 1;
  row(r) <= row(a);
}

func select: TableSelect r -> Table a, SelectCols c, Distinct d{
	row(r) <= row(a);
	col(r) <= col(a);
}




func filter: Table r -> Table a, FilterCondition f {
 row(r) <= row(a);
 col(r) == col(a);
}
func filters: Table r -> Table a, FilterCondition f, FilterCondition g, Op o {
 row(r) <= row(a);
 col(r) == col(a);
}


func summariseGrouped: Table r -> Table a, SummariseCondition s, Cols b {
 row(r) <= row(a);
 col(r) <= 3;
}

predicate is_not_parent(inner_join4, summariseGrouped, 100);
predicate is_not_parent(summariseGrouped, summariseGrouped, 100);
predicate distinct_filters(filters, 1, 2);

predicate is_not_parent(filters, filter, 100);
predicate is_not_parent(filter, filters, 100);
predicate is_not_parent(filter, filter, 100);
predicate is_not_parent(filters, filters, 100);

predicate constant_occurs("minID = min(ID)");
predicate constant_occurs("str_detect(SKU|FOO-)");
predicate happens_before("ID == minID","minID = min(ID)");
predicate happens_before("ID > minID","minID = min(ID)");
predicate happens_before("ID < minID","minID = min(ID)");
predicate happens_before("ID >= minID","minID = min(ID)");
predicate happens_before("ID <= minID","minID = min(ID)");
predicate is_not_parent(inner_join, inner_join3, 100);
predicate is_not_parent(inner_join, inner_join4, 100);
#predicate is_not_parent(inner_join, anti_join, 100);
predicate is_not_parent(inner_join3, inner_join, 100);
predicate is_not_parent(inner_join3, inner_join3, 100);
predicate is_not_parent(inner_join3, inner_join4, 100);
predicate is_not_parent(inner_join3, anti_join, 100);
predicate is_not_parent(inner_join4, inner_join, 100);
predicate is_not_parent(inner_join4, inner_join3, 100);
predicate is_not_parent(inner_join4, inner_join4, 100);
#predicate is_not_parent(inner_join4, anti_join, 100);
predicate is_not_parent(anti_join, anti_join, 100);
predicate is_not_parent(anti_join, inner_join, 100);
predicate is_not_parent(anti_join, inner_join4, 100);
predicate distinct_inputs(inner_join4);
predicate distinct_inputs(inner_join3);
predicate distinct_inputs(inner_join);
predicate distinct_inputs(anti_join);

Joining, by = c("ID", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = "PRODUCT"
Joining, by = "PRODUCT"
Joining, by = c("ID", "SKU")
Joining, by = c("ID", "SKU")
Joining, by = c("SKU", "PRODUCT")
Joining, by = c("SKU", "PRODUCT")
Joining, by = c("SKU", "PRODUCT")
Joining, by = c("ID", "SKU")
Joining, by = "SKU"
Joining, by = c("ID", "PRODUCT")
Joining, by = c("SKU", "PRODUCT")
Joining, by = c("ID", "SKU")
Joining, by = "SKU"
Joining, by = c("ID", "PRODUCT")
Joining, by = c("SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = "SKU"
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = "PRODUCT"
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = "ID"
Joining, by = "ID"
Joining, by = "ID"
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "PRODUCT")
Joining, by = c("ID", "PRODUCT")
Joining, by = c("ID", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("SKU", "PRODUCT")
Joining, by = c("ID", "SKU")
Joining, by = c("SKU", "PRODUCT")
Joining, by = c("ID", "SKU")
Joining, by = "SKU"
Joining, by = "SKU"
Joining, by = c("ID", "PRODUCT")
Joining, by = c("SKU", "PRODUCT")
Joining, by = c("ID", "PRODUCT")
Joining, by = c("SKU", "PRODUCT")
Joining, by = "PRODUCT"
Joining, by = "PRODUCT"
Joining, by = c("ID", "SKU")
Joining, by = c("ID", "SKU")
Joining, by = c("ID", "PRODUCT")
Joining, by = "ID"
Joining, by = c("ID", "PRODUCT")
Joining, by = "ID"
Joining, by = c("SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = "SKU"
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = "PRODUCT"
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = "ID"
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = "PRODUCT"
Joining, by = "PRODUCT"
Joining, by = "ID"
Joining, by = "SKU"
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("PRODUCT", "SKU")
Joining, by = c("ID", "SKU")
Joining, by = c("SKU", "PRODUCT")
Joining, by = "SKU"
Joining, by = c("SKU", "ID")
Joining, by = c("PRODUCT", "ID")
Joining, by = c("ID", "PRODUCT")
Joining, by = "ID"
Joining, by = c("SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("SKU", "PRODUCT")
Joining, by = c("PRODUCT", "SKU")
Joining, by = c("PRODUCT", "SKU", "ID")
Joining, by = c("ID", "SKU")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("SKU", "PRODUCT")
Joining, by = c("SKU", "PRODUCT", "ID")
Joining, by = "SKU"
Joining, by = c("SKU", "ID", "PRODUCT")
Joining, by = c("SKU", "ID")
Joining, by = c("SKU", "ID", "PRODUCT")
Joining, by = c("PRODUCT", "ID")
Joining, by = c("PRODUCT", "ID", "SKU")
Joining, by = c("ID", "PRODUCT")
Joining, by = c("ID", "PRODUCT", "SKU")
Joining, by = "PRODUCT"
Joining, by = c("PRODUCT", "ID", "SKU")
Joining, by = "ID"
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("PRODUCT", "SKU")
Joining, by = c("PRODUCT", "SKU", "ID")
Joining, by = c("SKU", "PRODUCT")
Joining, by = "ID"
Joining, by = c("SKU", "PRODUCT")
Joining, by = "PRODUCT"
Joining, by = c("ID", "PRODUCT")
Joining, by = "SKU"
Joining, by = c("ID", "SKU")
Joining, by = c("ID", "PRODUCT")
Joining, by = c("ID", "SKU")
Joining, by = c("SKU", "PRODUCT")
Joining, by = "SKU"
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("SKU", "PRODUCT")
Joining, by = "PRODUCT"
Joining, by = "ID"
Joining, by = "ID"
Joining, by = "PRODUCT"
Joining, by = c("SKU", "PRODUCT")
Joining, by = c("SKU", "PRODUCT")
Joining, by = c("SKU", "PRODUCT")
Joining, by = c("SKU", "PRODUCT")
Joining, by = c("SKU", "PRODUCT")
Joining, by = "SKU"
Joining, by = c("ID", "SKU")
Joining, by = c("ID", "PRODUCT")
Joining, by = c("ID", "PRODUCT")
Joining, by = "PRODUCT"
Joining, by = "ID"
Joining, by = "SKU"
Joining, by = c("ID", "SKU", "PRODUCT")
Joining, by = c("ID", "SKU")
Joining, by = c("ID", "SKU")
Joining, by = c("ID", "SKU")
Joining, by = c("ID", "SKU")
Joining, by = c("ID", "SKU")
Joining, by = c("ID", "PRODUCT")
Joining, by = c("ID", "PRODUCT")
Joining, by = c("ID", "PRODUCT")
Joining, by = "PRODUCT"
Joining, by = "PRODUCT"

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input0 <- read.table("tests-examples/scythe/top_rated_posts/tables/i017.csv", sep =",", header=T)
input0
input0 <- copy_to(con,input0)
expected_output <- read.table("tests-examples/scythe/top_rated_posts/tables/o017.csv", sep =",", header=T)
expected_output

RET_DF5470 <- input0 %>% group_by(PRODUCT) %>% summarise(minID = min(ID))
RET_DF5471 <- inner_join(input0, RET_DF5470)
RET_DF5472 <- RET_DF5471 %>% ungroup() %>% filter(str_detect(SKU, "FOO-") & ID == minID)
RET_DF5473 <- RET_DF5472 %>% ungroup() %>% select(ID,SKU,PRODUCT) %>% distinct()



+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

Joining, by = "PRODUCT"
