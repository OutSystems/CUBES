R[write to console]: 
Attaching package: ‘dplyr’


R[write to console]: The following objects are masked from ‘package:stats’:

    filter, lag


R[write to console]: The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


R[write to console]: 
Attaching package: ‘dbplyr’


R[write to console]: The following objects are masked from ‘package:dplyr’:

    ident, sql


# First, specify the types that will be used

enum Cols {
  "aid, aname", "aid, crusingrange", "aid, eid", "aid, ename", "aid, salary", "aname, aid", "aname, crusingrange", "aname, eid", "aname, ename", "aname, salary", "crusingrange, aid", "crusingrange, aname", "crusingrange, eid", "crusingrange, ename", "crusingrange, salary", "eid, aid", "eid, aname", "eid, crusingrange", "eid, ename", "eid, salary", "ename, aid", "ename, aname", "ename, crusingrange", "ename, eid", "ename, salary", "salary, aid", "salary, aname", "salary, crusingrange", "salary, eid", "salary, ename", "aid", "aname", "crusingrange", "eid", "ename", "salary"
}

enum Col {
  "aid", "aname", "crusingrange", "eid", "ename", "salary"
}

enum SelectCols{
  "aname,meansalary"
}

enum Distinct {
	"distinct", ""
}

enum FilterCondition{
"salary == 1000", "salary > 1000", "salary < 1000", "salary >= 1000", "salary <= 1000", "crusingrange == 1000", "crusingrange > 1000", "crusingrange < 1000", "crusingrange >= 1000", "crusingrange <= 1000", "meansalary == 1000", "meansalary > 1000", "meansalary < 1000", "meansalary >= 1000", "meansalary <= 1000", "meancrusingrange == 1000", "meancrusingrange > 1000", "meancrusingrange < 1000", "meancrusingrange >= 1000", "meancrusingrange <= 1000", "salary == meansalary", "salary > meansalary", "salary < meansalary", "salary >= meansalary", "salary <= meansalary", "crusingrange == meansalary", "crusingrange > meansalary", "crusingrange < meansalary", "crusingrange >= meansalary", "crusingrange <= meansalary", "meancrusingrange == meansalary", "meancrusingrange > meansalary", "meancrusingrange < meansalary", "meancrusingrange >= meansalary", "meancrusingrange <= meansalary", "salary == meancrusingrange", "salary > meancrusingrange", "salary < meancrusingrange", "salary >= meancrusingrange", "salary <= meancrusingrange", "crusingrange == meancrusingrange", "crusingrange > meancrusingrange", "crusingrange < meancrusingrange", "crusingrange >= meancrusingrange", "crusingrange <= meancrusingrange", "meansalary == meancrusingrange", "meansalary > meancrusingrange", "meansalary < meancrusingrange", "meansalary >= meancrusingrange", "meansalary <= meancrusingrange"
}

enum SummariseCondition{
"meansalary = mean(salary)", "meancrusingrange = mean(crusingrange)"
}

enum Op{
 "|", "&"
}

value Table {
  col: int;
  row: int;
}

value TableSelect {
  col: int;
  row: int;
}

value Empty;

# Next, specify the input/output of the synthesized program
program Squares(Table, Table, Table) -> TableSelect;

# Finally, specify the production rules
func empty: Empty -> Empty;

func inner_join: Table r -> Table a, Table b
{
  col(r) <= col(a) + col(b);
}

func inner_join3: Table r -> Table a, Table b, Table c
{
  col(r) < col(a) + col(b) + col(c);
}

func inner_join4: Table r -> Table a, Table b, Table c, Table d {
  col(r) < col(a) + col(b) + col(c) + col(d);
}

func anti_join: Table r ->  Table a, Table b, Col c {
  #col(r) <= col(a) + col(b);
  col(r) == 1;
  row(r) <= row(a);
}

func left_join: Table r ->  Table a, Table b{
  col(r) <= col(a) + col(b);
  row(r) == row(a);
}

func bind_rows: Table r ->  Table a, Table b{
  col(r) <= col(a) + col(b);
  row(r) == row(a) + row(b);
}

func intersect: Table r ->  Table a, Table b, Col c {
  #col(r) <= col(a) + col(b);
  col(r) == 1;
  row(r) <= row(a);
}

func select: TableSelect r -> Table a, SelectCols c, Distinct d{
	row(r) <= row(a);
	col(r) <= col(a);
}




func filter: Table r -> Table a, FilterCondition f {
 row(r) <= row(a);
 col(r) == col(a);
}
func filters: Table r -> Table a, FilterCondition f, FilterCondition g, Op o {
 row(r) <= row(a);
 col(r) == col(a);
}


func summariseGrouped: Table r -> Table a, SummariseCondition s, Cols b {
 row(r) <= row(a);
 col(r) <= 3;
}

predicate is_not_parent(inner_join4, summariseGrouped, 100);
predicate is_not_parent(summariseGrouped, summariseGrouped, 100);
predicate distinct_filters(filters, 1, 2);

predicate is_not_parent(filters, filter, 100);
predicate is_not_parent(filter, filters, 100);
predicate is_not_parent(filter, filter, 100);
predicate is_not_parent(filters, filters, 100);

predicate constant_occurs("meansalary = mean(salary),meancrusingrange = mean(crusingrange)");
predicate constant_occurs("salary == 1000,salary > 1000,salary < 1000,salary >= 1000,salary <= 1000,crusingrange == 1000,crusingrange > 1000,crusingrange < 1000,crusingrange >= 1000,crusingrange <= 1000,meansalary == 1000,meansalary > 1000,meansalary < 1000,meansalary >= 1000,meansalary <= 1000,meancrusingrange == 1000,meancrusingrange > 1000,meancrusingrange < 1000,meancrusingrange >= 1000,meancrusingrange <= 1000");
predicate happens_before("salary == meansalary","meansalary = mean(salary)");
predicate happens_before("salary > meansalary","meansalary = mean(salary)");
predicate happens_before("salary < meansalary","meansalary = mean(salary)");
predicate happens_before("salary >= meansalary","meansalary = mean(salary)");
predicate happens_before("salary <= meansalary","meansalary = mean(salary)");
predicate happens_before("crusingrange == meansalary","meansalary = mean(salary)");
predicate happens_before("crusingrange > meansalary","meansalary = mean(salary)");
predicate happens_before("crusingrange < meansalary","meansalary = mean(salary)");
predicate happens_before("crusingrange >= meansalary","meansalary = mean(salary)");
predicate happens_before("crusingrange <= meansalary","meansalary = mean(salary)");
predicate happens_before("meancrusingrange == meansalary","meansalary = mean(salary)");
predicate happens_before("meancrusingrange > meansalary","meansalary = mean(salary)");
predicate happens_before("meancrusingrange < meansalary","meansalary = mean(salary)");
predicate happens_before("meancrusingrange >= meansalary","meansalary = mean(salary)");
predicate happens_before("meancrusingrange <= meansalary","meansalary = mean(salary)");
predicate happens_before("salary == meancrusingrange","meancrusingrange = mean(crusingrange)");
predicate happens_before("salary > meancrusingrange","meancrusingrange = mean(crusingrange)");
predicate happens_before("salary < meancrusingrange","meancrusingrange = mean(crusingrange)");
predicate happens_before("salary >= meancrusingrange","meancrusingrange = mean(crusingrange)");
predicate happens_before("salary <= meancrusingrange","meancrusingrange = mean(crusingrange)");
predicate happens_before("crusingrange == meancrusingrange","meancrusingrange = mean(crusingrange)");
predicate happens_before("crusingrange > meancrusingrange","meancrusingrange = mean(crusingrange)");
predicate happens_before("crusingrange < meancrusingrange","meancrusingrange = mean(crusingrange)");
predicate happens_before("crusingrange >= meancrusingrange","meancrusingrange = mean(crusingrange)");
predicate happens_before("crusingrange <= meancrusingrange","meancrusingrange = mean(crusingrange)");
predicate happens_before("meansalary == meancrusingrange","meancrusingrange = mean(crusingrange)");
predicate happens_before("meansalary > meancrusingrange","meancrusingrange = mean(crusingrange)");
predicate happens_before("meansalary < meancrusingrange","meancrusingrange = mean(crusingrange)");
predicate happens_before("meansalary >= meancrusingrange","meancrusingrange = mean(crusingrange)");
predicate happens_before("meansalary <= meancrusingrange","meancrusingrange = mean(crusingrange)");
predicate is_not_parent(inner_join, inner_join3, 100);
predicate is_not_parent(inner_join, inner_join4, 100);
#predicate is_not_parent(inner_join, anti_join, 100);
predicate is_not_parent(inner_join3, inner_join, 100);
predicate is_not_parent(inner_join3, inner_join3, 100);
predicate is_not_parent(inner_join3, inner_join4, 100);
predicate is_not_parent(inner_join3, anti_join, 100);
predicate is_not_parent(inner_join4, inner_join, 100);
predicate is_not_parent(inner_join4, inner_join3, 100);
predicate is_not_parent(inner_join4, inner_join4, 100);
#predicate is_not_parent(inner_join4, anti_join, 100);
predicate is_not_parent(anti_join, anti_join, 100);
predicate is_not_parent(anti_join, inner_join, 100);
predicate is_not_parent(anti_join, inner_join4, 100);
predicate distinct_inputs(inner_join4);
predicate distinct_inputs(inner_join3);
predicate distinct_inputs(inner_join);
predicate distinct_inputs(anti_join);

Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
Joining, by = c("aid", "aname", "crusingrange")
