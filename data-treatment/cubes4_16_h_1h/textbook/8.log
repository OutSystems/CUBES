[     2.937][MainProcess][INFO] Parsing specification...
[     2.942][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     2.942][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     2.942][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     2.943][MainProcess][DEBUG] Reading input files...
[     2.953][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/8-1.txt: ['string', 'string', 'int64']
[     2.958][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/8.out: ['string', 'int64']
[     2.986][MainProcess][DEBUG] Generating DSL...
[     3.010][MainProcess][INFO] Creating 16 processes
[     3.104][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.104][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.104][MainProcess][DEBUG] Increasing generator loc to 3
[     3.104][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.104][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.105][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     3.106][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     3.106][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     3.106][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     3.106][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     3.106][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     3.114][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     3.116][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     3.119][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     3.149][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     3.151][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     3.155][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     3.398][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     3.458][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     3.509][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     3.513][cube-solver-11][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     3.514][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     3.518][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     3.520][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     3.523][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     3.525][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     3.540][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     3.547][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     3.550][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     3.558][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     3.559][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     3.562][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     3.565][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     3.569][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     3.572][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     3.646][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = mutate())
[     3.653][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter([4]), l2 = anti_join())
[     3.723][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([7]))
[     3.731][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = filter([7]), l2 = left_join())
[     3.832][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([9]), l2 = mutate())
[     3.841][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter([9]), l2 = union())
[     3.907][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([9]), l2 = summarise())
[     3.913][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([9]))
[     3.919][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter([9]))
[     3.920][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter([9]), l2 = intersect())
[     3.928][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter([9]), l2 = semi_join())
[     3.929][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter([9]), l2 = cross_join())
[     3.939][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([9]), l2 = summarise())
[     3.950][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter([9]), l2 = mutate())
[     4.025][cube-solver-0][DEBUG] Found solution with cube (l0 = summarise(), l1 = filter())
[     4.027][MainProcess][INFO] Statistics:
[     4.027][MainProcess][INFO] 	Generated cubes: 32
[     4.027][MainProcess][INFO] 	Attempted programs: 44
[     4.028][MainProcess][INFO] 		Rejected: 1
[     4.028][MainProcess][INFO] 		Failed: 42
[     4.028][MainProcess][INFO] 	Blacklist clauses: 9
[     4.028][MainProcess][DEBUG] Priting statistics for good programs of size 2
[     4.029][MainProcess][DEBUG] 	0: Counter({'filter': 90, 'mutate': 39, 'summarise': 5})
[     4.029][MainProcess][DEBUG] 	1: Counter({'summarise': 49, 'filter': 45, 'mutate': 41})
[     4.029][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     4.030][MainProcess][DEBUG] 	0: Counter({'summarise': 96})
[     4.030][MainProcess][DEBUG] 	1: Counter({'filter': 58, 'natural_join': 38})
[     4.030][MainProcess][DEBUG] 	2: Counter({'filter': 61, 'natural_join3': 15, 'union': 12, 'anti_join': 5, 'semi_join': 3})
[     4.030][MainProcess][INFO] Solution found: filter(summarise(@param0, meanage = mean(age), level), level != 'JR')
[     4.394][cube-solver-1][DEBUG] Found solution with cube (l0 = filter(), l1 = summarise())

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/8-1.txt", col_types = cols(S_key = col_character(),level = col_character(),age = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/textbook/tables/8.out", col_types = cols(level = col_character(),meanage = col_integer()))

df2 <- input1 %>% group_by(level) %>% summarise(meanage = mean(age)) %>% ungroup()
df3 <- df2 %>% filter(level != 'JR')
out <- df3 %>% select(level, meanage) %>% arrange(level)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `level`,
       `meanage`
FROM
  (SELECT `level`,
          AVG(`age`) AS `meanage`
   FROM `input1`
   GROUP BY `level`)
WHERE (`level` != 'JR')
ORDER BY LEVEL
