[     2.836][MainProcess][INFO] Parsing specification...
[     2.840][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     2.840][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     2.841][MainProcess][DEBUG] Reading input files...
[     2.849][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/4-1.txt: ['string', 'string']
[     2.853][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/4-2.txt: ['string', 'string']
[     2.858][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/4-3.txt: ['string', 'string']
[     2.862][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/4.out: ['string']
[     2.894][MainProcess][DEBUG] Generating DSL...
[     2.918][MainProcess][INFO] Creating 16 processes
[     2.985][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.985][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     2.985][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     2.986][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.986][MainProcess][DEBUG] Increasing generator loc to 3
[     2.987][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     2.987][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     2.988][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     2.992][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     2.996][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     3.004][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     3.012][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     3.012][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     3.013][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     3.013][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     3.026][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     3.038][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     3.369][cube-solver-2][WARNING] There is no solution for current loc (2).
[     3.370][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     3.372][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     3.459][cube-solver-3][WARNING] There is no solution for current loc (2).
[     3.460][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     3.462][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     3.506][cube-solver-0][WARNING] There is no solution for current loc (2).
[     3.507][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     3.508][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     3.620][cube-solver-1][WARNING] There is no solution for current loc (2).
[     3.621][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     3.622][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     3.672][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     3.678][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     3.680][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     3.682][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     3.682][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     3.685][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     3.687][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     3.690][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     3.691][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     3.693][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     3.694][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     3.694][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     3.695][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     3.696][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     3.697][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     3.699][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     3.700][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     3.700][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     3.700][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     3.702][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = inner_join())
[     3.703][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter())
[     3.703][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter())
[     3.704][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter())
[     3.704][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     3.706][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter())
[     3.706][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join(), l2 = filter())
[     3.706][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join(), l2 = filter())
[     3.708][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter())
[     3.709][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join(), l2 = filter())
[     3.709][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise())
[     3.709][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     3.710][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise())
[     3.711][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     3.711][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise())
[     3.711][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     3.711][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     3.712][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join())
[     3.713][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join3())
[     3.713][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join4())
[     3.713][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = summarise())
[     3.714][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = filter())
[     3.715][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = anti_join())
[     3.715][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = left_join())
[     3.715][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = union())
[     3.716][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = intersect())
[     3.717][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = cross_join())
[     3.717][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = semi_join())
[     3.717][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = mutate())
[     3.718][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = inner_join())
[     3.719][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise())
[     3.719][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     3.719][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise())
[     3.720][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     3.721][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise())
[     3.721][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     3.721][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise())
[     3.722][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     3.723][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     3.724][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     3.724][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise())
[     3.724][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise())
[     3.725][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     3.725][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise())
[     3.726][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     3.727][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join4())
[     3.727][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3())
[     3.727][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise())
[     3.728][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = filter())
[     3.729][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = anti_join())
[     3.729][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = left_join())
[     3.730][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = union())
[     3.730][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = semi_join())
[     3.730][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = intersect())
[     3.731][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = cross_join())
[     3.732][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = inner_join())
[     3.732][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[     3.733][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = summarise())
[     3.733][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise(), l2 = filter())
[     3.733][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = mutate())
[     3.734][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = summarise())
[     3.735][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter())
[     3.735][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = mutate())
[     3.735][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = summarise(), l2 = filter())
[     3.736][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = summarise())
[     3.737][cube-solver-15][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter())
[     3.737][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = mutate())
[     3.738][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = summarise(), l2 = filter())
[     3.739][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = summarise())
[     3.739][cube-solver-15][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = mutate())
[     3.740][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter())
[     3.740][cube-solver-13][DEBUG] Solving cube (l0 = intersect(), l1 = summarise(), l2 = filter())
[     3.741][cube-solver-15][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = summarise())
[     3.741][cube-solver-10][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = mutate())
[     3.741][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter())
[     3.742][cube-solver-13][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise(), l2 = filter())
[     3.743][cube-solver-15][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = mutate())
[     3.743][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = summarise())
[     3.744][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter())
[     3.744][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise(), l2 = filter())
[     3.745][cube-solver-15][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = mutate())
[     3.745][cube-solver-13][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = summarise())
[     3.746][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter())
[     3.747][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter())
[     3.747][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter())
[     3.748][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter())
[     3.748][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = summarise(), l2 = filter())
[     3.749][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join())
[     3.750][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join3())
[     3.751][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join4())
[     3.752][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise())
[     3.754][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = filter())
[     3.756][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = anti_join())
[     3.758][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = left_join())
[     3.760][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = union())
[     3.762][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = intersect())
[     3.764][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = semi_join())
[     3.766][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = cross_join())
[     3.769][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = mutate())
[     3.772][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = inner_join())
[     3.774][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([2]))
[     3.777][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([2]))
[     3.780][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([2]))
[     3.782][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([2]))
[     3.785][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([3]))
[     3.788][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([3]))
[     3.791][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([3]))
[     3.794][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([3]))
[     3.797][cube-solver-15][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise(), l2 = filter([3]))
[     3.800][cube-solver-15][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([3]), l2 = summarise())
[     3.803][cube-solver-15][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([3]), l2 = mutate())
[     3.807][cube-solver-15][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([3]))
[     3.809][MainProcess][DEBUG] Increasing generator loc to 4
[     3.810][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     3.838][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([3]), l2 = mutate())
[     3.844][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([3]), l2 = summarise())
[     3.846][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     3.852][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[     4.104][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([7]), l2 = summarise([13]))
[     4.121][cube-solver-2][DEBUG] Solving cube (l0 = summarise([13]), l1 = natural_join(), l2 = filter([7]))
[     4.122][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     4.139][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     4.390][cube-solver-3][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join3([2]), l2 = filter([9]))
[     4.391][cube-solver-1][DEBUG] Solving cube (l0 = summarise([16]), l1 = summarise([16]), l2 = filter([9]))
[     4.423][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     4.476][cube-solver-0][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join4(), l2 = filter([9]))
[     4.488][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     4.757][cube-solver-8][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     4.758][MainProcess][INFO] Statistics:
[     4.758][MainProcess][INFO] 	Generated cubes: 149
[     4.758][MainProcess][INFO] 	Attempted programs: 30
[     4.758][MainProcess][INFO] 		Rejected: 14
[     4.758][MainProcess][INFO] 		Failed: 15
[     4.758][MainProcess][INFO] 	Blacklist clauses: 27
[     4.759][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     4.759][MainProcess][DEBUG] 	0: Counter({'mutate': 300, 'natural_join3': 170, 'summarise': 108})
[     4.760][MainProcess][DEBUG] 	1: Counter({'filter': 217, 'natural_join4': 101, 'mutate': 96, 'natural_join3': 90, 'summarise': 75})
[     4.760][MainProcess][DEBUG] 	2: Counter({'filter': 362, 'natural_join4': 110, 'natural_join3': 107})
[     4.760][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param2, @param1, @param0), n = n(), S_name, meets_at), n >= 2)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/4-1.txt", col_types = cols(C_name = col_character(),meets_at = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/4-2.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/4-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/4.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input3, input2) %>% inner_join(input1)
df5 <- df4 %>% group_by(S_name, meets_at) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n >= 2)
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT S_name,
          meets_at,
          COUNT() AS n
   FROM
     (SELECT LHS.S_key AS S_key,
             LHS.S_name AS S_name,
             LHS.C_name AS C_name,
             RHS.meets_at AS meets_at
      FROM
        (SELECT LHS.S_key AS S_key,
                LHS.S_name AS S_name,
                RHS.C_name AS C_name
         FROM input3 AS LHS
         INNER JOIN input2 AS RHS ON (LHS.S_key = RHS.S_key)) AS LHS
      INNER JOIN input1 AS RHS ON (LHS.C_name = RHS.C_name))
   GROUP BY S_name,
            meets_at)
WHERE (n >= 2.0)
ORDER BY S_name
