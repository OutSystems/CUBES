[     1.560][MainProcess][INFO] Parsing specification...
[     1.564][MainProcess][DEBUG] Reading input files...
[     1.571][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15-1.txt: ['string', 'string']
[     1.576][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15-2.txt: ['string', 'string']
[     1.580][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15-3.txt: ['string', 'string']
[     1.584][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15.out: ['string']
[     1.613][MainProcess][DEBUG] Generating DSL...
[     1.635][MainProcess][INFO] Creating 16 processes
[     1.717][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.718][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.718][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.718][MainProcess][DEBUG] Increasing generator loc to 3
[     1.718][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.719][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.719][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.719][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.722][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.723][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.730][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.744][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.749][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.750][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.754][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.768][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.780][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.124][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.125][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.127][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.193][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.194][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.195][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.282][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.282][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.284][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.375][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.376][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.378][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.466][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.481][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.485][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.488][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.488][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.492][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.495][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.495][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.495][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.497][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.498][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.499][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.500][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.502][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     2.504][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     2.504][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     2.505][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     2.507][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     2.508][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter())
[     2.508][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = inner_join())
[     2.509][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     2.509][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter())
[     2.511][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter())
[     2.512][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join(), l2 = filter())
[     2.513][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter())
[     2.513][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join(), l2 = filter())
[     2.513][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter())
[     2.514][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join(), l2 = filter())
[     2.517][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise())
[     2.517][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     2.517][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     2.517][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise())
[     2.519][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise())
[     2.520][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join())
[     2.520][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     2.520][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join3())
[     2.521][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join4())
[     2.523][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = summarise())
[     2.523][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = filter())
[     2.523][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = anti_join())
[     2.524][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = left_join())
[     2.524][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = union())
[     2.526][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = mutate())
[     2.527][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = intersect())
[     2.527][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = semi_join())
[     2.527][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = cross_join())
[     2.528][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = inner_join())
[     2.530][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise([1]))
[     2.530][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     2.530][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     2.530][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise([1]))
[     2.532][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise([1]))
[     2.534][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     2.534][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     2.534][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise([1]))
[     2.535][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise([1]))
[     2.537][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     2.537][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     2.537][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise([1]))
[     2.539][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise([1]))
[     2.539][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     2.540][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     2.541][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join4())
[     2.541][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3([1]))
[     2.543][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = filter())
[     2.543][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise([2]))
[     2.544][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = anti_join())
[     2.545][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = union())
[     2.545][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = left_join())
[     2.547][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = semi_join())
[     2.547][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = intersect())
[     2.548][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = cross_join())
[     2.548][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[     2.549][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = inner_join())
[     2.550][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = mutate())
[     2.550][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = summarise([3]))
[     2.551][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([3]), l2 = filter())
[     2.552][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = summarise([3]))
[     2.552][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = mutate())
[     2.554][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter())
[     2.556][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = summarise([3]))
[     2.556][cube-solver-14][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([3]), l2 = filter())
[     2.558][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = mutate())
[     2.558][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter())
[     2.560][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = summarise([3]), l2 = filter())
[     2.561][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = summarise([3]))
[     2.561][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = mutate())
[     2.563][cube-solver-14][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter())
[     2.564][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([3]), l2 = filter())
[     2.565][cube-solver-10][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = summarise([3]))
[     2.566][cube-solver-14][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = mutate())
[     2.567][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter())
[     2.568][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([3]), l2 = filter())
[     2.569][cube-solver-14][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = summarise([3]))
[     2.570][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([1]), l2 = mutate())
[     2.572][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([3]), l2 = filter([1]))
[     2.571][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([1]))
[     2.574][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([1]), l2 = summarise([3]))
[     2.575][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([1]))
[     2.575][cube-solver-14][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([1]), l2 = mutate())
[     2.576][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([1]))
[     2.578][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([1]), l2 = filter([1]))
[     2.580][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([1]))
[     2.580][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([3]), l2 = filter([1]))
[     2.580][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = natural_join())
[     2.582][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([1]), l2 = summarise([4]))
[     2.584][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = natural_join3([1]))
[     2.586][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join4())
[     2.591][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = summarise([4]))
[     2.600][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = filter([2]))
[     2.606][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = anti_join())
[     2.611][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = left_join())
[     2.616][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = union())
[     2.621][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = intersect())
[     2.626][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = semi_join())
[     2.631][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = cross_join())
[     2.636][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = mutate())
[     2.640][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = inner_join())
[     2.646][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([3]))
[     2.649][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = mutate(), l2 = filter([3]))
[     2.651][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([3]))
[     2.657][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([3]))
[     2.662][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([4]))
[     2.667][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([4]))
[     2.673][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([4]))
[     2.680][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([4]))
[     2.686][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([4]))
[     2.692][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([9]), l2 = filter([4]))
[     2.711][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = summarise([10]))
[     2.726][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = mutate())
[     2.731][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([4]))
[     2.736][MainProcess][DEBUG] Increasing generator loc to 4
[     2.737][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     2.931][cube-solver-2][DEBUG] Solving cube (l0 = summarise([13]), l1 = natural_join(), l2 = filter([4]))
[     2.942][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     2.969][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([7]))
[     2.979][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     3.105][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([17]))
[     3.106][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([14]), l2 = filter([17]))
[     3.112][cube-solver-0][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join4(), l2 = filter([17]))
[     3.119][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     3.130][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[     3.136][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     3.286][cube-solver-1][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join3([2]), l2 = filter([17]))
[     3.513][cube-solver-3][DEBUG] Solving cube (l0 = summarise([17]), l1 = summarise([17]), l2 = filter([18]))
[     3.552][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     3.895][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([18]), l2 = natural_join(), l3 = filter([19]))
[     4.091][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([18]), l2 = natural_join3([2]), l3 = filter([20]))
[     4.104][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([18]), l2 = natural_join4(), l3 = filter([21]))
[     4.122][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([18]), l2 = filter([21]), l3 = summarise([18]))
[     4.147][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([18]), l2 = filter([22]), l3 = filter([22]))
[     4.170][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([18]), l2 = filter([22]), l3 = anti_join())
[     4.246][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([18]), l2 = filter([23]), l3 = natural_join3([2]))
[     4.383][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = filter([24]), l3 = natural_join([2]))
[     4.388][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = summarise([19]), l3 = filter([24]))
[     4.435][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = filter([24]), l3 = left_join())
[     4.832][cube-solver-7][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = filter([24]), l3 = left_join())
[     4.832][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = filter([24]), l3 = natural_join4())
[     4.833][MainProcess][INFO] Statistics:
[     4.833][MainProcess][INFO] 	Generated cubes: 153
[     4.834][MainProcess][INFO] 	Attempted programs: 13
[     4.834][MainProcess][INFO] 		Rejected: 0
[     4.834][MainProcess][INFO] 		Failed: 12
[     4.834][MainProcess][INFO] 	Blacklist clauses: 47
[     4.834][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     4.835][MainProcess][DEBUG] 	0: Counter({'mutate': 601, 'natural_join3': 251, 'summarise': 210})
[     4.836][MainProcess][DEBUG] 	1: Counter({'natural_join3': 308, 'filter': 283, 'natural_join4': 220, 'mutate': 213, 'summarise': 38})
[     4.836][MainProcess][DEBUG] 	2: Counter({'filter': 780, 'natural_join3': 150, 'natural_join4': 133})
[     4.837][MainProcess][DEBUG] Priting statistics for good programs of size 4
[     4.837][MainProcess][DEBUG] 	0: Counter({'natural_join': 119})
[     4.837][MainProcess][DEBUG] 	1: Counter({'summarise': 119})
[     4.837][MainProcess][DEBUG] 	2: Counter({'natural_join': 63, 'natural_join3': 30, 'filter': 26})
[     4.837][MainProcess][DEBUG] 	3: Counter({'filter': 93, 'natural_join3': 11, 'natural_join': 8, 'left_join': 7})
[     4.837][MainProcess][INFO] Solution found: left_join(filter(summarise(natural_join(@param0, @param1), n = n(), S_key, color), color == 'red' & n == max(n)), @param2)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/15-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/15-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/15-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/15.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input2)
df5 <- df4 %>% group_by(S_key, color) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(color == 'red' & n == max(n))
df7 <- left_join(df6, input3)
out <- df7 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `LHS`.`S_key` AS `S_key`,
          `LHS`.`color` AS `color`,
          `LHS`.`n` AS `n`,
          `RHS`.`S_name` AS `S_name`
   FROM
     (SELECT `S_key`,
             `color`,
             `n`
      FROM
        (SELECT `S_key`,
                `color`,
                `n`,
                MAX(`n`) OVER () AS `zzz4`
         FROM
           (SELECT `S_key`,
                   `color`,
                   COUNT() AS `n`
            FROM
              (SELECT `LHS`.`S_key` AS `S_key`,
                      `LHS`.`P_id` AS `P_id`,
                      `RHS`.`color` AS `color`
               FROM `input1` AS `LHS`
               INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
            GROUP BY `S_key`,
                     `color`))
      WHERE (`color` = 'red'
             AND n = zzz4)) AS LHS
   LEFT JOIN input3 AS RHS ON (LHS.S_key = RHS.S_key))
ORDER BY S_name
