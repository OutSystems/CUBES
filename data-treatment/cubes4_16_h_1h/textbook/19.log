[     3.123][MainProcess][INFO] Parsing specification...
[     3.127][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.127][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     3.128][MainProcess][DEBUG] Reading input files...
[     3.137][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/19-1.txt: ['string', 'string']
[     3.142][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/19-2.txt: ['string', 'string']
[     3.147][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/19-3.txt: ['string', 'string']
[     3.151][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/19.out: ['string']
[     3.183][MainProcess][DEBUG] Generating DSL...
[     3.204][MainProcess][INFO] Creating 16 processes
[     3.289][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     3.289][MainProcess][DEBUG] Increasing generator loc to 2
[     3.290][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.290][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     3.290][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     3.290][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.291][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     3.291][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     3.290][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.294][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     3.300][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     3.307][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     3.317][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     3.318][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     3.327][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     3.329][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     3.343][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     3.537][cube-solver-0][WARNING] There is no solution for current loc (1).
[     3.537][cube-solver-0][DEBUG] Solving cube (l0 = filter(),)
[     3.538][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.619][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = filter())
[     3.621][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = intersect())
[     3.622][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter())
[     3.623][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter())
[     3.625][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = filter())
[     3.625][cube-solver-11][DEBUG] Solving cube (l0 = semi_join(), l1 = filter())
[     3.626][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = filter())
[     3.627][MainProcess][DEBUG] Increasing generator loc to 3
[     3.627][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     3.628][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     3.629][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter())
[     3.637][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = left_join())
[     3.640][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     3.645][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = filter())
[     3.646][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter())
[     3.649][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     3.649][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     3.657][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = cross_join())
[     3.657][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter())
[     3.659][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     3.661][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     3.678][cube-solver-8][DEBUG] Solving cube (l0 = filter(), l1 = anti_join())
[     3.682][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     3.690][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = inner_join())
[     3.694][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     3.756][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = semi_join())
[     3.761][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     3.850][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4())
[     3.865][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = union())
[     3.870][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     3.887][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join3())
[     3.887][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join())
[     3.892][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     4.033][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]))
[     4.039][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     4.257][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([4]), l2 = anti_join())
[     4.303][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([4]), l2 = cross_join())
[     4.312][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([4]), l2 = natural_join3([2]))
[     4.335][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     4.386][cube-solver-9][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([4]), l2 = natural_join4())
[     4.414][cube-solver-10][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([4]), l2 = inner_join())
[     4.421][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([4]), l2 = filter([4]))
[     4.431][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([4]), l2 = left_join())
[     4.432][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = intersect(), l2 = filter([4]))
[     4.459][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([4]), l2 = union())
[     4.460][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([4]), l2 = intersect())
[     4.477][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([4]), l2 = natural_join([2]))
[     4.491][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([4]), l2 = semi_join())
[     4.665][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = left_join(), l2 = filter([4]))
[     4.713][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     4.713][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = anti_join(), l2 = filter([4]))
[     4.722][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = cross_join(), l2 = filter([4]))
[     4.819][cube-solver-12][DEBUG] Solving cube (l0 = natural_join([2]), l1 = inner_join(), l2 = filter([4]))
[     4.819][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = union(), l2 = filter([4]))
[     5.089][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = natural_join([2]), l2 = filter([4]))
[     5.282][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = semi_join(), l2 = filter([4]))
[     5.410][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = natural_join3([2]), l2 = filter([4]))
[     5.416][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = natural_join4(), l2 = filter([4]))
[     5.420][cube-solver-14][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = natural_join([2]))
[     5.674][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = natural_join3([2]))
[     5.774][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = natural_join4())
[     5.790][cube-solver-5][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = filter([4]))
[     6.029][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = anti_join())
[     6.160][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = left_join())
[     6.218][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = union())
[     6.412][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = intersect())
[     6.521][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = semi_join())
[     6.638][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = cross_join())
[     6.927][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     6.928][cube-solver-5][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = anti_join(), l2 = filter([4]))
[     7.487][cube-solver-6][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = inner_join())
[     8.083][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = left_join(), l2 = filter([4]))
[     8.347][cube-solver-15][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = union(), l2 = filter([4]))
[     8.672][cube-solver-7][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = intersect(), l2 = filter([4]))
[     8.805][cube-solver-14][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = semi_join(), l2 = filter([4]))
[    11.525][cube-solver-14][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = cross_join(), l2 = filter([4]))
[    11.964][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = inner_join(), l2 = filter([4]))
[    12.025][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = natural_join([2]), l2 = filter([4]))
[    12.030][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = natural_join3([2]), l2 = filter([4]))
[    12.036][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = natural_join4(), l2 = filter([4]))
[    12.040][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = natural_join([2]))
[    12.044][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = natural_join3([2]))
[    12.048][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = natural_join4())
[    12.051][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = filter([4]))
[    12.056][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = anti_join())
[    12.059][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = left_join())
[    12.061][cube-solver-9][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = union())
[    12.062][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = intersect())
[    12.065][cube-solver-9][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = semi_join())
[    12.065][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = cross_join())
[    12.068][cube-solver-9][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = inner_join())
[    12.069][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = anti_join(), l2 = filter([4]))
[    12.072][cube-solver-9][DEBUG] Solving cube (l0 = natural_join4(), l1 = left_join(), l2 = filter([4]))
[    12.072][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = union(), l2 = filter([4]))
[    12.075][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = intersect(), l2 = filter([4]))
[    12.075][cube-solver-9][DEBUG] Solving cube (l0 = natural_join4(), l1 = semi_join(), l2 = filter([4]))
[    12.080][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = cross_join(), l2 = filter([4]))
[    12.081][cube-solver-9][DEBUG] Solving cube (l0 = natural_join4(), l1 = inner_join(), l2 = filter([4]))
[    12.085][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join([2]), l2 = filter([4]))
[    12.087][cube-solver-9][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join3([2]), l2 = filter([4]))
[    12.091][cube-solver-4][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join4(), l2 = filter([4]))
[    12.094][cube-solver-9][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = filter([4]))
[    12.096][cube-solver-4][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = anti_join())
[    12.102][cube-solver-4][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = left_join())
[    12.103][cube-solver-9][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = union())
[    12.142][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = intersect())
[    12.342][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = semi_join())
[    12.453][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = cross_join())
[    12.583][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = inner_join())
[    12.859][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = natural_join([2]))
[    13.210][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = natural_join3([2]))
[    13.215][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join([2]), l2 = natural_join4())
[    13.219][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = filter([4]))
[    13.254][cube-solver-4][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = anti_join())
[    13.302][cube-solver-9][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = left_join())
[    14.057][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = union())
[    14.116][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = intersect())
[    14.118][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = semi_join())
[    14.375][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = cross_join())
[    14.823][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = inner_join())
[    16.236][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = natural_join([2]))
[    16.241][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = natural_join3([2]))
[    16.247][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join3([2]), l2 = natural_join4())
[    16.251][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = filter([4]))
[    17.026][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = anti_join())
[    17.030][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = left_join())
[    17.921][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = natural_join4(), l2 = union())
[    18.945][cube-solver-2][DEBUG] Found solution with cube (l0 = natural_join3([2]), l1 = filter([4]), l2 = anti_join())
[    18.947][MainProcess][INFO] Statistics:
[    18.948][MainProcess][INFO] 	Generated cubes: 111
[    18.948][MainProcess][INFO] 	Attempted programs: 3421
[    18.948][MainProcess][INFO] 		Rejected: 1345
[    18.948][MainProcess][INFO] 		Failed: 2075
[    18.948][MainProcess][INFO] 	Blacklist clauses: 8
[    18.948][MainProcess][DEBUG] Priting statistics for good programs of size 2
[    18.949][MainProcess][DEBUG] 	0: Counter({'filter': 288, 'natural_join3': 64})
[    18.950][MainProcess][DEBUG] 	1: Counter({'natural_join4': 224, 'filter': 64, 'natural_join3': 64})
[    18.950][MainProcess][DEBUG] Priting statistics for good programs of size 3
[    18.960][MainProcess][DEBUG] 	0: Counter({'natural_join3': 9734, 'filter': 3695, 'natural_join': 3384})
[    18.968][MainProcess][DEBUG] 	1: Counter({'filter': 9201, 'natural_join3': 2399, 'inner_join': 1378, 'anti_join': 916, 'natural_join': 870, 'left_join': 576, 'union': 576, 'natural_join4': 556, 'semi_join': 328, 'intersect': 16})
[    18.976][MainProcess][DEBUG] 	2: Counter({'filter': 4462, 'inner_join': 2298, 'natural_join4': 1920, 'left_join': 1726, 'union': 1596, 'anti_join': 1557, 'natural_join3': 1344, 'semi_join': 1205, 'natural_join': 640, 'intersect': 70})
[    18.976][MainProcess][INFO] Solution found: anti_join(natural_join3(@param0, @param2, @param1), filter(natural_join3(@param0, @param2, @param1), color != 'red'), 'S_name')

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/19-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/19-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/19-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/19.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input3) %>% inner_join(input2)
df5 <- df4 %>% filter(color != 'red')
df6 <- anti_join(df4, df5, by=c('S_name'))
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT *
   FROM
     (SELECT `LHS`.`S_key` AS `S_key`,
             `LHS`.`P_id` AS `P_id`,
             `LHS`.`S_name` AS `S_name`,
             `RHS`.`color` AS `color`
      FROM
        (SELECT `LHS`.`S_key` AS `S_key`,
                `LHS`.`P_id` AS `P_id`,
                `RHS`.`S_name` AS `S_name`
         FROM `input1` AS `LHS`
         INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`)) AS `LHS`
      INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)) AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM
             (SELECT `LHS`.`S_key` AS `S_key`,
                     `LHS`.`P_id` AS `P_id`,
                     `LHS`.`S_name` AS `S_name`,
                     `RHS`.`color` AS `color`
              FROM
                (SELECT `LHS`.`S_key` AS `S_key`,
                        `LHS`.`P_id` AS `P_id`,
                        `RHS`.`S_name` AS `S_name`
                 FROM `input1` AS `LHS`
                 INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`)) AS `LHS`
              INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
           WHERE (`color` != 'red')) AS RHS
        WHERE (LHS.S_name = RHS.S_name) ))
ORDER BY S_name
