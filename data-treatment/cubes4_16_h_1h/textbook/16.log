[     1.606][MainProcess][INFO] Parsing specification...
[     1.609][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.609][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.609][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.610][MainProcess][DEBUG] Reading input files...
[     1.617][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16-1.txt: ['string', 'string']
[     1.622][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16-2.txt: ['string', 'string']
[     1.627][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16-3.txt: ['string', 'string']
[     1.631][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16.out: ['string']
[     1.660][MainProcess][DEBUG] Generating DSL...
[     1.682][MainProcess][INFO] Creating 16 processes
[     1.742][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.743][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.743][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.743][MainProcess][DEBUG] Increasing generator loc to 3
[     1.743][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.744][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.746][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.749][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.757][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.761][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.761][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.765][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.769][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.773][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.785][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     1.787][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.798][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.166][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.167][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.168][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.265][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.265][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.267][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.269][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.270][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.271][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.332][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.333][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.334][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.422][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.424][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     2.427][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.427][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.428][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.431][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.435][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.438][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.442][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter([1]))
[     2.442][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([1]), l2 = summarise())
[     2.446][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter([1]))
[     2.448][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = summarise())
[     2.450][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = filter([1]))
[     2.453][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = anti_join())
[     2.453][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = left_join())
[     2.456][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = union())
[     2.458][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([1]))
[     2.459][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = semi_join())
[     2.459][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = intersect())
[     2.461][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = cross_join())
[     2.463][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = mutate())
[     2.465][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter([1]))
[     2.465][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = inner_join())
[     2.468][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter([1]))
[     2.468][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter([1]))
[     2.471][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter([1]))
[     2.472][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join(), l2 = filter([1]))
[     2.473][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join(), l2 = filter([1]))
[     2.476][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter([1]))
[     2.476][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([1]))
[     2.476][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join(), l2 = filter([1]))
[     2.477][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = summarise([1]))
[     2.480][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3([2]), l2 = summarise([2]))
[     2.480][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = mutate())
[     2.481][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3([2]), l2 = mutate())
[     2.484][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = summarise([2]))
[     2.485][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = mutate())
[     2.513][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([1]), l2 = mutate())
[     2.519][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([5]), l2 = natural_join())
[     2.528][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([5]), l2 = natural_join3([2]))
[     2.769][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = summarise([14]))
[     2.787][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([14]), l2 = natural_join4())
[     2.802][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([14]), l2 = summarise([14]))
[     2.803][cube-solver-1][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = filter([4]))
[     2.823][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([14]), l2 = filter([4]))
[     2.828][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([14]), l2 = anti_join())
[     2.841][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([14]), l2 = left_join())
[     2.846][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([14]), l2 = union())
[     2.859][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([14]), l2 = intersect())
[     2.862][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([14]), l2 = semi_join())
[     2.878][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([14]), l2 = cross_join())
[     2.880][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([14]), l2 = mutate())
[     2.893][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([14]), l2 = inner_join())
[     2.895][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = summarise([14]))
[     2.910][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = mutate())
[     2.913][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = summarise([14]))
[     2.918][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = mutate())
[     2.925][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = summarise([14]))
[     2.930][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = mutate())
[     2.936][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = summarise([14]))
[     2.941][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = mutate())
[     2.948][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = summarise([14]))
[     2.951][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = mutate())
[     2.957][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = summarise([15]))
[     2.963][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = mutate())
[     2.969][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = summarise([15]))
[     2.979][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = mutate())
[     2.982][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join())
[     2.985][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join3([2]))
[     2.989][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join4())
[     3.167][cube-solver-0][DEBUG] Solving cube (l0 = summarise([17]), l1 = summarise([17]), l2 = filter([4]))
[     3.176][cube-solver-3][DEBUG] Solving cube (l0 = summarise([17]), l1 = natural_join4(), l2 = filter([4]))
[     3.196][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = summarise([17]))
[     3.198][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = filter([4]))
[     3.206][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = anti_join())
[     3.211][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = left_join())
[     3.214][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = union())
[     3.214][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = intersect())
[     3.217][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = semi_join())
[     3.219][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = cross_join())
[     3.220][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = mutate())
[     3.222][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = inner_join())
[     3.225][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = summarise([19]))
[     3.225][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = mutate())
[     3.229][cube-solver-3][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([19]), l2 = filter([4]))
[     3.239][cube-solver-3][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = summarise([19]))
[     3.246][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = mutate())
[     3.249][cube-solver-3][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([4]))
[     3.253][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([19]), l2 = filter([4]))
[     3.254][cube-solver-3][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = summarise([19]))
[     3.265][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = mutate())
[     3.268][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([4]))
[     3.272][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = summarise([19]), l2 = filter([4]))
[     3.274][cube-solver-3][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = summarise([19]))
[     3.282][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = mutate())
[     3.284][cube-solver-3][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([4]))
[     3.286][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([19]), l2 = filter([4]))
[     3.288][cube-solver-3][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = summarise([19]))
[     3.291][cube-solver-2][DEBUG] Solving cube (l0 = summarise([19]), l1 = natural_join3([2]), l2 = filter([4]))
[     3.295][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = mutate())
[     3.298][cube-solver-3][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([4]))
[     3.299][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([19]), l2 = filter([4]))
[     3.302][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = summarise([19]))
[     3.309][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = mutate())
[     3.312][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([4]))
[     3.313][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([19]), l2 = filter([4]))
[     3.315][cube-solver-3][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = summarise([19]))
[     3.324][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = mutate())
[     3.327][cube-solver-3][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([4]))
[     3.328][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([4]))
[     3.331][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([2]), l2 = filter([4]))
[     3.331][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([4]))
[     3.554][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([19]), l2 = filter([4]))
[     3.554][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join())
[     3.567][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join3([2]))
[     3.568][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join4())
[     3.811][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = summarise([20]))
[     3.827][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = filter([4]))
[     3.834][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = anti_join())
[     3.839][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = left_join())
[     3.844][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = union())
[     3.849][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = intersect())
[     3.853][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = semi_join())
[     3.858][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = cross_join())
[     3.863][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = mutate())
[     3.867][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = inner_join())
[     3.873][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([4]))
[     3.877][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([4]))
[     3.882][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([4]))
[     3.887][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([4]))
[     3.892][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([4]))
[     3.896][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([4]))
[     3.901][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([4]))
[     3.905][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([4]))
[     3.910][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([20]), l2 = filter([4]))
[     3.925][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = summarise([20]))
[     3.940][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = mutate())
[     3.945][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([4]))
[     3.948][MainProcess][DEBUG] Increasing generator loc to 4
[     3.949][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     5.062][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([4]))
[     5.229][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     5.482][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     5.988][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     5.988][cube-solver-8][DEBUG] Initialising process for 4 lines of code.
[     6.236][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     6.269][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([4]))
[     6.486][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([4]))
[     6.502][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join4())
[     7.046][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([4]))
[     7.047][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join([2]))
[     7.082][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = summarise([21]))
[     7.104][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = filter([4]))
[     7.120][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[     7.276][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     7.313][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join3([2]))
[     7.442][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[     8.284][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = left_join())
[     8.443][cube-solver-9][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = union())
[     9.433][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[    10.485][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = intersect())
[    11.893][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[    12.314][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[    12.904][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = semi_join())
[    13.323][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = cross_join())
[    13.863][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = mutate())
[    13.881][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = inner_join())
[    15.801][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = anti_join(), l3 = filter([4]))
[    16.606][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[    17.073][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = union(), l3 = filter([4]))
[    17.453][cube-solver-11][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[    17.455][MainProcess][INFO] Statistics:
[    17.455][MainProcess][INFO] 	Generated cubes: 162
[    17.455][MainProcess][INFO] 	Attempted programs: 4336
[    17.455][MainProcess][INFO] 		Rejected: 707
[    17.456][MainProcess][INFO] 		Failed: 3628
[    17.456][MainProcess][INFO] 	Blacklist clauses: 29
[    17.456][MainProcess][DEBUG] Priting statistics for good programs of size 3
[    17.462][MainProcess][DEBUG] 	0: Counter({'filter': 3868, 'mutate': 2871, 'summarise': 1008, 'natural_join3': 752})
[    17.467][MainProcess][DEBUG] 	1: Counter({'filter': 2871, 'natural_join4': 2124, 'mutate': 1920, 'natural_join3': 1040, 'summarise': 544})
[    17.473][MainProcess][DEBUG] 	2: Counter({'natural_join4': 3432, 'filter': 1760, 'summarise': 1717, 'natural_join3': 1152, 'mutate': 440})
[    17.473][MainProcess][DEBUG] Priting statistics for good programs of size 4
[    17.476][MainProcess][DEBUG] 	0: Counter({'natural_join': 4375})
[    17.479][MainProcess][DEBUG] 	1: Counter({'summarise': 4375})
[    17.482][MainProcess][DEBUG] 	2: Counter({'filter': 2999, 'natural_join3': 860, 'natural_join': 464, 'union': 32, 'anti_join': 20})
[    17.485][MainProcess][DEBUG] 	3: Counter({'filter': 1376, 'union': 764, 'natural_join4': 550, 'natural_join': 464, 'left_join': 464, 'natural_join3': 442, 'semi_join': 168, 'anti_join': 117, 'inner_join': 30})
[    17.485][MainProcess][INFO] Solution found: anti_join(summarise(@param1, n = n(), P_id, P_name), filter(natural_join(@param2, @param0), S_name != 'AWS'), 'P_id')

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/16-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/16-2.txt", col_types = cols(P_id = col_character(),P_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/16-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/16.out", col_types = cols(P_name = col_character()))

df4 <- input2 %>% group_by(P_id, P_name) %>% summarise(n = n()) %>% ungroup()
df5 <- inner_join(input3, input1)
df6 <- df5 %>% filter(S_name != 'AWS')
df7 <- anti_join(df4, df6, by=c('P_id'))
out <- df7 %>% select(P_name) %>% arrange(P_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `P_name`
FROM
  (SELECT *
   FROM
     (SELECT `P_id`,
             `P_name`,
             COUNT() AS `n`
      FROM `input2`
      GROUP BY `P_id`,
               `P_name`) AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM
             (SELECT `LHS`.`S_key` AS `S_key`,
                     `LHS`.`S_name` AS `S_name`,
                     `RHS`.`P_id` AS `P_id`
              FROM `input3` AS `LHS`
              INNER JOIN `input1` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
           WHERE (`S_name` != 'AWS')) AS RHS
        WHERE (LHS.P_id = RHS.P_id) ))
ORDER BY P_name
