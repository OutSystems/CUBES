[     1.573][MainProcess][INFO] Parsing specification...
[     1.576][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.576][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.576][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.577][MainProcess][DEBUG] Reading input files...
[     1.583][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-1.txt: ['string', 'string']
[     1.586][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-2.txt: ['string', 'string']
[     1.589][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-3.txt: ['string', 'string']
[     1.593][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/34.out: ['string']
[     1.622][MainProcess][DEBUG] Generating DSL...
[     1.646][MainProcess][INFO] Creating 16 processes
[     1.711][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.711][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.711][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.712][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.711][MainProcess][DEBUG] Increasing generator loc to 3
[     1.713][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.715][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.718][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.721][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.725][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.730][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.734][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.739][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.741][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.742][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.758][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     1.767][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.176][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.176][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.178][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.225][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.226][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.227][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.268][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.268][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.271][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.403][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.404][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.406][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.599][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.601][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     2.604][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.606][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.608][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.611][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.615][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.618][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.621][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.622][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.623][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.624][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.625][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.626][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.628][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     2.628][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     2.629][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     2.630][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     2.630][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.632][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = inner_join())
[     2.632][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     2.632][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.634][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter())
[     2.634][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter())
[     2.634][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.636][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter())
[     2.636][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter())
[     2.637][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join(), l2 = filter())
[     2.638][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join(), l2 = filter())
[     2.639][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join(), l2 = filter())
[     2.639][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter())
[     2.640][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise())
[     2.641][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     2.642][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise())
[     2.642][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     2.643][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise())
[     2.643][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     2.643][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.645][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join())
[     2.645][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join3())
[     2.646][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = natural_join4())
[     2.647][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = summarise([1]))
[     2.648][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = left_join())
[     2.648][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = filter())
[     2.648][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = anti_join())
[     2.649][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = union())
[     2.650][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = intersect())
[     2.650][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = cross_join())
[     2.651][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = semi_join())
[     2.653][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = mutate())
[     2.653][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = inner_join())
[     2.653][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     2.654][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise([1]))
[     2.655][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise([1]))
[     2.655][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise([1]))
[     2.656][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     2.656][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     2.658][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise([1]))
[     2.658][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise([1]))
[     2.658][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     2.659][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     2.660][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise([1]))
[     2.660][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     2.660][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise([1]))
[     2.662][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     2.663][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join4())
[     2.663][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     2.663][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise([2]))
[     2.664][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3([1]))
[     2.665][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = filter())
[     2.665][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = anti_join())
[     2.667][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = union())
[     2.667][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = left_join())
[     2.667][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = intersect())
[     2.668][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = semi_join())
[     2.669][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = cross_join())
[     2.670][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[     2.670][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = mutate())
[     2.670][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = summarise([2]))
[     2.671][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([2]), l2 = filter())
[     2.671][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = summarise([2]))
[     2.673][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = mutate())
[     2.674][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter())
[     2.674][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([3]), l2 = filter())
[     2.675][cube-solver-15][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = summarise([3]))
[     2.675][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = mutate())
[     2.676][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter())
[     2.676][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = summarise([3]), l2 = filter())
[     2.678][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = mutate())
[     2.678][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter())
[     2.678][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = summarise([3]))
[     2.678][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = inner_join())
[     2.679][cube-solver-15][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([3]), l2 = filter())
[     2.680][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = mutate())
[     2.680][cube-solver-13][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = summarise([3]))
[     2.680][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter())
[     2.682][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([4]), l2 = filter())
[     2.682][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = summarise([4]))
[     2.683][cube-solver-15][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = mutate())
[     2.685][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter())
[     2.685][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter())
[     2.686][cube-solver-15][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = mutate())
[     2.686][cube-solver-13][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = summarise([4]))
[     2.687][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter())
[     2.688][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([2]), l2 = filter())
[     2.685][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([4]), l2 = filter())
[     2.688][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter())
[     2.689][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([4]), l2 = filter())
[     2.691][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join())
[     2.691][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join3([2]))
[     2.692][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join4())
[     2.693][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise([4]))
[     2.697][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = filter())
[     2.698][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = anti_join())
[     2.699][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = left_join())
[     2.701][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = union())
[     2.701][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = intersect())
[     2.703][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = cross_join())
[     2.704][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = mutate())
[     2.704][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = semi_join())
[     2.705][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = inner_join())
[     2.706][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter())
[     2.707][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter())
[     2.707][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter())
[     2.708][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter())
[     2.709][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter())
[     2.709][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter())
[     2.711][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter())
[     2.711][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter())
[     2.712][cube-solver-12][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([5]), l2 = filter())
[     2.713][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = filter(), l2 = summarise([5]))
[     2.714][cube-solver-10][DEBUG] Solving cube (l0 = inner_join(), l1 = filter(), l2 = mutate())
[     2.717][cube-solver-12][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([1]))
[     2.717][MainProcess][DEBUG] Increasing generator loc to 4
[     2.718][cube-solver-10][DEBUG] Initialising process for 4 lines of code.
[     2.718][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     2.719][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[     2.872][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([9]), l2 = mutate())
[     2.879][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     3.071][cube-solver-1][DEBUG] Solving cube (l0 = summarise([20]), l1 = natural_join(), l2 = filter([9]))
[     3.091][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     3.278][cube-solver-3][DEBUG] Solving cube (l0 = summarise([20]), l1 = natural_join3([2]), l2 = filter([15]))
[     3.400][cube-solver-2][DEBUG] Solving cube (l0 = summarise([20]), l1 = natural_join4(), l2 = filter([24]))
[     3.420][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     3.475][cube-solver-0][DEBUG] Solving cube (l0 = summarise([20]), l1 = summarise([20]), l2 = filter([24]))
[     3.520][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     4.030][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([31]))
[     4.031][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([31]))
[     4.054][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = filter([32]), l3 = summarise([21]))
[     4.088][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = filter([34]), l3 = filter([34]))
[     4.114][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([35]))
[     4.119][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = filter([35]), l3 = anti_join())
[     4.196][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([38]))
[     4.256][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([40]), l3 = left_join())
[     4.424][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([47]), l3 = natural_join([2]))
[     4.740][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([55]), l3 = natural_join3([2]))
[     5.002][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([58]), l3 = natural_join4())
[     5.746][cube-solver-7][DEBUG] Found solution with cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([31]))
[     5.747][MainProcess][INFO] Statistics:
[     5.748][MainProcess][INFO] 	Generated cubes: 153
[     5.748][MainProcess][INFO] 	Attempted programs: 52
[     5.748][MainProcess][INFO] 		Rejected: 8
[     5.748][MainProcess][INFO] 		Failed: 43
[     5.748][MainProcess][INFO] 	Blacklist clauses: 83
[     5.748][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     5.749][MainProcess][DEBUG] 	0: Counter({'mutate': 980, 'natural_join3': 441, 'summarise': 224})
[     5.750][MainProcess][DEBUG] 	1: Counter({'natural_join3': 494, 'filter': 389, 'mutate': 351, 'natural_join4': 322, 'summarise': 90})
[     5.750][MainProcess][DEBUG] 	2: Counter({'filter': 1257, 'natural_join3': 289, 'natural_join4': 100})
[     5.751][MainProcess][DEBUG] Priting statistics for good programs of size 4
[     5.751][MainProcess][DEBUG] 	0: Counter({'natural_join': 137})
[     5.751][MainProcess][DEBUG] 	1: Counter({'summarise': 137})
[     5.751][MainProcess][DEBUG] 	2: Counter({'natural_join3': 87, 'natural_join': 40, 'filter': 10})
[     5.751][MainProcess][DEBUG] 	3: Counter({'filter': 127, 'natural_join4': 10})
[     5.751][MainProcess][INFO] Solution found: filter(natural_join3(summarise(natural_join(@param0, @param1), n = n(), P_id, color), @param0, @param2), color == 'red' & n == 3)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/34.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input2)
df5 <- df4 %>% group_by(P_id, color) %>% summarise(n = n()) %>% ungroup()
df6 <- inner_join(df5, input1) %>% inner_join(input3)
df7 <- df6 %>% filter(color == 'red' & n == 3)
out <- df7 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `LHS`.`P_id` AS `P_id`,
          `LHS`.`color` AS `color`,
          `LHS`.`n` AS `n`,
          `LHS`.`S_key` AS `S_key`,
          `RHS`.`S_name` AS `S_name`
   FROM
     (SELECT `LHS`.`P_id` AS `P_id`,
             `LHS`.`color` AS `color`,
             `LHS`.`n` AS `n`,
             `RHS`.`S_key` AS `S_key`
      FROM
        (SELECT `P_id`,
                `color`,
                COUNT() AS `n`
         FROM
           (SELECT `LHS`.`S_key` AS `S_key`,
                   `LHS`.`P_id` AS `P_id`,
                   `RHS`.`color` AS `color`
            FROM `input1` AS `LHS`
            INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
         GROUP BY `P_id`,
                  `color`) AS `LHS`
      INNER JOIN `input1` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)) AS `LHS`
   INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
WHERE (`color` = 'red'
       AND n = 3.0)
ORDER BY S_name
