[     1.956][MainProcess][INFO] Parsing specification...
[     1.960][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.961][MainProcess][DEBUG] Reading input files...
[     1.969][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/14-1.txt: ['string', 'string']
[     1.974][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/14-2.txt: ['string', 'string']
[     1.979][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/14-3.txt: ['string', 'string']
[     1.982][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/14.out: ['string']
[     2.012][MainProcess][DEBUG] Generating DSL...
[     2.035][MainProcess][INFO] Creating 16 processes
[     2.101][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.101][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     2.101][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     2.102][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.102][MainProcess][DEBUG] Increasing generator loc to 3
[     2.103][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     2.103][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     2.105][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     2.112][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     2.115][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     2.118][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     2.124][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     2.124][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     2.128][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     2.131][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     2.154][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.162][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.461][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.461][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.462][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.462][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.463][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.464][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.535][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.536][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.537][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.706][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.707][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.708][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.759][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.764][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.768][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.770][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.775][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.785][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.789][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.796][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise([1]))
[     2.799][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([1]), l2 = filter())
[     2.802][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = summarise([1]))
[     2.806][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = filter())
[     2.808][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = anti_join())
[     2.811][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = left_join())
[     2.813][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = union())
[     2.817][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = intersect())
[     2.817][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = semi_join())
[     2.822][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = cross_join())
[     2.822][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = mutate())
[     2.827][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([2]), l2 = inner_join())
[     2.827][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = anti_join(), l2 = filter([2]))
[     2.832][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = left_join(), l2 = filter([2]))
[     2.833][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = union(), l2 = filter([2]))
[     2.838][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = intersect(), l2 = filter([2]))
[     2.839][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = semi_join(), l2 = filter([2]))
[     2.844][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = cross_join(), l2 = filter([2]))
[     2.844][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = mutate(), l2 = filter([2]))
[     2.849][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = inner_join(), l2 = filter([2]))
[     2.849][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join(), l2 = summarise([1]))
[     2.854][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join(), l2 = mutate())
[     2.855][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join3(), l2 = summarise([1]))
[     2.858][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([2]))
[     2.858][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join3(), l2 = mutate())
[     2.860][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join4(), l2 = summarise([1]))
[     2.863][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join4(), l2 = mutate())
[     2.865][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = natural_join())
[     2.866][cube-solver-15][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = natural_join3())
[     2.867][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = natural_join4())
[     2.870][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = summarise([1]))
[     2.871][cube-solver-15][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = filter([2]))
[     2.872][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = anti_join())
[     2.876][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = left_join())
[     2.877][cube-solver-15][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = union())
[     2.877][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = intersect())
[     2.881][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = semi_join())
[     2.882][cube-solver-15][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = cross_join())
[     2.883][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = mutate())
[     2.886][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([1]), l2 = inner_join())
[     2.887][cube-solver-15][DEBUG] Solving cube (l0 = filter([2]), l1 = filter([2]), l2 = summarise([1]))
[     2.888][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = filter([2]), l2 = mutate())
[     2.891][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = anti_join(), l2 = summarise([1]))
[     2.893][cube-solver-15][DEBUG] Solving cube (l0 = filter([2]), l1 = anti_join(), l2 = mutate())
[     2.893][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = left_join(), l2 = summarise([1]))
[     2.896][cube-solver-13][DEBUG] Solving cube (l0 = filter([3]), l1 = left_join(), l2 = mutate())
[     2.897][cube-solver-15][DEBUG] Solving cube (l0 = filter([3]), l1 = union(), l2 = summarise([1]))
[     2.898][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = union(), l2 = mutate())
[     2.900][cube-solver-13][DEBUG] Solving cube (l0 = filter([3]), l1 = intersect(), l2 = summarise([1]))
[     2.902][cube-solver-15][DEBUG] Solving cube (l0 = filter([3]), l1 = intersect(), l2 = mutate())
[     2.903][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = semi_join(), l2 = summarise([1]))
[     2.906][cube-solver-13][DEBUG] Solving cube (l0 = filter([3]), l1 = semi_join(), l2 = mutate())
[     2.907][cube-solver-15][DEBUG] Solving cube (l0 = filter([3]), l1 = cross_join(), l2 = summarise([1]))
[     2.909][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = cross_join(), l2 = mutate())
[     2.911][cube-solver-13][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = natural_join())
[     2.912][cube-solver-15][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = natural_join3())
[     2.914][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = natural_join4())
[     2.915][cube-solver-13][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = summarise([1]))
[     2.916][cube-solver-15][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = filter([3]))
[     2.918][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = anti_join())
[     2.921][cube-solver-13][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = left_join())
[     2.922][cube-solver-15][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = union())
[     2.923][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = intersect())
[     2.926][cube-solver-13][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = semi_join())
[     2.927][cube-solver-15][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = cross_join())
[     2.928][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = mutate())
[     2.930][cube-solver-13][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = inner_join())
[     2.932][cube-solver-15][DEBUG] Solving cube (l0 = filter([3]), l1 = inner_join(), l2 = summarise([2]))
[     2.933][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = inner_join(), l2 = mutate())
[     2.935][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([2]), l2 = filter([3]))
[     2.938][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([3]), l2 = mutate())
[     2.938][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([3]), l2 = summarise([2]))
[     2.942][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([3]))
[     2.943][cube-solver-15][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([2]), l2 = filter([3]))
[     2.945][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = filter([3]), l2 = summarise([2]))
[     2.947][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = filter([3]), l2 = mutate())
[     2.949][cube-solver-15][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([3]))
[     2.951][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = summarise([3]), l2 = filter([3]))
[     2.952][cube-solver-13][DEBUG] Solving cube (l0 = union(), l1 = filter([3]), l2 = summarise([3]))
[     2.954][cube-solver-15][DEBUG] Solving cube (l0 = union(), l1 = filter([3]), l2 = mutate())
[     2.956][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([3]))
[     2.959][cube-solver-15][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([4]), l2 = filter([3]))
[     2.960][cube-solver-13][DEBUG] Solving cube (l0 = intersect(), l1 = filter([3]), l2 = summarise([4]))
[     2.960][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = filter([3]), l2 = mutate())
[     2.963][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([3]))
[     2.966][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([4]), l2 = filter([3]))
[     2.967][cube-solver-13][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([3]), l2 = summarise([4]))
[     2.967][cube-solver-15][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([3]), l2 = mutate())
[     2.971][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([3]))
[     2.972][cube-solver-15][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([4]), l2 = filter([3]))
[     2.974][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([3]), l2 = summarise([4]))
[     2.975][cube-solver-13][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([3]), l2 = mutate())
[     2.979][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([3]))
[     2.980][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([3]))
[     2.980][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter([3]))
[     2.983][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([3]))
[     2.984][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([5]), l2 = filter([3]))
[     2.985][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([5]), l2 = filter([3]))
[     2.993][cube-solver-8][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.994][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = natural_join())
[     2.994][MainProcess][INFO] Statistics:
[     2.995][MainProcess][INFO] 	Generated cubes: 119
[     2.995][MainProcess][INFO] 	Attempted programs: 3
[     2.995][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = natural_join3())
[     2.995][MainProcess][INFO] 		Rejected: 2
[     2.995][MainProcess][INFO] 		Failed: 0
[     2.995][MainProcess][INFO] 	Blacklist clauses: 9
[     2.995][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     2.996][MainProcess][DEBUG] 	0: Counter({'natural_join3': 21, 'summarise': 10})
[     2.996][MainProcess][DEBUG] 	1: Counter({'mutate': 12, 'filter': 10, 'summarise': 9})
[     2.996][MainProcess][DEBUG] 	2: Counter({'filter': 21, 'natural_join4': 10})
[     2.996][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param0, @param2, @param1), n = n(), S_name), n == max(n))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/14-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/14-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/14-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/14.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input3) %>% inner_join(input2)
df5 <- df4 %>% group_by(S_name) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n == max(n))
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT S_name,
          n
   FROM
     (SELECT S_name,
             n,
             MAX(n) OVER () AS zzz4
      FROM
        (SELECT S_name,
                COUNT() AS n
         FROM
           (SELECT LHS.S_key AS S_key,
                   LHS.P_id AS P_id,
                   LHS.S_name AS S_name,
                   RHS.color AS color
            FROM
              (SELECT LHS.S_key AS S_key,
                      LHS.P_id AS P_id,
                      RHS.S_name AS S_name
               FROM input1 AS LHS
               INNER JOIN input3 AS RHS ON (LHS.S_key = RHS.S_key)) AS LHS
            INNER JOIN input2 AS RHS ON (LHS.P_id = RHS.P_id))
         GROUP BY S_name))
   WHERE (n = zzz4))
ORDER BY S_name
