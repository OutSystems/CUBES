[     1.564][MainProcess][INFO] Parsing specification...
[     1.568][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.568][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.568][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.569][MainProcess][DEBUG] Reading input files...
[     1.575][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-1.txt: ['string', 'string']
[     1.578][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-2.txt: ['string', 'string']
[     1.581][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-3.txt: ['string', 'string']
[     1.585][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16.out: ['string']
[     1.615][MainProcess][DEBUG] Generating DSL...
[     1.635][MainProcess][INFO] Creating 16 processes
[     1.716][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.716][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.716][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.716][MainProcess][DEBUG] Increasing generator loc to 3
[     1.716][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.717][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.717][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.717][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.721][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.723][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.729][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.731][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.739][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.753][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.753][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.756][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     1.761][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     2.079][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.080][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.082][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.189][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.189][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.191][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.290][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.291][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.293][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.370][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.371][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.373][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.394][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.397][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.397][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.400][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.412][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.422][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.423][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.428][cube-solver-14][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = natural_join4())
[     2.428][cube-solver-15][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = summarise([2]))
[     2.428][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = summarise([2]), l2 = filter())
[     2.432][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = mutate(), l2 = filter())
[     2.436][cube-solver-15][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = filter())
[     2.441][cube-solver-15][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = anti_join())
[     2.447][cube-solver-15][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = left_join())
[     2.453][cube-solver-15][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = union())
[     2.458][cube-solver-15][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter(), l2 = intersect())
[     2.464][cube-solver-15][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter(), l2 = semi_join())
[     2.470][cube-solver-15][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter(), l2 = cross_join())
[     2.470][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([3]), l2 = filter())
[     2.476][cube-solver-15][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter([1]), l2 = mutate())
[     2.478][cube-solver-4][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter([1]), l2 = inner_join())
[     2.483][cube-solver-15][DEBUG] Solving cube (l0 = summarise([3]), l1 = anti_join(), l2 = filter([1]))
[     2.486][cube-solver-4][DEBUG] Solving cube (l0 = summarise([3]), l1 = left_join(), l2 = filter([1]))
[     2.487][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([1]))
[     2.490][cube-solver-15][DEBUG] Solving cube (l0 = summarise([4]), l1 = union(), l2 = filter([1]))
[     2.492][cube-solver-7][DEBUG] Solving cube (l0 = summarise([4]), l1 = intersect(), l2 = filter([1]))
[     2.493][cube-solver-4][DEBUG] Solving cube (l0 = summarise([4]), l1 = semi_join(), l2 = filter([1]))
[     2.497][cube-solver-15][DEBUG] Solving cube (l0 = summarise([5]), l1 = cross_join(), l2 = filter([1]))
[     2.500][cube-solver-7][DEBUG] Solving cube (l0 = summarise([5]), l1 = inner_join(), l2 = filter([1]))
[     2.500][cube-solver-4][DEBUG] Solving cube (l0 = summarise([5]), l1 = mutate(), l2 = filter([1]))
[     2.506][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = summarise([5]))
[     2.508][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = mutate())
[     2.508][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3([2]), l2 = summarise([5]))
[     2.512][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3([2]), l2 = mutate())
[     2.515][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = summarise([5]))
[     2.535][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([1]), l2 = summarise([8]))
[     2.547][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join4(), l2 = mutate())
[     2.620][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([10]), l2 = filter([4]))
[     2.635][cube-solver-12][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = natural_join())
[     2.649][cube-solver-12][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = natural_join3([2]))
[     2.753][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([4]), l2 = summarise([12]))
[     2.771][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = natural_join4())
[     2.786][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = summarise([12]))
[     2.809][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = filter([4]))
[     2.821][cube-solver-3][DEBUG] Solving cube (l0 = summarise([12]), l1 = natural_join(), l2 = filter([4]))
[     2.827][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = anti_join())
[     2.838][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = left_join())
[     2.844][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = union())
[     2.854][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = intersect())
[     2.859][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = semi_join())
[     2.868][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = cross_join())
[     2.873][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = mutate())
[     2.883][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([12]), l2 = inner_join())
[     2.888][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = summarise([12]))
[     2.893][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = mutate())
[     2.898][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = summarise([12]))
[     2.905][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = mutate())
[     2.907][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = summarise([13]))
[     2.912][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = mutate())
[     2.916][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = summarise([13]))
[     2.918][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = mutate())
[     2.924][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = summarise([14]))
[     2.926][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = mutate())
[     2.930][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = summarise([14]))
[     2.939][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = mutate())
[     2.941][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = summarise([14]))
[     2.943][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = mutate())
[     2.947][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join())
[     2.951][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join3([2]))
[     2.957][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join4())
[     2.971][cube-solver-0][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join4(), l2 = filter([4]))
[     2.989][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = summarise([15]))
[     3.006][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = filter([4]))
[     3.015][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = anti_join())
[     3.021][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = left_join())
[     3.029][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = union())
[     3.036][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = intersect())
[     3.043][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = semi_join())
[     3.049][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = cross_join())
[     3.052][cube-solver-2][DEBUG] Solving cube (l0 = summarise([15]), l1 = summarise([15]), l2 = filter([4]))
[     3.055][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = mutate())
[     3.061][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = inner_join())
[     3.068][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = summarise([15]))
[     3.081][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = mutate())
[     3.085][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([15]), l2 = filter([4]))
[     3.089][cube-solver-2][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = summarise([15]))
[     3.094][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = mutate())
[     3.098][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([4]))
[     3.102][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([15]), l2 = filter([4]))
[     3.106][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = summarise([15]))
[     3.110][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = mutate())
[     3.113][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([4]))
[     3.117][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = summarise([15]), l2 = filter([4]))
[     3.123][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = summarise([15]))
[     3.125][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = mutate())
[     3.128][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([4]))
[     3.132][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([15]), l2 = filter([4]))
[     3.140][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = summarise([15]))
[     3.140][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = mutate())
[     3.144][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([4]))
[     3.148][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([15]), l2 = filter([4]))
[     3.149][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = summarise([15]))
[     3.156][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = mutate())
[     3.157][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([4]))
[     3.160][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([16]), l2 = filter([4]))
[     3.162][cube-solver-2][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = summarise([16]))
[     3.161][cube-solver-1][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join3([2]), l2 = filter([4]))
[     3.168][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = mutate())
[     3.170][cube-solver-2][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([4]))
[     3.172][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([4]))
[     3.174][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([2]), l2 = filter([4]))
[     3.175][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([4]))
[     3.532][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([19]), l2 = filter([4]))
[     3.548][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join())
[     3.552][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join3([2]))
[     3.571][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join4())
[     3.842][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = summarise([21]))
[     3.868][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = filter([4]))
[     3.876][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = anti_join())
[     3.885][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = left_join())
[     3.891][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = union())
[     3.896][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = intersect())
[     3.903][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = semi_join())
[     3.909][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = cross_join())
[     3.914][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = mutate())
[     3.920][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = inner_join())
[     3.927][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([4]))
[     3.933][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([4]))
[     3.939][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([4]))
[     3.945][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([4]))
[     3.951][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([4]))
[     3.957][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([4]))
[     3.963][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([4]))
[     3.969][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([4]))
[     3.976][cube-solver-4][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([21]), l2 = filter([4]))
[     3.997][cube-solver-4][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = summarise([21]))
[     4.017][cube-solver-4][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = mutate())
[     4.024][cube-solver-4][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([4]))
[     4.029][MainProcess][DEBUG] Increasing generator loc to 4
[     4.030][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[     5.072][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([4]))
[     5.360][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     5.449][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     5.518][cube-solver-8][DEBUG] Initialising process for 4 lines of code.
[     6.062][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     6.153][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     6.408][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([4]))
[     6.544][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([4]))
[     6.545][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([4]))
[     6.571][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join4())
[     6.586][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = summarise([21]))
[     6.625][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = filter([4]))
[     6.652][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[     7.080][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join([2]))
[     7.196][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join3([2]))
[     7.580][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[     8.071][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     8.593][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[     8.599][cube-solver-9][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = left_join())
[     9.109][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = union())
[     9.631][cube-solver-12][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = intersect())
[     9.639][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[    10.691][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = semi_join())
[    11.756][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[    12.798][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = cross_join())
[    13.952][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = mutate())
[    13.969][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = inner_join())
[    15.192][cube-solver-8][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[    15.195][MainProcess][INFO] Statistics:
[    15.196][MainProcess][INFO] 	Generated cubes: 159
[    15.196][MainProcess][INFO] 	Attempted programs: 2082
[    15.196][MainProcess][INFO] 		Rejected: 557
[    15.197][MainProcess][INFO] 		Failed: 1524
[    15.197][MainProcess][INFO] 	Blacklist clauses: 29
[    15.197][MainProcess][DEBUG] Priting statistics for good programs of size 3
[    15.203][MainProcess][DEBUG] 	0: Counter({'filter': 3339, 'mutate': 2675, 'summarise': 838, 'natural_join3': 752})
[    15.207][MainProcess][DEBUG] 	1: Counter({'filter': 2505, 'natural_join4': 1856, 'mutate': 1660, 'natural_join3': 1040, 'summarise': 544})
[    15.211][MainProcess][DEBUG] 	2: Counter({'natural_join4': 2845, 'filter': 1760, 'summarise': 1448, 'natural_join3': 1112, 'mutate': 440})
[    15.212][MainProcess][DEBUG] Priting statistics for good programs of size 4
[    15.214][MainProcess][DEBUG] 	0: Counter({'natural_join': 3421})
[    15.216][MainProcess][DEBUG] 	1: Counter({'summarise': 3422})
[    15.218][MainProcess][DEBUG] 	2: Counter({'filter': 2347, 'natural_join3': 611, 'natural_join': 464})
[    15.220][MainProcess][DEBUG] 	3: Counter({'filter': 1075, 'natural_join3': 585, 'union': 502, 'natural_join': 417, 'left_join': 328, 'natural_join4': 310, 'semi_join': 112, 'anti_join': 81, 'inner_join': 12})
[    15.220][MainProcess][INFO] Solution found: anti_join(summarise(@param1, n = n(), P_id, P_name), filter(natural_join(@param0, @param2), S_name != 'AWS'), )

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/16-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/16-2.txt", col_types = cols(P_id = col_character(),P_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/16-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/16.out", col_types = cols(P_name = col_character()))

df4 <- input2 %>% group_by(P_id, P_name) %>% summarise(n = n()) %>% ungroup()
df5 <- inner_join(input1, input3)
df6 <- df5 %>% filter(S_name != 'AWS')
df7 <- anti_join(df4, df6, by=c())
out <- df7 %>% select(P_name) %>% arrange(P_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `P_name`
FROM
  (SELECT *
   FROM
     (SELECT `P_id`,
             `P_name`,
             COUNT() AS `n`
      FROM `input2`
      GROUP BY `P_id`,
               `P_name`) AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM
             (SELECT `LHS`.`S_key` AS `S_key`,
                     `LHS`.`P_id` AS `P_id`,
                     `RHS`.`S_name` AS `S_name`
              FROM `input1` AS `LHS`
              INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
           WHERE (`S_name` != 'AWS')) AS RHS
        WHERE (LHS.P_id = RHS.P_id) ))
ORDER BY P_name
