[     1.606][MainProcess][INFO] Parsing specification...
[     1.609][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.610][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.610][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.610][MainProcess][DEBUG] Reading input files...
[     1.617][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15-1.txt: ['string', 'string']
[     1.622][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15-2.txt: ['string', 'string']
[     1.627][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15-3.txt: ['string', 'string']
[     1.631][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15.out: ['string']
[     1.661][MainProcess][DEBUG] Generating DSL...
[     1.683][MainProcess][INFO] Creating 16 processes
[     1.746][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.746][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.746][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.747][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.747][MainProcess][DEBUG] Increasing generator loc to 3
[     1.748][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.748][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.753][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.757][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.762][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.762][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.765][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.771][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.772][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.775][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.803][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     1.804][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.246][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.247][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.249][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.300][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.301][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.303][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.312][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.312][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.313][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.396][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.396][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.399][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.502][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.505][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.511][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.515][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.537][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.546][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.551][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.561][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.567][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.567][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.571][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.573][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.574][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.575][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.579][cube-solver-9][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = intersect())
[     2.579][cube-solver-13][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = union())
[     2.580][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = semi_join())
[     2.584][cube-solver-9][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = cross_join())
[     2.585][cube-solver-13][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = mutate())
[     2.586][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = inner_join())
[     2.590][cube-solver-13][DEBUG] Solving cube (l0 = summarise([2]), l1 = anti_join(), l2 = filter())
[     2.590][cube-solver-9][DEBUG] Solving cube (l0 = summarise([2]), l1 = left_join(), l2 = filter())
[     2.592][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = union(), l2 = filter())
[     2.595][cube-solver-13][DEBUG] Solving cube (l0 = summarise([2]), l1 = intersect(), l2 = filter())
[     2.595][cube-solver-9][DEBUG] Solving cube (l0 = summarise([2]), l1 = semi_join(), l2 = filter())
[     2.598][cube-solver-12][DEBUG] Solving cube (l0 = summarise([4]), l1 = cross_join(), l2 = filter())
[     2.600][cube-solver-13][DEBUG] Solving cube (l0 = summarise([4]), l1 = mutate(), l2 = filter())
[     2.600][cube-solver-9][DEBUG] Solving cube (l0 = summarise([4]), l1 = inner_join(), l2 = filter())
[     2.606][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([4]))
[     2.607][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     2.608][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3([1]), l2 = summarise([4]))
[     2.610][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3([1]), l2 = mutate())
[     2.613][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([4]))
[     2.613][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     2.615][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = natural_join())
[     2.616][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = natural_join3([1]))
[     2.620][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = natural_join4())
[     2.621][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = filter())
[     2.621][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = summarise([5]))
[     2.625][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = anti_join())
[     2.627][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = left_join())
[     2.629][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = union())
[     2.632][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = intersect())
[     2.633][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([5]), l2 = semi_join())
[     2.635][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([5]), l2 = cross_join())
[     2.638][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([5]), l2 = mutate())
[     2.639][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([5]), l2 = inner_join())
[     2.642][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = summarise([5]))
[     2.644][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = mutate())
[     2.647][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = summarise([5]))
[     2.647][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = mutate())
[     2.649][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = summarise([5]))
[     2.650][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = left_join(), l2 = mutate())
[     2.652][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = union(), l2 = summarise([5]))
[     2.654][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = union(), l2 = mutate())
[     2.657][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = intersect(), l2 = mutate())
[     2.657][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = intersect(), l2 = summarise([6]))
[     2.659][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = semi_join(), l2 = summarise([6]))
[     2.660][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = semi_join(), l2 = mutate())
[     2.663][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = cross_join(), l2 = summarise([6]))
[     2.667][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = cross_join(), l2 = mutate())
[     2.668][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join3([1]))
[     2.668][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join())
[     2.669][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([2]))
[     2.671][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join4())
[     2.672][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = summarise([7]))
[     2.673][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = filter([2]))
[     2.674][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = anti_join())
[     2.674][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = left_join())
[     2.676][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = union())
[     2.677][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = intersect())
[     2.679][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = semi_join())
[     2.679][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = cross_join())
[     2.680][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = mutate())
[     2.682][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = inner_join(), l2 = summarise([7]))
[     2.683][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = inner_join())
[     2.684][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = inner_join(), l2 = mutate())
[     2.684][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([7]), l2 = filter([2]))
[     2.687][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([2]), l2 = mutate())
[     2.687][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([2]), l2 = summarise([7]))
[     2.688][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([2]))
[     2.690][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([7]), l2 = filter([2]))
[     2.691][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = summarise([7]))
[     2.693][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = mutate())
[     2.693][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([2]), l2 = summarise([7]))
[     2.696][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([2]))
[     2.697][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = summarise([7]))
[     2.698][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = summarise([7]), l2 = filter([2]))
[     2.698][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = mutate())
[     2.698][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([2]), l2 = mutate())
[     2.700][cube-solver-13][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([2]))
[     2.702][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([7]), l2 = filter([2]))
[     2.705][cube-solver-13][DEBUG] Solving cube (l0 = intersect(), l1 = filter([2]), l2 = mutate())
[     2.705][cube-solver-14][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([2]))
[     2.707][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = filter([2]), l2 = summarise([7]))
[     2.707][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([7]), l2 = filter([2]))
[     2.709][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = summarise([7]))
[     2.709][cube-solver-13][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = mutate())
[     2.709][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([2]))
[     2.711][cube-solver-14][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([8]), l2 = filter([2]))
[     2.714][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([2]), l2 = mutate())
[     2.714][cube-solver-13][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([2]), l2 = summarise([9]))
[     2.716][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([2]))
[     2.717][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([2]))
[     2.719][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([1]), l2 = filter([2]))
[     2.721][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([9]), l2 = filter([2]))
[     2.721][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join())
[     2.722][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join3([1]))
[     2.723][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([2]))
[     2.725][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join4())
[     2.727][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = summarise([9]))
[     2.728][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = filter([2]))
[     2.732][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = anti_join())
[     2.735][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = left_join())
[     2.738][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = union())
[     2.738][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = intersect())
[     2.741][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = semi_join())
[     2.744][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = cross_join())
[     2.744][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = mutate())
[     2.747][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = inner_join())
[     2.749][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([4]))
[     2.751][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([4]))
[     2.755][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([4]))
[     2.756][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([4]))
[     2.759][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([4]))
[     2.762][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([4]))
[     2.763][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([4]))
[     2.767][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([4]))
[     2.768][cube-solver-5][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([10]), l2 = filter([4]))
[     2.771][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([5]), l2 = summarise([11]))
[     2.780][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([5]), l2 = mutate())
[     2.782][cube-solver-5][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([5]))
[     2.783][MainProcess][DEBUG] Increasing generator loc to 4
[     2.784][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     2.788][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     2.918][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([6]))
[     2.927][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     2.989][cube-solver-2][DEBUG] Solving cube (l0 = summarise([15]), l1 = natural_join(), l2 = filter([6]))
[     3.000][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([15]), l2 = filter([6]))
[     3.009][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     3.016][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[     3.307][cube-solver-3][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join3([2]), l2 = filter([12]))
[     3.370][cube-solver-0][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join4(), l2 = filter([12]))
[     3.394][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     3.547][cube-solver-1][DEBUG] Solving cube (l0 = summarise([17]), l1 = summarise([17]), l2 = filter([12]))
[     3.567][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     3.862][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([17]), l2 = natural_join(), l3 = filter([21]))
[     3.976][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = natural_join3([2]), l3 = filter([21]))
[     4.140][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([19]), l2 = filter([21]), l3 = natural_join([1]))
[     4.142][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([19]), l2 = summarise([19]), l3 = filter([21]))
[     4.188][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([19]), l2 = filter([21]), l3 = summarise([19]))
[     4.233][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = filter([23]), l3 = filter([23]))
[     4.281][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([24]), l3 = anti_join())
[     4.398][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = natural_join4(), l3 = filter([24]))
[     4.425][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([24]), l3 = left_join())
[     4.607][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([24]), l3 = natural_join3([2]))
[     4.737][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join4())
[     5.346][cube-solver-0][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([24]), l3 = natural_join3([2]))
[     5.348][MainProcess][INFO] Statistics:
[     5.348][MainProcess][INFO] 	Generated cubes: 153
[     5.348][MainProcess][INFO] 	Attempted programs: 26
[     5.348][MainProcess][INFO] 		Rejected: 1
[     5.348][MainProcess][INFO] 		Failed: 24
[     5.348][MainProcess][INFO] 	Blacklist clauses: 49
[     5.348][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     5.349][MainProcess][DEBUG] 	0: Counter({'mutate': 653, 'natural_join3': 370, 'summarise': 198})
[     5.350][MainProcess][DEBUG] 	1: Counter({'natural_join3': 321, 'filter': 280, 'mutate': 272, 'natural_join4': 250, 'summarise': 98})
[     5.351][MainProcess][DEBUG] 	2: Counter({'filter': 941, 'natural_join3': 190, 'natural_join4': 90})
[     5.351][MainProcess][DEBUG] Priting statistics for good programs of size 4
[     5.351][MainProcess][DEBUG] 	0: Counter({'natural_join': 234})
[     5.351][MainProcess][DEBUG] 	1: Counter({'summarise': 234})
[     5.352][MainProcess][DEBUG] 	2: Counter({'natural_join': 116, 'filter': 66, 'natural_join3': 52})
[     5.352][MainProcess][DEBUG] 	3: Counter({'filter': 168, 'left_join': 20, 'natural_join': 20, 'natural_join3': 16, 'natural_join4': 10})
[     5.352][MainProcess][INFO] Solution found: natural_join3(@param0, @param2, filter(summarise(natural_join(@param1, @param0), n = n(), S_key, color), color == 'red' & n == max(n)))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/15-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/15-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/15-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/15.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input2, input1)
df5 <- df4 %>% group_by(S_key, color) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(color == 'red' & n == max(n))
df7 <- inner_join(input1, input3) %>% inner_join(df6)
out <- df7 %>% select(S_name) %>% distinct() %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT `S_name`
FROM
  (SELECT `LHS`.`S_key` AS `S_key`,
          `LHS`.`P_id` AS `P_id`,
          `LHS`.`S_name` AS `S_name`,
          `RHS`.`color` AS `color`,
          `RHS`.`n` AS `n`
   FROM
     (SELECT `LHS`.`S_key` AS `S_key`,
             `LHS`.`P_id` AS `P_id`,
             `RHS`.`S_name` AS `S_name`
      FROM `input1` AS `LHS`
      INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`)) AS `LHS`
   INNER JOIN
     (SELECT `S_key`,
             `color`,
             `n`
      FROM
        (SELECT `S_key`,
                `color`,
                `n`,
                MAX(`n`) OVER () AS `zzz4`
         FROM
           (SELECT `S_key`,
                   `color`,
                   COUNT() AS `n`
            FROM
              (SELECT `LHS`.`P_id` AS `P_id`,
                      `LHS`.`color` AS `color`,
                      `RHS`.`S_key` AS `S_key`
               FROM `input2` AS `LHS`
               INNER JOIN `input1` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
            GROUP BY `S_key`,
                     `color`))
      WHERE (`color` = 'red'
             AND n = zzz4)) AS RHS ON (LHS.S_key = RHS.S_key))
ORDER BY S_name
