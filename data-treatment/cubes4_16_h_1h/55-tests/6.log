[     1.570][MainProcess][INFO] Parsing specification...
[     1.573][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.573][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.573][MainProcess][DEBUG] Reading input files...
[     1.580][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/6-1.txt: ['string', 'string']
[     1.585][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/6-2.txt: ['string', 'string']
[     1.590][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/6-3.txt: ['string', 'string']
[     1.594][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/6.out: ['string']
[     1.623][MainProcess][DEBUG] Generating DSL...
[     1.644][MainProcess][INFO] Creating 16 processes
[     1.703][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.704][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.704][MainProcess][DEBUG] Increasing generator loc to 3
[     1.705][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.707][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.708][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.710][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.713][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.714][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.714][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.717][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.726][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.729][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.734][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.737][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.740][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     1.741][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.126][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.127][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.128][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.139][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.139][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.141][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.210][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.210][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.212][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.219][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.219][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.221][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.386][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.391][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.392][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.396][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.400][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.400][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.403][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.404][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.405][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.408][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.409][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.412][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.413][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.415][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.416][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.417][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     2.417][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     2.419][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     2.420][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     2.421][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     2.421][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.422][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = inner_join())
[     2.423][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter())
[     2.423][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter())
[     2.424][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter())
[     2.426][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter())
[     2.426][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join(), l2 = filter())
[     2.427][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join(), l2 = filter())
[     2.427][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter())
[     2.428][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join(), l2 = filter())
[     2.428][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise())
[     2.430][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     2.430][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise())
[     2.430][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise())
[     2.431][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     2.432][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     2.432][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join())
[     2.433][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join3())
[     2.433][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join4())
[     2.434][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = summarise())
[     2.434][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = filter())
[     2.435][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.435][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = anti_join())
[     2.436][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = left_join())
[     2.437][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = intersect())
[     2.437][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = union())
[     2.437][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = semi_join())
[     2.439][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = inner_join())
[     2.439][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = mutate())
[     2.439][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = cross_join())
[     2.439][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     2.440][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise())
[     2.440][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     2.441][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise())
[     2.441][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     2.442][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise())
[     2.442][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     2.443][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     2.443][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise())
[     2.444][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise())
[     2.444][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     2.444][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     2.445][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise())
[     2.445][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise())
[     2.445][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.446][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     2.447][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     2.447][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join4())
[     2.447][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3())
[     2.448][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise())
[     2.448][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = anti_join())
[     2.448][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = filter())
[     2.450][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = intersect())
[     2.450][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = left_join())
[     2.450][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = union())
[     2.451][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[     2.451][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = cross_join())
[     2.451][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = semi_join())
[     2.451][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = inner_join())
[     2.452][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = summarise())
[     2.453][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = mutate())
[     2.454][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = mutate())
[     2.454][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise(), l2 = filter())
[     2.454][cube-solver-14][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = summarise())
[     2.454][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter())
[     2.455][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = summarise(), l2 = filter())
[     2.455][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = summarise())
[     2.455][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = mutate())
[     2.456][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter())
[     2.457][cube-solver-15][DEBUG] Solving cube (l0 = union(), l1 = summarise(), l2 = filter())
[     2.457][cube-solver-14][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = summarise())
[     2.457][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = mutate())
[     2.458][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter())
[     2.458][cube-solver-13][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = summarise())
[     2.458][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = summarise(), l2 = filter())
[     2.459][cube-solver-4][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = mutate())
[     2.460][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter())
[     2.460][cube-solver-15][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise(), l2 = filter())
[     2.460][cube-solver-14][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = summarise())
[     2.461][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = mutate())
[     2.461][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter())
[     2.461][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise(), l2 = filter())
[     2.462][cube-solver-4][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = summarise())
[     2.463][cube-solver-15][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter())
[     2.463][cube-solver-13][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = mutate())
[     2.464][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter())
[     2.464][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter())
[     2.464][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter())
[     2.464][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = summarise(), l2 = filter())
[     2.465][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join())
[     2.465][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join3())
[     2.466][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join4())
[     2.467][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise())
[     2.468][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = filter())
[     2.468][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = anti_join())
[     2.469][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = left_join())
[     2.470][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = intersect())
[     2.470][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = union())
[     2.472][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = cross_join())
[     2.473][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = semi_join())
[     2.474][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = mutate())
[     2.474][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = inner_join())
[     2.475][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter())
[     2.475][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter())
[     2.476][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter())
[     2.476][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter())
[     2.477][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter())
[     2.478][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter())
[     2.478][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter())
[     2.478][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter())
[     2.479][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = filter(), l2 = summarise())
[     2.479][cube-solver-5][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise(), l2 = filter())
[     2.480][cube-solver-12][DEBUG] Solving cube (l0 = inner_join(), l1 = filter(), l2 = mutate())
[     2.481][MainProcess][DEBUG] Increasing generator loc to 4
[     2.481][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter())
[     2.481][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     2.482][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[     2.483][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     2.485][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[     2.830][cube-solver-0][DEBUG] Solving cube (l0 = summarise([13]), l1 = natural_join(), l2 = filter([4]))
[     2.849][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     2.900][cube-solver-1][DEBUG] Solving cube (l0 = summarise([15]), l1 = natural_join3([2]), l2 = filter([6]))
[     2.960][cube-solver-2][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join4(), l2 = filter([7]))
[     2.977][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     3.050][cube-solver-3][DEBUG] Solving cube (l0 = summarise([16]), l1 = summarise([16]), l2 = filter([7]))
[     3.067][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     3.480][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([12]))
[     3.498][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = filter([12]), l3 = summarise([21]))
[     3.498][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([12]))
[     3.521][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = filter([12]), l3 = filter([12]))
[     3.540][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = filter([12]), l3 = anti_join())
[     3.741][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([14]))
[     3.843][cube-solver-9][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([15]))
[     3.871][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join([2]))
[     3.889][cube-solver-9][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = left_join())
[     4.019][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join3([2]))
[     4.167][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join4())
[     4.374][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     5.610][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = union())
[     5.819][cube-solver-8][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     5.822][MainProcess][INFO] Statistics:
[     5.822][MainProcess][INFO] 	Generated cubes: 154
[     5.823][MainProcess][INFO] 	Attempted programs: 115
[     5.823][MainProcess][INFO] 		Rejected: 73
[     5.823][MainProcess][INFO] 		Failed: 41
[     5.823][MainProcess][INFO] 	Blacklist clauses: 40
[     5.823][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     5.825][MainProcess][DEBUG] 	0: Counter({'mutate': 1297, 'summarise': 557, 'natural_join3': 485})
[     5.826][MainProcess][DEBUG] 	1: Counter({'filter': 965, 'natural_join3': 559, 'natural_join4': 330, 'summarise': 285, 'mutate': 200})
[     5.827][MainProcess][DEBUG] 	2: Counter({'filter': 1374, 'natural_join4': 542, 'natural_join3': 423})
[     5.828][MainProcess][DEBUG] Priting statistics for good programs of size 4
[     5.828][MainProcess][DEBUG] 	0: Counter({'natural_join': 826})
[     5.829][MainProcess][DEBUG] 	1: Counter({'summarise': 828})
[     5.829][MainProcess][DEBUG] 	2: Counter({'filter': 501, 'natural_join': 191, 'natural_join3': 136})
[     5.830][MainProcess][DEBUG] 	3: Counter({'filter': 327, 'natural_join': 168, 'left_join': 132, 'natural_join4': 108, 'natural_join3': 74, 'union': 19})
[     5.830][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param0, @param1, @param2), n = n(), F_name), n <= 5)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/6-1.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/6-2.txt", col_types = cols(C_name = col_character(),F_key = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/6-3.txt", col_types = cols(F_key = col_character(),F_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/6.out", col_types = cols(F_name = col_character()))

df4 <- inner_join(input1, input2) %>% inner_join(input3)
df5 <- df4 %>% group_by(F_name) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n <= 5)
out <- df6 %>% select(F_name) %>% arrange(F_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT F_name
FROM
  (SELECT F_name,
          COUNT() AS n
   FROM
     (SELECT LHS.S_key AS S_key,
             LHS.C_name AS C_name,
             LHS.F_key AS F_key,
             RHS.F_name AS F_name
      FROM
        (SELECT LHS.S_key AS S_key,
                LHS.C_name AS C_name,
                RHS.F_key AS F_key
         FROM input1 AS LHS
         INNER JOIN input2 AS RHS ON (LHS.C_name = RHS.C_name)) AS LHS
      INNER JOIN input3 AS RHS ON (LHS.F_key = RHS.F_key))
   GROUP BY F_name)
WHERE (n <= 5.0)
ORDER BY F_name
