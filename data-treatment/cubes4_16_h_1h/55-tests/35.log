[     1.586][MainProcess][INFO] Parsing specification...
[     1.589][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.589][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.589][MainProcess][DEBUG] Reading input files...
[     1.596][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-1.txt: ['string', 'string']
[     1.601][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-2.txt: ['string', 'string']
[     1.606][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-3.txt: ['string', 'string']
[     1.611][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/35.out: ['string']
[     1.640][MainProcess][DEBUG] Generating DSL...
[     1.661][MainProcess][INFO] Creating 16 processes
[     1.725][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.724][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.724][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.725][MainProcess][DEBUG] Increasing generator loc to 3
[     1.725][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.726][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.728][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.730][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.738][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.741][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.742][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.746][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.752][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.756][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.772][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     1.775][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.775][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.090][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.091][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.093][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.123][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.124][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.125][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.243][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.244][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.245][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.387][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.388][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.390][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.407][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.412][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.416][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.422][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.428][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.432][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.435][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.439][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = summarise([1]))
[     2.439][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([1]), l2 = filter())
[     2.443][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = filter())
[     2.444][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = anti_join())
[     2.446][cube-solver-4][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = left_join())
[     2.449][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = union())
[     2.449][cube-solver-4][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = intersect())
[     2.451][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.453][cube-solver-4][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = semi_join())
[     2.454][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = cross_join())
[     2.456][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = mutate())
[     2.456][cube-solver-4][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = inner_join())
[     2.457][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise([2]))
[     2.459][cube-solver-4][DEBUG] Solving cube (l0 = summarise([2]), l1 = left_join(), l2 = filter())
[     2.459][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = anti_join(), l2 = filter())
[     2.459][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.460][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = union(), l2 = filter())
[     2.462][cube-solver-4][DEBUG] Solving cube (l0 = summarise([2]), l1 = intersect(), l2 = filter())
[     2.464][cube-solver-9][DEBUG] Solving cube (l0 = summarise([2]), l1 = semi_join(), l2 = filter())
[     2.465][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = cross_join(), l2 = filter())
[     2.465][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = mutate(), l2 = filter())
[     2.466][cube-solver-15][DEBUG] Solving cube (l0 = summarise([2]), l1 = inner_join(), l2 = filter())
[     2.466][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([2]))
[     2.469][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     2.470][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     2.470][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([2]))
[     2.471][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     2.471][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([2]))
[     2.471][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join())
[     2.473][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join3())
[     2.473][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join4())
[     2.474][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = filter())
[     2.475][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = summarise([2]))
[     2.476][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = anti_join())
[     2.476][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = left_join())
[     2.477][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = union())
[     2.477][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = intersect())
[     2.479][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = semi_join())
[     2.479][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = cross_join())
[     2.481][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = inner_join())
[     2.481][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = mutate())
[     2.482][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     2.482][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise([2]))
[     2.483][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise([2]))
[     2.484][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     2.485][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise([2]))
[     2.486][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise([2]))
[     2.486][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     2.486][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     2.487][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise([2]))
[     2.488][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     2.488][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise([3]))
[     2.489][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     2.490][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise([3]))
[     2.490][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     2.491][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     2.491][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3())
[     2.492][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise([3]))
[     2.492][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join4())
[     2.493][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = filter())
[     2.494][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = anti_join())
[     2.495][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = left_join())
[     2.495][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = union())
[     2.495][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = intersect())
[     2.496][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = semi_join())
[     2.496][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = cross_join())
[     2.497][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[     2.498][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = inner_join())
[     2.498][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = summarise([3]))
[     2.498][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = mutate())
[     2.499][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([3]), l2 = filter())
[     2.500][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = summarise([3]))
[     2.500][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = mutate())
[     2.500][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter())
[     2.502][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([3]), l2 = filter())
[     2.503][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = summarise([3]))
[     2.503][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = mutate())
[     2.503][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter())
[     2.504][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise([3]))
[     2.505][cube-solver-15][DEBUG] Solving cube (l0 = union(), l1 = summarise([3]), l2 = filter())
[     2.504][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([3]), l2 = filter())
[     2.506][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = summarise([3]))
[     2.506][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = mutate())
[     2.507][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter())
[     2.508][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([4]), l2 = filter())
[     2.509][cube-solver-4][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = mutate())
[     2.509][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = summarise([4]))
[     2.510][cube-solver-15][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter())
[     2.511][cube-solver-4][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([4]), l2 = filter())
[     2.512][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = mutate())
[     2.512][cube-solver-13][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = summarise([4]))
[     2.512][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter())
[     2.513][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([4]), l2 = filter())
[     2.514][cube-solver-15][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = summarise([4]))
[     2.515][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = mutate())
[     2.516][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter())
[     2.516][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter())
[     2.518][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter())
[     2.518][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter())
[     2.519][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([4]), l2 = filter())
[     2.519][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join())
[     2.520][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join3())
[     2.521][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join4())
[     2.522][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise([4]))
[     2.523][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = filter())
[     2.525][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = anti_join())
[     2.527][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = left_join())
[     2.529][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = union())
[     2.529][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = intersect())
[     2.531][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = semi_join())
[     2.532][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = cross_join())
[     2.533][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = mutate())
[     2.535][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = inner_join())
[     2.536][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter())
[     2.538][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter())
[     2.539][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([1]))
[     2.540][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([1]))
[     2.543][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([1]))
[     2.543][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([1]))
[     2.545][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([1]))
[     2.547][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([1]))
[     2.548][cube-solver-4][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([5]), l2 = filter([1]))
[     2.551][cube-solver-12][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([1]), l2 = summarise([5]))
[     2.553][cube-solver-4][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([1]), l2 = mutate())
[     2.556][cube-solver-4][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([1]))
[     2.558][MainProcess][DEBUG] Increasing generator loc to 4
[     2.558][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[     2.559][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[     2.651][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([2]), l2 = summarise([8]))
[     2.663][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     2.819][cube-solver-0][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join3(), l2 = filter([4]))
[     2.829][cube-solver-2][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = filter([4]))
[     2.846][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     2.874][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = mutate())
[     2.881][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     3.049][cube-solver-3][DEBUG] Solving cube (l0 = summarise([17]), l1 = natural_join4(), l2 = filter([8]))
[     3.070][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     3.170][cube-solver-1][DEBUG] Solving cube (l0 = summarise([17]), l1 = summarise([17]), l2 = filter([9]))
[     3.203][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     3.570][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([17]), l2 = natural_join(), l3 = filter([15]))
[     3.956][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = natural_join3([2]), l3 = filter([15]))
[     3.979][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([20]), l2 = natural_join4(), l3 = filter([15]))
[     3.997][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([20]), l2 = filter([15]), l3 = summarise([20]))
[     4.023][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([20]), l2 = filter([15]), l3 = filter([15]))
[     4.044][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([20]), l2 = filter([15]), l3 = anti_join())
[     4.121][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([15]), l3 = natural_join([2]))
[     4.254][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([15]))
[     4.280][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = left_join())
[     4.329][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join3([2]))
[     4.472][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join4())
[     4.485][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     5.265][cube-solver-1][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join4())
[     5.267][MainProcess][INFO] Statistics:
[     5.267][MainProcess][INFO] 	Generated cubes: 154
[     5.267][MainProcess][INFO] 	Attempted programs: 40
[     5.267][MainProcess][INFO] 		Rejected: 26
[     5.267][MainProcess][INFO] 		Failed: 13
[     5.267][MainProcess][INFO] 	Blacklist clauses: 40
[     5.268][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     5.269][MainProcess][DEBUG] 	0: Counter({'mutate': 898, 'summarise': 452, 'natural_join3': 402})
[     5.270][MainProcess][DEBUG] 	1: Counter({'filter': 707, 'natural_join3': 434, 'natural_join4': 209, 'summarise': 202, 'mutate': 200})
[     5.271][MainProcess][DEBUG] 	2: Counter({'filter': 1045, 'natural_join4': 430, 'natural_join3': 277})
[     5.271][MainProcess][DEBUG] Priting statistics for good programs of size 4
[     5.271][MainProcess][DEBUG] 	0: Counter({'natural_join': 398})
[     5.272][MainProcess][DEBUG] 	1: Counter({'summarise': 398})
[     5.272][MainProcess][DEBUG] 	2: Counter({'filter': 210, 'natural_join': 106, 'natural_join3': 82})
[     5.272][MainProcess][DEBUG] 	3: Counter({'filter': 188, 'natural_join4': 67, 'natural_join': 61, 'left_join': 58, 'natural_join3': 24})
[     5.273][MainProcess][INFO] Solution found: natural_join4(@param0, @param1, @param2, filter(summarise(natural_join(@param0, @param2), n = n(), P_id), n == 2))
[     5.432][cube-solver-12][DEBUG] Found solution with cube (l0 = natural_join(), l1 = summarise([19]), l2 = natural_join3([2]), l3 = filter([15]))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/35.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input3)
df5 <- df4 %>% group_by(P_id) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n == 2)
df7 <- inner_join(input1, input2) %>% inner_join(input3) %>% inner_join(df6)
out <- df7 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT LHS.S_key AS S_key,
          LHS.P_id AS P_id,
          LHS.color AS color,
          LHS.S_name AS S_name,
          RHS.n AS n
   FROM
     (SELECT LHS.S_key AS S_key,
             LHS.P_id AS P_id,
             LHS.color AS color,
             RHS.S_name AS S_name
      FROM
        (SELECT LHS.S_key AS S_key,
                LHS.P_id AS P_id,
                RHS.color AS color
         FROM input1 AS LHS
         INNER JOIN input2 AS RHS ON (LHS.P_id = RHS.P_id)) AS LHS
      INNER JOIN input3 AS RHS ON (LHS.S_key = RHS.S_key)) AS LHS
   INNER JOIN
     (SELECT *
      FROM
        (SELECT P_id,
                COUNT() AS n
         FROM
           (SELECT LHS.S_key AS S_key,
                   LHS.P_id AS P_id,
                   RHS.S_name AS S_name
            FROM input1 AS LHS
            INNER JOIN input3 AS RHS ON (LHS.S_key = RHS.S_key))
         GROUP BY P_id)
      WHERE (n = 2.0)) AS RHS ON (LHS.P_id = RHS.P_id))
ORDER BY S_name
