[     1.587][MainProcess][INFO] Parsing specification...
[     1.591][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.591][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.591][MainProcess][DEBUG] Reading input files...
[     1.598][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4-1.txt: ['string', 'string']
[     1.603][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4-2.txt: ['string', 'string']
[     1.608][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4-3.txt: ['string', 'string']
[     1.612][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4.out: ['string']
[     1.641][MainProcess][DEBUG] Generating DSL...
[     1.662][MainProcess][INFO] Creating 16 processes
[     1.746][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.746][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.746][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.746][MainProcess][DEBUG] Increasing generator loc to 3
[     1.747][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.747][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.747][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.747][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.748][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.752][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.759][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.768][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.779][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.782][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.785][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     1.786][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.795][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     2.118][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.119][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.120][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.267][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.268][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.269][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.334][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.334][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.336][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.403][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.404][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.405][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.429][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.432][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.435][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.439][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.442][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.442][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.459][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.462][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.462][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.463][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.465][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.467][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.467][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.469][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     2.470][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     2.472][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     2.473][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     2.474][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     2.475][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = inner_join())
[     2.475][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter())
[     2.477][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter())
[     2.478][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter())
[     2.478][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter())
[     2.481][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join(), l2 = filter())
[     2.481][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join(), l2 = filter())
[     2.482][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter())
[     2.484][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join(), l2 = filter())
[     2.484][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise())
[     2.485][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     2.487][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise())
[     2.487][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     2.488][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise())
[     2.490][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     2.490][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join())
[     2.491][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join3())
[     2.493][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join4())
[     2.493][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = summarise())
[     2.493][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.493][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.494][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = filter())
[     2.495][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = anti_join())
[     2.496][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = left_join())
[     2.497][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = union())
[     2.498][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = intersect())
[     2.498][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = cross_join())
[     2.499][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = semi_join())
[     2.499][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = mutate())
[     2.500][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = inner_join())
[     2.501][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise())
[     2.501][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     2.502][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     2.502][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise())
[     2.504][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise())
[     2.504][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     2.504][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise())
[     2.505][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     2.505][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise())
[     2.507][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     2.507][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise())
[     2.507][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     2.508][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise())
[     2.508][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     2.510][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3())
[     2.510][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     2.510][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join4())
[     2.511][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise())
[     2.511][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = filter())
[     2.513][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = anti_join())
[     2.513][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = left_join())
[     2.513][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = union())
[     2.514][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = intersect())
[     2.514][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = semi_join())
[     2.515][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.516][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = cross_join())
[     2.516][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[     2.517][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = inner_join())
[     2.517][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = summarise())
[     2.517][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = mutate())
[     2.519][cube-solver-4][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise(), l2 = filter())
[     2.519][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = summarise())
[     2.520][cube-solver-14][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = mutate())
[     2.520][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter())
[     2.520][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = summarise(), l2 = filter())
[     2.522][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = summarise())
[     2.523][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = mutate())
[     2.523][cube-solver-14][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter())
[     2.523][cube-solver-15][DEBUG] Solving cube (l0 = union(), l1 = summarise(), l2 = filter())
[     2.524][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = summarise())
[     2.525][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = mutate())
[     2.526][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter())
[     2.526][cube-solver-14][DEBUG] Solving cube (l0 = intersect(), l1 = summarise(), l2 = filter())
[     2.526][cube-solver-15][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = summarise())
[     2.527][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = mutate())
[     2.528][cube-solver-4][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter())
[     2.529][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise(), l2 = filter())
[     2.529][cube-solver-14][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = summarise())
[     2.530][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = mutate())
[     2.530][cube-solver-15][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter())
[     2.531][cube-solver-4][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise(), l2 = filter())
[     2.532][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = summarise())
[     2.533][cube-solver-14][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = mutate())
[     2.533][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter())
[     2.533][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter())
[     2.534][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter())
[     2.535][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter())
[     2.536][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = summarise(), l2 = filter())
[     2.536][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join())
[     2.537][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join3())
[     2.539][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join4())
[     2.541][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise())
[     2.544][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = filter())
[     2.547][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = anti_join())
[     2.551][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = left_join())
[     2.554][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = union())
[     2.558][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = intersect())
[     2.561][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = semi_join())
[     2.564][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = cross_join())
[     2.569][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = mutate())
[     2.572][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = inner_join())
[     2.576][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter())
[     2.579][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter())
[     2.582][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter())
[     2.586][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter())
[     2.589][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter())
[     2.592][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter())
[     2.595][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter())
[     2.598][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter())
[     2.602][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([1]), l2 = filter())
[     2.606][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = filter(), l2 = summarise([1]))
[     2.611][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = filter(), l2 = mutate())
[     2.614][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter())
[     2.616][MainProcess][DEBUG] Increasing generator loc to 4
[     2.617][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[     2.621][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([1]), l2 = filter([1]))
[     2.629][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[     2.728][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([1]), l2 = summarise([11]))
[     2.747][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     2.767][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([1]), l2 = summarise([13]))
[     2.785][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     2.934][cube-solver-3][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = filter([2]))
[     2.950][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     3.185][cube-solver-1][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join4(), l2 = filter([4]))
[     3.204][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     3.332][cube-solver-0][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join3([2]), l2 = filter([4]))
[     3.530][cube-solver-2][DEBUG] Solving cube (l0 = summarise([16]), l1 = summarise([16]), l2 = filter([4]))
[     3.560][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     3.695][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = summarise([19]), l3 = filter([4]))
[     3.730][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = filter([4]), l3 = summarise([19]))
[     3.755][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = natural_join3([2]), l3 = filter([4]))
[     3.765][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = filter([4]), l3 = filter([4]))
[     3.788][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = filter([4]), l3 = anti_join())
[     3.921][cube-solver-8][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     3.922][MainProcess][INFO] Statistics:
[     3.922][MainProcess][INFO] 	Generated cubes: 152
[     3.922][MainProcess][INFO] 	Attempted programs: 30
[     3.923][MainProcess][INFO] 		Rejected: 14
[     3.923][MainProcess][INFO] 		Failed: 15
[     3.923][MainProcess][INFO] 	Blacklist clauses: 25
[     3.923][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     3.924][MainProcess][DEBUG] 	0: Counter({'mutate': 382, 'summarise': 187, 'natural_join3': 180})
[     3.924][MainProcess][DEBUG] 	1: Counter({'filter': 332, 'natural_join3': 124, 'natural_join4': 113, 'mutate': 105, 'summarise': 75})
[     3.925][MainProcess][DEBUG] 	2: Counter({'filter': 417, 'natural_join4': 180, 'natural_join3': 152})
[     3.925][MainProcess][DEBUG] Priting statistics for good programs of size 4
[     3.925][MainProcess][DEBUG] 	0: Counter({'natural_join': 8})
[     3.925][MainProcess][DEBUG] 	1: Counter({'summarise': 8})
[     3.925][MainProcess][DEBUG] 	2: Counter({'natural_join3': 8})
[     3.925][MainProcess][DEBUG] 	3: Counter({'filter': 8})
[     3.925][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param2, @param1, @param0), n = n(), S_name, meets_at), n >= 2)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/4-1.txt", col_types = cols(C_name = col_character(),meets_at = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/4-2.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/4-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/4.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input3, input2) %>% inner_join(input1)
df5 <- df4 %>% group_by(S_name, meets_at) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n >= 2)
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT S_name,
          meets_at,
          COUNT() AS n
   FROM
     (SELECT LHS.S_key AS S_key,
             LHS.S_name AS S_name,
             LHS.C_name AS C_name,
             RHS.meets_at AS meets_at
      FROM
        (SELECT LHS.S_key AS S_key,
                LHS.S_name AS S_name,
                RHS.C_name AS C_name
         FROM input3 AS LHS
         INNER JOIN input2 AS RHS ON (LHS.S_key = RHS.S_key)) AS LHS
      INNER JOIN input1 AS RHS ON (LHS.C_name = RHS.C_name))
   GROUP BY S_name,
            meets_at)
WHERE (n >= 2.0)
ORDER BY S_name
