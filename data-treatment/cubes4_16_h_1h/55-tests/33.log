[     1.674][MainProcess][INFO] Parsing specification...
[     1.677][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.677][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.677][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.678][MainProcess][DEBUG] Reading input files...
[     1.685][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-1.txt: ['string', 'string']
[     1.690][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-2.txt: ['string', 'string']
[     1.695][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-3.txt: ['string', 'string']
[     1.700][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/33.out: ['string']
[     1.730][MainProcess][DEBUG] Generating DSL...
[     1.753][MainProcess][INFO] Creating 16 processes
[     1.818][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.819][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.819][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.819][MainProcess][DEBUG] Increasing generator loc to 3
[     1.819][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.820][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.822][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.828][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.829][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.836][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.836][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.840][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.845][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.848][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.863][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     1.870][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.877][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.219][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.220][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.222][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.262][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.263][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.264][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.363][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.364][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.365][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.455][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.455][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.457][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.603][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.606][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.609][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.609][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.614][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.615][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.617][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.618][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.618][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.620][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.622][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = anti_join())
[     2.625][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = union())
[     2.625][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = left_join())
[     2.628][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = intersect())
[     2.630][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = cross_join())
[     2.630][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([1]))
[     2.631][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = semi_join())
[     2.633][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = mutate())
[     2.635][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter([1]))
[     2.636][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = inner_join())
[     2.638][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter([1]))
[     2.638][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter([1]))
[     2.641][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = intersect(), l2 = filter([1]))
[     2.640][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([1]), l2 = summarise([2]))
[     2.642][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = semi_join(), l2 = filter([1]))
[     2.643][cube-solver-15][DEBUG] Solving cube (l0 = summarise([2]), l1 = cross_join(), l2 = filter([1]))
[     2.644][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = mutate(), l2 = filter([1]))
[     2.647][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = summarise([2]))
[     2.648][cube-solver-5][DEBUG] Solving cube (l0 = summarise([2]), l1 = inner_join(), l2 = filter([1]))
[     2.648][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = mutate())
[     2.649][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3(), l2 = summarise([2]))
[     2.649][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([1]), l2 = summarise([2]))
[     2.651][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3(), l2 = mutate())
[     2.652][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = summarise([3]))
[     2.653][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = mutate())
[     2.655][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = natural_join())
[     2.655][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = natural_join3())
[     2.655][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = natural_join4())
[     2.657][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = summarise([3]))
[     2.659][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = anti_join())
[     2.659][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = filter([1]))
[     2.661][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = left_join())
[     2.662][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = union())
[     2.663][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = intersect())
[     2.666][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([4]), l2 = semi_join())
[     2.667][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([4]), l2 = inner_join())
[     2.667][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([4]), l2 = cross_join())
[     2.667][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([4]), l2 = mutate())
[     2.668][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = summarise([4]))
[     2.671][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = mutate())
[     2.673][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([1]))
[     2.674][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = summarise([4]))
[     2.674][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = summarise([4]))
[     2.674][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = mutate())
[     2.675][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = mutate())
[     2.676][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = union(), l2 = summarise([4]))
[     2.678][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = union(), l2 = mutate())
[     2.678][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = intersect(), l2 = summarise([5]))
[     2.679][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = intersect(), l2 = mutate())
[     2.681][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = semi_join(), l2 = summarise([5]))
[     2.682][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = semi_join(), l2 = mutate())
[     2.683][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = cross_join(), l2 = mutate())
[     2.683][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = cross_join(), l2 = summarise([5]))
[     2.684][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join())
[     2.685][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join4())
[     2.686][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join3())
[     2.688][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = filter([1]))
[     2.688][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = summarise([5]))
[     2.689][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = anti_join())
[     2.690][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = left_join())
[     2.691][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = intersect())
[     2.691][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = union())
[     2.693][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = semi_join())
[     2.693][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = mutate())
[     2.693][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = cross_join())
[     2.696][cube-solver-15][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = inner_join())
[     2.696][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = inner_join(), l2 = mutate())
[     2.696][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = inner_join(), l2 = summarise([5]))
[     2.698][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([6]), l2 = filter([2]))
[     2.698][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([2]), l2 = summarise([6]))
[     2.699][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([2]), l2 = mutate())
[     2.701][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([2]))
[     2.702][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([6]), l2 = filter([2]))
[     2.704][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = filter([2]), l2 = mutate())
[     2.705][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = summarise([6]))
[     2.706][cube-solver-15][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = mutate())
[     2.707][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([2]))
[     2.709][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = summarise([6]), l2 = filter([2]))
[     2.710][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = summarise([6]))
[     2.711][cube-solver-15][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = mutate())
[     2.712][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([6]), l2 = filter([2]))
[     2.712][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([2]))
[     2.714][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = filter([2]), l2 = summarise([6]))
[     2.716][cube-solver-15][DEBUG] Solving cube (l0 = intersect(), l1 = filter([2]), l2 = mutate())
[     2.717][cube-solver-10][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([2]))
[     2.718][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([6]), l2 = filter([2]))
[     2.719][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = summarise([6]))
[     2.721][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([2]))
[     2.721][cube-solver-15][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = mutate())
[     2.723][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([6]), l2 = filter([2]))
[     2.724][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([2]), l2 = summarise([6]))
[     2.725][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([2]), l2 = mutate())
[     2.725][cube-solver-15][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([2]))
[     2.727][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([2]))
[     2.728][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([1]), l2 = filter([2]))
[     2.730][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([2]))
[     2.730][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([6]), l2 = filter([2]))
[     2.732][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join())
[     2.733][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join3([1]))
[     2.734][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join4())
[     2.737][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = summarise([7]))
[     2.740][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = filter([2]))
[     2.746][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = anti_join())
[     2.746][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = left_join())
[     2.751][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = union())
[     2.752][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = intersect())
[     2.755][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = semi_join())
[     2.757][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = cross_join())
[     2.761][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = mutate())
[     2.764][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = inner_join())
[     2.765][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([4]))
[     2.769][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([4]))
[     2.771][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([4]))
[     2.773][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([4]))
[     2.776][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([4]))
[     2.777][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([4]))
[     2.780][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([4]))
[     2.784][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([4]))
[     2.786][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([9]), l2 = filter([4]))
[     2.791][cube-solver-15][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = summarise([9]))
[     2.800][cube-solver-15][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = mutate())
[     2.802][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([4]))
[     2.803][MainProcess][DEBUG] Increasing generator loc to 4
[     2.804][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     2.806][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     2.837][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = summarise([9]))
[     2.855][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     3.007][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([10]), l2 = mutate())
[     3.019][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     3.054][cube-solver-3][DEBUG] Solving cube (l0 = summarise([11]), l1 = natural_join3([1]), l2 = filter([12]))
[     3.090][cube-solver-2][DEBUG] Solving cube (l0 = summarise([12]), l1 = natural_join(), l2 = filter([15]))
[     3.112][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     3.244][cube-solver-0][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join4(), l2 = filter([20]))
[     3.260][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     3.348][cube-solver-1][DEBUG] Solving cube (l0 = summarise([18]), l1 = summarise([18]), l2 = filter([24]))
[     3.373][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     3.935][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = natural_join(), l3 = filter([24]))
[     3.936][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = natural_join3([2]), l3 = filter([24]))
[     3.961][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = natural_join4(), l3 = filter([24]))
[     3.982][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([20]), l2 = filter([24]), l3 = summarise([20]))
[     4.010][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([20]), l2 = filter([24]), l3 = filter([24]))
[     4.036][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([20]), l2 = filter([24]), l3 = anti_join())
[     4.125][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = summarise([20]), l3 = filter([24]))
[     4.156][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([24]), l3 = left_join())
[     4.296][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([24]), l3 = natural_join([2]))
[     4.417][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([24]), l3 = natural_join3([2]))
[     4.548][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([24]), l3 = natural_join4())
[     5.531][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     6.753][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = union())
[     7.032][cube-solver-7][DEBUG] Found solution with cube (l0 = natural_join(), l1 = summarise([19]), l2 = natural_join3([2]), l3 = filter([24]))
[     7.035][MainProcess][INFO] Statistics:
[     7.035][MainProcess][INFO] 	Generated cubes: 154
[     7.035][MainProcess][INFO] 	Attempted programs: 133
[     7.035][MainProcess][INFO] 		Rejected: 56
[     7.035][MainProcess][INFO] 		Failed: 76
[     7.035][MainProcess][INFO] 	Blacklist clauses: 49
[     7.036][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     7.037][MainProcess][DEBUG] 	0: Counter({'mutate': 1410, 'natural_join3': 514, 'summarise': 406})
[     7.039][MainProcess][DEBUG] 	1: Counter({'natural_join3': 757, 'filter': 560, 'natural_join4': 500, 'mutate': 320, 'summarise': 194})
[     7.040][MainProcess][DEBUG] 	2: Counter({'filter': 1771, 'natural_join4': 360, 'natural_join3': 200})
[     7.040][MainProcess][DEBUG] Priting statistics for good programs of size 4
[     7.040][MainProcess][DEBUG] 	0: Counter({'natural_join': 644})
[     7.041][MainProcess][DEBUG] 	1: Counter({'summarise': 644})
[     7.041][MainProcess][DEBUG] 	2: Counter({'natural_join': 248, 'natural_join3': 216, 'filter': 180})
[     7.042][MainProcess][DEBUG] 	3: Counter({'filter': 464, 'natural_join4': 100, 'left_join': 32, 'natural_join3': 30, 'natural_join': 18})
[     7.042][MainProcess][INFO] Solution found: filter(natural_join3(@param0, summarise(natural_join(@param0, @param2), n = n(), S_key, S_name), @param1), color == 'green' & n == max(n))
[     7.181][cube-solver-1][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([24]), l3 = natural_join4())

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/33.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input3)
df5 <- df4 %>% group_by(S_key, S_name) %>% summarise(n = n()) %>% ungroup()
df6 <- inner_join(input1, df5) %>% inner_join(input2)
df7 <- df6 %>% filter(color == 'green' & n == max(n))
out <- df7 %>% select(S_name) %>% distinct() %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT `S_name`
FROM
  (SELECT `S_key`,
          `P_id`,
          `S_name`,
          `n`,
          `color`
   FROM
     (SELECT `S_key`,
             `P_id`,
             `S_name`,
             `n`,
             `color`,
             MAX(`n`) OVER () AS `zzz4`
      FROM
        (SELECT `LHS`.`S_key` AS `S_key`,
                `LHS`.`P_id` AS `P_id`,
                `LHS`.`S_name` AS `S_name`,
                `LHS`.`n` AS `n`,
                `RHS`.`color` AS `color`
         FROM
           (SELECT `LHS`.`S_key` AS `S_key`,
                   `LHS`.`P_id` AS `P_id`,
                   `RHS`.`S_name` AS `S_name`,
                   `RHS`.`n` AS `n`
            FROM `input1` AS `LHS`
            INNER JOIN
              (SELECT `S_key`,
                      `S_name`,
                      COUNT() AS `n`
               FROM
                 (SELECT `LHS`.`S_key` AS `S_key`,
                         `LHS`.`P_id` AS `P_id`,
                         `RHS`.`S_name` AS `S_name`
                  FROM `input1` AS `LHS`
                  INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
               GROUP BY `S_key`,
                        `S_name`) AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`)) AS `LHS`
         INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)))
   WHERE (`color` = 'green'
          AND n = zzz4))
ORDER BY S_name
