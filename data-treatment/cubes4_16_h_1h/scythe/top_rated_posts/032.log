[     1.578][MainProcess][INFO] Parsing specification...
[     1.580][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.580][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.581][MainProcess][DEBUG] Reading input files...
[     1.588][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i032.csv: ['string', 'string', 'int64']
[     1.593][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o032.csv: ['string', 'int64', 'int64']
[     1.618][MainProcess][DEBUG] Generating DSL...
[     1.632][MainProcess][INFO] Creating 16 processes
[     1.691][MainProcess][DEBUG] Increasing generator loc to 2
[     1.691][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.692][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.692][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.692][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     1.692][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     1.692][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     1.692][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     1.692][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.693][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     1.697][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     1.702][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     1.706][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     1.711][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     1.717][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     1.720][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     1.723][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     1.805][cube-solver-0][DEBUG] Solving cube (l0 = filter(),)
[     1.830][cube-solver-8][DEBUG] Solving cube (l0 = filter(), l1 = anti_join())
[     1.837][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3())
[     1.838][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join())
[     1.839][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = filter())
[     1.840][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = left_join())
[     1.855][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = inner_join())
[     1.857][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = union())
[     1.864][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = intersect())
[     1.868][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4())
[     1.870][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = filter())
[     1.870][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = filter())
[     1.876][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = filter())
[     1.879][cube-solver-15][DEBUG] Solving cube (l0 = intersect(), l1 = filter())
[     1.951][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter())
[     1.956][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = filter())
[     1.956][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter())
[     1.956][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter())
[     1.959][cube-solver-3][DEBUG] Solving cube (l0 = cross_join(), l1 = filter())
[     1.960][cube-solver-2][DEBUG] Solving cube (l0 = inner_join(), l1 = filter())
[     1.967][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = cross_join())
[     1.970][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = semi_join())
[     2.049][MainProcess][DEBUG] Increasing generator loc to 3
[     2.050][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.244][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     2.306][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = natural_join())
[     2.308][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = natural_join4())
[     2.310][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = filter())
[     2.311][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = anti_join())
[     2.313][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = left_join())
[     2.315][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = union())
[     2.317][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = intersect())
[     2.319][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = semi_join())
[     2.321][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = cross_join([1]))
[     2.323][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = inner_join())
[     2.325][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join(), l2 = filter())
[     2.327][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = filter())
[     2.329][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = union(), l2 = filter())
[     2.331][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = intersect(), l2 = filter())
[     2.333][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = semi_join(), l2 = filter())
[     2.335][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = cross_join([1]), l2 = filter())
[     2.337][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = inner_join(), l2 = filter())
[     2.339][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join(), l2 = filter())
[     2.341][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join3(), l2 = filter())
[     2.343][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join4(), l2 = filter())
[     2.345][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = natural_join())
[     2.347][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = natural_join3())
[     2.349][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = natural_join4())
[     2.351][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = filter())
[     2.353][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = anti_join())
[     2.355][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = left_join())
[     2.355][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.357][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = intersect())
[     2.359][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = semi_join())
[     2.361][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = cross_join([1]))
[     2.364][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = inner_join())
[     2.366][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = anti_join(), l2 = filter())
[     2.368][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = left_join(), l2 = filter())
[     2.370][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = union(), l2 = filter())
[     2.372][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = intersect(), l2 = filter())
[     2.374][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = semi_join(), l2 = filter())
[     2.376][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = cross_join([1]), l2 = filter())
[     2.378][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = inner_join(), l2 = filter())
[     2.380][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join(), l2 = filter())
[     2.382][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join3(), l2 = filter())
[     2.384][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join4(), l2 = filter())
[     2.386][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = natural_join())
[     2.388][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = natural_join3())
[     2.391][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = natural_join4())
[     2.393][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = filter())
[     2.395][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = anti_join())
[     2.397][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = left_join())
[     2.399][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = union())
[     2.400][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = intersect())
[     2.402][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = semi_join())
[     2.404][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = cross_join([1]))
[     2.407][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = inner_join())
[     2.409][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = anti_join(), l2 = filter())
[     2.411][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = left_join(), l2 = filter())
[     2.414][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = union(), l2 = filter())
[     2.416][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = intersect(), l2 = filter())
[     2.418][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = semi_join(), l2 = filter())
[     2.420][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = cross_join([1]), l2 = filter())
[     2.423][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = inner_join(), l2 = filter())
[     2.425][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join(), l2 = filter())
[     2.427][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join3(), l2 = filter())
[     2.429][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join4(), l2 = filter())
[     2.432][cube-solver-3][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = filter())
[     2.500][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = natural_join3())
[     2.503][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = anti_join())
[     2.504][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = left_join())
[     2.616][cube-solver-15][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = union())
[     2.619][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = union())
[     2.699][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.844][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     2.897][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     3.025][cube-solver-0][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = intersect())
[     3.037][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     3.145][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = semi_join())
[     3.255][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = cross_join([1]))
[     3.336][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     3.472][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = inner_join())
[     3.733][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = natural_join())
[     3.892][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     4.147][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = natural_join3())
[     4.149][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = natural_join4())
[     4.150][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = filter())
[     4.152][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = anti_join())
[     4.153][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = left_join())
[     4.155][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = union())
[     4.156][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = intersect())
[     4.157][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = semi_join())
[     4.158][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = cross_join([1]))
[     4.160][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = inner_join())
[     4.161][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = natural_join())
[     4.163][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = natural_join3())
[     4.164][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = natural_join4())
[     4.165][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = filter())
[     4.166][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = anti_join())
[     4.168][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = left_join())
[     4.169][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = union())
[     4.170][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = intersect())
[     4.172][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = semi_join())
[     4.173][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = cross_join([1]))
[     4.175][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = inner_join())
[     4.176][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = natural_join())
[     4.177][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = natural_join3())
[     4.178][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = natural_join4())
[     4.180][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = natural_join())
[     4.447][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     4.477][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     4.631][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = filter())
[     4.745][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = natural_join3())
[     4.751][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = natural_join4())
[     4.754][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = anti_join())
[     4.855][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     5.161][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = left_join())
[     8.807][cube-solver-0][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = union())
[    10.873][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = intersect())
[    11.627][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = semi_join())
[    11.660][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = cross_join([1]))
[    11.860][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = inner_join())
[    13.326][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[    13.581][cube-solver-8][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = natural_join())
[    15.809][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[    16.067][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = natural_join3())
[    16.069][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = natural_join4())
[    16.071][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = filter())
[    23.981][cube-solver-6][DEBUG] Found solution with cube (l0 = filter(), l1 = filter(), l2 = inner_join())
[    23.984][MainProcess][INFO] Statistics:
[    23.986][MainProcess][INFO] 	Generated cubes: 133
[    23.986][MainProcess][INFO] 	Attempted programs: 1143
[    23.986][MainProcess][INFO] 		Rejected: 924
[    23.986][MainProcess][INFO] 		Failed: 218
[    23.986][MainProcess][INFO] 	Blacklist clauses: 1
[    23.986][MainProcess][DEBUG] Priting statistics for good programs of size 1
[    23.988][MainProcess][DEBUG] 	0: Counter({'filter': 96})
[    23.988][MainProcess][DEBUG] Priting statistics for good programs of size 2
[    23.995][MainProcess][DEBUG] 	0: Counter({'filter': 6896, 'inner_join': 2850, 'left_join': 96, 'union': 96, 'semi_join': 96})
[    24.001][MainProcess][DEBUG] 	1: Counter({'filter': 4771, 'inner_join': 2864, 'anti_join': 1344, 'left_join': 288, 'union': 288, 'semi_join': 288, 'natural_join': 192})
[    24.002][MainProcess][DEBUG] Priting statistics for good programs of size 3
[    24.013][MainProcess][DEBUG] 	0: Counter({'filter': 26198})
[    24.024][MainProcess][DEBUG] 	1: Counter({'filter': 15488, 'natural_join': 8626, 'anti_join': 2089})
[    24.035][MainProcess][DEBUG] 	2: Counter({'filter': 5451, 'inner_join': 4202, 'natural_join': 4173, 'left_join': 3076, 'union': 2686, 'semi_join': 2343, 'anti_join': 2167, 'natural_join3': 2110})
[    24.036][MainProcess][INFO] Solution found: inner_join(filter(@param0, Status != 'Inactive'), filter(@param0, Status != 'Active' | Status == 'Inactive'), 'Section')

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i032.csv", col_types = cols(Section = col_character(),Status = col_character(),Count = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o032.csv", col_types = cols(Section = col_character(),Count = col_integer(),Count.other = col_integer()))

df2 <- input1 %>% filter(Status != 'Inactive')
df3 <- input1 %>% filter(Status != 'Active' | Status == 'Inactive')
df4 <- inner_join(df2, df3, by=c('Section'), suffix = c('', '.other'))
out <- df4 %>% select(Section, Count, Count.other) %>% arrange(Section)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `Section`,
       `Count`,
       `Count.other`
FROM
  (SELECT `LHS`.`Section` AS `Section`,
          `LHS`.`Status` AS `Status`,
          `LHS`.`Count` AS `Count`,
          `RHS`.`Status` AS `Status.other`,
          `RHS`.`Count` AS `Count.other`
   FROM
     (SELECT *
      FROM `input1`
      WHERE (`Status` != 'Inactive')) AS `LHS`
   INNER JOIN
     (SELECT *
      FROM `input1`
      WHERE (`Status` != 'Active'
             OR `Status` = 'Inactive')) AS RHS ON (LHS.Section = RHS.Section))
ORDER BY SECTION
