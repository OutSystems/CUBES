[     1.639][MainProcess][INFO] Parsing specification...
[     1.642][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.642][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.642][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.643][MainProcess][DEBUG] Reading input files...
[     1.650][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i017.csv: ['int64', 'string', 'string']
[     1.655][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o017.csv: ['int64', 'string', 'string']
[     1.681][MainProcess][DEBUG] Generating DSL...
[     1.701][MainProcess][INFO] Creating 16 processes
[     1.763][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.763][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.763][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.763][MainProcess][DEBUG] Increasing generator loc to 3
[     1.764][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.764][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.764][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.766][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.770][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.774][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.775][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.782][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.782][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.793][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.794][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.811][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.813][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.078][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.155][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.226][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.232][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.253][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.256][cube-solver-11][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     2.256][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.260][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.261][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     2.263][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.264][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     2.264][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.267][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.267][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.268][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.271][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.276][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.280][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.281][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.285][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.293][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.298][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.306][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.310][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     2.345][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.349][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     2.438][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter([1]))
[     2.441][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = semi_join())
[     2.593][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([2]), l2 = summarise())
[     2.597][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([2]), l2 = cross_join())
[     2.671][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([2]), l2 = mutate())
[     2.680][cube-solver-14][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([2]), l2 = mutate())
[     2.870][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.925][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     3.358][cube-solver-2][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter([4]), l2 = inner_join())
[     3.437][cube-solver-1][DEBUG] Solving cube (l0 = summarise([3]), l1 = anti_join(), l2 = filter([4]))
[     4.477][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     4.963][cube-solver-0][DEBUG] Solving cube (l0 = summarise([3]), l1 = left_join(), l2 = filter([10]))
[     5.112][cube-solver-11][DEBUG] Found solution with cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     5.113][MainProcess][INFO] Statistics:
[     5.114][MainProcess][INFO] 	Generated cubes: 35
[     5.114][MainProcess][INFO] 	Attempted programs: 96
[     5.114][MainProcess][INFO] 		Rejected: 33
[     5.114][MainProcess][INFO] 		Failed: 62
[     5.114][MainProcess][INFO] 	Blacklist clauses: 13
[     5.114][MainProcess][DEBUG] Priting statistics for good programs of size 2
[     5.115][MainProcess][DEBUG] 	0: Counter({'mutate': 325, 'summarise': 156, 'filter': 108})
[     5.116][MainProcess][DEBUG] 	1: Counter({'filter': 481, 'mutate': 60, 'summarise': 48})
[     5.116][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     5.117][MainProcess][DEBUG] 	0: Counter({'summarise': 2307})
[     5.118][MainProcess][DEBUG] 	1: Counter({'filter': 1860, 'natural_join': 321, 'anti_join': 114, 'left_join': 14})
[     5.119][MainProcess][DEBUG] 	2: Counter({'filter': 673, 'left_join': 326, 'natural_join': 282, 'union': 268, 'natural_join3': 204, 'mutate': 192, 'inner_join': 144, 'semi_join': 108, 'anti_join': 89, 'summarise': 24})
[     5.120][MainProcess][INFO] Solution found: filter(natural_join(summarise(@param0, minID = min(ID), PRODUCT), @param0), str_detect(SKU, 'FOO-') & minID == ID)
[     5.382][cube-solver-0][DEBUG] Found solution with cube (l0 = summarise([3]), l1 = left_join(), l2 = filter([10]))
[     5.740][MainProcess][ERROR] Error while trying to convert R code to SQL.

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i017.csv", col_types = cols(ID = col_integer(),SKU = col_character(),PRODUCT = col_character()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o017.csv", col_types = cols(ID = col_integer(),SKU = col_character(),PRODUCT = col_character()))

df2 <- input1 %>% group_by(PRODUCT) %>% summarise(minID = min(ID)) %>% ungroup()
df3 <- inner_join(df2, input1)
df4 <- df3 %>% filter(str_detect(SKU, 'FOO-') & minID == ID)
out <- df4 %>% select(ID = minID, SKU, PRODUCT) %>% arrange(ID)

Failed to generate SQL query
