[     1.586][MainProcess][INFO] Parsing specification...
[     1.590][MainProcess][DEBUG] Reading input files...
[     1.596][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i044.csv: ['int64', 'int64']
[     1.600][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o044.csv: ['int64', 'int64', 'int64']
[     1.627][MainProcess][DEBUG] Generating DSL...
[     1.646][MainProcess][INFO] Creating 16 processes
[     1.733][MainProcess][DEBUG] Increasing generator loc to 2
[     1.733][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.733][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     1.734][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.734][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     1.734][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.734][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     1.734][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     1.734][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     1.734][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     1.739][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     1.742][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     1.752][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     1.765][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     1.767][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     1.768][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     1.773][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     1.834][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     1.879][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     1.904][cube-solver-1][DEBUG] Found solution with cube (l0 = mutate(),)
[     1.905][MainProcess][INFO] Statistics:
[     1.906][MainProcess][INFO] 	Generated cubes: 16
[     1.906][MainProcess][INFO] 	Attempted programs: 1
[     1.906][MainProcess][INFO] 		Rejected: 0
[     1.906][MainProcess][INFO] 		Failed: 0
[     1.906][MainProcess][INFO] 	Blacklist clauses: 0
[     1.906][MainProcess][DEBUG] Priting statistics for good programs of size 1
[     1.906][MainProcess][DEBUG] 	0: Counter({'summarise': 6, 'mutate': 1})
[     1.907][MainProcess][INFO] Solution found: mutate(@param0, cumsumcount = cumsum(count))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i044.csv", col_types = cols(id = col_integer(),count = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o044.csv", col_types = cols(id = col_integer(),count = col_integer(),sumcount = col_integer()))

df2 <- input1 %>% mutate(cumsumcount = cumsum(count))
out <- df2 %>% select(id, count, sumcount = cumsumcount) %>% arrange(id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT id,
       COUNT,
       SUM(COUNT) OVER (ROWS UNBOUNDED PRECEDING) AS sumcount
FROM input1
ORDER BY id
