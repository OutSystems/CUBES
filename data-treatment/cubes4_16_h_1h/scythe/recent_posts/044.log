[     1.570][MainProcess][INFO] Parsing specification...
[     1.573][MainProcess][DEBUG] Reading input files...
[     1.580][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/044_1.csv: ['int64', 'string']
[     1.584][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/044_2.csv: ['string', 'int64']
[     1.589][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/044_o.csv: ['int64', 'string']
[     1.616][MainProcess][DEBUG] Generating DSL...
[     1.628][MainProcess][INFO] Creating 16 processes
[     1.688][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.689][cube-solver-4][DEBUG] Initialising process for 1 lines of code.
[     1.689][cube-solver-3][DEBUG] Initialising process for 1 lines of code.
[     1.689][cube-solver-2][DEBUG] Initialising process for 1 lines of code.
[     1.689][cube-solver-5][DEBUG] Initialising process for 1 lines of code.
[     1.689][MainProcess][DEBUG] Increasing generator loc to 2
[     1.689][cube-solver-6][DEBUG] Initialising process for 1 lines of code.
[     1.689][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     1.692][cube-solver-7][DEBUG] Initialising process for 1 lines of code.
[     1.693][cube-solver-8][DEBUG] Initialising process for 1 lines of code.
[     1.697][cube-solver-9][DEBUG] Initialising process for 1 lines of code.
[     1.700][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     1.712][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     1.713][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     1.718][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     1.722][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     1.727][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     1.742][cube-solver-8][DEBUG] Solving cube (l0 = cross_join(),)
[     1.744][cube-solver-4][DEBUG] Solving cube (l0 = left_join(),)
[     1.750][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(),)
[     1.778][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     1.780][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(),)
[     1.784][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(),)
[     1.785][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(),)
[     1.785][cube-solver-3][DEBUG] Solving cube (l0 = anti_join(),)
[     1.786][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.786][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.788][cube-solver-6][DEBUG] Solving cube (l0 = intersect(),)
[     1.792][cube-solver-5][DEBUG] Solving cube (l0 = union(),)
[     1.795][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(),)
[     1.810][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join())
[     1.813][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join4())
[     1.815][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = anti_join())
[     1.817][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = left_join())
[     1.819][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = union())
[     1.819][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = intersect())
[     1.820][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = intersect())
[     1.822][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = semi_join())
[     1.824][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = cross_join([2]))
[     1.827][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = inner_join([3]))
[     1.829][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = cross_join([2]))
[     1.831][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join())
[     1.834][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join3())
[     1.836][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join4())
[     1.838][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = anti_join())
[     1.841][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = left_join())
[     1.843][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = union())
[     1.845][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = intersect())
[     1.847][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = semi_join())
[     1.849][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = cross_join([2]))
[     1.851][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = inner_join([3]))
[     1.854][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join())
[     1.856][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join3())
[     1.857][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join4())
[     1.859][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = natural_join())
[     1.867][cube-solver-11][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join())
[     1.926][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = union())
[     1.938][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = semi_join())
[     1.946][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     1.969][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join())
[     1.970][cube-solver-15][DEBUG] Solving cube (l0 = anti_join([5]), l1 = natural_join4())
[     1.981][cube-solver-15][DEBUG] Solving cube (l0 = anti_join([6]), l1 = anti_join([6]))
[     1.985][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = inner_join([6]))
[     1.991][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     1.992][cube-solver-15][DEBUG] Solving cube (l0 = anti_join([7]), l1 = union())
[     1.992][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join3())
[     1.995][cube-solver-2][DEBUG] Solving cube (l0 = anti_join([7]), l1 = intersect([2]))
[     2.052][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     2.059][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.068][cube-solver-7][DEBUG] Solving cube (l0 = anti_join([10]), l1 = natural_join3())
[     2.074][cube-solver-7][DEBUG] Solving cube (l0 = anti_join([10]), l1 = inner_join([6]))
[     2.083][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     2.113][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.125][cube-solver-4][DEBUG] Solving cube (l0 = anti_join([10]), l1 = left_join())
[     2.259][cube-solver-3][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join3())
[     2.259][cube-solver-6][DEBUG] Solving cube (l0 = anti_join([10]), l1 = semi_join())
[     2.271][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([10]), l1 = cross_join([2]))
[     2.285][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join())
[     2.497][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     2.499][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = anti_join([10]))
[     2.559][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = left_join())
[     2.699][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join4())
[     2.703][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = union())
[     2.868][cube-solver-14][DEBUG] Solving cube (l0 = left_join(), l1 = intersect([6]))
[     3.213][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = semi_join())
[     3.227][cube-solver-11][DEBUG] Solving cube (l0 = left_join(), l1 = cross_join([2]))
[     3.447][cube-solver-11][DEBUG] Solving cube (l0 = left_join(), l1 = inner_join([23]))
[     3.471][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = natural_join())
[     3.519][cube-solver-15][DEBUG] Solving cube (l0 = union(), l1 = natural_join3())
[     3.528][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = natural_join4())
[     3.532][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = anti_join([10]))
[     3.639][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = left_join())
[     3.720][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = union())
[     3.873][cube-solver-14][DEBUG] Solving cube (l0 = union(), l1 = intersect([6]))
[     3.988][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = semi_join())
[     4.019][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = cross_join([2]))
[     4.147][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = inner_join([23]))
[     4.384][cube-solver-13][DEBUG] Solving cube (l0 = intersect([6]), l1 = natural_join())
[     4.407][cube-solver-1][DEBUG] Solving cube (l0 = intersect([6]), l1 = natural_join3())
[     4.680][cube-solver-14][DEBUG] Solving cube (l0 = intersect([8]), l1 = natural_join4())
[     4.687][cube-solver-13][DEBUG] Solving cube (l0 = intersect([8]), l1 = anti_join([10]))
[     4.688][cube-solver-14][DEBUG] Solving cube (l0 = intersect([8]), l1 = left_join())
[     4.903][cube-solver-12][DEBUG] Solving cube (l0 = intersect([8]), l1 = union())
[     4.921][cube-solver-9][DEBUG] Solving cube (l0 = intersect([8]), l1 = intersect([8]))
[     4.963][cube-solver-14][DEBUG] Solving cube (l0 = intersect([8]), l1 = semi_join())
[     5.019][cube-solver-5][DEBUG] Solving cube (l0 = intersect([8]), l1 = cross_join([2]))
[     5.146][cube-solver-14][DEBUG] Solving cube (l0 = intersect([8]), l1 = inner_join([23]))
[     5.191][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join())
[     5.260][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join3())
[     5.282][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join4())
[     5.286][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = anti_join([10]))
[     5.484][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = left_join())
[     5.669][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = union())
[     5.748][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = intersect([8]))
[     5.769][cube-solver-13][DEBUG] Solving cube (l0 = semi_join(), l1 = semi_join())
[     5.995][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = cross_join([2]))
[     6.142][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = inner_join([23]))
[     6.188][cube-solver-5][DEBUG] Solving cube (l0 = cross_join([2]), l1 = natural_join())
[     6.241][cube-solver-5][DEBUG] Solving cube (l0 = cross_join([4]), l1 = natural_join3())
[     6.245][cube-solver-5][DEBUG] Solving cube (l0 = cross_join([4]), l1 = natural_join4())
[     6.250][cube-solver-5][DEBUG] Solving cube (l0 = cross_join([4]), l1 = anti_join([10]))
[     6.261][cube-solver-5][DEBUG] Solving cube (l0 = cross_join([4]), l1 = left_join())
[     6.265][cube-solver-5][DEBUG] Solving cube (l0 = cross_join([4]), l1 = union())
[     6.269][cube-solver-5][DEBUG] Solving cube (l0 = cross_join([4]), l1 = intersect([8]))
[     6.279][cube-solver-5][DEBUG] Solving cube (l0 = cross_join([4]), l1 = semi_join())
[     6.283][cube-solver-5][DEBUG] Solving cube (l0 = cross_join([4]), l1 = cross_join([4]))
[     6.290][cube-solver-5][DEBUG] Solving cube (l0 = cross_join([4]), l1 = inner_join([23]))
[     6.311][cube-solver-5][DEBUG] Solving cube (l0 = inner_join([23]), l1 = natural_join())
[     6.503][cube-solver-12][DEBUG] Solving cube (l0 = inner_join([24]), l1 = natural_join3())
[     6.520][cube-solver-15][DEBUG] Solving cube (l0 = inner_join([24]), l1 = natural_join4())
[     6.529][cube-solver-13][DEBUG] Solving cube (l0 = inner_join([24]), l1 = anti_join([10]))
[     6.532][cube-solver-15][DEBUG] Solving cube (l0 = inner_join([24]), l1 = left_join())
[     6.683][cube-solver-9][DEBUG] Solving cube (l0 = inner_join([27]), l1 = union())
[     6.836][cube-solver-3][DEBUG] Solving cube (l0 = inner_join([31]), l1 = intersect([8]))
[     7.146][cube-solver-2][DEBUG] Solving cube (l0 = inner_join([41]), l1 = cross_join([4]))
[     7.162][cube-solver-4][DEBUG] Solving cube (l0 = inner_join([41]), l1 = semi_join())
[     7.239][cube-solver-14][DEBUG] Solving cube (l0 = inner_join([42]), l1 = inner_join([42]))
[     7.651][MainProcess][DEBUG] Increasing generator loc to 3
[     7.652][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     7.795][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     7.875][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = natural_join())
[     8.012][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = natural_join3())
[     8.023][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = natural_join4())
[     8.025][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     8.033][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = left_join())
[     8.245][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = anti_join([10]))
[     8.255][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = union())
[     9.532][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = intersect([8]))
[     9.666][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = semi_join())
[     9.827][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = cross_join([4]))
[    10.066][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = inner_join([46]))
[    10.190][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[    10.436][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = natural_join())
[    10.703][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = natural_join3())
[    10.854][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = natural_join4())
[    10.859][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = anti_join([10]))
[    11.029][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[    11.237][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = left_join())
[    11.326][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[    11.553][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = union())
[    11.819][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[    12.046][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = intersect([8]))
[    12.523][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[    12.745][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = semi_join())
[    12.790][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[    13.043][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = cross_join([4]))
[    13.432][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[    13.649][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = inner_join([46]))
[    14.652][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = union(), l2 = natural_join())
[    16.964][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = union(), l2 = natural_join3())
[    18.308][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = union(), l2 = natural_join4())
[    18.311][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = union(), l2 = anti_join([10]))
[    18.340][cube-solver-13][DEBUG] Found solution with cube (l0 = inner_join([24]), l1 = anti_join([10]))
[    18.341][MainProcess][INFO] Statistics:
[    18.341][MainProcess][INFO] 	Generated cubes: 134
[    18.341][MainProcess][INFO] 	Attempted programs: 3316
[    18.341][MainProcess][INFO] 		Rejected: 1223
[    18.342][MainProcess][INFO] 		Failed: 2092
[    18.342][MainProcess][INFO] 	Blacklist clauses: 68
[    18.342][MainProcess][DEBUG] Priting statistics for good programs of size 1
[    18.342][MainProcess][DEBUG] 	0: Counter({'inner_join': 68, 'left_join': 24, 'natural_join': 24, 'union': 24, 'anti_join': 16, 'semi_join': 8})
[    18.342][MainProcess][DEBUG] Priting statistics for good programs of size 2
[    18.352][MainProcess][DEBUG] 	0: Counter({'inner_join': 5625, 'left_join': 2923, 'union': 2869, 'natural_join': 2248, 'semi_join': 1300, 'anti_join': 1176, 'intersect': 400})
[    18.361][MainProcess][DEBUG] 	1: Counter({'inner_join': 7585, 'natural_join3': 2416, 'union': 1516, 'left_join': 1468, 'anti_join': 1457, 'natural_join': 1304, 'semi_join': 796})
[    18.361][MainProcess][DEBUG] Priting statistics for good programs of size 3
[    18.365][MainProcess][DEBUG] 	0: Counter({'natural_join': 7215})
[    18.369][MainProcess][DEBUG] 	1: Counter({'left_join': 5055, 'anti_join': 1633, 'union': 528})
[    18.372][MainProcess][DEBUG] 	2: Counter({'inner_join': 1522, 'natural_join': 1489, 'left_join': 1021, 'union': 952, 'natural_join3': 863, 'semi_join': 693, 'anti_join': 676})
[    18.373][MainProcess][INFO] Solution found: anti_join(@param0, inner_join(@param0, @param1, 'OriginalID' = 'OriginalID','Area' = 'Part'), )

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/044_1.csv", col_types = cols(OriginalID = col_integer(),Area = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/scythe/recent_posts/tables/044_2.csv", col_types = cols(Part = col_character(),OriginalID = col_integer()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/044_o.csv", col_types = cols(OriginalID = col_integer(),Area = col_character()))

df3 <- inner_join(input1, input2, by=c('OriginalID' = 'OriginalID','Area' = 'Part'), suffix = c('', '.other'))
df4 <- anti_join(input1, df3, by=c())
out <- df4 %>% select(OriginalID, Area) %>% arrange(OriginalID)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT OriginalID,
       Area
FROM
  (SELECT *
   FROM input1 AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT LHS.OriginalID AS OriginalID,
                  LHS.Area AS Area
           FROM input1 AS LHS
           INNER JOIN input2 AS RHS ON (LHS.OriginalID = RHS.OriginalID
                                        AND LHS.Area = RHS.Part)) AS RHS
        WHERE (LHS.OriginalID = RHS.OriginalID
               AND LHS.Area = RHS.Area) ))
ORDER BY OriginalID
