[     3.080][MainProcess][INFO] Parsing specification...
[     3.085][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.085][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.085][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     3.086][MainProcess][DEBUG] Reading input files...
[     3.095][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/016_2.csv: ['string', 'datetime64[ns]']
[     3.101][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/016_o.csv: ['string', 'datetime64[ns]', 'int64']
[     3.140][MainProcess][DEBUG] Generating DSL...
[     3.214][MainProcess][INFO] Creating 16 processes
[     3.290][MainProcess][DEBUG] Increasing generator loc to 4
[     3.381][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     3.382][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     3.447][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     3.447][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     3.447][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     3.452][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     3.455][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     3.455][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     3.456][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     3.456][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     3.462][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[     3.465][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     3.465][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     3.466][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     3.476][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     3.484][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     6.647][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     6.652][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     6.680][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     6.701][cube-solver-8][DEBUG] Solving cube (l0 = mutate(), l1 = summarise(), l2 = filter())
[     6.712][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = mutate())
[     6.726][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = summarise())
[     6.729][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[     6.735][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[     6.738][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     6.741][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter())
[     6.746][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise())
[     6.762][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     6.763][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = mutate())
[     6.773][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     6.774][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise())
[     6.781][cube-solver-6][DEBUG] Initialising process for 4 lines of code.
[     6.851][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter())
[     8.504][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter(), l3 = summarise())
[     8.510][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter(), l3 = summarise())
[     8.513][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter(), l3 = mutate())
[     8.516][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = summarise(), l3 = filter())
[     8.517][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = mutate(), l3 = filter())
[     8.520][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = summarise(), l3 = filter())
[     8.523][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter(), l3 = summarise())
[     8.527][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = mutate(), l3 = filter())
[     8.526][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter(), l3 = mutate())
[     8.527][cube-solver-12][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter(), l3 = mutate())
[     8.530][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise(), l3 = summarise())
[     8.533][cube-solver-14][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate(), l3 = summarise())
[     8.533][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate(), l3 = mutate())
[     8.534][cube-solver-12][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise(), l3 = mutate())
[     8.537][cube-solver-14][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter(), l3 = summarise())
[     8.537][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = summarise(), l3 = filter())
[     8.540][cube-solver-14][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = mutate(), l3 = filter())
[     8.540][cube-solver-12][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter(), l3 = mutate())
[     8.541][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = summarise(), l3 = filter())
[     8.544][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter(), l3 = summarise())
[     8.545][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter(), l3 = mutate())
[     8.547][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = mutate(), l3 = filter())
[     8.547][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise(), l3 = summarise())
[     8.548][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise(), l3 = mutate())
[     8.551][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate(), l3 = summarise())
[     8.552][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = summarise(), l3 = filter())
[     8.554][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate(), l3 = mutate())
[     8.554][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter(), l3 = summarise())
[     8.556][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter(), l3 = mutate())
[     8.558][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = mutate(), l3 = filter())
[     8.560][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter(), l3 = summarise())
[     8.560][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = summarise(), l3 = filter())
[     8.561][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter(), l3 = mutate())
[     8.599][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = mutate(), l3 = filter())
[     8.607][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = mutate(), l3 = filter())
[    11.731][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise(), l3 = summarise())
[    11.738][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = summarise(), l3 = filter())
[    11.742][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter(), l3 = summarise())
[    11.745][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter(), l3 = mutate())
[    11.748][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = mutate(), l3 = filter())
[    11.752][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = summarise(), l3 = filter())
[    11.755][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter(), l3 = summarise())
[    11.758][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter(), l3 = mutate())
[    11.760][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = mutate(), l3 = filter())
[    11.763][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = natural_join(), l3 = filter())
[    11.847][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = summarise(), l3 = filter())
[    11.858][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise(), l3 = mutate())
[    11.860][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = natural_join3(), l3 = filter())
[    11.871][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = natural_join4(), l3 = filter())
[    11.879][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = summarise(), l3 = filter())
[    11.886][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter(), l3 = natural_join())
[    11.936][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate(), l3 = summarise())
[    11.949][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter(), l3 = natural_join3())
[    11.951][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate(), l3 = mutate())
[    11.959][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter(), l3 = natural_join4())
[    11.964][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter(), l3 = summarise())
[    11.969][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter(), l3 = filter())
[    11.974][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter(), l3 = anti_join())
[    13.587][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[    15.095][cube-solver-14][DEBUG] Found solution with cube (l0 = summarise(), l1 = natural_join(), l2 = filter(), l3 = mutate())
[    15.096][MainProcess][INFO] Statistics:
[    15.096][MainProcess][INFO] 	Generated cubes: 71
[    15.097][MainProcess][INFO] 	Attempted programs: 168
[    15.097][MainProcess][INFO] 		Rejected: 167
[    15.097][MainProcess][INFO] 		Failed: 0
[    15.097][MainProcess][INFO] 	Blacklist clauses: 1
[    15.097][MainProcess][DEBUG] Priting statistics for good programs of size 3
[    15.100][MainProcess][DEBUG] 	0: Counter({'mutate': 3291, 'summarise': 2224})
[    15.103][MainProcess][DEBUG] 	1: Counter({'filter': 2850, 'mutate': 2102, 'summarise': 564})
[    15.106][MainProcess][DEBUG] 	2: Counter({'filter': 2667, 'mutate': 1938, 'summarise': 912})
[    15.106][MainProcess][DEBUG] Priting statistics for good programs of size 4
[    15.108][MainProcess][DEBUG] 	0: Counter({'summarise': 3681})
[    15.110][MainProcess][DEBUG] 	1: Counter({'natural_join': 2250, 'summarise': 1431})
[    15.112][MainProcess][DEBUG] 	2: Counter({'filter': 1985, 'mutate': 811, 'natural_join': 405, 'natural_join3': 362, 'summarise': 120})
[    15.114][MainProcess][DEBUG] 	3: Counter({'filter': 1699, 'mutate': 828, 'summarise': 492, 'natural_join3': 344, 'natural_join': 250, 'anti_join': 72})
[    15.114][MainProcess][INFO] Solution found: mutate(filter(natural_join(@param0, summarise(@param0, n = n(), CustomerId)), n > 1 & ReportDt >= mdy('10/19/2016')), maxReportDt = max(ReportDt))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/016_2.csv", col_types = cols(CustomerId = col_character(),ReportDt = col_character()))
input1$ReportDt <- mdy(input1$ReportDt)
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/016_o.csv", col_types = cols(c1 = col_character(),c2 = col_character(),c3 = col_integer()))
expected_output$c2 <- mdy(expected_output$c2)

df2 <- input1 %>% group_by(CustomerId) %>% summarise(n = n()) %>% ungroup()
df3 <- inner_join(input1, df2)
df4 <- df3 %>% filter(n > 1 & ReportDt >= mdy('10/19/2016'))
df5 <- df4 %>% mutate(maxReportDt = max(ReportDt))
out <- df5 %>% select(c1 = CustomerId, c2 = maxReportDt, c3 = n) %>% distinct() %>% arrange(c1)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT `CustomerId` AS `c1`,
                MAX(`ReportDt`) OVER () AS `c2`,
                                     `n` AS `c3`
FROM
  (SELECT `LHS`.`CustomerId` AS `CustomerId`,
          `LHS`.`ReportDt` AS `ReportDt`,
          `RHS`.`n` AS `n`
   FROM `input1` AS `LHS`
   INNER JOIN
     (SELECT `CustomerId`,
             COUNT() AS `n`
      FROM `input1`
      GROUP BY `CustomerId`) AS `RHS` ON (`LHS`.`CustomerId` = `RHS`.`CustomerId`))
WHERE (`n` > 1.0
       AND `ReportDt` >= mdy('10/19/2016'))
ORDER BY c1
