[     3.325][MainProcess][INFO] Parsing specification...
[     3.329][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.329][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.330][MainProcess][DEBUG] Reading input files...
[     3.342][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/034.csv: ['string', 'datetime64[ns]', 'datetime64[ns]']
[     3.349][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/034_o.csv: ['string', 'datetime64[ns]', 'datetime64[ns]']
[     3.391][MainProcess][DEBUG] Generating DSL...
[     3.416][MainProcess][INFO] Creating 16 processes
[     3.504][MainProcess][DEBUG] Increasing generator loc to 2
[     3.504][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     3.504][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     3.505][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.505][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     3.505][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.507][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     3.510][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     3.519][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     3.520][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     3.527][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     3.530][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     3.530][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     3.540][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     3.541][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     3.560][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     3.576][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     3.720][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     3.720][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     3.796][cube-solver-5][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate())
[     3.798][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = intersect())
[     3.798][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise())
[     3.800][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join())
[     3.802][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise())
[     3.806][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join())
[     3.808][cube-solver-11][DEBUG] Solving cube (l0 = summarise(), l1 = summarise())
[     3.810][cube-solver-11][DEBUG] Solving cube (l0 = summarise(), l1 = mutate())
[     3.811][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join())
[     3.820][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4())
[     3.821][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join())
[     3.823][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join())
[     3.847][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3())
[     3.851][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     3.852][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = union())
[     3.853][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     3.854][cube-solver-7][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate())
[     3.855][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise())
[     3.857][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate())
[     3.857][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = summarise())
[     3.859][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = mutate())
[     3.870][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise())
[     3.873][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = summarise())
[     3.880][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     3.937][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = left_join())
[     4.013][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate())
[     4.016][cube-solver-3][DEBUG] Solving cube (l0 = union(), l1 = mutate())
[     4.080][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = summarise())
[     4.208][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     4.228][cube-solver-11][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise())
[     4.230][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     4.427][cube-solver-4][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise())
[     4.450][cube-solver-7][DEBUG] Solving cube (l0 = cross_join([1]), l1 = mutate())
[     4.453][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join())
[     4.481][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3())
[     4.481][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4())
[     4.482][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = summarise())
[     4.482][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     4.491][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join())
[     4.530][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = mutate())
[     4.561][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = left_join())
[     4.568][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate())
[     4.604][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = union())
[     4.742][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = intersect())
[     4.818][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join())
[     4.967][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join([1]))
[     5.007][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = mutate())
[     5.114][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join())
[     5.148][cube-solver-0][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise())
[     5.275][cube-solver-12][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate())
[     5.462][MainProcess][DEBUG] Increasing generator loc to 3
[     5.463][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     5.589][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     5.621][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     5.746][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     6.059][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = natural_join())
[     6.063][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     6.066][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = anti_join())
[     6.068][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = left_join())
[     6.071][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = union())
[     6.073][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = intersect())
[     6.075][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = semi_join())
[     6.077][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = cross_join([1]))
[     6.080][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = mutate())
[     6.082][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = inner_join())
[     6.084][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     6.086][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     6.088][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join(), l2 = summarise())
[     6.091][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join(), l2 = mutate())
[     6.092][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     6.093][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = mutate())
[     6.095][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = union(), l2 = summarise())
[     6.097][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = union(), l2 = mutate())
[     6.099][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = intersect(), l2 = summarise())
[     6.101][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = intersect(), l2 = mutate())
[     6.103][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = semi_join(), l2 = summarise())
[     6.105][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = semi_join(), l2 = mutate())
[     6.108][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = cross_join([1]), l2 = summarise())
[     6.110][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = cross_join([1]), l2 = mutate())
[     6.113][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = natural_join())
[     6.115][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = natural_join3())
[     6.117][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = natural_join4())
[     6.119][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = summarise())
[     6.122][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     6.124][cube-solver-3][DEBUG] Found solution with cube (l0 = mutate(), l1 = filter())
[     6.124][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = anti_join())
[     6.124][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     6.125][MainProcess][INFO] Statistics:
[     6.125][MainProcess][INFO] 	Generated cubes: 84
[     6.125][MainProcess][INFO] 	Attempted programs: 215
[     6.125][MainProcess][INFO] 		Rejected: 117
[     6.125][MainProcess][INFO] 		Failed: 97
[     6.125][MainProcess][INFO] 	Blacklist clauses: 1
[     6.125][MainProcess][DEBUG] Priting statistics for good programs of size 1
[     6.126][MainProcess][DEBUG] 	0: Counter({'mutate': 48, 'summarise': 36})
[     6.126][MainProcess][DEBUG] Priting statistics for good programs of size 2
[     6.127][MainProcess][DEBUG] 	0: Counter({'summarise': 1402, 'mutate': 1034, 'inner_join': 182, 'left_join': 84, 'union': 84, 'semi_join': 84})
[     6.129][MainProcess][DEBUG] 	1: Counter({'anti_join': 399, 'left_join': 381, 'inner_join': 365, 'union': 352, 'mutate': 320, 'natural_join': 314, 'filter': 265, 'semi_join': 252, 'summarise': 222})
[     6.129][MainProcess][INFO] Solution found: filter(mutate(@param0, maxDATE_UPDATE = max(DATE_UPDATE)), maxDATE_UPDATE <= DATE_UPDATE)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/034.csv", col_types = cols(MATERIAL = col_character(),DISCO_DATE = col_character(),DATE_UPDATE = col_character()))
input1$DISCO_DATE <- ymd(input1$DISCO_DATE)
input1$DATE_UPDATE <- ymd(input1$DATE_UPDATE)
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/034_o.csv", col_types = cols(c1 = col_character(),c2 = col_character(),c3 = col_character()))
expected_output$c2 <- ymd(expected_output$c2)
expected_output$c3 <- ymd(expected_output$c3)

df2 <- input1 %>% mutate(maxDATE_UPDATE = max(DATE_UPDATE))
df3 <- df2 %>% filter(maxDATE_UPDATE <= DATE_UPDATE)
out <- df3 %>% select(c1 = MATERIAL, c2 = DISCO_DATE, c3 = DATE_UPDATE) %>% arrange(c1)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT MATERIAL AS c1,
       DISCO_DATE AS c2,
       DATE_UPDATE AS c3
FROM
  (SELECT MATERIAL,
          DISCO_DATE,
          DATE_UPDATE,
          MAX(DATE_UPDATE) OVER () AS maxDATE_UPDATE
   FROM input1)
WHERE (maxDATE_UPDATE <= DATE_UPDATE)
ORDER BY c1
