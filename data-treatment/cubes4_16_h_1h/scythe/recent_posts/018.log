[     1.576][MainProcess][INFO] Parsing specification...
[     1.579][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.579][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.579][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.580][MainProcess][DEBUG] Reading input files...
[     1.589][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/018.csv: ['int64', 'int64', 'datetime64[ns]', 'string']
[     1.594][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/018_o.csv: ['string', 'int64']
[     1.626][MainProcess][DEBUG] Generating DSL...
[     1.655][MainProcess][INFO] Creating 16 processes
[     1.747][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.747][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.747][MainProcess][DEBUG] Increasing generator loc to 3
[     1.747][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.748][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.748][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.748][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.748][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.758][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.761][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.766][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.769][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.784][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.807][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.812][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.831][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     1.832][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.442][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.563][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.564][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.566][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.715][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.717][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.795][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.800][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     2.803][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.805][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.808][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.814][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.814][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.817][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.819][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.826][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.828][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.831][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.831][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.853][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.854][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.858][cube-solver-11][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = left_join())
[     2.860][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = union())
[     2.860][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter([1]))
[     2.866][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter([2]), l2 = intersect())
[     2.998][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([7]))
[     3.007][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = filter([7]), l2 = semi_join())
[     3.105][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([10]), l2 = summarise())
[     3.116][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter([11]), l2 = cross_join())
[     3.170][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter([12]))
[     3.182][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([13]), l2 = mutate())
[     3.220][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([15]), l2 = mutate())
[     3.234][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter([15]), l2 = inner_join())
[     3.890][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter([22]))
[     4.033][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter([23]))
[     4.046][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter([23]))
[     7.493][cube-solver-0][DEBUG] Found solution with cube (l0 = summarise(), l1 = filter())
[     7.495][MainProcess][INFO] Statistics:
[     7.495][MainProcess][INFO] 	Generated cubes: 34
[     7.495][MainProcess][INFO] 	Attempted programs: 127
[     7.495][MainProcess][INFO] 		Rejected: 50
[     7.495][MainProcess][INFO] 		Failed: 76
[     7.495][MainProcess][INFO] 	Blacklist clauses: 23
[     7.495][MainProcess][DEBUG] Priting statistics for good programs of size 2
[     7.497][MainProcess][DEBUG] 	0: Counter({'mutate': 680, 'summarise': 499})
[     7.498][MainProcess][DEBUG] 	1: Counter({'filter': 1179})
[     7.498][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     7.500][MainProcess][DEBUG] 	0: Counter({'summarise': 3599})
[     7.502][MainProcess][DEBUG] 	1: Counter({'filter': 2731, 'natural_join': 463, 'anti_join': 405})
[     7.503][MainProcess][DEBUG] 	2: Counter({'filter': 1280, 'natural_join3': 570, 'natural_join': 425, 'mutate': 368, 'inner_join': 319, 'left_join': 185, 'union': 176, 'semi_join': 120, 'anti_join': 84, 'summarise': 72})
[     7.504][MainProcess][INFO] Solution found: filter(summarise(@param0, n = n(), Course, Date), n > 2 | Date < mdy('10/17/2016'))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/018.csv", col_types = cols(OrderID = col_integer(),CustomerID = col_integer(),Date = col_character(),Course = col_character()))
input1$Date <- mdy(input1$Date)
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/018_o.csv", col_types = cols(c1 = col_character(),c2 = col_integer()))

df2 <- input1 %>% group_by(Course, Date) %>% summarise(n = n()) %>% ungroup()
df3 <- df2 %>% filter(n > 2 | Date < mdy('10/17/2016'))
out <- df3 %>% select(c1 = Course, c2 = n) %>% arrange(c1)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `Course` AS `c1`,
       `n` AS `c2`
FROM
  (SELECT `Course`,
          `Date`,
          COUNT() AS `n`
   FROM `input1`
   GROUP BY `Course`,
            `Date`)
WHERE (`n` > 2.0
       OR `Date` < mdy('10/17/2016'))
ORDER BY c1
