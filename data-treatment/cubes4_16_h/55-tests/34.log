[     1.604][MainProcess][INFO] Parsing specification...
[     1.609][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.609][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.609][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.610][MainProcess][DEBUG] Reading input files...
[     1.615][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-1.txt: ['string', 'string']
[     1.619][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-2.txt: ['string', 'string']
[     1.622][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-3.txt: ['string', 'string']
[     1.627][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/34.out: ['string']
[     1.657][MainProcess][DEBUG] Generating DSL...
[     1.686][MainProcess][INFO] Creating 16 processes
[     1.751][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.751][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.752][MainProcess][DEBUG] Increasing generator loc to 3
[     1.753][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.756][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.757][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.761][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.764][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.772][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.774][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.775][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.780][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.783][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.788][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.788][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.798][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.825][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.575][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.576][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.577][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.578][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.578][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.579][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.579][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.581][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.581][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.664][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.665][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.666][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     3.077][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     3.077][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     3.082][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     3.084][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     3.086][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     3.087][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     3.089][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     3.093][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     3.093][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     3.099][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     3.100][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     3.103][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     3.107][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = union())
[     3.107][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = intersect())
[     3.109][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([1]), l2 = summarise([1]))
[     3.111][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = semi_join())
[     3.111][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([1]), l2 = filter([1]))
[     3.115][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = cross_join())
[     3.115][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = mutate())
[     3.117][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = inner_join())
[     3.117][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([1]))
[     3.120][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = anti_join(), l2 = filter([1]))
[     3.123][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = left_join(), l2 = filter([1]))
[     3.124][cube-solver-9][DEBUG] Solving cube (l0 = summarise([2]), l1 = union(), l2 = filter([1]))
[     3.127][cube-solver-13][DEBUG] Solving cube (l0 = summarise([2]), l1 = intersect(), l2 = filter([1]))
[     3.127][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = filter([1]), l2 = mutate())
[     3.129][cube-solver-9][DEBUG] Solving cube (l0 = summarise([2]), l1 = cross_join(), l2 = filter([1]))
[     3.129][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = semi_join(), l2 = filter([1]))
[     3.133][cube-solver-13][DEBUG] Solving cube (l0 = summarise([2]), l1 = inner_join(), l2 = filter([1]))
[     3.133][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = summarise([2]))
[     3.134][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = mutate(), l2 = filter([1]))
[     3.136][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([1]), l2 = mutate())
[     3.138][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = mutate())
[     3.138][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = summarise([2]))
[     3.138][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3([1]), l2 = mutate())
[     3.139][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3([1]), l2 = summarise([2]))
[     3.142][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = mutate())
[     3.143][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = natural_join())
[     3.143][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = natural_join4())
[     3.145][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = natural_join3([1]))
[     3.146][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = summarise([3]))
[     3.149][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = left_join())
[     3.149][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = filter([1]))
[     3.149][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = anti_join())
[     3.150][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = union())
[     3.154][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = intersect())
[     3.156][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = cross_join())
[     3.157][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = semi_join())
[     3.159][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = mutate())
[     3.160][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = mutate())
[     3.160][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = inner_join())
[     3.161][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = summarise([3]))
[     3.163][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = summarise([3]))
[     3.167][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = summarise([3]))
[     3.167][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = mutate())
[     3.169][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = union(), l2 = summarise([3]))
[     3.169][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = mutate())
[     3.170][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = union(), l2 = mutate())
[     3.172][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = intersect(), l2 = summarise([3]))
[     3.173][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = intersect(), l2 = mutate())
[     3.174][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = semi_join(), l2 = mutate())
[     3.174][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = semi_join(), l2 = summarise([4]))
[     3.176][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = cross_join(), l2 = summarise([4]))
[     3.177][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join())
[     3.177][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join3([1]))
[     3.178][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = cross_join(), l2 = mutate())
[     3.181][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join4())
[     3.182][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = summarise([5]))
[     3.184][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = filter([1]))
[     3.184][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = union())
[     3.185][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = anti_join())
[     3.186][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = left_join())
[     3.189][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = intersect())
[     3.190][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = semi_join())
[     3.192][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = mutate())
[     3.192][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = cross_join())
[     3.193][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = inner_join(), l2 = summarise([6]))
[     3.194][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = inner_join())
[     3.194][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = inner_join(), l2 = mutate())
[     3.198][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([6]), l2 = filter([1]))
[     3.199][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([1]), l2 = mutate())
[     3.199][cube-solver-14][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([1]), l2 = summarise([6]))
[     3.199][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([6]), l2 = filter([1]))
[     3.200][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([1]))
[     3.203][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = filter([1]), l2 = summarise([6]))
[     3.206][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = summarise([6]), l2 = filter([1]))
[     3.207][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = filter([1]), l2 = mutate())
[     3.208][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([1]))
[     3.211][cube-solver-14][DEBUG] Solving cube (l0 = union(), l1 = filter([1]), l2 = mutate())
[     3.211][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = filter([1]), l2 = summarise([6]))
[     3.211][cube-solver-13][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([1]))
[     3.213][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = filter([1]), l2 = summarise([7]))
[     3.213][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([1]))
[     3.214][cube-solver-10][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([7]), l2 = filter([1]))
[     3.215][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = filter([1]), l2 = mutate())
[     3.217][cube-solver-13][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([8]), l2 = filter([1]))
[     3.218][cube-solver-14][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([1]))
[     3.220][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([1]), l2 = summarise([8]))
[     3.222][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([1]), l2 = mutate())
[     3.223][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([1]))
[     3.226][cube-solver-15][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([8]), l2 = filter([1]))
[     3.227][cube-solver-13][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([1]), l2 = mutate())
[     3.227][cube-solver-14][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([1]), l2 = summarise([8]))
[     3.227][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([1]))
[     3.229][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([1]))
[     3.229][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([1]), l2 = filter([1]))
[     3.231][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([1]))
[     3.231][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([8]), l2 = filter([1]))
[     3.232][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = natural_join())
[     3.236][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = natural_join4())
[     3.237][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = natural_join3([1]))
[     3.239][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = filter([1]))
[     3.240][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = summarise([8]))
[     3.243][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = anti_join())
[     3.244][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = left_join())
[     3.248][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = union())
[     3.252][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = intersect())
[     3.253][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = cross_join())
[     3.254][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = semi_join())
[     3.259][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = mutate())
[     3.263][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = inner_join())
[     3.265][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([1]))
[     3.266][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([1]))
[     3.269][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([1]))
[     3.274][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([1]))
[     3.274][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([1]))
[     3.278][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([1]))
[     3.278][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([1]))
[     3.281][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([1]))
[     3.282][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([9]), l2 = filter([1]))
[     3.286][cube-solver-14][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([2]), l2 = summarise([9]))
[     3.287][cube-solver-15][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([2]), l2 = mutate())
[     3.290][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([2]))
[     3.291][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([2]))
[     3.292][MainProcess][DEBUG] Increasing generator loc to 4
[     3.295][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     3.295][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     3.299][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     3.300][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     3.874][cube-solver-1][DEBUG] Solving cube (l0 = summarise([19]), l1 = natural_join(), l2 = filter([37]))
[     3.914][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     4.013][cube-solver-2][DEBUG] Solving cube (l0 = summarise([19]), l1 = natural_join3([2]), l2 = filter([47]))
[     4.124][cube-solver-3][DEBUG] Solving cube (l0 = summarise([19]), l1 = natural_join4(), l2 = filter([49]))
[     4.145][cube-solver-0][DEBUG] Solving cube (l0 = summarise([19]), l1 = summarise([19]), l2 = filter([49]))
[     4.170][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     4.204][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     5.192][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([53]))
[     5.271][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([56]))
[     5.333][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([57]))
[     5.391][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([57]), l3 = summarise([21]))
[     5.459][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([57]), l3 = filter([57]))
[     5.507][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([57]), l3 = anti_join())
[     5.592][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([57]))
[     5.633][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([57]), l3 = left_join())
[     5.933][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([60]), l3 = natural_join([2]))
[     6.211][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([60]), l3 = natural_join4())
[     6.213][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([60]), l3 = natural_join3([2]))
[     6.939][cube-solver-13][DEBUG] Found solution with cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([53]))
[     6.940][MainProcess][INFO] Statistics:
[     6.940][MainProcess][INFO] 	Generated cubes: 153
[     6.940][MainProcess][INFO] 	Attempted programs: 49
[     6.940][MainProcess][INFO] 		Rejected: 10
[     6.940][MainProcess][INFO] 		Failed: 38
[     6.940][MainProcess][INFO] 	Blacklist clauses: 85
[     6.940][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     6.942][MainProcess][DEBUG] 	0: Counter({'mutate': 1022, 'natural_join3': 593, 'summarise': 220})
[     6.943][MainProcess][DEBUG] 	1: Counter({'natural_join3': 493, 'mutate': 404, 'natural_join4': 390, 'filter': 360, 'summarise': 189})
[     6.944][MainProcess][DEBUG] 	2: Counter({'filter': 1476, 'natural_join4': 280, 'natural_join3': 80})
[     6.944][MainProcess][DEBUG] Printing statistics for good programs of size 4
[     6.945][MainProcess][DEBUG] 	0: Counter({'natural_join': 245})
[     6.945][MainProcess][DEBUG] 	1: Counter({'summarise': 245})
[     6.945][MainProcess][DEBUG] 	2: Counter({'natural_join3': 105, 'natural_join': 82, 'filter': 58})
[     6.945][MainProcess][DEBUG] 	3: Counter({'filter': 187, 'left_join': 28, 'natural_join4': 20, 'natural_join3': 10})
[     6.946][MainProcess][INFO] Solution found: filter(natural_join3(summarise(natural_join(@param1, @param0), n = n(), P_id, color), @param0, @param2), color == 'red' & n >= 3)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/34.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input2, input1)
df5 <- df4 %>% group_by(P_id, color) %>% summarise(n = n()) %>% ungroup()
df6 <- inner_join(df5, input1) %>% inner_join(input3)
df7 <- df6 %>% filter(color == 'red' & n >= 3)
out <- df7 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `LHS`.`P_id` AS `P_id`,
          `LHS`.`color` AS `color`,
          `LHS`.`n` AS `n`,
          `LHS`.`S_key` AS `S_key`,
          `RHS`.`S_name` AS `S_name`
   FROM
     (SELECT `LHS`.`P_id` AS `P_id`,
             `LHS`.`color` AS `color`,
             `LHS`.`n` AS `n`,
             `RHS`.`S_key` AS `S_key`
      FROM
        (SELECT `P_id`,
                `color`,
                COUNT() AS `n`
         FROM
           (SELECT `LHS`.`P_id` AS `P_id`,
                   `LHS`.`color` AS `color`,
                   `RHS`.`S_key` AS `S_key`
            FROM `input2` AS `LHS`
            INNER JOIN `input1` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
         GROUP BY `P_id`,
                  `color`) AS `LHS`
      INNER JOIN `input1` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)) AS `LHS`
   INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
WHERE (`color` = 'red'
       AND n >= 3.0)
ORDER BY S_name
