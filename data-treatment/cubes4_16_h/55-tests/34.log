[     1.599][MainProcess][INFO] Parsing specification...
[     1.603][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.603][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.603][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.604][MainProcess][DEBUG] Reading input files...
[     1.610][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-1.txt: ['string', 'string']
[     1.613][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-2.txt: ['string', 'string']
[     1.617][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-3.txt: ['string', 'string']
[     1.620][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/34.out: ['string']
[     1.650][MainProcess][DEBUG] Generating DSL...
[     1.675][MainProcess][INFO] Creating 16 processes
[     1.737][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.737][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.737][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.737][MainProcess][DEBUG] Increasing generator loc to 3
[     1.738][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.741][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.742][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.746][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.750][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.754][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.757][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.762][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.768][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.770][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.778][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.786][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.801][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.192][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.193][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.195][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.202][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.203][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.206][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.276][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.276][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.278][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.454][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.455][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.458][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.619][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.624][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.626][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.626][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.630][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.630][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.632][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.632][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.634][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.635][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.637][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.638][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.641][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     2.642][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     2.643][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     2.645][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     2.645][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     2.647][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = inner_join())
[     2.648][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = anti_join(), l2 = filter())
[     2.649][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([1]), l2 = filter())
[     2.650][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = left_join(), l2 = filter())
[     2.651][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise([1]))
[     2.653][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = intersect(), l2 = filter())
[     2.653][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = union(), l2 = filter())
[     2.653][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.656][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = mutate(), l2 = filter())
[     2.656][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = semi_join(), l2 = filter())
[     2.656][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = cross_join(), l2 = filter())
[     2.658][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = inner_join(), l2 = filter())
[     2.658][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([1]))
[     2.659][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     2.660][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([1]))
[     2.662][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     2.663][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([2]))
[     2.663][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     2.663][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join())
[     2.664][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join3())
[     2.664][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join4())
[     2.667][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = filter())
[     2.667][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = summarise([2]))
[     2.668][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = anti_join())
[     2.669][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = left_join())
[     2.669][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = union())
[     2.670][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = intersect())
[     2.674][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = cross_join())
[     2.674][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = semi_join())
[     2.675][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = mutate())
[     2.675][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = inner_join())
[     2.675][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise([2]))
[     2.677][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     2.677][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = filter(), l2 = mutate())
[     2.678][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise([3]))
[     2.680][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     2.680][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise([4]))
[     2.682][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     2.683][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise([4]))
[     2.683][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     2.684][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise([4]))
[     2.685][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     2.686][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise([4]))
[     2.687][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     2.689][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     2.689][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise([4]))
[     2.690][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3([1]))
[     2.690][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     2.692][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join4())
[     2.693][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = anti_join())
[     2.693][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = filter())
[     2.693][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise([4]))
[     2.694][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = left_join())
[     2.696][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = intersect())
[     2.696][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = union())
[     2.696][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = semi_join())
[     2.698][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = cross_join())
[     2.699][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[     2.700][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = inner_join())
[     2.701][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = summarise([6]))
[     2.701][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = mutate())
[     2.702][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = summarise([6]))
[     2.702][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([6]), l2 = filter())
[     2.703][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = mutate())
[     2.705][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter())
[     2.706][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([6]), l2 = filter())
[     2.708][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = summarise([6]))
[     2.710][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = mutate())
[     2.710][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter())
[     2.711][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = summarise([6]), l2 = filter())
[     2.711][cube-solver-14][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = summarise([6]))
[     2.714][cube-solver-13][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = mutate())
[     2.715][cube-solver-4][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([7]), l2 = filter())
[     2.716][cube-solver-13][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = mutate())
[     2.716][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = summarise([7]))
[     2.719][cube-solver-13][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter())
[     2.720][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([7]), l2 = filter())
[     2.720][cube-solver-14][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = summarise([7]))
[     2.721][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter())
[     2.722][cube-solver-13][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = mutate())
[     2.724][cube-solver-13][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter())
[     2.725][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([7]), l2 = filter())
[     2.726][cube-solver-4][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = summarise([7]))
[     2.728][cube-solver-13][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = mutate())
[     2.729][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter())
[     2.731][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([1]), l2 = filter())
[     2.733][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter())
[     2.733][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([8]), l2 = filter())
[     2.733][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter())
[     2.734][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join())
[     2.739][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join4())
[     2.739][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join3([1]))
[     2.743][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise([8]))
[     2.745][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise([8]))
[     2.747][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = filter())
[     2.750][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = anti_join())
[     2.752][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = left_join())
[     2.755][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = union())
[     2.755][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = semi_join())
[     2.756][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = intersect())
[     2.759][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = cross_join())
[     2.759][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = mutate())
[     2.762][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = inner_join())
[     2.763][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([1]))
[     2.763][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([1]))
[     2.767][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([1]))
[     2.768][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([1]))
[     2.768][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([1]))
[     2.772][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([1]))
[     2.772][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([1]))
[     2.774][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([1]))
[     2.776][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([9]), l2 = filter([1]))
[     2.777][cube-solver-14][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([1]), l2 = summarise([9]))
[     2.780][cube-solver-5][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([1]), l2 = mutate())
[     2.784][cube-solver-5][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([1]))
[     2.784][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = mutate(), l2 = filter([1]))
[     2.785][MainProcess][DEBUG] Increasing generator loc to 4
[     2.786][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[     2.789][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     2.789][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     3.029][cube-solver-1][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join(), l2 = filter([12]))
[     3.054][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     3.173][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([15]))
[     3.188][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     3.561][cube-solver-2][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join4(), l2 = filter([28]))
[     3.592][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     3.749][cube-solver-3][DEBUG] Solving cube (l0 = summarise([18]), l1 = natural_join3([2]), l2 = filter([28]))
[     3.797][cube-solver-0][DEBUG] Solving cube (l0 = summarise([18]), l1 = summarise([18]), l2 = filter([28]))
[     3.823][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     4.252][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([20]), l2 = natural_join(), l3 = filter([29]))
[     4.393][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = natural_join4(), l3 = filter([30]))
[     4.406][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = natural_join3([2]), l3 = filter([30]))
[     4.432][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([30]), l3 = summarise([21]))
[     4.485][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([30]), l3 = filter([30]))
[     4.534][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([31]), l3 = anti_join())
[     4.604][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([32]))
[     4.647][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([32]), l3 = left_join())
[     4.845][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([35]), l3 = natural_join([2]))
[     4.966][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([35]), l3 = natural_join3([2]))
[     5.168][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([38]), l3 = natural_join4())
[     6.105][cube-solver-14][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = natural_join3([2]), l3 = filter([30]))
[     6.107][MainProcess][INFO] Statistics:
[     6.107][MainProcess][INFO] 	Generated cubes: 153
[     6.107][MainProcess][INFO] 	Attempted programs: 52
[     6.107][MainProcess][INFO] 		Rejected: 1
[     6.107][MainProcess][INFO] 		Failed: 50
[     6.107][MainProcess][INFO] 	Blacklist clauses: 63
[     6.107][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     6.108][MainProcess][DEBUG] 	0: Counter({'mutate': 1067, 'natural_join3': 450, 'summarise': 135})
[     6.110][MainProcess][DEBUG] 	1: Counter({'natural_join3': 477, 'filter': 366, 'natural_join4': 360, 'mutate': 340, 'summarise': 110})
[     6.110][MainProcess][DEBUG] 	2: Counter({'filter': 1287, 'natural_join3': 217, 'natural_join4': 149})
[     6.111][MainProcess][DEBUG] Priting statistics for good programs of size 4
[     6.111][MainProcess][DEBUG] 	0: Counter({'natural_join': 109})
[     6.111][MainProcess][DEBUG] 	1: Counter({'summarise': 109})
[     6.111][MainProcess][DEBUG] 	2: Counter({'natural_join': 60, 'filter': 32, 'natural_join3': 17})
[     6.111][MainProcess][DEBUG] 	3: Counter({'filter': 77, 'natural_join': 18, 'natural_join3': 8, 'anti_join': 6})
[     6.112][MainProcess][INFO] Solution found: filter(natural_join3(summarise(natural_join(@param0, @param1), n = n(), P_id, color), @param0, @param2), color == 'red' & n >= 3)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/34.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input2)
df5 <- df4 %>% group_by(P_id, color) %>% summarise(n = n()) %>% ungroup()
df6 <- inner_join(df5, input1) %>% inner_join(input3)
df7 <- df6 %>% filter(color == 'red' & n >= 3)
out <- df7 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `LHS`.`P_id` AS `P_id`,
          `LHS`.`color` AS `color`,
          `LHS`.`n` AS `n`,
          `LHS`.`S_key` AS `S_key`,
          `RHS`.`S_name` AS `S_name`
   FROM
     (SELECT `LHS`.`P_id` AS `P_id`,
             `LHS`.`color` AS `color`,
             `LHS`.`n` AS `n`,
             `RHS`.`S_key` AS `S_key`
      FROM
        (SELECT `P_id`,
                `color`,
                COUNT() AS `n`
         FROM
           (SELECT `LHS`.`S_key` AS `S_key`,
                   `LHS`.`P_id` AS `P_id`,
                   `RHS`.`color` AS `color`
            FROM `input1` AS `LHS`
            INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
         GROUP BY `P_id`,
                  `color`) AS `LHS`
      INNER JOIN `input1` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)) AS `LHS`
   INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
WHERE (`color` = 'red'
       AND n >= 3.0)
ORDER BY S_name
