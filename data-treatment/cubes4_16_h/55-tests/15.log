[     1.579][MainProcess][INFO] Parsing specification...
[     1.582][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.582][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.582][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.583][MainProcess][DEBUG] Reading input files...
[     1.590][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15-1.txt: ['string', 'string']
[     1.595][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15-2.txt: ['string', 'string']
[     1.600][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15-3.txt: ['string', 'string']
[     1.604][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15.out: ['string']
[     1.634][MainProcess][DEBUG] Generating DSL...
[     1.657][MainProcess][INFO] Creating 16 processes
[     1.724][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.724][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.724][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.724][MainProcess][DEBUG] Increasing generator loc to 3
[     1.724][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.725][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.728][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.730][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.734][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.740][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.743][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.743][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.750][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.751][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.770][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.778][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.781][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.183][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.184][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.185][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.380][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.381][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.383][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.421][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.422][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.425][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.445][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.446][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.448][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.479][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.483][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.484][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.488][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.494][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.500][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.506][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.513][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.513][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.517][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.517][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.520][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.521][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     2.522][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     2.524][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = semi_join())
[     2.525][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = cross_join())
[     2.527][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = mutate())
[     2.530][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = anti_join(), l2 = filter())
[     2.530][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = inner_join())
[     2.532][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = left_join(), l2 = filter())
[     2.532][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise([1]))
[     2.533][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.536][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = intersect(), l2 = filter())
[     2.536][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = union(), l2 = filter())
[     2.539][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = semi_join(), l2 = filter())
[     2.540][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = cross_join(), l2 = filter())
[     2.541][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = mutate(), l2 = filter())
[     2.544][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([1]))
[     2.544][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = inner_join(), l2 = filter())
[     2.545][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     2.548][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([3]))
[     2.548][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     2.549][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([3]))
[     2.551][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     2.553][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = natural_join())
[     2.554][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = natural_join3([1]))
[     2.555][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = natural_join4())
[     2.559][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = summarise([3]))
[     2.560][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = filter())
[     2.561][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = anti_join())
[     2.567][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = union())
[     2.567][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = left_join())
[     2.567][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = intersect())
[     2.572][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.574][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = semi_join())
[     2.574][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = cross_join())
[     2.575][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = mutate())
[     2.578][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = inner_join())
[     2.578][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = filter(), l2 = summarise([5]))
[     2.582][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise([5]))
[     2.582][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     2.585][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise([5]))
[     2.587][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     2.589][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise([5]))
[     2.590][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     2.590][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise([5]))
[     2.592][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     2.594][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise([5]))
[     2.594][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise([5]))
[     2.594][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     2.595][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     2.596][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     2.596][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise([6]))
[     2.598][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     2.598][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise([6]))
[     2.598][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join4())
[     2.598][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3([1]))
[     2.600][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = filter())
[     2.600][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = anti_join())
[     2.601][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = left_join())
[     2.602][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = union())
[     2.602][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = intersect())
[     2.603][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = semi_join())
[     2.603][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = cross_join())
[     2.604][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = mutate())
[     2.605][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = inner_join(), l2 = summarise([6]))
[     2.605][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = inner_join())
[     2.605][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = inner_join(), l2 = mutate())
[     2.606][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([6]), l2 = filter([1]))
[     2.607][cube-solver-4][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([1]), l2 = summarise([6]))
[     2.608][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([1]), l2 = mutate())
[     2.608][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([1]))
[     2.610][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([6]), l2 = filter([1]))
[     2.610][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = filter([1]), l2 = summarise([6]))
[     2.612][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = filter([1]), l2 = mutate())
[     2.613][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([1]))
[     2.613][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = summarise([6]), l2 = filter([1]))
[     2.615][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = filter([1]), l2 = summarise([6]))
[     2.615][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([1]))
[     2.615][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter([1]), l2 = mutate())
[     2.617][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([6]), l2 = filter([1]))
[     2.618][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = filter([1]), l2 = summarise([6]))
[     2.618][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter([1]), l2 = mutate())
[     2.618][cube-solver-4][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([1]))
[     2.620][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([6]), l2 = filter([2]))
[     2.620][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = summarise([6]))
[     2.621][cube-solver-4][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = mutate())
[     2.622][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([2]))
[     2.624][cube-solver-4][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([6]), l2 = filter([2]))
[     2.625][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([2]), l2 = mutate())
[     2.625][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([2]), l2 = summarise([6]))
[     2.626][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([2]))
[     2.626][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([2]))
[     2.628][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([1]), l2 = filter([2]))
[     2.628][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([2]))
[     2.629][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([7]), l2 = filter([2]))
[     2.629][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join())
[     2.632][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join3([1]))
[     2.633][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join4())
[     2.635][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = summarise([7]))
[     2.642][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = filter([2]))
[     2.646][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = anti_join())
[     2.649][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = left_join())
[     2.652][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = union())
[     2.655][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = intersect())
[     2.658][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = semi_join())
[     2.661][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = cross_join())
[     2.664][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = mutate())
[     2.667][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = inner_join())
[     2.670][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([3]))
[     2.673][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([3]))
[     2.677][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([3]))
[     2.680][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([3]))
[     2.683][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([3]))
[     2.687][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([3]))
[     2.690][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([3]))
[     2.693][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([3]))
[     2.698][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([11]), l2 = filter([3]))
[     2.717][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = summarise([11]))
[     2.726][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = mutate())
[     2.731][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([4]))
[     2.734][MainProcess][DEBUG] Increasing generator loc to 4
[     2.735][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[     2.850][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([6]), l2 = mutate())
[     2.851][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([6]), l2 = summarise([15]))
[     2.859][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     2.871][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     2.969][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([8]))
[     2.982][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     3.025][cube-solver-2][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join(), l2 = filter([8]))
[     3.046][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     3.305][cube-solver-0][DEBUG] Solving cube (l0 = summarise([17]), l1 = natural_join3([2]), l2 = filter([9]))
[     3.305][cube-solver-1][DEBUG] Solving cube (l0 = summarise([17]), l1 = natural_join4(), l2 = filter([9]))
[     3.325][cube-solver-3][DEBUG] Solving cube (l0 = summarise([17]), l1 = summarise([17]), l2 = filter([9]))
[     3.327][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     3.359][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     3.978][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = natural_join(), l3 = filter([20]))
[     4.057][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([19]), l2 = natural_join3([2]), l3 = filter([21]))
[     4.066][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([19]), l2 = natural_join4(), l3 = filter([21]))
[     4.085][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([19]), l2 = filter([22]), l3 = summarise([19]))
[     4.112][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([19]), l2 = filter([22]), l3 = filter([22]))
[     4.136][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([19]), l2 = filter([23]), l3 = anti_join())
[     4.232][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = filter([23]), l3 = natural_join([2]))
[     4.461][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = summarise([19]), l3 = filter([24]))
[     4.510][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = filter([24]), l3 = left_join())
[     4.552][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = filter([24]), l3 = natural_join3([2]))
[     4.617][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = filter([24]), l3 = natural_join4())
[     5.355][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     6.523][cube-solver-8][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     6.632][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = union())
[     6.634][MainProcess][INFO] Statistics:
[     6.634][MainProcess][INFO] 	Generated cubes: 154
[     6.634][MainProcess][INFO] 	Attempted programs: 242
[     6.634][MainProcess][INFO] 		Rejected: 62
[     6.634][MainProcess][INFO] 		Failed: 179
[     6.634][MainProcess][INFO] 	Blacklist clauses: 49
[     6.635][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     6.636][MainProcess][DEBUG] 	0: Counter({'mutate': 1254, 'natural_join3': 497, 'summarise': 412})
[     6.637][MainProcess][DEBUG] 	1: Counter({'natural_join3': 672, 'filter': 534, 'natural_join4': 460, 'mutate': 320, 'summarise': 177})
[     6.638][MainProcess][DEBUG] 	2: Counter({'filter': 1629, 'natural_join3': 324, 'natural_join4': 210})
[     6.639][MainProcess][DEBUG] Priting statistics for good programs of size 4
[     6.639][MainProcess][DEBUG] 	0: Counter({'natural_join': 268})
[     6.639][MainProcess][DEBUG] 	1: Counter({'summarise': 268})
[     6.639][MainProcess][DEBUG] 	2: Counter({'filter': 119, 'natural_join3': 80, 'natural_join': 69})
[     6.640][MainProcess][DEBUG] 	3: Counter({'filter': 149, 'natural_join4': 119})
[     6.640][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param1, @param0, @param2), n = n(), S_name, color), color == 'red' & n == max(n))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/15-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/15-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/15-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/15.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input2, input1) %>% inner_join(input3)
df5 <- df4 %>% group_by(S_name, color) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(color == 'red' & n == max(n))
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `S_name`,
          `color`,
          `n`
   FROM
     (SELECT `S_name`,
             `color`,
             `n`,
             MAX(`n`) OVER () AS `zzz4`
      FROM
        (SELECT `S_name`,
                `color`,
                COUNT() AS `n`
         FROM
           (SELECT `LHS`.`P_id` AS `P_id`,
                   `LHS`.`color` AS `color`,
                   `LHS`.`S_key` AS `S_key`,
                   `RHS`.`S_name` AS `S_name`
            FROM
              (SELECT `LHS`.`P_id` AS `P_id`,
                      `LHS`.`color` AS `color`,
                      `RHS`.`S_key` AS `S_key`
               FROM `input2` AS `LHS`
               INNER JOIN `input1` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)) AS `LHS`
            INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
         GROUP BY `S_name`,
                  `color`))
   WHERE (`color` = 'red'
          AND n = zzz4))
ORDER BY S_name
