[     1.588][MainProcess][INFO] Parsing specification...
[     1.598][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.598][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.599][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.600][MainProcess][DEBUG] Reading input files...
[     1.608][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15-1.txt: ['string', 'string']
[     1.614][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15-2.txt: ['string', 'string']
[     1.620][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15-3.txt: ['string', 'string']
[     1.624][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/15.out: ['string']
[     1.657][MainProcess][DEBUG] Generating DSL...
[     1.685][MainProcess][INFO] Creating 16 processes
[     1.762][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.762][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.762][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.762][MainProcess][DEBUG] Increasing generator loc to 3
[     1.762][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.763][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.764][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.775][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.778][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.786][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.788][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.796][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.798][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.816][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.828][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.829][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.832][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.412][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.413][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.415][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.532][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.533][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.535][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.627][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.628][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.631][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.883][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.883][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.885][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.950][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.962][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     2.964][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.965][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.966][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.970][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.974][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.976][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.977][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.977][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.980][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.981][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.983][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.986][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     2.987][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     2.989][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     2.992][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     2.992][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     2.993][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = inner_join())
[     2.995][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter())
[     2.999][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter())
[     3.000][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter())
[     3.000][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter())
[     3.003][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = semi_join(), l2 = filter())
[     3.003][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = cross_join(), l2 = filter())
[     3.007][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = inner_join(), l2 = filter())
[     3.008][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([1]))
[     3.007][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = mutate(), l2 = filter())
[     3.011][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     3.012][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([1]))
[     3.014][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     3.014][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([1]))
[     3.016][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     3.019][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = natural_join())
[     3.020][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join4())
[     3.021][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join3())
[     3.024][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = summarise([2]))
[     3.025][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = filter())
[     3.029][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = anti_join())
[     3.029][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = left_join())
[     3.034][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = intersect())
[     3.034][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = union())
[     3.035][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = semi_join())
[     3.039][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = cross_join())
[     3.039][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = mutate())
[     3.043][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([3]), l2 = inner_join())
[     3.044][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = mutate())
[     3.044][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = summarise([3]))
[     3.047][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([1]), l2 = summarise([4]))
[     3.048][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = summarise([4]))
[     3.049][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = mutate())
[     3.053][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = mutate())
[     3.053][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = summarise([4]))
[     3.056][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = union(), l2 = mutate())
[     3.057][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = union(), l2 = summarise([4]))
[     3.060][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = intersect(), l2 = summarise([4]))
[     3.061][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([2]))
[     3.064][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = intersect(), l2 = mutate())
[     3.065][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = semi_join(), l2 = summarise([4]))
[     3.066][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = cross_join(), l2 = summarise([5]))
[     3.066][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = semi_join(), l2 = mutate())
[     3.072][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join3())
[     3.072][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = cross_join(), l2 = mutate())
[     3.072][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join())
[     3.075][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join4())
[     3.078][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = summarise([5]))
[     3.078][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = anti_join())
[     3.080][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = filter([2]))
[     3.082][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = left_join())
[     3.085][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = union())
[     3.086][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = semi_join())
[     3.086][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = intersect())
[     3.090][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = mutate())
[     3.090][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = cross_join())
[     3.091][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = inner_join(), l2 = summarise([5]))
[     3.092][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = inner_join())
[     3.094][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = inner_join(), l2 = mutate())
[     3.099][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([2]))
[     3.099][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([5]), l2 = filter([2]))
[     3.099][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = filter([2]), l2 = mutate())
[     3.100][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([2]), l2 = mutate())
[     3.100][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([2]), l2 = summarise([5]))
[     3.103][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([5]), l2 = filter([2]))
[     3.107][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = mutate())
[     3.108][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = summarise([5]))
[     3.110][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = summarise([5]), l2 = filter([2]))
[     3.111][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([2]))
[     3.112][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = mutate())
[     3.112][cube-solver-13][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = summarise([5]))
[     3.116][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([6]), l2 = filter([2]))
[     3.116][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([2]))
[     3.119][cube-solver-10][DEBUG] Solving cube (l0 = intersect(), l1 = filter([2]), l2 = summarise([6]))
[     3.120][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = filter([2]), l2 = mutate())
[     3.121][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([2]))
[     3.123][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = summarise([6]))
[     3.123][cube-solver-13][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([6]), l2 = filter([2]))
[     3.126][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = mutate())
[     3.127][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([2]))
[     3.129][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([2]))
[     3.130][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([6]), l2 = filter([2]))
[     3.131][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([2]), l2 = summarise([6]))
[     3.133][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([2]), l2 = mutate())
[     3.134][cube-solver-6][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([2]))
[     3.136][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([3]))
[     3.137][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([1]), l2 = filter([3]))
[     3.139][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([3]))
[     3.139][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([6]), l2 = filter([3]))
[     3.140][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = natural_join())
[     3.141][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = natural_join3([1]))
[     3.144][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = natural_join4())
[     3.145][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = summarise([6]))
[     3.147][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = filter([3]))
[     3.152][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = anti_join())
[     3.152][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = left_join())
[     3.157][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = union())
[     3.158][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = intersect())
[     3.162][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = semi_join())
[     3.163][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = cross_join())
[     3.167][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = mutate())
[     3.168][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = inner_join())
[     3.172][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([5]))
[     3.174][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([5]))
[     3.177][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([5]))
[     3.180][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([5]))
[     3.183][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([5]))
[     3.187][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([6]))
[     3.188][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([6]))
[     3.193][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([6]))
[     3.194][cube-solver-5][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([8]), l2 = filter([6]))
[     3.199][cube-solver-6][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([6]), l2 = summarise([8]))
[     3.204][cube-solver-5][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([7]), l2 = mutate())
[     3.208][MainProcess][DEBUG] Increasing generator loc to 4
[     3.209][cube-solver-6][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([7]))
[     3.210][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     3.215][cube-solver-6][DEBUG] Initialising process for 4 lines of code.
[     3.229][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([8]))
[     3.243][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     3.651][cube-solver-0][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = filter([17]))
[     3.679][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     3.709][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([22]), l2 = mutate())
[     3.730][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     3.750][cube-solver-2][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join3([2]), l2 = filter([24]))
[     3.913][cube-solver-3][DEBUG] Solving cube (l0 = summarise([17]), l1 = natural_join4(), l2 = filter([24]))
[     3.947][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     4.553][cube-solver-1][DEBUG] Solving cube (l0 = summarise([21]), l1 = summarise([21]), l2 = filter([24]))
[     4.585][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     4.878][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([24]))
[     4.879][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([24]))
[     5.102][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([24]))
[     5.139][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = summarise([21]))
[     5.175][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = filter([24]))
[     5.201][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = anti_join())
[     5.378][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([24]))
[     5.433][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = left_join())
[     5.663][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join3([2]))
[     5.674][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join([2]))
[     6.174][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     6.445][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join4())
[     7.064][cube-solver-8][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     7.065][MainProcess][INFO] Statistics:
[     7.065][MainProcess][INFO] 	Generated cubes: 154
[     7.066][MainProcess][INFO] 	Attempted programs: 212
[     7.066][MainProcess][INFO] 		Rejected: 71
[     7.066][MainProcess][INFO] 		Failed: 140
[     7.066][MainProcess][INFO] 	Blacklist clauses: 49
[     7.066][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     7.068][MainProcess][DEBUG] 	0: Counter({'mutate': 1219, 'natural_join3': 525, 'summarise': 410})
[     7.069][MainProcess][DEBUG] 	1: Counter({'natural_join3': 735, 'filter': 540, 'natural_join4': 354, 'mutate': 320, 'summarise': 205})
[     7.070][MainProcess][DEBUG] 	2: Counter({'filter': 1616, 'natural_join4': 370, 'natural_join3': 170})
[     7.070][MainProcess][DEBUG] Printing statistics for good programs of size 4
[     7.070][MainProcess][DEBUG] 	0: Counter({'natural_join': 237})
[     7.071][MainProcess][DEBUG] 	1: Counter({'summarise': 237})
[     7.071][MainProcess][DEBUG] 	2: Counter({'natural_join': 127, 'natural_join3': 92, 'filter': 18})
[     7.071][MainProcess][DEBUG] 	3: Counter({'filter': 219, 'left_join': 10, 'anti_join': 8})
[     7.071][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param1, @param0, @param2), n = n(), S_name, color), color == 'red' & n == max(n))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/15-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/15-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/15-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/15.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input2, input1) %>% inner_join(input3)
df5 <- df4 %>% group_by(S_name, color) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(color == 'red' & n == max(n))
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `S_name`,
          `color`,
          `n`
   FROM
     (SELECT `S_name`,
             `color`,
             `n`,
             MAX(`n`) OVER () AS `zzz4`
      FROM
        (SELECT `S_name`,
                `color`,
                COUNT() AS `n`
         FROM
           (SELECT `LHS`.`P_id` AS `P_id`,
                   `LHS`.`color` AS `color`,
                   `LHS`.`S_key` AS `S_key`,
                   `RHS`.`S_name` AS `S_name`
            FROM
              (SELECT `LHS`.`P_id` AS `P_id`,
                      `LHS`.`color` AS `color`,
                      `RHS`.`S_key` AS `S_key`
               FROM `input2` AS `LHS`
               INNER JOIN `input1` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)) AS `LHS`
            INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
         GROUP BY `S_name`,
                  `color`))
   WHERE (`color` = 'red'
          AND n = zzz4))
ORDER BY S_name
