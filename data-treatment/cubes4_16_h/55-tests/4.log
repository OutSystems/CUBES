[     1.602][MainProcess][INFO] Parsing specification...
[     1.605][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.605][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.607][MainProcess][DEBUG] Reading input files...
[     1.614][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4-1.txt: ['string', 'string']
[     1.619][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4-2.txt: ['string', 'string']
[     1.625][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4-3.txt: ['string', 'string']
[     1.630][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4.out: ['string']
[     1.662][MainProcess][DEBUG] Generating DSL...
[     1.687][MainProcess][INFO] Creating 16 processes
[     1.755][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.755][MainProcess][DEBUG] Increasing generator loc to 3
[     1.755][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.755][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.755][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.756][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.757][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.761][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.771][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.772][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.773][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.779][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.788][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.805][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.808][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.812][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.815][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.474][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.475][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.477][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.544][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.545][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.546][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.585][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.592][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     2.597][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.596][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.600][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.604][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.606][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.611][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.612][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.612][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.613][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.640][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise([1]))
[     2.647][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = filter())
[     2.653][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = anti_join())
[     2.658][cube-solver-5][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = left_join())
[     2.661][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([2]), l2 = filter())
[     2.664][cube-solver-5][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = union())
[     2.667][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([1]), l2 = summarise([2]))
[     2.668][cube-solver-4][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter([1]), l2 = intersect())
[     2.669][cube-solver-5][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter([1]), l2 = semi_join())
[     2.673][cube-solver-4][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter([1]), l2 = cross_join())
[     2.676][cube-solver-5][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter([1]), l2 = mutate())
[     2.677][cube-solver-9][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter([1]), l2 = inner_join())
[     2.679][cube-solver-4][DEBUG] Solving cube (l0 = summarise([3]), l1 = anti_join(), l2 = filter([1]))
[     2.682][cube-solver-5][DEBUG] Solving cube (l0 = summarise([3]), l1 = left_join(), l2 = filter([1]))
[     2.684][cube-solver-4][DEBUG] Solving cube (l0 = summarise([3]), l1 = union(), l2 = filter([1]))
[     2.687][cube-solver-9][DEBUG] Solving cube (l0 = summarise([3]), l1 = intersect(), l2 = filter([1]))
[     2.689][cube-solver-4][DEBUG] Solving cube (l0 = summarise([4]), l1 = semi_join(), l2 = filter([1]))
[     2.690][cube-solver-5][DEBUG] Solving cube (l0 = summarise([4]), l1 = cross_join(), l2 = filter([1]))
[     2.694][cube-solver-4][DEBUG] Solving cube (l0 = summarise([4]), l1 = mutate(), l2 = filter([1]))
[     2.696][cube-solver-9][DEBUG] Solving cube (l0 = summarise([4]), l1 = inner_join(), l2 = filter([1]))
[     2.699][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = summarise([4]))
[     2.700][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = mutate())
[     2.703][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3(), l2 = summarise([4]))
[     2.704][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([4]), l2 = filter([1]))
[     2.704][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3(), l2 = mutate())
[     2.706][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join4(), l2 = summarise([4]))
[     2.708][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join4(), l2 = mutate())
[     2.709][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([4]), l2 = natural_join())
[     2.714][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.714][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([4]), l2 = natural_join3())
[     2.715][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]))
[     2.716][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([4]), l2 = summarise([4]))
[     2.716][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([4]), l2 = natural_join4())
[     2.717][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([4]), l2 = filter([2]))
[     2.718][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.720][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([4]), l2 = left_join())
[     2.725][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([4]), l2 = union())
[     2.726][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([4]), l2 = semi_join())
[     2.726][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([4]), l2 = intersect())
[     2.727][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([4]), l2 = cross_join())
[     2.731][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([4]), l2 = mutate())
[     2.733][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([4]), l2 = inner_join())
[     2.735][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = filter([2]), l2 = summarise([4]))
[     2.736][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = filter([2]), l2 = mutate())
[     2.741][cube-solver-4][DEBUG] Solving cube (l0 = filter([3]), l1 = anti_join(), l2 = mutate())
[     2.743][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = anti_join(), l2 = summarise([4]))
[     2.745][cube-solver-4][DEBUG] Solving cube (l0 = filter([3]), l1 = union(), l2 = summarise([4]))
[     2.744][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = left_join(), l2 = mutate())
[     2.747][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = left_join(), l2 = summarise([4]))
[     2.750][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = union(), l2 = mutate())
[     2.750][cube-solver-4][DEBUG] Solving cube (l0 = filter([3]), l1 = intersect(), l2 = summarise([4]))
[     2.752][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = intersect(), l2 = mutate())
[     2.756][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = semi_join(), l2 = summarise([4]))
[     2.756][cube-solver-4][DEBUG] Solving cube (l0 = filter([3]), l1 = semi_join(), l2 = mutate())
[     2.757][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([3]))
[     2.758][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = cross_join(), l2 = summarise([4]))
[     2.760][cube-solver-4][DEBUG] Solving cube (l0 = filter([3]), l1 = cross_join(), l2 = mutate())
[     2.763][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = natural_join())
[     2.763][cube-solver-4][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = natural_join3())
[     2.764][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = natural_join4())
[     2.766][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = summarise([4]))
[     2.767][cube-solver-4][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = filter([3]))
[     2.769][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = anti_join())
[     2.770][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = left_join())
[     2.772][cube-solver-4][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = union())
[     2.774][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = intersect())
[     2.775][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = semi_join())
[     2.775][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = cross_join())
[     2.776][cube-solver-4][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = mutate())
[     2.780][cube-solver-4][DEBUG] Solving cube (l0 = filter([3]), l1 = inner_join(), l2 = mutate())
[     2.780][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = inner_join())
[     2.780][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = inner_join(), l2 = summarise([4]))
[     2.781][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([4]), l2 = filter([3]))
[     2.784][cube-solver-4][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([3]), l2 = summarise([4]))
[     2.785][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([3]), l2 = mutate())
[     2.789][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([3]))
[     2.790][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([4]), l2 = filter([3]))
[     2.791][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = filter([3]), l2 = summarise([4]))
[     2.792][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = filter([3]), l2 = mutate())
[     2.795][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([3]))
[     2.797][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = summarise([4]), l2 = filter([3]))
[     2.798][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = filter([3]), l2 = summarise([4]))
[     2.800][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = filter([3]), l2 = mutate())
[     2.801][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([3]))
[     2.801][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([3]))
[     2.803][cube-solver-4][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([4]), l2 = filter([3]))
[     2.806][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = filter([3]), l2 = summarise([4]))
[     2.806][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = filter([3]), l2 = mutate())
[     2.807][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([3]))
[     2.810][cube-solver-4][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([3]), l2 = summarise([4]))
[     2.811][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([4]), l2 = filter([3]))
[     2.813][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([3]), l2 = mutate())
[     2.813][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([3]))
[     2.816][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([4]), l2 = filter([3]))
[     2.817][cube-solver-4][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([3]), l2 = summarise([4]))
[     2.818][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([3]), l2 = mutate())
[     2.819][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([3]))
[     2.821][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([3]))
[     2.824][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter([3]))
[     2.824][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([3]))
[     2.825][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([4]), l2 = filter([3]))
[     2.825][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = natural_join())
[     2.828][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = natural_join3())
[     2.831][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = natural_join4())
[     2.834][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = summarise([4]))
[     2.843][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = filter([3]))
[     2.851][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = anti_join())
[     2.858][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = left_join())
[     2.864][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = union())
[     2.871][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([7]), l2 = intersect())
[     2.879][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([8]), l2 = semi_join())
[     2.887][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([9]), l2 = cross_join())
[     2.896][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([9]), l2 = mutate())
[     2.905][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([10]), l2 = inner_join())
[     2.915][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([10]))
[     2.923][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([10]), l2 = mutate())
[     2.924][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([10]))
[     2.934][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([10]))
[     2.937][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([10]))
[     2.943][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([10]))
[     2.948][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([10]))
[     2.953][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([10]))
[     2.959][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([10]))
[     2.962][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([4]), l2 = filter([10]))
[     2.969][cube-solver-14][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([10]), l2 = summarise([4]))
[     2.970][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([10]), l2 = summarise([4]))
[     2.975][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([11]), l2 = mutate())
[     2.983][MainProcess][DEBUG] Increasing generator loc to 4
[     2.984][cube-solver-14][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([11]))
[     2.985][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[     2.987][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     2.995][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     3.106][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([12]))
[     3.120][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     3.640][cube-solver-0][DEBUG] Solving cube (l0 = summarise([12]), l1 = natural_join3([2]), l2 = filter([15]))
[     3.761][cube-solver-2][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join(), l2 = filter([15]))
[     3.783][cube-solver-1][DEBUG] Solving cube (l0 = summarise([16]), l1 = filter([15]), l2 = summarise([16]))
[     3.788][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     3.811][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     4.110][cube-solver-3][DEBUG] Solving cube (l0 = filter([15]), l1 = summarise([21]), l2 = anti_join())
[     4.139][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     4.447][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([15]))
[     4.575][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([15]))
[     4.708][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([15]))
[     4.729][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = summarise([21]))
[     4.758][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = filter([15]))
[     4.781][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = anti_join())
[     4.834][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([15]))
[     4.862][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     4.884][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = union())
[     5.250][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join3([2]))
[     5.357][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join([2]))
[     5.616][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join4())
[     5.980][cube-solver-2][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join([2]))
[     5.982][MainProcess][INFO] Statistics:
[     5.982][MainProcess][INFO] 	Generated cubes: 154
[     5.982][MainProcess][INFO] 	Attempted programs: 50
[     5.982][MainProcess][INFO] 		Rejected: 21
[     5.982][MainProcess][INFO] 		Failed: 28
[     5.982][MainProcess][INFO] 	Blacklist clauses: 40
[     5.982][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     5.984][MainProcess][DEBUG] 	0: Counter({'mutate': 1112, 'natural_join3': 446, 'summarise': 234})
[     5.985][MainProcess][DEBUG] 	1: Counter({'filter': 580, 'natural_join3': 506, 'natural_join4': 260, 'summarise': 246, 'mutate': 200})
[     5.986][MainProcess][DEBUG] 	2: Counter({'filter': 1212, 'natural_join4': 310, 'natural_join3': 270})
[     5.986][MainProcess][DEBUG] Printing statistics for good programs of size 4
[     5.987][MainProcess][DEBUG] 	0: Counter({'natural_join': 361})
[     5.987][MainProcess][DEBUG] 	1: Counter({'summarise': 361})
[     5.987][MainProcess][DEBUG] 	2: Counter({'filter': 146, 'natural_join': 114, 'natural_join3': 101})
[     5.988][MainProcess][DEBUG] 	3: Counter({'filter': 215, 'union': 59, 'natural_join3': 40, 'natural_join4': 30, 'natural_join': 17})
[     5.988][MainProcess][INFO] Solution found: natural_join(filter(summarise(natural_join(@param1, @param0), n = n(), S_key, meets_at), n == 2), @param2)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/4-1.txt", col_types = cols(C_name = col_character(),meets_at = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/4-2.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/4-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/4.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input2, input1)
df5 <- df4 %>% group_by(S_key, meets_at) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n == 2)
df7 <- inner_join(df6, input3)
out <- df7 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT LHS.S_key AS S_key,
          LHS.meets_at AS meets_at,
          LHS.n AS n,
          RHS.S_name AS S_name
   FROM
     (SELECT *
      FROM
        (SELECT S_key,
                meets_at,
                COUNT() AS n
         FROM
           (SELECT LHS.S_key AS S_key,
                   LHS.C_name AS C_name,
                   RHS.meets_at AS meets_at
            FROM input2 AS LHS
            INNER JOIN input1 AS RHS ON (LHS.C_name = RHS.C_name))
         GROUP BY S_key,
                  meets_at)
      WHERE (n = 2.0)) AS LHS
   INNER JOIN input3 AS RHS ON (LHS.S_key = RHS.S_key))
ORDER BY S_name
