[     1.577][MainProcess][INFO] Parsing specification...
[     1.580][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.580][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.581][MainProcess][DEBUG] Reading input files...
[     1.588][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4-1.txt: ['string', 'string']
[     1.592][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4-2.txt: ['string', 'string']
[     1.597][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4-3.txt: ['string', 'string']
[     1.601][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/4.out: ['string']
[     1.631][MainProcess][DEBUG] Generating DSL...
[     1.652][MainProcess][INFO] Creating 16 processes
[     1.718][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.718][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.718][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.718][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.718][MainProcess][DEBUG] Increasing generator loc to 3
[     1.720][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.720][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.721][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.726][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.727][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.730][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.735][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.743][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.745][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.754][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.758][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     1.766][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.083][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.084][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.086][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.088][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.088][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.090][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.117][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.118][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.119][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.374][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.375][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.376][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.401][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.407][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.409][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.412][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.413][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.414][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.415][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.420][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.424][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.425][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.427][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.428][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.429][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.431][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     2.431][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     2.433][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     2.435][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     2.436][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     2.436][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = inner_join())
[     2.438][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = anti_join(), l2 = filter())
[     2.439][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = left_join(), l2 = filter())
[     2.439][cube-solver-15][DEBUG] Solving cube (l0 = summarise([1]), l1 = union(), l2 = filter())
[     2.441][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = intersect(), l2 = filter())
[     2.443][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = semi_join(), l2 = filter())
[     2.443][cube-solver-15][DEBUG] Solving cube (l0 = summarise([1]), l1 = cross_join(), l2 = filter())
[     2.444][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = mutate(), l2 = filter())
[     2.447][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = inner_join(), l2 = filter())
[     2.447][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([1]))
[     2.447][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     2.449][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([1]))
[     2.450][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     2.451][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([1]))
[     2.452][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     2.453][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = natural_join())
[     2.453][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = natural_join3())
[     2.455][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = natural_join4())
[     2.456][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = summarise([2]))
[     2.457][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = filter())
[     2.459][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = anti_join())
[     2.460][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = left_join())
[     2.462][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = union())
[     2.463][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = intersect())
[     2.464][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = semi_join())
[     2.466][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = cross_join())
[     2.466][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = mutate())
[     2.468][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise([2]))
[     2.469][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = inner_join())
[     2.471][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     2.471][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise([2]))
[     2.474][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     2.474][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise([2]))
[     2.474][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     2.476][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise([3]))
[     2.477][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     2.479][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise([3]))
[     2.479][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     2.480][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise([3]))
[     2.482][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     2.483][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise([3]))
[     2.484][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     2.485][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     2.486][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3())
[     2.487][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join4())
[     2.487][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise([3]))
[     2.488][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = filter())
[     2.490][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = anti_join())
[     2.490][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = left_join())
[     2.492][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = union())
[     2.492][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = intersect())
[     2.493][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = semi_join())
[     2.494][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = cross_join())
[     2.496][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[     2.496][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = inner_join())
[     2.496][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = summarise([3]))
[     2.499][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = mutate())
[     2.499][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([3]), l2 = filter())
[     2.499][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = summarise([3]))
[     2.501][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = mutate())
[     2.503][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter())
[     2.504][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([3]), l2 = filter())
[     2.504][cube-solver-15][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = summarise([3]))
[     2.505][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = mutate())
[     2.507][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter())
[     2.509][cube-solver-13][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = summarise([3]))
[     2.509][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = summarise([3]), l2 = filter())
[     2.510][cube-solver-15][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = mutate())
[     2.512][cube-solver-15][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter())
[     2.513][cube-solver-13][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([3]), l2 = filter())
[     2.513][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise([3]))
[     2.515][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = summarise([3]))
[     2.515][cube-solver-15][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = mutate())
[     2.517][cube-solver-13][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter())
[     2.518][cube-solver-15][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([3]), l2 = filter())
[     2.519][cube-solver-13][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = summarise([3]))
[     2.520][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = mutate())
[     2.521][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter())
[     2.523][cube-solver-13][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([3]), l2 = filter())
[     2.524][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = summarise([3]))
[     2.524][cube-solver-15][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = mutate())
[     2.524][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter())
[     2.527][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter())
[     2.527][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter())
[     2.527][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter())
[     2.529][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([3]), l2 = filter())
[     2.530][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join())
[     2.529][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.533][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join3())
[     2.535][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join4())
[     2.560][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([1]), l2 = mutate())
[     2.566][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = summarise([3]))
[     2.573][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = filter([2]))
[     2.574][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([3]), l2 = filter([2]))
[     2.579][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = anti_join())
[     2.580][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([2]))
[     2.582][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = left_join())
[     2.585][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = union())
[     2.587][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = intersect())
[     2.587][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = semi_join())
[     2.590][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = cross_join())
[     2.592][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = mutate())
[     2.593][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = inner_join())
[     2.595][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([3]))
[     2.597][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([3]))
[     2.599][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([3]))
[     2.600][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([3]))
[     2.602][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([3]))
[     2.605][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([4]))
[     2.606][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([4]))
[     2.607][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([4]))
[     2.610][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([3]), l2 = filter([4]))
[     2.611][cube-solver-6][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = summarise([3]))
[     2.613][cube-solver-4][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = mutate())
[     2.617][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([4]))
[     2.617][MainProcess][DEBUG] Increasing generator loc to 4
[     2.618][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[     2.619][cube-solver-6][DEBUG] Initialising process for 4 lines of code.
[     2.623][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     2.797][cube-solver-3][DEBUG] Solving cube (l0 = summarise([7]), l1 = natural_join4(), l2 = filter([9]))
[     2.814][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     2.857][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([10]), l2 = mutate())
[     2.867][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     2.950][cube-solver-1][DEBUG] Solving cube (l0 = summarise([10]), l1 = natural_join3([2]), l2 = filter([14]))
[     3.019][cube-solver-2][DEBUG] Solving cube (l0 = summarise([12]), l1 = natural_join(), l2 = filter([14]))
[     3.039][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     3.189][cube-solver-0][DEBUG] Solving cube (l0 = summarise([16]), l1 = summarise([16]), l2 = filter([14]))
[     3.224][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     3.622][cube-solver-8][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     3.623][MainProcess][INFO] Statistics:
[     3.623][MainProcess][INFO] 	Generated cubes: 149
[     3.623][MainProcess][INFO] 	Attempted programs: 30
[     3.623][MainProcess][INFO] 		Rejected: 14
[     3.623][MainProcess][INFO] 		Failed: 15
[     3.624][MainProcess][INFO] 	Blacklist clauses: 33
[     3.624][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     3.624][MainProcess][DEBUG] 	0: Counter({'mutate': 284, 'summarise': 200, 'natural_join3': 156})
[     3.625][MainProcess][DEBUG] 	1: Counter({'filter': 276, 'natural_join3': 124, 'natural_join4': 84, 'mutate': 81, 'summarise': 75})
[     3.625][MainProcess][DEBUG] 	2: Counter({'filter': 365, 'natural_join4': 158, 'natural_join3': 118})
[     3.625][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param2, @param1, @param0), n = n(), S_name, meets_at), n >= 2)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/4-1.txt", col_types = cols(C_name = col_character(),meets_at = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/4-2.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/4-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/4.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input3, input2) %>% inner_join(input1)
df5 <- df4 %>% group_by(S_name, meets_at) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n >= 2)
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT S_name,
          meets_at,
          COUNT() AS n
   FROM
     (SELECT LHS.S_key AS S_key,
             LHS.S_name AS S_name,
             LHS.C_name AS C_name,
             RHS.meets_at AS meets_at
      FROM
        (SELECT LHS.S_key AS S_key,
                LHS.S_name AS S_name,
                RHS.C_name AS C_name
         FROM input3 AS LHS
         INNER JOIN input2 AS RHS ON (LHS.S_key = RHS.S_key)) AS LHS
      INNER JOIN input1 AS RHS ON (LHS.C_name = RHS.C_name))
   GROUP BY S_name,
            meets_at)
WHERE (n >= 2.0)
ORDER BY S_name
