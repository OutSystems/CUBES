[     1.569][MainProcess][INFO] Parsing specification...
[     1.573][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.573][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.573][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.574][MainProcess][DEBUG] Reading input files...
[     1.581][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/8-1.txt: ['string', 'string', 'int64']
[     1.587][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/8.out: ['string', 'int64']
[     1.613][MainProcess][DEBUG] Generating DSL...
[     1.648][MainProcess][INFO] Creating 16 processes
[     1.713][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.713][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.714][MainProcess][DEBUG] Increasing generator loc to 3
[     1.717][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.718][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.722][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.727][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.729][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.735][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.736][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.741][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.743][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.746][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.750][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.751][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.761][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.789][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.992][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.997][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     3.034][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     3.065][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     3.571][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     3.716][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     3.724][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     3.726][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     3.728][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     3.735][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     3.736][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     3.736][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     3.737][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     3.738][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     3.742][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     3.744][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     3.746][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     3.747][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     3.747][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     3.750][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     3.756][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     3.765][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     3.777][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = union())
[     3.791][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([2]))
[     3.802][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter([3]), l2 = intersect())
[     3.804][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([3]))
[     3.816][cube-solver-11][DEBUG] Solving cube (l0 = summarise(), l1 = filter([3]), l2 = semi_join())
[     3.834][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter([4]))
[     3.842][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([4]))
[     3.848][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([4]), l2 = cross_join())
[     3.853][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = filter([5]), l2 = mutate())
[     3.959][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([5]), l2 = summarise())
[     3.974][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter([5]), l2 = inner_join())
[     4.210][cube-solver-1][DEBUG] Found solution with cube (l0 = filter(), l1 = summarise())
[     4.211][MainProcess][INFO] Statistics:
[     4.211][MainProcess][INFO] 	Generated cubes: 33
[     4.211][MainProcess][INFO] 	Attempted programs: 14
[     4.211][MainProcess][INFO] 		Rejected: 13
[     4.212][MainProcess][INFO] 		Failed: 0
[     4.212][MainProcess][INFO] 	Blacklist clauses: 5
[     4.212][MainProcess][DEBUG] Printing statistics for good programs of size 2
[     4.212][MainProcess][DEBUG] 	0: Counter({'mutate': 147, 'filter': 141, 'summarise': 34})
[     4.213][MainProcess][DEBUG] 	1: Counter({'filter': 181, 'summarise': 93, 'mutate': 48})
[     4.213][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     4.213][MainProcess][DEBUG] 	0: Counter({'summarise': 264})
[     4.213][MainProcess][DEBUG] 	1: Counter({'filter': 264})
[     4.213][MainProcess][DEBUG] 	2: Counter({'union': 43, 'cross_join': 39, 'natural_join': 37, 'left_join': 36, 'filter': 33, 'semi_join': 24, 'natural_join3': 24, 'summarise': 13, 'mutate': 12, 'inner_join': 3})
[     4.213][MainProcess][INFO] Solution found: summarise(filter(@param0, level != 'JR'), meanage = mean(age), level)
[     4.304][cube-solver-4][DEBUG] Found solution with cube (l0 = summarise(), l1 = filter(), l2 = summarise())

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/8-1.txt", col_types = cols(S_key = col_character(),level = col_character(),age = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/55-tests/tables/8.out", col_types = cols(level = col_character(),meanage = col_integer()))

df2 <- input1 %>% filter(level != 'JR')
df3 <- df2 %>% group_by(level) %>% summarise(meanage = mean(age)) %>% ungroup()
out <- df3 %>% select(level, meanage) %>% arrange(level)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `level`,
       `meanage`
FROM
  (SELECT `level`,
          AVG(`age`) AS `meanage`
   FROM
     (SELECT *
      FROM `input1`
      WHERE (`level` != 'JR'))
   GROUP BY LEVEL)
ORDER BY LEVEL
