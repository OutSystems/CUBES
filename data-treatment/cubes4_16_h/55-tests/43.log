[     1.645][MainProcess][INFO] Parsing specification...
[     1.649][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.649][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.650][MainProcess][DEBUG] Reading input files...
[     1.664][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/18-1.txt: ['string', 'string', 'int64']
[     1.671][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/18-3.txt: ['string', 'string']
[     1.676][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/43.out: ['string', 'int64']
[     1.707][MainProcess][DEBUG] Generating DSL...
[     2.568][MainProcess][INFO] Creating 16 processes
[     2.661][MainProcess][DEBUG] Increasing generator loc to 3
[     3.673][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.702][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.704][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     3.707][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     3.707][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.716][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     3.726][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     3.731][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     3.732][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.735][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     3.738][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     3.751][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     3.751][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     3.757][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     3.831][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     3.844][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[    65.804][cube-solver-2][WARNING] There is no solution for current loc (2).
[    65.805][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = summarise())
[    65.824][cube-solver-3][WARNING] There is no solution for current loc (2).
[    65.825][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = mutate())
[    65.913][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[    65.960][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[    66.223][cube-solver-1][WARNING] There is no solution for current loc (2).
[    66.224][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = mutate())
[    66.309][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[    66.349][cube-solver-0][WARNING] There is no solution for current loc (2).
[    66.350][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = summarise())
[    66.434][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[    96.606][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = mutate())
[    96.900][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = summarise())
[    96.993][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = summarise())
[    97.147][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = mutate())
[    97.168][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = mutate())
[    97.196][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = summarise())
[    97.296][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = summarise())
[    97.344][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = natural_join())
[    97.614][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([3]), l2 = summarise([3]))
[    97.660][cube-solver-14][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = natural_join3())
[    97.674][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([4]), l2 = mutate())
[    97.798][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([6]), l2 = summarise([6]))
[    97.871][cube-solver-12][DEBUG] Solving cube (l0 = summarise([3]), l1 = summarise([3]), l2 = natural_join4())
[    97.992][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = mutate())
[    98.004][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = mutate())
[    98.032][cube-solver-12][DEBUG] Solving cube (l0 = summarise([7]), l1 = summarise([7]), l2 = filter())
[    98.068][cube-solver-13][DEBUG] Solving cube (l0 = summarise([7]), l1 = summarise([7]), l2 = summarise([7]))
[    98.145][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = mutate())
[    98.193][cube-solver-12][DEBUG] Solving cube (l0 = summarise([9]), l1 = summarise([9]), l2 = union())
[    98.199][cube-solver-8][DEBUG] Solving cube (l0 = summarise([8]), l1 = summarise([8]), l2 = anti_join())
[    98.204][cube-solver-4][DEBUG] Solving cube (l0 = summarise([9]), l1 = summarise([9]), l2 = left_join())
[    98.242][cube-solver-13][DEBUG] Solving cube (l0 = summarise([10]), l1 = summarise([10]), l2 = intersect())
[    98.352][cube-solver-15][DEBUG] Solving cube (l0 = summarise([11]), l1 = summarise([11]), l2 = semi_join())
[    98.584][cube-solver-11][DEBUG] Solving cube (l0 = summarise([13]), l1 = summarise([13]), l2 = cross_join())
[    99.184][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = summarise([32]))
[    99.551][cube-solver-10][DEBUG] Solving cube (l0 = summarise([34]), l1 = summarise([34]), l2 = mutate())
[    99.752][cube-solver-10][DEBUG] Solving cube (l0 = summarise([35]), l1 = summarise([35]), l2 = inner_join())
[   102.478][cube-solver-7][DEBUG] Solving cube (l0 = summarise([41]), l1 = filter(), l2 = summarise([41]))
[   102.722][cube-solver-7][DEBUG] Solving cube (l0 = summarise([41]), l1 = filter(), l2 = mutate())
[   102.929][cube-solver-7][DEBUG] Solving cube (l0 = summarise([41]), l1 = anti_join(), l2 = summarise([41]))
[   108.145][cube-solver-6][DEBUG] Solving cube (l0 = summarise([42]), l1 = anti_join(), l2 = mutate())
[   109.865][cube-solver-5][DEBUG] Solving cube (l0 = summarise([42]), l1 = left_join(), l2 = summarise([42]))
[   147.668][cube-solver-6][DEBUG] Solving cube (l0 = summarise([42]), l1 = left_join(), l2 = mutate())
[   151.188][cube-solver-5][DEBUG] Solving cube (l0 = summarise([42]), l1 = union(), l2 = summarise([42]))
[   156.803][cube-solver-2][DEBUG] Solving cube (l0 = summarise([42]), l1 = natural_join(), l2 = summarise([42]))
[   157.588][cube-solver-3][DEBUG] Solving cube (l0 = summarise([42]), l1 = natural_join(), l2 = mutate())
[   158.529][cube-solver-6][DEBUG] Solving cube (l0 = summarise([42]), l1 = union(), l2 = mutate())
[   158.661][cube-solver-0][DEBUG] Solving cube (l0 = summarise([42]), l1 = natural_join3(), l2 = mutate())
[   159.951][cube-solver-15][DEBUG] Solving cube (l0 = summarise([42]), l1 = intersect(), l2 = summarise([42]))
[   160.359][cube-solver-1][DEBUG] Solving cube (l0 = summarise([42]), l1 = natural_join3(), l2 = summarise([42]))
[   170.434][cube-solver-3][DEBUG] Solving cube (l0 = summarise([42]), l1 = intersect(), l2 = mutate())
[   173.749][cube-solver-4][DEBUG] Solving cube (l0 = summarise([42]), l1 = semi_join(), l2 = summarise([42]))
[   177.799][cube-solver-6][DEBUG] Solving cube (l0 = summarise([42]), l1 = semi_join(), l2 = mutate())
[   184.181][cube-solver-6][DEBUG] Solving cube (l0 = summarise([42]), l1 = cross_join(), l2 = summarise([42]))
[   188.992][cube-solver-3][DEBUG] Solving cube (l0 = summarise([42]), l1 = cross_join(), l2 = mutate())
[   192.265][cube-solver-12][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate(), l2 = natural_join())
[   198.564][cube-solver-9][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate([1]), l2 = natural_join3())
[   203.186][cube-solver-2][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate([2]), l2 = natural_join4())
[   203.391][cube-solver-2][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate([2]), l2 = summarise([42]))
[   203.632][cube-solver-2][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate([2]), l2 = filter())
[   203.879][cube-solver-2][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate([2]), l2 = anti_join())
[   205.196][cube-solver-5][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate([2]), l2 = left_join())
[   210.671][cube-solver-12][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate([2]), l2 = union())
[   211.553][cube-solver-4][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate([2]), l2 = intersect())
[   211.623][cube-solver-1][DEBUG] Found solution with cube (l0 = summarise([42]), l1 = natural_join3(), l2 = summarise([42]))
[   211.626][MainProcess][INFO] Statistics:
[   211.627][MainProcess][INFO] 	Generated cubes: 58
[   211.627][MainProcess][INFO] 	Attempted programs: 8791
[   211.627][MainProcess][INFO] 		Rejected: 1416
[   211.627][MainProcess][INFO] 		Failed: 7374
[   211.627][MainProcess][INFO] 	Blacklist clauses: 44
[   211.627][MainProcess][DEBUG] Printing statistics for good programs of size 3
[   211.646][MainProcess][DEBUG] 	0: Counter({'summarise': 28427, 'natural_join': 1872})
[   211.661][MainProcess][DEBUG] 	1: Counter({'summarise': 10216, 'natural_join3': 7121, 'union': 3952, 'mutate': 3841, 'left_join': 1840, 'natural_join': 1840, 'anti_join': 832, 'semi_join': 636, 'intersect': 24})
[   211.676][MainProcess][DEBUG] 	2: Counter({'mutate': 9935, 'summarise': 8183, 'natural_join3': 3961, 'union': 3420, 'natural_join': 2184, 'left_join': 1458, 'inner_join': 544, 'semi_join': 336, 'anti_join': 284})
[   211.677][MainProcess][INFO] Solution found: summarise(natural_join3(summarise(@param0, cost = max(cost), P_id), @param0, @param1), n = n(), S_key, S_name)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/18-1.txt", col_types = cols(S_key = col_character(),P_id = col_character(),cost = col_integer()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/18-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/55-tests/tables/43.out", col_types = cols(S_name = col_character(),n = col_integer()))

df3 <- input1 %>% group_by(P_id) %>% summarise(cost = max(cost)) %>% ungroup()
df4 <- inner_join(df3, input1) %>% inner_join(input2)
df5 <- df4 %>% group_by(S_key, S_name) %>% summarise(n = n()) %>% ungroup()
out <- df5 %>% select(S_name, n) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name,
       n
FROM
  (SELECT S_key,
          S_name,
          COUNT() AS n
   FROM
     (SELECT LHS.P_id AS P_id,
             LHS.cost AS cost,
             LHS.S_key AS S_key,
             RHS.S_name AS S_name
      FROM
        (SELECT LHS.P_id AS P_id,
                LHS.cost AS cost,
                RHS.S_key AS S_key
         FROM
           (SELECT P_id,
                   MAX(cost) AS cost
            FROM input1
            GROUP BY P_id) AS LHS
         INNER JOIN input1 AS RHS ON (LHS.P_id = RHS.P_id
                                      AND LHS.cost = RHS.cost)) AS LHS
      INNER JOIN input2 AS RHS ON (LHS.S_key = RHS.S_key))
   GROUP BY S_key,
            S_name)
ORDER BY S_name
