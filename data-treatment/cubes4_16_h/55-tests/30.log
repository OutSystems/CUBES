[     1.938][MainProcess][INFO] Parsing specification...
[     1.970][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.970][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.970][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.971][MainProcess][DEBUG] Reading input files...
[     1.982][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/19-1.txt: ['string', 'string']
[     1.987][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/19-2.txt: ['string', 'string']
[     1.991][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/19-3.txt: ['string', 'string']
[     1.997][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/30.out: ['string', 'int64']
[     2.027][MainProcess][DEBUG] Generating DSL...
[     2.080][MainProcess][INFO] Creating 16 processes
[     2.154][MainProcess][DEBUG] Increasing generator loc to 3
[     2.172][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     2.174][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     2.176][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.179][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.181][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     2.185][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     2.187][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     2.195][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     2.200][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     2.201][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     2.205][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     2.209][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     2.214][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     2.214][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     2.225][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.274][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     4.575][cube-solver-2][WARNING] There is no solution for current loc (2).
[     4.576][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     4.579][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     4.584][cube-solver-1][WARNING] There is no solution for current loc (2).
[     4.585][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     4.590][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     4.622][cube-solver-3][WARNING] There is no solution for current loc (2).
[     4.623][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     4.626][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     4.670][cube-solver-0][WARNING] There is no solution for current loc (2).
[     4.672][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     4.677][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     5.569][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     5.572][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     5.578][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     5.599][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = mutate(), l2 = filter())
[     5.600][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     5.603][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     5.618][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     5.619][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3([1]))
[     5.622][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     5.647][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     5.662][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     5.677][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = anti_join())
[     5.682][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     5.682][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     5.697][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([4]), l2 = filter())
[     5.699][cube-solver-7][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = left_join())
[     5.703][cube-solver-15][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = union())
[     5.708][cube-solver-14][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = intersect())
[     5.717][cube-solver-7][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = semi_join())
[     5.727][cube-solver-14][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([1]), l2 = inner_join())
[     5.727][cube-solver-4][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([1]), l2 = cross_join())
[     5.727][cube-solver-15][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([1]), l2 = mutate())
[     5.735][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([5]), l2 = filter([2]))
[     5.736][cube-solver-7][DEBUG] Solving cube (l0 = summarise([5]), l1 = anti_join(), l2 = filter([1]))
[     5.745][cube-solver-15][DEBUG] Solving cube (l0 = summarise([5]), l1 = left_join(), l2 = filter([2]))
[     5.745][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([2]), l2 = mutate())
[     5.752][cube-solver-14][DEBUG] Solving cube (l0 = summarise([5]), l1 = union(), l2 = filter([2]))
[     5.757][cube-solver-7][DEBUG] Solving cube (l0 = summarise([5]), l1 = intersect(), l2 = filter([2]))
[     5.767][cube-solver-14][DEBUG] Solving cube (l0 = summarise([7]), l1 = cross_join(), l2 = filter([2]))
[     5.767][cube-solver-12][DEBUG] Solving cube (l0 = summarise([7]), l1 = mutate(), l2 = filter([2]))
[     5.768][cube-solver-15][DEBUG] Solving cube (l0 = summarise([7]), l1 = semi_join(), l2 = filter([2]))
[     5.776][cube-solver-7][DEBUG] Solving cube (l0 = summarise([7]), l1 = inner_join(), l2 = filter([2]))
[     5.780][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join(), l2 = summarise([7]))
[     5.782][cube-solver-15][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join(), l2 = mutate())
[     5.786][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join3([2]), l2 = summarise([7]))
[     5.791][cube-solver-15][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join4(), l2 = summarise([7]))
[     5.793][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join3([2]), l2 = mutate())
[     5.795][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([8]), l2 = natural_join())
[     5.797][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join4(), l2 = mutate())
[     5.808][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([8]), l2 = natural_join3([2]))
[     5.808][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([3]), l2 = summarise([8]))
[     5.839][cube-solver-13][DEBUG] Solving cube (l0 = filter([9]), l1 = summarise([10]), l2 = natural_join4())
[     5.860][cube-solver-13][DEBUG] Solving cube (l0 = filter([11]), l1 = summarise([11]), l2 = summarise([11]))
[     5.891][cube-solver-13][DEBUG] Solving cube (l0 = filter([16]), l1 = summarise([11]), l2 = filter([16]))
[     5.928][cube-solver-13][DEBUG] Solving cube (l0 = filter([18]), l1 = summarise([14]), l2 = anti_join())
[     5.970][cube-solver-13][DEBUG] Solving cube (l0 = filter([19]), l1 = summarise([14]), l2 = left_join())
[     6.001][cube-solver-13][DEBUG] Solving cube (l0 = filter([22]), l1 = summarise([14]), l2 = union())
[     6.033][cube-solver-13][DEBUG] Solving cube (l0 = filter([22]), l1 = summarise([14]), l2 = intersect())
[     6.064][cube-solver-13][DEBUG] Solving cube (l0 = filter([23]), l1 = summarise([15]), l2 = semi_join())
[     6.098][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([15]), l2 = cross_join())
[     6.134][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([15]), l2 = mutate())
[     6.167][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = summarise([15]), l2 = inner_join())
[     6.200][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = filter([24]), l2 = summarise([15]))
[     6.244][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = filter([24]), l2 = mutate())
[     6.279][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = anti_join(), l2 = summarise([15]))
[     6.313][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = anti_join(), l2 = mutate())
[     6.336][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = left_join(), l2 = summarise([15]))
[     6.370][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = left_join(), l2 = mutate())
[     6.393][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = union(), l2 = summarise([15]))
[     6.425][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = union(), l2 = mutate())
[     6.448][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = intersect(), l2 = summarise([15]))
[     6.481][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = intersect(), l2 = mutate())
[     6.504][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = semi_join(), l2 = summarise([15]))
[     6.537][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = semi_join(), l2 = mutate())
[     6.560][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = cross_join(), l2 = summarise([15]))
[     6.591][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = cross_join(), l2 = mutate())
[     6.605][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = natural_join())
[     6.619][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = natural_join3([2]))
[     6.644][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = natural_join4())
[     6.662][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = summarise([17]))
[     6.684][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = filter([24]))
[     6.704][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = anti_join())
[     6.719][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = left_join())
[     6.733][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = union())
[     6.747][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = intersect())
[     6.761][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = semi_join())
[     6.776][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = cross_join())
[     6.790][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = mutate())
[     6.800][cube-solver-9][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     6.801][MainProcess][INFO] Statistics:
[     6.801][MainProcess][INFO] 	Generated cubes: 87
[     6.801][MainProcess][INFO] 	Attempted programs: 21
[     6.802][MainProcess][INFO] 		Rejected: 18
[     6.802][MainProcess][INFO] 		Failed: 2
[     6.802][MainProcess][INFO] 	Blacklist clauses: 43
[     6.802][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     6.802][MainProcess][DEBUG] 	0: Counter({'natural_join3': 411})
[     6.803][MainProcess][DEBUG] 	1: Counter({'filter': 232, 'mutate': 157, 'summarise': 22})
[     6.803][MainProcess][DEBUG] 	2: Counter({'filter': 180, 'mutate': 125, 'summarise': 107})
[     6.803][MainProcess][INFO] Solution found: summarise(filter(natural_join3(@param0, @param2, @param1), color == 'red' & S_key == 'S5'), n = n(), P_id, color)
[     6.804][cube-solver-13][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = inner_join())

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/19-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/19-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/19-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/30.out", col_types = cols(P_id = col_character(),n = col_integer()))

df4 <- inner_join(input1, input3) %>% inner_join(input2)
df5 <- df4 %>% filter(color == 'red' & S_key == 'S5')
df6 <- df5 %>% group_by(P_id, color) %>% summarise(n = n()) %>% ungroup()
out <- df6 %>% select(P_id, n) %>% arrange(P_id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `P_id`,
       `n`
FROM
  (SELECT `P_id`,
          `color`,
          COUNT() AS `n`
   FROM
     (SELECT *
      FROM
        (SELECT `LHS`.`S_key` AS `S_key`,
                `LHS`.`P_id` AS `P_id`,
                `LHS`.`S_name` AS `S_name`,
                `RHS`.`color` AS `color`
         FROM
           (SELECT `LHS`.`S_key` AS `S_key`,
                   `LHS`.`P_id` AS `P_id`,
                   `RHS`.`S_name` AS `S_name`
            FROM `input1` AS `LHS`
            INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`)) AS `LHS`
         INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
      WHERE (`color` = 'red'
             AND `S_key` = 'S5'))
   GROUP BY P_id,
            color)
ORDER BY P_id
