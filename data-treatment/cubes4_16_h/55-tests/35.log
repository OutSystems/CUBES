[     1.587][MainProcess][INFO] Parsing specification...
[     1.590][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.590][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.591][MainProcess][DEBUG] Reading input files...
[     1.598][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-1.txt: ['string', 'string']
[     1.603][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-2.txt: ['string', 'string']
[     1.607][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-3.txt: ['string', 'string']
[     1.611][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/35.out: ['string']
[     1.640][MainProcess][DEBUG] Generating DSL...
[     1.661][MainProcess][INFO] Creating 16 processes
[     1.727][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.727][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.726][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.727][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.727][MainProcess][DEBUG] Increasing generator loc to 3
[     1.728][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.728][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.730][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.738][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.738][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.741][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.746][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.754][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.754][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.768][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.770][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     1.782][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.096][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.097][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.097][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.098][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.098][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.100][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.250][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.250][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.252][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.314][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.314][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.316][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.411][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.417][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.418][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.421][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.430][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.433][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.436][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.439][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.443][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.444][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise([1]))
[     2.446][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = anti_join())
[     2.448][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.450][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = left_join())
[     2.451][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = union())
[     2.452][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.453][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = intersect())
[     2.455][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = cross_join())
[     2.455][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = semi_join())
[     2.458][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.459][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = inner_join())
[     2.459][cube-solver-15][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = mutate())
[     2.459][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = anti_join(), l2 = filter())
[     2.460][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = left_join(), l2 = filter())
[     2.463][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = intersect(), l2 = filter())
[     2.463][cube-solver-15][DEBUG] Solving cube (l0 = summarise([2]), l1 = semi_join(), l2 = filter())
[     2.463][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = union(), l2 = filter())
[     2.464][cube-solver-13][DEBUG] Solving cube (l0 = summarise([2]), l1 = mutate(), l2 = filter())
[     2.464][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = cross_join(), l2 = filter())
[     2.468][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = inner_join(), l2 = filter())
[     2.469][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     2.469][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([2]))
[     2.469][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([2]))
[     2.469][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     2.472][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([2]))
[     2.472][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     2.474][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join3())
[     2.474][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join())
[     2.474][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join4())
[     2.475][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = summarise([2]))
[     2.476][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = filter())
[     2.478][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = anti_join())
[     2.479][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = left_join())
[     2.479][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = union())
[     2.481][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = intersect())
[     2.482][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = semi_join())
[     2.483][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = cross_join())
[     2.484][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = mutate())
[     2.484][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = inner_join())
[     2.486][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise([2]))
[     2.487][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     2.487][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise([2]))
[     2.488][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     2.489][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise([2]))
[     2.489][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([2]), l2 = filter())
[     2.490][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     2.490][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise([2]))
[     2.491][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     2.492][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise([2]))
[     2.493][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     2.493][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise([2]))
[     2.494][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     2.495][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     2.495][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise([2]))
[     2.496][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     2.496][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3())
[     2.497][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join4())
[     2.498][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise([2]))
[     2.498][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = filter())
[     2.499][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = anti_join())
[     2.499][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = left_join())
[     2.499][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = union())
[     2.501][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = intersect())
[     2.501][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = semi_join())
[     2.502][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = cross_join())
[     2.502][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = inner_join())
[     2.502][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[     2.503][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = summarise([2]))
[     2.504][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = mutate())
[     2.504][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([2]), l2 = filter())
[     2.505][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = summarise([2]))
[     2.505][cube-solver-4][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = mutate())
[     2.505][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter())
[     2.507][cube-solver-15][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([2]), l2 = filter())
[     2.507][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = summarise([2]))
[     2.508][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = mutate())
[     2.509][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter())
[     2.509][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = summarise([2]), l2 = filter())
[     2.510][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = summarise([2]))
[     2.511][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = mutate())
[     2.512][cube-solver-15][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter())
[     2.512][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([2]), l2 = filter())
[     2.512][cube-solver-13][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = summarise([2]))
[     2.514][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = mutate())
[     2.514][cube-solver-4][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter())
[     2.515][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([2]), l2 = filter())
[     2.515][cube-solver-15][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = summarise([3]))
[     2.516][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = mutate())
[     2.516][cube-solver-4][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter())
[     2.517][cube-solver-13][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([3]), l2 = filter())
[     2.517][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = summarise([3]))
[     2.519][cube-solver-4][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = mutate())
[     2.519][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter())
[     2.520][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter())
[     2.521][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter())
[     2.522][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter())
[     2.523][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([3]), l2 = filter())
[     2.523][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join())
[     2.523][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join3())
[     2.523][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join4())
[     2.526][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise([3]))
[     2.528][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = filter())
[     2.531][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = anti_join())
[     2.531][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = left_join())
[     2.535][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = union())
[     2.535][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = intersect())
[     2.536][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.538][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = semi_join())
[     2.539][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = cross_join())
[     2.541][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = mutate())
[     2.542][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = inner_join())
[     2.544][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([1]))
[     2.546][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([1]))
[     2.548][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([1]))
[     2.550][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([1]))
[     2.552][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([1]))
[     2.554][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([1]))
[     2.556][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([1]))
[     2.558][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([1]))
[     2.560][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([3]), l2 = filter([1]))
[     2.562][cube-solver-4][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([1]), l2 = summarise([3]))
[     2.566][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([1]), l2 = mutate())
[     2.568][cube-solver-4][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([1]))
[     2.569][MainProcess][DEBUG] Increasing generator loc to 4
[     2.570][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     2.572][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[     2.684][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = mutate())
[     2.692][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     2.770][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([4]), l2 = summarise([12]))
[     2.784][cube-solver-1][DEBUG] Solving cube (l0 = summarise([12]), l1 = natural_join(), l2 = filter([4]))
[     2.786][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     2.801][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     2.926][cube-solver-0][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join4(), l2 = filter([7]))
[     2.941][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     3.062][cube-solver-3][DEBUG] Solving cube (l0 = summarise([17]), l1 = natural_join3(), l2 = filter([8]))
[     3.236][cube-solver-2][DEBUG] Solving cube (l0 = summarise([17]), l1 = summarise([17]), l2 = filter([10]))
[     3.256][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     3.601][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([18]), l2 = natural_join(), l3 = filter([12]))
[     3.799][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = natural_join3([2]), l3 = filter([13]))
[     3.962][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = summarise([20]), l3 = filter([15]))
[     3.990][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([15]), l3 = summarise([20]))
[     4.006][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([15]), l3 = natural_join([2]))
[     4.014][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([15]), l3 = filter([15]))
[     4.035][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([15]), l3 = anti_join())
[     4.073][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = natural_join4(), l3 = filter([15]))
[     4.103][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([15]), l3 = left_join())
[     4.232][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([15]), l3 = natural_join3([2]))
[     4.272][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([15]), l3 = natural_join4())
[     4.824][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     5.280][cube-solver-2][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([15]), l3 = natural_join4())
[     5.282][MainProcess][INFO] Statistics:
[     5.282][MainProcess][INFO] 	Generated cubes: 154
[     5.282][MainProcess][INFO] 	Attempted programs: 42
[     5.282][MainProcess][INFO] 		Rejected: 30
[     5.282][MainProcess][INFO] 		Failed: 11
[     5.282][MainProcess][INFO] 	Blacklist clauses: 40
[     5.282][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     5.284][MainProcess][DEBUG] 	0: Counter({'mutate': 859, 'natural_join3': 425, 'summarise': 376})
[     5.285][MainProcess][DEBUG] 	1: Counter({'filter': 485, 'natural_join3': 471, 'natural_join4': 279, 'summarise': 225, 'mutate': 200})
[     5.286][MainProcess][DEBUG] 	2: Counter({'filter': 1176, 'natural_join4': 272, 'natural_join3': 214})
[     5.286][MainProcess][DEBUG] Priting statistics for good programs of size 4
[     5.286][MainProcess][DEBUG] 	0: Counter({'natural_join': 462})
[     5.286][MainProcess][DEBUG] 	1: Counter({'summarise': 462})
[     5.287][MainProcess][DEBUG] 	2: Counter({'filter': 267, 'natural_join': 111, 'natural_join3': 84})
[     5.287][MainProcess][DEBUG] 	3: Counter({'filter': 195, 'natural_join4': 109, 'natural_join': 88, 'left_join': 52, 'anti_join': 10, 'natural_join3': 8})
[     5.287][MainProcess][INFO] Solution found: natural_join4(@param0, @param1, filter(summarise(natural_join(@param0, @param2), n = n(), P_id), n == 2), @param2)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/35.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input3)
df5 <- df4 %>% group_by(P_id) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n == 2)
df7 <- inner_join(input1, input2) %>% inner_join(df6) %>% inner_join(input3)
out <- df7 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT LHS.S_key AS S_key,
          LHS.P_id AS P_id,
          LHS.color AS color,
          LHS.n AS n,
          RHS.S_name AS S_name
   FROM
     (SELECT LHS.S_key AS S_key,
             LHS.P_id AS P_id,
             LHS.color AS color,
             RHS.n AS n
      FROM
        (SELECT LHS.S_key AS S_key,
                LHS.P_id AS P_id,
                RHS.color AS color
         FROM input1 AS LHS
         INNER JOIN input2 AS RHS ON (LHS.P_id = RHS.P_id)) AS LHS
      INNER JOIN
        (SELECT *
         FROM
           (SELECT P_id,
                   COUNT() AS n
            FROM
              (SELECT LHS.S_key AS S_key,
                      LHS.P_id AS P_id,
                      RHS.S_name AS S_name
               FROM input1 AS LHS
               INNER JOIN input3 AS RHS ON (LHS.S_key = RHS.S_key))
            GROUP BY P_id)
         WHERE (n = 2.0)) AS RHS ON (LHS.P_id = RHS.P_id)) AS LHS
   INNER JOIN input3 AS RHS ON (LHS.S_key = RHS.S_key))
ORDER BY S_name
