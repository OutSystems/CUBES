[     1.594][MainProcess][INFO] Parsing specification...
[     1.598][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.598][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.599][MainProcess][DEBUG] Reading input files...
[     1.606][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-1.txt: ['string', 'string']
[     1.612][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-2.txt: ['string', 'string']
[     1.617][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-3.txt: ['string', 'string']
[     1.622][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/35.out: ['string']
[     1.655][MainProcess][DEBUG] Generating DSL...
[     1.678][MainProcess][INFO] Creating 16 processes
[     1.745][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.746][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.745][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.746][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.746][MainProcess][DEBUG] Increasing generator loc to 3
[     1.747][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.747][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.751][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.759][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.760][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.763][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.765][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.771][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.772][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.775][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.798][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.808][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.431][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.432][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.433][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.489][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.490][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.491][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.495][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.502][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     2.507][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.509][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.512][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.513][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.514][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.519][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.520][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.522][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.525][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.529][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.531][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise([1]))
[     2.531][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.535][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = union())
[     2.536][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = intersect())
[     2.538][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = semi_join())
[     2.540][cube-solver-9][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = mutate())
[     2.540][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = cross_join())
[     2.541][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.544][cube-solver-9][DEBUG] Solving cube (l0 = summarise([2]), l1 = anti_join(), l2 = filter([1]))
[     2.544][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter([1]), l2 = inner_join())
[     2.547][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = left_join(), l2 = filter([1]))
[     2.549][cube-solver-9][DEBUG] Solving cube (l0 = summarise([3]), l1 = union(), l2 = filter([1]))
[     2.552][cube-solver-12][DEBUG] Solving cube (l0 = summarise([3]), l1 = intersect(), l2 = filter([1]))
[     2.553][cube-solver-9][DEBUG] Solving cube (l0 = summarise([3]), l1 = cross_join(), l2 = filter([1]))
[     2.554][cube-solver-10][DEBUG] Solving cube (l0 = summarise([3]), l1 = semi_join(), l2 = filter([1]))
[     2.557][cube-solver-9][DEBUG] Solving cube (l0 = summarise([3]), l1 = mutate(), l2 = filter([1]))
[     2.562][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = mutate())
[     2.562][cube-solver-12][DEBUG] Solving cube (l0 = summarise([4]), l1 = inner_join(), l2 = filter([1]))
[     2.562][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = summarise([4]))
[     2.564][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3(), l2 = summarise([4]))
[     2.569][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3([1]), l2 = mutate())
[     2.570][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = summarise([4]))
[     2.571][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = mutate())
[     2.572][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([5]), l2 = natural_join())
[     2.576][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([5]), l2 = natural_join3([1]))
[     2.577][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([5]), l2 = summarise([5]))
[     2.576][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([1]), l2 = summarise([5]))
[     2.578][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([5]), l2 = natural_join4())
[     2.584][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([5]), l2 = filter([2]))
[     2.585][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([5]), l2 = anti_join())
[     2.586][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([5]), l2 = left_join())
[     2.588][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([5]), l2 = union())
[     2.589][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([5]), l2 = intersect())
[     2.594][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([5]), l2 = semi_join())
[     2.595][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([5]), l2 = mutate())
[     2.595][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([5]), l2 = cross_join())
[     2.597][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([5]), l2 = inner_join())
[     2.600][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = filter([2]), l2 = summarise([5]))
[     2.604][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = filter([2]), l2 = mutate())
[     2.605][cube-solver-10][DEBUG] Solving cube (l0 = filter([3]), l1 = anti_join(), l2 = summarise([5]))
[     2.606][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = left_join(), l2 = summarise([5]))
[     2.606][cube-solver-13][DEBUG] Solving cube (l0 = filter([3]), l1 = anti_join(), l2 = mutate())
[     2.609][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([3]), l2 = summarise([5]))
[     2.610][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = left_join(), l2 = mutate())
[     2.611][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = union(), l2 = summarise([5]))
[     2.612][cube-solver-13][DEBUG] Solving cube (l0 = filter([3]), l1 = union(), l2 = mutate())
[     2.614][cube-solver-10][DEBUG] Solving cube (l0 = filter([3]), l1 = intersect(), l2 = summarise([5]))
[     2.616][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = intersect(), l2 = mutate())
[     2.617][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = semi_join(), l2 = summarise([5]))
[     2.618][cube-solver-13][DEBUG] Solving cube (l0 = filter([3]), l1 = semi_join(), l2 = mutate())
[     2.620][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = cross_join(), l2 = summarise([5]))
[     2.622][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = natural_join())
[     2.622][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = cross_join(), l2 = mutate())
[     2.624][cube-solver-10][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = natural_join3([2]))
[     2.624][cube-solver-13][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = natural_join4())
[     2.626][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = summarise([5]))
[     2.628][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = filter([3]))
[     2.629][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = anti_join())
[     2.629][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = summarise([5]), l2 = filter([3]))
[     2.630][cube-solver-13][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = left_join())
[     2.630][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([3]))
[     2.631][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = intersect())
[     2.631][cube-solver-10][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = union())
[     2.634][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = semi_join())
[     2.634][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = cross_join())
[     2.636][cube-solver-13][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = inner_join())
[     2.636][cube-solver-12][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate(), l2 = mutate())
[     2.637][cube-solver-10][DEBUG] Solving cube (l0 = filter([3]), l1 = inner_join(), l2 = summarise([5]))
[     2.638][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = inner_join(), l2 = mutate())
[     2.640][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([3]), l2 = summarise([5]))
[     2.640][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([5]), l2 = filter([3]))
[     2.641][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([5]), l2 = filter([3]))
[     2.642][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([3]), l2 = mutate())
[     2.642][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([3]))
[     2.647][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = filter([3]), l2 = summarise([5]))
[     2.647][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([3]))
[     2.648][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = filter([3]), l2 = mutate())
[     2.649][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = summarise([5]), l2 = filter([3]))
[     2.649][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = filter([3]), l2 = summarise([5]))
[     2.651][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([3]))
[     2.651][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter([3]), l2 = mutate())
[     2.654][cube-solver-13][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([5]), l2 = filter([3]))
[     2.654][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = filter([3]), l2 = summarise([5]))
[     2.657][cube-solver-10][DEBUG] Solving cube (l0 = intersect(), l1 = filter([3]), l2 = mutate())
[     2.657][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([3]))
[     2.659][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([5]), l2 = filter([3]))
[     2.660][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([3]), l2 = summarise([5]))
[     2.661][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([3]), l2 = mutate())
[     2.664][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([3]))
[     2.664][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([5]), l2 = filter([3]))
[     2.664][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([3]), l2 = summarise([5]))
[     2.666][cube-solver-13][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([3]), l2 = mutate())
[     2.669][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([3]))
[     2.670][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([3]))
[     2.670][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([3]))
[     2.671][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([2]), l2 = filter([3]))
[     2.674][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([5]), l2 = filter([3]))
[     2.675][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = natural_join())
[     2.675][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = natural_join3([2]))
[     2.677][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = natural_join4())
[     2.679][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.680][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]))
[     2.682][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.683][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = summarise([5]))
[     2.684][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = anti_join())
[     2.685][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.686][cube-solver-2][DEBUG] Solving cube (l0 = filter([3]), l1 = mutate())
[     2.690][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.692][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = union())
[     2.693][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = intersect())
[     2.698][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = semi_join())
[     2.700][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = cross_join())
[     2.706][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = mutate())
[     2.707][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = inner_join())
[     2.713][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([5]))
[     2.721][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([6]))
[     2.722][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([6]))
[     2.730][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([6]))
[     2.731][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([6]))
[     2.738][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([6]))
[     2.745][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([6]), l2 = mutate())
[     2.746][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([6]))
[     2.747][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([6]))
[     2.752][cube-solver-14][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([5]), l2 = filter([6]))
[     2.754][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([6]), l2 = summarise([5]))
[     2.755][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([6]), l2 = mutate())
[     2.761][MainProcess][DEBUG] Increasing generator loc to 4
[     2.761][cube-solver-14][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([6]))
[     2.762][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     2.765][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     2.766][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     2.818][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([8]))
[     2.831][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     3.309][cube-solver-0][DEBUG] Solving cube (l0 = summarise([8]), l1 = natural_join(), l2 = filter([13]))
[     3.328][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     3.490][cube-solver-1][DEBUG] Solving cube (l0 = summarise([8]), l1 = natural_join3([2]), l2 = filter([14]))
[     3.698][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter([14]), l2 = left_join())
[     3.713][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     3.826][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([14]), l2 = filter([14]))
[     3.847][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     4.007][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([15]), l2 = natural_join4(), l3 = filter([14]))
[     4.036][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([15]), l2 = filter([14]), l3 = summarise([15]))
[     4.071][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([15]), l2 = filter([14]), l3 = filter([14]))
[     4.102][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([16]), l2 = filter([14]), l3 = anti_join())
[     4.396][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = natural_join3([2]), l3 = filter([14]))
[     4.485][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = summarise([19]), l3 = filter([15]))
[     4.530][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = filter([15]), l3 = left_join())
[     4.560][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = natural_join([2]), l3 = filter([15]))
[     4.683][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = filter([15]), l3 = natural_join([2]))
[     5.008][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     5.010][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = filter([15]), l3 = natural_join3([2]))
[     5.305][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = filter([15]), l3 = natural_join4())
[     5.573][cube-solver-4][DEBUG] Found solution with cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     5.575][MainProcess][INFO] Statistics:
[     5.575][MainProcess][INFO] 	Generated cubes: 154
[     5.575][MainProcess][INFO] 	Attempted programs: 100
[     5.575][MainProcess][INFO] 		Rejected: 44
[     5.575][MainProcess][INFO] 		Failed: 55
[     5.575][MainProcess][INFO] 	Blacklist clauses: 38
[     5.575][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     5.577][MainProcess][DEBUG] 	0: Counter({'mutate': 942, 'natural_join3': 455, 'summarise': 371})
[     5.578][MainProcess][DEBUG] 	1: Counter({'filter': 637, 'natural_join3': 396, 'natural_join4': 280, 'summarise': 255, 'mutate': 200})
[     5.579][MainProcess][DEBUG] 	2: Counter({'filter': 1131, 'natural_join4': 465, 'natural_join3': 172})
[     5.579][MainProcess][DEBUG] Printing statistics for good programs of size 4
[     5.579][MainProcess][DEBUG] 	0: Counter({'natural_join': 245})
[     5.579][MainProcess][DEBUG] 	1: Counter({'summarise': 245})
[     5.579][MainProcess][DEBUG] 	2: Counter({'filter': 117, 'natural_join3': 68, 'natural_join': 60})
[     5.580][MainProcess][DEBUG] 	3: Counter({'filter': 128, 'left_join': 60, 'natural_join': 42, 'natural_join4': 15})
[     5.580][MainProcess][INFO] Solution found: natural_join4(@param0, @param2, @param1, filter(summarise(@param0, n = n(), P_id), n == 2))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/35.out", col_types = cols(S_name = col_character()))

df4 <- input1 %>% group_by(P_id) %>% summarise(n = n()) %>% ungroup()
df5 <- df4 %>% filter(n == 2)
df6 <- inner_join(input1, input3) %>% inner_join(input2) %>% inner_join(df5)
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT LHS.S_key AS S_key,
          LHS.P_id AS P_id,
          LHS.S_name AS S_name,
          LHS.color AS color,
          RHS.n AS n
   FROM
     (SELECT LHS.S_key AS S_key,
             LHS.P_id AS P_id,
             LHS.S_name AS S_name,
             RHS.color AS color
      FROM
        (SELECT LHS.S_key AS S_key,
                LHS.P_id AS P_id,
                RHS.S_name AS S_name
         FROM input1 AS LHS
         INNER JOIN input3 AS RHS ON (LHS.S_key = RHS.S_key)) AS LHS
      INNER JOIN input2 AS RHS ON (LHS.P_id = RHS.P_id)) AS LHS
   INNER JOIN
     (SELECT *
      FROM
        (SELECT P_id,
                COUNT() AS n
         FROM input1
         GROUP BY P_id)
      WHERE (n = 2.0)) AS RHS ON (LHS.P_id = RHS.P_id))
ORDER BY S_name
