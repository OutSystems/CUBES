[     1.575][MainProcess][INFO] Parsing specification...
[     1.579][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.579][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.579][MainProcess][DEBUG] Reading input files...
[     1.586][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/6-1.txt: ['string', 'string']
[     1.592][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/6-2.txt: ['string', 'string']
[     1.596][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/6-3.txt: ['string', 'string']
[     1.601][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/6.out: ['string']
[     1.630][MainProcess][DEBUG] Generating DSL...
[     1.651][MainProcess][INFO] Creating 16 processes
[     1.717][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.717][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.717][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.717][MainProcess][DEBUG] Increasing generator loc to 3
[     1.717][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.718][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.718][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.722][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.726][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.730][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.733][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.737][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.757][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.757][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.760][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     1.761][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.766][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     2.081][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.082][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.084][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.120][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.120][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.122][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.214][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.215][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.216][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.319][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.319][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.321][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.402][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.408][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.410][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.412][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.412][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.413][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.414][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.416][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.418][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.419][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.421][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.424][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     2.425][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     2.428][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     2.428][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     2.431][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = inner_join())
[     2.431][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     2.431][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.433][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter())
[     2.434][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter())
[     2.434][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.434][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.436][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter())
[     2.437][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter())
[     2.437][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join(), l2 = filter())
[     2.439][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join(), l2 = filter())
[     2.440][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join(), l2 = filter())
[     2.440][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter())
[     2.440][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     2.441][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise())
[     2.442][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise())
[     2.443][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     2.443][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise())
[     2.443][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     2.444][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join())
[     2.445][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join3())
[     2.446][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join4())
[     2.446][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = summarise())
[     2.446][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = filter())
[     2.447][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = anti_join())
[     2.448][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = left_join())
[     2.448][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = union())
[     2.449][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = semi_join())
[     2.449][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = intersect())
[     2.449][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = cross_join())
[     2.451][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = inner_join())
[     2.451][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = mutate())
[     2.452][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise())
[     2.452][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     2.452][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise())
[     2.454][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     2.454][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise())
[     2.455][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     2.455][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise())
[     2.455][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     2.456][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise())
[     2.457][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     2.458][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise())
[     2.458][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     2.458][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise())
[     2.459][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     2.459][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     2.461][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3())
[     2.461][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join4())
[     2.461][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = filter())
[     2.462][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise())
[     2.462][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = anti_join())
[     2.464][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = left_join())
[     2.464][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = intersect())
[     2.464][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = union())
[     2.464][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = semi_join())
[     2.465][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = cross_join())
[     2.467][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[     2.467][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = inner_join())
[     2.467][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = summarise())
[     2.468][cube-solver-4][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise(), l2 = filter())
[     2.469][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = mutate())
[     2.469][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = summarise())
[     2.470][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = mutate())
[     2.470][cube-solver-14][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter())
[     2.471][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = summarise(), l2 = filter())
[     2.471][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = summarise())
[     2.473][cube-solver-15][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter())
[     2.473][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = mutate())
[     2.473][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = summarise(), l2 = filter())
[     2.473][cube-solver-14][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = summarise())
[     2.474][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = mutate())
[     2.475][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter())
[     2.476][cube-solver-10][DEBUG] Solving cube (l0 = intersect(), l1 = summarise(), l2 = filter())
[     2.476][cube-solver-15][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = summarise())
[     2.476][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     2.476][cube-solver-14][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = mutate())
[     2.476][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.477][cube-solver-4][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter())
[     2.477][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise(), l2 = filter())
[     2.479][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = summarise())
[     2.479][cube-solver-14][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter())
[     2.479][cube-solver-15][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = mutate())
[     2.480][cube-solver-4][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise(), l2 = filter())
[     2.480][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = summarise())
[     2.481][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = mutate())
[     2.482][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter())
[     2.483][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter())
[     2.483][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter())
[     2.483][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter())
[     2.483][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = summarise(), l2 = filter())
[     2.484][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.485][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join())
[     2.486][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join3())
[     2.486][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join4())
[     2.487][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise())
[     2.490][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = filter())
[     2.490][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = anti_join())
[     2.493][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = left_join())
[     2.494][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = union())
[     2.496][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = intersect())
[     2.497][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = semi_join())
[     2.500][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = cross_join())
[     2.500][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = mutate())
[     2.503][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = inner_join())
[     2.504][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter())
[     2.507][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter())
[     2.507][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter())
[     2.510][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter())
[     2.511][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter())
[     2.514][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter())
[     2.514][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter())
[     2.517][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter())
[     2.518][cube-solver-14][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise(), l2 = filter())
[     2.520][cube-solver-5][DEBUG] Solving cube (l0 = inner_join(), l1 = filter(), l2 = summarise())
[     2.521][cube-solver-14][DEBUG] Solving cube (l0 = inner_join(), l1 = filter(), l2 = mutate())
[     2.524][MainProcess][DEBUG] Increasing generator loc to 4
[     2.524][cube-solver-5][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter())
[     2.524][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     2.527][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     2.623][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([1]), l2 = filter())
[     2.630][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[     2.693][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([1]), l2 = summarise([2]))
[     2.701][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     2.810][cube-solver-3][DEBUG] Solving cube (l0 = summarise([11]), l1 = natural_join3([2]), l2 = filter([2]))
[     2.967][cube-solver-0][DEBUG] Solving cube (l0 = summarise([13]), l1 = natural_join4(), l2 = filter([2]))
[     2.982][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     2.982][cube-solver-2][DEBUG] Solving cube (l0 = summarise([13]), l1 = natural_join(), l2 = filter([2]))
[     2.998][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     3.138][cube-solver-1][DEBUG] Solving cube (l0 = summarise([17]), l1 = summarise([17]), l2 = filter([4]))
[     3.169][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     3.746][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([11]))
[     3.949][cube-solver-12][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([11]))
[     3.976][cube-solver-12][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = filter([11]), l3 = summarise([21]))
[     4.016][cube-solver-12][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([14]), l3 = filter([14]))
[     4.031][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([14]))
[     4.050][cube-solver-12][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([14]), l3 = anti_join())
[     4.074][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([14]), l3 = left_join())
[     4.168][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([14]))
[     4.283][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([14]), l3 = natural_join4())
[     4.298][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([14]), l3 = natural_join([2]))
[     4.409][cube-solver-1][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([14]), l3 = natural_join4())
[     4.410][MainProcess][INFO] Statistics:
[     4.410][MainProcess][INFO] 	Generated cubes: 153
[     4.410][MainProcess][INFO] 	Attempted programs: 1
[     4.411][MainProcess][INFO] 		Rejected: 0
[     4.411][MainProcess][INFO] 		Failed: 0
[     4.411][MainProcess][INFO] 	Blacklist clauses: 39
[     4.411][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     4.412][MainProcess][DEBUG] 	0: Counter({'mutate': 591, 'summarise': 324, 'natural_join3': 282})
[     4.413][MainProcess][DEBUG] 	1: Counter({'filter': 492, 'natural_join3': 276, 'mutate': 160, 'natural_join4': 147, 'summarise': 122})
[     4.413][MainProcess][DEBUG] 	2: Counter({'filter': 705, 'natural_join3': 255, 'natural_join4': 237})
[     4.413][MainProcess][DEBUG] Priting statistics for good programs of size 4
[     4.414][MainProcess][DEBUG] 	0: Counter({'natural_join': 60})
[     4.414][MainProcess][DEBUG] 	1: Counter({'summarise': 60})
[     4.414][MainProcess][DEBUG] 	2: Counter({'natural_join': 26, 'filter': 22, 'natural_join3': 12})
[     4.414][MainProcess][DEBUG] 	3: Counter({'filter': 38, 'left_join': 18, 'natural_join4': 4})
[     4.414][MainProcess][INFO] Solution found: natural_join4(@param2, @param1, @param0, filter(summarise(natural_join(@param0, @param1), n = n(), F_key), n <= 5))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/6-1.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/6-2.txt", col_types = cols(C_name = col_character(),F_key = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/6-3.txt", col_types = cols(F_key = col_character(),F_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/6.out", col_types = cols(F_name = col_character()))

df4 <- inner_join(input1, input2)
df5 <- df4 %>% group_by(F_key) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n <= 5)
df7 <- inner_join(input3, input2) %>% inner_join(input1) %>% inner_join(df6)
out <- df7 %>% select(F_name) %>% distinct() %>% arrange(F_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT F_name
FROM
  (SELECT LHS.F_key AS F_key,
          LHS.F_name AS F_name,
          LHS.C_name AS C_name,
          LHS.S_key AS S_key,
          RHS.n AS n
   FROM
     (SELECT LHS.F_key AS F_key,
             LHS.F_name AS F_name,
             LHS.C_name AS C_name,
             RHS.S_key AS S_key
      FROM
        (SELECT LHS.F_key AS F_key,
                LHS.F_name AS F_name,
                RHS.C_name AS C_name
         FROM input3 AS LHS
         INNER JOIN input2 AS RHS ON (LHS.F_key = RHS.F_key)) AS LHS
      INNER JOIN input1 AS RHS ON (LHS.C_name = RHS.C_name)) AS LHS
   INNER JOIN
     (SELECT *
      FROM
        (SELECT F_key,
                COUNT() AS n
         FROM
           (SELECT LHS.S_key AS S_key,
                   LHS.C_name AS C_name,
                   RHS.F_key AS F_key
            FROM input1 AS LHS
            INNER JOIN input2 AS RHS ON (LHS.C_name = RHS.C_name))
         GROUP BY F_key)
      WHERE (n <= 5.0)) AS RHS ON (LHS.F_key = RHS.F_key))
ORDER BY F_name
