[     1.612][MainProcess][INFO] Parsing specification...
[     1.615][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.615][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.615][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.616][MainProcess][DEBUG] Reading input files...
[     1.623][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/2-1.txt: ['string', 'string']
[     1.628][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/2-2.txt: ['string', 'string']
[     1.633][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/2-3.txt: ['string', 'string']
[     1.638][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/2-4.txt: ['string', 'string', 'int64']
[     1.642][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/2.out: ['int64']
[     1.674][MainProcess][DEBUG] Generating DSL...
[     1.715][MainProcess][INFO] Creating 16 processes
[     1.786][MainProcess][DEBUG] Increasing generator loc to 3
[     1.790][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.796][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.800][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.802][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.805][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.809][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.813][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.821][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.827][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.829][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.832][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.837][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.838][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.843][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.849][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.886][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     3.079][cube-solver-0][WARNING] There is no solution for current loc (2).
[     3.080][cube-solver-1][WARNING] There is no solution for current loc (2).
[     3.080][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     3.080][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     3.083][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     3.083][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     3.088][cube-solver-2][WARNING] There is no solution for current loc (2).
[     3.089][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     3.090][cube-solver-3][WARNING] There is no solution for current loc (2).
[     3.090][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     3.092][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     3.093][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     3.940][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     3.950][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     3.951][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     3.955][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     3.955][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     3.961][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     3.961][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     3.963][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     3.970][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     3.970][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     3.973][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     3.977][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     3.978][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     3.984][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     3.986][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     3.989][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     3.993][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = semi_join())
[     3.997][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = cross_join())
[     3.998][cube-solver-8][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = mutate())
[     4.000][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = inner_join())
[     4.002][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = anti_join(), l2 = filter())
[     4.006][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = left_join(), l2 = filter())
[     4.007][cube-solver-8][DEBUG] Solving cube (l0 = summarise([1]), l1 = union(), l2 = filter())
[     4.007][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = intersect(), l2 = filter())
[     4.011][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = semi_join(), l2 = filter())
[     4.012][cube-solver-5][DEBUG] Solving cube (l0 = summarise([2]), l1 = cross_join(), l2 = filter())
[     4.016][cube-solver-8][DEBUG] Solving cube (l0 = summarise([2]), l1 = inner_join(), l2 = filter())
[     4.016][cube-solver-4][DEBUG] Solving cube (l0 = summarise([2]), l1 = mutate(), l2 = filter())
[     4.017][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([2]))
[     4.020][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     4.022][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([2]))
[     4.023][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     4.025][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     4.026][cube-solver-8][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4([3]), l2 = summarise([2]))
[     4.028][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4([3]), l2 = mutate())
[     4.028][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join())
[     4.030][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join3())
[     4.033][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise([2]))
[     4.034][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = summarise([2]))
[     4.035][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = natural_join4([3]))
[     4.040][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = filter())
[     4.042][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = anti_join())
[     4.043][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4([4]), l1 = filter(), l2 = mutate())
[     4.047][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = union())
[     4.047][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = left_join())
[     4.050][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = intersect())
[     4.054][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4([4]), l1 = mutate(), l2 = filter([2]))
[     4.055][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([3]), l2 = semi_join())
[     4.057][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([3]), l2 = cross_join())
[     4.058][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([3]), l2 = mutate())
[     4.059][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([3]), l2 = inner_join())
[     4.065][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = filter([2]), l2 = summarise([3]))
[     4.069][cube-solver-4][DEBUG] Solving cube (l0 = filter([2]), l1 = filter([2]), l2 = mutate())
[     4.070][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = anti_join(), l2 = mutate())
[     4.070][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = anti_join(), l2 = summarise([3]))
[     4.076][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = left_join(), l2 = summarise([4]))
[     4.078][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = left_join(), l2 = mutate())
[     4.080][cube-solver-4][DEBUG] Solving cube (l0 = filter([3]), l1 = union(), l2 = summarise([4]))
[     4.083][cube-solver-9][DEBUG] Solving cube (l0 = filter([3]), l1 = union(), l2 = mutate())
[     4.086][cube-solver-7][DEBUG] Solving cube (l0 = filter([3]), l1 = intersect(), l2 = summarise([4]))
[     4.087][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = intersect(), l2 = mutate())
[     4.093][cube-solver-9][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = summarise([5]))
[     4.093][cube-solver-4][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = mutate())
[     4.096][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = mutate())
[     4.096][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = summarise([5]))
[     4.101][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join3())
[     4.103][cube-solver-4][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join())
[     4.107][cube-solver-9][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = natural_join4([7]))
[     4.107][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = filter([6]))
[     4.108][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = summarise([5]))
[     4.110][cube-solver-4][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = anti_join())
[     4.115][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = left_join())
[     4.117][cube-solver-4][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = union())
[     4.122][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = intersect())
[     4.122][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = mutate(), l2 = semi_join())
[     4.124][cube-solver-4][DEBUG] Solving cube (l0 = filter([7]), l1 = mutate(), l2 = cross_join())
[     4.128][cube-solver-7][DEBUG] Solving cube (l0 = filter([8]), l1 = mutate(), l2 = mutate())
[     4.131][cube-solver-4][DEBUG] Solving cube (l0 = filter([8]), l1 = mutate(), l2 = inner_join())
[     4.133][cube-solver-5][DEBUG] Solving cube (l0 = filter([8]), l1 = inner_join(), l2 = summarise([6]))
[     4.134][cube-solver-7][DEBUG] Solving cube (l0 = filter([8]), l1 = inner_join(), l2 = mutate())
[     4.137][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([9]))
[     4.140][cube-solver-4][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([6]), l2 = filter([9]))
[     4.143][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([10]), l2 = summarise([6]))
[     4.148][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([10]), l2 = mutate())
[     4.151][cube-solver-4][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([11]))
[     4.156][cube-solver-11][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([7]), l2 = filter([11]))
[     4.160][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = filter([13]), l2 = summarise([7]))
[     4.161][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = filter([13]), l2 = mutate())
[     4.161][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([13]))
[     4.171][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = summarise([8]), l2 = filter([13]))
[     4.174][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = filter([13]), l2 = summarise([8]))
[     4.175][cube-solver-11][DEBUG] Solving cube (l0 = union(), l1 = filter([13]), l2 = mutate())
[     4.176][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([13]))
[     4.183][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([8]), l2 = filter([14]))
[     4.186][cube-solver-4][DEBUG] Solving cube (l0 = intersect(), l1 = filter([14]), l2 = summarise([8]))
[     4.189][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter([14]), l2 = mutate([1]))
[     4.190][cube-solver-11][DEBUG] Solving cube (l0 = intersect(), l1 = mutate([1]), l2 = filter([14]))
[     4.195][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([9]), l2 = filter([16]))
[     4.199][cube-solver-4][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([16]), l2 = summarise([9]))
[     4.204][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([16]), l2 = mutate([2]))
[     4.205][cube-solver-11][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate([2]), l2 = filter([16]))
[     4.208][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([10]), l2 = filter([16]))
[     4.213][cube-solver-4][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([17]), l2 = summarise([10]))
[     4.217][cube-solver-14][DEBUG] Found solution with cube (l0 = natural_join4([4]), l1 = filter(), l2 = mutate())
[     4.220][MainProcess][INFO] Statistics:
[     4.220][MainProcess][INFO] 	Generated cubes: 113
[     4.220][MainProcess][INFO] 	Attempted programs: 1
[     4.220][MainProcess][INFO] 		Rejected: 0
[     4.220][MainProcess][INFO] 		Failed: 0
[     4.220][MainProcess][INFO] 	Blacklist clauses: 40
[     4.220][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     4.221][MainProcess][DEBUG] 	0: Counter({'natural_join4': 20})
[     4.221][MainProcess][DEBUG] 	1: Counter({'filter': 12, 'mutate': 8})
[     4.221][MainProcess][DEBUG] 	2: Counter({'mutate': 12, 'filter': 8})
[     4.221][MainProcess][INFO] Solution found: mutate(filter(natural_join4(@param0, @param2, @param1, @param3), F_name == 'faculty1' & major != 'History'), age = max(age))
[     4.221][cube-solver-11][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate([2]), l2 = filter([18]))
[     4.221][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([18]), l2 = mutate([2]))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/2-1.txt", col_types = cols(C_name = col_character(),F_key = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/2-2.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/2-3.txt", col_types = cols(F_key = col_character(),F_name = col_character()))
input3 <- copy_to(con, input3)
input4 <- read_csv("tests-examples/55-tests/tables/2-4.txt", col_types = cols(S_key = col_character(),major = col_character(),age = col_integer()))
input4 <- copy_to(con, input4)
expected_output <- read_csv("tests-examples/55-tests/tables/2.out", col_types = cols(maxage = col_integer()))

df5 <- inner_join(input1, input3) %>% inner_join(input2) %>% inner_join(input4)
df6 <- df5 %>% filter(F_name == 'faculty1' & major != 'History')
df7 <- df6 %>% mutate(age = max(age))
out <- df7 %>% select(maxage = age) %>% distinct() %>% arrange(maxage)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT MAX(`age`) OVER () AS `maxage`
FROM
  (SELECT `LHS`.`C_name` AS `C_name`,
          `LHS`.`F_key` AS `F_key`,
          `LHS`.`F_name` AS `F_name`,
          `LHS`.`S_key` AS `S_key`,
          `RHS`.`major` AS `major`,
          `RHS`.`age` AS `age`
   FROM
     (SELECT `LHS`.`C_name` AS `C_name`,
             `LHS`.`F_key` AS `F_key`,
             `LHS`.`F_name` AS `F_name`,
             `RHS`.`S_key` AS `S_key`
      FROM
        (SELECT `LHS`.`C_name` AS `C_name`,
                `LHS`.`F_key` AS `F_key`,
                `RHS`.`F_name` AS `F_name`
         FROM `input1` AS `LHS`
         INNER JOIN `input3` AS `RHS` ON (`LHS`.`F_key` = `RHS`.`F_key`)) AS `LHS`
      INNER JOIN `input2` AS `RHS` ON (`LHS`.`C_name` = `RHS`.`C_name`)) AS `LHS`
   INNER JOIN `input4` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
WHERE (`F_name` = 'faculty1'
       AND `major` != 'History')
ORDER BY maxage
