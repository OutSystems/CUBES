[     1.965][MainProcess][INFO] Parsing specification...
[     1.978][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.978][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.978][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.979][MainProcess][DEBUG] Reading input files...
[     1.997][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/2-1.txt: ['string', 'string']
[     2.004][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/2-2.txt: ['string', 'string']
[     2.009][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/2-3.txt: ['string', 'string']
[     2.016][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/2-4.txt: ['string', 'string', 'int64']
[     2.020][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/2.out: ['int64']
[     2.056][MainProcess][DEBUG] Generating DSL...
[     2.334][MainProcess][INFO] Creating 16 processes
[     2.406][MainProcess][DEBUG] Increasing generator loc to 3
[     2.712][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     2.725][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     2.735][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     2.738][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     2.743][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     2.746][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     2.749][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     2.755][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     2.755][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     2.758][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     2.759][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     2.763][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     2.766][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.768][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.774][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.831][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[    19.100][cube-solver-3][WARNING] There is no solution for current loc (2).
[    19.101][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[    19.137][cube-solver-1][WARNING] There is no solution for current loc (2).
[    19.137][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[    19.150][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[    19.163][cube-solver-2][WARNING] There is no solution for current loc (2).
[    19.164][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[    19.167][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[    19.210][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[    19.600][cube-solver-0][WARNING] There is no solution for current loc (2).
[    19.601][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[    19.629][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[    25.825][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[    25.860][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[    25.888][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[    25.900][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[    25.933][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[    25.962][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[    25.974][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[    25.997][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[    26.040][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[    26.045][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4([2]), l1 = filter(), l2 = mutate())
[    26.057][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[    26.060][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([1]), l2 = filter())
[    26.072][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([2]), l2 = filter())
[    26.076][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[    26.115][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = filter())
[    26.166][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = anti_join())
[    26.178][cube-solver-5][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter(), l2 = left_join())
[    26.182][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[    26.203][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4([5]), l1 = mutate(), l2 = filter())
[    26.234][cube-solver-11][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter(), l2 = union())
[    26.247][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter(), l2 = semi_join())
[    26.253][cube-solver-10][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter(), l2 = cross_join())
[    26.257][cube-solver-6][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter(), l2 = mutate())
[    26.274][cube-solver-4][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter(), l2 = intersect())
[    26.301][cube-solver-8][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter(), l2 = inner_join())
[    26.305][cube-solver-7][DEBUG] Solving cube (l0 = summarise([5]), l1 = anti_join(), l2 = filter())
[    26.308][cube-solver-6][DEBUG] Solving cube (l0 = summarise([6]), l1 = union(), l2 = filter())
[    26.316][cube-solver-5][DEBUG] Solving cube (l0 = summarise([6]), l1 = left_join(), l2 = filter())
[    26.341][cube-solver-11][DEBUG] Solving cube (l0 = summarise([6]), l1 = intersect(), l2 = filter())
[    26.371][cube-solver-10][DEBUG] Solving cube (l0 = summarise([7]), l1 = semi_join(), l2 = filter())
[    26.376][cube-solver-5][DEBUG] Solving cube (l0 = summarise([7]), l1 = cross_join(), l2 = filter())
[    26.379][cube-solver-6][DEBUG] Solving cube (l0 = summarise([7]), l1 = mutate(), l2 = filter())
[    26.389][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([7]))
[    26.404][cube-solver-4][DEBUG] Solving cube (l0 = summarise([7]), l1 = inner_join(), l2 = filter())
[    26.409][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[    26.438][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([9]))
[    26.439][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[    26.449][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4([6]), l2 = summarise([9]))
[    26.454][cube-solver-8][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4([6]), l2 = mutate())
[    26.460][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([10]), l2 = natural_join())
[    26.473][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = summarise([10]), l2 = natural_join3())
[    26.501][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([11]), l2 = natural_join4([7]))
[    26.513][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([12]), l2 = summarise([12]))
[    26.526][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([12]), l2 = filter())
[    26.527][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([12]), l2 = anti_join())
[    26.551][cube-solver-11][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([13]), l2 = left_join())
[    26.568][cube-solver-10][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([14]), l2 = intersect())
[    26.581][cube-solver-7][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([14]), l2 = semi_join())
[    26.589][cube-solver-4][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([14]), l2 = union())
[    26.596][cube-solver-6][DEBUG] Solving cube (l0 = filter([6]), l1 = summarise([15]), l2 = cross_join())
[    26.612][cube-solver-11][DEBUG] Solving cube (l0 = filter([6]), l1 = summarise([15]), l2 = mutate())
[    26.630][cube-solver-10][DEBUG] Solving cube (l0 = filter([9]), l1 = summarise([16]), l2 = inner_join())
[    26.641][cube-solver-7][DEBUG] Solving cube (l0 = filter([9]), l1 = filter([9]), l2 = summarise([17]))
[    26.671][cube-solver-11][DEBUG] Solving cube (l0 = filter([11]), l1 = anti_join(), l2 = summarise([18]))
[    26.693][cube-solver-4][DEBUG] Solving cube (l0 = filter([11]), l1 = filter([11]), l2 = mutate())
[    26.702][cube-solver-10][DEBUG] Solving cube (l0 = filter([14]), l1 = anti_join(), l2 = mutate())
[    26.707][cube-solver-7][DEBUG] Solving cube (l0 = filter([14]), l1 = left_join(), l2 = summarise([19]))
[    26.724][cube-solver-6][DEBUG] Solving cube (l0 = filter([15]), l1 = left_join(), l2 = mutate())
[    26.745][cube-solver-11][DEBUG] Solving cube (l0 = filter([15]), l1 = union(), l2 = summarise([20]))
[    26.764][cube-solver-4][DEBUG] Solving cube (l0 = filter([17]), l1 = union(), l2 = mutate())
[    26.766][cube-solver-10][DEBUG] Solving cube (l0 = filter([17]), l1 = intersect(), l2 = summarise([20]))
[    26.770][cube-solver-7][DEBUG] Solving cube (l0 = filter([18]), l1 = intersect(), l2 = mutate())
[    26.791][cube-solver-6][DEBUG] Solving cube (l0 = filter([18]), l1 = semi_join(), l2 = summarise([21]))
[    26.809][cube-solver-11][DEBUG] Solving cube (l0 = filter([19]), l1 = semi_join(), l2 = mutate())
[    26.824][cube-solver-4][DEBUG] Solving cube (l0 = filter([19]), l1 = cross_join(), l2 = summarise([22]))
[    26.831][cube-solver-7][DEBUG] Solving cube (l0 = filter([19]), l1 = cross_join(), l2 = mutate())
[    26.834][cube-solver-10][DEBUG] Solving cube (l0 = filter([19]), l1 = mutate(), l2 = natural_join())
[    26.860][cube-solver-6][DEBUG] Solving cube (l0 = filter([19]), l1 = mutate(), l2 = natural_join3())
[    26.868][cube-solver-11][DEBUG] Solving cube (l0 = filter([19]), l1 = mutate(), l2 = natural_join4([12]))
[    26.895][cube-solver-10][DEBUG] Solving cube (l0 = filter([21]), l1 = mutate(), l2 = filter([21]))
[    26.895][cube-solver-7][DEBUG] Solving cube (l0 = filter([20]), l1 = mutate(), l2 = summarise([23]))
[    26.900][cube-solver-4][DEBUG] Solving cube (l0 = filter([21]), l1 = mutate(), l2 = anti_join())
[    26.959][cube-solver-10][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = left_join())
[    26.963][cube-solver-7][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = union())
[    26.968][cube-solver-6][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = intersect())
[    26.972][cube-solver-4][DEBUG] Solving cube (l0 = filter([24]), l1 = mutate(), l2 = semi_join())
[    27.017][cube-solver-10][DEBUG] Solving cube (l0 = filter([26]), l1 = mutate(), l2 = cross_join())
[    27.029][cube-solver-6][DEBUG] Solving cube (l0 = filter([27]), l1 = mutate(), l2 = mutate())
[    27.032][cube-solver-7][DEBUG] Solving cube (l0 = filter([27]), l1 = mutate(), l2 = inner_join())
[    27.036][cube-solver-4][DEBUG] Solving cube (l0 = filter([27]), l1 = inner_join(), l2 = summarise([29]))
[    27.088][cube-solver-6][DEBUG] Solving cube (l0 = filter([28]), l1 = inner_join(), l2 = mutate())
[    27.097][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([30]), l2 = filter([28]))
[    27.109][cube-solver-4][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([28]), l2 = summarise([31]))
[    27.128][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([28]), l2 = mutate())
[    27.146][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([29]))
[    27.185][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([32]), l2 = filter([29]))
[    27.192][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = filter([29]), l2 = summarise([32]))
[    27.200][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = filter([30]), l2 = mutate())
[    27.213][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([30]))
[    27.259][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter([30]), l2 = summarise([34]))
[    27.260][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = summarise([34]), l2 = filter([30]))
[    27.269][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = filter([30]), l2 = mutate([1]))
[    27.276][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = mutate([1]), l2 = filter([30]))
[    27.336][cube-solver-10][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([36]), l2 = filter([31]))
[    27.339][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter([31]), l2 = summarise([36]))
[    27.343][cube-solver-4][DEBUG] Solving cube (l0 = intersect(), l1 = filter([31]), l2 = mutate([1]))
[    27.350][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = mutate([1]), l2 = filter([31]))
[    27.406][cube-solver-4][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([37]), l2 = filter([31]))
[    27.411][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([31]), l2 = summarise([38]))
[    27.413][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([31]), l2 = mutate([2]))
[    27.416][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate([2]), l2 = filter([31]))
[    27.480][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([39]), l2 = filter([31]))
[    27.486][cube-solver-4][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([31]), l2 = mutate([3]))
[    27.486][cube-solver-6][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([31]), l2 = summarise([39]))
[    27.491][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate([3]), l2 = filter([31]))
[    27.552][cube-solver-4][DEBUG] Solving cube (l0 = mutate([3]), l1 = natural_join(), l2 = filter([31]))
[    27.556][cube-solver-10][DEBUG] Solving cube (l0 = mutate([3]), l1 = natural_join3(), l2 = filter([31]))
[    27.558][cube-solver-7][DEBUG] Solving cube (l0 = mutate([3]), l1 = natural_join4([14]), l2 = filter([31]))
[    27.567][cube-solver-6][DEBUG] Solving cube (l0 = mutate([3]), l1 = summarise([39]), l2 = filter([31]))
[    27.615][cube-solver-4][DEBUG] Solving cube (l0 = mutate([3]), l1 = filter([31]), l2 = natural_join())
[    27.643][cube-solver-6][DEBUG] Solving cube (l0 = mutate([3]), l1 = filter([31]), l2 = natural_join3())
[    27.678][cube-solver-4][DEBUG] Solving cube (l0 = mutate([3]), l1 = filter([31]), l2 = natural_join4([15]))
[    27.686][cube-solver-10][DEBUG] Solving cube (l0 = mutate([3]), l1 = filter([31]), l2 = summarise([39]))
[    27.737][cube-solver-6][DEBUG] Solving cube (l0 = mutate([3]), l1 = filter([31]), l2 = filter([31]))
[    27.757][cube-solver-10][DEBUG] Solving cube (l0 = mutate([3]), l1 = filter([31]), l2 = anti_join())
[    27.805][cube-solver-6][DEBUG] Solving cube (l0 = mutate([4]), l1 = filter([32]), l2 = left_join())
[    27.839][cube-solver-10][DEBUG] Solving cube (l0 = mutate([6]), l1 = filter([32]), l2 = union())
[    27.864][cube-solver-6][DEBUG] Solving cube (l0 = mutate([6]), l1 = filter([32]), l2 = intersect())
[    27.897][cube-solver-10][DEBUG] Solving cube (l0 = mutate([6]), l1 = filter([32]), l2 = semi_join())
[    27.924][cube-solver-6][DEBUG] Solving cube (l0 = mutate([6]), l1 = filter([32]), l2 = cross_join())
[    27.958][cube-solver-10][DEBUG] Solving cube (l0 = mutate([6]), l1 = filter([32]), l2 = mutate([6]))
[    27.985][cube-solver-6][DEBUG] Solving cube (l0 = mutate([6]), l1 = filter([32]), l2 = inner_join())
[    28.017][cube-solver-10][DEBUG] Solving cube (l0 = mutate([6]), l1 = anti_join(), l2 = filter([32]))
[    28.048][cube-solver-6][DEBUG] Solving cube (l0 = mutate([6]), l1 = left_join(), l2 = filter([32]))
[    28.101][cube-solver-10][DEBUG] Solving cube (l0 = mutate([6]), l1 = union(), l2 = filter([32]))
[    28.109][cube-solver-6][DEBUG] Solving cube (l0 = mutate([6]), l1 = intersect(), l2 = filter([32]))
[    28.115][cube-solver-14][DEBUG] Found solution with cube (l0 = natural_join4([2]), l1 = filter(), l2 = mutate())
[    28.116][MainProcess][INFO] Statistics:
[    28.117][MainProcess][INFO] 	Generated cubes: 134
[    28.117][MainProcess][INFO] 	Attempted programs: 26
[    28.117][MainProcess][INFO] 		Rejected: 10
[    28.117][MainProcess][INFO] 		Failed: 15
[    28.117][MainProcess][INFO] 	Blacklist clauses: 109
[    28.117][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    28.118][MainProcess][DEBUG] 	0: Counter({'natural_join4': 382, 'mutate': 22})
[    28.118][MainProcess][DEBUG] 	1: Counter({'filter': 239, 'mutate': 143, 'natural_join4': 22})
[    28.118][MainProcess][DEBUG] 	2: Counter({'filter': 165, 'mutate': 134, 'summarise': 105})
[    28.118][MainProcess][INFO] Solution found: mutate(filter(natural_join4(@param1, @param3, @param0, @param2), F_name == 'faculty1' & major != 'History'), age = max(age))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/2-1.txt", col_types = cols(C_name = col_character(),F_key = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/2-2.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/2-3.txt", col_types = cols(F_key = col_character(),F_name = col_character()))
input3 <- copy_to(con, input3)
input4 <- read_csv("tests-examples/55-tests/tables/2-4.txt", col_types = cols(S_key = col_character(),major = col_character(),age = col_integer()))
input4 <- copy_to(con, input4)
expected_output <- read_csv("tests-examples/55-tests/tables/2.out", col_types = cols(maxage = col_integer()))

df5 <- inner_join(input2, input4) %>% inner_join(input1) %>% inner_join(input3)
df6 <- df5 %>% filter(F_name == 'faculty1' & major != 'History')
df7 <- df6 %>% mutate(age = max(age))
out <- df7 %>% select(maxage = age) %>% distinct() %>% arrange(maxage)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT MAX(`age`) OVER () AS `maxage`
FROM
  (SELECT `LHS`.`S_key` AS `S_key`,
          `LHS`.`C_name` AS `C_name`,
          `LHS`.`major` AS `major`,
          `LHS`.`age` AS `age`,
          `LHS`.`F_key` AS `F_key`,
          `RHS`.`F_name` AS `F_name`
   FROM
     (SELECT `LHS`.`S_key` AS `S_key`,
             `LHS`.`C_name` AS `C_name`,
             `LHS`.`major` AS `major`,
             `LHS`.`age` AS `age`,
             `RHS`.`F_key` AS `F_key`
      FROM
        (SELECT `LHS`.`S_key` AS `S_key`,
                `LHS`.`C_name` AS `C_name`,
                `RHS`.`major` AS `major`,
                `RHS`.`age` AS `age`
         FROM `input2` AS `LHS`
         INNER JOIN `input4` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`)) AS `LHS`
      INNER JOIN `input1` AS `RHS` ON (`LHS`.`C_name` = `RHS`.`C_name`)) AS `LHS`
   INNER JOIN `input3` AS `RHS` ON (`LHS`.`F_key` = `RHS`.`F_key`))
WHERE (`F_name` = 'faculty1'
       AND `major` != 'History')
ORDER BY maxage
