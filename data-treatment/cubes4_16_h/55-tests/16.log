[     1.626][MainProcess][INFO] Parsing specification...
[     1.631][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.631][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.631][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.632][MainProcess][DEBUG] Reading input files...
[     1.637][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-1.txt: ['string', 'string']
[     1.641][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-2.txt: ['string', 'string']
[     1.644][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-3.txt: ['string', 'string']
[     1.649][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16.out: ['string']
[     1.688][MainProcess][DEBUG] Generating DSL...
[     1.719][MainProcess][INFO] Creating 16 processes
[     1.796][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.796][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.797][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.797][MainProcess][DEBUG] Increasing generator loc to 3
[     1.797][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.798][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.798][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.803][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.811][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.815][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.819][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.823][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.836][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.846][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     1.847][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.847][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.861][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.368][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.369][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.371][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.372][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.373][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.375][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.602][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.603][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.604][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.763][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.764][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.766][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.890][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.897][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.901][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.906][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.910][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.922][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     2.922][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.928][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.929][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.929][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.933][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.937][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.941][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.945][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     2.948][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     2.952][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     2.955][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     2.961][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = mutate())
[     2.962][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = mutate(), l2 = filter([1]))
[     2.965][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = inner_join())
[     2.970][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter([1]))
[     2.976][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter([1]))
[     2.980][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter([1]))
[     2.985][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter([1]))
[     2.990][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = semi_join(), l2 = filter([1]))
[     2.994][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([1]))
[     2.996][cube-solver-13][DEBUG] Solving cube (l0 = summarise([2]), l1 = cross_join(), l2 = filter([1]))
[     3.002][cube-solver-15][DEBUG] Solving cube (l0 = summarise([2]), l1 = mutate(), l2 = filter([1]))
[     3.004][cube-solver-13][DEBUG] Solving cube (l0 = summarise([2]), l1 = inner_join(), l2 = filter([1]))
[     3.005][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([1]))
[     3.009][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = summarise([3]))
[     3.010][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = mutate())
[     3.012][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3([1]), l2 = summarise([3]))
[     3.016][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3([1]), l2 = mutate())
[     3.017][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = summarise([3]))
[     3.028][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([4]), l2 = filter([1]))
[     3.039][cube-solver-4][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join4(), l2 = mutate())
[     3.214][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([10]), l2 = filter([4]))
[     3.230][cube-solver-12][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([10]), l2 = natural_join())
[     3.244][cube-solver-12][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([10]), l2 = natural_join3([1]))
[     3.316][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = mutate())
[     3.322][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = natural_join4())
[     3.331][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = summarise([11]))
[     3.344][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = filter([4]))
[     3.353][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = anti_join())
[     3.362][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = left_join())
[     3.371][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = union())
[     3.379][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = intersect())
[     3.388][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = semi_join())
[     3.397][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = cross_join())
[     3.406][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = mutate())
[     3.415][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([11]), l2 = inner_join())
[     3.424][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = summarise([11]))
[     3.434][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = mutate())
[     3.439][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = summarise([12]))
[     3.449][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = mutate())
[     3.449][cube-solver-2][DEBUG] Solving cube (l0 = summarise([13]), l1 = natural_join3([2]), l2 = filter([4]))
[     3.453][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = summarise([13]))
[     3.462][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = mutate())
[     3.467][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = summarise([13]))
[     3.476][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = mutate())
[     3.480][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = summarise([13]))
[     3.490][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = mutate())
[     3.494][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = summarise([14]))
[     3.504][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = mutate())
[     3.509][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = summarise([15]))
[     3.519][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = mutate())
[     3.523][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join())
[     3.527][cube-solver-14][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join3([2]))
[     3.734][cube-solver-3][DEBUG] Solving cube (l0 = summarise([18]), l1 = natural_join(), l2 = filter([4]))
[     3.757][cube-solver-3][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join4())
[     3.908][cube-solver-0][DEBUG] Solving cube (l0 = summarise([19]), l1 = natural_join4(), l2 = filter([4]))
[     3.911][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = summarise([19]))
[     3.921][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = filter([4]))
[     3.926][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = anti_join())
[     3.929][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = left_join())
[     3.931][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = union())
[     3.932][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = intersect())
[     3.936][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = semi_join())
[     3.939][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = mutate())
[     3.939][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = cross_join())
[     3.943][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = inner_join())
[     3.947][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = mutate())
[     3.948][cube-solver-0][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = summarise([19]))
[     3.951][cube-solver-11][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([19]), l2 = filter([4]))
[     3.969][cube-solver-0][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = summarise([19]))
[     3.971][cube-solver-11][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = mutate())
[     3.977][cube-solver-11][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([4]))
[     3.984][cube-solver-11][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([19]), l2 = filter([4]))
[     3.989][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = summarise([19]))
[     4.004][cube-solver-11][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = mutate())
[     4.010][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([4]))
[     4.010][cube-solver-1][DEBUG] Solving cube (l0 = summarise([19]), l1 = summarise([19]), l2 = filter([4]))
[     4.011][cube-solver-11][DEBUG] Solving cube (l0 = union(), l1 = summarise([19]), l2 = filter([4]))
[     4.017][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = summarise([19]))
[     4.030][cube-solver-11][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = mutate())
[     4.037][cube-solver-11][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([4]))
[     4.037][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([19]), l2 = filter([4]))
[     4.043][cube-solver-11][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = summarise([19]))
[     4.048][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = mutate())
[     4.055][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([4]))
[     4.058][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([19]), l2 = filter([4]))
[     4.063][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = summarise([19]))
[     4.063][cube-solver-11][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = mutate())
[     4.067][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([4]))
[     4.070][cube-solver-11][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([19]), l2 = filter([4]))
[     4.070][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = summarise([19]))
[     4.078][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = mutate())
[     4.081][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([4]))
[     4.084][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([4]))
[     4.085][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([2]), l2 = filter([4]))
[     4.088][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([4]))
[     4.090][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([19]), l2 = filter([4]))
[     4.092][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join())
[     4.100][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join3([2]))
[     4.110][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join4())
[     4.392][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = summarise([21]))
[     4.414][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = filter([4]))
[     4.423][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = anti_join())
[     4.430][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = left_join())
[     4.437][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = union())
[     4.443][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = intersect())
[     4.450][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = semi_join())
[     4.457][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = cross_join())
[     4.463][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = mutate())
[     4.470][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = inner_join())
[     4.477][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([4]))
[     4.484][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([4]))
[     4.490][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([4]))
[     4.497][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([4]))
[     4.504][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([4]))
[     4.511][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([4]))
[     4.517][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([4]))
[     4.524][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([4]))
[     4.531][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([21]), l2 = filter([4]))
[     4.552][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = summarise([21]))
[     4.573][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = mutate())
[     4.580][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([4]))
[     4.585][MainProcess][DEBUG] Increasing generator loc to 4
[     4.587][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     5.673][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     5.753][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[     6.178][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([4]))
[     6.388][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     6.536][cube-solver-8][DEBUG] Initialising process for 4 lines of code.
[     6.739][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     7.328][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([4]))
[     7.389][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([4]))
[     7.419][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join4())
[     7.527][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[     7.959][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([4]))
[     7.987][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = filter([4]))
[     8.004][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[     8.282][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join3([2]))
[     8.306][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join([2]))
[     8.964][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     9.096][cube-solver-9][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = summarise([21]))
[     9.125][cube-solver-9][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = union())
[     9.397][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[    10.166][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[    10.546][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = left_join())
[    10.974][cube-solver-12][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = intersect())
[    11.811][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = semi_join())
[    12.698][cube-solver-10][DEBUG] Initialising process for 4 lines of code.
[    14.398][cube-solver-10][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = cross_join())
[    14.469][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = mutate())
[    14.493][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = inner_join())
[    17.283][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = anti_join(), l3 = filter([4]))
[    17.715][cube-solver-6][DEBUG] Initialising process for 4 lines of code.
[    19.298][cube-solver-6][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = left_join(), l3 = filter([4]))
[    19.303][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = union(), l3 = filter([4]))
[    19.431][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = intersect(), l3 = filter([4]))
[    21.108][cube-solver-9][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = semi_join(), l3 = filter([4]))
[    22.393][cube-solver-0][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[    22.394][MainProcess][INFO] Statistics:
[    22.395][MainProcess][INFO] 	Generated cubes: 164
[    22.395][MainProcess][INFO] 	Attempted programs: 4927
[    22.395][MainProcess][INFO] 		Rejected: 863
[    22.395][MainProcess][INFO] 		Failed: 4063
[    22.395][MainProcess][INFO] 	Blacklist clauses: 29
[    22.395][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    22.400][MainProcess][DEBUG] 	0: Counter({'filter': 4658, 'mutate': 3250, 'summarise': 1018, 'natural_join3': 752})
[    22.403][MainProcess][DEBUG] 	1: Counter({'filter': 3260, 'natural_join4': 2434, 'mutate': 2400, 'natural_join3': 1040, 'summarise': 544})
[    22.406][MainProcess][DEBUG] 	2: Counter({'natural_join4': 4300, 'summarise': 2026, 'filter': 1760, 'natural_join3': 1152, 'mutate': 440})
[    22.407][MainProcess][DEBUG] Printing statistics for good programs of size 4
[    22.408][MainProcess][DEBUG] 	0: Counter({'natural_join': 5976})
[    22.410][MainProcess][DEBUG] 	1: Counter({'summarise': 5976})
[    22.412][MainProcess][DEBUG] 	2: Counter({'filter': 3959, 'natural_join3': 901, 'natural_join': 464, 'union': 321, 'left_join': 239, 'anti_join': 58, 'semi_join': 34})
[    22.413][MainProcess][DEBUG] 	3: Counter({'filter': 2017, 'natural_join3': 1020, 'union': 976, 'natural_join4': 520, 'natural_join': 464, 'left_join': 464, 'semi_join': 288, 'inner_join': 168, 'anti_join': 59})
[    22.414][MainProcess][INFO] Solution found: anti_join(@param1, filter(summarise(natural_join(@param0, @param2), n = n(), P_id, S_name), S_name != 'AWS'), 'P_id')

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/16-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/16-2.txt", col_types = cols(P_id = col_character(),P_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/16-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/16.out", col_types = cols(P_name = col_character()))

df4 <- inner_join(input1, input3)
df5 <- df4 %>% group_by(P_id, S_name) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(S_name != 'AWS')
df7 <- anti_join(input2, df6, by=c('P_id'))
out <- df7 %>% select(P_name) %>% arrange(P_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `P_name`
FROM
  (SELECT *
   FROM `input2` AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM
             (SELECT `P_id`,
                     `S_name`,
                     COUNT() AS `n`
              FROM
                (SELECT `LHS`.`S_key` AS `S_key`,
                        `LHS`.`P_id` AS `P_id`,
                        `RHS`.`S_name` AS `S_name`
                 FROM `input1` AS `LHS`
                 INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
              GROUP BY `P_id`,
                       `S_name`)
           WHERE (`S_name` != 'AWS')) AS RHS
        WHERE (LHS.P_id = RHS.P_id) ))
ORDER BY P_name
