[     1.669][MainProcess][INFO] Parsing specification...
[     1.673][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.673][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.673][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.674][MainProcess][DEBUG] Reading input files...
[     1.680][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-1.txt: ['string', 'string']
[     1.683][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-2.txt: ['string', 'string']
[     1.686][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16-3.txt: ['string', 'string']
[     1.690][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/16.out: ['string']
[     1.721][MainProcess][DEBUG] Generating DSL...
[     1.742][MainProcess][INFO] Creating 16 processes
[     1.811][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.811][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.811][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.811][MainProcess][DEBUG] Increasing generator loc to 3
[     1.811][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.812][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.812][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.817][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.820][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.826][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.829][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.831][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.847][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.850][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.854][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.857][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.866][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.174][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.175][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.177][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.284][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.284][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.286][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.374][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.375][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.376][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.464][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.465][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.467][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.494][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.511][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.516][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.520][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.542][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = summarise(), l2 = filter([1]))
[     2.552][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([1]), l2 = mutate())
[     2.558][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = natural_join4())
[     2.560][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([1]), l2 = summarise([1]))
[     2.578][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = mutate(), l2 = filter([1]))
[     2.582][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([1]))
[     2.587][cube-solver-15][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter([1]), l2 = summarise([3]))
[     2.590][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([3]), l2 = filter([1]))
[     2.596][cube-solver-15][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter([1]), l2 = filter([1]))
[     2.599][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([1]), l2 = summarise([4]))
[     2.599][cube-solver-4][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([1]), l2 = anti_join())
[     2.603][cube-solver-15][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([1]), l2 = left_join())
[     2.608][cube-solver-4][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([1]), l2 = union())
[     2.608][cube-solver-5][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([1]), l2 = intersect())
[     2.611][cube-solver-15][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([1]), l2 = semi_join())
[     2.615][cube-solver-4][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([1]), l2 = cross_join())
[     2.617][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([1]), l2 = mutate())
[     2.618][cube-solver-15][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([1]), l2 = inner_join())
[     2.625][cube-solver-4][DEBUG] Solving cube (l0 = summarise([5]), l1 = anti_join(), l2 = filter([1]))
[     2.626][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = left_join(), l2 = filter([1]))
[     2.627][cube-solver-15][DEBUG] Solving cube (l0 = summarise([5]), l1 = union(), l2 = filter([1]))
[     2.629][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([1]))
[     2.633][cube-solver-4][DEBUG] Solving cube (l0 = summarise([5]), l1 = intersect(), l2 = filter([1]))
[     2.635][cube-solver-5][DEBUG] Solving cube (l0 = summarise([5]), l1 = semi_join(), l2 = filter([1]))
[     2.635][cube-solver-15][DEBUG] Solving cube (l0 = summarise([5]), l1 = cross_join(), l2 = filter([1]))
[     2.636][cube-solver-7][DEBUG] Solving cube (l0 = summarise([5]), l1 = mutate(), l2 = filter([1]))
[     2.640][cube-solver-4][DEBUG] Solving cube (l0 = summarise([5]), l1 = inner_join(), l2 = filter([1]))
[     2.644][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = summarise([5]))
[     2.644][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = mutate())
[     2.644][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3([2]), l2 = summarise([6]))
[     2.646][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3([2]), l2 = mutate())
[     2.648][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = summarise([6]))
[     2.652][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = mutate())
[     2.818][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = summarise([13]))
[     2.838][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([13]), l2 = natural_join())
[     2.848][cube-solver-13][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([13]), l2 = natural_join3([2]))
[     2.853][cube-solver-2][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = filter([4]))
[     2.872][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([14]), l2 = natural_join4())
[     2.881][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([14]), l2 = summarise([14]))
[     2.896][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([15]), l2 = filter([4]))
[     2.908][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([15]), l2 = anti_join())
[     2.919][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([15]), l2 = left_join())
[     2.930][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([15]), l2 = union())
[     2.941][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([16]), l2 = intersect())
[     2.953][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([16]), l2 = semi_join())
[     2.965][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([16]), l2 = cross_join())
[     2.976][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([16]), l2 = mutate())
[     2.987][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([16]), l2 = inner_join())
[     2.998][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = summarise([16]))
[     3.004][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([16]), l2 = filter([4]))
[     3.009][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = mutate())
[     3.015][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = summarise([16]))
[     3.021][cube-solver-12][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = mutate())
[     3.026][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = summarise([16]))
[     3.026][cube-solver-12][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = mutate())
[     3.031][cube-solver-12][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = summarise([16]))
[     3.036][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = mutate())
[     3.040][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = summarise([16]))
[     3.041][cube-solver-12][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = mutate())
[     3.045][cube-solver-12][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = summarise([16]))
[     3.050][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = mutate())
[     3.055][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = summarise([16]))
[     3.055][cube-solver-12][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = mutate())
[     3.059][cube-solver-12][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join())
[     3.062][cube-solver-12][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join3([2]))
[     3.065][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join4())
[     3.104][cube-solver-3][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join3([2]), l2 = filter([4]))
[     3.104][cube-solver-1][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join4(), l2 = filter([4]))
[     3.117][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = summarise([16]))
[     3.128][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = filter([4]))
[     3.133][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = anti_join())
[     3.138][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = left_join())
[     3.142][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = union())
[     3.146][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = intersect())
[     3.150][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = semi_join())
[     3.154][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = cross_join())
[     3.158][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = mutate())
[     3.162][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = inner_join())
[     3.166][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = summarise([19]))
[     3.178][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = mutate())
[     3.184][cube-solver-1][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([20]), l2 = filter([4]))
[     3.198][cube-solver-1][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = summarise([20]))
[     3.210][cube-solver-1][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = mutate())
[     3.215][cube-solver-1][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([4]))
[     3.220][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([20]), l2 = filter([4]))
[     3.234][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = summarise([20]))
[     3.246][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = mutate())
[     3.251][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([4]))
[     3.256][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = summarise([20]), l2 = filter([4]))
[     3.268][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = summarise([20]))
[     3.280][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = mutate())
[     3.286][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([4]))
[     3.290][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([20]), l2 = filter([4]))
[     3.303][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = summarise([20]))
[     3.315][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = mutate())
[     3.320][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([4]))
[     3.325][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([20]), l2 = filter([4]))
[     3.337][cube-solver-0][DEBUG] Solving cube (l0 = summarise([20]), l1 = summarise([20]), l2 = filter([4]))
[     3.338][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = summarise([20]))
[     3.350][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = mutate())
[     3.358][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([4]))
[     3.359][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([20]), l2 = filter([4]))
[     3.363][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = summarise([20]))
[     3.371][cube-solver-0][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = mutate())
[     3.375][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([4]))
[     3.375][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([4]))
[     3.378][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([2]), l2 = filter([4]))
[     3.379][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([4]))
[     3.415][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([20]), l2 = filter([4]))
[     3.436][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join())
[     3.446][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join3([2]))
[     3.532][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join4())
[     3.568][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = summarise([20]))
[     3.590][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = filter([4]))
[     3.599][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = anti_join())
[     3.607][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = left_join())
[     3.614][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = union())
[     3.620][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = intersect())
[     3.626][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = semi_join())
[     3.633][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = cross_join())
[     3.639][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = mutate())
[     3.645][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = inner_join())
[     3.652][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([4]))
[     3.658][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([4]))
[     3.665][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([4]))
[     3.671][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([4]))
[     3.677][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([4]))
[     3.683][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([4]))
[     3.689][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([4]))
[     3.695][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([4]))
[     3.703][cube-solver-11][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([21]), l2 = filter([4]))
[     3.724][cube-solver-11][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = summarise([21]))
[     3.736][cube-solver-11][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = mutate())
[     3.740][cube-solver-11][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([4]))
[     3.743][MainProcess][DEBUG] Increasing generator loc to 4
[     3.744][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     4.765][cube-solver-11][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([4]))
[     5.202][cube-solver-8][DEBUG] Initialising process for 4 lines of code.
[     5.356][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[     5.515][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     5.880][cube-solver-10][DEBUG] Initialising process for 4 lines of code.
[     6.005][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     6.199][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([4]))
[     6.444][cube-solver-12][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([4]))
[     6.470][cube-solver-12][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join4())
[     6.618][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([4]))
[     6.659][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = summarise([21]))
[     6.670][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[     6.698][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[     7.006][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join3([2]))
[     7.008][cube-solver-10][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join([2]))
[     7.665][cube-solver-9][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = filter([4]))
[     7.693][cube-solver-9][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = left_join())
[     8.142][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     9.040][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     9.041][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     9.475][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = union())
[    10.043][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = intersect())
[    10.063][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = semi_join())
[    11.866][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[    12.961][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = mutate())
[    12.963][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = cross_join())
[    12.988][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = inner_join())
[    13.658][cube-solver-1][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[    13.659][MainProcess][INFO] Statistics:
[    13.660][MainProcess][INFO] 	Generated cubes: 159
[    13.660][MainProcess][INFO] 	Attempted programs: 2033
[    13.660][MainProcess][INFO] 		Rejected: 547
[    13.660][MainProcess][INFO] 		Failed: 1485
[    13.660][MainProcess][INFO] 	Blacklist clauses: 29
[    13.660][MainProcess][DEBUG] Priting statistics for good programs of size 3
[    13.665][MainProcess][DEBUG] 	0: Counter({'filter': 3354, 'mutate': 2330, 'summarise': 764, 'natural_join3': 752})
[    13.669][MainProcess][DEBUG] 	1: Counter({'filter': 2086, 'natural_join4': 1926, 'mutate': 1604, 'natural_join3': 1040, 'summarise': 544})
[    13.674][MainProcess][DEBUG] 	2: Counter({'natural_join4': 2398, 'filter': 1760, 'summarise': 1518, 'natural_join3': 1084, 'mutate': 440})
[    13.674][MainProcess][DEBUG] Priting statistics for good programs of size 4
[    13.676][MainProcess][DEBUG] 	0: Counter({'natural_join': 2947})
[    13.678][MainProcess][DEBUG] 	1: Counter({'summarise': 2947})
[    13.680][MainProcess][DEBUG] 	2: Counter({'filter': 1890, 'natural_join3': 594, 'natural_join': 464})
[    13.682][MainProcess][DEBUG] 	3: Counter({'filter': 1058, 'natural_join3': 486, 'natural_join': 351, 'natural_join4': 310, 'union': 294, 'left_join': 272, 'semi_join': 132, 'anti_join': 37, 'inner_join': 8})
[    13.682][MainProcess][INFO] Solution found: anti_join(@param1, filter(summarise(natural_join(@param0, @param2), n = n(), P_id, S_name), S_name != 'AWS'), )

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/16-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/16-2.txt", col_types = cols(P_id = col_character(),P_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/16-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/16.out", col_types = cols(P_name = col_character()))

df4 <- inner_join(input1, input3)
df5 <- df4 %>% group_by(P_id, S_name) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(S_name != 'AWS')
df7 <- anti_join(input2, df6, by=c())
out <- df7 %>% select(P_name) %>% arrange(P_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `P_name`
FROM
  (SELECT *
   FROM `input2` AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM
             (SELECT `P_id`,
                     `S_name`,
                     COUNT() AS `n`
              FROM
                (SELECT `LHS`.`S_key` AS `S_key`,
                        `LHS`.`P_id` AS `P_id`,
                        `RHS`.`S_name` AS `S_name`
                 FROM `input1` AS `LHS`
                 INNER JOIN `input3` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
              GROUP BY `P_id`,
                       `S_name`)
           WHERE (`S_name` != 'AWS')) AS RHS
        WHERE (LHS.P_id = RHS.P_id) ))
ORDER BY P_name
