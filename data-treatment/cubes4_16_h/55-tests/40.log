[     1.555][MainProcess][INFO] Parsing specification...
[     1.558][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.558][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.559][MainProcess][DEBUG] Reading input files...
[     1.565][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/aircraft.txt: ['int64', 'string', 'int64']
[     1.567][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/certified.txt: ['int64', 'int64']
[     1.572][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/40.out: ['int64', 'string']
[     1.599][MainProcess][DEBUG] Generating DSL...
[     1.629][MainProcess][INFO] Creating 16 processes
[     1.699][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.699][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.699][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.700][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.700][MainProcess][DEBUG] Increasing generator loc to 3
[     1.701][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.704][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.707][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.715][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.719][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.720][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.723][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.729][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.731][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.733][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.763][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.774][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.239][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.239][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.241][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.271][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.271][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.273][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.437][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.438][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.441][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.481][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.482][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.483][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.756][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.761][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.770][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.771][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.774][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.777][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.783][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.788][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter([2]), l2 = summarise())
[     2.788][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([2]), l2 = summarise())
[     2.792][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter([2]), l2 = filter([2]))
[     2.793][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter([2]), l2 = anti_join())
[     2.792][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter([2]))
[     2.795][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter([2]), l2 = left_join())
[     2.796][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([2]))
[     2.799][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([2]), l2 = union())
[     2.802][cube-solver-11][DEBUG] Solving cube (l0 = summarise(), l1 = filter([2]), l2 = intersect())
[     2.814][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([3]), l2 = summarise([2]))
[     2.823][cube-solver-5][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter([4]), l2 = semi_join())
[     2.830][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([4]))
[     2.838][cube-solver-15][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([4]), l2 = cross_join())
[     2.874][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([8]), l2 = filter([6]))
[     2.890][cube-solver-8][DEBUG] Solving cube (l0 = summarise([9]), l1 = filter([6]), l2 = mutate())
[     2.904][cube-solver-8][DEBUG] Solving cube (l0 = summarise([9]), l1 = filter([6]), l2 = inner_join())
[     3.022][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([7]), l2 = mutate())
[     3.031][cube-solver-14][DEBUG] Solving cube (l0 = summarise([10]), l1 = anti_join(), l2 = filter([7]))
[     3.242][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([7]))
[     3.465][cube-solver-1][DEBUG] Solving cube (l0 = summarise([11]), l1 = natural_join3(), l2 = filter([10]))
[     3.497][cube-solver-2][DEBUG] Solving cube (l0 = summarise([11]), l1 = natural_join(), l2 = filter([10]))
[     3.543][cube-solver-3][DEBUG] Solving cube (l0 = summarise([11]), l1 = summarise([11]), l2 = filter([10]))
[     3.570][cube-solver-3][DEBUG] Solving cube (l0 = summarise([11]), l1 = left_join(), l2 = filter([10]))
[     3.727][cube-solver-0][DEBUG] Solving cube (l0 = summarise([11]), l1 = natural_join4(), l2 = filter([10]))
[     3.740][cube-solver-0][DEBUG] Solving cube (l0 = summarise([11]), l1 = union(), l2 = filter([10]))
[     6.445][cube-solver-15][DEBUG] Solving cube (l0 = summarise([11]), l1 = intersect(), l2 = filter([10]))
[     6.449][cube-solver-7][DEBUG] Solving cube (l0 = summarise([11]), l1 = semi_join(), l2 = filter([10]))
[     9.436][cube-solver-7][DEBUG] Solving cube (l0 = summarise([11]), l1 = cross_join(), l2 = filter([10]))
[     9.576][cube-solver-5][DEBUG] Solving cube (l0 = summarise([11]), l1 = mutate(), l2 = filter([10]))
[     9.587][cube-solver-5][DEBUG] Solving cube (l0 = summarise([11]), l1 = inner_join(), l2 = filter([10]))
[    10.615][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = natural_join(), l2 = summarise([11]))
[    10.628][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = natural_join(), l2 = mutate())
[    10.634][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = natural_join3(), l2 = summarise([11]))
[    10.644][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = natural_join3(), l2 = mutate())
[    10.649][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = natural_join4(), l2 = summarise([11]))
[    10.660][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = natural_join4(), l2 = mutate())
[    10.666][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([11]), l2 = natural_join())
[    10.676][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([11]), l2 = natural_join3())
[    10.686][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([11]), l2 = natural_join4())
[    10.695][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([11]), l2 = summarise([11]))
[    10.710][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([11]), l2 = filter([10]))
[    10.723][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([11]), l2 = anti_join())
[    10.732][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([11]), l2 = left_join())
[    10.742][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([11]), l2 = union())
[    10.751][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([11]), l2 = intersect())
[    10.761][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([11]), l2 = semi_join())
[    10.771][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([11]), l2 = cross_join())
[    10.780][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([11]), l2 = mutate())
[    10.789][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = summarise([11]), l2 = inner_join())
[    10.799][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = filter([10]), l2 = summarise([11]))
[    10.811][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = filter([10]), l2 = mutate())
[    10.819][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = anti_join(), l2 = summarise([11]))
[    10.829][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = anti_join(), l2 = mutate())
[    10.834][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = left_join(), l2 = summarise([11]))
[    10.844][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = left_join(), l2 = mutate())
[    10.849][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = union(), l2 = summarise([11]))
[    10.858][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = union(), l2 = mutate())
[    10.864][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = intersect(), l2 = summarise([11]))
[    10.873][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = intersect(), l2 = mutate())
[    10.879][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = semi_join(), l2 = summarise([11]))
[    10.888][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = semi_join(), l2 = mutate())
[    10.893][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = cross_join(), l2 = summarise([11]))
[    10.903][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = cross_join(), l2 = mutate())
[    10.908][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = mutate(), l2 = natural_join())
[    10.913][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = mutate(), l2 = natural_join3())
[    10.917][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = mutate(), l2 = natural_join4())
[    10.922][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = mutate(), l2 = summarise([11]))
[    10.932][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = mutate(), l2 = filter([10]))
[    10.939][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = mutate(), l2 = anti_join())
[    10.944][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = mutate(), l2 = left_join())
[    10.949][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = mutate(), l2 = union())
[    10.954][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = mutate(), l2 = intersect())
[    10.959][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = mutate(), l2 = semi_join())
[    10.964][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = mutate(), l2 = cross_join())
[    10.969][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = mutate(), l2 = mutate())
[    10.973][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = mutate(), l2 = inner_join())
[    10.979][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = inner_join(), l2 = summarise([11]))
[    10.988][cube-solver-7][DEBUG] Solving cube (l0 = filter([10]), l1 = inner_join(), l2 = mutate())
[    10.994][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([11]), l2 = filter([10]))
[    11.102][cube-solver-4][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([10]), l2 = summarise([11]))
[    11.126][cube-solver-4][DEBUG] Solving cube (l0 = anti_join([2]), l1 = filter([10]), l2 = mutate())
[    11.138][cube-solver-4][DEBUG] Solving cube (l0 = anti_join([3]), l1 = mutate(), l2 = filter([10]))
[    13.453][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([11]), l2 = filter([10]))
[    13.731][cube-solver-3][DEBUG] Solving cube (l0 = left_join(), l1 = filter([10]), l2 = summarise([11]))
[    13.746][cube-solver-3][DEBUG] Solving cube (l0 = left_join(), l1 = filter([10]), l2 = mutate())
[    13.752][cube-solver-3][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([10]))
[    14.166][cube-solver-15][DEBUG] Solving cube (l0 = union(), l1 = summarise([11]), l2 = filter([10]))
[    14.839][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = filter([10]), l2 = summarise([11]))
[    14.859][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = filter([10]), l2 = mutate())
[    14.868][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([10]))
[    15.962][cube-solver-13][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([11]), l2 = filter([10]))
[    16.691][cube-solver-6][DEBUG] Solving cube (l0 = intersect([6]), l1 = filter([10]), l2 = summarise([11]))
[    16.718][cube-solver-6][DEBUG] Solving cube (l0 = intersect([6]), l1 = filter([10]), l2 = mutate())
[    16.733][cube-solver-6][DEBUG] Solving cube (l0 = intersect([6]), l1 = mutate(), l2 = filter([10]))
[    16.771][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([11]), l2 = filter([10]))
[    17.139][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([10]), l2 = summarise([11]))
[    17.153][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([10]), l2 = mutate())
[    17.161][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([10]))
[    17.991][cube-solver-4][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([11]), l2 = filter([10]))
[    18.160][cube-solver-1][DEBUG] Found solution with cube (l0 = summarise([11]), l1 = natural_join3(), l2 = filter([10]))
[    18.163][MainProcess][INFO] Statistics:
[    18.164][MainProcess][INFO] 	Generated cubes: 110
[    18.164][MainProcess][INFO] 	Attempted programs: 2312
[    18.164][MainProcess][INFO] 		Rejected: 474
[    18.164][MainProcess][INFO] 		Failed: 1837
[    18.164][MainProcess][INFO] 	Blacklist clauses: 47
[    18.165][MainProcess][DEBUG] Priting statistics for good programs of size 3
[    18.174][MainProcess][DEBUG] 	0: Counter({'summarise': 14157, 'natural_join': 1280, 'left_join': 950, 'union': 839, 'anti_join': 623, 'semi_join': 256})
[    18.179][MainProcess][DEBUG] 	1: Counter({'filter': 6828, 'summarise': 2266, 'natural_join3': 1965, 'union': 1944, 'mutate': 1683, 'left_join': 1240, 'natural_join': 1240, 'anti_join': 428, 'inner_join': 292, 'semi_join': 220})
[    18.184][MainProcess][DEBUG] 	2: Counter({'filter': 11279, 'union': 1652, 'natural_join3': 1348, 'left_join': 1240, 'natural_join': 1240, 'inner_join': 760, 'semi_join': 400, 'anti_join': 188})
[    18.185][MainProcess][INFO] Solution found: filter(natural_join3(@param1, summarise(@param1, n = n(), eid), @param0), n < 3)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/aircraft.txt", col_types = cols(aid = col_integer(),aname = col_character(),crusingrange = col_integer()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/certified.txt", col_types = cols(eid = col_integer(),aid = col_integer()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/55-tests/tables/40.out", col_types = cols(eid = col_integer(),aname = col_character()))

df3 <- input2 %>% group_by(eid) %>% summarise(n = n()) %>% ungroup()
df4 <- inner_join(input2, df3) %>% inner_join(input1)
df5 <- df4 %>% filter(n < 3)
out <- df5 %>% select(eid, aname) %>% arrange(eid)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT eid,
       aname
FROM
  (SELECT LHS.eid AS eid,
          LHS.aid AS aid,
          LHS.n AS n,
          RHS.aname AS aname,
          RHS.crusingrange AS crusingrange
   FROM
     (SELECT LHS.eid AS eid,
             LHS.aid AS aid,
             RHS.n AS n
      FROM input2 AS LHS
      INNER JOIN
        (SELECT eid,
                COUNT() AS n
         FROM input2
         GROUP BY eid) AS RHS ON (LHS.eid = RHS.eid)) AS LHS
   INNER JOIN input1 AS RHS ON (LHS.aid = RHS.aid))
WHERE (n < 3.0)
ORDER BY eid
