[     1.590][MainProcess][INFO] Parsing specification...
[     1.593][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.593][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.594][MainProcess][DEBUG] Reading input files...
[     1.600][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/aircraft.txt: ['int64', 'string', 'int64']
[     1.602][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/certified.txt: ['int64', 'int64']
[     1.607][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/38.out: ['int64', 'int64', 'int64']
[     1.635][MainProcess][DEBUG] Generating DSL...
[     1.732][MainProcess][INFO] Creating 16 processes
[     1.802][MainProcess][DEBUG] Increasing generator loc to 3
[     1.928][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.938][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.938][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.943][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.944][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.951][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.953][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.956][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.959][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.959][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.964][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.964][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.969][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.971][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.973][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.033][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     4.093][cube-solver-1][WARNING] There is no solution for current loc (2).
[     4.094][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = mutate())
[     4.095][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     4.104][cube-solver-0][WARNING] There is no solution for current loc (2).
[     4.105][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = summarise())
[     4.106][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     4.140][cube-solver-2][WARNING] There is no solution for current loc (2).
[     4.141][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = summarise())
[     4.142][cube-solver-3][WARNING] There is no solution for current loc (2).
[     4.143][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = mutate())
[     4.144][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     4.144][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     6.423][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = summarise())
[     6.430][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = summarise())
[     6.432][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = mutate())
[     6.434][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = mutate())
[     6.437][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = mutate())
[     6.437][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = natural_join())
[     6.439][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = summarise())
[     6.439][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = natural_join3())
[     6.439][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = summarise())
[     6.445][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = summarise())
[     6.445][cube-solver-11][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = natural_join4())
[     6.449][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = mutate())
[     6.450][cube-solver-11][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     6.451][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = summarise())
[     6.451][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = summarise())
[     6.452][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = summarise())
[     6.455][cube-solver-11][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = left_join())
[     6.456][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = union())
[     6.456][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = anti_join())
[     6.457][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = intersect())
[     6.463][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = summarise([1]), l2 = semi_join())
[     6.465][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = summarise([1]), l2 = cross_join())
[     6.505][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = mutate())
[     6.517][cube-solver-15][DEBUG] Solving cube (l0 = summarise([15]), l1 = summarise([15]), l2 = mutate())
[     6.547][cube-solver-15][DEBUG] Solving cube (l0 = summarise([23]), l1 = summarise([23]), l2 = inner_join())
[     6.567][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([25]), l2 = mutate())
[     6.619][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = mutate())
[     8.745][cube-solver-3][DEBUG] Solving cube (l0 = summarise([42]), l1 = natural_join3(), l2 = mutate())
[     8.754][cube-solver-1][DEBUG] Solving cube (l0 = summarise([42]), l1 = natural_join(), l2 = summarise([42]))
[     8.755][cube-solver-0][DEBUG] Solving cube (l0 = summarise([42]), l1 = natural_join(), l2 = mutate())
[     8.755][cube-solver-2][DEBUG] Solving cube (l0 = summarise([42]), l1 = natural_join3(), l2 = summarise([42]))
[    11.972][cube-solver-6][DEBUG] Solving cube (l0 = summarise([42]), l1 = filter(), l2 = summarise([42]))
[    12.049][cube-solver-6][DEBUG] Solving cube (l0 = summarise([42]), l1 = filter(), l2 = mutate())
[    12.085][cube-solver-6][DEBUG] Solving cube (l0 = summarise([42]), l1 = anti_join(), l2 = summarise([42]))
[    17.913][cube-solver-7][DEBUG] Solving cube (l0 = summarise([42]), l1 = anti_join(), l2 = mutate())
[    18.619][cube-solver-5][DEBUG] Solving cube (l0 = summarise([42]), l1 = left_join(), l2 = summarise([42]))
[    23.333][cube-solver-1][DEBUG] Solving cube (l0 = summarise([42]), l1 = left_join(), l2 = mutate())
[    25.177][cube-solver-4][DEBUG] Solving cube (l0 = summarise([42]), l1 = union(), l2 = summarise([42]))
[    27.067][cube-solver-12][DEBUG] Solving cube (l0 = summarise([42]), l1 = union(), l2 = mutate())
[    27.073][cube-solver-0][DEBUG] Solving cube (l0 = summarise([42]), l1 = intersect(), l2 = summarise([42]))
[    32.981][cube-solver-5][DEBUG] Solving cube (l0 = summarise([42]), l1 = intersect(), l2 = mutate())
[    32.989][cube-solver-7][DEBUG] Solving cube (l0 = summarise([42]), l1 = semi_join(), l2 = summarise([42]))
[    38.108][cube-solver-5][DEBUG] Solving cube (l0 = summarise([42]), l1 = semi_join(), l2 = mutate())
[    41.903][cube-solver-1][DEBUG] Solving cube (l0 = summarise([42]), l1 = cross_join(), l2 = summarise([42]))
[    42.315][cube-solver-5][DEBUG] Solving cube (l0 = summarise([42]), l1 = cross_join(), l2 = mutate())
[    42.955][cube-solver-7][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate(), l2 = natural_join())
[    43.160][cube-solver-5][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate(), l2 = natural_join3())
[    44.443][cube-solver-8][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate(), l2 = natural_join4())
[    44.490][cube-solver-8][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate(), l2 = summarise([42]))
[    44.557][cube-solver-8][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate(), l2 = filter())
[    44.594][cube-solver-8][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate(), l2 = anti_join())
[    45.385][cube-solver-11][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate(), l2 = left_join())
[    46.391][cube-solver-4][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate(), l2 = union())
[    49.447][cube-solver-1][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate([1]), l2 = intersect())
[    57.015][cube-solver-1][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate([2]), l2 = semi_join())
[    62.162][cube-solver-1][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate([2]), l2 = cross_join())
[    63.430][cube-solver-1][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate([2]), l2 = mutate([2]))
[    63.465][cube-solver-1][DEBUG] Solving cube (l0 = summarise([42]), l1 = mutate([2]), l2 = inner_join())
[    67.520][cube-solver-12][DEBUG] Solving cube (l0 = summarise([42]), l1 = inner_join(), l2 = summarise([42]))
[    68.371][cube-solver-8][DEBUG] Solving cube (l0 = summarise([42]), l1 = inner_join(), l2 = mutate([2]))
[    68.742][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([42]), l2 = summarise([42]))
[    68.788][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([42]), l2 = mutate([2]))
[    68.809][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate([2]), l2 = summarise([42]))
[    68.830][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate([2]), l2 = mutate([2]))
[    68.835][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([42]), l2 = summarise([42]))
[    68.873][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([42]), l2 = mutate([2]))
[    71.701][cube-solver-11][DEBUG] Solving cube (l0 = anti_join([18]), l1 = mutate([2]), l2 = summarise([42]))
[    74.954][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([18]), l1 = mutate([2]), l2 = mutate([2]))
[    75.735][cube-solver-11][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([42]), l2 = summarise([42]))
[    75.778][cube-solver-11][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([42]), l2 = mutate([2]))
[    80.586][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = mutate([2]), l2 = summarise([42]))
[    85.985][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = mutate([2]), l2 = mutate([2]))
[    85.992][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = summarise([42]), l2 = summarise([42]))
[    86.039][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = summarise([42]), l2 = mutate([2]))
[    87.911][cube-solver-11][DEBUG] Solving cube (l0 = union(), l1 = mutate([2]), l2 = summarise([42]))
[    88.082][MainProcess][INFO] Hard problem!
[    88.091][MainProcess][DEBUG] Increasing alternate_generator loc to 4
[    88.105][cube-solver-10][DEBUG] Initialising process for 4 lines of code.
[    92.995][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[    92.998][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[    95.531][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([42]), l2 = natural_join(), l3 = summarise([42]))
[    97.081][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[    97.918][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[    99.795][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[   100.408][cube-solver-11][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([42]), l2 = natural_join3(), l3 = summarise([42]))
[   100.536][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([42]), l2 = natural_join(), l3 = mutate([2]))
[   103.039][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = mutate([2]), l2 = mutate([2]))
[   104.288][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([42]), l2 = summarise([42]))
[   104.355][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([42]), l2 = mutate([2]))
[   104.870][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([42]), l2 = natural_join3(), l3 = mutate([2]))
[   105.444][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([42]), l2 = natural_join4(), l3 = summarise([42]))
[   105.493][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([42]), l2 = summarise([42]), l3 = natural_join())
[   107.565][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([42]), l2 = natural_join4(), l3 = mutate([2]))
[   107.601][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([42]), l2 = summarise([42]), l3 = natural_join3())
[   111.017][cube-solver-6][DEBUG] Solving cube (l0 = intersect([8]), l1 = mutate([2]), l2 = summarise([42]))
[   111.060][cube-solver-6][DEBUG] Solving cube (l0 = intersect([8]), l1 = mutate([2]), l2 = mutate([2]))
[   111.076][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([42]), l2 = summarise([42]))
[   111.140][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([42]), l2 = mutate([2]))
[   114.340][cube-solver-4][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate([2]), l2 = summarise([42]))
[   115.042][cube-solver-10][DEBUG] Found solution with cube (l0 = natural_join(), l1 = summarise([42]), l2 = natural_join(), l3 = summarise([42]))
[   115.045][MainProcess][INFO] Statistics:
[   115.045][MainProcess][INFO] 	Generated cubes: 95
[   115.045][MainProcess][INFO] 	Attempted programs: 32150
[   115.045][MainProcess][INFO] 		Rejected: 3151
[   115.045][MainProcess][INFO] 		Failed: 28998
[   115.045][MainProcess][INFO] 	Blacklist clauses: 70
[   115.046][MainProcess][DEBUG] Priting statistics for good programs of size 3
[   115.112][MainProcess][DEBUG] 	0: Counter({'summarise': 102601, 'natural_join': 3360, 'left_join': 3360, 'union': 3360, 'anti_join': 1680, 'semi_join': 408})
[   115.150][MainProcess][DEBUG] 	1: Counter({'mutate': 35539, 'summarise': 35412, 'natural_join3': 22273, 'union': 7032, 'inner_join': 6378, 'natural_join': 3096, 'left_join': 3096, 'anti_join': 1296, 'semi_join': 648})
[   115.185][MainProcess][DEBUG] 	2: Counter({'mutate': 40509, 'natural_join3': 20388, 'union': 16224, 'summarise': 15480, 'inner_join': 8695, 'left_join': 5712, 'natural_join': 5712, 'anti_join': 1320, 'semi_join': 732})
[   115.185][MainProcess][DEBUG] Priting statistics for good programs of size 4
[   115.188][MainProcess][DEBUG] 	0: Counter({'natural_join': 7426})
[   115.190][MainProcess][DEBUG] 	1: Counter({'summarise': 7426})
[   115.193][MainProcess][DEBUG] 	2: Counter({'natural_join': 3082, 'natural_join3': 2454, 'summarise': 1891})
[   115.195][MainProcess][DEBUG] 	3: Counter({'mutate': 3180, 'summarise': 2356, 'natural_join': 1037, 'natural_join3': 854})
[   115.195][MainProcess][INFO] Solution found: summarise(natural_join(summarise(natural_join(@param0, @param1), crusingrange = max(crusingrange), eid), @param1), n = n(), crusingrange, eid)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/aircraft.txt", col_types = cols(aid = col_integer(),aname = col_character(),crusingrange = col_integer()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/certified.txt", col_types = cols(eid = col_integer(),aid = col_integer()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/55-tests/tables/38.out", col_types = cols(eid = col_integer(),n = col_integer(),maxcrusingrange = col_integer()))

df3 <- inner_join(input1, input2)
df4 <- df3 %>% group_by(eid) %>% summarise(crusingrange = max(crusingrange)) %>% ungroup()
df5 <- inner_join(df4, input2)
df6 <- df5 %>% group_by(crusingrange, eid) %>% summarise(n = n()) %>% ungroup()
out <- df6 %>% select(eid, n, maxcrusingrange = crusingrange) %>% arrange(eid)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT eid,
       n,
       crusingrange AS maxcrusingrange
FROM
  (SELECT crusingrange,
          eid,
          COUNT() AS n
   FROM
     (SELECT LHS.eid AS eid,
             LHS.crusingrange AS crusingrange,
             RHS.aid AS aid
      FROM
        (SELECT eid,
                MAX(crusingrange) AS crusingrange
         FROM
           (SELECT LHS.aid AS aid,
                   LHS.aname AS aname,
                   LHS.crusingrange AS crusingrange,
                   RHS.eid AS eid
            FROM input1 AS LHS
            INNER JOIN input2 AS RHS ON (LHS.aid = RHS.aid))
         GROUP BY eid) AS LHS
      INNER JOIN input2 AS RHS ON (LHS.eid = RHS.eid))
   GROUP BY crusingrange,
            eid)
ORDER BY eid
