[     1.611][MainProcess][INFO] Parsing specification...
[     1.628][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.628][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.628][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.629][MainProcess][DEBUG] Reading input files...
[     1.639][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-1.txt: ['string', 'string']
[     1.644][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-2.txt: ['string', 'string']
[     1.649][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-3.txt: ['string', 'string']
[     1.653][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/33.out: ['string']
[     1.684][MainProcess][DEBUG] Generating DSL...
[     1.713][MainProcess][INFO] Creating 16 processes
[     1.776][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.776][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.777][MainProcess][DEBUG] Increasing generator loc to 3
[     1.779][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.780][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.783][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.783][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.790][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.791][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.795][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.799][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.803][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.805][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.811][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.816][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.824][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.847][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.399][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.400][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.402][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.445][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.446][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.446][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.447][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.449][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.450][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.465][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.466][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.468][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.963][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.964][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     2.970][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.973][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.974][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.975][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.976][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.976][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.980][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.982][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.984][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.984][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.987][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.987][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.989][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     2.992][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     2.994][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     2.995][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     2.995][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     2.997][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = inner_join())
[     2.998][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = anti_join(), l2 = filter())
[     2.998][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise([1]))
[     3.002][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = left_join(), l2 = filter())
[     3.003][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = intersect(), l2 = filter())
[     3.003][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = union(), l2 = filter())
[     3.004][cube-solver-9][DEBUG] Solving cube (l0 = summarise([2]), l1 = semi_join(), l2 = filter())
[     3.005][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     3.007][cube-solver-13][DEBUG] Solving cube (l0 = summarise([2]), l1 = cross_join(), l2 = filter())
[     3.008][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = mutate(), l2 = filter())
[     3.009][cube-solver-9][DEBUG] Solving cube (l0 = summarise([2]), l1 = inner_join(), l2 = filter())
[     3.012][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([2]))
[     3.012][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     3.012][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([2]))
[     3.014][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     3.016][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([3]))
[     3.018][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = natural_join())
[     3.018][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = natural_join3())
[     3.018][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     3.020][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]), l2 = natural_join4())
[     3.024][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     3.025][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = anti_join())
[     3.025][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = filter())
[     3.026][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = summarise([4]))
[     3.027][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = left_join())
[     3.028][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = union())
[     3.028][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([4]), l2 = filter())
[     3.033][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = intersect())
[     3.033][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = semi_join())
[     3.035][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = cross_join())
[     3.037][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = mutate())
[     3.038][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = inner_join())
[     3.040][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = summarise([5]))
[     3.042][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = mutate())
[     3.043][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = mutate())
[     3.044][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = summarise([5]))
[     3.046][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = summarise([5]))
[     3.048][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = mutate())
[     3.049][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = union(), l2 = mutate())
[     3.050][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = union(), l2 = summarise([5]))
[     3.051][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = intersect(), l2 = summarise([5]))
[     3.051][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = intersect(), l2 = mutate())
[     3.054][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = semi_join(), l2 = summarise([5]))
[     3.055][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = semi_join(), l2 = mutate())
[     3.055][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = cross_join(), l2 = summarise([5]))
[     3.056][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = cross_join(), l2 = mutate())
[     3.058][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join())
[     3.061][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join3())
[     3.062][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join4())
[     3.063][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = summarise([5]))
[     3.064][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = anti_join())
[     3.064][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = filter([2]))
[     3.065][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = left_join())
[     3.066][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = union())
[     3.068][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = intersect())
[     3.070][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = semi_join())
[     3.072][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = cross_join())
[     3.073][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = mutate())
[     3.073][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = inner_join())
[     3.073][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = inner_join(), l2 = summarise([5]))
[     3.075][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = inner_join(), l2 = mutate())
[     3.075][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([6]), l2 = filter([2]))
[     3.076][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([2]), l2 = summarise([6]))
[     3.081][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([2]))
[     3.081][cube-solver-14][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([2]), l2 = mutate())
[     3.083][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([6]), l2 = filter([2]))
[     3.083][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = summarise([6]))
[     3.085][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = mutate())
[     3.088][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([2]))
[     3.088][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = summarise([6]), l2 = filter([2]))
[     3.088][cube-solver-13][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = mutate())
[     3.089][cube-solver-14][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = summarise([6]))
[     3.092][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([2]))
[     3.094][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([7]), l2 = filter([2]))
[     3.095][cube-solver-13][DEBUG] Solving cube (l0 = intersect(), l1 = filter([2]), l2 = summarise([7]))
[     3.096][cube-solver-10][DEBUG] Solving cube (l0 = intersect(), l1 = filter([2]), l2 = mutate())
[     3.096][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([2]))
[     3.100][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = summarise([8]))
[     3.100][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([8]), l2 = filter([2]))
[     3.102][cube-solver-14][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = mutate())
[     3.103][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([2]))
[     3.104][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([8]), l2 = filter([2]))
[     3.106][cube-solver-13][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([2]), l2 = summarise([8]))
[     3.107][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([2]), l2 = mutate())
[     3.110][cube-solver-14][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([2]))
[     3.111][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([2]))
[     3.113][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter([2]))
[     3.114][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([8]), l2 = filter([2]))
[     3.114][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([2]))
[     3.118][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join4())
[     3.118][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join())
[     3.118][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join3([1]))
[     3.119][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = summarise([9]))
[     3.125][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = anti_join())
[     3.126][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = filter([2]))
[     3.133][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = left_join())
[     3.133][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = intersect())
[     3.134][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = union())
[     3.139][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = semi_join())
[     3.142][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = cross_join())
[     3.142][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = mutate())
[     3.146][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = inner_join())
[     3.150][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([5]))
[     3.151][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([5]))
[     3.154][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([5]))
[     3.160][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([7]))
[     3.161][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([7]))
[     3.162][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([7]))
[     3.169][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([7]))
[     3.171][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([7]))
[     3.172][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([9]), l2 = filter([7]))
[     3.179][cube-solver-10][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([8]), l2 = summarise([10]))
[     3.181][cube-solver-14][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([8]), l2 = mutate())
[     3.187][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([8]))
[     3.189][MainProcess][DEBUG] Increasing generator loc to 4
[     3.191][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     3.195][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     3.197][cube-solver-10][DEBUG] Initialising process for 4 lines of code.
[     3.281][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([13]))
[     3.300][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     3.702][cube-solver-0][DEBUG] Solving cube (l0 = summarise([18]), l1 = summarise([18]), l2 = filter([20]))
[     3.731][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     4.009][cube-solver-3][DEBUG] Solving cube (l0 = summarise([18]), l1 = natural_join(), l2 = filter([21]))
[     4.033][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     4.065][cube-solver-1][DEBUG] Solving cube (l0 = summarise([18]), l1 = natural_join3([2]), l2 = filter([23]))
[     4.195][cube-solver-2][DEBUG] Solving cube (l0 = summarise([19]), l1 = natural_join4(), l2 = filter([23]))
[     4.230][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     4.952][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = summarise([19]), l3 = filter([24]))
[     4.962][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = natural_join(), l3 = filter([24]))
[     4.983][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([19]), l2 = natural_join3([2]), l3 = filter([24]))
[     5.015][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([19]), l2 = filter([24]), l3 = summarise([19]))
[     5.056][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = filter([24]), l3 = filter([24]))
[     5.102][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = filter([24]), l3 = anti_join())
[     5.256][cube-solver-10][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = natural_join4(), l3 = filter([24]))
[     5.279][cube-solver-10][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([24]), l3 = left_join())
[     5.573][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join([2]))
[     5.760][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join3([2]))
[     5.954][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join4())
[     6.114][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     7.893][cube-solver-2][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join4())
[     7.894][MainProcess][INFO] Statistics:
[     7.895][MainProcess][INFO] 	Generated cubes: 154
[     7.895][MainProcess][INFO] 	Attempted programs: 129
[     7.895][MainProcess][INFO] 		Rejected: 38
[     7.895][MainProcess][INFO] 		Failed: 90
[     7.895][MainProcess][INFO] 	Blacklist clauses: 49
[     7.895][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     7.897][MainProcess][DEBUG] 	0: Counter({'mutate': 1261, 'natural_join3': 563, 'summarise': 442})
[     7.898][MainProcess][DEBUG] 	1: Counter({'natural_join3': 763, 'natural_join4': 545, 'filter': 395, 'mutate': 320, 'summarise': 243})
[     7.899][MainProcess][DEBUG] 	2: Counter({'filter': 1872, 'natural_join4': 236, 'natural_join3': 160})
[     7.900][MainProcess][DEBUG] Printing statistics for good programs of size 4
[     7.900][MainProcess][DEBUG] 	0: Counter({'natural_join': 374})
[     7.900][MainProcess][DEBUG] 	1: Counter({'summarise': 374})
[     7.901][MainProcess][DEBUG] 	2: Counter({'natural_join': 170, 'natural_join3': 126, 'filter': 79})
[     7.901][MainProcess][DEBUG] 	3: Counter({'filter': 296, 'natural_join4': 63, 'left_join': 8, 'natural_join3': 8})
[     7.901][MainProcess][INFO] Solution found: natural_join4(@param2, @param0, @param1, filter(summarise(natural_join(@param0, @param1), n = n(), P_id, color), color == 'green' & n == max(n)))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/33.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input2)
df5 <- df4 %>% group_by(P_id, color) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(color == 'green' & n == max(n))
df7 <- inner_join(input3, input1) %>% inner_join(input2) %>% inner_join(df6)
out <- df7 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `LHS`.`S_key` AS `S_key`,
          `LHS`.`S_name` AS `S_name`,
          `LHS`.`P_id` AS `P_id`,
          `LHS`.`color` AS `color`,
          `RHS`.`n` AS `n`
   FROM
     (SELECT `LHS`.`S_key` AS `S_key`,
             `LHS`.`S_name` AS `S_name`,
             `LHS`.`P_id` AS `P_id`,
             `RHS`.`color` AS `color`
      FROM
        (SELECT `LHS`.`S_key` AS `S_key`,
                `LHS`.`S_name` AS `S_name`,
                `RHS`.`P_id` AS `P_id`
         FROM `input3` AS `LHS`
         INNER JOIN `input1` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`)) AS `LHS`
      INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`)) AS `LHS`
   INNER JOIN
     (SELECT `P_id`,
             `color`,
             `n`
      FROM
        (SELECT `P_id`,
                `color`,
                `n`,
                MAX(`n`) OVER () AS `zzz4`
         FROM
           (SELECT `P_id`,
                   `color`,
                   COUNT() AS `n`
            FROM
              (SELECT `LHS`.`S_key` AS `S_key`,
                      `LHS`.`P_id` AS `P_id`,
                      `RHS`.`color` AS `color`
               FROM `input1` AS `LHS`
               INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
            GROUP BY `P_id`,
                     `color`))
      WHERE (`color` = 'green'
             AND n = zzz4)) AS RHS ON (LHS.P_id = RHS.P_id
                                       AND LHS.color = RHS.color))
ORDER BY S_name
