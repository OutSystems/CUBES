[     1.578][MainProcess][INFO] Parsing specification...
[     1.582][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.582][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.582][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.583][MainProcess][DEBUG] Reading input files...
[     1.589][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-1.txt: ['string', 'string']
[     1.594][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-2.txt: ['string', 'string']
[     1.599][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/21-3.txt: ['string', 'string']
[     1.603][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/33.out: ['string']
[     1.633][MainProcess][DEBUG] Generating DSL...
[     1.655][MainProcess][INFO] Creating 16 processes
[     1.719][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.719][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.719][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.719][MainProcess][DEBUG] Increasing generator loc to 3
[     1.719][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.720][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.722][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.726][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.730][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.734][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.738][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.742][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.750][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.764][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.773][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.773][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.777][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.149][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.149][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.150][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.151][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.151][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.153][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.285][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.286][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.288][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.354][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.355][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.356][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.486][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.491][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.493][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.493][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     2.497][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.497][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.497][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.501][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.503][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.504][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.507][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.510][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.510][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     2.513][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     2.513][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     2.516][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     2.517][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     2.517][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.519][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = inner_join())
[     2.518][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.519][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter())
[     2.521][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = left_join(), l2 = filter())
[     2.523][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = union(), l2 = filter())
[     2.524][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = intersect(), l2 = filter())
[     2.524][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = cross_join(), l2 = filter())
[     2.525][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = semi_join(), l2 = filter())
[     2.527][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = inner_join(), l2 = filter())
[     2.527][cube-solver-5][DEBUG] Solving cube (l0 = summarise([1]), l1 = mutate(), l2 = filter())
[     2.528][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([1]))
[     2.530][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([1]))
[     2.531][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     2.531][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     2.532][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([1]))
[     2.533][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     2.534][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = natural_join())
[     2.534][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = natural_join3())
[     2.535][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = natural_join4())
[     2.536][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = summarise([1]))
[     2.537][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = filter())
[     2.538][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = anti_join())
[     2.539][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = left_join())
[     2.540][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = union())
[     2.541][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = intersect())
[     2.542][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = semi_join())
[     2.542][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = mutate())
[     2.543][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = summarise([1]), l2 = cross_join())
[     2.544][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([2]), l2 = inner_join())
[     2.545][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise([2]))
[     2.546][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     2.548][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     2.548][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise([2]))
[     2.549][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     2.549][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise([2]))
[     2.550][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise([2]))
[     2.552][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     2.553][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     2.553][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise([2]))
[     2.554][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise([2]))
[     2.555][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     2.555][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise([2]))
[     2.556][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     2.558][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     2.558][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join4())
[     2.559][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3())
[     2.560][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = filter())
[     2.560][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise([2]))
[     2.562][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = left_join())
[     2.562][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = anti_join())
[     2.562][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = union())
[     2.564][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = intersect())
[     2.565][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = semi_join())
[     2.565][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = cross_join())
[     2.565][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[     2.566][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = inner_join())
[     2.568][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = summarise([3]))
[     2.568][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([3]), l2 = filter())
[     2.568][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = inner_join(), l2 = mutate())
[     2.569][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = summarise([3]))
[     2.571][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = filter(), l2 = mutate())
[     2.572][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter())
[     2.574][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([3]), l2 = filter())
[     2.574][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = summarise([3]))
[     2.575][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = filter(), l2 = mutate())
[     2.576][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter())
[     2.578][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = summarise([3]), l2 = filter())
[     2.578][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = summarise([3]))
[     2.580][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = filter(), l2 = mutate())
[     2.580][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter())
[     2.581][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.582][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([3]), l2 = filter())
[     2.583][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = summarise([4]))
[     2.583][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = filter(), l2 = mutate())
[     2.584][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter())
[     2.585][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([4]), l2 = filter())
[     2.587][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = mutate())
[     2.587][cube-solver-14][DEBUG] Solving cube (l0 = semi_join(), l1 = filter(), l2 = summarise([4]))
[     2.587][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter())
[     2.589][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([4]), l2 = filter())
[     2.590][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter())
[     2.590][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = mutate())
[     2.590][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = filter(), l2 = summarise([4]))
[     2.593][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([1]), l2 = filter())
[     2.593][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([4]), l2 = filter())
[     2.594][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter())
[     2.594][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter())
[     2.597][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join())
[     2.597][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join3([1]))
[     2.598][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = natural_join4())
[     2.602][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise([4]))
[     2.609][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = filter())
[     2.613][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = anti_join())
[     2.616][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = filter([1]), l2 = mutate())
[     2.617][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = left_join())
[     2.622][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = union())
[     2.624][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = intersect())
[     2.626][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = semi_join())
[     2.629][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = cross_join())
[     2.631][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = mutate())
[     2.634][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = inner_join())
[     2.635][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([1]))
[     2.639][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([1]))
[     2.640][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([1]))
[     2.644][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([1]))
[     2.645][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([1]))
[     2.648][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([1]))
[     2.649][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([1]))
[     2.653][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([1]))
[     2.653][cube-solver-10][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([6]), l2 = filter([1]))
[     2.657][cube-solver-12][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([1]), l2 = summarise([6]))
[     2.663][cube-solver-10][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([1]), l2 = mutate())
[     2.666][cube-solver-12][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([1]))
[     2.666][MainProcess][DEBUG] Increasing generator loc to 4
[     2.667][cube-solver-10][DEBUG] Initialising process for 4 lines of code.
[     2.671][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[     2.690][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = mutate(), l2 = filter([1]))
[     2.745][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([3]), l2 = summarise([10]))
[     2.760][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     2.869][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([7]))
[     2.878][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     2.916][cube-solver-2][DEBUG] Solving cube (l0 = summarise([12]), l1 = natural_join3([1]), l2 = filter([9]))
[     3.085][cube-solver-1][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = filter([11]))
[     3.103][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     3.109][cube-solver-3][DEBUG] Solving cube (l0 = summarise([16]), l1 = summarise([16]), l2 = filter([13]))
[     3.144][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     3.182][cube-solver-0][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join4(), l2 = filter([13]))
[     3.206][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     4.210][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([20]), l2 = natural_join(), l3 = filter([22]))
[     4.236][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([20]), l2 = natural_join3([2]), l3 = filter([22]))
[     4.309][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([20]), l2 = natural_join4(), l3 = filter([22]))
[     4.329][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([20]), l2 = filter([22]), l3 = natural_join([1]))
[     4.330][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([20]), l2 = filter([22]), l3 = summarise([20]))
[     4.344][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([20]), l2 = filter([22]), l3 = natural_join3([2]))
[     4.359][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([20]), l2 = filter([22]), l3 = filter([22]))
[     4.385][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([23]), l3 = anti_join())
[     4.396][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([23]), l3 = natural_join4())
[     4.446][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([23]))
[     4.476][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([23]), l3 = left_join())
[     4.770][cube-solver-0][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([23]), l3 = natural_join4())
[     4.771][MainProcess][INFO] Statistics:
[     4.772][MainProcess][INFO] 	Generated cubes: 153
[     4.772][MainProcess][INFO] 	Attempted programs: 14
[     4.772][MainProcess][INFO] 		Rejected: 0
[     4.772][MainProcess][INFO] 		Failed: 13
[     4.772][MainProcess][INFO] 	Blacklist clauses: 48
[     4.772][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     4.773][MainProcess][DEBUG] 	0: Counter({'mutate': 609, 'natural_join3': 194, 'summarise': 116})
[     4.774][MainProcess][DEBUG] 	1: Counter({'filter': 275, 'natural_join3': 236, 'natural_join4': 214, 'mutate': 190, 'summarise': 4})
[     4.774][MainProcess][DEBUG] 	2: Counter({'filter': 644, 'natural_join3': 170, 'natural_join4': 105})
[     4.774][MainProcess][DEBUG] Priting statistics for good programs of size 4
[     4.774][MainProcess][DEBUG] 	0: Counter({'natural_join': 59})
[     4.775][MainProcess][DEBUG] 	1: Counter({'summarise': 59})
[     4.775][MainProcess][DEBUG] 	2: Counter({'natural_join3': 32, 'filter': 19, 'natural_join': 8})
[     4.775][MainProcess][DEBUG] 	3: Counter({'filter': 40, 'left_join': 10, 'natural_join4': 9})
[     4.775][MainProcess][INFO] Solution found: natural_join4(@param0, filter(summarise(natural_join(@param0, @param1), n = n(), P_id, color), color == 'green' & n == max(n)), @param1, @param2)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/21-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/21-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/21-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/33.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input2)
df5 <- df4 %>% group_by(P_id, color) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(color == 'green' & n == max(n))
df7 <- inner_join(input1, df6) %>% inner_join(input2) %>% inner_join(input3)
out <- df7 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `LHS`.`S_key` AS `S_key`,
          `LHS`.`P_id` AS `P_id`,
          `LHS`.`color` AS `color`,
          `LHS`.`n` AS `n`,
          `RHS`.`S_name` AS `S_name`
   FROM
     (SELECT `LHS`.`S_key` AS `S_key`,
             `LHS`.`P_id` AS `P_id`,
             `LHS`.`color` AS `color`,
             `LHS`.`n` AS `n`
      FROM
        (SELECT `LHS`.`S_key` AS `S_key`,
                `LHS`.`P_id` AS `P_id`,
                `RHS`.`color` AS `color`,
                `RHS`.`n` AS `n`
         FROM `input1` AS `LHS`
         INNER JOIN
           (SELECT `P_id`,
                   `color`,
                   `n`
            FROM
              (SELECT `P_id`,
                      `color`,
                      `n`,
                      MAX(`n`) OVER () AS `zzz4`
               FROM
                 (SELECT `P_id`,
                         `color`,
                         COUNT() AS `n`
                  FROM
                    (SELECT `LHS`.`S_key` AS `S_key`,
                            `LHS`.`P_id` AS `P_id`,
                            `RHS`.`color` AS `color`
                     FROM `input1` AS `LHS`
                     INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
                  GROUP BY `P_id`,
                           `color`))
            WHERE (`color` = 'green'
                   AND n = zzz4)) AS RHS ON (LHS.P_id = RHS.P_id)) AS LHS
      INNER JOIN input2 AS RHS ON (LHS.P_id = RHS.P_id
                                   AND LHS.color = RHS.color)) AS LHS
   INNER JOIN input3 AS RHS ON (LHS.S_key = RHS.S_key))
ORDER BY S_name
