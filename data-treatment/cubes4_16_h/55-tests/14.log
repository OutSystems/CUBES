[     3.225][MainProcess][INFO] Parsing specification...
[     3.229][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.230][MainProcess][DEBUG] Reading input files...
[     3.240][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/14-1.txt: ['string', 'string']
[     3.245][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/14-2.txt: ['string', 'string']
[     3.249][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/14-3.txt: ['string', 'string']
[     3.253][MainProcess][INFO] Inferred data types for table tests-examples/55-tests/tables/14.out: ['string']
[     3.285][MainProcess][DEBUG] Generating DSL...
[     3.311][MainProcess][INFO] Creating 16 processes
[     3.382][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.382][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.382][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.382][MainProcess][DEBUG] Increasing generator loc to 3
[     3.382][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.383][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     3.383][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     3.389][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     3.397][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     3.400][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     3.401][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     3.412][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     3.412][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     3.416][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     3.434][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     3.439][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     3.444][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     3.795][cube-solver-2][WARNING] There is no solution for current loc (2).
[     3.796][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     3.798][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     3.872][cube-solver-0][WARNING] There is no solution for current loc (2).
[     3.873][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     3.874][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     3.957][cube-solver-1][WARNING] There is no solution for current loc (2).
[     3.958][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     3.959][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     4.054][cube-solver-3][WARNING] There is no solution for current loc (2).
[     4.055][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     4.057][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     4.075][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     4.075][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     4.078][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     4.080][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     4.080][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     4.082][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     4.086][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     4.087][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     4.091][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     4.094][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     4.098][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = left_join())
[     4.102][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = union())
[     4.106][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = intersect())
[     4.110][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = semi_join())
[     4.114][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = cross_join())
[     4.117][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([1]), l2 = filter([1]))
[     4.118][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = mutate())
[     4.118][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([1]))
[     4.123][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = inner_join())
[     4.125][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = anti_join(), l2 = filter([1]))
[     4.128][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = left_join(), l2 = filter([1]))
[     4.131][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = union(), l2 = filter([1]))
[     4.133][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = intersect(), l2 = filter([1]))
[     4.133][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([1]), l2 = filter([1]))
[     4.136][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = semi_join(), l2 = filter([1]))
[     4.137][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([1]))
[     4.137][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = cross_join(), l2 = filter([1]))
[     4.140][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = mutate(), l2 = filter([1]))
[     4.141][cube-solver-12][DEBUG] Solving cube (l0 = summarise([1]), l1 = inner_join(), l2 = filter([1]))
[     4.141][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([1]), l2 = summarise([1]))
[     4.142][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = summarise([1]))
[     4.143][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = mutate())
[     4.144][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3(), l2 = summarise([1]))
[     4.146][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3(), l2 = mutate())
[     4.147][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = summarise([2]))
[     4.147][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = mutate())
[     4.147][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([2]), l2 = natural_join())
[     4.149][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([2]), l2 = natural_join3())
[     4.150][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([2]), l2 = natural_join4())
[     4.151][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([2]), l2 = summarise([2]))
[     4.152][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([2]), l2 = anti_join())
[     4.153][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([2]), l2 = filter([1]))
[     4.154][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([2]), l2 = left_join())
[     4.156][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([2]), l2 = union())
[     4.158][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([2]), l2 = intersect())
[     4.158][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([2]), l2 = semi_join())
[     4.159][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([2]), l2 = cross_join())
[     4.159][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([2]), l2 = mutate())
[     4.161][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([2]), l2 = inner_join())
[     4.163][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = summarise([2]))
[     4.164][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = mutate())
[     4.164][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = summarise([2]))
[     4.165][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = mutate())
[     4.167][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = summarise([3]))
[     4.168][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = mutate())
[     4.168][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = union(), l2 = summarise([3]))
[     4.169][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = union(), l2 = mutate())
[     4.170][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = intersect(), l2 = summarise([3]))
[     4.172][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = intersect(), l2 = mutate())
[     4.172][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = semi_join(), l2 = summarise([3]))
[     4.173][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = semi_join(), l2 = mutate())
[     4.175][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = cross_join(), l2 = summarise([3]))
[     4.175][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = cross_join(), l2 = mutate())
[     4.176][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join())
[     4.177][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join3())
[     4.178][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join4())
[     4.179][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = summarise([3]))
[     4.180][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = filter([1]))
[     4.180][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = anti_join())
[     4.181][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = left_join())
[     4.181][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = union())
[     4.184][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = intersect())
[     4.185][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = semi_join())
[     4.185][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = cross_join())
[     4.185][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = inner_join())
[     4.185][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = mutate())
[     4.188][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = inner_join(), l2 = mutate())
[     4.188][cube-solver-4][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([4]), l2 = filter([1]))
[     4.188][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = inner_join(), l2 = summarise([4]))
[     4.188][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([1]), l2 = summarise([4]))
[     4.188][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([1]), l2 = mutate())
[     4.192][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([1]))
[     4.192][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([4]), l2 = filter([1]))
[     4.195][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = filter([1]), l2 = mutate())
[     4.195][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = filter([1]), l2 = summarise([4]))
[     4.195][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([1]))
[     4.196][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = summarise([4]), l2 = filter([1]))
[     4.199][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = filter([1]), l2 = summarise([4]))
[     4.199][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = filter([1]), l2 = mutate())
[     4.200][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([1]))
[     4.203][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([4]), l2 = filter([1]))
[     4.203][cube-solver-4][DEBUG] Solving cube (l0 = intersect(), l1 = filter([1]), l2 = summarise([5]))
[     4.204][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter([1]), l2 = mutate())
[     4.204][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([1]))
[     4.206][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([5]), l2 = filter([1]))
[     4.207][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([1]), l2 = summarise([5]))
[     4.208][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([1]), l2 = mutate())
[     4.210][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([1]))
[     4.211][cube-solver-4][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([5]), l2 = filter([1]))
[     4.212][cube-solver-6][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([1]), l2 = summarise([5]))
[     4.214][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([1]), l2 = mutate())
[     4.215][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([1]))
[     4.215][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([1]))
[     4.217][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter([1]))
[     4.219][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([1]))
[     4.219][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([6]), l2 = filter([1]))
[     4.220][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = natural_join())
[     4.220][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = natural_join3())
[     4.225][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = natural_join4())
[     4.225][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([1]), l2 = summarise([6]))
[     4.227][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = summarise([6]))
[     4.236][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = filter([1]))
[     4.236][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = anti_join())
[     4.241][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = left_join())
[     4.241][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = union())
[     4.245][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = intersect())
[     4.246][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = semi_join())
[     4.249][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = cross_join())
[     4.250][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = mutate())
[     4.254][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = inner_join())
[     4.255][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([2]))
[     4.259][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([2]))
[     4.260][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([2]))
[     4.264][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([2]))
[     4.265][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([2]))
[     4.269][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([2]))
[     4.269][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([2]))
[     4.274][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([2]))
[     4.274][cube-solver-4][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([7]), l2 = filter([2]))
[     4.279][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([2]), l2 = summarise([7]))
[     4.284][cube-solver-4][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([2]), l2 = mutate())
[     4.289][MainProcess][DEBUG] Increasing generator loc to 4
[     4.289][cube-solver-4][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([2]))
[     4.289][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     4.293][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[     4.296][cube-solver-8][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     4.297][MainProcess][INFO] Statistics:
[     4.298][MainProcess][INFO] 	Generated cubes: 144
[     4.298][MainProcess][INFO] 	Attempted programs: 3
[     4.298][MainProcess][INFO] 		Rejected: 2
[     4.298][MainProcess][INFO] 		Failed: 0
[     4.298][MainProcess][INFO] 	Blacklist clauses: 10
[     4.298][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     4.299][MainProcess][DEBUG] 	0: Counter({'natural_join3': 19, 'summarise': 10, 'mutate': 7})
[     4.299][MainProcess][DEBUG] 	1: Counter({'filter': 12, 'mutate': 10, 'summarise': 9, 'natural_join3': 3, 'natural_join4': 2})
[     4.299][MainProcess][DEBUG] 	2: Counter({'filter': 24, 'natural_join4': 10, 'natural_join3': 2})
[     4.299][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param0, @param2, @param1), n = n(), S_name), n == max(n))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/55-tests/tables/14-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/55-tests/tables/14-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/55-tests/tables/14-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/55-tests/tables/14.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input3) %>% inner_join(input2)
df5 <- df4 %>% group_by(S_name) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n == max(n))
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT S_name,
          n
   FROM
     (SELECT S_name,
             n,
             MAX(n) OVER () AS zzz4
      FROM
        (SELECT S_name,
                COUNT() AS n
         FROM
           (SELECT LHS.S_key AS S_key,
                   LHS.P_id AS P_id,
                   LHS.S_name AS S_name,
                   RHS.color AS color
            FROM
              (SELECT LHS.S_key AS S_key,
                      LHS.P_id AS P_id,
                      RHS.S_name AS S_name
               FROM input1 AS LHS
               INNER JOIN input3 AS RHS ON (LHS.S_key = RHS.S_key)) AS LHS
            INNER JOIN input2 AS RHS ON (LHS.P_id = RHS.P_id))
         GROUP BY S_name))
   WHERE (n = zzz4))
ORDER BY S_name
