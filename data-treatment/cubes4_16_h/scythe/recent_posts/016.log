[     3.518][MainProcess][INFO] Parsing specification...
[     3.524][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.524][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.524][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     3.525][MainProcess][DEBUG] Reading input files...
[     3.537][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/016_2.csv: ['string', 'datetime64[ns]']
[     3.545][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/016_o.csv: ['string', 'datetime64[ns]', 'int64']
[     3.598][MainProcess][DEBUG] Generating DSL...
[     3.691][MainProcess][INFO] Creating 16 processes
[     3.765][MainProcess][DEBUG] Increasing generator loc to 4
[     3.866][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     3.868][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     3.885][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     3.890][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     3.891][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     3.899][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     3.900][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     3.903][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     3.904][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     3.912][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     3.913][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     3.940][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     3.941][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     3.965][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[     3.967][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     3.967][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     7.134][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     7.151][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     7.156][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     7.172][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = summarise())
[     7.175][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = mutate())
[     7.180][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[     7.182][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     7.188][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise())
[     7.191][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     7.194][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = mutate())
[     7.195][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter(), l2 = summarise())
[     7.198][cube-solver-6][DEBUG] Initialising process for 4 lines of code.
[     7.199][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter())
[     7.219][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = mutate())
[     7.225][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     7.244][cube-solver-8][DEBUG] Solving cube (l0 = mutate(), l1 = summarise(), l2 = filter())
[     7.250][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter())
[     8.946][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter(), l3 = summarise())
[     8.952][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter(), l3 = summarise())
[     8.955][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter(), l3 = mutate())
[     8.958][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = mutate(), l3 = filter())
[     8.961][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = summarise(), l3 = filter())
[     8.964][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter(), l3 = summarise())
[     8.966][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter(), l3 = mutate())
[     8.969][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = mutate(), l3 = filter())
[     8.972][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise(), l3 = summarise())
[     8.975][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise(), l3 = mutate())
[     8.977][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate(), l3 = summarise())
[     8.980][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate(), l3 = mutate())
[     8.983][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = summarise(), l3 = filter())
[     8.984][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter(), l3 = mutate())
[     8.986][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter(), l3 = summarise())
[     8.989][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter(), l3 = mutate())
[     8.991][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = mutate(), l3 = filter())
[     8.994][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter(), l3 = summarise())
[     8.995][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = summarise(), l3 = filter())
[     8.997][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter(), l3 = mutate())
[     9.000][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise(), l3 = summarise())
[     9.001][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = mutate(), l3 = filter())
[     9.003][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise(), l3 = mutate())
[     9.006][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate(), l3 = mutate())
[     9.007][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate(), l3 = summarise())
[     9.009][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = summarise(), l3 = filter())
[     9.012][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter(), l3 = mutate())
[     9.013][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter(), l3 = summarise())
[     9.015][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = summarise(), l3 = filter())
[     9.015][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = mutate(), l3 = filter())
[     9.018][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter(), l3 = summarise())
[     9.020][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = summarise(), l3 = filter())
[     9.026][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter(), l3 = mutate())
[     9.032][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = mutate(), l3 = filter())
[     9.038][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = mutate(), l3 = filter())
[    12.246][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise(), l3 = summarise())
[    12.252][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = summarise(), l3 = filter())
[    12.256][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter(), l3 = summarise())
[    12.260][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter(), l3 = mutate())
[    12.263][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = mutate(), l3 = filter())
[    12.266][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = summarise(), l3 = filter())
[    12.269][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter(), l3 = summarise())
[    12.272][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter(), l3 = mutate())
[    12.275][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = mutate(), l3 = filter())
[    12.278][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = natural_join(), l3 = filter())
[    12.322][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = summarise(), l3 = filter())
[    12.334][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = natural_join3(), l3 = filter())
[    12.402][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate(), l3 = mutate())
[    12.407][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate(), l3 = summarise())
[    12.407][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise(), l3 = mutate())
[    12.410][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = natural_join4(), l3 = filter())
[    12.415][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter(), l3 = natural_join())
[    12.416][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = summarise(), l3 = filter())
[    12.421][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter(), l3 = natural_join3())
[    12.423][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter(), l3 = natural_join4())
[    12.432][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter(), l3 = summarise())
[    12.440][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter(), l3 = filter())
[    12.446][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter(), l3 = anti_join())
[    13.262][cube-solver-12][DEBUG] Found solution with cube (l0 = summarise(), l1 = natural_join(), l2 = filter(), l3 = mutate())
[    13.264][MainProcess][INFO] Statistics:
[    13.264][MainProcess][INFO] 	Generated cubes: 70
[    13.264][MainProcess][INFO] 	Attempted programs: 12
[    13.264][MainProcess][INFO] 		Rejected: 11
[    13.265][MainProcess][INFO] 		Failed: 0
[    13.265][MainProcess][INFO] 	Blacklist clauses: 0
[    13.265][MainProcess][DEBUG] Priting statistics for good programs of size 3
[    13.267][MainProcess][DEBUG] 	0: Counter({'mutate': 2579, 'summarise': 1672})
[    13.269][MainProcess][DEBUG] 	1: Counter({'filter': 2273, 'mutate': 1547, 'summarise': 431})
[    13.271][MainProcess][DEBUG] 	2: Counter({'filter': 1978, 'mutate': 1459, 'summarise': 814})
[    13.271][MainProcess][DEBUG] Priting statistics for good programs of size 4
[    13.272][MainProcess][DEBUG] 	0: Counter({'summarise': 1905})
[    13.274][MainProcess][DEBUG] 	1: Counter({'natural_join': 1666, 'summarise': 239})
[    13.274][MainProcess][DEBUG] 	2: Counter({'filter': 1002, 'mutate': 558, 'summarise': 132, 'natural_join': 119, 'natural_join3': 94})
[    13.275][MainProcess][DEBUG] 	3: Counter({'filter': 903, 'mutate': 540, 'summarise': 436, 'natural_join': 26})
[    13.276][MainProcess][INFO] Solution found: mutate(filter(natural_join(@param0, summarise(@param0, n = n(), CustomerId)), n > 1 & ReportDt >= mdy('10/19/2016')), maxReportDt = max(ReportDt))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/016_2.csv", col_types = cols(CustomerId = col_character(),ReportDt = col_character()))
input1$ReportDt <- mdy(input1$ReportDt)
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/016_o.csv", col_types = cols(c1 = col_character(),c2 = col_character(),c3 = col_integer()))
expected_output$c2 <- mdy(expected_output$c2)

df2 <- input1 %>% group_by(CustomerId) %>% summarise(n = n()) %>% ungroup()
df3 <- inner_join(input1, df2)
df4 <- df3 %>% filter(n > 1 & ReportDt >= mdy('10/19/2016'))
df5 <- df4 %>% mutate(maxReportDt = max(ReportDt))
out <- df5 %>% select(c1 = CustomerId, c2 = maxReportDt, c3 = n) %>% distinct() %>% arrange(c1)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT `CustomerId` AS `c1`,
                MAX(`ReportDt`) OVER () AS `c2`,
                                     `n` AS `c3`
FROM
  (SELECT `LHS`.`CustomerId` AS `CustomerId`,
          `LHS`.`ReportDt` AS `ReportDt`,
          `RHS`.`n` AS `n`
   FROM `input1` AS `LHS`
   INNER JOIN
     (SELECT `CustomerId`,
             COUNT() AS `n`
      FROM `input1`
      GROUP BY `CustomerId`) AS `RHS` ON (`LHS`.`CustomerId` = `RHS`.`CustomerId`))
WHERE (`n` > 1.0
       AND `ReportDt` >= mdy('10/19/2016'))
ORDER BY c1
