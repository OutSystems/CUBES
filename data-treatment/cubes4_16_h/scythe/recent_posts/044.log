[     1.588][MainProcess][INFO] Parsing specification...
[     1.591][MainProcess][DEBUG] Reading input files...
[     1.598][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/044_1.csv: ['int64', 'string']
[     1.603][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/044_2.csv: ['string', 'int64']
[     1.607][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/044_o.csv: ['int64', 'string']
[     1.635][MainProcess][DEBUG] Generating DSL...
[     1.647][MainProcess][INFO] Creating 16 processes
[     1.704][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.704][cube-solver-3][DEBUG] Initialising process for 1 lines of code.
[     1.705][MainProcess][DEBUG] Increasing generator loc to 2
[     1.705][cube-solver-4][DEBUG] Initialising process for 1 lines of code.
[     1.705][cube-solver-5][DEBUG] Initialising process for 1 lines of code.
[     1.705][cube-solver-2][DEBUG] Initialising process for 1 lines of code.
[     1.705][cube-solver-6][DEBUG] Initialising process for 1 lines of code.
[     1.705][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     1.710][cube-solver-8][DEBUG] Initialising process for 1 lines of code.
[     1.710][cube-solver-7][DEBUG] Initialising process for 1 lines of code.
[     1.713][cube-solver-9][DEBUG] Initialising process for 1 lines of code.
[     1.716][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     1.726][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     1.727][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     1.731][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     1.741][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     1.742][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     1.759][cube-solver-8][DEBUG] Solving cube (l0 = cross_join(),)
[     1.766][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(),)
[     1.790][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     1.796][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(),)
[     1.796][cube-solver-4][DEBUG] Solving cube (l0 = left_join(),)
[     1.796][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(),)
[     1.796][cube-solver-6][DEBUG] Solving cube (l0 = intersect(),)
[     1.796][cube-solver-5][DEBUG] Solving cube (l0 = union(),)
[     1.796][cube-solver-3][DEBUG] Solving cube (l0 = anti_join(),)
[     1.798][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.798][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(),)
[     1.801][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.801][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(),)
[     1.822][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join())
[     1.825][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join4())
[     1.827][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = anti_join())
[     1.830][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = left_join())
[     1.831][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = union())
[     1.833][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = intersect())
[     1.833][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = intersect())
[     1.835][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = semi_join())
[     1.837][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = cross_join([2]))
[     1.840][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = inner_join([3]))
[     1.844][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join())
[     1.846][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join3())
[     1.848][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join4())
[     1.850][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = anti_join())
[     1.851][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = left_join())
[     1.853][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = union())
[     1.855][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = intersect())
[     1.857][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = semi_join())
[     1.858][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = cross_join([2]))
[     1.861][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = inner_join([3]))
[     1.866][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join())
[     1.867][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join3())
[     1.869][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join4())
[     1.871][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = natural_join())
[     1.921][cube-solver-11][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join())
[     1.927][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     1.938][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = union())
[     1.939][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = inner_join([3]))
[     1.953][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = semi_join())
[     1.955][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = cross_join([2]))
[     2.008][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join3())
[     2.009][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join())
[     2.009][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     2.011][cube-solver-1][DEBUG] Solving cube (l0 = anti_join([7]), l1 = anti_join([7]))
[     2.023][cube-solver-1][DEBUG] Solving cube (l0 = anti_join([8]), l1 = left_join())
[     2.133][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     2.134][cube-solver-7][DEBUG] Solving cube (l0 = anti_join([10]), l1 = natural_join3())
[     2.143][cube-solver-7][DEBUG] Solving cube (l0 = anti_join([10]), l1 = intersect([6]))
[     2.144][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.145][cube-solver-15][DEBUG] Solving cube (l0 = anti_join([10]), l1 = semi_join())
[     2.148][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     2.193][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.214][cube-solver-6][DEBUG] Solving cube (l0 = anti_join([10]), l1 = natural_join4())
[     2.225][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join3())
[     2.260][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([10]), l1 = cross_join([2]))
[     2.337][cube-solver-5][DEBUG] Solving cube (l0 = anti_join([10]), l1 = union())
[     2.354][cube-solver-4][DEBUG] Solving cube (l0 = anti_join([10]), l1 = inner_join([9]))
[     2.398][cube-solver-3][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join())
[     2.461][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join4())
[     2.463][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = anti_join([10]))
[     2.560][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = left_join())
[     2.872][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     2.902][cube-solver-15][DEBUG] Solving cube (l0 = left_join(), l1 = intersect([6]))
[     3.075][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = union())
[     3.139][cube-solver-14][DEBUG] Solving cube (l0 = left_join(), l1 = semi_join())
[     3.252][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = cross_join([2]))
[     3.293][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = inner_join([23]))
[     3.411][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = natural_join())
[     3.472][cube-solver-11][DEBUG] Solving cube (l0 = union(), l1 = natural_join3())
[     3.534][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = natural_join4())
[     3.537][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = anti_join([10]))
[     3.880][cube-solver-15][DEBUG] Solving cube (l0 = union(), l1 = left_join())
[     3.894][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = union())
[     4.026][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = intersect([6]))
[     4.180][cube-solver-14][DEBUG] Solving cube (l0 = union(), l1 = semi_join())
[     4.191][cube-solver-3][DEBUG] Solving cube (l0 = union(), l1 = cross_join([2]))
[     4.299][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = inner_join([23]))
[     4.378][cube-solver-3][DEBUG] Solving cube (l0 = intersect([6]), l1 = natural_join())
[     4.400][cube-solver-13][DEBUG] Solving cube (l0 = intersect([6]), l1 = natural_join3())
[     4.660][cube-solver-2][DEBUG] Solving cube (l0 = intersect([8]), l1 = natural_join4())
[     4.666][cube-solver-2][DEBUG] Solving cube (l0 = intersect([8]), l1 = anti_join([10]))
[     4.860][cube-solver-3][DEBUG] Solving cube (l0 = intersect([8]), l1 = left_join())
[     4.886][cube-solver-1][DEBUG] Solving cube (l0 = intersect([8]), l1 = union())
[     4.947][cube-solver-9][DEBUG] Solving cube (l0 = intersect([8]), l1 = intersect([8]))
[     5.080][cube-solver-14][DEBUG] Solving cube (l0 = intersect([8]), l1 = semi_join())
[     5.100][cube-solver-3][DEBUG] Solving cube (l0 = intersect([8]), l1 = cross_join([2]))
[     5.168][cube-solver-6][DEBUG] Solving cube (l0 = intersect([8]), l1 = inner_join([23]))
[     5.253][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join())
[     5.269][cube-solver-14][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join3())
[     5.437][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join4())
[     5.440][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = anti_join([10]))
[     5.516][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = left_join())
[     5.547][cube-solver-15][DEBUG] Solving cube (l0 = semi_join(), l1 = union())
[     5.592][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = intersect([8]))
[     5.838][cube-solver-0][DEBUG] Solving cube (l0 = semi_join(), l1 = semi_join())
[     5.862][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = cross_join([2]))
[     6.086][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = inner_join([23]))
[     6.324][cube-solver-3][DEBUG] Solving cube (l0 = cross_join([2]), l1 = natural_join())
[     6.378][cube-solver-3][DEBUG] Solving cube (l0 = cross_join([4]), l1 = natural_join3())
[     6.382][cube-solver-3][DEBUG] Solving cube (l0 = cross_join([4]), l1 = natural_join4())
[     6.386][cube-solver-3][DEBUG] Solving cube (l0 = cross_join([4]), l1 = anti_join([10]))
[     6.397][cube-solver-3][DEBUG] Solving cube (l0 = cross_join([4]), l1 = left_join())
[     6.402][cube-solver-3][DEBUG] Solving cube (l0 = cross_join([4]), l1 = union())
[     6.406][cube-solver-3][DEBUG] Solving cube (l0 = cross_join([4]), l1 = intersect([8]))
[     6.415][cube-solver-3][DEBUG] Solving cube (l0 = cross_join([4]), l1 = semi_join())
[     6.419][cube-solver-3][DEBUG] Solving cube (l0 = cross_join([4]), l1 = cross_join([4]))
[     6.423][cube-solver-11][DEBUG] Solving cube (l0 = cross_join([4]), l1 = inner_join([23]))
[     6.426][cube-solver-3][DEBUG] Solving cube (l0 = inner_join([23]), l1 = natural_join())
[     6.434][cube-solver-0][DEBUG] Solving cube (l0 = inner_join([23]), l1 = natural_join3())
[     6.435][cube-solver-11][DEBUG] Solving cube (l0 = inner_join([23]), l1 = natural_join4())
[     6.446][cube-solver-11][DEBUG] Solving cube (l0 = inner_join([23]), l1 = anti_join([10]))
[     6.481][cube-solver-5][DEBUG] Solving cube (l0 = inner_join([24]), l1 = left_join())
[     6.562][cube-solver-15][DEBUG] Solving cube (l0 = inner_join([28]), l1 = union())
[     6.563][cube-solver-9][DEBUG] Solving cube (l0 = inner_join([28]), l1 = intersect([8]))
[     6.856][cube-solver-7][DEBUG] Solving cube (l0 = inner_join([34]), l1 = semi_join())
[     7.141][cube-solver-13][DEBUG] Solving cube (l0 = inner_join([41]), l1 = cross_join([4]))
[     7.215][cube-solver-1][DEBUG] Solving cube (l0 = inner_join([44]), l1 = inner_join([44]))
[     7.653][MainProcess][DEBUG] Increasing generator loc to 3
[     7.654][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     7.743][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     7.770][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     7.924][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = natural_join())
[     7.968][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = natural_join3())
[     7.979][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = anti_join([10]))
[     7.995][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = left_join())
[     8.007][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = natural_join4())
[     8.018][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = union())
[     9.615][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = intersect([8]))
[     9.673][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = semi_join())
[     9.843][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = cross_join([4]))
[    10.109][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = inner_join([46]))
[    10.460][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[    10.635][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[    10.674][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = natural_join())
[    10.674][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[    10.826][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = anti_join([10]))
[    10.847][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = natural_join3())
[    10.898][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = left_join())
[    10.909][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = natural_join4())
[    10.912][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = union())
[    12.017][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[    12.303][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = intersect([8]))
[    12.643][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[    12.659][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[    12.774][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[    12.858][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = semi_join())
[    12.867][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = cross_join([4]))
[    13.027][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = inner_join([46]))
[    13.394][cube-solver-11][DEBUG] Found solution with cube (l0 = inner_join([23]), l1 = anti_join([10]))
[    13.395][MainProcess][INFO] Statistics:
[    13.395][MainProcess][INFO] 	Generated cubes: 130
[    13.395][MainProcess][INFO] 	Attempted programs: 2939
[    13.396][MainProcess][INFO] 		Rejected: 1046
[    13.396][MainProcess][INFO] 		Failed: 1892
[    13.396][MainProcess][INFO] 	Blacklist clauses: 68
[    13.396][MainProcess][DEBUG] Priting statistics for good programs of size 1
[    13.396][MainProcess][DEBUG] 	0: Counter({'inner_join': 68, 'union': 24, 'natural_join': 24, 'left_join': 24, 'anti_join': 16, 'semi_join': 8})
[    13.396][MainProcess][DEBUG] Priting statistics for good programs of size 2
[    13.403][MainProcess][DEBUG] 	0: Counter({'inner_join': 4452, 'left_join': 2265, 'union': 2231, 'natural_join': 1728, 'semi_join': 1300, 'anti_join': 1176, 'intersect': 400})
[    13.410][MainProcess][DEBUG] 	1: Counter({'inner_join': 5373, 'natural_join3': 1915, 'union': 1516, 'left_join': 1468, 'natural_join': 1304, 'anti_join': 1181, 'semi_join': 796})
[    13.411][MainProcess][DEBUG] Priting statistics for good programs of size 3
[    13.412][MainProcess][DEBUG] 	0: Counter({'natural_join': 2548})
[    13.414][MainProcess][DEBUG] 	1: Counter({'left_join': 1518, 'anti_join': 1030})
[    13.415][MainProcess][DEBUG] 	2: Counter({'natural_join': 516, 'left_join': 483, 'union': 449, 'inner_join': 373, 'natural_join3': 293, 'anti_join': 252, 'semi_join': 183})
[    13.415][MainProcess][INFO] Solution found: anti_join(@param0, inner_join(@param0, @param1, 'OriginalID' = 'OriginalID','Area' = 'Part'), )

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/044_1.csv", col_types = cols(OriginalID = col_integer(),Area = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/scythe/recent_posts/tables/044_2.csv", col_types = cols(Part = col_character(),OriginalID = col_integer()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/044_o.csv", col_types = cols(OriginalID = col_integer(),Area = col_character()))

df3 <- inner_join(input1, input2, by=c('OriginalID' = 'OriginalID','Area' = 'Part'), suffix = c('', '.other'))
df4 <- anti_join(input1, df3, by=c())
out <- df4 %>% select(OriginalID, Area) %>% arrange(OriginalID)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT OriginalID,
       Area
FROM
  (SELECT *
   FROM input1 AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT LHS.OriginalID AS OriginalID,
                  LHS.Area AS Area
           FROM input1 AS LHS
           INNER JOIN input2 AS RHS ON (LHS.OriginalID = RHS.OriginalID
                                        AND LHS.Area = RHS.Part)) AS RHS
        WHERE (LHS.OriginalID = RHS.OriginalID
               AND LHS.Area = RHS.Area) ))
ORDER BY OriginalID
