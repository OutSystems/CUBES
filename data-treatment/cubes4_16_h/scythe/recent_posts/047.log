[     3.608][MainProcess][INFO] Parsing specification...
[     3.615][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.615][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.616][MainProcess][DEBUG] Reading input files...
[     3.630][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/047.csv: ['string', 'string', 'datetime64[ns]']
[     3.637][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/047_o.csv: ['string', 'string']
[     3.687][MainProcess][DEBUG] Generating DSL...
[     3.912][MainProcess][INFO] Creating 16 processes
[     3.993][MainProcess][DEBUG] Increasing generator loc to 2
[     4.107][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     4.112][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     4.119][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     4.123][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     4.130][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     4.140][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     4.142][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     4.143][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     4.146][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     4.147][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     4.152][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     4.154][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     4.165][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     4.170][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     4.203][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     4.210][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     7.191][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     7.191][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     7.405][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     7.592][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[    10.328][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise())
[    10.335][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate())
[    10.367][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join())
[    10.374][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join())
[    10.374][cube-solver-7][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate())
[    10.375][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3())
[    10.379][cube-solver-11][DEBUG] Solving cube (l0 = summarise(), l1 = summarise())
[    10.382][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4())
[    10.388][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise())
[    10.390][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = mutate())
[    10.401][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join())
[    10.405][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join())
[    10.405][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = left_join())
[    10.410][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[    10.416][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[    10.423][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise())
[    10.426][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[    10.437][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = summarise())
[    10.441][cube-solver-4][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise())
[    10.445][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate())
[    10.449][cube-solver-11][DEBUG] Solving cube (l0 = left_join(), l1 = mutate())
[    10.466][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = union())
[    10.466][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = summarise())
[    10.471][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = mutate())
[    10.478][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = summarise())
[    10.496][cube-solver-5][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate())
[    10.551][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = mutate())
[    10.665][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise())
[    10.714][cube-solver-11][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate())
[    10.816][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise())
[    10.867][cube-solver-6][DEBUG] Solving cube (l0 = cross_join([1]), l1 = mutate())
[    10.906][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join())
[    11.003][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3())
[    11.020][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4())
[    11.038][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = summarise())
[    11.049][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[    11.086][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join())
[    11.159][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = left_join())
[    11.269][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = union())
[    11.458][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = intersect())
[    11.740][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join())
[    11.846][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = mutate())
[    11.878][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join([45]))
[    12.128][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join())
[    12.131][cube-solver-12][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise())
[    12.210][cube-solver-2][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate())
[    12.350][MainProcess][DEBUG] Increasing generator loc to 3
[    12.351][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[    13.120][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[    13.144][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[    13.381][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[    13.408][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[    13.721][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = intersect())
[    14.020][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join())
[    14.442][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[    15.257][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[    15.665][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[    17.665][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[    18.430][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[    22.712][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = natural_join())
[    24.815][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = summarise())
[    24.822][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = natural_join4())
[    24.825][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = natural_join3())
[    24.825][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[    24.826][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = anti_join())
[    24.866][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = inner_join())
[    24.866][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = mutate())
[    24.870][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[    24.875][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[    24.885][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join(), l2 = summarise())
[    24.887][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join(), l2 = mutate())
[    24.892][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = summarise())
[    24.893][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = mutate())
[    24.898][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = union(), l2 = summarise())
[    24.907][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = union(), l2 = mutate())
[    24.908][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = intersect(), l2 = summarise())
[    24.916][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = intersect(), l2 = mutate())
[    24.918][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = semi_join(), l2 = summarise())
[    24.926][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = semi_join(), l2 = mutate())
[    25.289][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = cross_join([925]))
[    26.492][cube-solver-7][DEBUG] Found solution with cube (l0 = summarise(), l1 = inner_join())
[    27.003][MainProcess][INFO] Statistics:
[    27.004][MainProcess][INFO] 	Generated cubes: 76
[    27.004][MainProcess][INFO] 	Attempted programs: 672
[    27.004][MainProcess][INFO] 		Rejected: 375
[    27.004][MainProcess][INFO] 		Failed: 296
[    27.004][MainProcess][INFO] 	Blacklist clauses: 1128
[    27.004][MainProcess][DEBUG] Printing statistics for good programs of size 1
[    27.005][MainProcess][DEBUG] 	0: Counter({'summarise': 48, 'mutate': 24})
[    27.005][MainProcess][DEBUG] Printing statistics for good programs of size 2
[    27.010][MainProcess][DEBUG] 	0: Counter({'summarise': 5662, 'mutate': 4976, 'inner_join': 1460, 'cross_join': 660, 'left_join': 72, 'union': 72, 'semi_join': 72, 'intersect': 8})
[    27.014][MainProcess][DEBUG] 	1: Counter({'cross_join': 4156, 'inner_join': 4106, 'mutate': 1344, 'summarise': 1100, 'anti_join': 636, 'left_join': 408, 'union': 408, 'natural_join': 336, 'filter': 260, 'semi_join': 228})
[    27.014][MainProcess][INFO] Solution found: inner_join(@param0, summarise(@param0, maxTime = max(Time), ID), 'Time' = 'maxTime')

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/047.csv", col_types = cols(ID = col_character(),Payment_type = col_character(),Time = col_character()))
input1$Time <- ymd(input1$Time)
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/047_o.csv", col_types = cols(ID = col_character(),Payment_type = col_character()))

df2 <- input1 %>% group_by(ID) %>% summarise(maxTime = max(Time)) %>% ungroup()
df3 <- inner_join(input1, df2, by=c('Time' = 'maxTime'), suffix = c('', '.other'))
out <- df3 %>% select(ID, Payment_type) %>% distinct() %>% arrange(ID)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT ID,
                Payment_type
FROM
  (SELECT LHS.ID AS ID,
          LHS.Payment_type AS Payment_type,
          LHS.Time AS TIME,
          RHS.ID AS ID.other
   FROM input1 AS LHS
   INNER JOIN
     (SELECT ID,
             MAX(TIME) AS maxTime
      FROM input1
      GROUP BY ID) AS RHS ON (LHS.Time = RHS.maxTime))
ORDER BY ID
