[     3.339][MainProcess][INFO] Parsing specification...
[     3.344][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.344][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.344][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     3.345][MainProcess][DEBUG] Reading input files...
[     3.352][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/004.csv: ['int64', 'int64', 'int64']
[     3.357][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/004_o.csv: ['int64', 'int64']
[     3.386][MainProcess][DEBUG] Generating DSL...
[     3.866][MainProcess][INFO] Creating 16 processes
[     3.958][MainProcess][DEBUG] Increasing generator loc to 3
[     4.486][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     4.489][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     4.496][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     4.498][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     4.500][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     4.504][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     4.513][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     4.517][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     4.518][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     4.525][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     4.535][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     4.547][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     4.559][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     4.560][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     4.573][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     4.576][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[    16.218][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[    16.246][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[    16.246][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[    16.430][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[    27.284][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise([4]))
[    27.325][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([4]), l2 = filter())
[    27.337][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[    27.343][cube-solver-5][DEBUG] Solving cube (l0 = summarise([4]), l1 = natural_join(), l2 = filter())
[    27.351][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[    27.359][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[    27.361][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise([4]))
[    27.365][cube-solver-7][DEBUG] Solving cube (l0 = summarise([4]), l1 = natural_join3(), l2 = filter())
[    27.372][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([4]), l2 = filter())
[    27.374][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[    27.382][cube-solver-8][DEBUG] Solving cube (l0 = summarise([4]), l1 = natural_join4(), l2 = filter())
[    27.388][cube-solver-15][DEBUG] Solving cube (l0 = summarise([4]), l1 = summarise([4]), l2 = filter())
[    27.408][cube-solver-14][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = natural_join())
[    27.409][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[    27.410][cube-solver-13][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = natural_join3())
[    27.420][cube-solver-8][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = natural_join4())
[    27.428][cube-solver-15][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = anti_join())
[    27.433][cube-solver-6][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = summarise([4]))
[    27.434][cube-solver-12][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = filter())
[    27.438][cube-solver-7][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = left_join())
[    27.450][cube-solver-8][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = union())
[    27.466][cube-solver-10][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter(), l2 = intersect())
[    27.478][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([3]), l2 = summarise([4]))
[    27.528][cube-solver-9][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter([3]), l2 = semi_join())
[    27.627][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([4]))
[    27.662][cube-solver-11][DEBUG] Solving cube (l0 = summarise([5]), l1 = filter([4]), l2 = cross_join())
[    27.793][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([6]), l2 = filter([8]))
[    27.838][cube-solver-4][DEBUG] Solving cube (l0 = summarise([6]), l1 = filter([9]), l2 = mutate())
[    87.260][cube-solver-8][DEBUG] Found solution with cube (l0 = summarise([4]), l1 = filter(), l2 = union())
[    87.262][MainProcess][INFO] Statistics:
[    87.263][MainProcess][INFO] 	Generated cubes: 32
[    87.263][MainProcess][INFO] 	Attempted programs: 974
[    87.263][MainProcess][INFO] 		Rejected: 331
[    87.263][MainProcess][INFO] 		Failed: 642
[    87.263][MainProcess][INFO] 	Blacklist clauses: 15
[    87.263][MainProcess][DEBUG] Priting statistics for good programs of size 2
[    87.285][MainProcess][DEBUG] 	0: Counter({'filter': 16983, 'mutate': 9484, 'summarise': 6374})
[    87.297][MainProcess][DEBUG] 	1: Counter({'filter': 15858, 'mutate': 9294, 'summarise': 7690})
[    87.297][MainProcess][DEBUG] Priting statistics for good programs of size 3
[    87.310][MainProcess][DEBUG] 	0: Counter({'summarise': 49439})
[    87.322][MainProcess][DEBUG] 	1: Counter({'filter': 41932, 'natural_join': 7507})
[    87.334][MainProcess][DEBUG] 	2: Counter({'filter': 10939, 'union': 6006, 'natural_join3': 5964, 'natural_join': 5815, 'left_join': 5628, 'mutate': 5019, 'semi_join': 4680, 'anti_join': 3932, 'summarise': 1456})
[    87.334][MainProcess][INFO] Solution found: union(summarise(@param0, call_ref = max(call_ref), job_num), filter(@param0, call_ref > 0 & job_num <= 0))
[    87.752][MainProcess][ERROR] Error while trying to convert R code to SQL.

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/004.csv", col_types = cols(id = col_integer(),call_ref = col_integer(),job_num = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/004_o.csv", col_types = cols(call_ref = col_integer(),job_num = col_integer()))

df2 <- input1 %>% group_by(job_num) %>% summarise(call_ref = max(call_ref)) %>% ungroup()
df3 <- input1 %>% filter(call_ref > 0 & job_num <= 0)
df4 <- bind_rows(df2, df3)
out <- df4 %>% select(call_ref, job_num) %>% distinct() %>% arrange(call_ref)

Failed to generate SQL query
