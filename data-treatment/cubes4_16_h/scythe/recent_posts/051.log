[     3.275][MainProcess][INFO] Parsing specification...
[     3.280][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.280][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.281][MainProcess][DEBUG] Reading input files...
[     3.288][MainProcess][WARNING] Using integers larger than 32 bits! Converting column isbn to string.
[     3.289][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/051_1.csv: ['object', 'string']
[     3.293][MainProcess][WARNING] Using integers larger than 32 bits! Converting column isbn to string.
[     3.294][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/051_2.csv: ['object', 'string']
[     3.299][MainProcess][WARNING] Using integers larger than 32 bits! Converting column isbn to string.
[     3.300][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/051_o.csv: ['object', 'string', 'string']
[     3.332][MainProcess][DEBUG] Generating DSL...
[     3.366][MainProcess][INFO] Creating 16 processes
[     3.445][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     3.445][MainProcess][DEBUG] Increasing generator loc to 2
[     3.445][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     3.446][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.446][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.446][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     3.453][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     3.454][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     3.467][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     3.467][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     3.474][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     3.478][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     3.485][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     3.506][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     3.513][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     3.519][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     3.525][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     3.805][cube-solver-1][WARNING] There is no solution for current loc (1).
[     3.806][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     3.807][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.821][cube-solver-0][WARNING] There is no solution for current loc (1).
[     3.821][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     3.822][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.936][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise())
[     3.940][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = unite())
[     3.943][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = mutate())
[     3.945][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join())
[     3.950][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3())
[     3.968][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = left_join())
[     3.999][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate())
[     4.001][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([3]))
[     4.005][cube-solver-4][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([4]))
[     4.006][cube-solver-5][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate())
[     4.010][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate())
[     4.030][cube-solver-10][DEBUG] Solving cube (l0 = summarise([5]), l1 = natural_join4())
[     4.033][cube-solver-15][DEBUG] Solving cube (l0 = summarise([6]), l1 = intersect())
[     4.037][cube-solver-7][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate())
[     4.037][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([6]))
[     4.040][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = mutate())
[     4.051][cube-solver-8][DEBUG] Solving cube (l0 = summarise([7]), l1 = natural_join())
[     4.138][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([18]))
[     4.159][cube-solver-11][DEBUG] Solving cube (l0 = summarise([20]), l1 = summarise([20]))
[     4.190][cube-solver-11][DEBUG] Solving cube (l0 = union(), l1 = summarise([20]))
[     4.282][cube-solver-12][DEBUG] Solving cube (l0 = summarise([23]), l1 = anti_join([6]))
[     4.283][cube-solver-14][DEBUG] Solving cube (l0 = summarise([23]), l1 = union())
[     4.407][cube-solver-1][DEBUG] Solving cube (l0 = summarise([26]), l1 = semi_join())
[     4.454][cube-solver-0][DEBUG] Solving cube (l0 = summarise([27]), l1 = cross_join())
[     4.864][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = mutate())
[     5.065][cube-solver-0][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([36]))
[     5.479][cube-solver-1][DEBUG] Solving cube (l0 = intersect([3]), l1 = mutate())
[     5.557][cube-solver-8][DEBUG] Found solution with cube (l0 = summarise([7]), l1 = natural_join())
[     5.560][MainProcess][INFO] Statistics:
[     5.560][MainProcess][INFO] 	Generated cubes: 29
[     5.560][MainProcess][INFO] 	Attempted programs: 185
[     5.560][MainProcess][INFO] 		Rejected: 28
[     5.561][MainProcess][INFO] 		Failed: 156
[     5.561][MainProcess][INFO] 	Blacklist clauses: 49
[     5.561][MainProcess][DEBUG] Priting statistics for good programs of size 2
[     5.563][MainProcess][DEBUG] 	0: Counter({'summarise': 567, 'left_join': 279, 'natural_join': 215, 'union': 171})
[     5.564][MainProcess][DEBUG] 	1: Counter({'summarise': 344, 'mutate': 321, 'natural_join3': 124, 'union': 124, 'left_join': 112, 'natural_join': 87, 'inner_join': 72, 'semi_join': 48})
[     5.564][MainProcess][INFO] Solution found: natural_join(summarise(@param1, concatAuthor = string_agg(Author, ', '), isbn), @param0)
[     5.809][cube-solver-10][DEBUG] Found solution with cube (l0 = left_join(), l1 = summarise([6]))
[     6.004][cube-solver-2][DEBUG] Found solution with cube (l0 = natural_join(), l1 = summarise([18]))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/recent_posts/tables/051_1.csv", col_types = cols(isbn = col_character(),title = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/scythe/recent_posts/tables/051_2.csv", col_types = cols(isbn = col_character(),Author = col_character()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/051_o.csv", col_types = cols(isbn = col_character(),title = col_character(),author = col_character()))

string_agg <- function(v,s) {Reduce(function(x, y) paste(x, y, sep = s), v)}

df3 <- input2 %>% group_by(isbn) %>% summarise(concatAuthor = string_agg(Author, ', ')) %>% ungroup()
df4 <- inner_join(df3, input1)
out <- df4 %>% select(isbn, title, author = concatAuthor) %>% arrange(isbn)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `isbn`,
       `title`,
       `concatAuthor` AS `author`
FROM
  (SELECT `LHS`.`isbn` AS `isbn`,
          `LHS`.`concatAuthor` AS `concatAuthor`,
          `RHS`.`title` AS `title`
   FROM
     (SELECT `isbn`,
             string_agg(`Author`, ', ') AS concatAuthor
      FROM input2
      GROUP BY isbn) AS LHS
   INNER JOIN input1 AS RHS ON (LHS.isbn = RHS.isbn))
ORDER BY isbn
