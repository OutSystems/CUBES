[     1.600][MainProcess][INFO] Parsing specification...
[     1.603][MainProcess][DEBUG] Reading input files...
[     1.609][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i023.csv: ['int64', 'int64']
[     1.614][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o023.csv: ['int64', 'int64', 'int64']
[     1.639][MainProcess][DEBUG] Generating DSL...
[     1.657][MainProcess][INFO] Creating 16 processes
[     1.717][MainProcess][DEBUG] Increasing generator loc to 2
[     1.717][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.717][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     1.718][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.718][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.718][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     1.718][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     1.720][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     1.722][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     1.725][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     1.728][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     1.737][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     1.738][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     1.748][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     1.748][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     1.763][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     1.763][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     1.881][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     1.885][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     1.938][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([1]))
[     1.942][cube-solver-6][DEBUG] Solving cube (l0 = summarise([1]), l1 = semi_join())
[     1.956][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([1]))
[     1.959][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = cross_join())
[     1.964][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = natural_join3())
[     1.966][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = mutate())
[     1.975][cube-solver-11][DEBUG] Solving cube (l0 = summarise([1]), l1 = summarise([1]))
[     1.980][cube-solver-11][DEBUG] Solving cube (l0 = summarise([1]), l1 = inner_join())
[     1.983][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = natural_join4())
[     1.987][cube-solver-13][DEBUG] Solving cube (l0 = summarise([1]), l1 = left_join())
[     1.987][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([1]))
[     1.990][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate())
[     1.990][cube-solver-8][DEBUG] Solving cube (l0 = summarise([1]), l1 = natural_join())
[     1.992][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([1]))
[     2.015][cube-solver-7][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate())
[     2.019][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = mutate())
[     2.029][cube-solver-1][DEBUG] Found solution with cube (l0 = mutate(),)
[     2.030][MainProcess][INFO] Statistics:
[     2.031][MainProcess][INFO] 	Generated cubes: 24
[     2.031][MainProcess][INFO] 	Attempted programs: 1
[     2.031][MainProcess][INFO] 		Rejected: 0
[     2.031][MainProcess][INFO] 		Failed: 0
[     2.031][MainProcess][INFO] 	Blacklist clauses: 1
[     2.031][MainProcess][DEBUG] Priting statistics for good programs of size 1
[     2.031][MainProcess][DEBUG] 	0: Counter({'mutate': 9, 'summarise': 7})
[     2.032][MainProcess][DEBUG] Priting statistics for good programs of size 2
[     2.032][MainProcess][DEBUG] 	0: Counter({'summarise': 2})
[     2.032][MainProcess][DEBUG] 	1: Counter({'mutate': 2})
[     2.032][MainProcess][INFO] Solution found: mutate(@param0, row_number = row_number())
[     2.144][cube-solver-7][DEBUG] Found solution with cube (l0 = left_join(), l1 = mutate())

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i023.csv", col_types = cols(itemID = col_integer(),ordercount = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o023.csv", col_types = cols(rank = col_integer(),itemID = col_integer(),ordercount = col_integer()))

df2 <- input1 %>% mutate(row_number = row_number())
out <- df2 %>% select(rank = row_number, itemID, ordercount) %>% arrange(rank)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT ROW_NUMBER() OVER () AS rank,
                         itemID,
                         ordercount
FROM input1
ORDER BY rank
