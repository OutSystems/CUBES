[     1.741][MainProcess][INFO] Parsing specification...
[     1.745][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.745][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.745][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.746][MainProcess][DEBUG] Reading input files...
[     1.754][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i017.csv: ['int64', 'string', 'string']
[     1.759][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o017.csv: ['int64', 'string', 'string']
[     1.785][MainProcess][DEBUG] Generating DSL...
[     1.805][MainProcess][INFO] Creating 16 processes
[     1.871][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.871][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.871][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.871][MainProcess][DEBUG] Increasing generator loc to 3
[     1.872][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.872][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.872][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.873][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.875][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.876][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.881][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.886][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.891][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.903][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.903][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.906][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     1.913][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     2.161][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.239][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.334][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.340][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.340][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.345][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     2.351][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.354][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     2.356][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     2.357][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.358][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.359][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.361][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.362][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.365][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.368][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.386][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([2]))
[     2.391][cube-solver-11][DEBUG] Solving cube (l0 = summarise(), l1 = filter([2]), l2 = filter([2]))
[     2.407][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter([2]))
[     2.413][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = filter([2]), l2 = anti_join())
[     2.420][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter([2]))
[     2.424][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([2]), l2 = summarise())
[     2.425][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter([2]), l2 = left_join())
[     2.429][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter([2]), l2 = union())
[     2.456][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([3]))
[     2.462][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter([3]), l2 = intersect())
[     2.500][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter([4]))
[     2.507][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([4]), l2 = semi_join())
[     2.624][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = summarise())
[     2.630][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter([4]), l2 = cross_join())
[     2.738][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([4]), l2 = mutate())
[     2.744][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter([4]), l2 = mutate())
[     2.835][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     3.143][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     3.416][cube-solver-2][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter([5]), l2 = inner_join())
[     3.714][cube-solver-1][DEBUG] Solving cube (l0 = summarise([3]), l1 = anti_join(), l2 = filter([6]))
[     4.504][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     4.984][cube-solver-0][DEBUG] Solving cube (l0 = summarise([3]), l1 = left_join(), l2 = filter([10]))
[     5.348][cube-solver-10][DEBUG] Found solution with cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     5.349][MainProcess][INFO] Statistics:
[     5.349][MainProcess][INFO] 	Generated cubes: 35
[     5.349][MainProcess][INFO] 	Attempted programs: 96
[     5.349][MainProcess][INFO] 		Rejected: 33
[     5.349][MainProcess][INFO] 		Failed: 62
[     5.350][MainProcess][INFO] 	Blacklist clauses: 13
[     5.350][MainProcess][DEBUG] Priting statistics for good programs of size 2
[     5.350][MainProcess][DEBUG] 	0: Counter({'mutate': 285, 'summarise': 156, 'filter': 108})
[     5.351][MainProcess][DEBUG] 	1: Counter({'filter': 441, 'mutate': 60, 'summarise': 48})
[     5.351][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     5.352][MainProcess][DEBUG] 	0: Counter({'summarise': 2293})
[     5.353][MainProcess][DEBUG] 	1: Counter({'filter': 1829, 'natural_join': 321, 'anti_join': 108, 'left_join': 35})
[     5.354][MainProcess][DEBUG] 	2: Counter({'filter': 680, 'union': 345, 'left_join': 286, 'natural_join': 228, 'natural_join3': 177, 'semi_join': 156, 'inner_join': 144, 'mutate': 133, 'anti_join': 120, 'summarise': 24})
[     5.355][MainProcess][INFO] Solution found: filter(natural_join(summarise(@param0, minID = min(ID), PRODUCT), @param0), str_detect(SKU, 'FOO-') & minID == ID)
[     5.418][cube-solver-0][DEBUG] Found solution with cube (l0 = summarise([3]), l1 = left_join(), l2 = filter([10]))
[     5.852][MainProcess][ERROR] Error while trying to convert R code to SQL.

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i017.csv", col_types = cols(ID = col_integer(),SKU = col_character(),PRODUCT = col_character()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o017.csv", col_types = cols(ID = col_integer(),SKU = col_character(),PRODUCT = col_character()))

df2 <- input1 %>% group_by(PRODUCT) %>% summarise(minID = min(ID)) %>% ungroup()
df3 <- inner_join(df2, input1)
df4 <- df3 %>% filter(str_detect(SKU, 'FOO-') & minID == ID)
out <- df4 %>% select(ID = minID, SKU, PRODUCT) %>% arrange(ID)

Failed to generate SQL query
