[     1.658][MainProcess][INFO] Parsing specification...
[     1.672][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.672][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.673][MainProcess][DEBUG] Reading input files...
[     1.685][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i006.csv: ['int64', 'string', 'string']
[     1.692][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o006.csv: ['int64', 'string', 'string']
[     1.720][MainProcess][DEBUG] Generating DSL...
[     1.877][MainProcess][INFO] Creating 16 processes
[     1.954][MainProcess][DEBUG] Increasing generator loc to 2
[     2.051][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     2.052][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     2.062][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.064][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     2.067][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     2.071][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     2.072][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     2.083][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     2.088][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     2.093][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     2.096][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     2.102][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     2.114][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     2.134][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     2.185][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     2.232][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     5.515][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     5.553][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     6.022][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     6.046][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     8.932][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate())
[     8.932][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([3]))
[     8.932][cube-solver-5][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate())
[     8.944][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([3]))
[     8.957][cube-solver-9][DEBUG] Solving cube (l0 = summarise([3]), l1 = natural_join3())
[     8.965][cube-solver-5][DEBUG] Solving cube (l0 = summarise([3]), l1 = cross_join())
[     8.965][cube-solver-3][DEBUG] Solving cube (l0 = summarise([3]), l1 = mutate())
[     8.968][cube-solver-13][DEBUG] Solving cube (l0 = summarise([3]), l1 = anti_join())
[     8.985][cube-solver-8][DEBUG] Solving cube (l0 = summarise([3]), l1 = natural_join())
[     8.991][cube-solver-12][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter())
[     8.993][cube-solver-4][DEBUG] Solving cube (l0 = summarise([3]), l1 = inner_join())
[     8.994][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([3]))
[     8.995][cube-solver-10][DEBUG] Solving cube (l0 = summarise([3]), l1 = natural_join4())
[     8.999][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([3]))
[     9.008][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     9.011][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([3]))
[     9.027][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([3]))
[     9.034][cube-solver-2][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate())
[     9.036][cube-solver-11][DEBUG] Solving cube (l0 = summarise([3]), l1 = summarise([3]))
[     9.058][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = mutate())
[     9.060][cube-solver-2][DEBUG] Solving cube (l0 = union(), l1 = mutate())
[     9.062][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = summarise([3]))
[     9.087][cube-solver-14][DEBUG] Solving cube (l0 = summarise([3]), l1 = left_join())
[     9.097][cube-solver-11][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([3]))
[     9.356][cube-solver-15][DEBUG] Solving cube (l0 = summarise([3]), l1 = union())
[     9.417][cube-solver-7][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate())
[     9.451][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = mutate())
[     9.611][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([3]))
[     9.713][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate())
[     9.734][cube-solver-6][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([3]))
[     9.739][cube-solver-2][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate())
[     9.766][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join())
[     9.992][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3())
[    10.020][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4())
[    10.040][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([3]))
[    10.251][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[    10.252][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join())
[    10.355][cube-solver-4][DEBUG] Found solution with cube (l0 = summarise([3]), l1 = inner_join())
[    10.356][MainProcess][INFO] Statistics:
[    10.356][MainProcess][INFO] 	Generated cubes: 41
[    10.356][MainProcess][INFO] 	Attempted programs: 105
[    10.356][MainProcess][INFO] 		Rejected: 49
[    10.356][MainProcess][INFO] 		Failed: 55
[    10.357][MainProcess][INFO] 	Blacklist clauses: 48
[    10.357][MainProcess][DEBUG] Printing statistics for good programs of size 1
[    10.357][MainProcess][DEBUG] 	0: Counter({'mutate': 60, 'summarise': 48})
[    10.357][MainProcess][DEBUG] Printing statistics for good programs of size 2
[    10.358][MainProcess][DEBUG] 	0: Counter({'summarise': 986, 'left_join': 108, 'union': 108, 'semi_join': 108, 'mutate': 94})
[    10.359][MainProcess][DEBUG] 	1: Counter({'mutate': 311, 'natural_join': 194, 'summarise': 158, 'inner_join': 137, 'anti_join': 131, 'cross_join': 126, 'left_join': 124, 'union': 115, 'filter': 108})
[    10.359][MainProcess][INFO] Solution found: inner_join(summarise(@param0, maxId = max(Id), Name), @param0, 'maxId' = 'Id','Name' = 'Name')

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i006.csv", col_types = cols(Id = col_integer(),Name = col_character(),Other_Columns = col_character()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o006.csv", col_types = cols(Id = col_integer(),Name = col_character(),Other_Columns = col_character()))

df2 <- input1 %>% group_by(Name) %>% summarise(maxId = max(Id)) %>% ungroup()
df3 <- inner_join(df2, input1, by=c('maxId' = 'Id','Name' = 'Name'), suffix = c('', '.other'))
out <- df3 %>% select(Id = maxId, Name, Other_Columns) %>% arrange(Id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT maxId AS Id,
       Name,
       Other_Columns
FROM
  (SELECT LHS.Name AS Name,
          LHS.maxId AS maxId,
          RHS.Other_Columns AS Other_Columns
   FROM
     (SELECT Name,
             MAX(Id) AS maxId
      FROM input1
      GROUP BY Name) AS LHS
   INNER JOIN input1 AS RHS ON (LHS.maxId = RHS.Id
                                AND LHS.Name = RHS.Name))
ORDER BY Id
