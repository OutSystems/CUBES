[     1.610][MainProcess][INFO] Parsing specification...
[     1.613][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.613][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.614][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.614][MainProcess][DEBUG] Reading input files...
[     1.622][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i031.csv: ['int64', 'string', 'int64']
[     1.627][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o031.csv: ['int64', 'int64', 'string']
[     1.654][MainProcess][DEBUG] Generating DSL...
[     1.679][MainProcess][INFO] Creating 16 processes
[     1.756][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.756][MainProcess][DEBUG] Increasing generator loc to 3
[     1.756][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.756][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.756][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.757][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.757][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.757][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.758][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.761][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.768][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.771][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.789][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.790][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.792][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.803][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.815][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.246][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.449][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.540][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.646][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.663][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.669][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     2.674][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.680][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     2.684][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     2.687][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     2.691][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.694][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.700][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.704][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.710][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.723][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.742][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.749][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.762][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     2.770][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.831][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.832][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.837][cube-solver-11][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.839][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     2.894][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.900][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     3.070][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     3.074][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     3.079][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     3.085][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     3.198][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     3.240][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     3.471][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     3.497][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     3.502][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter())
[     3.759][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     4.071][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter())
[     4.163][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join(), l2 = filter())
[     4.167][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = inner_join())
[     4.341][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     4.565][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter())
[     4.785][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter())
[     4.912][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join(), l2 = filter())
[     6.535][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter())
[     6.789][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join(), l2 = filter())
[     7.117][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise())
[     8.208][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     8.405][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise())
[     8.408][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     8.410][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise())
[     8.412][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     8.414][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join())
[     8.574][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join3())
[     9.759][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join4())
[     9.761][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = summarise())
[     9.763][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = filter())
[    11.040][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = anti_join())
[    12.602][cube-solver-3][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = left_join())
[    12.849][cube-solver-8][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = union())
[    13.781][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = intersect())
[    15.288][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = semi_join())
[    18.410][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = cross_join())
[    18.653][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = mutate())
[    18.832][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = inner_join())
[    19.375][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise())
[    19.779][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[    20.820][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise())
[    21.348][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[    22.374][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise())
[    22.649][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[    24.524][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise())
[    24.998][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[    25.828][cube-solver-5][DEBUG] Found solution with cube (l0 = filter(), l1 = union(), l2 = mutate())
[    25.831][MainProcess][INFO] Statistics:
[    25.832][MainProcess][INFO] 	Generated cubes: 68
[    25.832][MainProcess][INFO] 	Attempted programs: 2109
[    25.832][MainProcess][INFO] 		Rejected: 878
[    25.832][MainProcess][INFO] 		Failed: 1230
[    25.833][MainProcess][INFO] 	Blacklist clauses: 0
[    25.833][MainProcess][DEBUG] Printing statistics for good programs of size 2
[    25.834][MainProcess][DEBUG] 	0: Counter({'filter': 168, 'mutate': 96, 'summarise': 48})
[    25.834][MainProcess][DEBUG] 	1: Counter({'filter': 144, 'mutate': 96, 'summarise': 72})
[    25.834][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    25.860][MainProcess][DEBUG] 	0: Counter({'summarise': 25219, 'filter': 13598})
[    25.874][MainProcess][DEBUG] 	1: Counter({'filter': 16036, 'summarise': 11092, 'cross_join': 2741, 'inner_join': 2218, 'anti_join': 1814, 'left_join': 1704, 'natural_join': 1488, 'union': 1437, 'semi_join': 240, 'mutate': 48})
[    25.885][MainProcess][DEBUG] 	2: Counter({'filter': 9711, 'natural_join3': 4981, 'natural_join': 4035, 'left_join': 3545, 'union': 3527, 'cross_join': 3353, 'inner_join': 3020, 'anti_join': 2772, 'mutate': 1472, 'summarise': 1203, 'semi_join': 1200})
[    25.886][MainProcess][INFO] Solution found: mutate(union(filter(@param0, name == 'Beta'), filter(@param0, name == 'Beta')), n = n())
[    26.200][cube-solver-1][DEBUG] Found solution with cube (l0 = filter(), l1 = union(), l2 = summarise())
[    26.295][MainProcess][ERROR] Error while trying to convert R code to SQL.

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i031.csv", col_types = cols(id = col_integer(),name = col_character(),name_ascii = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o031.csv", col_types = cols(id = col_integer(),n = col_integer(),name = col_character()))

df2 <- input1 %>% filter(name == 'Beta')
df3 <- bind_rows(df2, df2)
df4 <- df3 %>% mutate(n = n())
out <- df4 %>% select(id, n, name) %>% distinct() %>% arrange(id)

Failed to generate SQL query
