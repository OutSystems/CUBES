[     3.441][MainProcess][INFO] Parsing specification...
[     3.458][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.458][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.460][MainProcess][DEBUG] Reading input files...
[     3.483][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i051.csv: ['int64', 'string', 'datetime64[ns]']
[     3.498][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o051.csv: ['int64', 'string', 'datetime64[ns]']
[     3.553][MainProcess][DEBUG] Generating DSL...
[     3.772][MainProcess][INFO] Creating 16 processes
[     3.837][MainProcess][DEBUG] Increasing generator loc to 2
[     3.973][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.974][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     3.982][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     3.986][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     3.987][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.989][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     3.993][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     3.996][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     4.000][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     4.002][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     4.008][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     4.016][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     4.021][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     4.029][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     4.044][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     4.082][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     7.062][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     7.122][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     7.523][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     7.547][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[    10.165][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise())
[    10.201][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join())
[    10.217][cube-solver-5][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate())
[    10.218][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate())
[    10.245][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise())
[    10.248][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = left_join())
[    10.259][cube-solver-7][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate())
[    10.261][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3())
[    10.263][cube-solver-11][DEBUG] Solving cube (l0 = summarise(), l1 = summarise())
[    10.271][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[    10.274][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join())
[    10.276][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = mutate())
[    10.276][cube-solver-3][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join())
[    10.291][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4())
[    10.293][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[    10.311][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[    10.314][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate())
[    10.316][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise())
[    10.332][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = summarise())
[    10.341][cube-solver-11][DEBUG] Solving cube (l0 = union(), l1 = summarise())
[    10.345][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = mutate())
[    10.346][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = mutate())
[    10.346][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = summarise())
[    10.387][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join())
[    10.391][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise())
[    10.394][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = union())
[    10.422][cube-solver-4][DEBUG] Solving cube (l0 = intersect(), l1 = mutate())
[    10.519][cube-solver-4][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise())
[    10.673][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate())
[    10.803][cube-solver-6][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise())
[    10.815][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate())
[    10.819][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join())
[    10.841][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3())
[    10.858][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4())
[    10.877][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = summarise())
[    10.937][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[    10.942][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join())
[    11.078][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = left_join())
[    11.273][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = union())
[    11.632][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = intersect())
[    11.733][cube-solver-11][DEBUG] Found solution with cube (l0 = mutate(), l1 = filter())
[    11.734][MainProcess][INFO] Statistics:
[    11.735][MainProcess][INFO] 	Generated cubes: 44
[    11.735][MainProcess][INFO] 	Attempted programs: 66
[    11.735][MainProcess][INFO] 		Rejected: 43
[    11.735][MainProcess][INFO] 		Failed: 22
[    11.735][MainProcess][INFO] 	Blacklist clauses: 76
[    11.735][MainProcess][DEBUG] Printing statistics for good programs of size 1
[    11.736][MainProcess][DEBUG] 	0: Counter({'mutate': 48, 'summarise': 36})
[    11.736][MainProcess][DEBUG] Printing statistics for good programs of size 2
[    11.737][MainProcess][DEBUG] 	0: Counter({'summarise': 952, 'mutate': 450, 'union': 84, 'left_join': 84, 'semi_join': 84, 'cross_join': 25})
[    11.738][MainProcess][DEBUG] 	1: Counter({'left_join': 241, 'natural_join': 237, 'filter': 216, 'anti_join': 199, 'union': 194, 'mutate': 193, 'summarise': 144, 'inner_join': 128, 'cross_join': 127})
[    11.738][MainProcess][INFO] Solution found: filter(mutate(@param0, maxdate = max(date)), maxdate == date)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i051.csv", col_types = cols(id = col_integer(),category = col_character(),date = col_character()))
input1$date <- ymd(input1$date)
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o051.csv", col_types = cols(id = col_integer(),category = col_character(),date = col_character()))
expected_output$date <- ymd(expected_output$date)

df2 <- input1 %>% mutate(maxdate = max(date))
df3 <- df2 %>% filter(maxdate == date)
out <- df3 %>% select(id, category, date) %>% arrange(id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT id,
       category, date
FROM
  (SELECT id,
          category, date, MAX(date) OVER () AS maxdate
   FROM input1)
WHERE (maxdate = date)
ORDER BY id
