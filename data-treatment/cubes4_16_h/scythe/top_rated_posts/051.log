[     3.496][MainProcess][INFO] Parsing specification...
[     3.500][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.500][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.501][MainProcess][DEBUG] Reading input files...
[     3.510][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i051.csv: ['int64', 'string', 'datetime64[ns]']
[     3.516][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o051.csv: ['int64', 'string', 'datetime64[ns]']
[     3.554][MainProcess][DEBUG] Generating DSL...
[     3.576][MainProcess][INFO] Creating 16 processes
[     3.650][MainProcess][DEBUG] Increasing generator loc to 2
[     3.650][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     3.651][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     3.651][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.651][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.651][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     3.651][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     3.654][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     3.655][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     3.663][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     3.666][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     3.671][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     3.686][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     3.690][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     3.690][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     3.695][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     3.705][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     3.771][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     3.800][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     3.846][cube-solver-7][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate())
[     3.847][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = intersect())
[     3.850][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise())
[     3.853][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join())
[     3.857][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join())
[     3.860][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise())
[     3.862][cube-solver-2][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join())
[     3.863][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3())
[     3.864][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4())
[     3.866][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = mutate())
[     3.867][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join())
[     3.883][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join())
[     3.889][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = union())
[     3.895][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise())
[     3.898][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     3.899][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     3.901][cube-solver-4][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise())
[     3.903][cube-solver-4][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate())
[     3.905][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = summarise())
[     3.909][cube-solver-11][DEBUG] Solving cube (l0 = summarise(), l1 = summarise())
[     3.911][cube-solver-11][DEBUG] Solving cube (l0 = left_join(), l1 = mutate())
[     3.921][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = left_join())
[     3.990][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     3.991][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate())
[     3.991][cube-solver-5][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate())
[     3.994][cube-solver-3][DEBUG] Solving cube (l0 = union(), l1 = mutate())
[     3.994][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = summarise())
[     4.139][cube-solver-2][DEBUG] Solving cube (l0 = intersect(), l1 = summarise())
[     4.295][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = mutate())
[     4.318][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     4.354][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     4.363][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise())
[     4.406][cube-solver-2][DEBUG] Solving cube (l0 = cross_join([1]), l1 = mutate())
[     4.409][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join())
[     4.431][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3())
[     4.433][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4())
[     4.436][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = summarise())
[     4.444][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     4.471][cube-solver-9][DEBUG] Found solution with cube (l0 = mutate(), l1 = filter())
[     4.473][MainProcess][INFO] Statistics:
[     4.473][MainProcess][INFO] 	Generated cubes: 40
[     4.473][MainProcess][INFO] 	Attempted programs: 65
[     4.473][MainProcess][INFO] 		Rejected: 18
[     4.473][MainProcess][INFO] 		Failed: 46
[     4.474][MainProcess][INFO] 	Blacklist clauses: 1
[     4.474][MainProcess][DEBUG] Priting statistics for good programs of size 1
[     4.475][MainProcess][DEBUG] 	0: Counter({'mutate': 48, 'summarise': 36})
[     4.475][MainProcess][DEBUG] Priting statistics for good programs of size 2
[     4.475][MainProcess][DEBUG] 	0: Counter({'summarise': 324, 'left_join': 79, 'union': 62, 'mutate': 4})
[     4.476][MainProcess][DEBUG] 	1: Counter({'mutate': 101, 'natural_join': 65, 'summarise': 64, 'left_join': 49, 'semi_join': 48, 'union': 43, 'inner_join': 42, 'filter': 32, 'anti_join': 26})
[     4.476][MainProcess][INFO] Solution found: filter(mutate(@param0, maxdate = max(date)), maxdate == date)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i051.csv", col_types = cols(id = col_integer(),category = col_character(),date = col_character()))
input1$date <- ymd(input1$date)
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o051.csv", col_types = cols(id = col_integer(),category = col_character(),date = col_character()))
expected_output$date <- ymd(expected_output$date)

df2 <- input1 %>% mutate(maxdate = max(date))
df3 <- df2 %>% filter(maxdate == date)
out <- df3 %>% select(id, category, date) %>% arrange(id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT id,
       category, date
FROM
  (SELECT id,
          category, date, MAX(date) OVER () AS maxdate
   FROM input1)
WHERE (maxdate = date)
ORDER BY id
