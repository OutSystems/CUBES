[     1.561][MainProcess][INFO] Parsing specification...
[     1.564][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.564][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.565][MainProcess][DEBUG] Reading input files...
[     1.573][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i008_1.csv: ['int64', 'string', 'string']
[     1.579][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i008_2.csv: ['string', 'int64', 'int64', 'string']
[     1.585][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o008.csv: ['string', 'int64', 'string']
[     1.614][MainProcess][DEBUG] Generating DSL...
[     1.636][MainProcess][INFO] Creating 16 processes
[     1.694][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     1.694][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.694][MainProcess][DEBUG] Increasing generator loc to 2
[     1.695][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.695][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.696][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     1.699][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     1.700][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     1.707][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     1.710][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     1.711][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     1.714][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     1.720][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     1.721][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     1.737][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     1.742][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     1.746][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     1.924][cube-solver-0][WARNING] There is no solution for current loc (1).
[     1.924][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     1.925][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.049][cube-solver-1][WARNING] There is no solution for current loc (1).
[     2.049][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     2.051][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     2.090][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise())
[     2.096][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = mutate())
[     2.098][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join())
[     2.099][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join())
[     2.107][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4())
[     2.111][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise())
[     2.119][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3())
[     2.135][cube-solver-5][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate())
[     2.136][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([2]))
[     2.138][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate())
[     2.143][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([3]))
[     2.154][cube-solver-11][DEBUG] Solving cube (l0 = summarise([4]), l1 = summarise([4]))
[     2.164][cube-solver-11][DEBUG] Solving cube (l0 = left_join(), l1 = mutate())
[     2.178][cube-solver-12][DEBUG] Solving cube (l0 = summarise([5]), l1 = anti_join([5]))
[     2.189][cube-solver-13][DEBUG] Solving cube (l0 = summarise([5]), l1 = left_join())
[     2.211][cube-solver-11][DEBUG] Solving cube (l0 = union(), l1 = summarise([6]))
[     2.258][cube-solver-4][DEBUG] Found solution with cube (l0 = left_join(), l1 = summarise([3]))
[     2.259][MainProcess][INFO] Statistics:
[     2.260][MainProcess][INFO] 	Generated cubes: 25
[     2.260][MainProcess][INFO] 	Attempted programs: 3
[     2.260][MainProcess][INFO] 		Rejected: 0
[     2.260][MainProcess][INFO] 		Failed: 2
[     2.260][MainProcess][INFO] 	Blacklist clauses: 16
[     2.260][MainProcess][DEBUG] Printing statistics for good programs of size 2
[     2.260][MainProcess][DEBUG] 	0: Counter({'summarise': 14, 'left_join': 5, 'union': 1})
[     2.261][MainProcess][DEBUG] 	1: Counter({'natural_join3': 10, 'summarise': 6, 'natural_join': 4})
[     2.261][MainProcess][INFO] Solution found: summarise(left_join(@param1, @param0), all$first, OrderNumber, Quantity)
[     2.734][MainProcess][ERROR] Error while trying to convert R code to SQL.

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i008_1.csv", col_types = cols(OrderID = col_integer(),OrderGUID = col_character(),OrderNumber = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i008_2.csv", col_types = cols(LineItemGUID = col_character(),OrderID = col_integer(),Quantity = col_integer(),Description = col_character()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o008.csv", col_types = cols(OrderNumber = col_character(),Quantity = col_integer(),Description = col_character()))

df3 <- left_join(input2, input1)
df4 <- df3 %>% group_by(OrderNumber, Quantity) %>% summarise_all(first) %>% ungroup()
out <- df4 %>% select(OrderNumber, Quantity, Description) %>% arrange(OrderNumber)

Failed to generate SQL query
