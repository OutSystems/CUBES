[     1.598][MainProcess][INFO] Parsing specification...
[     1.601][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.601][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.602][MainProcess][DEBUG] Reading input files...
[     1.623][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i057.csv: ['int64', 'string', 'string', 'int64']
[     1.632][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o057.csv: ['string', 'string', 'int64']
[     1.661][MainProcess][DEBUG] Generating DSL...
[     1.833][MainProcess][INFO] Creating 16 processes
[     1.905][MainProcess][DEBUG] Increasing generator loc to 2
[     2.025][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     2.028][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     2.029][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     2.037][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     2.040][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     2.047][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     2.053][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     2.054][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     2.058][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     2.073][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     2.074][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     2.084][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     2.085][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     2.104][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     2.112][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     2.170][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     5.184][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     5.188][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     6.168][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     6.395][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     8.434][cube-solver-5][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate())
[     8.439][cube-solver-4][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([4]))
[     8.447][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate())
[     8.454][cube-solver-8][DEBUG] Solving cube (l0 = summarise([4]), l1 = natural_join())
[     8.461][cube-solver-9][DEBUG] Solving cube (l0 = summarise([4]), l1 = natural_join3())
[     8.463][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([4]))
[     8.467][cube-solver-5][DEBUG] Solving cube (l0 = summarise([4]), l1 = cross_join())
[     8.469][cube-solver-12][DEBUG] Solving cube (l0 = summarise([4]), l1 = filter())
[     8.481][cube-solver-3][DEBUG] Solving cube (l0 = summarise([4]), l1 = mutate())
[     8.483][cube-solver-13][DEBUG] Solving cube (l0 = summarise([4]), l1 = anti_join())
[     8.492][cube-solver-10][DEBUG] Solving cube (l0 = summarise([4]), l1 = natural_join4())
[     8.499][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([4]))
[     8.502][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]))
[     8.502][cube-solver-11][DEBUG] Solving cube (l0 = summarise([4]), l1 = summarise([4]))
[     8.504][cube-solver-4][DEBUG] Solving cube (l0 = summarise([4]), l1 = inner_join())
[     8.520][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([4]))
[     8.527][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     8.539][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate())
[     8.555][cube-solver-11][DEBUG] Solving cube (l0 = union(), l1 = summarise([4]))
[     8.557][cube-solver-2][DEBUG] Solving cube (l0 = left_join(), l1 = mutate())
[     8.557][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([4]))
[     8.558][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([4]))
[     8.563][cube-solver-7][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate())
[     8.566][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = mutate())
[     8.570][cube-solver-15][DEBUG] Solving cube (l0 = summarise([4]), l1 = union())
[     8.589][cube-solver-14][DEBUG] Solving cube (l0 = summarise([4]), l1 = left_join())
[     8.608][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = mutate())
[     8.893][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([4]))
[    10.054][cube-solver-11][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate())
[    10.121][cube-solver-2][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([4]))
[    10.165][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate())
[    10.230][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join())
[    10.259][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3())
[    10.284][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4())
[    10.306][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([4]))
[    10.637][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[    10.916][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join())
[    11.337][cube-solver-8][DEBUG] Found solution with cube (l0 = summarise([4]), l1 = natural_join())
[    11.340][MainProcess][INFO] Statistics:
[    11.340][MainProcess][INFO] 	Generated cubes: 41
[    11.340][MainProcess][INFO] 	Attempted programs: 227
[    11.340][MainProcess][INFO] 		Rejected: 95
[    11.340][MainProcess][INFO] 		Failed: 131
[    11.340][MainProcess][INFO] 	Blacklist clauses: 48
[    11.341][MainProcess][DEBUG] Printing statistics for good programs of size 1
[    11.341][MainProcess][DEBUG] 	0: Counter({'mutate': 168, 'summarise': 108})
[    11.341][MainProcess][DEBUG] Printing statistics for good programs of size 2
[    11.343][MainProcess][DEBUG] 	0: Counter({'summarise': 2073, 'mutate': 355, 'left_join': 276, 'union': 276, 'semi_join': 273, 'cross_join': 117})
[    11.344][MainProcess][DEBUG] 	1: Counter({'mutate': 889, 'summarise': 413, 'natural_join': 392, 'left_join': 346, 'inner_join': 293, 'union': 273, 'filter': 271, 'anti_join': 253, 'cross_join': 240})
[    11.345][MainProcess][INFO] Solution found: natural_join(@param0, summarise(@param0, Birthyear = min(Birthyear), City))
[    11.820][cube-solver-14][DEBUG] Found solution with cube (l0 = summarise([4]), l1 = left_join())

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i057.csv", col_types = cols(ID = col_integer(),Name = col_character(),City = col_character(),Birthyear = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o057.csv", col_types = cols(Name = col_character(),City = col_character(),minBirthyear = col_integer()))

df2 <- input1 %>% group_by(City) %>% summarise(Birthyear = min(Birthyear)) %>% ungroup()
df3 <- inner_join(input1, df2)
out <- df3 %>% select(Name, City, minBirthyear = Birthyear) %>% arrange(Name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT Name,
       City,
       Birthyear AS minBirthyear
FROM
  (SELECT LHS.ID AS ID,
          LHS.Name AS Name,
          LHS.City AS City,
          LHS.Birthyear AS Birthyear
   FROM input1 AS LHS
   INNER JOIN
     (SELECT City,
             MIN(Birthyear) AS Birthyear
      FROM input1
      GROUP BY City) AS RHS ON (LHS.City = RHS.City
                                AND LHS.Birthyear = RHS.Birthyear))
ORDER BY Name
