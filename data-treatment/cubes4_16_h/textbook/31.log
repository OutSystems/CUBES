[     1.645][MainProcess][INFO] Parsing specification...
[     1.649][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.649][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.650][MainProcess][DEBUG] Reading input files...
[     1.657][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/aircraft.txt: ['int64', 'string', 'int64']
[     1.661][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/certified.txt: ['int64', 'int64']
[     1.666][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/employees.txt: ['int64', 'string', 'int64']
[     1.670][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/31.out: ['string']
[     1.699][MainProcess][DEBUG] Generating DSL...
[     1.720][MainProcess][INFO] Creating 16 processes
[     1.779][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.779][MainProcess][DEBUG] Increasing generator loc to 2
[     1.780][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.781][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.781][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.781][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     1.784][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     1.788][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     1.795][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     1.799][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     1.800][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     1.803][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     1.811][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     1.823][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     1.825][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     1.830][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     1.833][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     2.127][cube-solver-0][WARNING] There is no solution for current loc (1).
[     2.128][cube-solver-0][DEBUG] Solving cube (l0 = filter(),)
[     2.129][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     2.275][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter())
[     2.281][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4())
[     2.289][cube-solver-8][DEBUG] Solving cube (l0 = filter(), l1 = anti_join())
[     2.294][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = left_join())
[     2.295][cube-solver-8][DEBUG] Solving cube (l0 = union(), l1 = filter())
[     2.297][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = filter())
[     2.298][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = union())
[     2.298][cube-solver-8][DEBUG] Solving cube (l0 = semi_join(), l1 = filter())
[     2.300][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = filter())
[     2.301][MainProcess][DEBUG] Increasing generator loc to 3
[     2.301][cube-solver-8][DEBUG] Solving cube (l0 = inner_join(), l1 = filter())
[     2.301][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     2.303][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = semi_join())
[     2.303][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     2.304][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     2.309][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     2.316][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = filter())
[     2.317][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join())
[     2.322][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     2.323][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.350][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = filter([2]))
[     2.354][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     2.359][cube-solver-11][DEBUG] Solving cube (l0 = filter([3]), l1 = intersect())
[     2.364][cube-solver-5][DEBUG] Solving cube (l0 = filter([3]), l1 = natural_join3([1]))
[     2.366][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     2.369][cube-solver-3][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([3]))
[     2.376][cube-solver-14][DEBUG] Solving cube (l0 = filter([3]), l1 = inner_join())
[     2.377][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.383][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     2.414][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([7]))
[     2.424][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.721][cube-solver-13][DEBUG] Solving cube (l0 = filter([14]), l1 = cross_join())
[     2.731][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     2.794][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = filter([14]))
[     2.809][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     3.042][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([19]), l2 = left_join())
[     3.050][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([19]), l2 = semi_join())
[     3.099][cube-solver-10][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([19]), l2 = natural_join3([1]))
[     3.196][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = natural_join4())
[     3.216][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = anti_join())
[     3.239][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = cross_join())
[     3.256][cube-solver-9][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = natural_join([2]))
[     3.305][cube-solver-12][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = filter([20]))
[     3.321][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = union())
[     3.334][cube-solver-12][DEBUG] Solving cube (l0 = natural_join([2]), l1 = union(), l2 = filter([20]))
[     3.374][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = inner_join())
[     3.403][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = anti_join(), l2 = filter([20]))
[     3.414][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = intersect(), l2 = filter([20]))
[     3.487][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = filter([20]), l2 = intersect())
[     3.733][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = left_join(), l2 = filter([20]))
[     4.996][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = semi_join(), l2 = filter([20]))
[     6.370][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     6.990][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     7.272][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = cross_join(), l2 = filter([20]))
[     7.757][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = inner_join(), l2 = filter([20]))
[     8.026][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = natural_join([2]), l2 = filter([20]))
[     8.340][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = natural_join3([2]), l2 = filter([20]))
[     8.350][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = natural_join4(), l2 = filter([20]))
[     8.359][cube-solver-2][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = natural_join([2]))
[     9.072][cube-solver-3][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = natural_join3([2]))
[    10.980][cube-solver-12][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = natural_join4())
[    11.142][cube-solver-0][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = filter([20]))
[    11.272][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = anti_join())
[    11.554][cube-solver-7][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = left_join())
[    11.749][cube-solver-15][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = union())
[    13.890][cube-solver-13][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = intersect())
[    15.369][cube-solver-14][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = semi_join())
[    17.799][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = cross_join())
[    19.756][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[    20.585][cube-solver-6][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = inner_join())
[    25.139][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = anti_join(), l2 = filter([20]))
[    25.301][cube-solver-9][DEBUG] Found solution with cube (l0 = natural_join3([2]), l1 = filter([20]), l2 = anti_join())
[    25.302][MainProcess][INFO] Statistics:
[    25.303][MainProcess][INFO] 	Generated cubes: 55
[    25.303][MainProcess][INFO] 	Attempted programs: 4095
[    25.303][MainProcess][INFO] 		Rejected: 964
[    25.303][MainProcess][INFO] 		Failed: 3130
[    25.303][MainProcess][INFO] 	Blacklist clauses: 24
[    25.303][MainProcess][DEBUG] Priting statistics for good programs of size 2
[    25.305][MainProcess][DEBUG] 	0: Counter({'filter': 2160, 'natural_join3': 480})
[    25.306][MainProcess][DEBUG] 	1: Counter({'natural_join4': 1680, 'filter': 480, 'natural_join3': 480})
[    25.306][MainProcess][DEBUG] Priting statistics for good programs of size 3
[    25.314][MainProcess][DEBUG] 	0: Counter({'natural_join3': 14334, 'natural_join': 14004})
[    25.321][MainProcess][DEBUG] 	1: Counter({'filter': 24051, 'inner_join': 1128, 'union': 960, 'left_join': 960, 'natural_join': 960, 'semi_join': 280})
[    25.329][MainProcess][DEBUG] 	2: Counter({'filter': 6136, 'natural_join3': 4382, 'natural_join4': 4041, 'natural_join': 3216, 'left_join': 2742, 'union': 2723, 'inner_join': 1822, 'semi_join': 1796, 'anti_join': 1470, 'intersect': 12})
[    25.329][MainProcess][INFO] Solution found: anti_join(natural_join3(@param2, @param1, @param0), filter(@param0, str_detect(aname, 'Boeing') | crusingrange <= 3000), 'aname', 'crusingrange')
[    25.800][MainProcess][ERROR] Error while trying to convert R code to SQL.

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/aircraft.txt", col_types = cols(aid = col_integer(),aname = col_character(),crusingrange = col_integer()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/certified.txt", col_types = cols(eid = col_integer(),aid = col_integer()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/employees.txt", col_types = cols(eid = col_integer(),ename = col_character(),salary = col_integer()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/31.out", col_types = cols(ename = col_character()))

df4 <- inner_join(input3, input2) %>% inner_join(input1)
df5 <- input1 %>% filter(str_detect(aname, 'Boeing') | crusingrange <= 3000)
df6 <- anti_join(df4, df5, by=c('aname', 'crusingrange'))
out <- df6 %>% select(ename) %>% distinct() %>% arrange(ename)

Failed to generate SQL query
