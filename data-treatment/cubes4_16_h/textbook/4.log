[     3.084][MainProcess][INFO] Parsing specification...
[     3.097][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.097][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     3.098][MainProcess][DEBUG] Reading input files...
[     3.112][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/4-1.txt: ['string', 'string']
[     3.118][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/4-2.txt: ['string', 'string']
[     3.123][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/4-3.txt: ['string', 'string']
[     3.127][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/4.out: ['string']
[     3.163][MainProcess][DEBUG] Generating DSL...
[     3.194][MainProcess][INFO] Creating 16 processes
[     3.281][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.280][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.281][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.281][MainProcess][DEBUG] Increasing generator loc to 3
[     3.281][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.282][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     3.282][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     3.282][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     3.289][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     3.290][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     3.298][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     3.299][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     3.317][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     3.329][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     3.331][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     3.342][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     3.352][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     3.946][cube-solver-1][WARNING] There is no solution for current loc (2).
[     3.947][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     3.949][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     4.001][cube-solver-0][WARNING] There is no solution for current loc (2).
[     4.001][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     4.003][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     4.024][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     4.034][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     4.042][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     4.046][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     4.050][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     4.054][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     4.054][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     4.055][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     4.058][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     4.061][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     4.066][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     4.070][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     4.076][cube-solver-14][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = left_join())
[     4.081][cube-solver-14][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = union())
[     4.086][cube-solver-14][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter([1]), l2 = intersect())
[     4.090][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([1]))
[     4.091][cube-solver-2][WARNING] There is no solution for current loc (2).
[     4.092][cube-solver-14][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter([1]), l2 = semi_join())
[     4.092][cube-solver-2][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate())
[     4.093][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     4.097][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([1]), l2 = summarise([2]))
[     4.099][cube-solver-14][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter([1]), l2 = inner_join())
[     4.099][cube-solver-7][DEBUG] Solving cube (l0 = summarise([3]), l1 = filter([1]), l2 = mutate())
[     4.107][cube-solver-7][DEBUG] Solving cube (l0 = summarise([3]), l1 = left_join(), l2 = filter([1]))
[     4.107][cube-solver-14][DEBUG] Solving cube (l0 = summarise([3]), l1 = anti_join(), l2 = filter([1]))
[     4.107][cube-solver-9][DEBUG] Solving cube (l0 = summarise([3]), l1 = union(), l2 = filter([1]))
[     4.115][cube-solver-7][DEBUG] Solving cube (l0 = summarise([3]), l1 = intersect(), l2 = filter([1]))
[     4.115][cube-solver-14][DEBUG] Solving cube (l0 = summarise([3]), l1 = semi_join(), l2 = filter([1]))
[     4.116][cube-solver-9][DEBUG] Solving cube (l0 = summarise([3]), l1 = cross_join(), l2 = filter([1]))
[     4.122][cube-solver-7][DEBUG] Solving cube (l0 = summarise([4]), l1 = mutate(), l2 = filter([1]))
[     4.123][cube-solver-14][DEBUG] Solving cube (l0 = summarise([4]), l1 = inner_join(), l2 = filter([1]))
[     4.124][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = summarise([4]))
[     4.130][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join(), l2 = mutate())
[     4.131][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3(), l2 = summarise([4]))
[     4.131][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join3(), l2 = mutate())
[     4.135][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = summarise([4]))
[     4.136][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = natural_join4(), l2 = mutate())
[     4.139][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([4]), l2 = natural_join())
[     4.140][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([4]), l2 = natural_join3())
[     4.142][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([4]), l2 = natural_join4())
[     4.147][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([4]), l2 = summarise([4]))
[     4.147][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([4]), l2 = filter([1]))
[     4.148][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([4]), l2 = filter([1]))
[     4.150][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([4]), l2 = anti_join())
[     4.156][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([4]), l2 = left_join())
[     4.157][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([4]), l2 = union())
[     4.158][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([4]), l2 = intersect())
[     4.159][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([4]), l2 = semi_join())
[     4.164][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([4]), l2 = cross_join())
[     4.165][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([4]), l2 = mutate())
[     4.165][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([4]), l2 = inner_join())
[     4.167][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = summarise([4]))
[     4.172][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = mutate())
[     4.173][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = summarise([4]))
[     4.173][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = mutate())
[     4.175][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = summarise([4]))
[     4.177][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = mutate())
[     4.178][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = union(), l2 = summarise([4]))
[     4.180][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = union(), l2 = mutate())
[     4.182][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = intersect(), l2 = summarise([5]))
[     4.183][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = intersect(), l2 = mutate())
[     4.185][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = semi_join(), l2 = summarise([5]))
[     4.186][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = semi_join(), l2 = mutate())
[     4.187][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = cross_join(), l2 = summarise([5]))
[     4.190][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = cross_join(), l2 = mutate())
[     4.190][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join())
[     4.193][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join3())
[     4.195][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join4())
[     4.195][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = summarise([5]))
[     4.196][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = filter([1]))
[     4.198][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = anti_join())
[     4.199][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = left_join())
[     4.201][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = union())
[     4.202][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = intersect())
[     4.204][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = semi_join())
[     4.204][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = cross_join())
[     4.205][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = mutate())
[     4.206][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = inner_join())
[     4.208][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = inner_join(), l2 = mutate())
[     4.208][cube-solver-14][DEBUG] Solving cube (l0 = filter([1]), l1 = inner_join(), l2 = summarise([6]))
[     4.210][cube-solver-4][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([6]), l2 = filter([1]))
[     4.211][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([1]), l2 = summarise([6]))
[     4.213][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([1]), l2 = mutate())
[     4.216][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([2]))
[     4.218][cube-solver-14][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([2]))
[     4.218][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([6]), l2 = filter([2]))
[     4.220][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = summarise([6]))
[     4.221][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = mutate())
[     4.224][cube-solver-14][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([2]))
[     4.226][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = summarise([6]), l2 = filter([2]))
[     4.228][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = summarise([6]))
[     4.229][cube-solver-14][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = mutate())
[     4.230][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([2]))
[     4.233][cube-solver-3][WARNING] There is no solution for current loc (2).
[     4.234][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([6]), l2 = filter([2]))
[     4.234][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]))
[     4.235][cube-solver-14][DEBUG] Solving cube (l0 = intersect(), l1 = filter([2]), l2 = summarise([6]))
[     4.237][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([2]))
[     4.237][cube-solver-4][DEBUG] Solving cube (l0 = intersect(), l1 = filter([2]), l2 = mutate())
[     4.238][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     4.240][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([3]), l2 = summarise([6]))
[     4.243][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([3]), l2 = mutate())
[     4.246][cube-solver-14][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([3]))
[     4.247][cube-solver-4][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([7]), l2 = filter([3]))
[     4.247][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([3]), l2 = summarise([7]))
[     4.248][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([3]), l2 = mutate())
[     4.251][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([3]))
[     4.252][cube-solver-14][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([3]))
[     4.255][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([3]))
[     4.255][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter([3]))
[     4.258][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([9]), l2 = filter([3]))
[     4.260][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = natural_join())
[     4.265][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = natural_join3())
[     4.270][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = natural_join4())
[     4.284][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([9]), l2 = filter([4]))
[     4.288][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([4]), l2 = summarise([9]))
[     4.301][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = summarise([9]))
[     4.304][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = filter([5]))
[     4.310][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = anti_join())
[     4.315][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = left_join())
[     4.315][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([5]), l2 = union())
[     4.320][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([6]), l2 = intersect())
[     4.324][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([6]), l2 = semi_join())
[     4.324][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([6]), l2 = cross_join())
[     4.329][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([6]), l2 = mutate())
[     4.331][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([6]), l2 = inner_join())
[     4.333][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([6]))
[     4.338][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([6]))
[     4.342][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([6]))
[     4.343][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([7]))
[     4.348][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([7]))
[     4.352][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([7]))
[     4.353][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([7]))
[     4.357][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([7]))
[     4.359][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([10]), l2 = filter([7]))
[     4.367][cube-solver-12][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([7]), l2 = summarise([11]))
[     4.370][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([7]), l2 = mutate())
[     4.375][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([7]))
[     4.378][MainProcess][DEBUG] Increasing generator loc to 4
[     4.379][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[     4.381][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     4.467][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([7]), l2 = summarise([14]))
[     4.478][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     4.589][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([11]))
[     4.597][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     4.897][cube-solver-1][DEBUG] Solving cube (l0 = summarise([17]), l1 = natural_join(), l2 = filter([14]))
[     4.912][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     5.012][cube-solver-2][DEBUG] Solving cube (l0 = summarise([19]), l1 = filter([14]), l2 = cross_join())
[     5.028][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     5.056][cube-solver-0][DEBUG] Solving cube (l0 = summarise([19]), l1 = natural_join3([2]), l2 = filter([14]))
[     5.196][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([20]), l2 = filter([15]))
[     5.212][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     5.704][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([15]))
[     5.729][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([15]))
[     5.761][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([15]))
[     5.785][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = filter([15]), l3 = summarise([21]))
[     5.809][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = filter([15]), l3 = filter([15]))
[     5.830][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = anti_join())
[     5.869][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([15]))
[     5.895][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = left_join())
[     6.058][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     6.185][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join([2]))
[     6.297][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join3([2]))
[     6.505][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join4())
[     7.446][cube-solver-11][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = union())
[     7.682][cube-solver-8][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     7.684][MainProcess][INFO] Statistics:
[     7.685][MainProcess][INFO] 	Generated cubes: 154
[     7.685][MainProcess][INFO] 	Attempted programs: 113
[     7.685][MainProcess][INFO] 		Rejected: 89
[     7.685][MainProcess][INFO] 		Failed: 23
[     7.685][MainProcess][INFO] 	Blacklist clauses: 40
[     7.685][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     7.687][MainProcess][DEBUG] 	0: Counter({'mutate': 1310, 'natural_join3': 529, 'summarise': 520})
[     7.688][MainProcess][DEBUG] 	1: Counter({'filter': 865, 'natural_join3': 610, 'natural_join4': 355, 'summarise': 329, 'mutate': 200})
[     7.689][MainProcess][DEBUG] 	2: Counter({'filter': 1495, 'natural_join4': 440, 'natural_join3': 425})
[     7.690][MainProcess][DEBUG] Printing statistics for good programs of size 4
[     7.690][MainProcess][DEBUG] 	0: Counter({'natural_join': 747})
[     7.691][MainProcess][DEBUG] 	1: Counter({'summarise': 747})
[     7.691][MainProcess][DEBUG] 	2: Counter({'filter': 454, 'natural_join': 184, 'natural_join3': 109})
[     7.692][MainProcess][DEBUG] 	3: Counter({'filter': 293, 'natural_join': 160, 'natural_join4': 110, 'left_join': 104, 'natural_join3': 36, 'anti_join': 24, 'union': 20})
[     7.692][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param2, @param1, @param0), n = n(), S_name, meets_at), n == 2)
[     7.852][cube-solver-2][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join3([2]))
[     7.924][cube-solver-13][DEBUG] Found solution with cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([15]))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/4-1.txt", col_types = cols(C_name = col_character(),meets_at = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/4-2.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/4-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/4.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input3, input2) %>% inner_join(input1)
df5 <- df4 %>% group_by(S_name, meets_at) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n == 2)
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT S_name,
          meets_at,
          COUNT() AS n
   FROM
     (SELECT LHS.S_key AS S_key,
             LHS.S_name AS S_name,
             LHS.C_name AS C_name,
             RHS.meets_at AS meets_at
      FROM
        (SELECT LHS.S_key AS S_key,
                LHS.S_name AS S_name,
                RHS.C_name AS C_name
         FROM input3 AS LHS
         INNER JOIN input2 AS RHS ON (LHS.S_key = RHS.S_key)) AS LHS
      INNER JOIN input1 AS RHS ON (LHS.C_name = RHS.C_name))
   GROUP BY S_name,
            meets_at)
WHERE (n = 2.0)
ORDER BY S_name
