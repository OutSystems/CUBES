[     3.143][MainProcess][INFO] Parsing specification...
[     3.236][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.236][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.237][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     3.238][MainProcess][DEBUG] Reading input files...
[     3.249][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/2-1.txt: ['string', 'string']
[     3.255][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/2-2.txt: ['string', 'string']
[     3.260][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/2-3.txt: ['string', 'string']
[     3.267][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/2-4.txt: ['string', 'string', 'int64']
[     3.271][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/2.out: ['int64']
[     3.310][MainProcess][DEBUG] Generating DSL...
[     3.589][MainProcess][INFO] Creating 16 processes
[     3.671][MainProcess][DEBUG] Increasing generator loc to 3
[     3.963][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.971][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.977][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.999][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     4.008][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     4.008][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     4.009][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     4.019][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     4.019][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     4.023][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     4.024][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     4.029][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     4.033][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     4.042][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     4.072][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     4.074][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[    20.347][cube-solver-2][WARNING] There is no solution for current loc (2).
[    20.348][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[    20.353][cube-solver-1][WARNING] There is no solution for current loc (2).
[    20.353][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[    20.383][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[    20.387][cube-solver-3][WARNING] There is no solution for current loc (2).
[    20.388][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[    20.400][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[    20.435][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[    20.995][cube-solver-0][WARNING] There is no solution for current loc (2).
[    20.996][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[    21.026][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[    27.179][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[    27.186][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[    27.207][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[    27.251][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[    27.291][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[    27.298][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[    27.302][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4([2]), l1 = filter(), l2 = mutate())
[    27.306][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[    27.310][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4([2]), l1 = summarise(), l2 = filter())
[    27.368][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[    27.372][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[    27.406][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[    27.452][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4([2]))
[    27.477][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[    27.481][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[    27.483][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[    27.505][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[    27.538][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[    27.545][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[    27.553][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[    27.557][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise([1]))
[    27.573][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[    27.584][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[    27.584][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = inner_join())
[    27.592][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = mutate())
[    27.608][cube-solver-9][DEBUG] Solving cube (l0 = summarise([1]), l1 = anti_join(), l2 = filter())
[    27.654][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = intersect(), l2 = filter())
[    27.657][cube-solver-7][DEBUG] Solving cube (l0 = summarise([1]), l1 = left_join(), l2 = filter())
[    27.667][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = union(), l2 = filter())
[    27.682][cube-solver-9][DEBUG] Solving cube (l0 = summarise([2]), l1 = semi_join(), l2 = filter())
[    27.694][cube-solver-4][DEBUG] Solving cube (l0 = summarise([3]), l1 = cross_join(), l2 = filter())
[    27.713][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([3]))
[    27.727][cube-solver-5][DEBUG] Solving cube (l0 = summarise([3]), l1 = mutate(), l2 = filter())
[    27.730][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([4]))
[    27.731][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[    27.733][cube-solver-11][DEBUG] Solving cube (l0 = summarise([3]), l1 = inner_join(), l2 = filter())
[    27.738][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[    27.764][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4([7]), l2 = summarise([5]))
[    27.774][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4([8]), l2 = mutate())
[    27.796][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([6]), l2 = natural_join())
[    27.810][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = summarise([7]), l2 = summarise([7]))
[    27.819][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise([7]), l2 = natural_join3())
[    27.827][cube-solver-11][DEBUG] Solving cube (l0 = filter(), l1 = summarise([7]), l2 = natural_join4([10]))
[    27.840][cube-solver-9][DEBUG] Solving cube (l0 = filter(), l1 = summarise([8]), l2 = filter())
[    27.860][cube-solver-7][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([9]), l2 = anti_join())
[    27.863][cube-solver-6][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise([9]), l2 = left_join())
[    27.899][cube-solver-9][DEBUG] Solving cube (l0 = filter([5]), l1 = summarise([10]), l2 = intersect())
[    27.899][cube-solver-11][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([9]), l2 = union())
[    27.923][cube-solver-6][DEBUG] Solving cube (l0 = filter([6]), l1 = summarise([11]), l2 = cross_join())
[    27.928][cube-solver-7][DEBUG] Solving cube (l0 = filter([6]), l1 = summarise([11]), l2 = mutate())
[    27.934][cube-solver-5][DEBUG] Solving cube (l0 = filter([6]), l1 = summarise([11]), l2 = semi_join())
[    27.968][cube-solver-9][DEBUG] Solving cube (l0 = filter([8]), l1 = summarise([12]), l2 = inner_join())
[    27.984][cube-solver-11][DEBUG] Solving cube (l0 = filter([8]), l1 = filter([8]), l2 = summarise([12]))
[    27.987][cube-solver-7][DEBUG] Solving cube (l0 = filter([8]), l1 = filter([8]), l2 = mutate())
[    28.010][cube-solver-5][DEBUG] Solving cube (l0 = filter([8]), l1 = anti_join(), l2 = summarise([13]))
[    28.014][cube-solver-6][DEBUG] Solving cube (l0 = filter([10]), l1 = anti_join(), l2 = mutate())
[    28.048][cube-solver-7][DEBUG] Solving cube (l0 = filter([11]), l1 = left_join(), l2 = summarise([13]))
[    28.049][cube-solver-9][DEBUG] Solving cube (l0 = filter([11]), l1 = left_join(), l2 = mutate())
[    28.072][cube-solver-11][DEBUG] Solving cube (l0 = filter([12]), l1 = union(), l2 = summarise([13]))
[    28.087][cube-solver-6][DEBUG] Solving cube (l0 = filter([13]), l1 = intersect(), l2 = summarise([14]))
[    28.096][cube-solver-5][DEBUG] Solving cube (l0 = filter([13]), l1 = union(), l2 = mutate())
[    28.110][cube-solver-9][DEBUG] Solving cube (l0 = filter([15]), l1 = intersect(), l2 = mutate())
[    28.118][cube-solver-7][DEBUG] Solving cube (l0 = filter([15]), l1 = semi_join(), l2 = summarise([15]))
[    28.146][cube-solver-11][DEBUG] Solving cube (l0 = filter([15]), l1 = semi_join(), l2 = mutate())
[    28.154][cube-solver-6][DEBUG] Solving cube (l0 = filter([15]), l1 = cross_join(), l2 = summarise([16]))
[    28.172][cube-solver-9][DEBUG] Solving cube (l0 = filter([15]), l1 = mutate(), l2 = natural_join())
[    28.182][cube-solver-5][DEBUG] Solving cube (l0 = filter([15]), l1 = cross_join(), l2 = mutate())
[    28.188][cube-solver-7][DEBUG] Solving cube (l0 = filter([16]), l1 = mutate(), l2 = natural_join3())
[    28.212][cube-solver-11][DEBUG] Solving cube (l0 = filter([17]), l1 = mutate(), l2 = natural_join4([11]))
[    28.222][cube-solver-6][DEBUG] Solving cube (l0 = filter([18]), l1 = mutate(), l2 = summarise([18]))
[    28.232][cube-solver-9][DEBUG] Solving cube (l0 = filter([18]), l1 = mutate(), l2 = filter([18]))
[    28.263][cube-solver-5][DEBUG] Solving cube (l0 = filter([19]), l1 = mutate(), l2 = anti_join())
[    28.283][cube-solver-6][DEBUG] Solving cube (l0 = filter([20]), l1 = mutate(), l2 = left_join())
[    28.291][cube-solver-7][DEBUG] Solving cube (l0 = filter([20]), l1 = mutate(), l2 = union())
[    28.296][cube-solver-9][DEBUG] Solving cube (l0 = filter([20]), l1 = mutate(), l2 = intersect())
[    28.346][cube-solver-6][DEBUG] Solving cube (l0 = filter([23]), l1 = mutate(), l2 = cross_join())
[    28.351][cube-solver-7][DEBUG] Solving cube (l0 = filter([23]), l1 = mutate(), l2 = mutate())
[    28.356][cube-solver-5][DEBUG] Solving cube (l0 = filter([23]), l1 = mutate(), l2 = semi_join())
[    28.358][cube-solver-9][DEBUG] Solving cube (l0 = filter([23]), l1 = mutate(), l2 = inner_join())
[    28.411][cube-solver-7][DEBUG] Solving cube (l0 = filter([26]), l1 = inner_join(), l2 = summarise([22]))
[    28.417][cube-solver-6][DEBUG] Solving cube (l0 = filter([26]), l1 = inner_join(), l2 = mutate([1]))
[    28.423][cube-solver-9][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([22]), l2 = filter([26]))
[    28.436][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([26]), l2 = summarise([22]))
[    28.473][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([26]), l2 = mutate([2]))
[    28.480][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate([2]), l2 = filter([26]))
[    28.505][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([23]), l2 = filter([26]))
[    28.516][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = filter([26]), l2 = summarise([24]))
[    28.535][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = filter([26]), l2 = mutate([2]))
[    28.548][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = mutate([2]), l2 = filter([26]))
[    28.574][cube-solver-9][DEBUG] Solving cube (l0 = union(), l1 = summarise([25]), l2 = filter([26]))
[    28.588][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = filter([26]), l2 = summarise([25]))
[    28.593][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = filter([26]), l2 = mutate([2]))
[    28.605][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = mutate([2]), l2 = filter([27]))
[    28.645][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([27]), l2 = filter([27]))
[    28.655][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = filter([27]), l2 = summarise([27]))
[    28.662][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = filter([27]), l2 = mutate([2]))
[    28.666][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = mutate([2]), l2 = filter([27]))
[    28.719][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([30]), l2 = filter([27]))
[    28.727][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate([2]), l2 = filter([27]))
[    28.730][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([27]), l2 = summarise([30]))
[    28.732][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([27]), l2 = mutate([2]))
[    28.792][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([31]), l2 = filter([27]))
[    28.794][cube-solver-6][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([27]), l2 = mutate([2]))
[    28.797][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([27]), l2 = summarise([31]))
[    28.804][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate([2]), l2 = filter([27]))
[    28.853][cube-solver-6][DEBUG] Solving cube (l0 = mutate([2]), l1 = natural_join(), l2 = filter([27]))
[    28.869][cube-solver-9][DEBUG] Solving cube (l0 = mutate([2]), l1 = natural_join3(), l2 = filter([27]))
[    28.880][cube-solver-7][DEBUG] Solving cube (l0 = mutate([2]), l1 = summarise([32]), l2 = filter([27]))
[    28.882][cube-solver-5][DEBUG] Solving cube (l0 = mutate([2]), l1 = natural_join4([16]), l2 = filter([27]))
[    28.913][cube-solver-6][DEBUG] Solving cube (l0 = mutate([3]), l1 = filter([28]), l2 = natural_join())
[    28.954][cube-solver-7][DEBUG] Solving cube (l0 = mutate([4]), l1 = filter([28]), l2 = natural_join3())
[    28.969][cube-solver-9][DEBUG] Solving cube (l0 = mutate([4]), l1 = filter([28]), l2 = natural_join4([16]))
[    28.972][cube-solver-6][DEBUG] Solving cube (l0 = mutate([4]), l1 = filter([28]), l2 = summarise([33]))
[    29.040][cube-solver-6][DEBUG] Solving cube (l0 = mutate([4]), l1 = filter([30]), l2 = filter([30]))
[    29.061][cube-solver-7][DEBUG] Solving cube (l0 = mutate([5]), l1 = filter([30]), l2 = anti_join())
[    29.103][cube-solver-6][DEBUG] Solving cube (l0 = mutate([6]), l1 = filter([31]), l2 = left_join())
[    29.125][cube-solver-7][DEBUG] Solving cube (l0 = mutate([6]), l1 = filter([31]), l2 = union())
[    29.161][cube-solver-6][DEBUG] Solving cube (l0 = mutate([6]), l1 = filter([31]), l2 = intersect())
[    29.183][cube-solver-7][DEBUG] Solving cube (l0 = mutate([6]), l1 = filter([31]), l2 = semi_join())
[    29.225][cube-solver-6][DEBUG] Solving cube (l0 = mutate([6]), l1 = filter([31]), l2 = cross_join())
[    29.241][cube-solver-7][DEBUG] Solving cube (l0 = mutate([6]), l1 = filter([32]), l2 = mutate([6]))
[    29.287][cube-solver-6][DEBUG] Solving cube (l0 = mutate([6]), l1 = filter([32]), l2 = inner_join())
[    29.299][cube-solver-7][DEBUG] Solving cube (l0 = mutate([6]), l1 = anti_join(), l2 = filter([32]))
[    29.357][cube-solver-6][DEBUG] Solving cube (l0 = mutate([6]), l1 = left_join(), l2 = filter([32]))
[    29.370][cube-solver-7][DEBUG] Solving cube (l0 = mutate([6]), l1 = union(), l2 = filter([32]))
[    29.417][cube-solver-6][DEBUG] Solving cube (l0 = mutate([6]), l1 = intersect(), l2 = filter([32]))
[    29.433][cube-solver-7][DEBUG] Solving cube (l0 = mutate([6]), l1 = semi_join(), l2 = filter([32]))
[    29.473][cube-solver-6][DEBUG] Solving cube (l0 = mutate([6]), l1 = cross_join(), l2 = filter([32]))
[    29.478][cube-solver-14][DEBUG] Found solution with cube (l0 = natural_join4([2]), l1 = filter(), l2 = mutate())
[    29.479][MainProcess][INFO] Statistics:
[    29.479][MainProcess][INFO] 	Generated cubes: 137
[    29.479][MainProcess][INFO] 	Attempted programs: 26
[    29.479][MainProcess][INFO] 		Rejected: 10
[    29.479][MainProcess][INFO] 		Failed: 15
[    29.479][MainProcess][INFO] 	Blacklist clauses: 94
[    29.479][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    29.480][MainProcess][DEBUG] 	0: Counter({'natural_join4': 392, 'mutate': 14})
[    29.481][MainProcess][DEBUG] 	1: Counter({'filter': 240, 'mutate': 146, 'natural_join4': 14, 'summarise': 6})
[    29.481][MainProcess][DEBUG] 	2: Counter({'filter': 166, 'mutate': 134, 'summarise': 106})
[    29.481][MainProcess][INFO] Solution found: mutate(filter(natural_join4(@param1, @param3, @param0, @param2), F_name == 'faculty1' & major != 'History'), age = max(age))
[    29.491][cube-solver-7][DEBUG] Solving cube (l0 = mutate([6]), l1 = mutate([6]), l2 = filter([32]))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/2-1.txt", col_types = cols(C_name = col_character(),F_key = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/2-2.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/2-3.txt", col_types = cols(F_key = col_character(),F_name = col_character()))
input3 <- copy_to(con, input3)
input4 <- read_csv("tests-examples/textbook/tables/2-4.txt", col_types = cols(S_key = col_character(),major = col_character(),age = col_integer()))
input4 <- copy_to(con, input4)
expected_output <- read_csv("tests-examples/textbook/tables/2.out", col_types = cols(maxage = col_integer()))

df5 <- inner_join(input2, input4) %>% inner_join(input1) %>% inner_join(input3)
df6 <- df5 %>% filter(F_name == 'faculty1' & major != 'History')
df7 <- df6 %>% mutate(age = max(age))
out <- df7 %>% select(maxage = age) %>% distinct() %>% arrange(maxage)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT MAX(`age`) OVER () AS `maxage`
FROM
  (SELECT `LHS`.`S_key` AS `S_key`,
          `LHS`.`C_name` AS `C_name`,
          `LHS`.`major` AS `major`,
          `LHS`.`age` AS `age`,
          `LHS`.`F_key` AS `F_key`,
          `RHS`.`F_name` AS `F_name`
   FROM
     (SELECT `LHS`.`S_key` AS `S_key`,
             `LHS`.`C_name` AS `C_name`,
             `LHS`.`major` AS `major`,
             `LHS`.`age` AS `age`,
             `RHS`.`F_key` AS `F_key`
      FROM
        (SELECT `LHS`.`S_key` AS `S_key`,
                `LHS`.`C_name` AS `C_name`,
                `RHS`.`major` AS `major`,
                `RHS`.`age` AS `age`
         FROM `input2` AS `LHS`
         INNER JOIN `input4` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`)) AS `LHS`
      INNER JOIN `input1` AS `RHS` ON (`LHS`.`C_name` = `RHS`.`C_name`)) AS `LHS`
   INNER JOIN `input3` AS `RHS` ON (`LHS`.`F_key` = `RHS`.`F_key`))
WHERE (`F_name` = 'faculty1'
       AND `major` != 'History')
ORDER BY maxage
