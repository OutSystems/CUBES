[     3.514][MainProcess][INFO] Parsing specification...
[     3.518][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.519][MainProcess][DEBUG] Reading input files...
[     3.527][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/14-1.txt: ['string', 'string']
[     3.532][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/14-2.txt: ['string', 'string']
[     3.536][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/14-3.txt: ['string', 'string']
[     3.540][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/14.out: ['string']
[     3.573][MainProcess][DEBUG] Generating DSL...
[     3.598][MainProcess][INFO] Creating 16 processes
[     3.664][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.664][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.664][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.665][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.665][MainProcess][DEBUG] Increasing generator loc to 3
[     3.668][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     3.669][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     3.673][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     3.677][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     3.680][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     3.684][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     3.684][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     3.687][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     3.693][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     3.696][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     3.719][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     3.726][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     4.080][cube-solver-2][WARNING] There is no solution for current loc (2).
[     4.081][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     4.083][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     4.083][cube-solver-3][WARNING] There is no solution for current loc (2).
[     4.084][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     4.085][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     4.121][cube-solver-1][WARNING] There is no solution for current loc (2).
[     4.122][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     4.123][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     4.241][cube-solver-0][WARNING] There is no solution for current loc (2).
[     4.241][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     4.243][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     4.342][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     4.342][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     4.347][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     4.348][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     4.347][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     4.351][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     4.351][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     4.352][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     4.352][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     4.353][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     4.354][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     4.356][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     4.356][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     4.358][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     4.358][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     4.358][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     4.360][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     4.361][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     4.361][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     4.361][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = inner_join())
[     4.362][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter())
[     4.363][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter())
[     4.364][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter())
[     4.365][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join(), l2 = filter())
[     4.365][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter())
[     4.367][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join(), l2 = filter())
[     4.367][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter())
[     4.368][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join(), l2 = filter())
[     4.369][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise())
[     4.369][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     4.369][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise())
[     4.369][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     4.370][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     4.371][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise())
[     4.372][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     4.372][cube-solver-5][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join3())
[     4.372][cube-solver-6][DEBUG] Solving cube (l0 = filter(), l1 = summarise(), l2 = natural_join())
[     4.374][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise(), l2 = natural_join4())
[     4.374][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise(), l2 = filter([1]))
[     4.374][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise(), l2 = summarise())
[     4.375][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([1]), l2 = anti_join())
[     4.376][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([1]), l2 = left_join())
[     4.376][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([1]), l2 = intersect())
[     4.376][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([1]), l2 = union())
[     4.377][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([1]))
[     4.378][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([1]), l2 = semi_join())
[     4.379][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([1]), l2 = cross_join())
[     4.380][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([1]), l2 = mutate())
[     4.379][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([1]), l2 = summarise([1]))
[     4.380][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([1]), l2 = inner_join())
[     4.381][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = summarise([1]))
[     4.382][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = mutate())
[     4.383][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = summarise([1]))
[     4.383][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = mutate())
[     4.385][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = summarise([1]))
[     4.386][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = union(), l2 = mutate())
[     4.386][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = intersect(), l2 = summarise([1]))
[     4.386][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = union(), l2 = summarise([1]))
[     4.386][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = mutate())
[     4.387][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = intersect(), l2 = mutate())
[     4.388][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = semi_join(), l2 = summarise([1]))
[     4.390][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = semi_join(), l2 = mutate())
[     4.390][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = cross_join(), l2 = mutate())
[     4.390][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = cross_join(), l2 = summarise([1]))
[     4.390][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join())
[     4.391][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join3())
[     4.392][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join4())
[     4.394][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = summarise([1]))
[     4.394][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = anti_join())
[     4.394][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = filter([1]))
[     4.394][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = union())
[     4.395][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = left_join())
[     4.395][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = intersect())
[     4.397][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = semi_join())
[     4.397][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = cross_join())
[     4.398][cube-solver-5][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = mutate())
[     4.398][cube-solver-6][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = inner_join())
[     4.399][cube-solver-9][DEBUG] Solving cube (l0 = filter([1]), l1 = inner_join(), l2 = summarise([1]))
[     4.399][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = inner_join(), l2 = mutate())
[     4.400][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([1]), l2 = filter([1]))
[     4.401][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([1]), l2 = summarise([1]))
[     4.401][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([1]), l2 = mutate())
[     4.402][cube-solver-6][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([1]))
[     4.403][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([1]), l2 = filter([1]))
[     4.405][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = filter([1]), l2 = mutate())
[     4.405][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = filter([1]), l2 = summarise([1]))
[     4.405][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([1]))
[     4.405][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = summarise([1]), l2 = filter([1]))
[     4.407][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = filter([1]), l2 = summarise([1]))
[     4.407][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = filter([1]), l2 = mutate())
[     4.408][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([1]))
[     4.409][cube-solver-13][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([1]), l2 = filter([1]))
[     4.410][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = filter([1]), l2 = summarise([1]))
[     4.410][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter([1]), l2 = mutate())
[     4.411][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([1]))
[     4.412][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([1]), l2 = filter([1]))
[     4.412][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([1]), l2 = summarise([1]))
[     4.413][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([1]), l2 = mutate())
[     4.414][cube-solver-13][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([1]))
[     4.414][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([2]), l2 = filter([1]))
[     4.415][cube-solver-9][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([1]), l2 = summarise([2]))
[     4.417][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([1]))
[     4.417][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([1]), l2 = mutate())
[     4.417][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([1]))
[     4.417][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter([1]))
[     4.418][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([1]))
[     4.420][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([2]), l2 = filter([1]))
[     4.421][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = natural_join())
[     4.421][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = natural_join3())
[     4.422][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = natural_join4())
[     4.425][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = summarise([2]))
[     4.426][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = filter([1]))
[     4.430][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = anti_join())
[     4.431][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = left_join())
[     4.434][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = union())
[     4.436][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = intersect())
[     4.438][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = semi_join())
[     4.441][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = cross_join())
[     4.441][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = mutate())
[     4.445][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = inner_join())
[     4.446][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([3]))
[     4.450][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([3]))
[     4.452][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([3]))
[     4.456][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([3]))
[     4.457][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([3]))
[     4.461][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([3]))
[     4.462][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([3]))
[     4.464][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([3]))
[     4.467][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([3]))
[     4.468][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([3]), l2 = filter([3]))
[     4.472][cube-solver-15][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([3]), l2 = summarise([3]))
[     4.473][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([3]), l2 = mutate())
[     4.478][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([3]))
[     4.479][MainProcess][DEBUG] Increasing generator loc to 4
[     4.480][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     4.481][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[     4.482][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     4.560][cube-solver-8][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     4.561][MainProcess][INFO] Statistics:
[     4.562][MainProcess][INFO] 	Generated cubes: 145
[     4.562][MainProcess][INFO] 	Attempted programs: 3
[     4.562][MainProcess][INFO] 		Rejected: 2
[     4.562][MainProcess][INFO] 		Failed: 0
[     4.562][MainProcess][INFO] 	Blacklist clauses: 6
[     4.562][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     4.563][MainProcess][DEBUG] 	0: Counter({'mutate': 24, 'natural_join3': 19, 'summarise': 11})
[     4.563][MainProcess][DEBUG] 	1: Counter({'filter': 17, 'mutate': 10, 'natural_join4': 10, 'summarise': 9, 'natural_join3': 9})
[     4.563][MainProcess][DEBUG] 	2: Counter({'filter': 38, 'natural_join4': 12, 'natural_join3': 5})
[     4.564][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param0, @param2, @param1), n = n(), S_name), n == max(n))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/14-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/14-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/14-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/14.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input3) %>% inner_join(input2)
df5 <- df4 %>% group_by(S_name) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n == max(n))
out <- df6 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT S_name,
          n
   FROM
     (SELECT S_name,
             n,
             MAX(n) OVER () AS zzz4
      FROM
        (SELECT S_name,
                COUNT() AS n
         FROM
           (SELECT LHS.S_key AS S_key,
                   LHS.P_id AS P_id,
                   LHS.S_name AS S_name,
                   RHS.color AS color
            FROM
              (SELECT LHS.S_key AS S_key,
                      LHS.P_id AS P_id,
                      RHS.S_name AS S_name
               FROM input1 AS LHS
               INNER JOIN input3 AS RHS ON (LHS.S_key = RHS.S_key)) AS LHS
            INNER JOIN input2 AS RHS ON (LHS.P_id = RHS.P_id))
         GROUP BY S_name))
   WHERE (n = zzz4))
ORDER BY S_name
