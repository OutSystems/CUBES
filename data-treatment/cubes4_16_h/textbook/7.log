[     1.584][MainProcess][INFO] Parsing specification...
[     1.607][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.608][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.609][MainProcess][DEBUG] Reading input files...
[     1.620][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/7-1.txt: ['string', 'string', 'int64']
[     1.626][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/7.out: ['string', 'int64']
[     1.652][MainProcess][DEBUG] Generating DSL...
[     1.680][MainProcess][INFO] Creating 16 processes
[     1.740][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     1.741][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     1.740][MainProcess][DEBUG] Increasing generator loc to 2
[     1.741][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.742][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.744][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     1.748][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     1.753][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     1.753][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     1.757][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     1.760][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     1.764][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     1.768][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     1.769][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     1.772][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     1.780][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     1.803][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     2.102][cube-solver-1][DEBUG] Solving cube (l0 = mutate(),)
[     2.145][cube-solver-0][DEBUG] Solving cube (l0 = summarise(),)
[     2.299][cube-solver-0][DEBUG] Found solution with cube (l0 = summarise(),)
[     2.300][MainProcess][INFO] Statistics:
[     2.300][MainProcess][INFO] 	Generated cubes: 16
[     2.300][MainProcess][INFO] 	Attempted programs: 3
[     2.300][MainProcess][INFO] 		Rejected: 2
[     2.300][MainProcess][INFO] 		Failed: 0
[     2.300][MainProcess][INFO] 	Blacklist clauses: 0
[     2.300][MainProcess][DEBUG] Printing statistics for good programs of size 1
[     2.301][MainProcess][DEBUG] 	0: Counter({'summarise': 17, 'mutate': 15})
[     2.301][MainProcess][INFO] Solution found: summarise(@param0, meanage = mean(age), level)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/7-1.txt", col_types = cols(S_key = col_character(),level = col_character(),age = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/textbook/tables/7.out", col_types = cols(level = col_character(),meanage = col_integer()))

df2 <- input1 %>% group_by(level) %>% summarise(meanage = mean(age)) %>% ungroup()
out <- df2 %>% select(level, meanage) %>% arrange(level)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT LEVEL,
       meanage
FROM
  (SELECT LEVEL,
          AVG(age) AS meanage
   FROM input1
   GROUP BY LEVEL)
ORDER BY LEVEL
