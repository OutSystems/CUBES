[     3.189][MainProcess][INFO] Parsing specification...
[     3.194][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     3.194][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.194][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     3.195][MainProcess][DEBUG] Reading input files...
[     3.204][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/8-1.txt: ['string', 'string', 'int64']
[     3.209][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/8.out: ['string', 'int64']
[     3.238][MainProcess][DEBUG] Generating DSL...
[     3.262][MainProcess][INFO] Creating 16 processes
[     3.324][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.324][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.324][MainProcess][DEBUG] Increasing generator loc to 3
[     3.324][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.324][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.325][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     3.325][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     3.325][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     3.329][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     3.333][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     3.339][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     3.344][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     3.350][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     3.357][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     3.357][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     3.363][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     3.363][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     3.574][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     3.620][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     3.752][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     3.755][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     3.756][cube-solver-8][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join(), l2 = filter())
[     3.768][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     3.772][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join3(), l2 = filter())
[     3.774][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = natural_join4(), l2 = filter())
[     3.777][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     3.777][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     3.779][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     3.810][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     3.814][cube-solver-15][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     3.819][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     3.821][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     3.823][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     3.825][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     3.829][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     3.835][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     3.839][cube-solver-11][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     3.844][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     3.848][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     3.849][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     3.853][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     4.026][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter([6]))
[     4.028][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     4.033][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([6]), l2 = summarise())
[     4.035][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter([6]), l2 = semi_join())
[     4.039][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([6]), l2 = summarise())
[     4.040][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter([6]), l2 = cross_join())
[     4.046][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter([6]), l2 = mutate())
[     4.151][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter([8]))
[     4.156][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([8]), l2 = inner_join())
[     4.387][cube-solver-0][DEBUG] Found solution with cube (l0 = summarise(), l1 = filter())
[     4.388][MainProcess][INFO] Statistics:
[     4.388][MainProcess][INFO] 	Generated cubes: 33
[     4.388][MainProcess][INFO] 	Attempted programs: 46
[     4.389][MainProcess][INFO] 		Rejected: 3
[     4.389][MainProcess][INFO] 		Failed: 42
[     4.389][MainProcess][INFO] 	Blacklist clauses: 8
[     4.389][MainProcess][DEBUG] Priting statistics for good programs of size 2
[     4.389][MainProcess][DEBUG] 	0: Counter({'filter': 112, 'mutate': 78, 'summarise': 5})
[     4.389][MainProcess][DEBUG] 	1: Counter({'filter': 83, 'summarise': 64, 'mutate': 48})
[     4.390][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     4.390][MainProcess][DEBUG] 	0: Counter({'summarise': 226})
[     4.390][MainProcess][DEBUG] 	1: Counter({'filter': 154, 'natural_join': 72})
[     4.390][MainProcess][DEBUG] 	2: Counter({'filter': 112, 'left_join': 24, 'union': 24, 'natural_join3': 22, 'inner_join': 16, 'anti_join': 12, 'mutate': 12, 'summarise': 4})
[     4.390][MainProcess][INFO] Solution found: filter(summarise(@param0, meanage = mean(age), level), level != 'JR')
[     4.713][cube-solver-1][DEBUG] Found solution with cube (l0 = filter(), l1 = summarise())
[     4.800][cube-solver-8][DEBUG] Found solution with cube (l0 = summarise(), l1 = natural_join(), l2 = filter())

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/8-1.txt", col_types = cols(S_key = col_character(),level = col_character(),age = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/textbook/tables/8.out", col_types = cols(level = col_character(),meanage = col_integer()))

df2 <- input1 %>% group_by(level) %>% summarise(meanage = mean(age)) %>% ungroup()
df3 <- df2 %>% filter(level != 'JR')
out <- df3 %>% select(level, meanage) %>% arrange(level)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `level`,
       `meanage`
FROM
  (SELECT `level`,
          AVG(`age`) AS `meanage`
   FROM `input1`
   GROUP BY `level`)
WHERE (`level` != 'JR')
ORDER BY LEVEL
