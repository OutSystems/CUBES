[     3.476][MainProcess][INFO] Parsing specification...
[     3.482][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     3.482][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     3.483][MainProcess][DEBUG] Reading input files...
[     3.493][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/6-1.txt: ['string', 'string']
[     3.499][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/6-2.txt: ['string', 'string']
[     3.505][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/6-3.txt: ['string', 'string']
[     3.510][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/6.out: ['string']
[     3.555][MainProcess][DEBUG] Generating DSL...
[     3.589][MainProcess][INFO] Creating 16 processes
[     3.682][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.682][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.682][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.682][MainProcess][DEBUG] Increasing generator loc to 3
[     3.682][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     3.683][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     3.683][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     3.683][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     3.684][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     3.699][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     3.700][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     3.705][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     3.712][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     3.724][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     3.724][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     3.727][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     3.734][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     4.143][cube-solver-1][WARNING] There is no solution for current loc (2).
[     4.144][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     4.146][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     4.279][cube-solver-3][WARNING] There is no solution for current loc (2).
[     4.280][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     4.282][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     4.401][cube-solver-2][WARNING] There is no solution for current loc (2).
[     4.402][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     4.404][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     4.428][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     4.431][cube-solver-0][WARNING] There is no solution for current loc (2).
[     4.432][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     4.434][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = summarise(), l2 = filter())
[     4.434][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     4.437][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     4.445][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     4.449][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     4.451][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     4.452][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     4.454][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     4.456][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     4.459][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     4.461][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     4.463][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = intersect())
[     4.465][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = semi_join())
[     4.467][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = cross_join())
[     4.470][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = mutate())
[     4.472][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = inner_join())
[     4.474][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = anti_join(), l2 = filter())
[     4.477][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = left_join(), l2 = filter())
[     4.480][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = union(), l2 = filter())
[     4.483][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = intersect(), l2 = filter())
[     4.485][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = semi_join(), l2 = filter())
[     4.488][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = cross_join(), l2 = filter())
[     4.489][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     4.491][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = mutate(), l2 = filter())
[     4.494][cube-solver-10][DEBUG] Solving cube (l0 = summarise([3]), l1 = inner_join(), l2 = filter())
[     4.495][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([3]))
[     4.497][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     4.499][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([3]))
[     4.500][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     4.502][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([4]))
[     4.503][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     4.505][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = natural_join3())
[     4.506][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = natural_join())
[     4.509][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = natural_join4())
[     4.512][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = summarise([4]))
[     4.513][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = filter())
[     4.517][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = anti_join())
[     4.521][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([5]), l2 = union())
[     4.521][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([5]), l2 = left_join())
[     4.525][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([5]), l2 = intersect())
[     4.527][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([1]), l2 = summarise([5]))
[     4.528][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([5]), l2 = semi_join())
[     4.529][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([5]), l2 = cross_join())
[     4.534][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([6]), l2 = mutate())
[     4.533][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([1]))
[     4.536][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = summarise([6]), l2 = inner_join())
[     4.537][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = summarise([6]))
[     4.540][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = filter([1]), l2 = mutate())
[     4.541][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = summarise([6]))
[     4.543][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = anti_join(), l2 = mutate())
[     4.544][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = summarise([6]))
[     4.545][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = left_join(), l2 = mutate())
[     4.546][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = union(), l2 = summarise([6]))
[     4.548][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = union(), l2 = mutate())
[     4.549][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = intersect(), l2 = summarise([6]))
[     4.551][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = intersect(), l2 = mutate())
[     4.552][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = semi_join(), l2 = summarise([7]))
[     4.552][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = semi_join(), l2 = mutate())
[     4.553][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = cross_join(), l2 = summarise([7]))
[     4.556][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = cross_join(), l2 = mutate())
[     4.557][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join())
[     4.558][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join3())
[     4.560][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = natural_join4())
[     4.560][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = summarise([7]))
[     4.561][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = anti_join())
[     4.561][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = filter([1]))
[     4.563][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = union())
[     4.563][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = left_join())
[     4.565][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = intersect())
[     4.565][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = semi_join())
[     4.567][cube-solver-7][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = cross_join())
[     4.567][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = mutate())
[     4.569][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = inner_join())
[     4.569][cube-solver-13][DEBUG] Solving cube (l0 = filter([1]), l1 = inner_join(), l2 = mutate())
[     4.569][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = inner_join(), l2 = summarise([8]))
[     4.570][cube-solver-7][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([8]), l2 = filter([1]))
[     4.571][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([1]), l2 = summarise([8]))
[     4.572][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([1]), l2 = mutate())
[     4.576][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([1]))
[     4.577][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([8]), l2 = filter([1]))
[     4.578][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = filter([1]), l2 = summarise([8]))
[     4.579][cube-solver-15][DEBUG] Solving cube (l0 = left_join(), l1 = filter([1]), l2 = mutate())
[     4.580][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([1]))
[     4.582][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([1]), l2 = mutate())
[     4.583][cube-solver-15][DEBUG] Solving cube (l0 = union(), l1 = summarise([8]), l2 = filter([1]))
[     4.584][cube-solver-13][DEBUG] Solving cube (l0 = union(), l1 = filter([1]), l2 = summarise([8]))
[     4.584][cube-solver-7][DEBUG] Solving cube (l0 = union(), l1 = filter([1]), l2 = mutate())
[     4.588][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([1]))
[     4.588][cube-solver-10][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([9]), l2 = filter([1]))
[     4.589][cube-solver-7][DEBUG] Solving cube (l0 = intersect(), l1 = filter([1]), l2 = summarise([9]))
[     4.591][cube-solver-6][DEBUG] Solving cube (l0 = intersect(), l1 = filter([1]), l2 = mutate())
[     4.593][cube-solver-15][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([1]))
[     4.593][cube-solver-13][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([9]), l2 = filter([1]))
[     4.593][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([1]), l2 = summarise([9]))
[     4.595][cube-solver-6][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([1]), l2 = summarise([9]))
[     4.596][cube-solver-15][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([1]), l2 = mutate())
[     4.598][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([1]))
[     4.600][cube-solver-7][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([9]), l2 = filter([1]))
[     4.600][cube-solver-15][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([1]), l2 = summarise([9]))
[     4.602][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([1]), l2 = mutate())
[     4.603][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([1]))
[     4.604][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([1]))
[     4.605][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([1]))
[     4.606][cube-solver-6][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter([1]))
[     4.606][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([9]), l2 = filter([1]))
[     4.608][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = natural_join())
[     4.611][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = natural_join3())
[     4.611][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = natural_join4())
[     4.613][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = summarise([9]))
[     4.613][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = filter([1]))
[     4.616][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = anti_join())
[     4.619][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = left_join())
[     4.622][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = union())
[     4.623][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = intersect())
[     4.624][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = semi_join())
[     4.627][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = cross_join())
[     4.627][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = mutate())
[     4.629][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = filter([1]), l2 = inner_join())
[     4.631][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([1]))
[     4.631][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([10]), l2 = filter([1]))
[     4.632][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([1]))
[     4.636][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([1]))
[     4.636][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([1]))
[     4.640][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([1]))
[     4.640][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([1]))
[     4.644][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([2]))
[     4.644][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([2]))
[     4.648][cube-solver-5][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([10]), l2 = filter([2]))
[     4.649][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([2]), l2 = summarise([10]))
[     4.660][cube-solver-5][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([3]), l2 = mutate())
[     4.661][cube-solver-13][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([3]))
[     4.665][MainProcess][DEBUG] Increasing generator loc to 4
[     4.665][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     4.666][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     4.722][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([12]), l2 = filter([4]))
[     4.732][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[     4.747][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter([4]), l2 = summarise([12]))
[     4.763][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[     4.999][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3([2]), l1 = mutate(), l2 = filter([12]))
[     5.029][cube-solver-1][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join(), l2 = filter([12]))
[     5.051][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     5.103][cube-solver-3][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join3([2]), l2 = filter([13]))
[     5.460][cube-solver-0][DEBUG] Solving cube (l0 = summarise([18]), l1 = filter([13]), l2 = natural_join())
[     5.486][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     5.588][cube-solver-2][DEBUG] Solving cube (l0 = summarise([20]), l1 = natural_join4(), l2 = filter([13]))
[     5.604][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     5.944][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([15]))
[     5.976][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([15]))
[     6.006][cube-solver-9][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = filter([15]), l3 = summarise([21]))
[     6.034][cube-solver-9][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = filter([15]), l3 = filter([15]))
[     6.057][cube-solver-9][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = filter([15]), l3 = anti_join())
[     6.260][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([15]))
[     6.292][cube-solver-4][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = left_join())
[     6.399][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([15]))
[     6.559][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join([2]))
[     6.698][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join3([2]))
[     6.724][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([15]), l3 = natural_join4())
[     6.856][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     8.027][cube-solver-8][DEBUG] Found solution with cube (l0 = natural_join3(), l1 = summarise([10]), l2 = filter([1]))
[     8.028][MainProcess][INFO] Statistics:
[     8.029][MainProcess][INFO] 	Generated cubes: 154
[     8.029][MainProcess][INFO] 	Attempted programs: 105
[     8.029][MainProcess][INFO] 		Rejected: 73
[     8.029][MainProcess][INFO] 		Failed: 31
[     8.029][MainProcess][INFO] 	Blacklist clauses: 40
[     8.029][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     8.031][MainProcess][DEBUG] 	0: Counter({'mutate': 1080, 'natural_join3': 485, 'summarise': 460})
[     8.032][MainProcess][DEBUG] 	1: Counter({'filter': 789, 'natural_join3': 467, 'summarise': 285, 'natural_join4': 284, 'mutate': 200})
[     8.033][MainProcess][DEBUG] 	2: Counter({'filter': 1236, 'natural_join4': 477, 'natural_join3': 312})
[     8.033][MainProcess][DEBUG] Priting statistics for good programs of size 4
[     8.034][MainProcess][DEBUG] 	0: Counter({'natural_join': 428})
[     8.034][MainProcess][DEBUG] 	1: Counter({'summarise': 428})
[     8.034][MainProcess][DEBUG] 	2: Counter({'filter': 304, 'natural_join3': 78, 'natural_join': 46})
[     8.034][MainProcess][DEBUG] 	3: Counter({'filter': 124, 'natural_join4': 114, 'natural_join': 94, 'left_join': 50, 'natural_join3': 46})
[     8.034][MainProcess][INFO] Solution found: filter(summarise(natural_join3(@param0, @param1, @param2), n = n(), F_name), n <= 5)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/6-1.txt", col_types = cols(S_key = col_character(),C_name = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/6-2.txt", col_types = cols(C_name = col_character(),F_key = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/6-3.txt", col_types = cols(F_key = col_character(),F_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/6.out", col_types = cols(F_name = col_character()))

df4 <- inner_join(input1, input2) %>% inner_join(input3)
df5 <- df4 %>% group_by(F_name) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(n <= 5)
out <- df6 %>% select(F_name) %>% arrange(F_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT F_name
FROM
  (SELECT F_name,
          COUNT() AS n
   FROM
     (SELECT LHS.S_key AS S_key,
             LHS.C_name AS C_name,
             LHS.F_key AS F_key,
             RHS.F_name AS F_name
      FROM
        (SELECT LHS.S_key AS S_key,
                LHS.C_name AS C_name,
                RHS.F_key AS F_key
         FROM input1 AS LHS
         INNER JOIN input2 AS RHS ON (LHS.C_name = RHS.C_name)) AS LHS
      INNER JOIN input3 AS RHS ON (LHS.F_key = RHS.F_key))
   GROUP BY F_name)
WHERE (n <= 5.0)
ORDER BY F_name
