[     1.577][MainProcess][INFO] Parsing specification...
[     1.593][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     1.593][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     1.593][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     1.594][MainProcess][DEBUG] Reading input files...
[     1.610][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16-1.txt: ['string', 'string']
[     1.617][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16-2.txt: ['string', 'string']
[     1.623][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16-3.txt: ['string', 'string']
[     1.627][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/16.out: ['string']
[     1.659][MainProcess][DEBUG] Generating DSL...
[     1.686][MainProcess][INFO] Creating 16 processes
[     1.749][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.749][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.750][MainProcess][DEBUG] Increasing generator loc to 3
[     1.751][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.754][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.755][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.758][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.761][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.763][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.766][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.771][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.774][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.777][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.781][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.782][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.791][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.816][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.325][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.326][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.327][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.347][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.348][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.351][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.390][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.390][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.392][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.446][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.447][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.450][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.837][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.841][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.845][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.848][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.849][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter())
[     2.849][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.850][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.853][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.855][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.856][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.857][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.860][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.862][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = union())
[     2.862][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     2.865][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = intersect())
[     2.865][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.868][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = semi_join())
[     2.870][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = cross_join())
[     2.872][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = mutate())
[     2.875][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = inner_join())
[     2.876][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter())
[     2.881][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter())
[     2.881][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter())
[     2.881][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     2.882][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = mutate())
[     2.885][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter())
[     2.885][cube-solver-7][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join(), l2 = filter())
[     2.889][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join(), l2 = filter())
[     2.889][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter())
[     2.889][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise())
[     2.890][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join(), l2 = filter())
[     2.894][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     2.894][cube-solver-7][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3([1]), l2 = mutate())
[     2.894][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3([1]), l2 = summarise())
[     2.894][cube-solver-13][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise())
[     2.898][cube-solver-14][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     3.040][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3([1]), l1 = filter([3]), l2 = summarise([4]))
[     3.066][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([3]))
[     3.067][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([3]), l2 = summarise([4]))
[     3.074][cube-solver-15][DEBUG] Solving cube (l0 = filter([3]), l1 = summarise([4]), l2 = natural_join())
[     3.075][cube-solver-5][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([4]), l2 = natural_join3([1]))
[     3.083][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([4]), l2 = natural_join4())
[     3.091][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([4]), l2 = summarise([4]))
[     3.103][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([4]), l2 = filter([4]))
[     3.114][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([5]), l2 = anti_join())
[     3.123][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([5]), l2 = left_join())
[     3.133][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([5]), l2 = union())
[     3.143][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([5]), l2 = intersect())
[     3.153][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([5]), l2 = semi_join())
[     3.162][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([5]), l2 = cross_join())
[     3.173][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([5]), l2 = mutate())
[     3.183][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = summarise([5]), l2 = inner_join())
[     3.194][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = summarise([5]))
[     3.206][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = filter([4]), l2 = mutate())
[     3.214][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = summarise([5]))
[     3.224][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = anti_join(), l2 = mutate())
[     3.231][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = summarise([6]))
[     3.241][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = left_join(), l2 = mutate())
[     3.248][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = summarise([6]))
[     3.258][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = union(), l2 = mutate())
[     3.264][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = summarise([6]))
[     3.274][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = intersect(), l2 = mutate())
[     3.281][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = summarise([6]))
[     3.291][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = semi_join(), l2 = mutate())
[     3.297][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = summarise([7]))
[     3.309][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = cross_join(), l2 = mutate())
[     3.315][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join())
[     3.321][cube-solver-15][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join3([2]))
[     3.494][cube-solver-2][DEBUG] Solving cube (l0 = summarise([12]), l1 = natural_join4(), l2 = filter([4]))
[     3.512][cube-solver-2][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = natural_join4())
[     3.524][cube-solver-1][DEBUG] Solving cube (l0 = summarise([12]), l1 = natural_join(), l2 = filter([4]))
[     3.543][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = summarise([13]))
[     3.553][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = filter([4]))
[     3.559][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = anti_join())
[     3.565][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = left_join())
[     3.569][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = union())
[     3.574][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = intersect())
[     3.579][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = semi_join())
[     3.583][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = cross_join())
[     3.588][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = mutate())
[     3.593][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = mutate(), l2 = inner_join())
[     3.598][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = summarise([13]))
[     3.608][cube-solver-1][DEBUG] Solving cube (l0 = filter([4]), l1 = inner_join(), l2 = mutate())
[     3.613][cube-solver-1][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([13]), l2 = filter([4]))
[     3.624][cube-solver-1][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = summarise([13]))
[     3.634][cube-solver-1][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([4]), l2 = mutate())
[     3.638][cube-solver-1][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([4]))
[     3.643][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([13]), l2 = filter([4]))
[     3.653][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = summarise([13]))
[     3.663][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = filter([4]), l2 = mutate())
[     3.668][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([4]))
[     3.671][cube-solver-3][DEBUG] Solving cube (l0 = summarise([14]), l1 = natural_join3([2]), l2 = filter([4]))
[     3.673][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = summarise([14]), l2 = filter([4]))
[     3.684][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = summarise([15]))
[     3.694][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = filter([4]), l2 = mutate())
[     3.699][cube-solver-1][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([4]))
[     3.704][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([16]), l2 = filter([4]))
[     3.715][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = summarise([16]))
[     3.726][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = filter([4]), l2 = mutate())
[     3.731][cube-solver-1][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([4]))
[     3.736][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([16]), l2 = filter([4]))
[     3.748][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = summarise([16]))
[     3.759][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([4]), l2 = mutate())
[     3.764][cube-solver-1][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([4]))
[     3.768][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([16]), l2 = filter([4]))
[     3.773][cube-solver-0][DEBUG] Solving cube (l0 = summarise([16]), l1 = summarise([16]), l2 = filter([4]))
[     3.780][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = summarise([16]))
[     3.791][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([4]), l2 = mutate())
[     3.796][cube-solver-1][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([4]))
[     3.801][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([4]))
[     3.806][cube-solver-1][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([4]))
[     3.806][cube-solver-0][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([2]), l2 = filter([4]))
[     3.882][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([18]), l2 = filter([4]))
[     3.894][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join())
[     3.898][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join3([2]))
[     3.983][cube-solver-11][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = natural_join4())
[     4.117][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = summarise([20]))
[     4.134][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = filter([4]))
[     4.139][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = anti_join())
[     4.143][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = left_join())
[     4.147][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = union())
[     4.150][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = intersect())
[     4.154][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = semi_join())
[     4.158][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = cross_join())
[     4.163][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = mutate())
[     4.167][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = filter([4]), l2 = inner_join())
[     4.171][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([4]))
[     4.175][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([4]))
[     4.179][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([4]))
[     4.183][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([4]))
[     4.187][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([4]))
[     4.190][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([4]))
[     4.195][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([4]))
[     4.198][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([4]))
[     4.203][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([20]), l2 = filter([4]))
[     4.215][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = summarise([20]))
[     4.227][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = mutate())
[     4.230][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([4]))
[     4.234][MainProcess][DEBUG] Increasing generator loc to 4
[     4.234][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     5.978][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([4]))
[     5.979][cube-solver-15][DEBUG] Initialising process for 4 lines of code.
[     6.025][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     6.319][cube-solver-8][DEBUG] Initialising process for 4 lines of code.
[     6.414][cube-solver-10][DEBUG] Initialising process for 4 lines of code.
[     6.729][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     7.652][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([4]))
[     7.653][cube-solver-15][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([4]))
[     7.676][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join4())
[     7.834][cube-solver-9][DEBUG] Initialising process for 4 lines of code.
[     8.021][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([4]))
[     8.062][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = filter([4]))
[     8.078][cube-solver-10][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join([2]))
[     8.081][cube-solver-8][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[     8.442][cube-solver-14][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = natural_join3([2]))
[     8.741][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     9.378][cube-solver-8][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([4]), l3 = anti_join())
[     9.380][MainProcess][INFO] Statistics:
[     9.380][MainProcess][INFO] 	Generated cubes: 153
[     9.380][MainProcess][INFO] 	Attempted programs: 803
[     9.380][MainProcess][INFO] 		Rejected: 273
[     9.380][MainProcess][INFO] 		Failed: 529
[     9.380][MainProcess][INFO] 	Blacklist clauses: 29
[     9.380][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     9.383][MainProcess][DEBUG] 	0: Counter({'filter': 2312, 'mutate': 1683, 'natural_join3': 752, 'summarise': 555})
[     9.391][MainProcess][DEBUG] 	1: Counter({'filter': 1558, 'natural_join4': 1313, 'natural_join3': 1024, 'mutate': 920, 'summarise': 489})
[     9.394][MainProcess][DEBUG] 	2: Counter({'filter': 1434, 'natural_join4': 1310, 'summarise': 1215, 'natural_join3': 905, 'mutate': 440})
[     9.394][MainProcess][DEBUG] Printing statistics for good programs of size 4
[     9.395][MainProcess][DEBUG] 	0: Counter({'natural_join': 687})
[     9.395][MainProcess][DEBUG] 	1: Counter({'summarise': 688})
[     9.396][MainProcess][DEBUG] 	2: Counter({'filter': 298, 'natural_join': 264, 'natural_join3': 126})
[     9.396][MainProcess][DEBUG] 	3: Counter({'filter': 391, 'natural_join4': 110, 'natural_join': 88, 'natural_join3': 71, 'anti_join': 29})
[     9.397][MainProcess][INFO] Solution found: anti_join(summarise(@param1, n = n(), P_id, P_name), filter(natural_join(@param2, @param0), S_name != 'AWS'), )

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/16-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/16-2.txt", col_types = cols(P_id = col_character(),P_name = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/16-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/16.out", col_types = cols(P_name = col_character()))

df4 <- input2 %>% group_by(P_id, P_name) %>% summarise(n = n()) %>% ungroup()
df5 <- inner_join(input3, input1)
df6 <- df5 %>% filter(S_name != 'AWS')
df7 <- anti_join(df4, df6, by=c())
out <- df7 %>% select(P_name) %>% arrange(P_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `P_name`
FROM
  (SELECT *
   FROM
     (SELECT `P_id`,
             `P_name`,
             COUNT() AS `n`
      FROM `input2`
      GROUP BY `P_id`,
               `P_name`) AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM
             (SELECT `LHS`.`S_key` AS `S_key`,
                     `LHS`.`S_name` AS `S_name`,
                     `RHS`.`P_id` AS `P_id`
              FROM `input3` AS `LHS`
              INNER JOIN `input1` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
           WHERE (`S_name` != 'AWS')) AS RHS
        WHERE (LHS.P_id = RHS.P_id) ))
ORDER BY P_name
