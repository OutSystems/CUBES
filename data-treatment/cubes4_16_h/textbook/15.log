[     1.579][MainProcess][INFO] Parsing specification...
[     1.583][MainProcess][DEBUG] Reading input files...
[     1.590][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15-1.txt: ['string', 'string']
[     1.594][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15-2.txt: ['string', 'string']
[     1.598][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15-3.txt: ['string', 'string']
[     1.602][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15.out: ['string']
[     1.631][MainProcess][DEBUG] Generating DSL...
[     1.653][MainProcess][INFO] Creating 16 processes
[     1.723][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.723][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.724][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.724][MainProcess][DEBUG] Increasing generator loc to 3
[     1.724][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.725][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.725][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.726][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.735][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.736][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.740][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.746][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.750][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.764][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.764][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.766][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     1.773][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     2.124][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.125][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.127][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.168][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.168][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.170][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.311][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.312][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.315][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.356][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.357][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.358][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.490][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.496][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.500][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.503][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.508][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     2.511][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.511][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.517][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     2.521][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     2.521][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.525][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     2.525][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     2.528][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = union())
[     2.528][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter())
[     2.530][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = intersect())
[     2.531][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = semi_join())
[     2.534][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = cross_join())
[     2.536][cube-solver-10][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = mutate())
[     2.537][cube-solver-4][DEBUG] Solving cube (l0 = summarise([1]), l1 = filter(), l2 = inner_join())
[     2.540][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = anti_join(), l2 = filter())
[     2.541][cube-solver-4][DEBUG] Solving cube (l0 = summarise([2]), l1 = left_join(), l2 = filter())
[     2.542][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter())
[     2.545][cube-solver-4][DEBUG] Solving cube (l0 = summarise([2]), l1 = union(), l2 = filter())
[     2.546][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = intersect(), l2 = filter())
[     2.548][cube-solver-4][DEBUG] Solving cube (l0 = summarise([2]), l1 = semi_join(), l2 = filter())
[     2.549][cube-solver-15][DEBUG] Solving cube (l0 = summarise([2]), l1 = cross_join(), l2 = filter())
[     2.551][cube-solver-4][DEBUG] Solving cube (l0 = summarise([3]), l1 = mutate(), l2 = filter())
[     2.552][cube-solver-10][DEBUG] Solving cube (l0 = summarise([3]), l1 = inner_join(), l2 = filter())
[     2.555][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = summarise([3]))
[     2.556][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = natural_join(), l2 = mutate())
[     2.559][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = mutate())
[     2.559][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = natural_join3(), l2 = summarise([3]))
[     2.559][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = summarise([3]))
[     2.561][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = natural_join4(), l2 = mutate())
[     2.563][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = natural_join())
[     2.565][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = natural_join4())
[     2.565][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = natural_join3())
[     2.568][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = summarise([4]))
[     2.572][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = filter())
[     2.572][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = anti_join())
[     2.573][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([4]), l2 = left_join())
[     2.577][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([5]), l2 = union())
[     2.579][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([6]), l2 = intersect())
[     2.580][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = summarise([6]), l2 = semi_join())
[     2.582][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([6]), l2 = cross_join())
[     2.587][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = summarise([6]), l2 = inner_join())
[     2.588][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = summarise([6]), l2 = mutate())
[     2.588][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = summarise([6]))
[     2.588][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([6]), l2 = filter())
[     2.592][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = filter(), l2 = mutate())
[     2.595][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = summarise([6]))
[     2.595][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = anti_join(), l2 = mutate())
[     2.596][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = summarise([6]))
[     2.599][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = left_join(), l2 = mutate())
[     2.600][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = mutate())
[     2.600][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = union(), l2 = summarise([6]))
[     2.602][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = mutate())
[     2.602][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = intersect(), l2 = summarise([6]))
[     2.604][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = mutate())
[     2.605][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = semi_join(), l2 = summarise([6]))
[     2.606][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = summarise([6]))
[     2.608][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = cross_join(), l2 = mutate())
[     2.610][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join())
[     2.612][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join4())
[     2.612][cube-solver-12][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = natural_join3([1]))
[     2.613][cube-solver-15][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = summarise([7]))
[     2.613][cube-solver-10][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = filter())
[     2.614][cube-solver-4][DEBUG] Solving cube (l0 = filter(), l1 = mutate(), l2 = anti_join())
[     2.616][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = left_join())
[     2.616][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = union())
[     2.617][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = intersect())
[     2.619][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = semi_join())
[     2.620][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = cross_join())
[     2.621][cube-solver-10][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = mutate())
[     2.622][cube-solver-4][DEBUG] Solving cube (l0 = filter([1]), l1 = inner_join(), l2 = summarise([7]))
[     2.622][cube-solver-15][DEBUG] Solving cube (l0 = filter([1]), l1 = mutate(), l2 = inner_join())
[     2.624][cube-solver-12][DEBUG] Solving cube (l0 = filter([1]), l1 = inner_join(), l2 = mutate())
[     2.625][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([7]), l2 = filter([1]))
[     2.626][cube-solver-15][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([1]), l2 = summarise([7]))
[     2.628][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([1]), l2 = mutate())
[     2.628][cube-solver-4][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([1]))
[     2.631][cube-solver-4][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([7]), l2 = filter([1]))
[     2.632][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = filter([1]), l2 = summarise([7]))
[     2.635][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = mutate())
[     2.636][cube-solver-15][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([2]))
[     2.636][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([2]), l2 = mutate())
[     2.638][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = summarise([7]), l2 = filter([2]))
[     2.639][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = summarise([7]))
[     2.641][cube-solver-15][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([2]))
[     2.641][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = mutate())
[     2.643][cube-solver-14][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([7]), l2 = filter([2]))
[     2.645][cube-solver-4][DEBUG] Solving cube (l0 = intersect(), l1 = filter([2]), l2 = summarise([7]))
[     2.646][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([2]))
[     2.646][cube-solver-15][DEBUG] Solving cube (l0 = intersect(), l1 = filter([2]), l2 = mutate())
[     2.649][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([7]), l2 = filter([2]))
[     2.651][cube-solver-15][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = summarise([7]))
[     2.651][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = mutate())
[     2.652][cube-solver-4][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([2]))
[     2.654][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([2]))
[     2.654][cube-solver-14][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([8]), l2 = filter([2]))
[     2.656][cube-solver-4][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([2]), l2 = mutate())
[     2.656][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([2]), l2 = summarise([8]))
[     2.659][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([2]))
[     2.659][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([2]))
[     2.661][cube-solver-7][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([2]))
[     2.661][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3([1]), l2 = filter([2]))
[     2.663][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([8]), l2 = filter([2]))
[     2.664][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join())
[     2.665][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join3([1]))
[     2.667][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join4())
[     2.669][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = summarise([8]))
[     2.670][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = filter([2]))
[     2.673][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = anti_join())
[     2.677][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = left_join())
[     2.680][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = union())
[     2.685][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = intersect())
[     2.685][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = semi_join())
[     2.688][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = cross_join())
[     2.691][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = mutate())
[     2.692][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = inner_join())
[     2.695][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([2]))
[     2.696][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([2]))
[     2.699][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([2]))
[     2.702][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([2]))
[     2.701][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([2]))
[     2.705][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([2]))
[     2.708][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([3]))
[     2.711][cube-solver-4][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([4]))
[     2.716][cube-solver-4][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([11]), l2 = filter([4]))
[     2.718][cube-solver-10][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([4]), l2 = summarise([11]))
[     2.724][cube-solver-4][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([5]), l2 = mutate())
[     2.729][cube-solver-4][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([6]))
[     2.731][MainProcess][DEBUG] Increasing generator loc to 4
[     2.732][cube-solver-10][DEBUG] Initialising process for 4 lines of code.
[     2.734][cube-solver-4][DEBUG] Initialising process for 4 lines of code.
[     2.736][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([6]), l2 = summarise([11]))
[     2.751][cube-solver-13][DEBUG] Initialising process for 4 lines of code.
[     2.853][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter([8]), l2 = summarise([14]))
[     2.872][cube-solver-5][DEBUG] Initialising process for 4 lines of code.
[     2.888][cube-solver-2][DEBUG] Solving cube (l0 = summarise([15]), l1 = natural_join(), l2 = filter([9]))
[     2.909][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     3.129][cube-solver-3][DEBUG] Solving cube (l0 = summarise([16]), l1 = summarise([16]), l2 = filter([17]))
[     3.165][cube-solver-3][DEBUG] Initialising process for 4 lines of code.
[     3.190][cube-solver-0][DEBUG] Solving cube (l0 = summarise([16]), l1 = natural_join3([2]), l2 = filter([17]))
[     3.637][cube-solver-1][DEBUG] Solving cube (l0 = summarise([17]), l1 = natural_join4(), l2 = filter([17]))
[     3.663][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     3.859][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([17]), l2 = natural_join(), l3 = filter([17]))
[     3.867][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([17]), l2 = natural_join3([2]), l3 = filter([17]))
[     4.100][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([18]), l2 = natural_join4(), l3 = filter([21]))
[     4.123][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = filter([21]), l3 = summarise([19]))
[     4.148][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([19]), l2 = filter([21]), l3 = filter([21]))
[     4.172][cube-solver-13][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([21]), l3 = anti_join())
[     4.184][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([21]), l3 = natural_join([2]))
[     4.215][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = summarise([20]), l3 = filter([21]))
[     4.262][cube-solver-5][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([22]), l3 = left_join())
[     4.445][cube-solver-3][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([24]), l3 = natural_join3([2]))
[     4.845][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join4())
[     5.079][cube-solver-2][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([20]), l2 = filter([21]), l3 = natural_join([2]))
[     5.081][MainProcess][INFO] Statistics:
[     5.081][MainProcess][INFO] 	Generated cubes: 153
[     5.081][MainProcess][INFO] 	Attempted programs: 45
[     5.081][MainProcess][INFO] 		Rejected: 0
[     5.081][MainProcess][INFO] 		Failed: 44
[     5.081][MainProcess][INFO] 	Blacklist clauses: 49
[     5.082][MainProcess][DEBUG] Priting statistics for good programs of size 3
[     5.083][MainProcess][DEBUG] 	0: Counter({'mutate': 713, 'natural_join3': 297, 'summarise': 226})
[     5.083][MainProcess][DEBUG] 	1: Counter({'natural_join3': 375, 'natural_join4': 284, 'filter': 280, 'mutate': 229, 'summarise': 68})
[     5.084][MainProcess][DEBUG] 	2: Counter({'filter': 956, 'natural_join3': 170, 'natural_join4': 110})
[     5.084][MainProcess][DEBUG] Priting statistics for good programs of size 4
[     5.084][MainProcess][DEBUG] 	0: Counter({'natural_join': 117})
[     5.084][MainProcess][DEBUG] 	1: Counter({'summarise': 117})
[     5.085][MainProcess][DEBUG] 	2: Counter({'natural_join': 47, 'filter': 42, 'natural_join3': 28})
[     5.085][MainProcess][DEBUG] 	3: Counter({'filter': 75, 'left_join': 29, 'natural_join4': 10, 'natural_join': 3})
[     5.085][MainProcess][INFO] Solution found: natural_join(@param2, filter(summarise(natural_join(@param0, @param1), n = n(), S_key, color), color == 'red' & n == max(n)))

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/15-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/15-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/15-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/15.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input1, input2)
df5 <- df4 %>% group_by(S_key, color) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(color == 'red' & n == max(n))
df7 <- inner_join(input3, df6)
out <- df7 %>% select(S_name) %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `LHS`.`S_key` AS `S_key`,
          `LHS`.`S_name` AS `S_name`,
          `RHS`.`color` AS `color`,
          `RHS`.`n` AS `n`
   FROM `input3` AS `LHS`
   INNER JOIN
     (SELECT `S_key`,
             `color`,
             `n`
      FROM
        (SELECT `S_key`,
                `color`,
                `n`,
                MAX(`n`) OVER () AS `zzz4`
         FROM
           (SELECT `S_key`,
                   `color`,
                   COUNT() AS `n`
            FROM
              (SELECT `LHS`.`S_key` AS `S_key`,
                      `LHS`.`P_id` AS `P_id`,
                      `RHS`.`color` AS `color`
               FROM `input1` AS `LHS`
               INNER JOIN `input2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
            GROUP BY `S_key`,
                     `color`))
      WHERE (`color` = 'red'
             AND n = zzz4)) AS RHS ON (LHS.S_key = RHS.S_key))
ORDER BY S_name
