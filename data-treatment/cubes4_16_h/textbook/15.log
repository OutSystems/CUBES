[     1.606][MainProcess][INFO] Parsing specification...
[     1.619][MainProcess][DEBUG] Reading input files...
[     1.645][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15-1.txt: ['string', 'string']
[     1.660][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15-2.txt: ['string', 'string']
[     1.668][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15-3.txt: ['string', 'string']
[     1.673][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/15.out: ['string']
[     1.704][MainProcess][DEBUG] Generating DSL...
[     1.731][MainProcess][INFO] Creating 16 processes
[     1.791][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     1.791][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     1.792][MainProcess][DEBUG] Increasing generator loc to 3
[     1.795][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     1.796][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     1.800][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     1.802][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     1.804][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     1.808][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     1.812][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     1.816][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     1.819][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     1.823][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     1.826][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     1.827][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     1.836][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     1.860][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     2.409][cube-solver-1][WARNING] There is no solution for current loc (2).
[     2.409][cube-solver-1][DEBUG] Solving cube (l0 = filter(), l1 = summarise())
[     2.411][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[     2.411][cube-solver-3][WARNING] There is no solution for current loc (2).
[     2.412][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = filter())
[     2.414][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     2.415][cube-solver-2][WARNING] There is no solution for current loc (2).
[     2.415][cube-solver-2][DEBUG] Solving cube (l0 = filter(), l1 = mutate())
[     2.419][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[     2.472][cube-solver-0][WARNING] There is no solution for current loc (2).
[     2.473][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = filter())
[     2.476][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[     2.977][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise(), l2 = filter())
[     2.980][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = mutate())
[     2.986][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join())
[     2.988][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise(), l2 = filter())
[     2.990][cube-solver-6][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join3())
[     2.993][cube-solver-4][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = natural_join4())
[     2.993][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = mutate())
[     2.998][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = filter(), l2 = summarise())
[     3.002][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise(), l2 = filter())
[     3.003][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = summarise())
[     3.003][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = filter(), l2 = summarise())
[     3.004][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = filter())
[     3.006][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter(), l2 = summarise())
[     3.008][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = anti_join())
[     3.010][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter(), l2 = left_join())
[     3.010][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = union())
[     3.013][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = filter([1]))
[     3.013][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = filter([1]), l2 = mutate())
[     3.014][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = intersect())
[     3.015][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = semi_join())
[     3.015][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = cross_join())
[     3.018][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = mutate())
[     3.019][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = filter([1]), l2 = inner_join())
[     3.020][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = anti_join(), l2 = filter([1]))
[     3.021][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = left_join(), l2 = filter([1]))
[     3.024][cube-solver-9][DEBUG] Solving cube (l0 = summarise(), l1 = union(), l2 = filter([1]))
[     3.025][cube-solver-12][DEBUG] Solving cube (l0 = summarise(), l1 = intersect(), l2 = filter([1]))
[     3.025][cube-solver-13][DEBUG] Solving cube (l0 = summarise(), l1 = cross_join(), l2 = filter([1]))
[     3.026][cube-solver-14][DEBUG] Solving cube (l0 = summarise(), l1 = semi_join(), l2 = filter([1]))
[     3.028][cube-solver-5][DEBUG] Solving cube (l0 = summarise(), l1 = inner_join(), l2 = filter([1]))
[     3.028][cube-solver-10][DEBUG] Solving cube (l0 = summarise(), l1 = mutate(), l2 = filter([1]))
[     3.030][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join(), l2 = summarise())
[     3.032][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join(), l2 = mutate())
[     3.033][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join3(), l2 = summarise())
[     3.034][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join3(), l2 = mutate())
[     3.035][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = natural_join())
[     3.034][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join4(), l2 = mutate())
[     3.035][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = natural_join4(), l2 = summarise())
[     3.038][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = natural_join3())
[     3.040][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = natural_join4())
[     3.042][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = filter([2]))
[     3.042][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = summarise())
[     3.043][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = anti_join())
[     3.044][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = left_join())
[     3.046][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = union())
[     3.048][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = intersect())
[     3.049][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = cross_join())
[     3.050][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = semi_join())
[     3.050][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = mutate())
[     3.053][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = summarise(), l2 = inner_join())
[     3.055][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = filter([2]), l2 = summarise())
[     3.056][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = anti_join(), l2 = summarise())
[     3.057][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = filter([2]), l2 = mutate())
[     3.057][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = anti_join(), l2 = mutate())
[     3.058][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = left_join(), l2 = summarise())
[     3.061][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = left_join(), l2 = mutate())
[     3.061][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = union(), l2 = summarise([1]))
[     3.064][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = union(), l2 = mutate())
[     3.064][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = intersect(), l2 = summarise([1]))
[     3.065][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = intersect(), l2 = mutate())
[     3.066][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = semi_join(), l2 = mutate())
[     3.067][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = semi_join(), l2 = summarise([1]))
[     3.069][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = cross_join(), l2 = summarise([1]))
[     3.071][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join())
[     3.071][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = cross_join(), l2 = mutate())
[     3.072][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join3())
[     3.072][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = natural_join4())
[     3.075][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = filter([2]))
[     3.075][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = summarise([1]))
[     3.080][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = left_join())
[     3.080][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = intersect())
[     3.080][cube-solver-12][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = anti_join())
[     3.081][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = union())
[     3.082][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = semi_join())
[     3.084][cube-solver-14][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = cross_join())
[     3.086][cube-solver-13][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = mutate())
[     3.087][cube-solver-9][DEBUG] Solving cube (l0 = filter([2]), l1 = mutate(), l2 = inner_join())
[     3.088][cube-solver-5][DEBUG] Solving cube (l0 = filter([2]), l1 = inner_join(), l2 = mutate())
[     3.088][cube-solver-10][DEBUG] Solving cube (l0 = filter([2]), l1 = inner_join(), l2 = summarise([1]))
[     3.090][cube-solver-12][DEBUG] Solving cube (l0 = anti_join(), l1 = summarise([1]), l2 = filter([2]))
[     3.091][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = filter([2]))
[     3.092][cube-solver-13][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([2]), l2 = summarise([1]))
[     3.093][cube-solver-5][DEBUG] Solving cube (l0 = anti_join(), l1 = filter([2]), l2 = mutate())
[     3.094][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = summarise([2]), l2 = filter([2]))
[     3.095][cube-solver-14][DEBUG] Solving cube (l0 = anti_join(), l1 = mutate(), l2 = filter([2]))
[     3.098][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = mutate())
[     3.098][cube-solver-10][DEBUG] Solving cube (l0 = left_join(), l1 = filter([2]), l2 = summarise([2]))
[     3.099][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = mutate(), l2 = filter([2]))
[     3.100][cube-solver-13][DEBUG] Solving cube (l0 = union(), l1 = summarise([2]), l2 = filter([2]))
[     3.102][cube-solver-15][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = summarise([2]))
[     3.103][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = filter([2]), l2 = mutate())
[     3.103][cube-solver-9][DEBUG] Solving cube (l0 = intersect(), l1 = summarise([2]), l2 = filter([2]))
[     3.104][cube-solver-14][DEBUG] Solving cube (l0 = union(), l1 = mutate(), l2 = filter([2]))
[     3.107][cube-solver-12][DEBUG] Solving cube (l0 = intersect(), l1 = filter([2]), l2 = summarise([2]))
[     3.108][cube-solver-5][DEBUG] Solving cube (l0 = intersect(), l1 = mutate(), l2 = filter([2]))
[     3.108][cube-solver-10][DEBUG] Solving cube (l0 = intersect(), l1 = filter([2]), l2 = mutate())
[     3.109][cube-solver-13][DEBUG] Solving cube (l0 = semi_join(), l1 = summarise([2]), l2 = filter([2]))
[     3.112][cube-solver-14][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = summarise([2]))
[     3.112][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = filter([2]), l2 = mutate())
[     3.112][cube-solver-15][DEBUG] Solving cube (l0 = semi_join(), l1 = mutate(), l2 = filter([2]))
[     3.113][cube-solver-5][DEBUG] Solving cube (l0 = cross_join(), l1 = summarise([2]), l2 = filter([2]))
[     3.116][cube-solver-10][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([2]), l2 = summarise([3]))
[     3.116][cube-solver-12][DEBUG] Solving cube (l0 = cross_join(), l1 = filter([2]), l2 = mutate())
[     3.117][cube-solver-13][DEBUG] Solving cube (l0 = cross_join(), l1 = mutate(), l2 = filter([2]))
[     3.119][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join(), l2 = filter([2]))
[     3.119][cube-solver-15][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join3(), l2 = filter([2]))
[     3.120][cube-solver-5][DEBUG] Solving cube (l0 = mutate(), l1 = natural_join4(), l2 = filter([2]))
[     3.123][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = summarise([4]), l2 = filter([2]))
[     3.124][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join())
[     3.124][cube-solver-13][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join3())
[     3.125][cube-solver-9][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = natural_join4())
[     3.127][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = summarise([4]))
[     3.132][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = filter([2]))
[     3.134][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = anti_join())
[     3.137][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = left_join())
[     3.140][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = union())
[     3.143][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = intersect())
[     3.146][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = semi_join())
[     3.148][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = filter([2]), l2 = cross_join())
[     3.149][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = mutate())
[     3.153][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = filter([3]), l2 = inner_join())
[     3.154][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = anti_join(), l2 = filter([4]))
[     3.157][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = left_join(), l2 = filter([4]))
[     3.162][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = intersect(), l2 = filter([4]))
[     3.163][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = union(), l2 = filter([4]))
[     3.165][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = filter([5]))
[     3.166][cube-solver-12][DEBUG] Solving cube (l0 = mutate(), l1 = semi_join(), l2 = filter([5]))
[     3.167][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = cross_join(), l2 = filter([5]))
[     3.171][cube-solver-14][DEBUG] Solving cube (l0 = mutate(), l1 = mutate(), l2 = filter([6]))
[     3.173][cube-solver-10][DEBUG] Solving cube (l0 = mutate(), l1 = inner_join(), l2 = filter([6]))
[     3.176][cube-solver-12][DEBUG] Solving cube (l0 = inner_join(), l1 = summarise([6]), l2 = filter([6]))
[     3.176][cube-solver-7][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([6]), l2 = summarise([6]))
[     3.180][cube-solver-10][DEBUG] Solving cube (l0 = inner_join(), l1 = filter([6]), l2 = mutate())
[     3.181][cube-solver-14][DEBUG] Solving cube (l0 = inner_join(), l1 = mutate(), l2 = filter([7]))
[     3.184][MainProcess][DEBUG] Increasing generator loc to 4
[     3.186][cube-solver-10][DEBUG] Initialising process for 4 lines of code.
[     3.189][cube-solver-7][DEBUG] Initialising process for 4 lines of code.
[     3.190][cube-solver-12][DEBUG] Initialising process for 4 lines of code.
[     3.192][cube-solver-14][DEBUG] Initialising process for 4 lines of code.
[     3.686][cube-solver-2][DEBUG] Solving cube (l0 = summarise([18]), l1 = natural_join4(), l2 = filter([22]))
[     3.712][cube-solver-2][DEBUG] Initialising process for 4 lines of code.
[     3.911][cube-solver-0][DEBUG] Solving cube (l0 = summarise([19]), l1 = summarise([19]), l2 = filter([23]))
[     3.959][cube-solver-0][DEBUG] Initialising process for 4 lines of code.
[     3.962][cube-solver-3][DEBUG] Solving cube (l0 = summarise([19]), l1 = natural_join3([2]), l2 = filter([23]))
[     4.118][cube-solver-1][DEBUG] Solving cube (l0 = summarise([20]), l1 = natural_join(), l2 = filter([23]))
[     4.153][cube-solver-1][DEBUG] Initialising process for 4 lines of code.
[     4.848][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = natural_join(), l3 = filter([24]))
[     4.855][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = summarise([21]), l3 = filter([24]))
[     4.908][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = filter([24]), l3 = summarise([21]))
[     4.938][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = filter([24]), l3 = filter([24]))
[     4.965][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([21]), l2 = filter([24]), l3 = anti_join())
[     5.018][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = natural_join4(), l3 = filter([24]))
[     5.044][cube-solver-7][DEBUG] Solving cube (l0 = natural_join([1]), l1 = summarise([21]), l2 = filter([24]), l3 = left_join())
[     5.108][cube-solver-12][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = natural_join3([2]), l3 = filter([24]))
[     5.395][cube-solver-2][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join([2]))
[     5.872][cube-solver-1][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join4())
[     5.946][cube-solver-0][DEBUG] Solving cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join3([2]))
[     6.388][cube-solver-11][DEBUG] Initialising process for 4 lines of code.
[     6.533][cube-solver-0][DEBUG] Found solution with cube (l0 = natural_join([2]), l1 = summarise([21]), l2 = filter([24]), l3 = natural_join3([2]))
[     6.534][MainProcess][INFO] Statistics:
[     6.535][MainProcess][INFO] 	Generated cubes: 154
[     6.535][MainProcess][INFO] 	Attempted programs: 70
[     6.535][MainProcess][INFO] 		Rejected: 33
[     6.535][MainProcess][INFO] 		Failed: 36
[     6.535][MainProcess][INFO] 	Blacklist clauses: 49
[     6.535][MainProcess][DEBUG] Printing statistics for good programs of size 3
[     6.536][MainProcess][DEBUG] 	0: Counter({'mutate': 827, 'natural_join3': 476, 'summarise': 392})
[     6.538][MainProcess][DEBUG] 	1: Counter({'natural_join3': 616, 'mutate': 320, 'natural_join4': 313, 'filter': 290, 'summarise': 157})
[     6.538][MainProcess][DEBUG] 	2: Counter({'filter': 1406, 'natural_join4': 200, 'natural_join3': 90})
[     6.539][MainProcess][DEBUG] Printing statistics for good programs of size 4
[     6.539][MainProcess][DEBUG] 	0: Counter({'natural_join': 204})
[     6.539][MainProcess][DEBUG] 	1: Counter({'summarise': 204})
[     6.539][MainProcess][DEBUG] 	2: Counter({'filter': 94, 'natural_join3': 70, 'natural_join': 40})
[     6.539][MainProcess][DEBUG] 	3: Counter({'filter': 110, 'left_join': 32, 'natural_join4': 30, 'natural_join': 18, 'natural_join3': 14})
[     6.539][MainProcess][INFO] Solution found: natural_join3(@param2, filter(summarise(natural_join(@param1, @param0), n = n(), S_key, color), color == 'red' & n == max(n)), @param1)

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/textbook/tables/15-1.txt", col_types = cols(S_key = col_character(),P_id = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/textbook/tables/15-2.txt", col_types = cols(P_id = col_character(),color = col_character()))
input2 <- copy_to(con, input2)
input3 <- read_csv("tests-examples/textbook/tables/15-3.txt", col_types = cols(S_key = col_character(),S_name = col_character()))
input3 <- copy_to(con, input3)
expected_output <- read_csv("tests-examples/textbook/tables/15.out", col_types = cols(S_name = col_character()))

df4 <- inner_join(input2, input1)
df5 <- df4 %>% group_by(S_key, color) %>% summarise(n = n()) %>% ungroup()
df6 <- df5 %>% filter(color == 'red' & n == max(n))
df7 <- inner_join(input3, df6) %>% inner_join(input2)
out <- df7 %>% select(S_name) %>% distinct() %>% arrange(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT `S_name`
FROM
  (SELECT `LHS`.`S_key` AS `S_key`,
          `LHS`.`S_name` AS `S_name`,
          `LHS`.`color` AS `color`,
          `LHS`.`n` AS `n`,
          `RHS`.`P_id` AS `P_id`
   FROM
     (SELECT `LHS`.`S_key` AS `S_key`,
             `LHS`.`S_name` AS `S_name`,
             `RHS`.`color` AS `color`,
             `RHS`.`n` AS `n`
      FROM `input3` AS `LHS`
      INNER JOIN
        (SELECT `S_key`,
                `color`,
                `n`
         FROM
           (SELECT `S_key`,
                   `color`,
                   `n`,
                   MAX(`n`) OVER () AS `zzz4`
            FROM
              (SELECT `S_key`,
                      `color`,
                      COUNT() AS `n`
               FROM
                 (SELECT `LHS`.`P_id` AS `P_id`,
                         `LHS`.`color` AS `color`,
                         `RHS`.`S_key` AS `S_key`
                  FROM `input2` AS `LHS`
                  INNER JOIN `input1` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
               GROUP BY `S_key`,
                        `color`))
         WHERE (`color` = 'red'
                AND n = zzz4)) AS RHS ON (LHS.S_key = RHS.S_key)) AS LHS
   INNER JOIN input2 AS RHS ON (LHS.color = RHS.color))
ORDER BY S_name
