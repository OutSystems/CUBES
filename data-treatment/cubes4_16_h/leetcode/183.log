[     3.423][MainProcess][INFO] Parsing specification...
[     3.439][MainProcess][DEBUG] Reading input files...
[     3.453][MainProcess][INFO] Inferred data types for table tests-examples/leetcode/tables/183_1.csv: ['int64', 'string']
[     3.467][MainProcess][INFO] Inferred data types for table tests-examples/leetcode/tables/183_2.csv: ['int64', 'int64']
[     3.475][MainProcess][INFO] Inferred data types for table tests-examples/leetcode/tables/183_o.csv: ['string']
[     3.518][MainProcess][DEBUG] Generating DSL...
[     3.549][MainProcess][INFO] Creating 16 processes
[     3.624][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     3.624][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     3.624][cube-solver-4][DEBUG] Initialising process for 1 lines of code.
[     3.624][cube-solver-5][DEBUG] Initialising process for 1 lines of code.
[     3.625][cube-solver-3][DEBUG] Initialising process for 1 lines of code.
[     3.625][cube-solver-6][DEBUG] Initialising process for 1 lines of code.
[     3.625][cube-solver-2][DEBUG] Initialising process for 1 lines of code.
[     3.626][MainProcess][DEBUG] Increasing generator loc to 2
[     3.626][cube-solver-7][DEBUG] Initialising process for 1 lines of code.
[     3.629][cube-solver-8][DEBUG] Initialising process for 1 lines of code.
[     3.632][cube-solver-9][DEBUG] Initialising process for 1 lines of code.
[     3.637][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     3.643][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     3.648][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     3.657][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     3.659][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     3.660][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     3.693][cube-solver-6][DEBUG] Solving cube (l0 = intersect(),)
[     3.694][cube-solver-4][DEBUG] Solving cube (l0 = left_join(),)
[     3.695][cube-solver-8][DEBUG] Solving cube (l0 = cross_join(),)
[     3.698][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(),)
[     3.701][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(),)
[     3.703][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.717][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     3.730][cube-solver-3][DEBUG] Solving cube (l0 = anti_join(),)
[     3.736][cube-solver-5][DEBUG] Solving cube (l0 = union(),)
[     3.736][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(),)
[     3.737][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(),)
[     3.737][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(),)
[     3.740][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.789][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = union())
[     3.799][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = cross_join([2]))
[     3.825][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = semi_join())
[     3.829][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     3.851][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = intersect([2]))
[     3.857][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = inner_join([5]))
[     3.861][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     3.869][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([2]))
[     3.873][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = left_join())
[     3.873][cube-solver-11][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join())
[     3.875][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = union())
[     3.877][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = intersect([3]))
[     3.882][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = semi_join())
[     3.884][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = cross_join([2]))
[     3.887][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = inner_join([5]))
[     3.893][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join())
[     3.895][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join3())
[     3.897][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join4())
[     3.898][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = anti_join([2]))
[     3.898][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     3.902][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = union())
[     3.904][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = intersect([5]))
[     3.909][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.910][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = cross_join([2]))
[     3.913][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = inner_join([5]))
[     3.919][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join())
[     3.921][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join3())
[     3.921][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     3.923][cube-solver-10][DEBUG] Solving cube (l0 = anti_join([4]), l1 = natural_join())
[     3.937][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join())
[     3.940][cube-solver-15][DEBUG] Solving cube (l0 = anti_join([4]), l1 = natural_join3())
[     3.945][cube-solver-15][DEBUG] Solving cube (l0 = anti_join([4]), l1 = natural_join4())
[     3.949][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join3())
[     3.951][cube-solver-15][DEBUG] Solving cube (l0 = anti_join([5]), l1 = anti_join([5]))
[     3.952][cube-solver-1][DEBUG] Solving cube (l0 = anti_join([5]), l1 = left_join())
[     3.961][cube-solver-15][DEBUG] Solving cube (l0 = anti_join([5]), l1 = union())
[     4.040][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join4())
[     4.041][cube-solver-6][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join4())
[     4.043][cube-solver-6][DEBUG] Solving cube (l0 = anti_join([10]), l1 = intersect([6]))
[     4.043][cube-solver-4][DEBUG] Solving cube (l0 = anti_join([10]), l1 = semi_join())
[     4.069][cube-solver-7][DEBUG] Solving cube (l0 = natural_join3(), l1 = anti_join([10]))
[     4.079][cube-solver-7][DEBUG] Solving cube (l0 = anti_join([10]), l1 = cross_join([2]))
[     4.082][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     4.107][cube-solver-5][DEBUG] Solving cube (l0 = natural_join4(), l1 = left_join())
[     4.110][cube-solver-5][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join())
[     4.117][cube-solver-0][DEBUG] Solving cube (l0 = natural_join4(), l1 = semi_join())
[     4.119][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join3())
[     4.208][cube-solver-3][DEBUG] Solving cube (l0 = anti_join([10]), l1 = inner_join([14]))
[     4.323][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join4())
[     4.326][cube-solver-7][DEBUG] Solving cube (l0 = left_join(), l1 = anti_join([10]))
[     4.383][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     4.452][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = union())
[     4.505][cube-solver-11][DEBUG] Solving cube (l0 = left_join(), l1 = intersect([6]))
[     4.515][cube-solver-14][DEBUG] Solving cube (l0 = left_join(), l1 = semi_join())
[     4.592][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = left_join())
[     4.608][cube-solver-8][DEBUG] Solving cube (l0 = left_join(), l1 = cross_join([2]))
[     4.657][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = inner_join([22]))
[     4.765][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = natural_join())
[     4.814][cube-solver-8][DEBUG] Solving cube (l0 = union(), l1 = natural_join3())
[     4.940][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = natural_join4())
[     4.944][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = anti_join([10]))
[     5.061][cube-solver-15][DEBUG] Solving cube (l0 = union(), l1 = left_join())
[     5.071][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = union())
[     5.213][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = intersect([6]))
[     5.283][cube-solver-14][DEBUG] Solving cube (l0 = union(), l1 = semi_join())
[     5.320][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = cross_join([2]))
[     5.479][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = inner_join([22]))
[     5.527][cube-solver-9][DEBUG] Solving cube (l0 = intersect([6]), l1 = natural_join())
[     5.571][cube-solver-1][DEBUG] Solving cube (l0 = intersect([6]), l1 = natural_join3())
[     5.580][cube-solver-0][DEBUG] Solving cube (l0 = intersect([6]), l1 = natural_join4())
[     5.589][cube-solver-0][DEBUG] Solving cube (l0 = intersect([6]), l1 = anti_join([10]))
[     5.590][cube-solver-11][DEBUG] Solving cube (l0 = intersect([6]), l1 = left_join())
[     5.664][cube-solver-5][DEBUG] Solving cube (l0 = intersect([7]), l1 = union())
[     5.915][cube-solver-14][DEBUG] Solving cube (l0 = intersect([8]), l1 = intersect([8]))
[     5.951][cube-solver-15][DEBUG] Solving cube (l0 = intersect([8]), l1 = semi_join())
[     5.993][cube-solver-11][DEBUG] Solving cube (l0 = intersect([8]), l1 = cross_join([2]))
[     6.029][cube-solver-10][DEBUG] Solving cube (l0 = intersect([8]), l1 = inner_join([22]))
[     6.071][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join())
[     6.083][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join3())
[     6.144][cube-solver-15][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join4())
[     6.147][cube-solver-15][DEBUG] Solving cube (l0 = semi_join(), l1 = anti_join([10]))
[     6.165][cube-solver-11][DEBUG] Solving cube (l0 = semi_join(), l1 = left_join())
[     6.301][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = union())
[     6.556][cube-solver-8][DEBUG] Solving cube (l0 = semi_join(), l1 = intersect([8]))
[     6.587][cube-solver-14][DEBUG] Solving cube (l0 = semi_join(), l1 = semi_join())
[     6.765][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = cross_join([2]))
[     6.855][cube-solver-11][DEBUG] Solving cube (l0 = semi_join(), l1 = inner_join([22]))
[     6.891][cube-solver-9][DEBUG] Solving cube (l0 = cross_join([2]), l1 = natural_join())
[     6.907][cube-solver-5][DEBUG] Solving cube (l0 = cross_join([3]), l1 = natural_join3())
[     6.919][cube-solver-9][DEBUG] Solving cube (l0 = cross_join([4]), l1 = natural_join4())
[     6.923][cube-solver-9][DEBUG] Solving cube (l0 = cross_join([4]), l1 = anti_join([10]))
[     6.931][cube-solver-9][DEBUG] Solving cube (l0 = cross_join([4]), l1 = left_join())
[     6.935][cube-solver-9][DEBUG] Solving cube (l0 = cross_join([4]), l1 = union())
[     6.938][cube-solver-9][DEBUG] Solving cube (l0 = cross_join([4]), l1 = intersect([8]))
[     6.944][cube-solver-9][DEBUG] Solving cube (l0 = cross_join([4]), l1 = semi_join())
[     6.948][cube-solver-9][DEBUG] Solving cube (l0 = cross_join([4]), l1 = cross_join([4]))
[     6.949][cube-solver-5][DEBUG] Solving cube (l0 = cross_join([4]), l1 = inner_join([22]))
[     6.953][cube-solver-9][DEBUG] Solving cube (l0 = inner_join([22]), l1 = natural_join())
[     6.962][cube-solver-5][DEBUG] Solving cube (l0 = inner_join([22]), l1 = natural_join3())
[     7.112][cube-solver-14][DEBUG] Solving cube (l0 = inner_join([29]), l1 = natural_join4())
[     7.126][cube-solver-14][DEBUG] Solving cube (l0 = inner_join([29]), l1 = anti_join([10]))
[     7.137][cube-solver-7][DEBUG] Solving cube (l0 = inner_join([29]), l1 = left_join())
[     7.234][cube-solver-1][DEBUG] Solving cube (l0 = inner_join([32]), l1 = union())
[     7.293][cube-solver-4][DEBUG] Solving cube (l0 = inner_join([32]), l1 = intersect([8]))
[     7.376][cube-solver-0][DEBUG] Solving cube (l0 = inner_join([33]), l1 = semi_join())
[     7.571][cube-solver-8][DEBUG] Solving cube (l0 = inner_join([34]), l1 = cross_join([4]))
[     7.647][cube-solver-12][DEBUG] Solving cube (l0 = inner_join([34]), l1 = inner_join([34]))
[     7.968][MainProcess][DEBUG] Increasing generator loc to 3
[     7.969][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     8.191][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = natural_join())
[     8.282][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     8.485][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     8.489][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = natural_join3())
[     8.495][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = anti_join([10]))
[     8.505][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = left_join())
[     8.715][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = natural_join4())
[     8.722][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = union())
[     9.068][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = intersect([8]))
[     9.539][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = semi_join())
[     9.618][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = cross_join([4]))
[     9.879][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = inner_join([38]))
[    10.229][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = natural_join())
[    10.485][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[    10.565][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = natural_join4())
[    10.570][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = anti_join([10]))
[    10.697][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = natural_join3())
[    10.903][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[    10.977][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[    11.123][cube-solver-9][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = left_join())
[    11.140][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[    11.141][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[    11.187][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = union())
[    11.357][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = semi_join())
[    11.399][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = intersect([8]))
[    11.826][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[    12.105][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = cross_join([4]))
[    12.110][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[    12.170][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[    12.300][cube-solver-14][DEBUG] Found solution with cube (l0 = inner_join([29]), l1 = anti_join([10]))
[    12.302][MainProcess][INFO] Statistics:
[    12.302][MainProcess][INFO] 	Generated cubes: 131
[    12.302][MainProcess][INFO] 	Attempted programs: 3049
[    12.302][MainProcess][INFO] 		Rejected: 1344
[    12.302][MainProcess][INFO] 		Failed: 1704
[    12.302][MainProcess][INFO] 	Blacklist clauses: 60
[    12.302][MainProcess][DEBUG] Printing statistics for good programs of size 1
[    12.303][MainProcess][DEBUG] 	0: Counter({'inner_join': 46, 'anti_join': 16, 'left_join': 12, 'union': 12, 'natural_join': 12, 'semi_join': 8})
[    12.303][MainProcess][DEBUG] Printing statistics for good programs of size 2
[    12.308][MainProcess][DEBUG] 	0: Counter({'inner_join': 3049, 'left_join': 1410, 'union': 1386, 'natural_join': 1008, 'anti_join': 996, 'semi_join': 962, 'intersect': 286})
[    12.312][MainProcess][DEBUG] 	1: Counter({'inner_join': 3750, 'natural_join3': 1132, 'union': 882, 'anti_join': 869, 'left_join': 858, 'natural_join': 752, 'semi_join': 668, 'intersect': 186})
[    12.312][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    12.313][MainProcess][DEBUG] 	0: Counter({'natural_join': 1498})
[    12.314][MainProcess][DEBUG] 	1: Counter({'left_join': 906, 'anti_join': 595})
[    12.315][MainProcess][DEBUG] 	2: Counter({'natural_join': 330, 'left_join': 227, 'inner_join': 227, 'union': 216, 'natural_join3': 180, 'semi_join': 172, 'anti_join': 127, 'intersect': 22})
[    12.315][MainProcess][INFO] Solution found: anti_join(@param0, inner_join(@param1, @param0, 'CustomerId' = 'Id'), 'Name')

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/leetcode/tables/183_1.csv", col_types = cols(Id = col_integer(),Name = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/leetcode/tables/183_2.csv", col_types = cols(Id = col_integer(),CustomerId = col_integer()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/leetcode/tables/183_o.csv", col_types = cols(Customers = col_character()))

df3 <- inner_join(input2, input1, by=c('CustomerId' = 'Id'), suffix = c('', '.other'))
df4 <- anti_join(input1, df3, by=c('Name'))
out <- df4 %>% select(Customers = Name) %>% arrange(Customers)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT Name AS Customers
FROM
  (SELECT *
   FROM input1 AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT LHS.Id AS Id,
                  LHS.CustomerId AS CustomerId,
                  RHS.Name AS Name
           FROM input2 AS LHS
           INNER JOIN input1 AS RHS ON (LHS.CustomerId = RHS.Id)) AS RHS
        WHERE (LHS.Name = RHS.Name) ))
ORDER BY Customers
