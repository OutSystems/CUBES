[     3.492][MainProcess][INFO] Parsing specification...
[     3.497][MainProcess][DEBUG] Reading input files...
[     3.505][MainProcess][INFO] Inferred data types for table tests-examples/leetcode/tables/183_1.csv: ['int64', 'string']
[     3.510][MainProcess][INFO] Inferred data types for table tests-examples/leetcode/tables/183_2.csv: ['int64', 'int64']
[     3.514][MainProcess][INFO] Inferred data types for table tests-examples/leetcode/tables/183_o.csv: ['string']
[     3.545][MainProcess][DEBUG] Generating DSL...
[     3.562][MainProcess][INFO] Creating 16 processes
[     3.634][cube-solver-4][DEBUG] Initialising process for 1 lines of code.
[     3.634][cube-solver-0][DEBUG] Initialising process for 1 lines of code.
[     3.634][cube-solver-5][DEBUG] Initialising process for 1 lines of code.
[     3.634][cube-solver-2][DEBUG] Initialising process for 1 lines of code.
[     3.634][cube-solver-6][DEBUG] Initialising process for 1 lines of code.
[     3.634][cube-solver-1][DEBUG] Initialising process for 1 lines of code.
[     3.634][MainProcess][DEBUG] Increasing generator loc to 2
[     3.634][cube-solver-3][DEBUG] Initialising process for 1 lines of code.
[     3.634][cube-solver-7][DEBUG] Initialising process for 1 lines of code.
[     3.635][cube-solver-8][DEBUG] Initialising process for 1 lines of code.
[     3.642][cube-solver-9][DEBUG] Initialising process for 1 lines of code.
[     3.646][cube-solver-10][DEBUG] Initialising process for 2 lines of code.
[     3.651][cube-solver-11][DEBUG] Initialising process for 2 lines of code.
[     3.656][cube-solver-13][DEBUG] Initialising process for 2 lines of code.
[     3.662][cube-solver-12][DEBUG] Initialising process for 2 lines of code.
[     3.671][cube-solver-15][DEBUG] Initialising process for 2 lines of code.
[     3.674][cube-solver-14][DEBUG] Initialising process for 2 lines of code.
[     3.699][cube-solver-8][DEBUG] Solving cube (l0 = cross_join(),)
[     3.700][cube-solver-4][DEBUG] Solving cube (l0 = left_join(),)
[     3.704][cube-solver-6][DEBUG] Solving cube (l0 = intersect(),)
[     3.717][cube-solver-9][DEBUG] Solving cube (l0 = inner_join(),)
[     3.733][cube-solver-1][DEBUG] Solving cube (l0 = natural_join3(),)
[     3.733][cube-solver-8][DEBUG] Initialising process for 2 lines of code.
[     3.734][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     3.744][cube-solver-3][DEBUG] Solving cube (l0 = anti_join(),)
[     3.744][cube-solver-7][DEBUG] Solving cube (l0 = semi_join(),)
[     3.744][cube-solver-5][DEBUG] Solving cube (l0 = union(),)
[     3.744][cube-solver-2][DEBUG] Solving cube (l0 = natural_join4(),)
[     3.745][cube-solver-0][DEBUG] Solving cube (l0 = natural_join(),)
[     3.747][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     3.774][cube-solver-13][DEBUG] Solving cube (l0 = natural_join(), l1 = intersect())
[     3.782][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join())
[     3.782][cube-solver-11][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join())
[     3.784][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join4())
[     3.786][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = anti_join())
[     3.788][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = left_join())
[     3.790][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = union())
[     3.792][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = intersect())
[     3.793][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = semi_join())
[     3.795][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = cross_join([2]))
[     3.798][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = inner_join([3]))
[     3.802][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join())
[     3.804][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join3())
[     3.804][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = cross_join([2]))
[     3.806][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = natural_join4())
[     3.808][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = anti_join())
[     3.810][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = left_join())
[     3.812][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = union())
[     3.812][cube-solver-14][DEBUG] Solving cube (l0 = natural_join(), l1 = semi_join())
[     3.814][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = intersect())
[     3.817][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = semi_join())
[     3.820][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = cross_join([2]))
[     3.825][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = inner_join([3]))
[     3.829][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join())
[     3.830][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join3())
[     3.831][cube-solver-10][DEBUG] Solving cube (l0 = natural_join4(), l1 = natural_join4())
[     3.833][cube-solver-10][DEBUG] Solving cube (l0 = anti_join(), l1 = natural_join())
[     3.834][cube-solver-4][DEBUG] Initialising process for 2 lines of code.
[     3.872][cube-solver-7][DEBUG] Initialising process for 2 lines of code.
[     3.885][cube-solver-12][DEBUG] Solving cube (l0 = natural_join(), l1 = union())
[     3.908][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     3.918][cube-solver-5][DEBUG] Initialising process for 2 lines of code.
[     3.939][cube-solver-1][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join())
[     3.940][cube-solver-15][DEBUG] Solving cube (l0 = anti_join([6]), l1 = union())
[     3.940][cube-solver-8][DEBUG] Solving cube (l0 = natural_join(), l1 = inner_join([3]))
[     3.942][cube-solver-2][DEBUG] Solving cube (l0 = natural_join(), l1 = natural_join3())
[     3.946][cube-solver-2][DEBUG] Solving cube (l0 = anti_join([7]), l1 = intersect([4]))
[     3.967][cube-solver-4][DEBUG] Solving cube (l0 = anti_join([10]), l1 = natural_join3())
[     3.977][cube-solver-4][DEBUG] Solving cube (l0 = anti_join([10]), l1 = semi_join())
[     3.991][cube-solver-6][DEBUG] Initialising process for 2 lines of code.
[     4.027][cube-solver-7][DEBUG] Solving cube (l0 = anti_join([10]), l1 = natural_join4())
[     4.037][cube-solver-7][DEBUG] Solving cube (l0 = anti_join([10]), l1 = inner_join([6]))
[     4.048][cube-solver-0][DEBUG] Solving cube (l0 = anti_join([10]), l1 = anti_join([10]))
[     4.056][cube-solver-5][DEBUG] Solving cube (l0 = anti_join([10]), l1 = left_join())
[     4.060][cube-solver-0][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join())
[     4.060][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     4.211][cube-solver-6][DEBUG] Solving cube (l0 = anti_join([10]), l1 = cross_join([2]))
[     4.262][cube-solver-3][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join3())
[     4.323][cube-solver-11][DEBUG] Solving cube (l0 = left_join(), l1 = natural_join4())
[     4.327][cube-solver-11][DEBUG] Solving cube (l0 = left_join(), l1 = anti_join([10]))
[     4.327][cube-solver-9][DEBUG] Initialising process for 2 lines of code.
[     4.346][cube-solver-14][DEBUG] Solving cube (l0 = left_join(), l1 = union())
[     4.453][cube-solver-1][DEBUG] Solving cube (l0 = left_join(), l1 = intersect([6]))
[     4.509][cube-solver-12][DEBUG] Solving cube (l0 = left_join(), l1 = semi_join())
[     4.515][cube-solver-6][DEBUG] Solving cube (l0 = left_join(), l1 = cross_join([2]))
[     4.534][cube-solver-9][DEBUG] Solving cube (l0 = left_join(), l1 = left_join())
[     4.616][cube-solver-13][DEBUG] Solving cube (l0 = left_join(), l1 = inner_join([22]))
[     4.724][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = natural_join())
[     4.861][cube-solver-4][DEBUG] Solving cube (l0 = union(), l1 = natural_join3())
[     4.938][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = natural_join4())
[     4.940][cube-solver-0][DEBUG] Solving cube (l0 = union(), l1 = anti_join([10]))
[     5.072][cube-solver-5][DEBUG] Solving cube (l0 = union(), l1 = left_join())
[     5.077][cube-solver-15][DEBUG] Solving cube (l0 = union(), l1 = union())
[     5.101][cube-solver-10][DEBUG] Solving cube (l0 = union(), l1 = intersect([6]))
[     5.285][cube-solver-12][DEBUG] Solving cube (l0 = union(), l1 = semi_join())
[     5.350][cube-solver-14][DEBUG] Solving cube (l0 = union(), l1 = cross_join([2]))
[     5.359][cube-solver-6][DEBUG] Solving cube (l0 = union(), l1 = inner_join([22]))
[     5.457][cube-solver-9][DEBUG] Solving cube (l0 = intersect([6]), l1 = natural_join())
[     5.482][cube-solver-14][DEBUG] Solving cube (l0 = intersect([6]), l1 = natural_join3())
[     5.525][cube-solver-1][DEBUG] Solving cube (l0 = intersect([6]), l1 = natural_join4())
[     5.530][cube-solver-1][DEBUG] Solving cube (l0 = intersect([6]), l1 = anti_join([10]))
[     5.788][cube-solver-2][DEBUG] Solving cube (l0 = intersect([8]), l1 = left_join())
[     5.790][cube-solver-3][DEBUG] Solving cube (l0 = intersect([8]), l1 = union())
[     5.818][cube-solver-5][DEBUG] Solving cube (l0 = intersect([8]), l1 = intersect([8]))
[     5.841][cube-solver-9][DEBUG] Solving cube (l0 = intersect([8]), l1 = semi_join())
[     5.901][cube-solver-12][DEBUG] Solving cube (l0 = intersect([8]), l1 = cross_join([2]))
[     5.934][cube-solver-15][DEBUG] Solving cube (l0 = intersect([8]), l1 = inner_join([22]))
[     6.029][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join())
[     6.058][cube-solver-9][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join3())
[     6.077][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = natural_join4())
[     6.081][cube-solver-10][DEBUG] Solving cube (l0 = semi_join(), l1 = anti_join([10]))
[     6.094][cube-solver-2][DEBUG] Solving cube (l0 = semi_join(), l1 = left_join())
[     6.116][cube-solver-4][DEBUG] Solving cube (l0 = semi_join(), l1 = union())
[     6.210][cube-solver-3][DEBUG] Solving cube (l0 = semi_join(), l1 = intersect([8]))
[     6.461][cube-solver-5][DEBUG] Solving cube (l0 = semi_join(), l1 = semi_join())
[     6.560][cube-solver-12][DEBUG] Solving cube (l0 = semi_join(), l1 = cross_join([2]))
[     6.648][cube-solver-11][DEBUG] Solving cube (l0 = semi_join(), l1 = inner_join([22]))
[     6.698][cube-solver-12][DEBUG] Solving cube (l0 = cross_join([2]), l1 = natural_join())
[     6.735][cube-solver-12][DEBUG] Solving cube (l0 = cross_join([4]), l1 = natural_join3())
[     6.738][cube-solver-12][DEBUG] Solving cube (l0 = cross_join([4]), l1 = natural_join4())
[     6.740][cube-solver-4][DEBUG] Solving cube (l0 = cross_join([4]), l1 = anti_join([10]))
[     6.740][cube-solver-12][DEBUG] Solving cube (l0 = cross_join([4]), l1 = left_join())
[     6.743][cube-solver-12][DEBUG] Solving cube (l0 = cross_join([4]), l1 = union())
[     6.745][cube-solver-12][DEBUG] Solving cube (l0 = cross_join([4]), l1 = intersect([8]))
[     6.751][cube-solver-12][DEBUG] Solving cube (l0 = cross_join([4]), l1 = semi_join())
[     6.753][cube-solver-12][DEBUG] Solving cube (l0 = cross_join([4]), l1 = cross_join([4]))
[     6.754][cube-solver-4][DEBUG] Solving cube (l0 = cross_join([4]), l1 = inner_join([22]))
[     6.757][cube-solver-12][DEBUG] Solving cube (l0 = inner_join([22]), l1 = natural_join())
[     6.766][cube-solver-4][DEBUG] Solving cube (l0 = inner_join([22]), l1 = natural_join3())
[     6.832][cube-solver-2][DEBUG] Solving cube (l0 = inner_join([23]), l1 = natural_join4())
[     6.852][cube-solver-2][DEBUG] Solving cube (l0 = inner_join([23]), l1 = anti_join([10]))
[     6.934][cube-solver-14][DEBUG] Solving cube (l0 = inner_join([24]), l1 = left_join())
[     7.001][cube-solver-0][DEBUG] Solving cube (l0 = inner_join([24]), l1 = union())
[     7.055][cube-solver-5][DEBUG] Solving cube (l0 = inner_join([28]), l1 = intersect([8]))
[     7.178][cube-solver-1][DEBUG] Solving cube (l0 = inner_join([31]), l1 = semi_join())
[     7.214][cube-solver-3][DEBUG] Solving cube (l0 = inner_join([32]), l1 = cross_join([4]))
[     7.600][cube-solver-9][DEBUG] Solving cube (l0 = inner_join([36]), l1 = inner_join([36]))
[     7.931][MainProcess][DEBUG] Increasing generator loc to 3
[     7.932][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     8.122][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[     8.145][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = natural_join())
[     8.243][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[     8.353][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = natural_join3())
[     8.360][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = anti_join([10]))
[     8.370][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = left_join())
[     8.458][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = natural_join4())
[     8.465][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = union())
[     9.129][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = intersect([8]))
[     9.307][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = semi_join())
[     9.343][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = cross_join([4]))
[     9.574][cube-solver-15][DEBUG] Solving cube (l0 = natural_join(), l1 = anti_join([10]), l2 = inner_join([38]))
[    10.157][cube-solver-3][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = natural_join())
[    10.351][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[    10.481][cube-solver-2][DEBUG] Found solution with cube (l0 = inner_join([23]), l1 = anti_join([10]))
[    10.481][cube-solver-10][DEBUG] Solving cube (l0 = natural_join(), l1 = left_join(), l2 = natural_join4())
[    10.482][MainProcess][INFO] Statistics:
[    10.482][MainProcess][INFO] 	Generated cubes: 123
[    10.483][MainProcess][INFO] 	Attempted programs: 1885
[    10.483][MainProcess][INFO] 		Rejected: 762
[    10.483][MainProcess][INFO] 		Failed: 1122
[    10.483][MainProcess][INFO] 	Blacklist clauses: 60
[    10.483][MainProcess][DEBUG] Priting statistics for good programs of size 1
[    10.483][MainProcess][DEBUG] 	0: Counter({'inner_join': 46, 'anti_join': 16, 'left_join': 12, 'union': 12, 'natural_join': 12, 'semi_join': 8})
[    10.483][MainProcess][DEBUG] Priting statistics for good programs of size 2
[    10.488][MainProcess][DEBUG] 	0: Counter({'inner_join': 2457, 'left_join': 1270, 'union': 1234, 'natural_join': 949, 'semi_join': 860, 'anti_join': 846, 'intersect': 286})
[    10.491][MainProcess][DEBUG] 	1: Counter({'inner_join': 3006, 'natural_join3': 986, 'union': 836, 'left_join': 813, 'natural_join': 752, 'anti_join': 687, 'semi_join': 664, 'intersect': 158})
[    10.492][MainProcess][DEBUG] Priting statistics for good programs of size 3
[    10.492][MainProcess][DEBUG] 	0: Counter({'natural_join': 478})
[    10.492][MainProcess][DEBUG] 	1: Counter({'anti_join': 455, 'left_join': 23})
[    10.493][MainProcess][DEBUG] 	2: Counter({'natural_join': 119, 'left_join': 96, 'union': 96, 'inner_join': 87, 'semi_join': 80})
[    10.493][MainProcess][INFO] Solution found: anti_join(@param0, inner_join(@param0, @param1, 'Id' = 'CustomerId','CustomerId' = 'CustomerId'), )

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/leetcode/tables/183_1.csv", col_types = cols(Id = col_integer(),Name = col_character()))
input1 <- copy_to(con, input1)
input2 <- read_csv("tests-examples/leetcode/tables/183_2.csv", col_types = cols(Id = col_integer(),CustomerId = col_integer()))
input2 <- copy_to(con, input2)
expected_output <- read_csv("tests-examples/leetcode/tables/183_o.csv", col_types = cols(Customers = col_character()))

df3 <- inner_join(input1, input2, by=c('Id' = 'CustomerId','CustomerId' = 'CustomerId'), suffix = c('', '.other'))
df4 <- anti_join(input1, df3, by=c())
out <- df4 %>% select(Customers = Name) %>% arrange(Customers)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT Name AS Customers
FROM
  (SELECT *
   FROM input1 AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT LHS.Id AS Id,
                  LHS.Name AS Name,
                  RHS.Id AS Id.other
           FROM input1 AS LHS
           INNER JOIN input2 AS RHS ON (LHS.Id = RHS.CustomerId)) AS RHS
        WHERE (LHS.Id = RHS.Id
               AND LHS.Name = RHS.Name) ))
ORDER BY Customers
