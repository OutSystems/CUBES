[     3.523][MainProcess][INFO] Parsing specification...
[     3.561][MainProcess][DEBUG] Reading input files...
[     3.588][MainProcess][INFO] Inferred data types for table tests-examples/leetcode/tables/180.csv: ['int64', 'int64']
[     3.594][MainProcess][INFO] Inferred data types for table tests-examples/leetcode/tables/180_o.csv: ['int64']
[     3.634][MainProcess][DEBUG] Generating DSL...
[     4.596][MainProcess][INFO] Creating 16 processes
[     4.669][MainProcess][DEBUG] Increasing generator loc to 3
[     5.777][cube-solver-0][DEBUG] Initialising process for 2 lines of code.
[     5.777][cube-solver-14][DEBUG] Initialising process for 3 lines of code.
[     5.780][cube-solver-2][DEBUG] Initialising process for 2 lines of code.
[     5.787][cube-solver-4][DEBUG] Initialising process for 3 lines of code.
[     5.789][cube-solver-6][DEBUG] Initialising process for 3 lines of code.
[     5.789][cube-solver-10][DEBUG] Initialising process for 3 lines of code.
[     5.789][cube-solver-1][DEBUG] Initialising process for 2 lines of code.
[     5.796][cube-solver-3][DEBUG] Initialising process for 2 lines of code.
[     5.801][cube-solver-11][DEBUG] Initialising process for 3 lines of code.
[     5.809][cube-solver-5][DEBUG] Initialising process for 3 lines of code.
[     5.810][cube-solver-7][DEBUG] Initialising process for 3 lines of code.
[     5.810][cube-solver-12][DEBUG] Initialising process for 3 lines of code.
[     5.816][cube-solver-13][DEBUG] Initialising process for 3 lines of code.
[     5.816][cube-solver-9][DEBUG] Initialising process for 3 lines of code.
[     5.818][cube-solver-8][DEBUG] Initialising process for 3 lines of code.
[     5.856][cube-solver-15][DEBUG] Initialising process for 3 lines of code.
[    62.708][cube-solver-3][DEBUG] Solving cube (l0 = mutate(), l1 = mutate())
[    62.721][cube-solver-2][DEBUG] Solving cube (l0 = mutate(), l1 = summarise())
[    63.045][cube-solver-0][DEBUG] Solving cube (l0 = summarise(), l1 = summarise())
[    63.324][cube-solver-0][DEBUG] Initialising process for 3 lines of code.
[    63.330][cube-solver-1][DEBUG] Solving cube (l0 = summarise(), l1 = mutate())
[    63.330][cube-solver-2][DEBUG] Initialising process for 3 lines of code.
[    63.360][cube-solver-3][DEBUG] Initialising process for 3 lines of code.
[    63.950][cube-solver-1][DEBUG] Initialising process for 3 lines of code.
[    94.537][cube-solver-10][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = summarise([2]))
[    94.785][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = natural_join4(), l2 = summarise([2]))
[    94.913][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = natural_join4(), l2 = mutate())
[    94.980][cube-solver-9][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([2]), l2 = mutate())
[    95.032][cube-solver-13][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([2]), l2 = mutate())
[    95.078][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = natural_join())
[    95.191][cube-solver-5][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([2]), l2 = mutate())
[    95.266][cube-solver-15][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = mutate())
[    95.299][cube-solver-14][DEBUG] Solving cube (l0 = natural_join4(), l1 = mutate(), l2 = summarise([2]))
[    95.415][cube-solver-9][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = natural_join3())
[    95.543][cube-solver-13][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = natural_join4())
[    95.580][cube-solver-5][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = summarise([2]))
[    95.679][cube-solver-12][DEBUG] Solving cube (l0 = natural_join4(), l1 = summarise([2]), l2 = summarise([2]))
[    95.723][cube-solver-13][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = filter())
[    95.740][cube-solver-5][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = anti_join())
[    95.771][cube-solver-8][DEBUG] Solving cube (l0 = natural_join3(), l1 = summarise([2]), l2 = summarise([2]))
[    95.811][cube-solver-11][DEBUG] Solving cube (l0 = natural_join3(), l1 = mutate(), l2 = mutate())
[    95.892][cube-solver-14][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = left_join())
[    95.900][cube-solver-15][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = union())
[    95.915][cube-solver-7][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = mutate())
[    95.921][cube-solver-13][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = intersect())
[    96.018][cube-solver-12][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = semi_join())
[    96.124][cube-solver-8][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = cross_join())
[    96.268][cube-solver-7][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = inner_join())
[    96.275][cube-solver-11][DEBUG] Solving cube (l0 = summarise([2]), l1 = summarise([2]), l2 = mutate())
[    96.506][cube-solver-11][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = summarise([2]))
[    96.571][cube-solver-6][DEBUG] Solving cube (l0 = natural_join(), l1 = mutate(), l2 = summarise([2]))
[    96.940][cube-solver-6][DEBUG] Solving cube (l0 = summarise([2]), l1 = filter(), l2 = mutate())
[    96.947][cube-solver-4][DEBUG] Solving cube (l0 = natural_join(), l1 = summarise([2]), l2 = summarise([2]))
[    97.313][cube-solver-4][DEBUG] Solving cube (l0 = summarise([2]), l1 = anti_join(), l2 = summarise([2]))
[    97.343][cube-solver-7][DEBUG] Found solution with cube (l0 = summarise([2]), l1 = summarise([2]), l2 = inner_join())
[    97.344][MainProcess][INFO] Statistics:
[    97.344][MainProcess][INFO] 	Generated cubes: 39
[    97.344][MainProcess][INFO] 	Attempted programs: 39
[    97.345][MainProcess][INFO] 		Rejected: 27
[    97.345][MainProcess][INFO] 		Failed: 11
[    97.345][MainProcess][INFO] 	Blacklist clauses: 2
[    97.345][MainProcess][DEBUG] Printing statistics for good programs of size 2
[    97.345][MainProcess][DEBUG] 	0: Counter({'mutate': 36, 'summarise': 16})
[    97.345][MainProcess][DEBUG] 	1: Counter({'mutate': 32, 'summarise': 20})
[    97.346][MainProcess][DEBUG] Printing statistics for good programs of size 3
[    97.346][MainProcess][DEBUG] 	0: Counter({'summarise': 557})
[    97.346][MainProcess][DEBUG] 	1: Counter({'summarise': 515, 'filter': 42})
[    97.347][MainProcess][DEBUG] 	2: Counter({'natural_join': 120, 'natural_join3': 104, 'union': 76, 'left_join': 66, 'semi_join': 52, 'anti_join': 44, 'inner_join': 28, 'summarise': 26, 'intersect': 25, 'mutate': 16})
[    97.347][MainProcess][INFO] Solution found: inner_join(summarise(@param0, leadNum = lead(Num), Id, Num), summarise(@param0, lagNum = lag(Num), Id, Num), 'Num' = 'Id')
[    97.535][cube-solver-10][DEBUG] Solving cube (l0 = summarise([2]), l1 = anti_join(), l2 = mutate())
[    97.906][MainProcess][ERROR] Error while trying to convert R code to SQL.

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
input1 <- read_csv("tests-examples/leetcode/tables/180.csv", col_types = cols(Id = col_integer(),Num = col_integer()))
input1 <- copy_to(con, input1)
expected_output <- read_csv("tests-examples/leetcode/tables/180_o.csv", col_types = cols(ConsecutiveNums = col_integer()))

df2 <- input1 %>% group_by(Id, Num) %>% summarise(leadNum = lead(Num)) %>% ungroup()
df3 <- input1 %>% group_by(Id, Num) %>% summarise(lagNum = lag(Num)) %>% ungroup()
df4 <- inner_join(df2, df3, by=c('Num' = 'Id'), suffix = c('', '.other'))
out <- df4 %>% select(ConsecutiveNums = Num.other) %>% distinct() %>% arrange(ConsecutiveNums)

Failed to generate SQL query
