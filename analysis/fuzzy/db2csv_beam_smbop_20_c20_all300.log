Starting log for run db2csv_beam_smbop_20_c20_all300
No log for scythe/recent_posts/011 (1)
No log for scythe/recent_posts/022 (2)
No log for scythe/recent_posts/026 (3)
No log for scythe/recent_posts/033 (4)
No log for scythe/recent_posts/046 (5)
No log for scythe/recent_posts/051 (6)
No log for scythe/recent_posts/050 (7)
No log for scythe/recent_posts/012 (8)
No log for scythe/recent_posts/039 (9)
No log for scythe/recent_posts/040 (10)
No log for scythe/recent_posts/020 (11)
No log for scythe/recent_posts/003 (12)
No log for scythe/recent_posts/002 (13)
No log for scythe/recent_posts/016 (14)
No log for scythe/recent_posts/045 (15)
No log for scythe/recent_posts/005 (16)
No log for scythe/recent_posts/028 (17)
No log for scythe/recent_posts/024 (18)
No log for scythe/recent_posts/004 (19)
No log for scythe/recent_posts/032 (20)
No log for scythe/recent_posts/027 (21)
No log for scythe/recent_posts/037 (22)
No log for scythe/recent_posts/017 (23)
No log for scythe/recent_posts/014 (24)
No log for scythe/recent_posts/035 (25)
No log for scythe/recent_posts/019 (26)
No log for scythe/recent_posts/043 (27)
No log for scythe/recent_posts/013 (28)
No log for scythe/recent_posts/015 (29)
No log for scythe/recent_posts/049 (30)
No log for scythe/recent_posts/021 (31)
No log for scythe/recent_posts/023 (32)
No log for scythe/recent_posts/006 (33)
No log for scythe/recent_posts/031 (34)
No log for scythe/recent_posts/030 (35)
No log for scythe/recent_posts/047 (36)
No log for scythe/recent_posts/010 (37)
No log for scythe/recent_posts/025 (38)
No log for scythe/recent_posts/007 (39)
No log for scythe/recent_posts/001 (40)
No log for scythe/recent_posts/008 (41)
No log for scythe/recent_posts/048 (42)
No log for scythe/recent_posts/029 (43)
No log for scythe/recent_posts/034 (44)
No log for scythe/recent_posts/044 (45)
No log for scythe/recent_posts/041 (46)
No log for scythe/recent_posts/009 (47)
No log for scythe/recent_posts/042 (48)
No log for scythe/recent_posts/036 (49)
No log for scythe/recent_posts/038 (50)
No log for scythe/recent_posts/018 (51)
No log for scythe/top_rated_posts/011 (52)
No log for scythe/top_rated_posts/022 (53)
No log for scythe/top_rated_posts/026 (54)
No log for scythe/top_rated_posts/033 (55)
No log for scythe/top_rated_posts/046 (56)
No log for scythe/top_rated_posts/051 (57)
No log for scythe/top_rated_posts/050 (58)
No log for scythe/top_rated_posts/012 (59)
No log for scythe/top_rated_posts/039 (60)
No log for scythe/top_rated_posts/052 (61)
No log for scythe/top_rated_posts/056 (62)
No log for scythe/top_rated_posts/040 (63)
No log for scythe/top_rated_posts/057 (64)
No log for scythe/top_rated_posts/020 (65)
No log for scythe/top_rated_posts/003 (66)
No log for scythe/top_rated_posts/002 (67)
No log for scythe/top_rated_posts/016 (68)
No log for scythe/top_rated_posts/045 (69)
No log for scythe/top_rated_posts/005 (70)
No log for scythe/top_rated_posts/055 (71)
No log for scythe/top_rated_posts/028 (72)
No log for scythe/top_rated_posts/024 (73)
No log for scythe/top_rated_posts/004 (74)
No log for scythe/top_rated_posts/032 (75)
No log for scythe/top_rated_posts/027 (76)
No log for scythe/top_rated_posts/037 (77)
No log for scythe/top_rated_posts/017 (78)
No log for scythe/top_rated_posts/014 (79)
No log for scythe/top_rated_posts/035 (80)
No log for scythe/top_rated_posts/019 (81)
No log for scythe/top_rated_posts/043 (82)
No log for scythe/top_rated_posts/013 (83)
No log for scythe/top_rated_posts/015 (84)
No log for scythe/top_rated_posts/049 (85)
No log for scythe/top_rated_posts/021 (86)
No log for scythe/top_rated_posts/023 (87)
No log for scythe/top_rated_posts/006 (88)
No log for scythe/top_rated_posts/031 (89)
No log for scythe/top_rated_posts/030 (90)
No log for scythe/top_rated_posts/047 (91)
No log for scythe/top_rated_posts/010 (92)
No log for scythe/top_rated_posts/025 (93)
No log for scythe/top_rated_posts/007 (94)
No log for scythe/top_rated_posts/001 (95)
No log for scythe/top_rated_posts/008 (96)
No log for scythe/top_rated_posts/048 (97)
No log for scythe/top_rated_posts/029 (98)
No log for scythe/top_rated_posts/034 (99)
No log for scythe/top_rated_posts/053 (100)
No log for scythe/top_rated_posts/044 (101)
No log for scythe/top_rated_posts/041 (102)
No log for scythe/top_rated_posts/009 (103)
No log for scythe/top_rated_posts/042 (104)
No log for scythe/top_rated_posts/036 (105)
No log for scythe/top_rated_posts/054 (106)
No log for scythe/top_rated_posts/038 (107)
No log for scythe/top_rated_posts/018 (108)
No log for 55-tests/46 (109)
No log for 55-tests/1 (110)
No log for 55-tests/12 (111)
No log for 55-tests/24 (112)
No log for 55-tests/43 (113)
No log for 55-tests/27 (114)
No log for 55-tests/14 (115)
No log for 55-tests/23 (116)
No log for 55-tests/40 (117)
No log for 55-tests/4 (118)
No log for 55-tests/20 (119)
No log for 55-tests/8 (120)
No log for 55-tests/44 (121)
No log for 55-tests/35 (122)
No log for 55-tests/16 (123)
No log for 55-tests/10 (124)
No log for 55-tests/21 (125)
No log for 55-tests/18 (126)
No log for 55-tests/52 (127)
No log for 55-tests/3 (128)
No log for 55-tests/29 (129)
No log for 55-tests/36 (130)
No log for 55-tests/37 (131)
No log for 55-tests/6 (132)
No log for 55-tests/55 (133)
No log for 55-tests/30 (134)
No log for 55-tests/39 (135)
No log for 55-tests/38 (136)
No log for 55-tests/53 (137)
No log for 55-tests/54 (138)
No log for 55-tests/25 (139)
No log for 55-tests/11 (140)
No log for 55-tests/7 (141)
No log for 55-tests/5 (142)
No log for 55-tests/51 (143)
No log for 55-tests/32 (144)
No log for 55-tests/48 (145)
No log for 55-tests/28 (146)
No log for 55-tests/47 (147)
No log for 55-tests/13 (148)
No log for 55-tests/33 (149)
No log for 55-tests/34 (150)
No log for 55-tests/26 (151)
No log for 55-tests/45 (152)
No log for 55-tests/42 (153)
No log for 55-tests/2 (154)
No log for 55-tests/41 (155)
No log for 55-tests/17 (156)
No log for 55-tests/49 (157)
No log for 55-tests/22 (158)
No log for 55-tests/19 (159)
No log for 55-tests/15 (160)
No log for 55-tests/31 (161)
No log for 55-tests/9 (162)
No log for 55-tests/50 (163)
No log for spider/club_1/0033 (164)
No log for spider/club_1/0002 (165)
No log for spider/club_1/0017 (166)
No log for spider/club_1/0008 (167)
No log for spider/club_1/0003 (168)
No log for spider/club_1/0027 (169)
No log for spider/club_1/0022 (170)
No log for spider/club_1/0030 (171)
No log for spider/club_1/0013 (172)
No log for spider/club_1/0006 (173)
No log for spider/club_1/0004 (174)
No log for spider/club_1/0026 (175)
No log for spider/club_1/0015 (176)
No log for spider/club_1/0005 (177)
No log for spider/club_1/0016 (178)
No log for spider/club_1/0032 (179)
No log for spider/club_1/0018 (180)
No log for spider/club_1/0035 (181)
No log for spider/club_1/0020 (182)
No log for spider/club_1/0019 (183)
No log for spider/club_1/0007 (184)
No log for spider/club_1/0034 (185)
No log for spider/club_1/0024 (186)
No log for spider/club_1/0021 (187)
No log for spider/club_1/0023 (188)
No log for spider/club_1/0001 (189)
No log for spider/club_1/0014 (190)
No log for spider/club_1/0009 (191)
No log for spider/club_1/0025 (192)
No log for spider/club_1/0011 (193)
No log for spider/club_1/0029 (194)
No log for spider/club_1/0010 (195)
No log for spider/club_1/0028 (196)
No log for spider/decoration_competition/0002 (197)
No log for spider/decoration_competition/0008 (198)
No log for spider/decoration_competition/0003 (199)
No log for spider/decoration_competition/0013 (200)
No log for spider/decoration_competition/0006 (201)
No log for spider/decoration_competition/0004 (202)
No log for spider/decoration_competition/0012 (203)
No log for spider/decoration_competition/0015 (204)
No log for spider/decoration_competition/0005 (205)
No log for spider/decoration_competition/0007 (206)
No log for spider/decoration_competition/0001 (207)
No log for spider/decoration_competition/0014 (208)
No log for spider/decoration_competition/0009 (209)
No log for spider/decoration_competition/0011 (210)
No log for spider/decoration_competition/0010 (211)
No log for spider/swimming/0002 (212)
No log for spider/swimming/0017 (213)
No log for spider/swimming/0008 (214)
No log for spider/swimming/0003 (215)
No log for spider/swimming/0027 (216)
No log for spider/swimming/0022 (217)
No log for spider/swimming/0030 (218)
No log for spider/swimming/0013 (219)
No log for spider/swimming/0006 (220)
No log for spider/swimming/0004 (221)
No log for spider/swimming/0012 (222)
No log for spider/swimming/0026 (223)
No log for spider/swimming/0015 (224)
No log for spider/swimming/0005 (225)
No log for spider/swimming/0016 (226)
No log for spider/swimming/0018 (227)
No log for spider/swimming/0020 (228)
No log for spider/swimming/0019 (229)
No log for spider/swimming/0007 (230)
No log for spider/swimming/0024 (231)
No log for spider/swimming/0021 (232)
No log for spider/swimming/0023 (233)
No log for spider/swimming/0001 (234)
No log for spider/swimming/0014 (235)
No log for spider/swimming/0009 (236)
No log for spider/swimming/0025 (237)
No log for spider/swimming/0011 (238)
No log for spider/swimming/0029 (239)
No log for spider/swimming/0010 (240)
No log for spider/swimming/0028 (241)
No log for spider/perpetrator/0002 (242)
No log for spider/perpetrator/0017 (243)
No log for spider/perpetrator/0008 (244)
No log for spider/perpetrator/0003 (245)
No log for spider/perpetrator/0013 (246)
No log for spider/perpetrator/0006 (247)
No log for spider/perpetrator/0004 (248)
No log for spider/perpetrator/0012 (249)
No log for spider/perpetrator/0015 (250)
No log for spider/perpetrator/0005 (251)
No log for spider/perpetrator/0016 (252)
No log for spider/perpetrator/0018 (253)
No log for spider/perpetrator/0020 (254)
No log for spider/perpetrator/0019 (255)
No log for spider/perpetrator/0007 (256)
No log for spider/perpetrator/0021 (257)
No log for spider/perpetrator/0001 (258)
No log for spider/perpetrator/0014 (259)
No log for spider/perpetrator/0009 (260)
No log for spider/perpetrator/0011 (261)
No log for spider/perpetrator/0010 (262)
No log for spider/cre_Doc_Control_Systems/0033 (263)
No log for spider/cre_Doc_Control_Systems/0002 (264)
No log for spider/cre_Doc_Control_Systems/0017 (265)
No log for spider/cre_Doc_Control_Systems/0008 (266)
No log for spider/cre_Doc_Control_Systems/0003 (267)
No log for spider/cre_Doc_Control_Systems/0027 (268)
No log for spider/cre_Doc_Control_Systems/0022 (269)
No log for spider/cre_Doc_Control_Systems/0030 (270)
No log for spider/cre_Doc_Control_Systems/0013 (271)
No log for spider/cre_Doc_Control_Systems/0006 (272)
No log for spider/cre_Doc_Control_Systems/0004 (273)
No log for spider/cre_Doc_Control_Systems/0012 (274)
No log for spider/cre_Doc_Control_Systems/0026 (275)
No log for spider/cre_Doc_Control_Systems/0015 (276)
No log for spider/cre_Doc_Control_Systems/0005 (277)
No log for spider/cre_Doc_Control_Systems/0016 (278)
No log for spider/cre_Doc_Control_Systems/0032 (279)
No log for spider/cre_Doc_Control_Systems/0018 (280)
No log for spider/cre_Doc_Control_Systems/0020 (281)
No log for spider/cre_Doc_Control_Systems/0019 (282)
No log for spider/cre_Doc_Control_Systems/0007 (283)
No log for spider/cre_Doc_Control_Systems/0024 (284)
No log for spider/cre_Doc_Control_Systems/0021 (285)
No log for spider/cre_Doc_Control_Systems/0023 (286)
No log for spider/cre_Doc_Control_Systems/0001 (287)
No log for spider/cre_Doc_Control_Systems/0014 (288)
No log for spider/cre_Doc_Control_Systems/0009 (289)
No log for spider/cre_Doc_Control_Systems/0025 (290)
No log for spider/cre_Doc_Control_Systems/0011 (291)
No log for spider/cre_Doc_Control_Systems/0029 (292)
No log for spider/cre_Doc_Control_Systems/0010 (293)
No log for spider/cre_Doc_Control_Systems/0028 (294)
No log for spider/cre_Doc_Control_Systems/0031 (295)
No log for spider/pilot_record/0002 (296)
No log for spider/pilot_record/0008 (297)
No log for spider/pilot_record/0003 (298)
No log for spider/pilot_record/0013 (299)
No log for spider/pilot_record/0006 (300)
No log for spider/pilot_record/0004 (301)
No log for spider/pilot_record/0012 (302)
No log for spider/pilot_record/0015 (303)
No log for spider/pilot_record/0005 (304)
No log for spider/pilot_record/0007 (305)
No log for spider/pilot_record/0001 (306)
No log for spider/pilot_record/0014 (307)
No log for spider/pilot_record/0009 (308)
No log for spider/pilot_record/0011 (309)
No log for spider/pilot_record/0010 (310)
No log for spider/local_govt_in_alabama/0002 (311)
No log for spider/local_govt_in_alabama/0008 (312)
No log for spider/local_govt_in_alabama/0003 (313)
No log for spider/local_govt_in_alabama/0013 (314)
No log for spider/local_govt_in_alabama/0006 (315)
No log for spider/local_govt_in_alabama/0004 (316)
No log for spider/local_govt_in_alabama/0012 (317)
No log for spider/local_govt_in_alabama/0015 (318)
No log for spider/local_govt_in_alabama/0005 (319)
No log for spider/local_govt_in_alabama/0007 (320)
No log for spider/local_govt_in_alabama/0001 (321)
No log for spider/local_govt_in_alabama/0014 (322)
No log for spider/local_govt_in_alabama/0009 (323)
No log for spider/local_govt_in_alabama/0011 (324)
No log for spider/local_govt_in_alabama/0010 (325)
No log for spider/architecture/0002 (326)
No log for spider/architecture/0017 (327)
No log for spider/architecture/0008 (328)
No log for spider/architecture/0003 (329)
No log for spider/architecture/0013 (330)
No log for spider/architecture/0006 (331)
No log for spider/architecture/0004 (332)
No log for spider/architecture/0012 (333)
No log for spider/architecture/0015 (334)
No log for spider/architecture/0005 (335)
No log for spider/architecture/0016 (336)
No log for spider/architecture/0007 (337)
No log for spider/architecture/0001 (338)
No log for spider/architecture/0014 (339)
No log for spider/architecture/0009 (340)
No log for spider/architecture/0011 (341)
No log for spider/architecture/0010 (342)
No log for spider/election_representative/0002 (343)
No log for spider/election_representative/0017 (344)
No log for spider/election_representative/0008 (345)
No log for spider/election_representative/0003 (346)
No log for spider/election_representative/0013 (347)
No log for spider/election_representative/0006 (348)
No log for spider/election_representative/0004 (349)
No log for spider/election_representative/0012 (350)
No log for spider/election_representative/0015 (351)
No log for spider/election_representative/0005 (352)
No log for spider/election_representative/0016 (353)
No log for spider/election_representative/0018 (354)
No log for spider/election_representative/0020 (355)
No log for spider/election_representative/0019 (356)
No log for spider/election_representative/0007 (357)
No log for spider/election_representative/0001 (358)
No log for spider/election_representative/0014 (359)
No log for spider/election_representative/0009 (360)
No log for spider/election_representative/0011 (361)
No log for spider/election_representative/0010 (362)
No log for spider/student_assessment/0002 (363)
No log for spider/student_assessment/0017 (364)
No log for spider/student_assessment/0008 (365)
No log for spider/student_assessment/0003 (366)
No log for spider/student_assessment/0027 (367)
No log for spider/student_assessment/0022 (368)
No log for spider/student_assessment/0013 (369)
No log for spider/student_assessment/0006 (370)
No log for spider/student_assessment/0004 (371)
No log for spider/student_assessment/0012 (372)
No log for spider/student_assessment/0026 (373)
No log for spider/student_assessment/0015 (374)
No log for spider/student_assessment/0005 (375)
No log for spider/student_assessment/0016 (376)
No log for spider/student_assessment/0018 (377)
No log for spider/student_assessment/0020 (378)
No log for spider/student_assessment/0019 (379)
No log for spider/student_assessment/0007 (380)
No log for spider/student_assessment/0024 (381)
No log for spider/student_assessment/0021 (382)
No log for spider/student_assessment/0023 (383)
No log for spider/student_assessment/0001 (384)
No log for spider/student_assessment/0014 (385)
No log for spider/student_assessment/0009 (386)
No log for spider/student_assessment/0025 (387)
No log for spider/student_assessment/0011 (388)
No log for spider/student_assessment/0010 (389)
No log for spider/customers_campaigns_ecommerce/0002 (390)
No log for spider/customers_campaigns_ecommerce/0008 (391)
No log for spider/customers_campaigns_ecommerce/0003 (392)
No log for spider/customers_campaigns_ecommerce/0013 (393)
No log for spider/customers_campaigns_ecommerce/0006 (394)
No log for spider/customers_campaigns_ecommerce/0004 (395)
No log for spider/customers_campaigns_ecommerce/0012 (396)
No log for spider/customers_campaigns_ecommerce/0015 (397)
No log for spider/customers_campaigns_ecommerce/0005 (398)
No log for spider/customers_campaigns_ecommerce/0007 (399)
No log for spider/customers_campaigns_ecommerce/0001 (400)
No log for spider/customers_campaigns_ecommerce/0014 (401)
No log for spider/customers_campaigns_ecommerce/0009 (402)
No log for spider/customers_campaigns_ecommerce/0011 (403)
No log for spider/customers_campaigns_ecommerce/0010 (404)
No log for spider/csu_1/0033 (405)
No log for spider/csu_1/0002 (406)
No log for spider/csu_1/0017 (407)
No log for spider/csu_1/0008 (408)
No log for spider/csu_1/0003 (409)
No log for spider/csu_1/0027 (410)
No log for spider/csu_1/0022 (411)
No log for spider/csu_1/0030 (412)
No log for spider/csu_1/0013 (413)
No log for spider/csu_1/0006 (414)
No log for spider/csu_1/0012 (415)
No log for spider/csu_1/0015 (416)
No log for spider/csu_1/0005 (417)
No log for spider/csu_1/0016 (418)
No log for spider/csu_1/0018 (419)
No log for spider/csu_1/0020 (420)
No log for spider/csu_1/0019 (421)
No log for spider/csu_1/0007 (422)
No log for spider/csu_1/0024 (423)
No log for spider/csu_1/0021 (424)
No log for spider/csu_1/0023 (425)
No log for spider/csu_1/0001 (426)
No log for spider/csu_1/0014 (427)
No log for spider/csu_1/0009 (428)
No log for spider/csu_1/0025 (429)
No log for spider/csu_1/0011 (430)
No log for spider/csu_1/0029 (431)
No log for spider/csu_1/0010 (432)
No log for spider/farm/0002 (433)
No log for spider/farm/0008 (434)
No log for spider/farm/0003 (435)
No log for spider/farm/0013 (436)
No log for spider/farm/0006 (437)
No log for spider/farm/0004 (438)
No log for spider/farm/0012 (439)
No log for spider/farm/0015 (440)
No log for spider/farm/0005 (441)
No log for spider/farm/0016 (442)
No log for spider/farm/0018 (443)
No log for spider/farm/0020 (444)
No log for spider/farm/0019 (445)
No log for spider/farm/0007 (446)
No log for spider/farm/0001 (447)
No log for spider/farm/0014 (448)
No log for spider/farm/0009 (449)
No log for spider/farm/0011 (450)
No log for spider/farm/0010 (451)
No log for spider/train_station/0002 (452)
No log for spider/train_station/0017 (453)
No log for spider/train_station/0008 (454)
No log for spider/train_station/0003 (455)
No log for spider/train_station/0022 (456)
No log for spider/train_station/0013 (457)
No log for spider/train_station/0006 (458)
No log for spider/train_station/0004 (459)
No log for spider/train_station/0012 (460)
No log for spider/train_station/0015 (461)
No log for spider/train_station/0005 (462)
No log for spider/train_station/0016 (463)
No log for spider/train_station/0018 (464)
No log for spider/train_station/0020 (465)
No log for spider/train_station/0019 (466)
No log for spider/train_station/0007 (467)
No log for spider/train_station/0021 (468)
No log for spider/train_station/0023 (469)
No log for spider/train_station/0001 (470)
No log for spider/train_station/0014 (471)
No log for spider/train_station/0009 (472)
No log for spider/train_station/0011 (473)
No log for spider/train_station/0010 (474)
No log for spider/manufacturer/0002 (475)
No log for spider/manufacturer/0008 (476)
No log for spider/manufacturer/0003 (477)
No log for spider/manufacturer/0013 (478)
No log for spider/manufacturer/0006 (479)
No log for spider/manufacturer/0004 (480)
No log for spider/manufacturer/0012 (481)
No log for spider/manufacturer/0015 (482)
No log for spider/manufacturer/0005 (483)
No log for spider/manufacturer/0016 (484)
No log for spider/manufacturer/0007 (485)
No log for spider/manufacturer/0001 (486)
No log for spider/manufacturer/0014 (487)
No log for spider/manufacturer/0009 (488)
No log for spider/manufacturer/0011 (489)
No log for spider/manufacturer/0010 (490)
No log for spider/twitter_1/0002 (491)
No log for spider/twitter_1/0017 (492)
No log for spider/twitter_1/0008 (493)
No log for spider/twitter_1/0003 (494)
No log for spider/twitter_1/0027 (495)
No log for spider/twitter_1/0022 (496)
No log for spider/twitter_1/0013 (497)
No log for spider/twitter_1/0006 (498)
No log for spider/twitter_1/0004 (499)
No log for spider/twitter_1/0012 (500)
No log for spider/twitter_1/0026 (501)
No log for spider/twitter_1/0005 (502)
No log for spider/twitter_1/0016 (503)
No log for spider/twitter_1/0018 (504)
No log for spider/twitter_1/0020 (505)
No log for spider/twitter_1/0019 (506)
No log for spider/twitter_1/0007 (507)
No log for spider/twitter_1/0024 (508)
No log for spider/twitter_1/0021 (509)
No log for spider/twitter_1/0023 (510)
No log for spider/twitter_1/0001 (511)
No log for spider/twitter_1/0014 (512)
No log for spider/twitter_1/0009 (513)
No log for spider/twitter_1/0025 (514)
No log for spider/twitter_1/0011 (515)
No log for spider/twitter_1/0010 (516)
No log for spider/party_host/0002 (517)
No log for spider/party_host/0008 (518)
No log for spider/party_host/0003 (519)
No log for spider/party_host/0013 (520)
No log for spider/party_host/0006 (521)
No log for spider/party_host/0004 (522)
No log for spider/party_host/0012 (523)
No log for spider/party_host/0015 (524)
No log for spider/party_host/0005 (525)
No log for spider/party_host/0007 (526)
No log for spider/party_host/0001 (527)
No log for spider/party_host/0014 (528)
No log for spider/party_host/0009 (529)
No log for spider/party_host/0011 (530)
No log for spider/party_host/0010 (531)
No log for spider/school_player/0002 (532)
No log for spider/school_player/0008 (533)
No log for spider/school_player/0003 (534)
No log for spider/school_player/0013 (535)
No log for spider/school_player/0006 (536)
No log for spider/school_player/0004 (537)
No log for spider/school_player/0012 (538)
No log for spider/school_player/0015 (539)
No log for spider/school_player/0005 (540)
No log for spider/school_player/0016 (541)
No log for spider/school_player/0018 (542)
No log for spider/school_player/0020 (543)
No log for spider/school_player/0019 (544)
No log for spider/school_player/0007 (545)
No log for spider/school_player/0001 (546)
No log for spider/school_player/0014 (547)
No log for spider/school_player/0009 (548)
No log for spider/school_player/0011 (549)
No log for spider/school_player/0010 (550)
No log for spider/customers_and_invoices/0033 (551)
No log for spider/customers_and_invoices/0037 (552)
No log for spider/customers_and_invoices/0002 (553)
No log for spider/customers_and_invoices/0036 (554)
No log for spider/customers_and_invoices/0017 (555)
No log for spider/customers_and_invoices/0008 (556)
No log for spider/customers_and_invoices/0039 (557)
No log for spider/customers_and_invoices/0038 (558)
No log for spider/customers_and_invoices/0003 (559)
No log for spider/customers_and_invoices/0027 (560)
No log for spider/customers_and_invoices/0022 (561)
No log for spider/customers_and_invoices/0030 (562)
No log for spider/customers_and_invoices/0013 (563)
No log for spider/customers_and_invoices/0006 (564)
No log for spider/customers_and_invoices/0004 (565)
No log for spider/customers_and_invoices/0012 (566)
No log for spider/customers_and_invoices/0026 (567)
No log for spider/customers_and_invoices/0015 (568)
No log for spider/customers_and_invoices/0005 (569)
No log for spider/customers_and_invoices/0016 (570)
No log for spider/customers_and_invoices/0032 (571)
No log for spider/customers_and_invoices/0018 (572)
No log for spider/customers_and_invoices/0041 (573)
No log for spider/customers_and_invoices/0035 (574)
No log for spider/customers_and_invoices/0020 (575)
No log for spider/customers_and_invoices/0019 (576)
No log for spider/customers_and_invoices/0007 (577)
No log for spider/customers_and_invoices/0034 (578)
No log for spider/customers_and_invoices/0024 (579)
No log for spider/customers_and_invoices/0021 (580)
No log for spider/customers_and_invoices/0023 (581)
No log for spider/customers_and_invoices/0001 (582)
No log for spider/customers_and_invoices/0014 (583)
No log for spider/customers_and_invoices/0009 (584)
No log for spider/customers_and_invoices/0025 (585)
No log for spider/customers_and_invoices/0011 (586)
No log for spider/customers_and_invoices/0029 (587)
No log for spider/customers_and_invoices/0010 (588)
No log for spider/customers_and_invoices/0040 (589)
No log for spider/customers_and_invoices/0028 (590)
No log for spider/customers_and_invoices/0031 (591)
No log for spider/ship_1/0002 (592)
No log for spider/ship_1/0017 (593)
No log for spider/ship_1/0008 (594)
No log for spider/ship_1/0003 (595)
No log for spider/ship_1/0022 (596)
No log for spider/ship_1/0013 (597)
No log for spider/ship_1/0006 (598)
No log for spider/ship_1/0004 (599)
No log for spider/ship_1/0012 (600)
No log for spider/ship_1/0015 (601)
No log for spider/ship_1/0005 (602)
No log for spider/ship_1/0016 (603)
No log for spider/ship_1/0018 (604)
No log for spider/ship_1/0020 (605)
No log for spider/ship_1/0019 (606)
No log for spider/ship_1/0007 (607)
No log for spider/ship_1/0024 (608)
No log for spider/ship_1/0021 (609)
No log for spider/ship_1/0023 (610)
No log for spider/ship_1/0001 (611)
No log for spider/ship_1/0014 (612)
No log for spider/ship_1/0009 (613)
No log for spider/ship_1/0011 (614)
No log for spider/ship_1/0010 (615)
No log for spider/baseball_1/0033 (616)
No log for spider/baseball_1/0037 (617)
No log for spider/baseball_1/0002 (618)
No log for spider/baseball_1/0036 (619)
No log for spider/baseball_1/0017 (620)
No log for spider/baseball_1/0008 (621)
No log for spider/baseball_1/0039 (622)
No log for spider/baseball_1/0038 (623)
No log for spider/baseball_1/0003 (624)
No log for spider/baseball_1/0027 (625)
No log for spider/baseball_1/0022 (626)
No log for spider/baseball_1/0030 (627)
No log for spider/baseball_1/0013 (628)
No log for spider/baseball_1/0006 (629)
No log for spider/baseball_1/0004 (630)
No log for spider/baseball_1/0012 (631)
No log for spider/baseball_1/0026 (632)
No log for spider/baseball_1/0015 (633)
No log for spider/baseball_1/0005 (634)
No log for spider/baseball_1/0016 (635)
No log for spider/baseball_1/0032 (636)
No log for spider/baseball_1/0018 (637)
No log for spider/baseball_1/0041 (638)
No log for spider/baseball_1/0035 (639)
No log for spider/baseball_1/0020 (640)
No log for spider/baseball_1/0019 (641)
No log for spider/baseball_1/0007 (642)
No log for spider/baseball_1/0034 (643)
No log for spider/baseball_1/0024 (644)
No log for spider/baseball_1/0021 (645)
No log for spider/baseball_1/0001 (646)
No log for spider/baseball_1/0014 (647)
No log for spider/baseball_1/0009 (648)
No log for spider/baseball_1/0025 (649)
No log for spider/baseball_1/0011 (650)
No log for spider/baseball_1/0029 (651)
No log for spider/baseball_1/0010 (652)
No log for spider/baseball_1/0040 (653)
No log for spider/baseball_1/0028 (654)
No log for spider/baseball_1/0031 (655)
No log for spider/entertainment_awards/0002 (656)
No log for spider/entertainment_awards/0017 (657)
No log for spider/entertainment_awards/0008 (658)
No log for spider/entertainment_awards/0003 (659)
No log for spider/entertainment_awards/0013 (660)
No log for spider/entertainment_awards/0006 (661)
No log for spider/entertainment_awards/0004 (662)
No log for spider/entertainment_awards/0012 (663)
No log for spider/entertainment_awards/0015 (664)
No log for spider/entertainment_awards/0005 (665)
No log for spider/entertainment_awards/0016 (666)
No log for spider/entertainment_awards/0018 (667)
No log for spider/entertainment_awards/0020 (668)
No log for spider/entertainment_awards/0019 (669)
No log for spider/entertainment_awards/0007 (670)
No log for spider/entertainment_awards/0021 (671)
No log for spider/entertainment_awards/0001 (672)
No log for spider/entertainment_awards/0014 (673)
No log for spider/entertainment_awards/0009 (674)
No log for spider/entertainment_awards/0011 (675)
No log for spider/entertainment_awards/0010 (676)
No log for spider/store_product/0002 (677)
No log for spider/store_product/0017 (678)
No log for spider/store_product/0008 (679)
No log for spider/store_product/0003 (680)
No log for spider/store_product/0022 (681)
No log for spider/store_product/0013 (682)
No log for spider/store_product/0006 (683)
No log for spider/store_product/0004 (684)
No log for spider/store_product/0012 (685)
No log for spider/store_product/0015 (686)
No log for spider/store_product/0005 (687)
No log for spider/store_product/0016 (688)
No log for spider/store_product/0018 (689)
No log for spider/store_product/0020 (690)
No log for spider/store_product/0019 (691)
No log for spider/store_product/0007 (692)
No log for spider/store_product/0021 (693)
No log for spider/store_product/0001 (694)
No log for spider/store_product/0014 (695)
No log for spider/store_product/0009 (696)
No log for spider/store_product/0011 (697)
No log for spider/department_management/0002 (698)
No log for spider/department_management/0008 (699)
No log for spider/department_management/0003 (700)
No log for spider/department_management/0013 (701)
No log for spider/department_management/0006 (702)
No log for spider/department_management/0004 (703)
No log for spider/department_management/0012 (704)
No log for spider/department_management/0015 (705)
No log for spider/department_management/0005 (706)
No log for spider/department_management/0016 (707)
No log for spider/department_management/0007 (708)
No log for spider/department_management/0001 (709)
No log for spider/department_management/0014 (710)
No log for spider/department_management/0009 (711)
No log for spider/department_management/0011 (712)
No log for spider/department_management/0010 (713)
No log for spider/small_bank_1/0002 (714)
No log for spider/small_bank_1/0017 (715)
No log for spider/small_bank_1/0008 (716)
No log for spider/small_bank_1/0003 (717)
No log for spider/small_bank_1/0022 (718)
No log for spider/small_bank_1/0013 (719)
No log for spider/small_bank_1/0006 (720)
No log for spider/small_bank_1/0004 (721)
No log for spider/small_bank_1/0012 (722)
No log for spider/small_bank_1/0015 (723)
No log for spider/small_bank_1/0005 (724)
No log for spider/small_bank_1/0016 (725)
No log for spider/small_bank_1/0018 (726)
No log for spider/small_bank_1/0020 (727)
No log for spider/small_bank_1/0019 (728)
No log for spider/small_bank_1/0007 (729)
No log for spider/small_bank_1/0024 (730)
No log for spider/small_bank_1/0021 (731)
No log for spider/small_bank_1/0023 (732)
No log for spider/small_bank_1/0001 (733)
No log for spider/small_bank_1/0014 (734)
No log for spider/small_bank_1/0009 (735)
No log for spider/small_bank_1/0025 (736)
No log for spider/small_bank_1/0011 (737)
No log for spider/small_bank_1/0010 (738)
No log for spider/browser_web/0002 (739)
No log for spider/browser_web/0017 (740)
No log for spider/browser_web/0008 (741)
No log for spider/browser_web/0003 (742)
No log for spider/browser_web/0013 (743)
No log for spider/browser_web/0006 (744)
No log for spider/browser_web/0004 (745)
No log for spider/browser_web/0012 (746)
No log for spider/browser_web/0015 (747)
No log for spider/browser_web/0005 (748)
No log for spider/browser_web/0016 (749)
No log for spider/browser_web/0018 (750)
No log for spider/browser_web/0007 (751)
No log for spider/browser_web/0001 (752)
No log for spider/browser_web/0014 (753)
No log for spider/browser_web/0009 (754)
No log for spider/browser_web/0011 (755)
No log for spider/browser_web/0010 (756)
No log for spider/customer_deliveries/0002 (757)
No log for spider/customer_deliveries/0008 (758)
No log for spider/customer_deliveries/0003 (759)
No log for spider/customer_deliveries/0013 (760)
No log for spider/customer_deliveries/0006 (761)
No log for spider/customer_deliveries/0004 (762)
No log for spider/customer_deliveries/0012 (763)
No log for spider/customer_deliveries/0015 (764)
No log for spider/customer_deliveries/0005 (765)
No log for spider/customer_deliveries/0016 (766)
No log for spider/customer_deliveries/0007 (767)
No log for spider/customer_deliveries/0001 (768)
No log for spider/customer_deliveries/0014 (769)
No log for spider/customer_deliveries/0009 (770)
No log for spider/customer_deliveries/0011 (771)
No log for spider/customer_deliveries/0010 (772)
No log for spider/journal_committee/0002 (773)
No log for spider/journal_committee/0017 (774)
No log for spider/journal_committee/0008 (775)
No log for spider/journal_committee/0003 (776)
No log for spider/journal_committee/0013 (777)
No log for spider/journal_committee/0006 (778)
No log for spider/journal_committee/0004 (779)
No log for spider/journal_committee/0012 (780)
No log for spider/journal_committee/0015 (781)
No log for spider/journal_committee/0005 (782)
No log for spider/journal_committee/0016 (783)
No log for spider/journal_committee/0007 (784)
No log for spider/journal_committee/0001 (785)
No log for spider/journal_committee/0014 (786)
No log for spider/journal_committee/0009 (787)
No log for spider/journal_committee/0011 (788)
No log for spider/journal_committee/0010 (789)
No log for spider/tracking_grants_for_research/0033 (790)
No log for spider/tracking_grants_for_research/0037 (791)
No log for spider/tracking_grants_for_research/0002 (792)
No log for spider/tracking_grants_for_research/0036 (793)
No log for spider/tracking_grants_for_research/0017 (794)
No log for spider/tracking_grants_for_research/0008 (795)
No log for spider/tracking_grants_for_research/0039 (796)
No log for spider/tracking_grants_for_research/0038 (797)
No log for spider/tracking_grants_for_research/0003 (798)
No log for spider/tracking_grants_for_research/0027 (799)
No log for spider/tracking_grants_for_research/0022 (800)
No log for spider/tracking_grants_for_research/0030 (801)
No log for spider/tracking_grants_for_research/0013 (802)
No log for spider/tracking_grants_for_research/0006 (803)
No log for spider/tracking_grants_for_research/0004 (804)
No log for spider/tracking_grants_for_research/0012 (805)
No log for spider/tracking_grants_for_research/0026 (806)
No log for spider/tracking_grants_for_research/0015 (807)
No log for spider/tracking_grants_for_research/0005 (808)
No log for spider/tracking_grants_for_research/0016 (809)
No log for spider/tracking_grants_for_research/0032 (810)
No log for spider/tracking_grants_for_research/0018 (811)
No log for spider/tracking_grants_for_research/0035 (812)
No log for spider/tracking_grants_for_research/0020 (813)
No log for spider/tracking_grants_for_research/0019 (814)
No log for spider/tracking_grants_for_research/0007 (815)
No log for spider/tracking_grants_for_research/0034 (816)
No log for spider/tracking_grants_for_research/0024 (817)
No log for spider/tracking_grants_for_research/0021 (818)
No log for spider/tracking_grants_for_research/0023 (819)
No log for spider/tracking_grants_for_research/0001 (820)
No log for spider/tracking_grants_for_research/0014 (821)
No log for spider/tracking_grants_for_research/0009 (822)
No log for spider/tracking_grants_for_research/0025 (823)
No log for spider/tracking_grants_for_research/0011 (824)
No log for spider/tracking_grants_for_research/0029 (825)
No log for spider/tracking_grants_for_research/0010 (826)
No log for spider/tracking_grants_for_research/0028 (827)
No log for spider/tracking_grants_for_research/0031 (828)
No log for spider/epinions_1/0002 (829)
No log for spider/epinions_1/0017 (830)
No log for spider/epinions_1/0008 (831)
No log for spider/epinions_1/0003 (832)
No log for spider/epinions_1/0027 (833)
No log for spider/epinions_1/0022 (834)
No log for spider/epinions_1/0006 (835)
No log for spider/epinions_1/0004 (836)
No log for spider/epinions_1/0012 (837)
No log for spider/epinions_1/0026 (838)
No log for spider/epinions_1/0015 (839)
No log for spider/epinions_1/0005 (840)
No log for spider/epinions_1/0016 (841)
No log for spider/epinions_1/0018 (842)
No log for spider/epinions_1/0020 (843)
No log for spider/epinions_1/0019 (844)
No log for spider/epinions_1/0007 (845)
No log for spider/epinions_1/0024 (846)
No log for spider/epinions_1/0021 (847)
No log for spider/epinions_1/0023 (848)
No log for spider/epinions_1/0001 (849)
No log for spider/epinions_1/0009 (850)
No log for spider/epinions_1/0025 (851)
No log for spider/epinions_1/0011 (852)
No log for spider/epinions_1/0010 (853)
No log for spider/epinions_1/0028 (854)
No log for spider/store_1/0056 (855)
No log for spider/store_1/0042 (856)
No log for spider/store_1/0033 (857)
No log for spider/store_1/0037 (858)
No log for spider/store_1/0002 (859)
No log for spider/store_1/0036 (860)
No log for spider/store_1/0017 (861)
No log for spider/store_1/0052 (862)
No log for spider/store_1/0008 (863)
No log for spider/store_1/0039 (864)
No log for spider/store_1/0038 (865)
No log for spider/store_1/0003 (866)
No log for spider/store_1/0027 (867)
No log for spider/store_1/0048 (868)
No log for spider/store_1/0022 (869)
No log for spider/store_1/0053 (870)
No log for spider/store_1/0030 (871)
No log for spider/store_1/0013 (872)
No log for spider/store_1/0006 (873)
No log for spider/store_1/0004 (874)
No log for spider/store_1/0012 (875)
No log for spider/store_1/0026 (876)
No log for spider/store_1/0015 (877)
No log for spider/store_1/0005 (878)
No log for spider/store_1/0016 (879)
No log for spider/store_1/0032 (880)
No log for spider/store_1/0045 (881)
No log for spider/store_1/0018 (882)
No log for spider/store_1/0041 (883)
No log for spider/store_1/0051 (884)
No log for spider/store_1/0035 (885)
No log for spider/store_1/0020 (886)
No log for spider/store_1/0019 (887)
No log for spider/store_1/0007 (888)
No log for spider/store_1/0034 (889)
No log for spider/store_1/0024 (890)
No log for spider/store_1/0021 (891)
No log for spider/store_1/0023 (892)
No log for spider/store_1/0001 (893)
No log for spider/store_1/0043 (894)
No log for spider/store_1/0046 (895)
No log for spider/store_1/0047 (896)
No log for spider/store_1/0014 (897)
No log for spider/store_1/0009 (898)
No log for spider/store_1/0025 (899)
No log for spider/store_1/0011 (900)
No log for spider/store_1/0029 (901)
No log for spider/store_1/0010 (902)
No log for spider/store_1/0044 (903)
No log for spider/store_1/0040 (904)
No log for spider/store_1/0028 (905)
No log for spider/store_1/0049 (906)
No log for spider/store_1/0031 (907)
No log for spider/shop_membership/0002 (908)
No log for spider/shop_membership/0017 (909)
No log for spider/shop_membership/0008 (910)
No log for spider/shop_membership/0003 (911)
No log for spider/shop_membership/0022 (912)
No log for spider/shop_membership/0013 (913)
No log for spider/shop_membership/0006 (914)
No log for spider/shop_membership/0004 (915)
No log for spider/shop_membership/0012 (916)
No log for spider/shop_membership/0015 (917)
No log for spider/shop_membership/0005 (918)
No log for spider/shop_membership/0016 (919)
No log for spider/shop_membership/0020 (920)
No log for spider/shop_membership/0019 (921)
No log for spider/shop_membership/0007 (922)
No log for spider/shop_membership/0001 (923)
No log for spider/shop_membership/0014 (924)
No log for spider/shop_membership/0009 (925)
No log for spider/shop_membership/0011 (926)
No log for spider/shop_membership/0010 (927)
No log for spider/movie_1/0042 (928)
No log for spider/movie_1/0033 (929)
No log for spider/movie_1/0037 (930)
No log for spider/movie_1/0002 (931)
No log for spider/movie_1/0036 (932)
No log for spider/movie_1/0017 (933)
No log for spider/movie_1/0008 (934)
No log for spider/movie_1/0039 (935)
No log for spider/movie_1/0038 (936)
No log for spider/movie_1/0003 (937)
No log for spider/movie_1/0027 (938)
No log for spider/movie_1/0048 (939)
No log for spider/movie_1/0022 (940)
No log for spider/movie_1/0030 (941)
No log for spider/movie_1/0013 (942)
No log for spider/movie_1/0006 (943)
No log for spider/movie_1/0004 (944)
No log for spider/movie_1/0012 (945)
No log for spider/movie_1/0026 (946)
No log for spider/movie_1/0015 (947)
No log for spider/movie_1/0005 (948)
No log for spider/movie_1/0016 (949)
No log for spider/movie_1/0032 (950)
No log for spider/movie_1/0045 (951)
No log for spider/movie_1/0018 (952)
No log for spider/movie_1/0041 (953)
No log for spider/movie_1/0035 (954)
No log for spider/movie_1/0020 (955)
No log for spider/movie_1/0019 (956)
No log for spider/movie_1/0007 (957)
No log for spider/movie_1/0034 (958)
No log for spider/movie_1/0024 (959)
No log for spider/movie_1/0021 (960)
No log for spider/movie_1/0023 (961)
No log for spider/movie_1/0001 (962)
No log for spider/movie_1/0043 (963)
No log for spider/movie_1/0046 (964)
No log for spider/movie_1/0047 (965)
No log for spider/movie_1/0009 (966)
No log for spider/movie_1/0025 (967)
No log for spider/movie_1/0011 (968)
No log for spider/movie_1/0029 (969)
No log for spider/movie_1/0010 (970)
No log for spider/movie_1/0044 (971)
No log for spider/movie_1/0040 (972)
No log for spider/movie_1/0028 (973)
No log for spider/movie_1/0049 (974)
No log for spider/movie_1/0031 (975)
No log for spider/book_2/0002 (976)
No log for spider/book_2/0017 (977)
No log for spider/book_2/0008 (978)
No log for spider/book_2/0003 (979)
No log for spider/book_2/0013 (980)
No log for spider/book_2/0006 (981)
No log for spider/book_2/0004 (982)
No log for spider/book_2/0012 (983)
No log for spider/book_2/0015 (984)
No log for spider/book_2/0005 (985)
No log for spider/book_2/0016 (986)
No log for spider/book_2/0018 (987)
No log for spider/book_2/0020 (988)
No log for spider/book_2/0019 (989)
No log for spider/book_2/0007 (990)
No log for spider/book_2/0001 (991)
No log for spider/book_2/0014 (992)
No log for spider/book_2/0009 (993)
No log for spider/book_2/0011 (994)
No log for spider/book_2/0010 (995)
No log for spider/student_1/0033 (996)
No log for spider/student_1/0002 (997)
No log for spider/student_1/0008 (998)
No log for spider/student_1/0003 (999)
No log for spider/student_1/0027 (1000)
No log for spider/student_1/0022 (1001)
No log for spider/student_1/0030 (1002)
No log for spider/student_1/0013 (1003)
No log for spider/student_1/0006 (1004)
No log for spider/student_1/0004 (1005)
No log for spider/student_1/0012 (1006)
No log for spider/student_1/0026 (1007)
No log for spider/student_1/0015 (1008)
No log for spider/student_1/0005 (1009)
No log for spider/student_1/0032 (1010)
No log for spider/student_1/0020 (1011)
No log for spider/student_1/0007 (1012)
No log for spider/student_1/0034 (1013)
No log for spider/student_1/0024 (1014)
No log for spider/student_1/0021 (1015)
No log for spider/student_1/0023 (1016)
No log for spider/student_1/0001 (1017)
No log for spider/student_1/0014 (1018)
No log for spider/student_1/0009 (1019)
No log for spider/student_1/0025 (1020)
No log for spider/student_1/0011 (1021)
No log for spider/student_1/0029 (1022)
No log for spider/student_1/0010 (1023)
No log for spider/student_1/0028 (1024)
No log for spider/student_1/0031 (1025)
No log for spider/cre_Docs_and_Epenses/0042 (1026)
No log for spider/cre_Docs_and_Epenses/0033 (1027)
No log for spider/cre_Docs_and_Epenses/0037 (1028)
No log for spider/cre_Docs_and_Epenses/0002 (1029)
No log for spider/cre_Docs_and_Epenses/0036 (1030)
No log for spider/cre_Docs_and_Epenses/0017 (1031)
No log for spider/cre_Docs_and_Epenses/0008 (1032)
No log for spider/cre_Docs_and_Epenses/0039 (1033)
No log for spider/cre_Docs_and_Epenses/0038 (1034)
No log for spider/cre_Docs_and_Epenses/0003 (1035)
No log for spider/cre_Docs_and_Epenses/0027 (1036)
No log for spider/cre_Docs_and_Epenses/0022 (1037)
No log for spider/cre_Docs_and_Epenses/0030 (1038)
No log for spider/cre_Docs_and_Epenses/0013 (1039)
No log for spider/cre_Docs_and_Epenses/0006 (1040)
No log for spider/cre_Docs_and_Epenses/0004 (1041)
No log for spider/cre_Docs_and_Epenses/0012 (1042)
No log for spider/cre_Docs_and_Epenses/0026 (1043)
No log for spider/cre_Docs_and_Epenses/0015 (1044)
No log for spider/cre_Docs_and_Epenses/0005 (1045)
No log for spider/cre_Docs_and_Epenses/0016 (1046)
No log for spider/cre_Docs_and_Epenses/0032 (1047)
No log for spider/cre_Docs_and_Epenses/0018 (1048)
No log for spider/cre_Docs_and_Epenses/0035 (1049)
No log for spider/cre_Docs_and_Epenses/0020 (1050)
No log for spider/cre_Docs_and_Epenses/0019 (1051)
No log for spider/cre_Docs_and_Epenses/0007 (1052)
No log for spider/cre_Docs_and_Epenses/0034 (1053)
No log for spider/cre_Docs_and_Epenses/0024 (1054)
No log for spider/cre_Docs_and_Epenses/0021 (1055)
No log for spider/cre_Docs_and_Epenses/0023 (1056)
No log for spider/cre_Docs_and_Epenses/0001 (1057)
No log for spider/cre_Docs_and_Epenses/0014 (1058)
No log for spider/cre_Docs_and_Epenses/0009 (1059)
No log for spider/cre_Docs_and_Epenses/0025 (1060)
No log for spider/cre_Docs_and_Epenses/0011 (1061)
No log for spider/cre_Docs_and_Epenses/0029 (1062)
No log for spider/cre_Docs_and_Epenses/0010 (1063)
No log for spider/cre_Docs_and_Epenses/0040 (1064)
No log for spider/cre_Docs_and_Epenses/0028 (1065)
No log for spider/cre_Docs_and_Epenses/0031 (1066)
No log for spider/customers_and_products_contacts/0002 (1067)
No log for spider/customers_and_products_contacts/0008 (1068)
No log for spider/customers_and_products_contacts/0003 (1069)
No log for spider/customers_and_products_contacts/0013 (1070)
No log for spider/customers_and_products_contacts/0006 (1071)
No log for spider/customers_and_products_contacts/0004 (1072)
No log for spider/customers_and_products_contacts/0012 (1073)
No log for spider/customers_and_products_contacts/0015 (1074)
No log for spider/customers_and_products_contacts/0005 (1075)
No log for spider/customers_and_products_contacts/0007 (1076)
No log for spider/customers_and_products_contacts/0001 (1077)
No log for spider/customers_and_products_contacts/0014 (1078)
No log for spider/customers_and_products_contacts/0009 (1079)
No log for spider/customers_and_products_contacts/0011 (1080)
No log for spider/customers_and_products_contacts/0010 (1081)
No log for spider/bike_1/0042 (1082)
No log for spider/bike_1/0033 (1083)
No log for spider/bike_1/0037 (1084)
No log for spider/bike_1/0002 (1085)
No log for spider/bike_1/0036 (1086)
No log for spider/bike_1/0017 (1087)
No log for spider/bike_1/0052 (1088)
No log for spider/bike_1/0008 (1089)
No log for spider/bike_1/0039 (1090)
No log for spider/bike_1/0038 (1091)
No log for spider/bike_1/0003 (1092)
No log for spider/bike_1/0027 (1093)
No log for spider/bike_1/0048 (1094)
No log for spider/bike_1/0022 (1095)
No log for spider/bike_1/0030 (1096)
No log for spider/bike_1/0013 (1097)
No log for spider/bike_1/0006 (1098)
No log for spider/bike_1/0004 (1099)
No log for spider/bike_1/0012 (1100)
No log for spider/bike_1/0026 (1101)
No log for spider/bike_1/0015 (1102)
No log for spider/bike_1/0005 (1103)
No log for spider/bike_1/0016 (1104)
No log for spider/bike_1/0050 (1105)
No log for spider/bike_1/0032 (1106)
No log for spider/bike_1/0045 (1107)
No log for spider/bike_1/0018 (1108)
No log for spider/bike_1/0041 (1109)
No log for spider/bike_1/0051 (1110)
No log for spider/bike_1/0035 (1111)
No log for spider/bike_1/0020 (1112)
No log for spider/bike_1/0019 (1113)
No log for spider/bike_1/0007 (1114)
No log for spider/bike_1/0034 (1115)
No log for spider/bike_1/0024 (1116)
No log for spider/bike_1/0021 (1117)
No log for spider/bike_1/0023 (1118)
No log for spider/bike_1/0001 (1119)
No log for spider/bike_1/0043 (1120)
No log for spider/bike_1/0046 (1121)
No log for spider/bike_1/0047 (1122)
No log for spider/bike_1/0014 (1123)
No log for spider/bike_1/0009 (1124)
No log for spider/bike_1/0025 (1125)
No log for spider/bike_1/0011 (1126)
No log for spider/bike_1/0029 (1127)
No log for spider/bike_1/0010 (1128)
No log for spider/bike_1/0044 (1129)
No log for spider/bike_1/0040 (1130)
No log for spider/bike_1/0028 (1131)
No log for spider/bike_1/0049 (1132)
No log for spider/bike_1/0031 (1133)
No log for spider/flight_company/0002 (1134)
No log for spider/flight_company/0017 (1135)
No log for spider/flight_company/0008 (1136)
No log for spider/flight_company/0003 (1137)
No log for spider/flight_company/0013 (1138)
No log for spider/flight_company/0006 (1139)
No log for spider/flight_company/0004 (1140)
No log for spider/flight_company/0012 (1141)
No log for spider/flight_company/0015 (1142)
No log for spider/flight_company/0005 (1143)
No log for spider/flight_company/0016 (1144)
No log for spider/flight_company/0018 (1145)
No log for spider/flight_company/0019 (1146)
No log for spider/flight_company/0007 (1147)
No log for spider/flight_company/0001 (1148)
No log for spider/flight_company/0014 (1149)
No log for spider/flight_company/0009 (1150)
No log for spider/flight_company/0011 (1151)
No log for spider/flight_company/0010 (1152)
No log for spider/insurance_and_eClaims/0002 (1153)
No log for spider/insurance_and_eClaims/0017 (1154)
No log for spider/insurance_and_eClaims/0008 (1155)
No log for spider/insurance_and_eClaims/0003 (1156)
No log for spider/insurance_and_eClaims/0013 (1157)
No log for spider/insurance_and_eClaims/0006 (1158)
No log for spider/insurance_and_eClaims/0004 (1159)
No log for spider/insurance_and_eClaims/0012 (1160)
No log for spider/insurance_and_eClaims/0015 (1161)
No log for spider/insurance_and_eClaims/0005 (1162)
No log for spider/insurance_and_eClaims/0016 (1163)
No log for spider/insurance_and_eClaims/0018 (1164)
No log for spider/insurance_and_eClaims/0020 (1165)
No log for spider/insurance_and_eClaims/0019 (1166)
No log for spider/insurance_and_eClaims/0007 (1167)
No log for spider/insurance_and_eClaims/0001 (1168)
No log for spider/insurance_and_eClaims/0014 (1169)
No log for spider/insurance_and_eClaims/0009 (1170)
No log for spider/insurance_and_eClaims/0011 (1171)
No log for spider/insurance_and_eClaims/0010 (1172)
No log for spider/formula_1/0033 (1173)
No log for spider/formula_1/0037 (1174)
No log for spider/formula_1/0002 (1175)
No log for spider/formula_1/0036 (1176)
No log for spider/formula_1/0017 (1177)
No log for spider/formula_1/0039 (1178)
No log for spider/formula_1/0038 (1179)
No log for spider/formula_1/0003 (1180)
No log for spider/formula_1/0027 (1181)
No log for spider/formula_1/0030 (1182)
No log for spider/formula_1/0013 (1183)
No log for spider/formula_1/0004 (1184)
No log for spider/formula_1/0012 (1185)
No log for spider/formula_1/0026 (1186)
No log for spider/formula_1/0015 (1187)
No log for spider/formula_1/0016 (1188)
No log for spider/formula_1/0032 (1189)
No log for spider/formula_1/0018 (1190)
No log for spider/formula_1/0035 (1191)
No log for spider/formula_1/0020 (1192)
No log for spider/formula_1/0019 (1193)
No log for spider/formula_1/0034 (1194)
No log for spider/formula_1/0024 (1195)
No log for spider/formula_1/0021 (1196)
No log for spider/formula_1/0001 (1197)
No log for spider/formula_1/0014 (1198)
No log for spider/formula_1/0025 (1199)
No log for spider/formula_1/0011 (1200)
No log for spider/formula_1/0010 (1201)
No log for spider/formula_1/0040 (1202)
No log for spider/formula_1/0031 (1203)
No log for spider/e_government/0002 (1204)
No log for spider/e_government/0017 (1205)
No log for spider/e_government/0008 (1206)
No log for spider/e_government/0003 (1207)
No log for spider/e_government/0013 (1208)
No log for spider/e_government/0006 (1209)
No log for spider/e_government/0004 (1210)
No log for spider/e_government/0012 (1211)
No log for spider/e_government/0015 (1212)
No log for spider/e_government/0005 (1213)
No log for spider/e_government/0016 (1214)
No log for spider/e_government/0018 (1215)
No log for spider/e_government/0020 (1216)
No log for spider/e_government/0019 (1217)
No log for spider/e_government/0007 (1218)
No log for spider/e_government/0001 (1219)
No log for spider/e_government/0014 (1220)
No log for spider/e_government/0009 (1221)
No log for spider/e_government/0011 (1222)
No log for spider/e_government/0010 (1223)
No log for spider/machine_repair/0002 (1224)
No log for spider/machine_repair/0008 (1225)
No log for spider/machine_repair/0003 (1226)
No log for spider/machine_repair/0013 (1227)
No log for spider/machine_repair/0006 (1228)
No log for spider/machine_repair/0004 (1229)
No log for spider/machine_repair/0012 (1230)
No log for spider/machine_repair/0015 (1231)
No log for spider/machine_repair/0005 (1232)
No log for spider/machine_repair/0007 (1233)
No log for spider/machine_repair/0001 (1234)
No log for spider/machine_repair/0014 (1235)
No log for spider/machine_repair/0009 (1236)
No log for spider/machine_repair/0011 (1237)
No log for spider/machine_repair/0010 (1238)
No log for spider/insurance_policies/0002 (1239)
No log for spider/insurance_policies/0017 (1240)
No log for spider/insurance_policies/0008 (1241)
No log for spider/insurance_policies/0003 (1242)
No log for spider/insurance_policies/0022 (1243)
No log for spider/insurance_policies/0013 (1244)
No log for spider/insurance_policies/0006 (1245)
No log for spider/insurance_policies/0004 (1246)
No log for spider/insurance_policies/0012 (1247)
No log for spider/insurance_policies/0015 (1248)
No log for spider/insurance_policies/0005 (1249)
No log for spider/insurance_policies/0016 (1250)
No log for spider/insurance_policies/0018 (1251)
No log for spider/insurance_policies/0020 (1252)
No log for spider/insurance_policies/0019 (1253)
No log for spider/insurance_policies/0007 (1254)
No log for spider/insurance_policies/0024 (1255)
No log for spider/insurance_policies/0021 (1256)
No log for spider/insurance_policies/0023 (1257)
No log for spider/insurance_policies/0001 (1258)
No log for spider/insurance_policies/0014 (1259)
No log for spider/insurance_policies/0009 (1260)
No log for spider/insurance_policies/0011 (1261)
No log for spider/insurance_policies/0010 (1262)
No log for spider/cinema/0002 (1263)
No log for spider/cinema/0017 (1264)
No log for spider/cinema/0008 (1265)
No log for spider/cinema/0003 (1266)
No log for spider/cinema/0022 (1267)
No log for spider/cinema/0013 (1268)
No log for spider/cinema/0006 (1269)
No log for spider/cinema/0004 (1270)
No log for spider/cinema/0012 (1271)
No log for spider/cinema/0015 (1272)
No log for spider/cinema/0005 (1273)
No log for spider/cinema/0016 (1274)
No log for spider/cinema/0018 (1275)
No log for spider/cinema/0020 (1276)
No log for spider/cinema/0007 (1277)
No log for spider/cinema/0021 (1278)
No log for spider/cinema/0001 (1279)
No log for spider/cinema/0014 (1280)
No log for spider/cinema/0009 (1281)
No log for spider/cinema/0011 (1282)
No log for spider/cinema/0010 (1283)
No log for spider/flight_1/0042 (1284)
No log for spider/flight_1/0033 (1285)
No log for spider/flight_1/0037 (1286)
No log for spider/flight_1/0002 (1287)
No log for spider/flight_1/0036 (1288)
No log for spider/flight_1/0017 (1289)
No log for spider/flight_1/0008 (1290)
No log for spider/flight_1/0039 (1291)
No log for spider/flight_1/0038 (1292)
No log for spider/flight_1/0003 (1293)
No log for spider/flight_1/0027 (1294)
No log for spider/flight_1/0048 (1295)
No log for spider/flight_1/0022 (1296)
No log for spider/flight_1/0030 (1297)
No log for spider/flight_1/0013 (1298)
No log for spider/flight_1/0006 (1299)
No log for spider/flight_1/0004 (1300)
No log for spider/flight_1/0012 (1301)
No log for spider/flight_1/0026 (1302)
No log for spider/flight_1/0015 (1303)
No log for spider/flight_1/0005 (1304)
No log for spider/flight_1/0016 (1305)
No log for spider/flight_1/0032 (1306)
No log for spider/flight_1/0045 (1307)
No log for spider/flight_1/0018 (1308)
No log for spider/flight_1/0041 (1309)
No log for spider/flight_1/0035 (1310)
No log for spider/flight_1/0020 (1311)
No log for spider/flight_1/0019 (1312)
No log for spider/flight_1/0007 (1313)
No log for spider/flight_1/0034 (1314)
No log for spider/flight_1/0024 (1315)
No log for spider/flight_1/0021 (1316)
No log for spider/flight_1/0023 (1317)
No log for spider/flight_1/0001 (1318)
No log for spider/flight_1/0043 (1319)
No log for spider/flight_1/0046 (1320)
No log for spider/flight_1/0047 (1321)
No log for spider/flight_1/0014 (1322)
No log for spider/flight_1/0009 (1323)
No log for spider/flight_1/0025 (1324)
No log for spider/flight_1/0011 (1325)
No log for spider/flight_1/0029 (1326)
No log for spider/flight_1/0010 (1327)
No log for spider/flight_1/0044 (1328)
No log for spider/flight_1/0040 (1329)
No log for spider/flight_1/0028 (1330)
No log for spider/flight_1/0031 (1331)
No log for spider/network_2/0042 (1332)
No log for spider/network_2/0033 (1333)
No log for spider/network_2/0037 (1334)
No log for spider/network_2/0002 (1335)
No log for spider/network_2/0036 (1336)
No log for spider/network_2/0017 (1337)
No log for spider/network_2/0008 (1338)
No log for spider/network_2/0039 (1339)
No log for spider/network_2/0038 (1340)
No log for spider/network_2/0003 (1341)
No log for spider/network_2/0027 (1342)
No log for spider/network_2/0022 (1343)
No log for spider/network_2/0013 (1344)
No log for spider/network_2/0006 (1345)
No log for spider/network_2/0004 (1346)
No log for spider/network_2/0012 (1347)
No log for spider/network_2/0026 (1348)
No log for spider/network_2/0015 (1349)
No log for spider/network_2/0005 (1350)
No log for spider/network_2/0016 (1351)
No log for spider/network_2/0018 (1352)
No log for spider/network_2/0041 (1353)
No log for spider/network_2/0035 (1354)
No log for spider/network_2/0020 (1355)
No log for spider/network_2/0019 (1356)
No log for spider/network_2/0007 (1357)
No log for spider/network_2/0034 (1358)
No log for spider/network_2/0021 (1359)
No log for spider/network_2/0023 (1360)
No log for spider/network_2/0001 (1361)
No log for spider/network_2/0043 (1362)
No log for spider/network_2/0014 (1363)
No log for spider/network_2/0009 (1364)
No log for spider/network_2/0025 (1365)
No log for spider/network_2/0011 (1366)
No log for spider/network_2/0029 (1367)
No log for spider/network_2/0010 (1368)
No log for spider/network_2/0040 (1369)
No log for spider/network_2/0028 (1370)
No log for spider/mountain_photos/0002 (1371)
No log for spider/mountain_photos/0017 (1372)
No log for spider/mountain_photos/0008 (1373)
No log for spider/mountain_photos/0003 (1374)
No log for spider/mountain_photos/0013 (1375)
No log for spider/mountain_photos/0006 (1376)
No log for spider/mountain_photos/0004 (1377)
No log for spider/mountain_photos/0012 (1378)
No log for spider/mountain_photos/0015 (1379)
No log for spider/mountain_photos/0005 (1380)
No log for spider/mountain_photos/0016 (1381)
No log for spider/mountain_photos/0007 (1382)
No log for spider/mountain_photos/0001 (1383)
No log for spider/mountain_photos/0014 (1384)
No log for spider/mountain_photos/0009 (1385)
No log for spider/mountain_photos/0011 (1386)
No log for spider/mountain_photos/0010 (1387)
No log for spider/company_employee/0002 (1388)
No log for spider/company_employee/0008 (1389)
No log for spider/company_employee/0003 (1390)
No log for spider/company_employee/0013 (1391)
No log for spider/company_employee/0006 (1392)
No log for spider/company_employee/0004 (1393)
No log for spider/company_employee/0012 (1394)
No log for spider/company_employee/0015 (1395)
No log for spider/company_employee/0005 (1396)
No log for spider/company_employee/0016 (1397)
No log for spider/company_employee/0007 (1398)
No log for spider/company_employee/0001 (1399)
No log for spider/company_employee/0014 (1400)
No log for spider/company_employee/0009 (1401)
No log for spider/company_employee/0011 (1402)
No log for spider/company_employee/0010 (1403)
No log for spider/roller_coaster/0002 (1404)
No log for spider/roller_coaster/0017 (1405)
No log for spider/roller_coaster/0008 (1406)
No log for spider/roller_coaster/0003 (1407)
No log for spider/roller_coaster/0013 (1408)
No log for spider/roller_coaster/0006 (1409)
No log for spider/roller_coaster/0004 (1410)
No log for spider/roller_coaster/0012 (1411)
No log for spider/roller_coaster/0015 (1412)
No log for spider/roller_coaster/0005 (1413)
No log for spider/roller_coaster/0016 (1414)
No log for spider/roller_coaster/0007 (1415)
No log for spider/roller_coaster/0001 (1416)
No log for spider/roller_coaster/0014 (1417)
No log for spider/roller_coaster/0009 (1418)
No log for spider/roller_coaster/0011 (1419)
No log for spider/roller_coaster/0010 (1420)
No log for spider/tracking_software_problems/0002 (1421)
No log for spider/tracking_software_problems/0017 (1422)
No log for spider/tracking_software_problems/0008 (1423)
No log for spider/tracking_software_problems/0003 (1424)
No log for spider/tracking_software_problems/0013 (1425)
No log for spider/tracking_software_problems/0006 (1426)
No log for spider/tracking_software_problems/0004 (1427)
No log for spider/tracking_software_problems/0012 (1428)
No log for spider/tracking_software_problems/0015 (1429)
No log for spider/tracking_software_problems/0005 (1430)
No log for spider/tracking_software_problems/0016 (1431)
No log for spider/tracking_software_problems/0018 (1432)
No log for spider/tracking_software_problems/0020 (1433)
No log for spider/tracking_software_problems/0019 (1434)
No log for spider/tracking_software_problems/0007 (1435)
No log for spider/tracking_software_problems/0024 (1436)
No log for spider/tracking_software_problems/0021 (1437)
No log for spider/tracking_software_problems/0001 (1438)
No log for spider/tracking_software_problems/0014 (1439)
No log for spider/tracking_software_problems/0009 (1440)
No log for spider/tracking_software_problems/0011 (1441)
No log for spider/tracking_software_problems/0010 (1442)
No log for spider/apartment_rentals/0033 (1443)
No log for spider/apartment_rentals/0037 (1444)
No log for spider/apartment_rentals/0002 (1445)
No log for spider/apartment_rentals/0036 (1446)
No log for spider/apartment_rentals/0017 (1447)
No log for spider/apartment_rentals/0008 (1448)
No log for spider/apartment_rentals/0039 (1449)
No log for spider/apartment_rentals/0038 (1450)
No log for spider/apartment_rentals/0003 (1451)
No log for spider/apartment_rentals/0027 (1452)
No log for spider/apartment_rentals/0022 (1453)
No log for spider/apartment_rentals/0030 (1454)
No log for spider/apartment_rentals/0013 (1455)
No log for spider/apartment_rentals/0006 (1456)
No log for spider/apartment_rentals/0004 (1457)
No log for spider/apartment_rentals/0012 (1458)
No log for spider/apartment_rentals/0026 (1459)
No log for spider/apartment_rentals/0015 (1460)
No log for spider/apartment_rentals/0005 (1461)
No log for spider/apartment_rentals/0016 (1462)
No log for spider/apartment_rentals/0032 (1463)
No log for spider/apartment_rentals/0018 (1464)
No log for spider/apartment_rentals/0035 (1465)
No log for spider/apartment_rentals/0020 (1466)
No log for spider/apartment_rentals/0019 (1467)
No log for spider/apartment_rentals/0007 (1468)
No log for spider/apartment_rentals/0034 (1469)
No log for spider/apartment_rentals/0024 (1470)
No log for spider/apartment_rentals/0021 (1471)
No log for spider/apartment_rentals/0023 (1472)
No log for spider/apartment_rentals/0001 (1473)
No log for spider/apartment_rentals/0014 (1474)
No log for spider/apartment_rentals/0009 (1475)
No log for spider/apartment_rentals/0025 (1476)
No log for spider/apartment_rentals/0011 (1477)
No log for spider/apartment_rentals/0029 (1478)
No log for spider/apartment_rentals/0010 (1479)
No log for spider/apartment_rentals/0040 (1480)
No log for spider/apartment_rentals/0028 (1481)
No log for spider/apartment_rentals/0031 (1482)
No log for spider/party_people/0002 (1483)
No log for spider/party_people/0017 (1484)
No log for spider/party_people/0008 (1485)
No log for spider/party_people/0003 (1486)
No log for spider/party_people/0022 (1487)
No log for spider/party_people/0013 (1488)
No log for spider/party_people/0006 (1489)
No log for spider/party_people/0004 (1490)
No log for spider/party_people/0012 (1491)
No log for spider/party_people/0015 (1492)
No log for spider/party_people/0005 (1493)
No log for spider/party_people/0016 (1494)
No log for spider/party_people/0018 (1495)
No log for spider/party_people/0020 (1496)
No log for spider/party_people/0019 (1497)
No log for spider/party_people/0007 (1498)
No log for spider/party_people/0021 (1499)
No log for spider/party_people/0001 (1500)
No log for spider/party_people/0009 (1501)
No log for spider/party_people/0011 (1502)
No log for spider/party_people/0010 (1503)
No log for spider/county_public_safety/0002 (1504)
No log for spider/county_public_safety/0008 (1505)
No log for spider/county_public_safety/0003 (1506)
No log for spider/county_public_safety/0013 (1507)
No log for spider/county_public_safety/0006 (1508)
No log for spider/county_public_safety/0004 (1509)
No log for spider/county_public_safety/0012 (1510)
No log for spider/county_public_safety/0015 (1511)
No log for spider/county_public_safety/0005 (1512)
No log for spider/county_public_safety/0016 (1513)
No log for spider/county_public_safety/0018 (1514)
No log for spider/county_public_safety/0020 (1515)
No log for spider/county_public_safety/0019 (1516)
No log for spider/county_public_safety/0007 (1517)
No log for spider/county_public_safety/0001 (1518)
No log for spider/county_public_safety/0014 (1519)
No log for spider/county_public_safety/0009 (1520)
No log for spider/county_public_safety/0011 (1521)
No log for spider/county_public_safety/0010 (1522)
No log for spider/device/0002 (1523)
No log for spider/device/0017 (1524)
No log for spider/device/0008 (1525)
No log for spider/device/0003 (1526)
No log for spider/device/0013 (1527)
No log for spider/device/0006 (1528)
No log for spider/device/0004 (1529)
No log for spider/device/0012 (1530)
No log for spider/device/0015 (1531)
No log for spider/device/0005 (1532)
No log for spider/device/0016 (1533)
No log for spider/device/0020 (1534)
No log for spider/device/0019 (1535)
No log for spider/device/0007 (1536)
No log for spider/device/0001 (1537)
No log for spider/device/0014 (1538)
No log for spider/device/0009 (1539)
No log for spider/device/0011 (1540)
No log for spider/device/0010 (1541)
No log for spider/university_basketball/0002 (1542)
No log for spider/university_basketball/0017 (1543)
No log for spider/university_basketball/0008 (1544)
No log for spider/university_basketball/0003 (1545)
No log for spider/university_basketball/0022 (1546)
No log for spider/university_basketball/0013 (1547)
No log for spider/university_basketball/0006 (1548)
No log for spider/university_basketball/0004 (1549)
No log for spider/university_basketball/0012 (1550)
No log for spider/university_basketball/0015 (1551)
No log for spider/university_basketball/0005 (1552)
No log for spider/university_basketball/0016 (1553)
No log for spider/university_basketball/0018 (1554)
No log for spider/university_basketball/0020 (1555)
No log for spider/university_basketball/0019 (1556)
No log for spider/university_basketball/0007 (1557)
No log for spider/university_basketball/0021 (1558)
No log for spider/university_basketball/0023 (1559)
No log for spider/university_basketball/0001 (1560)
No log for spider/university_basketball/0014 (1561)
No log for spider/university_basketball/0009 (1562)
No log for spider/university_basketball/0011 (1563)
No log for spider/university_basketball/0010 (1564)
No log for spider/wine_1/0033 (1565)
No log for spider/wine_1/0037 (1566)
No log for spider/wine_1/0002 (1567)
No log for spider/wine_1/0036 (1568)
No log for spider/wine_1/0017 (1569)
No log for spider/wine_1/0008 (1570)
No log for spider/wine_1/0039 (1571)
No log for spider/wine_1/0038 (1572)
No log for spider/wine_1/0003 (1573)
No log for spider/wine_1/0027 (1574)
No log for spider/wine_1/0022 (1575)
No log for spider/wine_1/0030 (1576)
No log for spider/wine_1/0013 (1577)
No log for spider/wine_1/0006 (1578)
No log for spider/wine_1/0004 (1579)
No log for spider/wine_1/0012 (1580)
No log for spider/wine_1/0026 (1581)
No log for spider/wine_1/0015 (1582)
No log for spider/wine_1/0005 (1583)
No log for spider/wine_1/0016 (1584)
No log for spider/wine_1/0032 (1585)
No log for spider/wine_1/0018 (1586)
No log for spider/wine_1/0041 (1587)
No log for spider/wine_1/0035 (1588)
No log for spider/wine_1/0020 (1589)
No log for spider/wine_1/0019 (1590)
No log for spider/wine_1/0007 (1591)
No log for spider/wine_1/0034 (1592)
No log for spider/wine_1/0024 (1593)
No log for spider/wine_1/0021 (1594)
No log for spider/wine_1/0023 (1595)
No log for spider/wine_1/0001 (1596)
No log for spider/wine_1/0014 (1597)
No log for spider/wine_1/0009 (1598)
No log for spider/wine_1/0025 (1599)
No log for spider/wine_1/0011 (1600)
No log for spider/wine_1/0029 (1601)
No log for spider/wine_1/0010 (1602)
No log for spider/wine_1/0040 (1603)
No log for spider/wine_1/0028 (1604)
No log for spider/wine_1/0031 (1605)
No log for spider/wrestler/0002 (1606)
No log for spider/wrestler/0017 (1607)
No log for spider/wrestler/0008 (1608)
No log for spider/wrestler/0003 (1609)
No log for spider/wrestler/0013 (1610)
No log for spider/wrestler/0006 (1611)
No log for spider/wrestler/0004 (1612)
No log for spider/wrestler/0012 (1613)
No log for spider/wrestler/0015 (1614)
No log for spider/wrestler/0005 (1615)
No log for spider/wrestler/0016 (1616)
No log for spider/wrestler/0018 (1617)
No log for spider/wrestler/0020 (1618)
No log for spider/wrestler/0019 (1619)
No log for spider/wrestler/0007 (1620)
No log for spider/wrestler/0001 (1621)
No log for spider/wrestler/0014 (1622)
No log for spider/wrestler/0009 (1623)
No log for spider/wrestler/0011 (1624)
No log for spider/wrestler/0010 (1625)
No log for spider/tracking_orders/0002 (1626)
No log for spider/tracking_orders/0017 (1627)
No log for spider/tracking_orders/0008 (1628)
No log for spider/tracking_orders/0003 (1629)
No log for spider/tracking_orders/0027 (1630)
No log for spider/tracking_orders/0022 (1631)
No log for spider/tracking_orders/0030 (1632)
No log for spider/tracking_orders/0013 (1633)
No log for spider/tracking_orders/0006 (1634)
No log for spider/tracking_orders/0004 (1635)
No log for spider/tracking_orders/0012 (1636)
No log for spider/tracking_orders/0026 (1637)
No log for spider/tracking_orders/0015 (1638)
No log for spider/tracking_orders/0005 (1639)
No log for spider/tracking_orders/0016 (1640)
No log for spider/tracking_orders/0018 (1641)
No log for spider/tracking_orders/0020 (1642)
No log for spider/tracking_orders/0019 (1643)
No log for spider/tracking_orders/0007 (1644)
No log for spider/tracking_orders/0024 (1645)
No log for spider/tracking_orders/0021 (1646)
No log for spider/tracking_orders/0023 (1647)
No log for spider/tracking_orders/0001 (1648)
No log for spider/tracking_orders/0014 (1649)
No log for spider/tracking_orders/0009 (1650)
No log for spider/tracking_orders/0025 (1651)
No log for spider/tracking_orders/0011 (1652)
No log for spider/tracking_orders/0029 (1653)
No log for spider/tracking_orders/0010 (1654)
No log for spider/tracking_orders/0028 (1655)
No log for spider/candidate_poll/0002 (1656)
No log for spider/candidate_poll/0017 (1657)
No log for spider/candidate_poll/0008 (1658)
No log for spider/candidate_poll/0003 (1659)
No log for spider/candidate_poll/0013 (1660)
No log for spider/candidate_poll/0006 (1661)
No log for spider/candidate_poll/0004 (1662)
No log for spider/candidate_poll/0012 (1663)
No log for spider/candidate_poll/0015 (1664)
No log for spider/candidate_poll/0005 (1665)
No log for spider/candidate_poll/0016 (1666)
No log for spider/candidate_poll/0018 (1667)
No log for spider/candidate_poll/0020 (1668)
No log for spider/candidate_poll/0019 (1669)
No log for spider/candidate_poll/0007 (1670)
No log for spider/candidate_poll/0001 (1671)
No log for spider/candidate_poll/0014 (1672)
No log for spider/candidate_poll/0009 (1673)
No log for spider/candidate_poll/0011 (1674)
No log for spider/candidate_poll/0010 (1675)
No log for spider/performance_attendance/0002 (1676)
No log for spider/performance_attendance/0008 (1677)
No log for spider/performance_attendance/0003 (1678)
No log for spider/performance_attendance/0013 (1679)
No log for spider/performance_attendance/0006 (1680)
No log for spider/performance_attendance/0004 (1681)
No log for spider/performance_attendance/0012 (1682)
No log for spider/performance_attendance/0015 (1683)
No log for spider/performance_attendance/0005 (1684)
No log for spider/performance_attendance/0007 (1685)
No log for spider/performance_attendance/0001 (1686)
No log for spider/performance_attendance/0014 (1687)
No log for spider/performance_attendance/0009 (1688)
No log for spider/performance_attendance/0011 (1689)
No log for spider/tracking_share_transactions/0033 (1690)
No log for spider/tracking_share_transactions/0037 (1691)
No log for spider/tracking_share_transactions/0002 (1692)
No log for spider/tracking_share_transactions/0036 (1693)
No log for spider/tracking_share_transactions/0017 (1694)
No log for spider/tracking_share_transactions/0008 (1695)
No log for spider/tracking_share_transactions/0039 (1696)
No log for spider/tracking_share_transactions/0038 (1697)
No log for spider/tracking_share_transactions/0003 (1698)
No log for spider/tracking_share_transactions/0027 (1699)
No log for spider/tracking_share_transactions/0022 (1700)
No log for spider/tracking_share_transactions/0030 (1701)
No log for spider/tracking_share_transactions/0013 (1702)
No log for spider/tracking_share_transactions/0006 (1703)
No log for spider/tracking_share_transactions/0004 (1704)
No log for spider/tracking_share_transactions/0012 (1705)
No log for spider/tracking_share_transactions/0026 (1706)
No log for spider/tracking_share_transactions/0015 (1707)
No log for spider/tracking_share_transactions/0005 (1708)
No log for spider/tracking_share_transactions/0016 (1709)
No log for spider/tracking_share_transactions/0032 (1710)
No log for spider/tracking_share_transactions/0018 (1711)
No log for spider/tracking_share_transactions/0041 (1712)
No log for spider/tracking_share_transactions/0035 (1713)
No log for spider/tracking_share_transactions/0020 (1714)
No log for spider/tracking_share_transactions/0019 (1715)
No log for spider/tracking_share_transactions/0007 (1716)
No log for spider/tracking_share_transactions/0034 (1717)
No log for spider/tracking_share_transactions/0024 (1718)
No log for spider/tracking_share_transactions/0021 (1719)
No log for spider/tracking_share_transactions/0023 (1720)
No log for spider/tracking_share_transactions/0001 (1721)
No log for spider/tracking_share_transactions/0014 (1722)
No log for spider/tracking_share_transactions/0009 (1723)
No log for spider/tracking_share_transactions/0025 (1724)
No log for spider/tracking_share_transactions/0011 (1725)
No log for spider/tracking_share_transactions/0029 (1726)
No log for spider/tracking_share_transactions/0010 (1727)
No log for spider/tracking_share_transactions/0040 (1728)
No log for spider/tracking_share_transactions/0028 (1729)
No log for spider/tracking_share_transactions/0031 (1730)
No log for spider/medicine_enzyme_interaction/0002 (1731)
No log for spider/medicine_enzyme_interaction/0017 (1732)
No log for spider/medicine_enzyme_interaction/0008 (1733)
No log for spider/medicine_enzyme_interaction/0003 (1734)
No log for spider/medicine_enzyme_interaction/0022 (1735)
No log for spider/medicine_enzyme_interaction/0013 (1736)
No log for spider/medicine_enzyme_interaction/0006 (1737)
No log for spider/medicine_enzyme_interaction/0004 (1738)
No log for spider/medicine_enzyme_interaction/0012 (1739)
No log for spider/medicine_enzyme_interaction/0015 (1740)
No log for spider/medicine_enzyme_interaction/0005 (1741)
No log for spider/medicine_enzyme_interaction/0016 (1742)
No log for spider/medicine_enzyme_interaction/0018 (1743)
No log for spider/medicine_enzyme_interaction/0020 (1744)
No log for spider/medicine_enzyme_interaction/0019 (1745)
No log for spider/medicine_enzyme_interaction/0007 (1746)
No log for spider/medicine_enzyme_interaction/0021 (1747)
No log for spider/medicine_enzyme_interaction/0001 (1748)
No log for spider/medicine_enzyme_interaction/0014 (1749)
No log for spider/medicine_enzyme_interaction/0009 (1750)
No log for spider/medicine_enzyme_interaction/0011 (1751)
No log for spider/medicine_enzyme_interaction/0010 (1752)
No log for spider/wedding/0002 (1753)
No log for spider/wedding/0017 (1754)
No log for spider/wedding/0008 (1755)
No log for spider/wedding/0003 (1756)
No log for spider/wedding/0013 (1757)
No log for spider/wedding/0006 (1758)
No log for spider/wedding/0012 (1759)
No log for spider/wedding/0005 (1760)
No log for spider/wedding/0018 (1761)
No log for spider/wedding/0020 (1762)
No log for spider/wedding/0019 (1763)
No log for spider/wedding/0007 (1764)
No log for spider/wedding/0001 (1765)
No log for spider/wedding/0014 (1766)
No log for spider/wedding/0011 (1767)
No log for spider/wedding/0010 (1768)
No log for spider/debate/0002 (1769)
No log for spider/debate/0008 (1770)
No log for spider/debate/0003 (1771)
No log for spider/debate/0013 (1772)
No log for spider/debate/0006 (1773)
No log for spider/debate/0004 (1774)
No log for spider/debate/0012 (1775)
No log for spider/debate/0015 (1776)
No log for spider/debate/0005 (1777)
No log for spider/debate/0007 (1778)
No log for spider/debate/0001 (1779)
No log for spider/debate/0014 (1780)
No log for spider/debate/0009 (1781)
No log for spider/debate/0011 (1782)
No log for spider/debate/0010 (1783)
No log for spider/activity_1/0042 (1784)
No log for spider/activity_1/0033 (1785)
No log for spider/activity_1/0037 (1786)
No log for spider/activity_1/0002 (1787)
No log for spider/activity_1/0036 (1788)
No log for spider/activity_1/0017 (1789)
No log for spider/activity_1/0008 (1790)
No log for spider/activity_1/0039 (1791)
No log for spider/activity_1/0038 (1792)
No log for spider/activity_1/0003 (1793)
No log for spider/activity_1/0027 (1794)
No log for spider/activity_1/0022 (1795)
No log for spider/activity_1/0030 (1796)
No log for spider/activity_1/0013 (1797)
No log for spider/activity_1/0006 (1798)
No log for spider/activity_1/0004 (1799)
No log for spider/activity_1/0012 (1800)
No log for spider/activity_1/0026 (1801)
No log for spider/activity_1/0015 (1802)
No log for spider/activity_1/0005 (1803)
No log for spider/activity_1/0016 (1804)
No log for spider/activity_1/0032 (1805)
No log for spider/activity_1/0018 (1806)
No log for spider/activity_1/0041 (1807)
No log for spider/activity_1/0035 (1808)
No log for spider/activity_1/0020 (1809)
No log for spider/activity_1/0019 (1810)
No log for spider/activity_1/0007 (1811)
No log for spider/activity_1/0034 (1812)
No log for spider/activity_1/0024 (1813)
No log for spider/activity_1/0021 (1814)
No log for spider/activity_1/0023 (1815)
No log for spider/activity_1/0001 (1816)
No log for spider/activity_1/0043 (1817)
No log for spider/activity_1/0014 (1818)
No log for spider/activity_1/0009 (1819)
No log for spider/activity_1/0025 (1820)
No log for spider/activity_1/0011 (1821)
No log for spider/activity_1/0029 (1822)
No log for spider/activity_1/0010 (1823)
No log for spider/activity_1/0044 (1824)
No log for spider/activity_1/0040 (1825)
No log for spider/activity_1/0028 (1826)
No log for spider/activity_1/0031 (1827)
No log for spider/gymnast/0002 (1828)
No log for spider/gymnast/0017 (1829)
No log for spider/gymnast/0008 (1830)
No log for spider/gymnast/0003 (1831)
No log for spider/gymnast/0013 (1832)
No log for spider/gymnast/0006 (1833)
No log for spider/gymnast/0004 (1834)
No log for spider/gymnast/0012 (1835)
No log for spider/gymnast/0015 (1836)
No log for spider/gymnast/0005 (1837)
No log for spider/gymnast/0016 (1838)
No log for spider/gymnast/0018 (1839)
No log for spider/gymnast/0020 (1840)
No log for spider/gymnast/0019 (1841)
No log for spider/gymnast/0007 (1842)
No log for spider/gymnast/0001 (1843)
No log for spider/gymnast/0014 (1844)
No log for spider/gymnast/0009 (1845)
No log for spider/gymnast/0011 (1846)
No log for spider/gymnast/0010 (1847)
No log for spider/cre_Theme_park/0042 (1848)
No log for spider/cre_Theme_park/0033 (1849)
No log for spider/cre_Theme_park/0037 (1850)
No log for spider/cre_Theme_park/0002 (1851)
No log for spider/cre_Theme_park/0036 (1852)
No log for spider/cre_Theme_park/0017 (1853)
No log for spider/cre_Theme_park/0008 (1854)
No log for spider/cre_Theme_park/0039 (1855)
No log for spider/cre_Theme_park/0038 (1856)
No log for spider/cre_Theme_park/0003 (1857)
No log for spider/cre_Theme_park/0027 (1858)
No log for spider/cre_Theme_park/0022 (1859)
No log for spider/cre_Theme_park/0030 (1860)
No log for spider/cre_Theme_park/0013 (1861)
No log for spider/cre_Theme_park/0006 (1862)
No log for spider/cre_Theme_park/0004 (1863)
No log for spider/cre_Theme_park/0012 (1864)
No log for spider/cre_Theme_park/0026 (1865)
No log for spider/cre_Theme_park/0015 (1866)
No log for spider/cre_Theme_park/0005 (1867)
No log for spider/cre_Theme_park/0016 (1868)
No log for spider/cre_Theme_park/0032 (1869)
No log for spider/cre_Theme_park/0018 (1870)
No log for spider/cre_Theme_park/0041 (1871)
No log for spider/cre_Theme_park/0035 (1872)
No log for spider/cre_Theme_park/0020 (1873)
No log for spider/cre_Theme_park/0019 (1874)
No log for spider/cre_Theme_park/0007 (1875)
No log for spider/cre_Theme_park/0034 (1876)
No log for spider/cre_Theme_park/0024 (1877)
No log for spider/cre_Theme_park/0021 (1878)
No log for spider/cre_Theme_park/0023 (1879)
No log for spider/cre_Theme_park/0001 (1880)
No log for spider/cre_Theme_park/0014 (1881)
No log for spider/cre_Theme_park/0009 (1882)
No log for spider/cre_Theme_park/0025 (1883)
No log for spider/cre_Theme_park/0011 (1884)
No log for spider/cre_Theme_park/0029 (1885)
No log for spider/cre_Theme_park/0010 (1886)
No log for spider/cre_Theme_park/0040 (1887)
No log for spider/cre_Theme_park/0028 (1888)
No log for spider/cre_Theme_park/0031 (1889)
No log for spider/driving_school/0042 (1890)
No log for spider/driving_school/0033 (1891)
No log for spider/driving_school/0037 (1892)
No log for spider/driving_school/0002 (1893)
No log for spider/driving_school/0036 (1894)
No log for spider/driving_school/0017 (1895)
No log for spider/driving_school/0008 (1896)
No log for spider/driving_school/0039 (1897)
No log for spider/driving_school/0038 (1898)
No log for spider/driving_school/0003 (1899)
No log for spider/driving_school/0027 (1900)
No log for spider/driving_school/0022 (1901)
No log for spider/driving_school/0030 (1902)
No log for spider/driving_school/0013 (1903)
No log for spider/driving_school/0006 (1904)
No log for spider/driving_school/0004 (1905)
No log for spider/driving_school/0012 (1906)
No log for spider/driving_school/0026 (1907)
No log for spider/driving_school/0015 (1908)
No log for spider/driving_school/0005 (1909)
No log for spider/driving_school/0016 (1910)
No log for spider/driving_school/0032 (1911)
No log for spider/driving_school/0045 (1912)
No log for spider/driving_school/0018 (1913)
No log for spider/driving_school/0041 (1914)
No log for spider/driving_school/0035 (1915)
No log for spider/driving_school/0020 (1916)
No log for spider/driving_school/0019 (1917)
No log for spider/driving_school/0007 (1918)
No log for spider/driving_school/0034 (1919)
No log for spider/driving_school/0024 (1920)
No log for spider/driving_school/0021 (1921)
No log for spider/driving_school/0023 (1922)
No log for spider/driving_school/0001 (1923)
No log for spider/driving_school/0043 (1924)
No log for spider/driving_school/0046 (1925)
No log for spider/driving_school/0047 (1926)
No log for spider/driving_school/0014 (1927)
No log for spider/driving_school/0009 (1928)
No log for spider/driving_school/0025 (1929)
No log for spider/driving_school/0011 (1930)
No log for spider/driving_school/0029 (1931)
No log for spider/driving_school/0010 (1932)
No log for spider/driving_school/0044 (1933)
No log for spider/driving_school/0040 (1934)
No log for spider/driving_school/0028 (1935)
No log for spider/driving_school/0031 (1936)
No log for spider/sakila_1/0033 (1937)
No log for spider/sakila_1/0002 (1938)
No log for spider/sakila_1/0036 (1939)
No log for spider/sakila_1/0017 (1940)
No log for spider/sakila_1/0008 (1941)
No log for spider/sakila_1/0039 (1942)
No log for spider/sakila_1/0038 (1943)
No log for spider/sakila_1/0003 (1944)
No log for spider/sakila_1/0022 (1945)
No log for spider/sakila_1/0030 (1946)
No log for spider/sakila_1/0013 (1947)
No log for spider/sakila_1/0006 (1948)
No log for spider/sakila_1/0004 (1949)
No log for spider/sakila_1/0012 (1950)
No log for spider/sakila_1/0015 (1951)
No log for spider/sakila_1/0005 (1952)
No log for spider/sakila_1/0016 (1953)
No log for spider/sakila_1/0032 (1954)
No log for spider/sakila_1/0018 (1955)
No log for spider/sakila_1/0041 (1956)
No log for spider/sakila_1/0035 (1957)
No log for spider/sakila_1/0020 (1958)
No log for spider/sakila_1/0019 (1959)
No log for spider/sakila_1/0007 (1960)
No log for spider/sakila_1/0034 (1961)
No log for spider/sakila_1/0024 (1962)
No log for spider/sakila_1/0021 (1963)
No log for spider/sakila_1/0023 (1964)
No log for spider/sakila_1/0001 (1965)
No log for spider/sakila_1/0014 (1966)
No log for spider/sakila_1/0009 (1967)
No log for spider/sakila_1/0025 (1968)
No log for spider/sakila_1/0010 (1969)
No log for spider/sakila_1/0031 (1970)
No log for spider/manufactory_1/0033 (1971)
No log for spider/manufactory_1/0037 (1972)
No log for spider/manufactory_1/0002 (1973)
No log for spider/manufactory_1/0036 (1974)
No log for spider/manufactory_1/0017 (1975)
No log for spider/manufactory_1/0008 (1976)
No log for spider/manufactory_1/0039 (1977)
No log for spider/manufactory_1/0038 (1978)
No log for spider/manufactory_1/0003 (1979)
No log for spider/manufactory_1/0027 (1980)
No log for spider/manufactory_1/0022 (1981)
No log for spider/manufactory_1/0030 (1982)
No log for spider/manufactory_1/0013 (1983)
No log for spider/manufactory_1/0006 (1984)
No log for spider/manufactory_1/0004 (1985)
No log for spider/manufactory_1/0026 (1986)
No log for spider/manufactory_1/0015 (1987)
No log for spider/manufactory_1/0005 (1988)
No log for spider/manufactory_1/0016 (1989)
No log for spider/manufactory_1/0032 (1990)
No log for spider/manufactory_1/0018 (1991)
No log for spider/manufactory_1/0035 (1992)
No log for spider/manufactory_1/0020 (1993)
No log for spider/manufactory_1/0019 (1994)
No log for spider/manufactory_1/0007 (1995)
No log for spider/manufactory_1/0034 (1996)
No log for spider/manufactory_1/0024 (1997)
No log for spider/manufactory_1/0021 (1998)
No log for spider/manufactory_1/0023 (1999)
No log for spider/manufactory_1/0001 (2000)
No log for spider/manufactory_1/0014 (2001)
No log for spider/manufactory_1/0009 (2002)
No log for spider/manufactory_1/0025 (2003)
No log for spider/manufactory_1/0011 (2004)
No log for spider/manufactory_1/0029 (2005)
No log for spider/manufactory_1/0010 (2006)
No log for spider/manufactory_1/0040 (2007)
No log for spider/manufactory_1/0028 (2008)
No log for spider/manufactory_1/0031 (2009)
No log for spider/loan_1/0033 (2010)
No log for spider/loan_1/0037 (2011)
No log for spider/loan_1/0002 (2012)
No log for spider/loan_1/0036 (2013)
No log for spider/loan_1/0017 (2014)
No log for spider/loan_1/0008 (2015)
No log for spider/loan_1/0039 (2016)
No log for spider/loan_1/0038 (2017)
No log for spider/loan_1/0003 (2018)
No log for spider/loan_1/0027 (2019)
No log for spider/loan_1/0022 (2020)
No log for spider/loan_1/0030 (2021)
No log for spider/loan_1/0013 (2022)
No log for spider/loan_1/0006 (2023)
No log for spider/loan_1/0004 (2024)
No log for spider/loan_1/0012 (2025)
No log for spider/loan_1/0026 (2026)
No log for spider/loan_1/0015 (2027)
No log for spider/loan_1/0005 (2028)
No log for spider/loan_1/0032 (2029)
No log for spider/loan_1/0018 (2030)
No log for spider/loan_1/0035 (2031)
No log for spider/loan_1/0020 (2032)
No log for spider/loan_1/0019 (2033)
No log for spider/loan_1/0007 (2034)
No log for spider/loan_1/0034 (2035)
No log for spider/loan_1/0024 (2036)
No log for spider/loan_1/0021 (2037)
No log for spider/loan_1/0023 (2038)
No log for spider/loan_1/0001 (2039)
No log for spider/loan_1/0014 (2040)
No log for spider/loan_1/0009 (2041)
No log for spider/loan_1/0025 (2042)
No log for spider/loan_1/0011 (2043)
No log for spider/loan_1/0029 (2044)
No log for spider/loan_1/0010 (2045)
No log for spider/loan_1/0040 (2046)
No log for spider/loan_1/0028 (2047)
No log for spider/loan_1/0031 (2048)
No log for spider/phone_market/0002 (2049)
No log for spider/phone_market/0008 (2050)
No log for spider/phone_market/0003 (2051)
No log for spider/phone_market/0013 (2052)
No log for spider/phone_market/0006 (2053)
No log for spider/phone_market/0004 (2054)
No log for spider/phone_market/0012 (2055)
No log for spider/phone_market/0015 (2056)
No log for spider/phone_market/0005 (2057)
No log for spider/phone_market/0007 (2058)
No log for spider/phone_market/0001 (2059)
No log for spider/phone_market/0014 (2060)
No log for spider/phone_market/0009 (2061)
No log for spider/phone_market/0011 (2062)
No log for spider/phone_market/0010 (2063)
No log for spider/coffee_shop/0002 (2064)
No log for spider/coffee_shop/0017 (2065)
No log for spider/coffee_shop/0008 (2066)
No log for spider/coffee_shop/0003 (2067)
No log for spider/coffee_shop/0013 (2068)
No log for spider/coffee_shop/0006 (2069)
No log for spider/coffee_shop/0004 (2070)
No log for spider/coffee_shop/0012 (2071)
No log for spider/coffee_shop/0015 (2072)
No log for spider/coffee_shop/0005 (2073)
No log for spider/coffee_shop/0016 (2074)
No log for spider/coffee_shop/0018 (2075)
No log for spider/coffee_shop/0007 (2076)
No log for spider/coffee_shop/0001 (2077)
No log for spider/coffee_shop/0014 (2078)
No log for spider/coffee_shop/0009 (2079)
No log for spider/coffee_shop/0011 (2080)
No log for spider/coffee_shop/0010 (2081)
No log for spider/hospital_1/0042 (2082)
No log for spider/hospital_1/0033 (2083)
No log for spider/hospital_1/0037 (2084)
No log for spider/hospital_1/0002 (2085)
No log for spider/hospital_1/0036 (2086)
No log for spider/hospital_1/0017 (2087)
No log for spider/hospital_1/0008 (2088)
No log for spider/hospital_1/0039 (2089)
No log for spider/hospital_1/0038 (2090)
No log for spider/hospital_1/0003 (2091)
No log for spider/hospital_1/0027 (2092)
No log for spider/hospital_1/0048 (2093)
No log for spider/hospital_1/0022 (2094)
No log for spider/hospital_1/0030 (2095)
No log for spider/hospital_1/0013 (2096)
No log for spider/hospital_1/0006 (2097)
No log for spider/hospital_1/0004 (2098)
No log for spider/hospital_1/0012 (2099)
No log for spider/hospital_1/0026 (2100)
No log for spider/hospital_1/0015 (2101)
No log for spider/hospital_1/0005 (2102)
No log for spider/hospital_1/0016 (2103)
No log for spider/hospital_1/0050 (2104)
No log for spider/hospital_1/0032 (2105)
No log for spider/hospital_1/0018 (2106)
No log for spider/hospital_1/0041 (2107)
No log for spider/hospital_1/0035 (2108)
No log for spider/hospital_1/0020 (2109)
No log for spider/hospital_1/0019 (2110)
No log for spider/hospital_1/0007 (2111)
No log for spider/hospital_1/0034 (2112)
No log for spider/hospital_1/0024 (2113)
No log for spider/hospital_1/0021 (2114)
No log for spider/hospital_1/0023 (2115)
No log for spider/hospital_1/0001 (2116)
No log for spider/hospital_1/0046 (2117)
No log for spider/hospital_1/0047 (2118)
No log for spider/hospital_1/0014 (2119)
No log for spider/hospital_1/0009 (2120)
No log for spider/hospital_1/0025 (2121)
No log for spider/hospital_1/0011 (2122)
No log for spider/hospital_1/0029 (2123)
No log for spider/hospital_1/0010 (2124)
No log for spider/hospital_1/0044 (2125)
No log for spider/hospital_1/0040 (2126)
No log for spider/hospital_1/0028 (2127)
No log for spider/hospital_1/0049 (2128)
No log for spider/hospital_1/0031 (2129)
No log for spider/department_store/0042 (2130)
No log for spider/department_store/0033 (2131)
No log for spider/department_store/0037 (2132)
No log for spider/department_store/0002 (2133)
No log for spider/department_store/0036 (2134)
No log for spider/department_store/0017 (2135)
No log for spider/department_store/0008 (2136)
No log for spider/department_store/0039 (2137)
No log for spider/department_store/0038 (2138)
No log for spider/department_store/0003 (2139)
No log for spider/department_store/0027 (2140)
No log for spider/department_store/0022 (2141)
No log for spider/department_store/0030 (2142)
No log for spider/department_store/0013 (2143)
No log for spider/department_store/0006 (2144)
No log for spider/department_store/0004 (2145)
No log for spider/department_store/0012 (2146)
No log for spider/department_store/0026 (2147)
No log for spider/department_store/0015 (2148)
No log for spider/department_store/0005 (2149)
No log for spider/department_store/0016 (2150)
No log for spider/department_store/0032 (2151)
No log for spider/department_store/0018 (2152)
No log for spider/department_store/0041 (2153)
No log for spider/department_store/0035 (2154)
No log for spider/department_store/0020 (2155)
No log for spider/department_store/0019 (2156)
No log for spider/department_store/0007 (2157)
No log for spider/department_store/0034 (2158)
No log for spider/department_store/0024 (2159)
No log for spider/department_store/0021 (2160)
No log for spider/department_store/0023 (2161)
No log for spider/department_store/0001 (2162)
No log for spider/department_store/0043 (2163)
No log for spider/department_store/0014 (2164)
No log for spider/department_store/0009 (2165)
No log for spider/department_store/0025 (2166)
No log for spider/department_store/0011 (2167)
No log for spider/department_store/0029 (2168)
No log for spider/department_store/0010 (2169)
No log for spider/department_store/0044 (2170)
No log for spider/department_store/0040 (2171)
No log for spider/department_store/0028 (2172)
No log for spider/department_store/0031 (2173)
No log for spider/music_4/0002 (2174)
No log for spider/music_4/0017 (2175)
No log for spider/music_4/0008 (2176)
No log for spider/music_4/0003 (2177)
No log for spider/music_4/0027 (2178)
No log for spider/music_4/0022 (2179)
No log for spider/music_4/0013 (2180)
No log for spider/music_4/0006 (2181)
No log for spider/music_4/0004 (2182)
No log for spider/music_4/0012 (2183)
No log for spider/music_4/0026 (2184)
No log for spider/music_4/0015 (2185)
No log for spider/music_4/0005 (2186)
No log for spider/music_4/0016 (2187)
No log for spider/music_4/0018 (2188)
No log for spider/music_4/0020 (2189)
No log for spider/music_4/0019 (2190)
No log for spider/music_4/0007 (2191)
No log for spider/music_4/0024 (2192)
No log for spider/music_4/0021 (2193)
No log for spider/music_4/0023 (2194)
No log for spider/music_4/0001 (2195)
No log for spider/music_4/0014 (2196)
No log for spider/music_4/0009 (2197)
No log for spider/music_4/0025 (2198)
No log for spider/music_4/0011 (2199)
No log for spider/music_4/0029 (2200)
No log for spider/music_4/0010 (2201)
No log for spider/music_4/0028 (2202)
No log for spider/hr_1/0056 (2203)
No log for spider/hr_1/0042 (2204)
No log for spider/hr_1/0033 (2205)
No log for spider/hr_1/0037 (2206)
No log for spider/hr_1/0002 (2207)
No log for spider/hr_1/0036 (2208)
No log for spider/hr_1/0057 (2209)
No log for spider/hr_1/0017 (2210)
No log for spider/hr_1/0052 (2211)
No log for spider/hr_1/0008 (2212)
No log for spider/hr_1/0039 (2213)
No log for spider/hr_1/0038 (2214)
No log for spider/hr_1/0003 (2215)
No log for spider/hr_1/0048 (2216)
No log for spider/hr_1/0022 (2217)
No log for spider/hr_1/0053 (2218)
No log for spider/hr_1/0030 (2219)
No log for spider/hr_1/0006 (2220)
No log for spider/hr_1/0012 (2221)
No log for spider/hr_1/0026 (2222)
No log for spider/hr_1/0015 (2223)
No log for spider/hr_1/0005 (2224)
No log for spider/hr_1/0016 (2225)
No log for spider/hr_1/0050 (2226)
No log for spider/hr_1/0059 (2227)
No log for spider/hr_1/0032 (2228)
No log for spider/hr_1/0045 (2229)
No log for spider/hr_1/0018 (2230)
No log for spider/hr_1/0041 (2231)
No log for spider/hr_1/0051 (2232)
No log for spider/hr_1/0035 (2233)
No log for spider/hr_1/0020 (2234)
No log for spider/hr_1/0019 (2235)
No log for spider/hr_1/0007 (2236)
No log for spider/hr_1/0034 (2237)
No log for spider/hr_1/0024 (2238)
No log for spider/hr_1/0023 (2239)
No log for spider/hr_1/0001 (2240)
No log for spider/hr_1/0043 (2241)
No log for spider/hr_1/0046 (2242)
No log for spider/hr_1/0054 (2243)
No log for spider/hr_1/0047 (2244)
No log for spider/hr_1/0014 (2245)
No log for spider/hr_1/0009 (2246)
No log for spider/hr_1/0025 (2247)
No log for spider/hr_1/0029 (2248)
No log for spider/hr_1/0010 (2249)
No log for spider/hr_1/0044 (2250)
No log for spider/hr_1/0040 (2251)
No log for spider/hr_1/0028 (2252)
No log for spider/hr_1/0049 (2253)
No log for spider/hr_1/0031 (2254)
No log for spider/hr_1/0055 (2255)
No log for spider/hr_1/0058 (2256)
No log for spider/products_gen_characteristics/0042 (2257)
No log for spider/products_gen_characteristics/0033 (2258)
No log for spider/products_gen_characteristics/0037 (2259)
No log for spider/products_gen_characteristics/0002 (2260)
No log for spider/products_gen_characteristics/0036 (2261)
No log for spider/products_gen_characteristics/0017 (2262)
No log for spider/products_gen_characteristics/0008 (2263)
No log for spider/products_gen_characteristics/0039 (2264)
No log for spider/products_gen_characteristics/0038 (2265)
No log for spider/products_gen_characteristics/0003 (2266)
No log for spider/products_gen_characteristics/0027 (2267)
No log for spider/products_gen_characteristics/0022 (2268)
No log for spider/products_gen_characteristics/0030 (2269)
No log for spider/products_gen_characteristics/0013 (2270)
No log for spider/products_gen_characteristics/0006 (2271)
No log for spider/products_gen_characteristics/0004 (2272)
No log for spider/products_gen_characteristics/0012 (2273)
No log for spider/products_gen_characteristics/0026 (2274)
No log for spider/products_gen_characteristics/0015 (2275)
No log for spider/products_gen_characteristics/0005 (2276)
No log for spider/products_gen_characteristics/0016 (2277)
No log for spider/products_gen_characteristics/0032 (2278)
No log for spider/products_gen_characteristics/0018 (2279)
No log for spider/products_gen_characteristics/0041 (2280)
No log for spider/products_gen_characteristics/0035 (2281)
No log for spider/products_gen_characteristics/0020 (2282)
No log for spider/products_gen_characteristics/0019 (2283)
No log for spider/products_gen_characteristics/0007 (2284)
No log for spider/products_gen_characteristics/0034 (2285)
No log for spider/products_gen_characteristics/0024 (2286)
No log for spider/products_gen_characteristics/0021 (2287)
No log for spider/products_gen_characteristics/0023 (2288)
No log for spider/products_gen_characteristics/0001 (2289)
No log for spider/products_gen_characteristics/0043 (2290)
No log for spider/products_gen_characteristics/0014 (2291)
No log for spider/products_gen_characteristics/0009 (2292)
No log for spider/products_gen_characteristics/0025 (2293)
No log for spider/products_gen_characteristics/0011 (2294)
No log for spider/products_gen_characteristics/0029 (2295)
No log for spider/products_gen_characteristics/0010 (2296)
No log for spider/products_gen_characteristics/0040 (2297)
No log for spider/products_gen_characteristics/0028 (2298)
No log for spider/products_gen_characteristics/0031 (2299)
No log for spider/school_bus/0002 (2300)
No log for spider/school_bus/0017 (2301)
No log for spider/school_bus/0008 (2302)
No log for spider/school_bus/0003 (2303)
No log for spider/school_bus/0013 (2304)
No log for spider/school_bus/0006 (2305)
No log for spider/school_bus/0004 (2306)
No log for spider/school_bus/0012 (2307)
No log for spider/school_bus/0015 (2308)
No log for spider/school_bus/0005 (2309)
No log for spider/school_bus/0016 (2310)
No log for spider/school_bus/0018 (2311)
No log for spider/school_bus/0007 (2312)
No log for spider/school_bus/0001 (2313)
No log for spider/school_bus/0014 (2314)
No log for spider/school_bus/0009 (2315)
No log for spider/school_bus/0011 (2316)
No log for spider/school_bus/0010 (2317)
No log for spider/flight_4/0033 (2318)
No log for spider/flight_4/0037 (2319)
No log for spider/flight_4/0002 (2320)
No log for spider/flight_4/0036 (2321)
No log for spider/flight_4/0017 (2322)
No log for spider/flight_4/0008 (2323)
No log for spider/flight_4/0039 (2324)
No log for spider/flight_4/0038 (2325)
No log for spider/flight_4/0003 (2326)
No log for spider/flight_4/0027 (2327)
No log for spider/flight_4/0022 (2328)
No log for spider/flight_4/0030 (2329)
No log for spider/flight_4/0013 (2330)
No log for spider/flight_4/0006 (2331)
No log for spider/flight_4/0004 (2332)
No log for spider/flight_4/0012 (2333)
No log for spider/flight_4/0026 (2334)
No log for spider/flight_4/0015 (2335)
No log for spider/flight_4/0005 (2336)
No log for spider/flight_4/0016 (2337)
No log for spider/flight_4/0032 (2338)
No log for spider/flight_4/0018 (2339)
No log for spider/flight_4/0041 (2340)
No log for spider/flight_4/0035 (2341)
No log for spider/flight_4/0020 (2342)
No log for spider/flight_4/0019 (2343)
No log for spider/flight_4/0007 (2344)
No log for spider/flight_4/0034 (2345)
No log for spider/flight_4/0024 (2346)
No log for spider/flight_4/0021 (2347)
No log for spider/flight_4/0023 (2348)
No log for spider/flight_4/0001 (2349)
No log for spider/flight_4/0014 (2350)
No log for spider/flight_4/0009 (2351)
No log for spider/flight_4/0025 (2352)
No log for spider/flight_4/0011 (2353)
No log for spider/flight_4/0029 (2354)
No log for spider/flight_4/0010 (2355)
No log for spider/flight_4/0040 (2356)
No log for spider/flight_4/0028 (2357)
No log for spider/flight_4/0031 (2358)
No log for spider/city_record/0002 (2359)
No log for spider/city_record/0017 (2360)
No log for spider/city_record/0008 (2361)
No log for spider/city_record/0003 (2362)
No log for spider/city_record/0013 (2363)
No log for spider/city_record/0006 (2364)
No log for spider/city_record/0004 (2365)
No log for spider/city_record/0012 (2366)
No log for spider/city_record/0015 (2367)
No log for spider/city_record/0005 (2368)
No log for spider/city_record/0016 (2369)
No log for spider/city_record/0018 (2370)
No log for spider/city_record/0020 (2371)
No log for spider/city_record/0019 (2372)
No log for spider/city_record/0007 (2373)
No log for spider/city_record/0001 (2374)
No log for spider/city_record/0014 (2375)
No log for spider/city_record/0009 (2376)
No log for spider/city_record/0011 (2377)
No log for spider/city_record/0010 (2378)
No log for spider/theme_gallery/0002 (2379)
No log for spider/theme_gallery/0017 (2380)
No log for spider/theme_gallery/0008 (2381)
No log for spider/theme_gallery/0003 (2382)
No log for spider/theme_gallery/0013 (2383)
No log for spider/theme_gallery/0006 (2384)
No log for spider/theme_gallery/0004 (2385)
No log for spider/theme_gallery/0012 (2386)
No log for spider/theme_gallery/0015 (2387)
No log for spider/theme_gallery/0005 (2388)
No log for spider/theme_gallery/0016 (2389)
No log for spider/theme_gallery/0020 (2390)
No log for spider/theme_gallery/0019 (2391)
No log for spider/theme_gallery/0007 (2392)
No log for spider/theme_gallery/0001 (2393)
No log for spider/theme_gallery/0014 (2394)
No log for spider/theme_gallery/0009 (2395)
No log for spider/theme_gallery/0011 (2396)
No log for spider/theme_gallery/0010 (2397)
No log for spider/culture_company/0002 (2398)
No log for spider/culture_company/0017 (2399)
No log for spider/culture_company/0008 (2400)
No log for spider/culture_company/0003 (2401)
No log for spider/culture_company/0013 (2402)
No log for spider/culture_company/0006 (2403)
No log for spider/culture_company/0004 (2404)
No log for spider/culture_company/0012 (2405)
No log for spider/culture_company/0015 (2406)
No log for spider/culture_company/0005 (2407)
No log for spider/culture_company/0016 (2408)
No log for spider/culture_company/0018 (2409)
No log for spider/culture_company/0019 (2410)
No log for spider/culture_company/0007 (2411)
No log for spider/culture_company/0001 (2412)
No log for spider/culture_company/0014 (2413)
No log for spider/culture_company/0009 (2414)
No log for spider/culture_company/0011 (2415)
No log for spider/race_track/0002 (2416)
No log for spider/race_track/0017 (2417)
No log for spider/race_track/0008 (2418)
No log for spider/race_track/0003 (2419)
No log for spider/race_track/0013 (2420)
No log for spider/race_track/0006 (2421)
No log for spider/race_track/0004 (2422)
No log for spider/race_track/0012 (2423)
No log for spider/race_track/0015 (2424)
No log for spider/race_track/0005 (2425)
No log for spider/race_track/0018 (2426)
No log for spider/race_track/0020 (2427)
No log for spider/race_track/0019 (2428)
No log for spider/race_track/0007 (2429)
No log for spider/race_track/0001 (2430)
No log for spider/race_track/0014 (2431)
No log for spider/race_track/0009 (2432)
No log for spider/race_track/0011 (2433)
No log for spider/race_track/0010 (2434)
No log for spider/local_govt_mdm/0002 (2435)
No log for spider/local_govt_mdm/0008 (2436)
No log for spider/local_govt_mdm/0003 (2437)
No log for spider/local_govt_mdm/0013 (2438)
No log for spider/local_govt_mdm/0006 (2439)
No log for spider/local_govt_mdm/0004 (2440)
No log for spider/local_govt_mdm/0005 (2441)
No log for spider/local_govt_mdm/0007 (2442)
No log for spider/local_govt_mdm/0001 (2443)
No log for spider/local_govt_mdm/0014 (2444)
No log for spider/local_govt_mdm/0009 (2445)
No log for spider/local_govt_mdm/0011 (2446)
No log for spider/local_govt_mdm/0010 (2447)
No log for spider/company_1/0002 (2448)
No log for spider/company_1/0003 (2449)
No log for spider/company_1/0006 (2450)
No log for spider/company_1/0004 (2451)
No log for spider/company_1/0005 (2452)
No log for spider/company_1/0007 (2453)
No log for spider/company_1/0001 (2454)
No log for spider/soccer_1/0002 (2455)
No log for spider/soccer_1/0008 (2456)
No log for spider/soccer_1/0003 (2457)
No log for spider/soccer_1/0013 (2458)
No log for spider/soccer_1/0006 (2459)
No log for spider/soccer_1/0004 (2460)
No log for spider/soccer_1/0012 (2461)
No log for spider/soccer_1/0005 (2462)
No log for spider/soccer_1/0007 (2463)
No log for spider/soccer_1/0001 (2464)
No log for spider/soccer_1/0014 (2465)
No log for spider/soccer_1/0009 (2466)
No log for spider/soccer_1/0011 (2467)
No log for spider/soccer_1/0010 (2468)
No log for spider/cre_Drama_Workshop_Groups/0033 (2469)
No log for spider/cre_Drama_Workshop_Groups/0037 (2470)
No log for spider/cre_Drama_Workshop_Groups/0002 (2471)
No log for spider/cre_Drama_Workshop_Groups/0036 (2472)
No log for spider/cre_Drama_Workshop_Groups/0017 (2473)
No log for spider/cre_Drama_Workshop_Groups/0008 (2474)
No log for spider/cre_Drama_Workshop_Groups/0039 (2475)
No log for spider/cre_Drama_Workshop_Groups/0038 (2476)
No log for spider/cre_Drama_Workshop_Groups/0003 (2477)
No log for spider/cre_Drama_Workshop_Groups/0027 (2478)
No log for spider/cre_Drama_Workshop_Groups/0022 (2479)
No log for spider/cre_Drama_Workshop_Groups/0030 (2480)
No log for spider/cre_Drama_Workshop_Groups/0013 (2481)
No log for spider/cre_Drama_Workshop_Groups/0006 (2482)
No log for spider/cre_Drama_Workshop_Groups/0004 (2483)
No log for spider/cre_Drama_Workshop_Groups/0012 (2484)
No log for spider/cre_Drama_Workshop_Groups/0026 (2485)
No log for spider/cre_Drama_Workshop_Groups/0015 (2486)
No log for spider/cre_Drama_Workshop_Groups/0005 (2487)
No log for spider/cre_Drama_Workshop_Groups/0016 (2488)
No log for spider/cre_Drama_Workshop_Groups/0032 (2489)
No log for spider/cre_Drama_Workshop_Groups/0018 (2490)
No log for spider/cre_Drama_Workshop_Groups/0041 (2491)
No log for spider/cre_Drama_Workshop_Groups/0035 (2492)
No log for spider/cre_Drama_Workshop_Groups/0020 (2493)
No log for spider/cre_Drama_Workshop_Groups/0019 (2494)
No log for spider/cre_Drama_Workshop_Groups/0007 (2495)
No log for spider/cre_Drama_Workshop_Groups/0034 (2496)
No log for spider/cre_Drama_Workshop_Groups/0024 (2497)
No log for spider/cre_Drama_Workshop_Groups/0021 (2498)
No log for spider/cre_Drama_Workshop_Groups/0023 (2499)
No log for spider/cre_Drama_Workshop_Groups/0001 (2500)
No log for spider/cre_Drama_Workshop_Groups/0014 (2501)
No log for spider/cre_Drama_Workshop_Groups/0009 (2502)
No log for spider/cre_Drama_Workshop_Groups/0025 (2503)
No log for spider/cre_Drama_Workshop_Groups/0011 (2504)
No log for spider/cre_Drama_Workshop_Groups/0029 (2505)
No log for spider/cre_Drama_Workshop_Groups/0010 (2506)
No log for spider/cre_Drama_Workshop_Groups/0040 (2507)
No log for spider/cre_Drama_Workshop_Groups/0028 (2508)
No log for spider/cre_Drama_Workshop_Groups/0031 (2509)
No log for spider/assets_maintenance/0002 (2510)
No log for spider/assets_maintenance/0017 (2511)
No log for spider/assets_maintenance/0008 (2512)
No log for spider/assets_maintenance/0003 (2513)
No log for spider/assets_maintenance/0027 (2514)
No log for spider/assets_maintenance/0022 (2515)
No log for spider/assets_maintenance/0030 (2516)
No log for spider/assets_maintenance/0013 (2517)
No log for spider/assets_maintenance/0006 (2518)
No log for spider/assets_maintenance/0004 (2519)
No log for spider/assets_maintenance/0012 (2520)
No log for spider/assets_maintenance/0026 (2521)
No log for spider/assets_maintenance/0015 (2522)
No log for spider/assets_maintenance/0005 (2523)
No log for spider/assets_maintenance/0016 (2524)
No log for spider/assets_maintenance/0018 (2525)
No log for spider/assets_maintenance/0020 (2526)
No log for spider/assets_maintenance/0019 (2527)
No log for spider/assets_maintenance/0007 (2528)
No log for spider/assets_maintenance/0024 (2529)
No log for spider/assets_maintenance/0021 (2530)
No log for spider/assets_maintenance/0023 (2531)
No log for spider/assets_maintenance/0001 (2532)
No log for spider/assets_maintenance/0014 (2533)
No log for spider/assets_maintenance/0009 (2534)
No log for spider/assets_maintenance/0025 (2535)
No log for spider/assets_maintenance/0011 (2536)
No log for spider/assets_maintenance/0029 (2537)
No log for spider/assets_maintenance/0010 (2538)
No log for spider/assets_maintenance/0031 (2539)
No log for spider/company_office/0002 (2540)
No log for spider/company_office/0017 (2541)
No log for spider/company_office/0008 (2542)
No log for spider/company_office/0003 (2543)
No log for spider/company_office/0013 (2544)
No log for spider/company_office/0006 (2545)
No log for spider/company_office/0004 (2546)
No log for spider/company_office/0012 (2547)
No log for spider/company_office/0015 (2548)
No log for spider/company_office/0005 (2549)
No log for spider/company_office/0016 (2550)
No log for spider/company_office/0018 (2551)
No log for spider/company_office/0020 (2552)
No log for spider/company_office/0019 (2553)
No log for spider/company_office/0007 (2554)
No log for spider/company_office/0001 (2555)
No log for spider/company_office/0014 (2556)
No log for spider/company_office/0009 (2557)
No log for spider/company_office/0011 (2558)
No log for spider/company_office/0010 (2559)
No log for spider/college_1/0056 (2560)
No log for spider/college_1/0042 (2561)
No log for spider/college_1/0033 (2562)
No log for spider/college_1/0037 (2563)
No log for spider/college_1/0002 (2564)
No log for spider/college_1/0036 (2565)
No log for spider/college_1/0075 (2566)
No log for spider/college_1/0057 (2567)
No log for spider/college_1/0017 (2568)
No log for spider/college_1/0052 (2569)
No log for spider/college_1/0008 (2570)
No log for spider/college_1/0039 (2571)
No log for spider/college_1/0038 (2572)
No log for spider/college_1/0076 (2573)
No log for spider/college_1/0003 (2574)
No log for spider/college_1/0027 (2575)
No log for spider/college_1/0048 (2576)
No log for spider/college_1/0022 (2577)
No log for spider/college_1/0074 (2578)
No log for spider/college_1/0053 (2579)
No log for spider/college_1/0072 (2580)
No log for spider/college_1/0030 (2581)
No log for spider/college_1/0013 (2582)
No log for spider/college_1/0006 (2583)
No log for spider/college_1/0065 (2584)
No log for spider/college_1/0064 (2585)
No log for spider/college_1/0004 (2586)
No log for spider/college_1/0012 (2587)
No log for spider/college_1/0078 (2588)
No log for spider/college_1/0026 (2589)
No log for spider/college_1/0071 (2590)
No log for spider/college_1/0015 (2591)
No log for spider/college_1/0005 (2592)
No log for spider/college_1/0016 (2593)
No log for spider/college_1/0066 (2594)
No log for spider/college_1/0062 (2595)
No log for spider/college_1/0050 (2596)
No log for spider/college_1/0068 (2597)
No log for spider/college_1/0059 (2598)
No log for spider/college_1/0032 (2599)
No log for spider/college_1/0045 (2600)
No log for spider/college_1/0063 (2601)
No log for spider/college_1/0018 (2602)
No log for spider/college_1/0041 (2603)
No log for spider/college_1/0051 (2604)
No log for spider/college_1/0035 (2605)
No log for spider/college_1/0020 (2606)
No log for spider/college_1/0019 (2607)
No log for spider/college_1/0007 (2608)
No log for spider/college_1/0061 (2609)
No log for spider/college_1/0034 (2610)
No log for spider/college_1/0024 (2611)
No log for spider/college_1/0021 (2612)
No log for spider/college_1/0069 (2613)
No log for spider/college_1/0023 (2614)
No log for spider/college_1/0001 (2615)
No log for spider/college_1/0043 (2616)
No log for spider/college_1/0046 (2617)
No log for spider/college_1/0054 (2618)
No log for spider/college_1/0077 (2619)
No log for spider/college_1/0082 (2620)
No log for spider/college_1/0047 (2621)
No log for spider/college_1/0081 (2622)
No log for spider/college_1/0014 (2623)
No log for spider/college_1/0009 (2624)
No log for spider/college_1/0025 (2625)
No log for spider/college_1/0011 (2626)
No log for spider/college_1/0060 (2627)
No log for spider/college_1/0079 (2628)
No log for spider/college_1/0067 (2629)
No log for spider/college_1/0029 (2630)
No log for spider/college_1/0010 (2631)
No log for spider/college_1/0044 (2632)
No log for spider/college_1/0073 (2633)
No log for spider/college_1/0040 (2634)
No log for spider/college_1/0070 (2635)
No log for spider/college_1/0028 (2636)
No log for spider/college_1/0049 (2637)
No log for spider/college_1/0031 (2638)
No log for spider/college_1/0055 (2639)
No log for spider/college_1/0058 (2640)
No log for spider/phone_1/0002 (2641)
No log for spider/phone_1/0017 (2642)
No log for spider/phone_1/0008 (2643)
No log for spider/phone_1/0003 (2644)
No log for spider/phone_1/0027 (2645)
No log for spider/phone_1/0022 (2646)
No log for spider/phone_1/0013 (2647)
No log for spider/phone_1/0006 (2648)
No log for spider/phone_1/0004 (2649)
No log for spider/phone_1/0012 (2650)
No log for spider/phone_1/0026 (2651)
No log for spider/phone_1/0015 (2652)
No log for spider/phone_1/0005 (2653)
No log for spider/phone_1/0016 (2654)
No log for spider/phone_1/0018 (2655)
No log for spider/phone_1/0020 (2656)
No log for spider/phone_1/0019 (2657)
No log for spider/phone_1/0007 (2658)
No log for spider/phone_1/0024 (2659)
No log for spider/phone_1/0021 (2660)
No log for spider/phone_1/0023 (2661)
No log for spider/phone_1/0001 (2662)
No log for spider/phone_1/0014 (2663)
No log for spider/phone_1/0009 (2664)
No log for spider/phone_1/0025 (2665)
No log for spider/phone_1/0011 (2666)
No log for spider/phone_1/0010 (2667)
No log for spider/chinook_1/0042 (2668)
No log for spider/chinook_1/0033 (2669)
No log for spider/chinook_1/0037 (2670)
No log for spider/chinook_1/0002 (2671)
No log for spider/chinook_1/0036 (2672)
No log for spider/chinook_1/0017 (2673)
No log for spider/chinook_1/0008 (2674)
No log for spider/chinook_1/0039 (2675)
No log for spider/chinook_1/0038 (2676)
No log for spider/chinook_1/0003 (2677)
No log for spider/chinook_1/0027 (2678)
No log for spider/chinook_1/0022 (2679)
No log for spider/chinook_1/0030 (2680)
No log for spider/chinook_1/0013 (2681)
No log for spider/chinook_1/0006 (2682)
No log for spider/chinook_1/0004 (2683)
No log for spider/chinook_1/0012 (2684)
No log for spider/chinook_1/0026 (2685)
No log for spider/chinook_1/0015 (2686)
No log for spider/chinook_1/0005 (2687)
No log for spider/chinook_1/0016 (2688)
No log for spider/chinook_1/0032 (2689)
No log for spider/chinook_1/0018 (2690)
No log for spider/chinook_1/0041 (2691)
No log for spider/chinook_1/0035 (2692)
No log for spider/chinook_1/0020 (2693)
No log for spider/chinook_1/0019 (2694)
No log for spider/chinook_1/0007 (2695)
No log for spider/chinook_1/0034 (2696)
No log for spider/chinook_1/0024 (2697)
No log for spider/chinook_1/0021 (2698)
No log for spider/chinook_1/0023 (2699)
No log for spider/chinook_1/0001 (2700)
No log for spider/chinook_1/0014 (2701)
No log for spider/chinook_1/0009 (2702)
No log for spider/chinook_1/0025 (2703)
No log for spider/chinook_1/0011 (2704)
No log for spider/chinook_1/0029 (2705)
No log for spider/chinook_1/0010 (2706)
No log for spider/chinook_1/0040 (2707)
No log for spider/chinook_1/0028 (2708)
No log for spider/chinook_1/0031 (2709)
No log for spider/scientist_1/0002 (2710)
No log for spider/scientist_1/0008 (2711)
No log for spider/scientist_1/0003 (2712)
No log for spider/scientist_1/0022 (2713)
No log for spider/scientist_1/0013 (2714)
No log for spider/scientist_1/0006 (2715)
No log for spider/scientist_1/0004 (2716)
No log for spider/scientist_1/0015 (2717)
No log for spider/scientist_1/0005 (2718)
No log for spider/scientist_1/0016 (2719)
No log for spider/scientist_1/0018 (2720)
No log for spider/scientist_1/0019 (2721)
No log for spider/scientist_1/0007 (2722)
No log for spider/scientist_1/0021 (2723)
No log for spider/scientist_1/0023 (2724)
No log for spider/scientist_1/0001 (2725)
No log for spider/scientist_1/0014 (2726)
No log for spider/scientist_1/0009 (2727)
No log for spider/scientist_1/0011 (2728)
No log for spider/scientist_1/0010 (2729)
No log for spider/game_1/0033 (2730)
No log for spider/game_1/0037 (2731)
No log for spider/game_1/0002 (2732)
No log for spider/game_1/0036 (2733)
No log for spider/game_1/0017 (2734)
No log for spider/game_1/0008 (2735)
No log for spider/game_1/0039 (2736)
No log for spider/game_1/0038 (2737)
No log for spider/game_1/0003 (2738)
No log for spider/game_1/0027 (2739)
No log for spider/game_1/0022 (2740)
No log for spider/game_1/0030 (2741)
No log for spider/game_1/0013 (2742)
No log for spider/game_1/0006 (2743)
No log for spider/game_1/0004 (2744)
No log for spider/game_1/0012 (2745)
No log for spider/game_1/0026 (2746)
No log for spider/game_1/0015 (2747)
No log for spider/game_1/0005 (2748)
No log for spider/game_1/0016 (2749)
No log for spider/game_1/0032 (2750)
No log for spider/game_1/0018 (2751)
No log for spider/game_1/0041 (2752)
No log for spider/game_1/0035 (2753)
No log for spider/game_1/0020 (2754)
No log for spider/game_1/0019 (2755)
No log for spider/game_1/0007 (2756)
No log for spider/game_1/0034 (2757)
No log for spider/game_1/0024 (2758)
No log for spider/game_1/0021 (2759)
No log for spider/game_1/0023 (2760)
No log for spider/game_1/0001 (2761)
No log for spider/game_1/0014 (2762)
No log for spider/game_1/0009 (2763)
No log for spider/game_1/0025 (2764)
No log for spider/game_1/0011 (2765)
No log for spider/game_1/0029 (2766)
No log for spider/game_1/0010 (2767)
No log for spider/game_1/0040 (2768)
No log for spider/game_1/0028 (2769)
No log for spider/game_1/0031 (2770)
No log for spider/election/0033 (2771)
No log for spider/election/0002 (2772)
No log for spider/election/0017 (2773)
No log for spider/election/0008 (2774)
No log for spider/election/0003 (2775)
No log for spider/election/0027 (2776)
No log for spider/election/0022 (2777)
No log for spider/election/0030 (2778)
No log for spider/election/0013 (2779)
No log for spider/election/0006 (2780)
No log for spider/election/0004 (2781)
No log for spider/election/0012 (2782)
No log for spider/election/0026 (2783)
No log for spider/election/0015 (2784)
No log for spider/election/0005 (2785)
No log for spider/election/0016 (2786)
No log for spider/election/0032 (2787)
No log for spider/election/0018 (2788)
No log for spider/election/0020 (2789)
No log for spider/election/0019 (2790)
No log for spider/election/0007 (2791)
No log for spider/election/0034 (2792)
No log for spider/election/0024 (2793)
No log for spider/election/0021 (2794)
No log for spider/election/0023 (2795)
No log for spider/election/0001 (2796)
No log for spider/election/0014 (2797)
No log for spider/election/0009 (2798)
No log for spider/election/0025 (2799)
No log for spider/election/0011 (2800)
No log for spider/election/0029 (2801)
No log for spider/election/0010 (2802)
No log for spider/election/0028 (2803)
No log for spider/election/0031 (2804)
No log for spider/body_builder/0002 (2805)
No log for spider/body_builder/0017 (2806)
No log for spider/body_builder/0008 (2807)
No log for spider/body_builder/0003 (2808)
No log for spider/body_builder/0022 (2809)
No log for spider/body_builder/0013 (2810)
No log for spider/body_builder/0006 (2811)
No log for spider/body_builder/0004 (2812)
No log for spider/body_builder/0012 (2813)
No log for spider/body_builder/0015 (2814)
No log for spider/body_builder/0005 (2815)
No log for spider/body_builder/0018 (2816)
No log for spider/body_builder/0020 (2817)
No log for spider/body_builder/0019 (2818)
No log for spider/body_builder/0007 (2819)
No log for spider/body_builder/0024 (2820)
No log for spider/body_builder/0021 (2821)
No log for spider/body_builder/0023 (2822)
No log for spider/body_builder/0001 (2823)
No log for spider/body_builder/0014 (2824)
No log for spider/body_builder/0009 (2825)
No log for spider/body_builder/0011 (2826)
No log for spider/body_builder/0010 (2827)
No log for spider/customers_card_transactions/0033 (2828)
No log for spider/customers_card_transactions/0037 (2829)
No log for spider/customers_card_transactions/0002 (2830)
No log for spider/customers_card_transactions/0036 (2831)
No log for spider/customers_card_transactions/0017 (2832)
No log for spider/customers_card_transactions/0008 (2833)
No log for spider/customers_card_transactions/0039 (2834)
No log for spider/customers_card_transactions/0038 (2835)
No log for spider/customers_card_transactions/0003 (2836)
No log for spider/customers_card_transactions/0027 (2837)
No log for spider/customers_card_transactions/0022 (2838)
No log for spider/customers_card_transactions/0030 (2839)
No log for spider/customers_card_transactions/0013 (2840)
No log for spider/customers_card_transactions/0006 (2841)
No log for spider/customers_card_transactions/0004 (2842)
No log for spider/customers_card_transactions/0012 (2843)
No log for spider/customers_card_transactions/0026 (2844)
No log for spider/customers_card_transactions/0015 (2845)
No log for spider/customers_card_transactions/0005 (2846)
No log for spider/customers_card_transactions/0016 (2847)
No log for spider/customers_card_transactions/0032 (2848)
No log for spider/customers_card_transactions/0018 (2849)
No log for spider/customers_card_transactions/0035 (2850)
No log for spider/customers_card_transactions/0020 (2851)
No log for spider/customers_card_transactions/0019 (2852)
No log for spider/customers_card_transactions/0007 (2853)
No log for spider/customers_card_transactions/0034 (2854)
No log for spider/customers_card_transactions/0024 (2855)
No log for spider/customers_card_transactions/0021 (2856)
No log for spider/customers_card_transactions/0023 (2857)
No log for spider/customers_card_transactions/0001 (2858)
No log for spider/customers_card_transactions/0014 (2859)
No log for spider/customers_card_transactions/0009 (2860)
No log for spider/customers_card_transactions/0025 (2861)
No log for spider/customers_card_transactions/0011 (2862)
No log for spider/customers_card_transactions/0029 (2863)
No log for spider/customers_card_transactions/0010 (2864)
No log for spider/customers_card_transactions/0040 (2865)
No log for spider/customers_card_transactions/0028 (2866)
No log for spider/customers_card_transactions/0031 (2867)
No log for spider/products_for_hire/0002 (2868)
No log for spider/products_for_hire/0017 (2869)
No log for spider/products_for_hire/0008 (2870)
No log for spider/products_for_hire/0003 (2871)
No log for spider/products_for_hire/0013 (2872)
No log for spider/products_for_hire/0006 (2873)
No log for spider/products_for_hire/0004 (2874)
No log for spider/products_for_hire/0012 (2875)
No log for spider/products_for_hire/0015 (2876)
No log for spider/products_for_hire/0005 (2877)
No log for spider/products_for_hire/0016 (2878)
No log for spider/products_for_hire/0018 (2879)
No log for spider/products_for_hire/0007 (2880)
No log for spider/products_for_hire/0001 (2881)
No log for spider/products_for_hire/0014 (2882)
No log for spider/products_for_hire/0009 (2883)
No log for spider/products_for_hire/0011 (2884)
No log for spider/products_for_hire/0010 (2885)
No log for spider/protein_institute/0002 (2886)
No log for spider/protein_institute/0017 (2887)
No log for spider/protein_institute/0008 (2888)
No log for spider/protein_institute/0003 (2889)
No log for spider/protein_institute/0013 (2890)
No log for spider/protein_institute/0006 (2891)
No log for spider/protein_institute/0004 (2892)
No log for spider/protein_institute/0012 (2893)
No log for spider/protein_institute/0015 (2894)
No log for spider/protein_institute/0005 (2895)
No log for spider/protein_institute/0016 (2896)
No log for spider/protein_institute/0018 (2897)
No log for spider/protein_institute/0020 (2898)
No log for spider/protein_institute/0019 (2899)
No log for spider/protein_institute/0007 (2900)
No log for spider/protein_institute/0001 (2901)
No log for spider/protein_institute/0014 (2902)
No log for spider/protein_institute/0009 (2903)
No log for spider/protein_institute/0011 (2904)
No log for spider/protein_institute/0010 (2905)
No log for spider/restaurant_1/0002 (2906)
No log for spider/restaurant_1/0017 (2907)
No log for spider/restaurant_1/0008 (2908)
No log for spider/restaurant_1/0003 (2909)
No log for spider/restaurant_1/0022 (2910)
No log for spider/restaurant_1/0013 (2911)
No log for spider/restaurant_1/0006 (2912)
No log for spider/restaurant_1/0004 (2913)
No log for spider/restaurant_1/0012 (2914)
No log for spider/restaurant_1/0015 (2915)
No log for spider/restaurant_1/0005 (2916)
No log for spider/restaurant_1/0016 (2917)
No log for spider/restaurant_1/0018 (2918)
No log for spider/restaurant_1/0020 (2919)
No log for spider/restaurant_1/0019 (2920)
No log for spider/restaurant_1/0007 (2921)
No log for spider/restaurant_1/0021 (2922)
No log for spider/restaurant_1/0001 (2923)
No log for spider/restaurant_1/0014 (2924)
No log for spider/restaurant_1/0009 (2925)
No log for spider/restaurant_1/0011 (2926)
No log for spider/restaurant_1/0010 (2927)
No log for spider/insurance_fnol/0002 (2928)
No log for spider/insurance_fnol/0008 (2929)
No log for spider/insurance_fnol/0003 (2930)
No log for spider/insurance_fnol/0013 (2931)
No log for spider/insurance_fnol/0006 (2932)
No log for spider/insurance_fnol/0004 (2933)
No log for spider/insurance_fnol/0012 (2934)
No log for spider/insurance_fnol/0015 (2935)
No log for spider/insurance_fnol/0005 (2936)
No log for spider/insurance_fnol/0016 (2937)
No log for spider/insurance_fnol/0018 (2938)
No log for spider/insurance_fnol/0020 (2939)
No log for spider/insurance_fnol/0019 (2940)
No log for spider/insurance_fnol/0007 (2941)
No log for spider/insurance_fnol/0021 (2942)
No log for spider/insurance_fnol/0001 (2943)
No log for spider/insurance_fnol/0014 (2944)
No log for spider/insurance_fnol/0009 (2945)
No log for spider/insurance_fnol/0011 (2946)
No log for spider/insurance_fnol/0010 (2947)
No log for spider/icfp_1/0033 (2948)
No log for spider/icfp_1/0002 (2949)
No log for spider/icfp_1/0017 (2950)
No log for spider/icfp_1/0008 (2951)
No log for spider/icfp_1/0003 (2952)
No log for spider/icfp_1/0027 (2953)
No log for spider/icfp_1/0022 (2954)
No log for spider/icfp_1/0030 (2955)
No log for spider/icfp_1/0013 (2956)
No log for spider/icfp_1/0006 (2957)
No log for spider/icfp_1/0004 (2958)
No log for spider/icfp_1/0026 (2959)
No log for spider/icfp_1/0015 (2960)
No log for spider/icfp_1/0005 (2961)
No log for spider/icfp_1/0016 (2962)
No log for spider/icfp_1/0032 (2963)
No log for spider/icfp_1/0018 (2964)
No log for spider/icfp_1/0020 (2965)
No log for spider/icfp_1/0019 (2966)
No log for spider/icfp_1/0007 (2967)
No log for spider/icfp_1/0024 (2968)
No log for spider/icfp_1/0021 (2969)
No log for spider/icfp_1/0023 (2970)
No log for spider/icfp_1/0001 (2971)
No log for spider/icfp_1/0014 (2972)
No log for spider/icfp_1/0009 (2973)
No log for spider/icfp_1/0025 (2974)
No log for spider/icfp_1/0011 (2975)
No log for spider/icfp_1/0029 (2976)
No log for spider/icfp_1/0010 (2977)
No log for spider/icfp_1/0028 (2978)
No log for spider/icfp_1/0031 (2979)
No log for spider/climbing/0002 (2980)
No log for spider/climbing/0017 (2981)
No log for spider/climbing/0008 (2982)
No log for spider/climbing/0003 (2983)
No log for spider/climbing/0013 (2984)
No log for spider/climbing/0006 (2985)
No log for spider/climbing/0004 (2986)
No log for spider/climbing/0012 (2987)
No log for spider/climbing/0015 (2988)
No log for spider/climbing/0005 (2989)
No log for spider/climbing/0016 (2990)
No log for spider/climbing/0018 (2991)
No log for spider/climbing/0020 (2992)
No log for spider/climbing/0019 (2993)
No log for spider/climbing/0007 (2994)
No log for spider/climbing/0001 (2995)
No log for spider/climbing/0014 (2996)
No log for spider/climbing/0009 (2997)
No log for spider/climbing/0011 (2998)
No log for spider/climbing/0010 (2999)
No log for spider/customers_and_addresses/0042 (3000)
No log for spider/customers_and_addresses/0033 (3001)
No log for spider/customers_and_addresses/0037 (3002)
No log for spider/customers_and_addresses/0002 (3003)
No log for spider/customers_and_addresses/0036 (3004)
No log for spider/customers_and_addresses/0017 (3005)
No log for spider/customers_and_addresses/0008 (3006)
No log for spider/customers_and_addresses/0039 (3007)
No log for spider/customers_and_addresses/0038 (3008)
No log for spider/customers_and_addresses/0003 (3009)
No log for spider/customers_and_addresses/0027 (3010)
No log for spider/customers_and_addresses/0022 (3011)
No log for spider/customers_and_addresses/0030 (3012)
No log for spider/customers_and_addresses/0013 (3013)
No log for spider/customers_and_addresses/0006 (3014)
No log for spider/customers_and_addresses/0004 (3015)
No log for spider/customers_and_addresses/0012 (3016)
No log for spider/customers_and_addresses/0026 (3017)
No log for spider/customers_and_addresses/0015 (3018)
No log for spider/customers_and_addresses/0005 (3019)
No log for spider/customers_and_addresses/0016 (3020)
No log for spider/customers_and_addresses/0032 (3021)
No log for spider/customers_and_addresses/0018 (3022)
No log for spider/customers_and_addresses/0041 (3023)
No log for spider/customers_and_addresses/0035 (3024)
No log for spider/customers_and_addresses/0020 (3025)
No log for spider/customers_and_addresses/0019 (3026)
No log for spider/customers_and_addresses/0007 (3027)
No log for spider/customers_and_addresses/0034 (3028)
No log for spider/customers_and_addresses/0024 (3029)
No log for spider/customers_and_addresses/0021 (3030)
No log for spider/customers_and_addresses/0023 (3031)
No log for spider/customers_and_addresses/0001 (3032)
No log for spider/customers_and_addresses/0043 (3033)
No log for spider/customers_and_addresses/0014 (3034)
No log for spider/customers_and_addresses/0009 (3035)
No log for spider/customers_and_addresses/0025 (3036)
No log for spider/customers_and_addresses/0011 (3037)
No log for spider/customers_and_addresses/0029 (3038)
No log for spider/customers_and_addresses/0010 (3039)
No log for spider/customers_and_addresses/0044 (3040)
No log for spider/customers_and_addresses/0040 (3041)
No log for spider/customers_and_addresses/0028 (3042)
No log for spider/customers_and_addresses/0031 (3043)
No log for spider/musical/0002 (3044)
No log for spider/musical/0017 (3045)
No log for spider/musical/0008 (3046)
No log for spider/musical/0003 (3047)
No log for spider/musical/0013 (3048)
No log for spider/musical/0006 (3049)
No log for spider/musical/0004 (3050)
No log for spider/musical/0012 (3051)
No log for spider/musical/0015 (3052)
No log for spider/musical/0005 (3053)
No log for spider/musical/0016 (3054)
No log for spider/musical/0018 (3055)
No log for spider/musical/0020 (3056)
No log for spider/musical/0019 (3057)
No log for spider/musical/0007 (3058)
No log for spider/musical/0001 (3059)
No log for spider/musical/0014 (3060)
No log for spider/musical/0009 (3061)
No log for spider/musical/0011 (3062)
No log for spider/musical/0010 (3063)
No log for spider/college_2/0056 (3064)
No log for spider/college_2/0042 (3065)
No log for spider/college_2/0033 (3066)
No log for spider/college_2/0037 (3067)
No log for spider/college_2/0002 (3068)
No log for spider/college_2/0036 (3069)
No log for spider/college_2/0057 (3070)
No log for spider/college_2/0017 (3071)
No log for spider/college_2/0052 (3072)
No log for spider/college_2/0008 (3073)
No log for spider/college_2/0039 (3074)
No log for spider/college_2/0038 (3075)
No log for spider/college_2/0076 (3076)
No log for spider/college_2/0003 (3077)
No log for spider/college_2/0027 (3078)
No log for spider/college_2/0048 (3079)
No log for spider/college_2/0022 (3080)
No log for spider/college_2/0053 (3081)
No log for spider/college_2/0072 (3082)
No log for spider/college_2/0030 (3083)
No log for spider/college_2/0013 (3084)
No log for spider/college_2/0006 (3085)
No log for spider/college_2/0065 (3086)
No log for spider/college_2/0064 (3087)
No log for spider/college_2/0004 (3088)
No log for spider/college_2/0012 (3089)
No log for spider/college_2/0026 (3090)
No log for spider/college_2/0071 (3091)
No log for spider/college_2/0015 (3092)
No log for spider/college_2/0005 (3093)
No log for spider/college_2/0016 (3094)
No log for spider/college_2/0066 (3095)
No log for spider/college_2/0062 (3096)
No log for spider/college_2/0050 (3097)
No log for spider/college_2/0068 (3098)
No log for spider/college_2/0059 (3099)
No log for spider/college_2/0032 (3100)
No log for spider/college_2/0045 (3101)
No log for spider/college_2/0063 (3102)
No log for spider/college_2/0018 (3103)
No log for spider/college_2/0041 (3104)
No log for spider/college_2/0051 (3105)
No log for spider/college_2/0020 (3106)
No log for spider/college_2/0019 (3107)
No log for spider/college_2/0007 (3108)
No log for spider/college_2/0084 (3109)
No log for spider/college_2/0061 (3110)
No log for spider/college_2/0034 (3111)
No log for spider/college_2/0024 (3112)
No log for spider/college_2/0021 (3113)
No log for spider/college_2/0069 (3114)
No log for spider/college_2/0023 (3115)
No log for spider/college_2/0001 (3116)
No log for spider/college_2/0043 (3117)
No log for spider/college_2/0046 (3118)
No log for spider/college_2/0077 (3119)
No log for spider/college_2/0082 (3120)
No log for spider/college_2/0047 (3121)
No log for spider/college_2/0083 (3122)
No log for spider/college_2/0080 (3123)
No log for spider/college_2/0081 (3124)
No log for spider/college_2/0014 (3125)
No log for spider/college_2/0009 (3126)
No log for spider/college_2/0025 (3127)
No log for spider/college_2/0011 (3128)
No log for spider/college_2/0060 (3129)
No log for spider/college_2/0079 (3130)
No log for spider/college_2/0029 (3131)
No log for spider/college_2/0010 (3132)
No log for spider/college_2/0044 (3133)
No log for spider/college_2/0073 (3134)
No log for spider/college_2/0040 (3135)
No log for spider/college_2/0070 (3136)
No log for spider/college_2/0028 (3137)
No log for spider/college_2/0049 (3138)
No log for spider/college_2/0031 (3139)
No log for spider/college_2/0055 (3140)
No log for spider/college_2/0058 (3141)
No log for spider/document_management/0002 (3142)
No log for spider/document_management/0017 (3143)
No log for spider/document_management/0003 (3144)
No log for spider/document_management/0022 (3145)
No log for spider/document_management/0013 (3146)
No log for spider/document_management/0006 (3147)
No log for spider/document_management/0004 (3148)
No log for spider/document_management/0012 (3149)
No log for spider/document_management/0015 (3150)
No log for spider/document_management/0005 (3151)
No log for spider/document_management/0016 (3152)
No log for spider/document_management/0018 (3153)
No log for spider/document_management/0020 (3154)
No log for spider/document_management/0019 (3155)
No log for spider/document_management/0007 (3156)
No log for spider/document_management/0021 (3157)
No log for spider/document_management/0001 (3158)
No log for spider/document_management/0014 (3159)
No log for spider/document_management/0009 (3160)
No log for spider/document_management/0011 (3161)
No log for spider/document_management/0010 (3162)
No log for spider/behavior_monitoring/0033 (3163)
No log for spider/behavior_monitoring/0037 (3164)
No log for spider/behavior_monitoring/0002 (3165)
No log for spider/behavior_monitoring/0036 (3166)
No log for spider/behavior_monitoring/0017 (3167)
No log for spider/behavior_monitoring/0008 (3168)
No log for spider/behavior_monitoring/0039 (3169)
No log for spider/behavior_monitoring/0038 (3170)
No log for spider/behavior_monitoring/0003 (3171)
No log for spider/behavior_monitoring/0027 (3172)
No log for spider/behavior_monitoring/0022 (3173)
No log for spider/behavior_monitoring/0030 (3174)
No log for spider/behavior_monitoring/0013 (3175)
No log for spider/behavior_monitoring/0006 (3176)
No log for spider/behavior_monitoring/0004 (3177)
No log for spider/behavior_monitoring/0012 (3178)
No log for spider/behavior_monitoring/0026 (3179)
No log for spider/behavior_monitoring/0015 (3180)
No log for spider/behavior_monitoring/0005 (3181)
No log for spider/behavior_monitoring/0016 (3182)
No log for spider/behavior_monitoring/0032 (3183)
No log for spider/behavior_monitoring/0018 (3184)
No log for spider/behavior_monitoring/0035 (3185)
No log for spider/behavior_monitoring/0020 (3186)
No log for spider/behavior_monitoring/0019 (3187)
No log for spider/behavior_monitoring/0007 (3188)
No log for spider/behavior_monitoring/0034 (3189)
No log for spider/behavior_monitoring/0024 (3190)
No log for spider/behavior_monitoring/0021 (3191)
No log for spider/behavior_monitoring/0023 (3192)
No log for spider/behavior_monitoring/0001 (3193)
No log for spider/behavior_monitoring/0014 (3194)
No log for spider/behavior_monitoring/0009 (3195)
No log for spider/behavior_monitoring/0025 (3196)
No log for spider/behavior_monitoring/0011 (3197)
No log for spider/behavior_monitoring/0029 (3198)
No log for spider/behavior_monitoring/0010 (3199)
No log for spider/behavior_monitoring/0040 (3200)
No log for spider/behavior_monitoring/0028 (3201)
No log for spider/behavior_monitoring/0031 (3202)
No log for spider/station_weather/0002 (3203)
No log for spider/station_weather/0008 (3204)
No log for spider/station_weather/0003 (3205)
No log for spider/station_weather/0013 (3206)
No log for spider/station_weather/0006 (3207)
No log for spider/station_weather/0004 (3208)
No log for spider/station_weather/0012 (3209)
No log for spider/station_weather/0015 (3210)
No log for spider/station_weather/0005 (3211)
No log for spider/station_weather/0016 (3212)
No log for spider/station_weather/0007 (3213)
No log for spider/station_weather/0001 (3214)
No log for spider/station_weather/0014 (3215)
No log for spider/station_weather/0009 (3216)
No log for spider/station_weather/0011 (3217)
No log for spider/station_weather/0010 (3218)
No log for spider/local_govt_and_lot/0002 (3219)
No log for spider/local_govt_and_lot/0017 (3220)
No log for spider/local_govt_and_lot/0008 (3221)
No log for spider/local_govt_and_lot/0003 (3222)
No log for spider/local_govt_and_lot/0013 (3223)
No log for spider/local_govt_and_lot/0006 (3224)
No log for spider/local_govt_and_lot/0004 (3225)
No log for spider/local_govt_and_lot/0012 (3226)
No log for spider/local_govt_and_lot/0015 (3227)
No log for spider/local_govt_and_lot/0005 (3228)
No log for spider/local_govt_and_lot/0016 (3229)
No log for spider/local_govt_and_lot/0007 (3230)
No log for spider/local_govt_and_lot/0001 (3231)
No log for spider/local_govt_and_lot/0014 (3232)
No log for spider/local_govt_and_lot/0009 (3233)
No log for spider/local_govt_and_lot/0011 (3234)
No log for spider/local_govt_and_lot/0010 (3235)
No log for spider/program_share/0002 (3236)
No log for spider/program_share/0017 (3237)
No log for spider/program_share/0008 (3238)
No log for spider/program_share/0003 (3239)
No log for spider/program_share/0013 (3240)
No log for spider/program_share/0006 (3241)
No log for spider/program_share/0004 (3242)
No log for spider/program_share/0012 (3243)
No log for spider/program_share/0015 (3244)
No log for spider/program_share/0005 (3245)
No log for spider/program_share/0016 (3246)
No log for spider/program_share/0018 (3247)
No log for spider/program_share/0020 (3248)
No log for spider/program_share/0019 (3249)
No log for spider/program_share/0007 (3250)
No log for spider/program_share/0001 (3251)
No log for spider/program_share/0014 (3252)
No log for spider/program_share/0009 (3253)
No log for spider/program_share/0011 (3254)
No log for spider/program_share/0010 (3255)
No log for spider/allergy_1/0042 (3256)
No log for spider/allergy_1/0033 (3257)
No log for spider/allergy_1/0037 (3258)
No log for spider/allergy_1/0002 (3259)
No log for spider/allergy_1/0036 (3260)
No log for spider/allergy_1/0017 (3261)
No log for spider/allergy_1/0008 (3262)
No log for spider/allergy_1/0039 (3263)
No log for spider/allergy_1/0038 (3264)
No log for spider/allergy_1/0003 (3265)
No log for spider/allergy_1/0027 (3266)
No log for spider/allergy_1/0048 (3267)
No log for spider/allergy_1/0022 (3268)
No log for spider/allergy_1/0030 (3269)
No log for spider/allergy_1/0013 (3270)
No log for spider/allergy_1/0006 (3271)
No log for spider/allergy_1/0004 (3272)
No log for spider/allergy_1/0012 (3273)
No log for spider/allergy_1/0026 (3274)
No log for spider/allergy_1/0015 (3275)
No log for spider/allergy_1/0005 (3276)
No log for spider/allergy_1/0016 (3277)
No log for spider/allergy_1/0032 (3278)
No log for spider/allergy_1/0045 (3279)
No log for spider/allergy_1/0018 (3280)
No log for spider/allergy_1/0041 (3281)
No log for spider/allergy_1/0035 (3282)
No log for spider/allergy_1/0020 (3283)
No log for spider/allergy_1/0019 (3284)
No log for spider/allergy_1/0007 (3285)
No log for spider/allergy_1/0034 (3286)
No log for spider/allergy_1/0024 (3287)
No log for spider/allergy_1/0021 (3288)
No log for spider/allergy_1/0023 (3289)
No log for spider/allergy_1/0001 (3290)
No log for spider/allergy_1/0043 (3291)
No log for spider/allergy_1/0046 (3292)
No log for spider/allergy_1/0047 (3293)
No log for spider/allergy_1/0014 (3294)
No log for spider/allergy_1/0009 (3295)
No log for spider/allergy_1/0025 (3296)
No log for spider/allergy_1/0011 (3297)
No log for spider/allergy_1/0029 (3298)
No log for spider/allergy_1/0010 (3299)
No log for spider/allergy_1/0044 (3300)
No log for spider/allergy_1/0040 (3301)
No log for spider/allergy_1/0028 (3302)
No log for spider/allergy_1/0049 (3303)
No log for spider/allergy_1/0031 (3304)
No log for spider/e_learning/0033 (3305)
No log for spider/e_learning/0037 (3306)
No log for spider/e_learning/0002 (3307)
No log for spider/e_learning/0036 (3308)
No log for spider/e_learning/0017 (3309)
No log for spider/e_learning/0008 (3310)
No log for spider/e_learning/0039 (3311)
No log for spider/e_learning/0038 (3312)
No log for spider/e_learning/0003 (3313)
No log for spider/e_learning/0027 (3314)
No log for spider/e_learning/0022 (3315)
No log for spider/e_learning/0030 (3316)
No log for spider/e_learning/0013 (3317)
No log for spider/e_learning/0006 (3318)
No log for spider/e_learning/0004 (3319)
No log for spider/e_learning/0012 (3320)
No log for spider/e_learning/0026 (3321)
No log for spider/e_learning/0015 (3322)
No log for spider/e_learning/0005 (3323)
No log for spider/e_learning/0016 (3324)
No log for spider/e_learning/0032 (3325)
No log for spider/e_learning/0018 (3326)
No log for spider/e_learning/0035 (3327)
No log for spider/e_learning/0020 (3328)
No log for spider/e_learning/0019 (3329)
No log for spider/e_learning/0007 (3330)
No log for spider/e_learning/0034 (3331)
No log for spider/e_learning/0024 (3332)
No log for spider/e_learning/0021 (3333)
No log for spider/e_learning/0023 (3334)
No log for spider/e_learning/0001 (3335)
No log for spider/e_learning/0014 (3336)
No log for spider/e_learning/0009 (3337)
No log for spider/e_learning/0025 (3338)
No log for spider/e_learning/0011 (3339)
No log for spider/e_learning/0029 (3340)
No log for spider/e_learning/0010 (3341)
No log for spider/e_learning/0028 (3342)
No log for spider/e_learning/0031 (3343)
No log for spider/aircraft/0002 (3344)
No log for spider/aircraft/0017 (3345)
No log for spider/aircraft/0008 (3346)
No log for spider/aircraft/0003 (3347)
No log for spider/aircraft/0022 (3348)
No log for spider/aircraft/0013 (3349)
No log for spider/aircraft/0006 (3350)
No log for spider/aircraft/0004 (3351)
No log for spider/aircraft/0012 (3352)
No log for spider/aircraft/0015 (3353)
No log for spider/aircraft/0005 (3354)
No log for spider/aircraft/0016 (3355)
No log for spider/aircraft/0020 (3356)
No log for spider/aircraft/0007 (3357)
No log for spider/aircraft/0021 (3358)
No log for spider/aircraft/0023 (3359)
No log for spider/aircraft/0001 (3360)
No log for spider/aircraft/0014 (3361)
No log for spider/aircraft/0009 (3362)
No log for spider/aircraft/0011 (3363)
No log for spider/aircraft/0010 (3364)
No log for spider/sports_competition/0002 (3365)
No log for spider/sports_competition/0017 (3366)
No log for spider/sports_competition/0008 (3367)
No log for spider/sports_competition/0003 (3368)
No log for spider/sports_competition/0022 (3369)
No log for spider/sports_competition/0013 (3370)
No log for spider/sports_competition/0006 (3371)
No log for spider/sports_competition/0004 (3372)
No log for spider/sports_competition/0012 (3373)
No log for spider/sports_competition/0026 (3374)
No log for spider/sports_competition/0015 (3375)
No log for spider/sports_competition/0005 (3376)
No log for spider/sports_competition/0016 (3377)
No log for spider/sports_competition/0018 (3378)
No log for spider/sports_competition/0020 (3379)
No log for spider/sports_competition/0019 (3380)
No log for spider/sports_competition/0007 (3381)
No log for spider/sports_competition/0024 (3382)
No log for spider/sports_competition/0021 (3383)
No log for spider/sports_competition/0023 (3384)
No log for spider/sports_competition/0001 (3385)
No log for spider/sports_competition/0014 (3386)
No log for spider/sports_competition/0009 (3387)
No log for spider/sports_competition/0025 (3388)
No log for spider/sports_competition/0011 (3389)
No log for spider/sports_competition/0010 (3390)
No log for spider/dorm_1/0042 (3391)
No log for spider/dorm_1/0033 (3392)
No log for spider/dorm_1/0037 (3393)
No log for spider/dorm_1/0002 (3394)
No log for spider/dorm_1/0036 (3395)
No log for spider/dorm_1/0017 (3396)
No log for spider/dorm_1/0008 (3397)
No log for spider/dorm_1/0039 (3398)
No log for spider/dorm_1/0038 (3399)
No log for spider/dorm_1/0003 (3400)
No log for spider/dorm_1/0027 (3401)
No log for spider/dorm_1/0048 (3402)
No log for spider/dorm_1/0022 (3403)
No log for spider/dorm_1/0030 (3404)
No log for spider/dorm_1/0006 (3405)
No log for spider/dorm_1/0004 (3406)
No log for spider/dorm_1/0012 (3407)
No log for spider/dorm_1/0026 (3408)
No log for spider/dorm_1/0015 (3409)
No log for spider/dorm_1/0005 (3410)
No log for spider/dorm_1/0016 (3411)
No log for spider/dorm_1/0050 (3412)
No log for spider/dorm_1/0032 (3413)
No log for spider/dorm_1/0045 (3414)
No log for spider/dorm_1/0018 (3415)
No log for spider/dorm_1/0041 (3416)
No log for spider/dorm_1/0035 (3417)
No log for spider/dorm_1/0020 (3418)
No log for spider/dorm_1/0019 (3419)
No log for spider/dorm_1/0007 (3420)
No log for spider/dorm_1/0034 (3421)
No log for spider/dorm_1/0024 (3422)
No log for spider/dorm_1/0021 (3423)
No log for spider/dorm_1/0023 (3424)
No log for spider/dorm_1/0001 (3425)
No log for spider/dorm_1/0043 (3426)
No log for spider/dorm_1/0046 (3427)
No log for spider/dorm_1/0047 (3428)
No log for spider/dorm_1/0014 (3429)
No log for spider/dorm_1/0009 (3430)
No log for spider/dorm_1/0025 (3431)
No log for spider/dorm_1/0011 (3432)
No log for spider/dorm_1/0029 (3433)
No log for spider/dorm_1/0010 (3434)
No log for spider/dorm_1/0044 (3435)
No log for spider/dorm_1/0040 (3436)
No log for spider/dorm_1/0028 (3437)
No log for spider/dorm_1/0049 (3438)
No log for spider/dorm_1/0031 (3439)
No log for spider/school_finance/0002 (3440)
No log for spider/school_finance/0017 (3441)
No log for spider/school_finance/0008 (3442)
No log for spider/school_finance/0003 (3443)
No log for spider/school_finance/0022 (3444)
No log for spider/school_finance/0006 (3445)
No log for spider/school_finance/0004 (3446)
No log for spider/school_finance/0012 (3447)
No log for spider/school_finance/0015 (3448)
No log for spider/school_finance/0005 (3449)
No log for spider/school_finance/0016 (3450)
No log for spider/school_finance/0018 (3451)
No log for spider/school_finance/0020 (3452)
No log for spider/school_finance/0019 (3453)
No log for spider/school_finance/0007 (3454)
No log for spider/school_finance/0024 (3455)
No log for spider/school_finance/0021 (3456)
No log for spider/school_finance/0023 (3457)
No log for spider/school_finance/0001 (3458)
No log for spider/school_finance/0014 (3459)
No log for spider/school_finance/0009 (3460)
No log for spider/school_finance/0010 (3461)
No log for spider/voter_2/0033 (3462)
No log for spider/voter_2/0002 (3463)
No log for spider/voter_2/0036 (3464)
No log for spider/voter_2/0017 (3465)
No log for spider/voter_2/0008 (3466)
No log for spider/voter_2/0003 (3467)
No log for spider/voter_2/0027 (3468)
No log for spider/voter_2/0022 (3469)
No log for spider/voter_2/0030 (3470)
No log for spider/voter_2/0013 (3471)
No log for spider/voter_2/0006 (3472)
No log for spider/voter_2/0004 (3473)
No log for spider/voter_2/0012 (3474)
No log for spider/voter_2/0026 (3475)
No log for spider/voter_2/0015 (3476)
No log for spider/voter_2/0005 (3477)
No log for spider/voter_2/0016 (3478)
No log for spider/voter_2/0032 (3479)
No log for spider/voter_2/0018 (3480)
No log for spider/voter_2/0035 (3481)
No log for spider/voter_2/0020 (3482)
No log for spider/voter_2/0019 (3483)
No log for spider/voter_2/0007 (3484)
No log for spider/voter_2/0034 (3485)
No log for spider/voter_2/0024 (3486)
No log for spider/voter_2/0021 (3487)
No log for spider/voter_2/0023 (3488)
No log for spider/voter_2/0001 (3489)
No log for spider/voter_2/0014 (3490)
No log for spider/voter_2/0009 (3491)
No log for spider/voter_2/0025 (3492)
No log for spider/voter_2/0011 (3493)
No log for spider/voter_2/0029 (3494)
No log for spider/voter_2/0010 (3495)
No log for spider/voter_2/0028 (3496)
No log for spider/voter_2/0031 (3497)
No log for spider/gas_company/0002 (3498)
No log for spider/gas_company/0017 (3499)
No log for spider/gas_company/0008 (3500)
No log for spider/gas_company/0003 (3501)
No log for spider/gas_company/0022 (3502)
No log for spider/gas_company/0013 (3503)
No log for spider/gas_company/0006 (3504)
No log for spider/gas_company/0004 (3505)
No log for spider/gas_company/0012 (3506)
No log for spider/gas_company/0015 (3507)
No log for spider/gas_company/0005 (3508)
No log for spider/gas_company/0016 (3509)
No log for spider/gas_company/0018 (3510)
No log for spider/gas_company/0020 (3511)
No log for spider/gas_company/0019 (3512)
No log for spider/gas_company/0007 (3513)
No log for spider/gas_company/0021 (3514)
No log for spider/gas_company/0023 (3515)
No log for spider/gas_company/0001 (3516)
No log for spider/gas_company/0014 (3517)
No log for spider/gas_company/0009 (3518)
No log for spider/gas_company/0011 (3519)
No log for spider/solvency_ii/0002 (3520)
No log for spider/solvency_ii/0008 (3521)
No log for spider/solvency_ii/0003 (3522)
No log for spider/solvency_ii/0013 (3523)
No log for spider/solvency_ii/0006 (3524)
No log for spider/solvency_ii/0004 (3525)
No log for spider/solvency_ii/0012 (3526)
No log for spider/solvency_ii/0015 (3527)
No log for spider/solvency_ii/0005 (3528)
No log for spider/solvency_ii/0007 (3529)
No log for spider/solvency_ii/0001 (3530)
No log for spider/solvency_ii/0014 (3531)
No log for spider/solvency_ii/0009 (3532)
No log for spider/solvency_ii/0011 (3533)
No log for spider/solvency_ii/0010 (3534)
No log for spider/college_3/0033 (3535)
No log for spider/college_3/0002 (3536)
No log for spider/college_3/0036 (3537)
No log for spider/college_3/0017 (3538)
No log for spider/college_3/0008 (3539)
No log for spider/college_3/0003 (3540)
No log for spider/college_3/0027 (3541)
No log for spider/college_3/0022 (3542)
No log for spider/college_3/0030 (3543)
No log for spider/college_3/0013 (3544)
No log for spider/college_3/0006 (3545)
No log for spider/college_3/0004 (3546)
No log for spider/college_3/0012 (3547)
No log for spider/college_3/0026 (3548)
No log for spider/college_3/0015 (3549)
No log for spider/college_3/0005 (3550)
No log for spider/college_3/0016 (3551)
No log for spider/college_3/0032 (3552)
No log for spider/college_3/0018 (3553)
No log for spider/college_3/0035 (3554)
No log for spider/college_3/0020 (3555)
No log for spider/college_3/0019 (3556)
No log for spider/college_3/0007 (3557)
No log for spider/college_3/0034 (3558)
No log for spider/college_3/0024 (3559)
No log for spider/college_3/0021 (3560)
No log for spider/college_3/0023 (3561)
No log for spider/college_3/0001 (3562)
No log for spider/college_3/0014 (3563)
No log for spider/college_3/0009 (3564)
No log for spider/college_3/0025 (3565)
No log for spider/college_3/0011 (3566)
No log for spider/college_3/0029 (3567)
No log for spider/college_3/0010 (3568)
No log for spider/college_3/0028 (3569)
No log for spider/college_3/0031 (3570)
No log for spider/workshop_paper/0002 (3571)
No log for spider/workshop_paper/0008 (3572)
No log for spider/workshop_paper/0003 (3573)
No log for spider/workshop_paper/0013 (3574)
No log for spider/workshop_paper/0006 (3575)
No log for spider/workshop_paper/0004 (3576)
No log for spider/workshop_paper/0012 (3577)
No log for spider/workshop_paper/0015 (3578)
No log for spider/workshop_paper/0005 (3579)
No log for spider/workshop_paper/0007 (3580)
No log for spider/workshop_paper/0001 (3581)
No log for spider/workshop_paper/0014 (3582)
No log for spider/workshop_paper/0011 (3583)
No log for spider/workshop_paper/0010 (3584)
No log for spider/film_rank/0002 (3585)
No log for spider/film_rank/0017 (3586)
No log for spider/film_rank/0008 (3587)
No log for spider/film_rank/0003 (3588)
No log for spider/film_rank/0022 (3589)
No log for spider/film_rank/0013 (3590)
No log for spider/film_rank/0006 (3591)
No log for spider/film_rank/0004 (3592)
No log for spider/film_rank/0012 (3593)
No log for spider/film_rank/0015 (3594)
No log for spider/film_rank/0005 (3595)
No log for spider/film_rank/0016 (3596)
No log for spider/film_rank/0018 (3597)
No log for spider/film_rank/0020 (3598)
No log for spider/film_rank/0019 (3599)
No log for spider/film_rank/0007 (3600)
No log for spider/film_rank/0024 (3601)
No log for spider/film_rank/0021 (3602)
No log for spider/film_rank/0023 (3603)
No log for spider/film_rank/0001 (3604)
No log for spider/film_rank/0014 (3605)
No log for spider/film_rank/0009 (3606)
No log for spider/film_rank/0011 (3607)
No log for spider/film_rank/0010 (3608)
No log for spider/ship_mission/0002 (3609)
No log for spider/ship_mission/0008 (3610)
No log for spider/ship_mission/0003 (3611)
No log for spider/ship_mission/0013 (3612)
No log for spider/ship_mission/0006 (3613)
No log for spider/ship_mission/0004 (3614)
No log for spider/ship_mission/0012 (3615)
No log for spider/ship_mission/0015 (3616)
No log for spider/ship_mission/0005 (3617)
No log for spider/ship_mission/0007 (3618)
No log for spider/ship_mission/0001 (3619)
No log for spider/ship_mission/0014 (3620)
No log for spider/ship_mission/0009 (3621)
No log for spider/ship_mission/0011 (3622)
No log for spider/ship_mission/0010 (3623)
No log for spider/product_catalog/0002 (3624)
No log for spider/product_catalog/0017 (3625)
No log for spider/product_catalog/0008 (3626)
No log for spider/product_catalog/0003 (3627)
No log for spider/product_catalog/0013 (3628)
No log for spider/product_catalog/0006 (3629)
No log for spider/product_catalog/0004 (3630)
No log for spider/product_catalog/0012 (3631)
No log for spider/product_catalog/0015 (3632)
No log for spider/product_catalog/0005 (3633)
No log for spider/product_catalog/0016 (3634)
No log for spider/product_catalog/0018 (3635)
No log for spider/product_catalog/0020 (3636)
No log for spider/product_catalog/0019 (3637)
No log for spider/product_catalog/0007 (3638)
No log for spider/product_catalog/0021 (3639)
No log for spider/product_catalog/0001 (3640)
No log for spider/product_catalog/0014 (3641)
No log for spider/product_catalog/0009 (3642)
No log for spider/product_catalog/0011 (3643)
No log for spider/product_catalog/0010 (3644)
No log for spider/news_report/0002 (3645)
No log for spider/news_report/0017 (3646)
No log for spider/news_report/0008 (3647)
No log for spider/news_report/0003 (3648)
No log for spider/news_report/0013 (3649)
No log for spider/news_report/0006 (3650)
No log for spider/news_report/0004 (3651)
No log for spider/news_report/0012 (3652)
No log for spider/news_report/0015 (3653)
No log for spider/news_report/0005 (3654)
No log for spider/news_report/0016 (3655)
No log for spider/news_report/0018 (3656)
No log for spider/news_report/0007 (3657)
No log for spider/news_report/0001 (3658)
No log for spider/news_report/0014 (3659)
No log for spider/news_report/0009 (3660)
No log for spider/news_report/0011 (3661)
No log for spider/news_report/0010 (3662)
No log for spider/railway/0002 (3663)
No log for spider/railway/0017 (3664)
No log for spider/railway/0008 (3665)
No log for spider/railway/0003 (3666)
No log for spider/railway/0013 (3667)
No log for spider/railway/0006 (3668)
No log for spider/railway/0004 (3669)
No log for spider/railway/0012 (3670)
No log for spider/railway/0015 (3671)
No log for spider/railway/0005 (3672)
No log for spider/railway/0016 (3673)
No log for spider/railway/0018 (3674)
No log for spider/railway/0020 (3675)
No log for spider/railway/0019 (3676)
No log for spider/railway/0007 (3677)
No log for spider/railway/0021 (3678)
No log for spider/railway/0001 (3679)
No log for spider/railway/0014 (3680)
No log for spider/railway/0009 (3681)
No log for spider/railway/0011 (3682)
No log for spider/railway/0010 (3683)
No log for spider/music_1/0042 (3684)
No log for spider/music_1/0033 (3685)
No log for spider/music_1/0037 (3686)
No log for spider/music_1/0002 (3687)
No log for spider/music_1/0036 (3688)
No log for spider/music_1/0017 (3689)
No log for spider/music_1/0008 (3690)
No log for spider/music_1/0039 (3691)
No log for spider/music_1/0038 (3692)
No log for spider/music_1/0003 (3693)
No log for spider/music_1/0027 (3694)
No log for spider/music_1/0048 (3695)
No log for spider/music_1/0022 (3696)
No log for spider/music_1/0030 (3697)
No log for spider/music_1/0013 (3698)
No log for spider/music_1/0006 (3699)
No log for spider/music_1/0004 (3700)
No log for spider/music_1/0012 (3701)
No log for spider/music_1/0026 (3702)
No log for spider/music_1/0015 (3703)
No log for spider/music_1/0005 (3704)
No log for spider/music_1/0016 (3705)
No log for spider/music_1/0050 (3706)
No log for spider/music_1/0032 (3707)
No log for spider/music_1/0045 (3708)
No log for spider/music_1/0018 (3709)
No log for spider/music_1/0041 (3710)
No log for spider/music_1/0035 (3711)
No log for spider/music_1/0020 (3712)
No log for spider/music_1/0019 (3713)
No log for spider/music_1/0007 (3714)
No log for spider/music_1/0034 (3715)
No log for spider/music_1/0024 (3716)
No log for spider/music_1/0021 (3717)
No log for spider/music_1/0023 (3718)
No log for spider/music_1/0001 (3719)
No log for spider/music_1/0043 (3720)
No log for spider/music_1/0046 (3721)
No log for spider/music_1/0047 (3722)
No log for spider/music_1/0014 (3723)
No log for spider/music_1/0009 (3724)
No log for spider/music_1/0025 (3725)
No log for spider/music_1/0011 (3726)
No log for spider/music_1/0029 (3727)
No log for spider/music_1/0010 (3728)
No log for spider/music_1/0040 (3729)
No log for spider/music_1/0028 (3730)
No log for spider/music_1/0049 (3731)
No log for spider/music_1/0031 (3732)
No log for spider/cre_Doc_Tracking_DB/0042 (3733)
No log for spider/cre_Doc_Tracking_DB/0033 (3734)
No log for spider/cre_Doc_Tracking_DB/0037 (3735)
No log for spider/cre_Doc_Tracking_DB/0002 (3736)
No log for spider/cre_Doc_Tracking_DB/0036 (3737)
No log for spider/cre_Doc_Tracking_DB/0017 (3738)
No log for spider/cre_Doc_Tracking_DB/0008 (3739)
No log for spider/cre_Doc_Tracking_DB/0039 (3740)
No log for spider/cre_Doc_Tracking_DB/0038 (3741)
No log for spider/cre_Doc_Tracking_DB/0003 (3742)
No log for spider/cre_Doc_Tracking_DB/0027 (3743)
No log for spider/cre_Doc_Tracking_DB/0022 (3744)
No log for spider/cre_Doc_Tracking_DB/0030 (3745)
No log for spider/cre_Doc_Tracking_DB/0013 (3746)
No log for spider/cre_Doc_Tracking_DB/0006 (3747)
No log for spider/cre_Doc_Tracking_DB/0004 (3748)
No log for spider/cre_Doc_Tracking_DB/0012 (3749)
No log for spider/cre_Doc_Tracking_DB/0026 (3750)
No log for spider/cre_Doc_Tracking_DB/0015 (3751)
No log for spider/cre_Doc_Tracking_DB/0005 (3752)
No log for spider/cre_Doc_Tracking_DB/0016 (3753)
No log for spider/cre_Doc_Tracking_DB/0032 (3754)
No log for spider/cre_Doc_Tracking_DB/0045 (3755)
No log for spider/cre_Doc_Tracking_DB/0018 (3756)
No log for spider/cre_Doc_Tracking_DB/0041 (3757)
No log for spider/cre_Doc_Tracking_DB/0035 (3758)
No log for spider/cre_Doc_Tracking_DB/0020 (3759)
No log for spider/cre_Doc_Tracking_DB/0019 (3760)
No log for spider/cre_Doc_Tracking_DB/0007 (3761)
No log for spider/cre_Doc_Tracking_DB/0034 (3762)
No log for spider/cre_Doc_Tracking_DB/0024 (3763)
No log for spider/cre_Doc_Tracking_DB/0021 (3764)
No log for spider/cre_Doc_Tracking_DB/0023 (3765)
No log for spider/cre_Doc_Tracking_DB/0001 (3766)
No log for spider/cre_Doc_Tracking_DB/0043 (3767)
No log for spider/cre_Doc_Tracking_DB/0014 (3768)
No log for spider/cre_Doc_Tracking_DB/0009 (3769)
No log for spider/cre_Doc_Tracking_DB/0025 (3770)
No log for spider/cre_Doc_Tracking_DB/0011 (3771)
No log for spider/cre_Doc_Tracking_DB/0029 (3772)
No log for spider/cre_Doc_Tracking_DB/0010 (3773)
No log for spider/cre_Doc_Tracking_DB/0044 (3774)
No log for spider/cre_Doc_Tracking_DB/0040 (3775)
No log for spider/cre_Doc_Tracking_DB/0028 (3776)
No log for spider/cre_Doc_Tracking_DB/0031 (3777)
No log for spider/storm_record/0002 (3778)
No log for spider/storm_record/0017 (3779)
No log for spider/storm_record/0008 (3780)
No log for spider/storm_record/0003 (3781)
No log for spider/storm_record/0022 (3782)
No log for spider/storm_record/0013 (3783)
No log for spider/storm_record/0006 (3784)
No log for spider/storm_record/0004 (3785)
No log for spider/storm_record/0012 (3786)
No log for spider/storm_record/0015 (3787)
No log for spider/storm_record/0005 (3788)
No log for spider/storm_record/0016 (3789)
No log for spider/storm_record/0018 (3790)
No log for spider/storm_record/0020 (3791)
No log for spider/storm_record/0019 (3792)
No log for spider/storm_record/0007 (3793)
No log for spider/storm_record/0021 (3794)
No log for spider/storm_record/0001 (3795)
No log for spider/storm_record/0014 (3796)
No log for spider/storm_record/0009 (3797)
No log for spider/storm_record/0011 (3798)
No log for spider/storm_record/0010 (3799)
No log for spider/game_injury/0002 (3800)
No log for spider/game_injury/0017 (3801)
No log for spider/game_injury/0008 (3802)
No log for spider/game_injury/0003 (3803)
No log for spider/game_injury/0013 (3804)
No log for spider/game_injury/0006 (3805)
No log for spider/game_injury/0004 (3806)
No log for spider/game_injury/0012 (3807)
No log for spider/game_injury/0015 (3808)
No log for spider/game_injury/0005 (3809)
No log for spider/game_injury/0016 (3810)
No log for spider/game_injury/0018 (3811)
No log for spider/game_injury/0007 (3812)
No log for spider/game_injury/0001 (3813)
No log for spider/game_injury/0014 (3814)
No log for spider/game_injury/0009 (3815)
No log for spider/game_injury/0011 (3816)
No log for spider/game_injury/0010 (3817)
No log for spider/inn_1/0033 (3818)
No log for spider/inn_1/0002 (3819)
No log for spider/inn_1/0036 (3820)
No log for spider/inn_1/0017 (3821)
No log for spider/inn_1/0003 (3822)
No log for spider/inn_1/0027 (3823)
No log for spider/inn_1/0022 (3824)
No log for spider/inn_1/0030 (3825)
No log for spider/inn_1/0013 (3826)
No log for spider/inn_1/0006 (3827)
No log for spider/inn_1/0004 (3828)
No log for spider/inn_1/0012 (3829)
No log for spider/inn_1/0026 (3830)
No log for spider/inn_1/0015 (3831)
No log for spider/inn_1/0005 (3832)
No log for spider/inn_1/0016 (3833)
No log for spider/inn_1/0032 (3834)
No log for spider/inn_1/0018 (3835)
No log for spider/inn_1/0035 (3836)
No log for spider/inn_1/0020 (3837)
No log for spider/inn_1/0019 (3838)
No log for spider/inn_1/0034 (3839)
No log for spider/inn_1/0024 (3840)
No log for spider/inn_1/0021 (3841)
No log for spider/inn_1/0023 (3842)
No log for spider/inn_1/0001 (3843)
No log for spider/inn_1/0014 (3844)
No log for spider/inn_1/0009 (3845)
No log for spider/inn_1/0025 (3846)
No log for spider/inn_1/0011 (3847)
No log for spider/inn_1/0029 (3848)
No log for spider/inn_1/0010 (3849)
No log for spider/inn_1/0028 (3850)
No log for spider/inn_1/0031 (3851)
No log for spider/entrepreneur/0002 (3852)
No log for spider/entrepreneur/0017 (3853)
No log for spider/entrepreneur/0008 (3854)
No log for spider/entrepreneur/0003 (3855)
No log for spider/entrepreneur/0013 (3856)
No log for spider/entrepreneur/0006 (3857)
No log for spider/entrepreneur/0004 (3858)
No log for spider/entrepreneur/0012 (3859)
No log for spider/entrepreneur/0015 (3860)
No log for spider/entrepreneur/0005 (3861)
No log for spider/entrepreneur/0016 (3862)
No log for spider/entrepreneur/0018 (3863)
No log for spider/entrepreneur/0020 (3864)
No log for spider/entrepreneur/0019 (3865)
No log for spider/entrepreneur/0007 (3866)
No log for spider/entrepreneur/0001 (3867)
No log for spider/entrepreneur/0014 (3868)
No log for spider/entrepreneur/0009 (3869)
No log for spider/entrepreneur/0011 (3870)
No log for spider/entrepreneur/0010 (3871)
No log for spider/riding_club/0002 (3872)
No log for spider/riding_club/0017 (3873)
No log for spider/riding_club/0008 (3874)
No log for spider/riding_club/0003 (3875)
No log for spider/riding_club/0013 (3876)
No log for spider/riding_club/0006 (3877)
No log for spider/riding_club/0004 (3878)
No log for spider/riding_club/0012 (3879)
No log for spider/riding_club/0015 (3880)
No log for spider/riding_club/0005 (3881)
No log for spider/riding_club/0016 (3882)
No log for spider/riding_club/0007 (3883)
No log for spider/riding_club/0001 (3884)
No log for spider/riding_club/0014 (3885)
No log for spider/riding_club/0009 (3886)
No log for spider/riding_club/0011 (3887)
No log for spider/riding_club/0010 (3888)
No log for spider/match_season/0002 (3889)
No log for spider/match_season/0017 (3890)
No log for spider/match_season/0008 (3891)
No log for spider/match_season/0003 (3892)
No log for spider/match_season/0027 (3893)
No log for spider/match_season/0022 (3894)
No log for spider/match_season/0013 (3895)
No log for spider/match_season/0006 (3896)
No log for spider/match_season/0004 (3897)
No log for spider/match_season/0012 (3898)
No log for spider/match_season/0026 (3899)
No log for spider/match_season/0015 (3900)
No log for spider/match_season/0005 (3901)
No log for spider/match_season/0016 (3902)
No log for spider/match_season/0018 (3903)
No log for spider/match_season/0020 (3904)
No log for spider/match_season/0019 (3905)
No log for spider/match_season/0007 (3906)
No log for spider/match_season/0024 (3907)
No log for spider/match_season/0021 (3908)
No log for spider/match_season/0023 (3909)
No log for spider/match_season/0001 (3910)
No log for spider/match_season/0014 (3911)
No log for spider/match_season/0009 (3912)
No log for spider/match_season/0025 (3913)
No log for spider/match_season/0011 (3914)
No log for spider/match_season/0029 (3915)
No log for spider/match_season/0010 (3916)
No log for spider/match_season/0028 (3917)
No log for spider/soccer_2/0042 (3918)
No log for spider/soccer_2/0033 (3919)
No log for spider/soccer_2/0037 (3920)
No log for spider/soccer_2/0002 (3921)
No log for spider/soccer_2/0036 (3922)
No log for spider/soccer_2/0017 (3923)
No log for spider/soccer_2/0052 (3924)
No log for spider/soccer_2/0008 (3925)
No log for spider/soccer_2/0039 (3926)
No log for spider/soccer_2/0038 (3927)
No log for spider/soccer_2/0003 (3928)
No log for spider/soccer_2/0027 (3929)
No log for spider/soccer_2/0048 (3930)
No log for spider/soccer_2/0022 (3931)
No log for spider/soccer_2/0053 (3932)
No log for spider/soccer_2/0030 (3933)
No log for spider/soccer_2/0013 (3934)
No log for spider/soccer_2/0006 (3935)
No log for spider/soccer_2/0004 (3936)
No log for spider/soccer_2/0012 (3937)
No log for spider/soccer_2/0026 (3938)
No log for spider/soccer_2/0015 (3939)
No log for spider/soccer_2/0005 (3940)
No log for spider/soccer_2/0016 (3941)
No log for spider/soccer_2/0050 (3942)
No log for spider/soccer_2/0032 (3943)
No log for spider/soccer_2/0045 (3944)
No log for spider/soccer_2/0018 (3945)
No log for spider/soccer_2/0041 (3946)
No log for spider/soccer_2/0051 (3947)
No log for spider/soccer_2/0035 (3948)
No log for spider/soccer_2/0020 (3949)
No log for spider/soccer_2/0019 (3950)
No log for spider/soccer_2/0007 (3951)
No log for spider/soccer_2/0034 (3952)
No log for spider/soccer_2/0024 (3953)
No log for spider/soccer_2/0021 (3954)
No log for spider/soccer_2/0023 (3955)
No log for spider/soccer_2/0001 (3956)
No log for spider/soccer_2/0043 (3957)
No log for spider/soccer_2/0046 (3958)
No log for spider/soccer_2/0047 (3959)
No log for spider/soccer_2/0014 (3960)
No log for spider/soccer_2/0009 (3961)
No log for spider/soccer_2/0025 (3962)
No log for spider/soccer_2/0011 (3963)
No log for spider/soccer_2/0029 (3964)
No log for spider/soccer_2/0010 (3965)
No log for spider/soccer_2/0044 (3966)
No log for spider/soccer_2/0040 (3967)
No log for spider/soccer_2/0028 (3968)
No log for spider/soccer_2/0049 (3969)
No log for spider/soccer_2/0031 (3970)
No log for spider/customer_complaints/0002 (3971)
No log for spider/customer_complaints/0017 (3972)
No log for spider/customer_complaints/0008 (3973)
No log for spider/customer_complaints/0003 (3974)
No log for spider/customer_complaints/0022 (3975)
No log for spider/customer_complaints/0013 (3976)
No log for spider/customer_complaints/0006 (3977)
No log for spider/customer_complaints/0004 (3978)
No log for spider/customer_complaints/0015 (3979)
No log for spider/customer_complaints/0005 (3980)
No log for spider/customer_complaints/0016 (3981)
No log for spider/customer_complaints/0018 (3982)
No log for spider/customer_complaints/0020 (3983)
No log for spider/customer_complaints/0019 (3984)
No log for spider/customer_complaints/0007 (3985)
No log for spider/customer_complaints/0021 (3986)
No log for spider/customer_complaints/0023 (3987)
No log for spider/customer_complaints/0001 (3988)
No log for spider/customer_complaints/0014 (3989)
No log for spider/customer_complaints/0009 (3990)
No log for spider/customer_complaints/0011 (3991)
No log for spider/customer_complaints/0010 (3992)
No solution for instance db2csv/orchestra/0021_dev (3994)
No solution for instance db2csv/orchestra/0018_dev (3995)
No solution for instance db2csv/orchestra/0039_dev (3997)
Wrong output for fuzzied solution in instance db2csv/orchestra/0037_dev (3999)
	EXPECTED OUTPUT ====

		SELECT COUNT(*)
		FROM orchestra
		WHERE Major_Record_Format = "CD"
		  OR Major_Record_Format = "DVD"

	   count(*)
	0         9
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `orchestra_id`,
		          `orchestra`,
		          `conductor_id`,
		          `record_company`,
		          `year_of_founded`,
		          `major_record_format`,
		          COUNT(*) OVER () AS `n`
		   FROM
		     (SELECT *
		      FROM `orchestra`
		      WHERE (`major_record_format` != 'DVD')))
		WHERE (`major_record_format` = 'CD')
		ORDER BY count___
		
		

	   count___
	0        14
Error while executing solution for instance db2csv/orchestra/0012_dev (4000)

(sqlite3.OperationalError) no such column: official_ratings__millions_
[SQL: 
SELECT DISTINCT `date` AS `max_share_`,
                `minshare` AS `min_share_`
FROM
  (SELECT `performance_id`,
          `orchestra_id`,
          `type`,
          `date`,
          `official_ratings__millions_`,
          `weekly_rank`,
          `share`,
          MIN(`share`) OVER () AS `minshare`
   FROM `performance`)
WHERE (`type` != 'Live final')
ORDER BY max_share_

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/orchestra/0038_dev (4001)
	EXPECTED OUTPUT ====

		SELECT COUNT(*)
		FROM orchestra
		WHERE Major_Record_Format = "CD"
		  OR Major_Record_Format = "DVD"

	   count(*)
	0         9
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `orchestra_id`,
		          `orchestra`,
		          `conductor_id`,
		          `record_company`,
		          `year_of_founded`,
		          `major_record_format`,
		          COUNT(*) OVER () AS `n`
		   FROM
		     (SELECT *
		      FROM `orchestra`
		      WHERE (`major_record_format` != 'DVD')))
		WHERE (`major_record_format` = 'CD')
		ORDER BY count___
		
		

	   count___
	0        14
Error while executing solution for instance db2csv/orchestra/0036_dev (4002)

(sqlite3.OperationalError) no such column: RHS.official_ratings__millions_
[SQL: 
SELECT DISTINCT date AS record_company
FROM
  (SELECT LHS.orchestra_id AS orchestra_id,
          LHS.orchestra AS orchestra,
          LHS.conductor_id AS conductor_id,
          LHS.record_company AS record_company,
          LHS.year_of_founded AS year_of_founded,
          LHS.major_record_format AS major_record_format,
          LHS.performance_id AS performance_id,
          LHS.type AS TYPE,
          LHS.date AS date,
          LHS.official_ratings__millions_ AS official_ratings__millions_,
          LHS.weekly_rank AS weekly_rank,
          LHS.share AS SHARE,
          RHS.show_id AS show_id,
          RHS.if_first_show AS if_first_show,
          RHS.result AS RESULT,
          RHS.attendance AS attendance
   FROM
     (SELECT LHS.orchestra_id AS orchestra_id,
             LHS.orchestra AS orchestra,
             LHS.conductor_id AS conductor_id,
             LHS.record_company AS record_company,
             LHS.year_of_founded AS year_of_founded,
             LHS.major_record_format AS major_record_format,
             RHS.performance_id AS performance_id,
             RHS.type AS TYPE,
             RHS.date AS date,
             RHS.official_ratings__millions_ AS official_ratings__millions_,
             RHS.weekly_rank AS weekly_rank,
             RHS.share AS SHARE
      FROM orchestra AS LHS
      INNER JOIN performance AS RHS ON (LHS.orchestra_id = RHS.orchestra_id)) AS LHS
   INNER JOIN show AS RHS ON (LHS.performance_id = RHS.performance_id))
WHERE (year_of_founded != 2003.0)
ORDER BY record_company

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance db2csv/orchestra/0011_dev (4006)

(sqlite3.OperationalError) no such column: RHS.official_ratings__millions_
[SQL: 
SELECT DISTINCT `maxshare` AS `max_share_`,
                `date` AS `min_share_`
FROM
  (SELECT `LHS`.`maxshare` AS `maxshare`,
          `RHS`.`performance_id` AS `performance_id`,
          `RHS`.`orchestra_id` AS `orchestra_id`,
          `RHS`.`type` AS `type`,
          `RHS`.`date` AS `date`,
          `RHS`.`official_ratings__millions_` AS `official_ratings__millions_`,
          `RHS`.`weekly_rank` AS `weekly_rank`,
          `RHS`.`share` AS `share`
   FROM
     (SELECT MAX(`share`) AS `maxshare`
      FROM `performance`) AS `LHS`
   CROSS JOIN
     (SELECT *
      FROM `performance`
      WHERE (`type` != 'Live final')) AS RHS)
ORDER BY max_share_

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for base solution in instance db2csv/orchestra/0024_dev (4007)
	EXPECTED OUTPUT ====

	           name
	0  Antal Doráti
	ACTUAL OUTPUT ====

		SELECT T1.Name
		FROM conductor AS T1
		JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
		GROUP BY T2.Conductor_ID
		ORDER BY COUNT(*) DESC
		LIMIT 1

	                    name
	0  Michael Tilson Thomas
Wrong output for ground truth in instance db2csv/orchestra/0024_dev (4007)
No solution for instance db2csv/orchestra/0017_dev (4008)
Wrong output for fuzzied solution in instance db2csv/orchestra/0035_dev (4010)
	EXPECTED OUTPUT ====

		SELECT Record_Company
		FROM orchestra
		WHERE Year_of_Founded < 2003 INTERSECT
		  SELECT Record_Company
		  FROM orchestra WHERE Year_of_Founded > 2003

	                 record_company
	0                 Delos Records
	1  Koch Records / Naxos Records
	ACTUAL OUTPUT ====

		
		SELECT record_company
		FROM
		  (SELECT record_company
		   FROM orchestra
		   WHERE (year_of_founded >= 2003.0) INTERSECT
		     SELECT record_company
		     FROM orchestra WHERE (year_of_founded < 2003.0))
		ORDER BY record_company
		
		

	                 record_company
	0                 Delos Records
	1  Koch Records / Naxos Records
	2   och Records / Naxos Records
No solution for instance db2csv/orchestra/0040_dev (4017)
No solution for instance db2csv/orchestra/0022_dev (4021)
No solution for instance db2csv/orchestra/0031_dev (4024)
Wrong output for base solution in instance db2csv/orchestra/0023_dev (4030)
	EXPECTED OUTPUT ====

	           name
	0  Antal Doráti
	ACTUAL OUTPUT ====

		SELECT T1.Name
		FROM conductor AS T1
		JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
		GROUP BY T2.Conductor_ID
		ORDER BY COUNT(*) DESC
		LIMIT 1

	                    name
	0  Michael Tilson Thomas
Wrong output for ground truth in instance db2csv/orchestra/0023_dev (4030)
No solution for instance db2csv/orchestra/0032_dev (4032)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0060_dev (4034)
	EXPECTED OUTPUT ====

		SELECT transcript_date,
		       other_details
		FROM Transcripts
		ORDER BY transcript_date ASC
		LIMIT 1

	       transcript_date other_details
	0  1983-10-13 18:03:49          iufB
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT mintranscript_date AS transcript_date,
		                other_details
		FROM
		  (SELECT *
		   FROM
		     (SELECT transcript_id,
		             transcript_date,
		             other_details,
		             MIN(transcript_date) OVER () AS mintranscript_date
		      FROM transcripts) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM transcript_contents AS RHS
		        WHERE (LHS.transcript_id = RHS.transcript_id) ))
		ORDER BY transcript_date
		
		

	       transcript_date   other_details
	0  1983-10-13 18:03:49  NM7rc42S2UBIA6
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0058_dev (4037)
	EXPECTED OUTPUT ====

	   avg_transcript_date_
	0           1989.933333
	ACTUAL OUTPUT ====

		SELECT avg(transcript_date)
		FROM Transcripts

	   avg(transcript_date)
	0           1989.933333
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0058_dev (4037)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0018_dev (4038)
	EXPECTED OUTPUT ====

		SELECT section_name,
		       section_description
		FROM Sections

	   section_name section_description
	0                  3fxdoloremqueQwb
	1        3cjmYk     CrW0dvoluptatem
	2             e           doloremqu
	3        kpXf7W          doloremque
	4             o          doloremque
	5             k     doloremquet8MvB
	6                      eprehenderit
	7                         oloremque
	8       nROuJxb           oloremque
	9       q4YkNVx           oloremque
	10            e       reprehenderit
	11            k       reprehenderit
	12            o       reprehenderit
	13            u       reprehenderit
	14            e           voluptate
	15                       voluptatem
	ACTUAL OUTPUT ====

		
		SELECT section_name,
		       section_description
		FROM
		  (SELECT *
		   FROM sections AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM courses AS RHS
		        WHERE (LHS.course_id = RHS.course_id
		               AND LHS.other_details = RHS.other_details) ))
		ORDER BY section_name
		
		

	   section_name section_description
	0                  3fxdoloremqueQwb
	1        3cjmYk     CrW0dvoluptatem
	2        kpXf7W          doloremque
	3             o          doloremque
	4             k     doloremquet8MvB
	5                      eprehenderit
	6                         oloremque
	7       nROuJxb           oloremque
	8       q4YkNVx           oloremque
	9             e       reprehenderit
	10            k       reprehenderit
	11            o       reprehenderit
	12            u       reprehenderit
	13            e           voluptate
	14                       voluptatem
No solution for instance db2csv/student_transcripts_tracking/0033_dev (4039)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0039_dev (4040)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.course_name
		FROM Courses AS T1
		JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id

	  course_name
	0    0kcJnoop
	1    DKUmDoop
	2           d
	3         oop
	4          rs
	ACTUAL OUTPUT ====

		
		SELECT course_name
		FROM
		  (SELECT *
		   FROM courses AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM student_enrolment_courses AS RHS
		        WHERE (LHS.course_id = RHS.course_id) ))
		ORDER BY course_name
		
		

	  course_name
	0    0kcJnoop
	1    DKUmDoop
	2           d
	3         oop
	4          rs
	5          rs
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0054_dev (4042)
	EXPECTED OUTPUT ====

		SELECT first_name
		FROM Students
		WHERE current_address_id != permanent_address_id

	   first_name
	0     Delaney
	1        Deon
	2       Frida
	3       Gregg
	4       Helga
	5      Hobart
	6      Jarvis
	7        Jett
	8       Jordy
	9       Orrin
	10       Reva
	11   Stanford
	12   Timmothy
	13     Warren
	ACTUAL OUTPUT ====

		
		SELECT first_name
		FROM
		  (SELECT *
		   FROM students AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM students
		           WHERE (permanent_address_id != student_id)) AS RHS
		        WHERE (LHS.student_id = RHS.student_id
		               AND LHS.current_address_id = RHS.current_address_id
		               AND LHS.permanent_address_id = RHS.permanent_address_id
		               AND LHS.first_name = RHS.first_name
		               AND LHS.middle_name = RHS.middle_name
		               AND LHS.last_name = RHS.last_name
		               AND LHS.cell_mobile_number = RHS.cell_mobile_number
		               AND LHS.email_address = RHS.email_address
		               AND LHS.ssn = RHS.ssn
		               AND LHS.date_first_registered = RHS.date_first_registered
		               AND LHS.date_left = RHS.date_left
		               AND LHS.other_student_details = RHS.other_student_details) ))
		ORDER BY first_name
		
		

	   first_name
	0     Delaney
	1        Deon
	2       Frida
	3       Gregg
	4       Helga
	5      Hobart
	6      Jarvis
	7        Jett
	8       Jordy
	9      Milton
	10      Orrin
	11       Reva
	12   Stanford
	13   Timmothy
	14     Warren
No solution for instance db2csv/student_transcripts_tracking/0048_dev (4043)
Timeout while getting results...


Wrong output for base solution in instance db2csv/student_transcripts_tracking/0053_dev (4049)
	EXPECTED OUTPUT ====

		SELECT first_name
		FROM Students
		WHERE current_address_id != permanent_address_id

	   first_name
	0     Delaney
	1        Deon
	2       Frida
	3       Gregg
	4       Helga
	5      Hobart
	6      Jarvis
	7        Jett
	8       Jordy
	9       Orrin
	10       Reva
	11   Stanford
	12   Timmothy
	13     Warren
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT first_name
		FROM
		  (SELECT LHS.student_id AS student_id,
		          LHS.current_address_id AS current_address_id,
		          LHS.permanent_address_id AS permanent_address_id,
		          LHS.first_name AS first_name,
		          LHS.middle_name AS middle_name,
		          LHS.last_name AS last_name,
		          LHS.cell_mobile_number AS cell_mobile_number,
		          LHS.email_address AS email_address,
		          LHS.ssn AS ssn,
		          LHS.date_first_registered AS date_first_registered,
		          LHS.date_left AS date_left,
		          LHS.other_student_details AS other_student_details,
		          LHS.address_id AS address_id,
		          LHS.line_1 AS line_1,
		          LHS.line_2 AS line_2,
		          LHS.line_3 AS line_3,
		          LHS.city AS city,
		          LHS.zip_postcode AS zip_postcode,
		          LHS.state_province_county AS state_province_county,
		          LHS.country AS country,
		          LHS.other_address_details AS other_address_details,
		          RHS.student_id_other AS student_id_other,
		          RHS.current_address_id_other AS current_address_id_other,
		          RHS.first_name_other AS first_name_other,
		          RHS.middle_name_other AS middle_name_other,
		          RHS.last_name_other AS last_name_other,
		          RHS.cell_mobile_number_other AS cell_mobile_number_other,
		          RHS.email_address_other AS email_address_other,
		          RHS.ssn_other AS ssn_other,
		          RHS.date_first_registered_other AS date_first_registered_other,
		          RHS.date_left_other AS date_left_other,
		          RHS.other_student_details_other AS other_student_details_other
		   FROM
		     (SELECT LHS.student_id AS student_id,
		             LHS.current_address_id AS current_address_id,
		             LHS.permanent_address_id AS permanent_address_id,
		             LHS.first_name AS first_name,
		             LHS.middle_name AS middle_name,
		             LHS.last_name AS last_name,
		             LHS.cell_mobile_number AS cell_mobile_number,
		             LHS.email_address AS email_address,
		             LHS.ssn AS ssn,
		             LHS.date_first_registered AS date_first_registered,
		             LHS.date_left AS date_left,
		             LHS.other_student_details AS other_student_details,
		             RHS.address_id AS address_id,
		             RHS.line_1 AS line_1,
		             RHS.line_2 AS line_2,
		             RHS.line_3 AS line_3,
		             RHS.city AS city,
		             RHS.zip_postcode AS zip_postcode,
		             RHS.state_province_county AS state_province_county,
		             RHS.country AS country,
		             RHS.other_address_details AS other_address_details
		      FROM students AS LHS
		      CROSS JOIN addresses AS RHS) AS LHS
		   INNER JOIN
		     (SELECT LHS.student_id AS student_id,
		             LHS.current_address_id AS current_address_id,
		             LHS.permanent_address_id AS permanent_address_id,
		             LHS.first_name AS first_name,
		             LHS.middle_name AS middle_name,
		             LHS.last_name AS last_name,
		             LHS.cell_mobile_number AS cell_mobile_number,
		             LHS.email_address AS email_address,
		             LHS.ssn AS ssn,
		             LHS.date_first_registered AS date_first_registered,
		             LHS.date_left AS date_left,
		             LHS.other_student_details AS other_student_details,
		             RHS.student_id AS student_id_other,
		             RHS.current_address_id AS current_address_id_other,
		             RHS.first_name AS first_name_other,
		             RHS.middle_name AS middle_name_other,
		             RHS.last_name AS last_name_other,
		             RHS.cell_mobile_number AS cell_mobile_number_other,
		             RHS.email_address AS email_address_other,
		             RHS.ssn AS ssn_other,
		             RHS.date_first_registered AS date_first_registered_other,
		             RHS.date_left AS date_left_other,
		             RHS.other_student_details AS other_student_details_other
		      FROM students AS LHS
		      INNER JOIN students AS RHS ON (LHS.permanent_address_id = RHS.permanent_address_id)) AS RHS ON (LHS.student_id = RHS.student_id
		                                                                                                         AND LHS.current_address_id = RHS.current_address_id
		                                                                                                         AND LHS.permanent_address_id = RHS.permanent_address_id
		                                                                                                         AND LHS.first_name = RHS.first_name
		                                                                                                         AND LHS.middle_name = RHS.middle_name
		                                                                                                         AND LHS.last_name = RHS.last_name
		                                                                                                         AND LHS.cell_mobile_number = RHS.cell_mobile_number
		                                                                                                         AND LHS.email_address = RHS.email_address
		                                                                                                         AND LHS.ssn = RHS.ssn
		                                                                                                         AND LHS.date_first_registered = RHS.date_first_registered
		                                                                                                         AND LHS.date_left = RHS.date_left
		                                                                                                         AND LHS.other_student_details = RHS.other_student_details))
		ORDER BY first_name
		
		

	   first_name
	0     Delaney
	1        Deon
	2       Frida
	3       Gregg
	4       Helga
	5      Hobart
	6      Jarvis
	7        Jett
	8       Jordy
	9      Milton
	10      Orrin
	11       Reva
	12   Stanford
	13   Timmothy
	14     Warren
No solution for instance db2csv/student_transcripts_tracking/0078_dev (4050)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0001_dev (4051)
	EXPECTED OUTPUT ====

		SELECT line_1,
		       line_2
		FROM addresses

	                                line_1           line_2
	0          15VlNsN C2PEmkIqafe0f4YDmTp         Apt. 388
	1       2(R5G202 Hessel Views Apt. 468        Suite 865
	2            202 Hessel Views Apt. 468         0wSNeUbd
	3            202 Hessel Views Apt. 468          Apt. 38
	4            202 Hessel Views Apt. 468        Suite 865
	5            202 Hessel Views Apt. 468    fIoOnApt. 406
	6       202 Hessel Views Apt. 468jwa8A    7RXUSuite 865
	7            2294 Grant Square Apt. 23         Apt. 305
	8            2294 Grant Square Apt. 23         Apt. 406
	9           2294 Grant Square Apt. 235         Apt. 305
	10          2294 Grant Square Apt. 235          Apt. 40
	11          2294 Grant Square Apt. 235         Apt. 406
	12       2u6aS74046 Metz Walk Apt. 113         Apt. 388
	13             4046 Metz Walk Apt. 113    Apt. 406)3G)Q
	14                 492 Wilkinson Route   A0Cw0iaoOpLBbU
	15                 492 Wilkinson Route       Z mxlZCus2
	16                 492 Wilkinson Route         gtMMp0bL
	17                 492 Wilkinson Route         se6Bq29c
	18                 492 Wilkinson Route    x4Hx Apt. 406
	19            492 Wilkinson RouteCbSft       hunq28yUmZ
	20        67942 Carlotta Ferry Apt. 68   DLDApt. 3882v2
	21       67942 Carlotta Ferry Apt. 686         Apt. 388
	22       67942 Carlotta Ferry Apt. 686         Apt. 388
	23       67942 Carlotta Ferry Apt. 686         Apt. 406
	24       67942 Carlotta Ferry Apt. 686        Suite 865
	25       67942 Carlotta Ferry Apt. 686        Suite 865
	26       67942 Carlotta Ferry Apt. 686         uite 865
	27            74046 Metz Walk Apt. 113         Apt. 406
	28            74046 Metz Walk Apt. 113        Suite 865
	29            74046 Metz Walk Apt. 113   Suite 865oNhkO
	30            74046 Metz Walk Apt. 113          pt. 406
	31                  92 Wilkinson Route         Apt. 388
	32      9lHmS202 Hessel Views Apt. 468          XX8jX4p
	33                 B8Q8KeyxfN6zxIIpfA2       1WzAqhRBt5
	34        BbH9Ez5ZEcUTvd0yhd5lf05ABY2S    ickV(Vc30k1T(
	35       KAdaXggUMgBllaVAFKGkQ9niNc3Cg          pt. 305
	36     Sa hb2294 Grant Square Apt. 235    JrBbPApt. 406
	37           Szy492 Wilkinson RouteKH)          pt. 305
	38        TG (N dQ1UF8Ueja9Qz2JdsNFPSV       iJjwlUGgpe
	39       TT20O74046 Metz Walk Apt. 113         Apt. 305
	40      WIm74046 Metz Walk Apt. 113Jck   B1WApt. 406qR 
	41            Xsx5mdMj7ASgcgJCFww09nPP         Apt. 388
	42       Y9Hth74046 Metz Walk Apt. 113         Apt. 406
	43                cZa39vDfx5kQJLyuJCwW         Apt. 388
	44               cZa39vDfx5kQJLyuJCwWn         Apt. 406
	45      d86vH202 Hessel Views Apt. 468         Apt. 406
	46               eEp5wiGy5dEJI4qR5s2Gk         Apt. 406
	47     inC202 Hessel Views Apt. 468Kvr   yuo6KSuite 865
	48            kQuLoSgjBuZ7GFU9TS4gEVEB  gXSUaG6s 0Fi12C
	49           kQuLoSgjBuZ7GFU9TS4gEVEB9          pt. 388
	50     kvW202 Hessel Views Apt. 468Dvc       9jQtxuCN4g
	51      lQz74046 Metz Walk Apt. 113Xqx         Apt. 388
	52             oqZ1I7uG8R02en3jKYX4DH          Apt. 388
	53   rx4YEz0A3uzGg6pBo53LQ(C n5fV1bC2S         Apt. 388
	54  vfykO67942 Carlotta Ferry Apt. 686        Suite 865
	55  x9fmZXBbH9Ez5ZEcUTvd0yhd5lf05ABY2S         Apt. 406
	56  xWnd467942 Carlotta Ferry Apt. 686       ZaFGrDhKjg
	57      ywv74046 Metz Walk Apt. 113UTw        qXDF9 s (
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT line_1,
		                line_2
		FROM
		  (SELECT LHS.address_id AS address_id,
		          LHS.line_1 AS line_1,
		          LHS.line_2 AS line_2,
		          LHS.line_3 AS line_3,
		          LHS.city AS city,
		          LHS.zip_postcode AS zip_postcode,
		          LHS.state_province_county AS state_province_county,
		          LHS.country AS country,
		          LHS.other_address_details AS other_address_details,
		          RHS.student_course_id AS student_course_id,
		          RHS.transcript_id AS transcript_id
		   FROM addresses AS LHS
		   CROSS JOIN transcript_contents AS RHS)
		ORDER BY line_1
		
		

	                                line_1           line_2
	0          15VlNsN C2PEmkIqafe0f4YDmTp         Apt. 388
	1       2(R5G202 Hessel Views Apt. 468        Suite 865
	2            202 Hessel Views Apt. 468         0wSNeUbd
	3            202 Hessel Views Apt. 468          Apt. 38
	4            202 Hessel Views Apt. 468        Suite 865
	5            202 Hessel Views Apt. 468    fIoOnApt. 406
	6       202 Hessel Views Apt. 468jwa8A    7RXUSuite 865
	7            2294 Grant Square Apt. 23         Apt. 305
	8            2294 Grant Square Apt. 23         Apt. 406
	9           2294 Grant Square Apt. 235         Apt. 305
	10          2294 Grant Square Apt. 235          Apt. 40
	11          2294 Grant Square Apt. 235         Apt. 406
	12       2u6aS74046 Metz Walk Apt. 113         Apt. 388
	13             4046 Metz Walk Apt. 113    Apt. 406)3G)Q
	14                 492 Wilkinson Route   A0Cw0iaoOpLBbU
	15                 492 Wilkinson Route       Z mxlZCus2
	16                 492 Wilkinson Route         gtMMp0bL
	17                 492 Wilkinson Route         se6Bq29c
	18                 492 Wilkinson Route    x4Hx Apt. 406
	19            492 Wilkinson RouteCbSft       hunq28yUmZ
	20        67942 Carlotta Ferry Apt. 68   DLDApt. 3882v2
	21       67942 Carlotta Ferry Apt. 686         Apt. 388
	22       67942 Carlotta Ferry Apt. 686         Apt. 406
	23       67942 Carlotta Ferry Apt. 686        Suite 865
	24       67942 Carlotta Ferry Apt. 686         uite 865
	25            74046 Metz Walk Apt. 113         Apt. 406
	26            74046 Metz Walk Apt. 113        Suite 865
	27            74046 Metz Walk Apt. 113   Suite 865oNhkO
	28            74046 Metz Walk Apt. 113          pt. 406
	29                  92 Wilkinson Route         Apt. 388
	30      9lHmS202 Hessel Views Apt. 468          XX8jX4p
	31                 B8Q8KeyxfN6zxIIpfA2       1WzAqhRBt5
	32        BbH9Ez5ZEcUTvd0yhd5lf05ABY2S    ickV(Vc30k1T(
	33       KAdaXggUMgBllaVAFKGkQ9niNc3Cg          pt. 305
	34     Sa hb2294 Grant Square Apt. 235    JrBbPApt. 406
	35           Szy492 Wilkinson RouteKH)          pt. 305
	36        TG (N dQ1UF8Ueja9Qz2JdsNFPSV       iJjwlUGgpe
	37       TT20O74046 Metz Walk Apt. 113         Apt. 305
	38      WIm74046 Metz Walk Apt. 113Jck   B1WApt. 406qR 
	39            Xsx5mdMj7ASgcgJCFww09nPP         Apt. 388
	40       Y9Hth74046 Metz Walk Apt. 113         Apt. 406
	41                cZa39vDfx5kQJLyuJCwW         Apt. 388
	42               cZa39vDfx5kQJLyuJCwWn         Apt. 406
	43      d86vH202 Hessel Views Apt. 468         Apt. 406
	44               eEp5wiGy5dEJI4qR5s2Gk         Apt. 406
	45     inC202 Hessel Views Apt. 468Kvr   yuo6KSuite 865
	46            kQuLoSgjBuZ7GFU9TS4gEVEB  gXSUaG6s 0Fi12C
	47           kQuLoSgjBuZ7GFU9TS4gEVEB9          pt. 388
	48     kvW202 Hessel Views Apt. 468Dvc       9jQtxuCN4g
	49      lQz74046 Metz Walk Apt. 113Xqx         Apt. 388
	50             oqZ1I7uG8R02en3jKYX4DH          Apt. 388
	51   rx4YEz0A3uzGg6pBo53LQ(C n5fV1bC2S         Apt. 388
	52  vfykO67942 Carlotta Ferry Apt. 686        Suite 865
	53  x9fmZXBbH9Ez5ZEcUTvd0yhd5lf05ABY2S         Apt. 406
	54  xWnd467942 Carlotta Ferry Apt. 686       ZaFGrDhKjg
	55      ywv74046 Metz Walk Apt. 113UTw        qXDF9 s (
Timeout while getting results...


Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0034_dev (4052)
	EXPECTED OUTPUT ====

		SELECT T1.degree_program_id,
		       T1.degree_summary_name
		FROM Degree_Programs AS T1
		JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id
		GROUP BY T1.degree_program_id
		ORDER BY count(*) DESC
		LIMIT 1

	   degree_program_id degree_summary_name
	0                  2              Master
	ACTUAL OUTPUT ====

		
		SELECT degree_program_id,
		       degree_summary_name
		FROM
		  (SELECT LHS.degree_program_id AS degree_program_id,
		          LHS.department_id AS department_id,
		          LHS.degree_summary_name AS degree_summary_name,
		          LHS.degree_summary_description AS degree_summary_description,
		          LHS.other_details AS other_details,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.degree_program_id AS degree_program_id,
		             LHS.department_id AS department_id,
		             LHS.degree_summary_name AS degree_summary_name,
		             LHS.degree_summary_description AS degree_summary_description,
		             LHS.other_details AS other_details,
		             RHS.n AS n
		      FROM degree_programs AS LHS
		      INNER JOIN
		        (SELECT degree_program_id,
		                COUNT() AS n
		         FROM student_enrolment
		         GROUP BY degree_program_id) AS RHS ON (LHS.degree_program_id = RHS.degree_program_id)) AS LHS
		   INNER JOIN
		     (SELECT MAX(n) AS n
		      FROM
		        (SELECT degree_program_id,
		                COUNT() AS n
		         FROM student_enrolment
		         GROUP BY degree_program_id)) AS RHS ON (LHS.n = RHS.n))
		ORDER BY degree_program_id
		
		

	   degree_program_id degree_summary_name
	0                 -1              Master
	1                  2              Master
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0061_dev (4054)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Transcripts

	   count(*)
	0        16
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM sections)
		ORDER BY count___
		
		

	   count___
	0        12
No solution for instance db2csv/student_transcripts_tracking/0064_dev (4055)
No solution for instance db2csv/student_transcripts_tracking/0043_dev (4056)
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0042_dev (4058)
	EXPECTED OUTPUT ====

	  course_name
	0          la
	ACTUAL OUTPUT ====

		SELECT T1.course_name
		FROM Courses AS T1
		JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
		GROUP BY T1.course_name
		ORDER BY count(*) DESC
		LIMIT 1

	  course_name
	0          rs
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0042_dev (4058)
No solution for instance db2csv/student_transcripts_tracking/0024_dev (4059)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0017_dev (4060)
	EXPECTED OUTPUT ====

		SELECT section_name,
		       section_description
		FROM Sections

	   section_name section_description
	0       01Rku5F                  et
	1             k                  et
	2                           etgsNu4
	3        kLCeSk             etuHdfr
	4       G3gg6Qf             facilis
	5        w4dqag             facilis
	6             g        facilisiKeDQ
	7       F(5eRs4        gGggFfacilis
	8                          providen
	9                         provident
	10      mZ5eYjh      providentH5GmE
	11            e                   t
	ACTUAL OUTPUT ====

		
		SELECT section_name,
		       section_description
		FROM
		  (SELECT *
		   FROM sections AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT other_details
		           FROM sections INTERSECT SELECT other_details
		           FROM sections) AS RHS
		        WHERE (LHS.other_details = RHS.other_details) ))
		ORDER BY section_name
		
		

	Empty DataFrame
	Columns: [section_name, section_description]
	Index: []
No solution for instance db2csv/student_transcripts_tracking/0077_dev (4062)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0066_dev (4063)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       student_course_id
		FROM Transcript_Contents
		GROUP BY student_course_id
		ORDER BY count(*) DESC
		LIMIT 1

	   count(*)  student_course_id
	0         9                  2
	ACTUAL OUTPUT ====

		
		SELECT degree_program_id AS count___,
		       student_course_id
		FROM
		  (SELECT LHS.student_course_id AS student_course_id,
		          LHS.course_id AS course_id,
		          LHS.student_enrolment_id AS student_enrolment_id,
		          LHS.degree_program_id AS degree_program_id,
		          LHS.semester_id AS semester_id,
		          LHS.student_id AS student_id,
		          LHS.other_details AS other_details,
		          RHS.student_course_id AS student_course_id_other
		   FROM
		     (SELECT LHS.student_course_id AS student_course_id,
		             LHS.course_id AS course_id,
		             LHS.student_enrolment_id AS student_enrolment_id,
		             RHS.degree_program_id AS degree_program_id,
		             RHS.semester_id AS semester_id,
		             RHS.student_id AS student_id,
		             RHS.other_details AS other_details
		      FROM student_enrolment_courses AS LHS
		      INNER JOIN student_enrolment AS RHS ON (LHS.student_enrolment_id = RHS.student_enrolment_id)) AS LHS
		   INNER JOIN student_enrolment_courses AS RHS ON (LHS.course_id = RHS.course_id
		                                                      AND LHS.semester_id = RHS.student_enrolment_id))
		ORDER BY count___
		
		

	   count___  student_course_id
	0        -1                  2
	1        13                  0
	2        15           45105805
	3        15           45105807
No solution for instance db2csv/student_transcripts_tracking/0049_dev (4064)
No solution for instance db2csv/student_transcripts_tracking/0026_dev (4065)
Timeout while getting results...


Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0016_dev (4068)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Departments AS T1
		JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id
		WHERE T1.department_name = 'engineer'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `degree_programs` AS `LHS`
		      WHERE EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM `departments`
		              WHERE (`department_name` != 'engineer')) AS RHS
		           WHERE (LHS.department_id = RHS.department_id
		                  AND LHS.other_details = RHS.other_details) )))
		ORDER BY count___
		
		

	   count___
	0         1
No solution for instance db2csv/student_transcripts_tracking/0009_dev (4069)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0002_dev (4070)
	EXPECTED OUTPUT ====

		SELECT line_1,
		       line_2
		FROM addresses

	                                line_1           line_2
	0          15VlNsN C2PEmkIqafe0f4YDmTp         Apt. 388
	1       2(R5G202 Hessel Views Apt. 468        Suite 865
	2            202 Hessel Views Apt. 468         0wSNeUbd
	3            202 Hessel Views Apt. 468          Apt. 38
	4            202 Hessel Views Apt. 468        Suite 865
	5            202 Hessel Views Apt. 468    fIoOnApt. 406
	6       202 Hessel Views Apt. 468jwa8A    7RXUSuite 865
	7            2294 Grant Square Apt. 23         Apt. 305
	8            2294 Grant Square Apt. 23         Apt. 406
	9           2294 Grant Square Apt. 235         Apt. 305
	10          2294 Grant Square Apt. 235          Apt. 40
	11          2294 Grant Square Apt. 235         Apt. 406
	12       2u6aS74046 Metz Walk Apt. 113         Apt. 388
	13             4046 Metz Walk Apt. 113    Apt. 406)3G)Q
	14                 492 Wilkinson Route   A0Cw0iaoOpLBbU
	15                 492 Wilkinson Route       Z mxlZCus2
	16                 492 Wilkinson Route         gtMMp0bL
	17                 492 Wilkinson Route         se6Bq29c
	18                 492 Wilkinson Route    x4Hx Apt. 406
	19            492 Wilkinson RouteCbSft       hunq28yUmZ
	20        67942 Carlotta Ferry Apt. 68   DLDApt. 3882v2
	21       67942 Carlotta Ferry Apt. 686         Apt. 388
	22       67942 Carlotta Ferry Apt. 686         Apt. 388
	23       67942 Carlotta Ferry Apt. 686         Apt. 406
	24       67942 Carlotta Ferry Apt. 686        Suite 865
	25       67942 Carlotta Ferry Apt. 686        Suite 865
	26       67942 Carlotta Ferry Apt. 686         uite 865
	27            74046 Metz Walk Apt. 113         Apt. 406
	28            74046 Metz Walk Apt. 113        Suite 865
	29            74046 Metz Walk Apt. 113   Suite 865oNhkO
	30            74046 Metz Walk Apt. 113          pt. 406
	31                  92 Wilkinson Route         Apt. 388
	32      9lHmS202 Hessel Views Apt. 468          XX8jX4p
	33                 B8Q8KeyxfN6zxIIpfA2       1WzAqhRBt5
	34        BbH9Ez5ZEcUTvd0yhd5lf05ABY2S    ickV(Vc30k1T(
	35       KAdaXggUMgBllaVAFKGkQ9niNc3Cg          pt. 305
	36     Sa hb2294 Grant Square Apt. 235    JrBbPApt. 406
	37           Szy492 Wilkinson RouteKH)          pt. 305
	38        TG (N dQ1UF8Ueja9Qz2JdsNFPSV       iJjwlUGgpe
	39       TT20O74046 Metz Walk Apt. 113         Apt. 305
	40      WIm74046 Metz Walk Apt. 113Jck   B1WApt. 406qR 
	41            Xsx5mdMj7ASgcgJCFww09nPP         Apt. 388
	42       Y9Hth74046 Metz Walk Apt. 113         Apt. 406
	43                cZa39vDfx5kQJLyuJCwW         Apt. 388
	44               cZa39vDfx5kQJLyuJCwWn         Apt. 406
	45      d86vH202 Hessel Views Apt. 468         Apt. 406
	46               eEp5wiGy5dEJI4qR5s2Gk         Apt. 406
	47     inC202 Hessel Views Apt. 468Kvr   yuo6KSuite 865
	48            kQuLoSgjBuZ7GFU9TS4gEVEB  gXSUaG6s 0Fi12C
	49           kQuLoSgjBuZ7GFU9TS4gEVEB9          pt. 388
	50     kvW202 Hessel Views Apt. 468Dvc       9jQtxuCN4g
	51      lQz74046 Metz Walk Apt. 113Xqx         Apt. 388
	52             oqZ1I7uG8R02en3jKYX4DH          Apt. 388
	53   rx4YEz0A3uzGg6pBo53LQ(C n5fV1bC2S         Apt. 388
	54  vfykO67942 Carlotta Ferry Apt. 686        Suite 865
	55  x9fmZXBbH9Ez5ZEcUTvd0yhd5lf05ABY2S         Apt. 406
	56  xWnd467942 Carlotta Ferry Apt. 686       ZaFGrDhKjg
	57      ywv74046 Metz Walk Apt. 113UTw        qXDF9 s (
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT line_1,
		                line_2
		FROM
		  (SELECT LHS.address_id AS address_id,
		          LHS.line_1 AS line_1,
		          LHS.line_2 AS line_2,
		          LHS.line_3 AS line_3,
		          LHS.city AS city,
		          LHS.zip_postcode AS zip_postcode,
		          LHS.state_province_county AS state_province_county,
		          LHS.country AS country,
		          LHS.other_address_details AS other_address_details,
		          LHS.student_id AS student_id,
		          LHS.current_address_id AS current_address_id,
		          LHS.permanent_address_id AS permanent_address_id,
		          LHS.first_name AS first_name,
		          LHS.middle_name AS middle_name,
		          LHS.last_name AS last_name,
		          LHS.cell_mobile_number AS cell_mobile_number,
		          LHS.email_address AS email_address,
		          LHS.ssn AS ssn,
		          LHS.date_first_registered AS date_first_registered,
		          LHS.date_left AS date_left,
		          LHS.other_student_details AS other_student_details,
		          RHS.transcript_id AS transcript_id
		   FROM
		     (SELECT LHS.address_id AS address_id,
		             LHS.line_1 AS line_1,
		             LHS.line_2 AS line_2,
		             LHS.line_3 AS line_3,
		             LHS.city AS city,
		             LHS.zip_postcode AS zip_postcode,
		             LHS.state_province_county AS state_province_county,
		             LHS.country AS country,
		             LHS.other_address_details AS other_address_details,
		             RHS.student_id AS student_id,
		             RHS.current_address_id AS current_address_id,
		             RHS.permanent_address_id AS permanent_address_id,
		             RHS.first_name AS first_name,
		             RHS.middle_name AS middle_name,
		             RHS.last_name AS last_name,
		             RHS.cell_mobile_number AS cell_mobile_number,
		             RHS.email_address AS email_address,
		             RHS.ssn AS ssn,
		             RHS.date_first_registered AS date_first_registered,
		             RHS.date_left AS date_left,
		             RHS.other_student_details AS other_student_details
		      FROM addresses AS LHS
		      CROSS JOIN students AS RHS) AS LHS
		   CROSS JOIN
		     (SELECT transcript_id
		      FROM transcripts INTERSECT SELECT transcript_id
		      FROM transcripts) AS RHS)
		ORDER BY line_1
		
		

	                                line_1           line_2
	0          15VlNsN C2PEmkIqafe0f4YDmTp         Apt. 388
	1       2(R5G202 Hessel Views Apt. 468        Suite 865
	2            202 Hessel Views Apt. 468         0wSNeUbd
	3            202 Hessel Views Apt. 468          Apt. 38
	4            202 Hessel Views Apt. 468        Suite 865
	5            202 Hessel Views Apt. 468    fIoOnApt. 406
	6       202 Hessel Views Apt. 468jwa8A    7RXUSuite 865
	7            2294 Grant Square Apt. 23         Apt. 305
	8            2294 Grant Square Apt. 23         Apt. 406
	9           2294 Grant Square Apt. 235         Apt. 305
	10          2294 Grant Square Apt. 235          Apt. 40
	11          2294 Grant Square Apt. 235         Apt. 406
	12       2u6aS74046 Metz Walk Apt. 113         Apt. 388
	13             4046 Metz Walk Apt. 113    Apt. 406)3G)Q
	14                 492 Wilkinson Route   A0Cw0iaoOpLBbU
	15                 492 Wilkinson Route       Z mxlZCus2
	16                 492 Wilkinson Route         gtMMp0bL
	17                 492 Wilkinson Route         se6Bq29c
	18                 492 Wilkinson Route    x4Hx Apt. 406
	19            492 Wilkinson RouteCbSft       hunq28yUmZ
	20        67942 Carlotta Ferry Apt. 68   DLDApt. 3882v2
	21       67942 Carlotta Ferry Apt. 686         Apt. 388
	22       67942 Carlotta Ferry Apt. 686         Apt. 406
	23       67942 Carlotta Ferry Apt. 686        Suite 865
	24       67942 Carlotta Ferry Apt. 686         uite 865
	25            74046 Metz Walk Apt. 113         Apt. 406
	26            74046 Metz Walk Apt. 113        Suite 865
	27            74046 Metz Walk Apt. 113   Suite 865oNhkO
	28            74046 Metz Walk Apt. 113          pt. 406
	29                  92 Wilkinson Route         Apt. 388
	30      9lHmS202 Hessel Views Apt. 468          XX8jX4p
	31                 B8Q8KeyxfN6zxIIpfA2       1WzAqhRBt5
	32        BbH9Ez5ZEcUTvd0yhd5lf05ABY2S    ickV(Vc30k1T(
	33       KAdaXggUMgBllaVAFKGkQ9niNc3Cg          pt. 305
	34     Sa hb2294 Grant Square Apt. 235    JrBbPApt. 406
	35           Szy492 Wilkinson RouteKH)          pt. 305
	36        TG (N dQ1UF8Ueja9Qz2JdsNFPSV       iJjwlUGgpe
	37       TT20O74046 Metz Walk Apt. 113         Apt. 305
	38      WIm74046 Metz Walk Apt. 113Jck   B1WApt. 406qR 
	39            Xsx5mdMj7ASgcgJCFww09nPP         Apt. 388
	40       Y9Hth74046 Metz Walk Apt. 113         Apt. 406
	41                cZa39vDfx5kQJLyuJCwW         Apt. 388
	42               cZa39vDfx5kQJLyuJCwWn         Apt. 406
	43      d86vH202 Hessel Views Apt. 468         Apt. 406
	44               eEp5wiGy5dEJI4qR5s2Gk         Apt. 406
	45     inC202 Hessel Views Apt. 468Kvr   yuo6KSuite 865
	46            kQuLoSgjBuZ7GFU9TS4gEVEB  gXSUaG6s 0Fi12C
	47           kQuLoSgjBuZ7GFU9TS4gEVEB9          pt. 388
	48     kvW202 Hessel Views Apt. 468Dvc       9jQtxuCN4g
	49      lQz74046 Metz Walk Apt. 113Xqx         Apt. 388
	50             oqZ1I7uG8R02en3jKYX4DH          Apt. 388
	51   rx4YEz0A3uzGg6pBo53LQ(C n5fV1bC2S         Apt. 388
	52  vfykO67942 Carlotta Ferry Apt. 686        Suite 865
	53  x9fmZXBbH9Ez5ZEcUTvd0yhd5lf05ABY2S         Apt. 406
	54  xWnd467942 Carlotta Ferry Apt. 686       ZaFGrDhKjg
	55      ywv74046 Metz Walk Apt. 113UTw        qXDF9 s (
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0065_dev (4071)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       student_course_id
		FROM Transcript_Contents
		GROUP BY student_course_id
		ORDER BY count(*) DESC
		LIMIT 1

	   count(*)  student_course_id
	0         9                  2
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT degree_program_id_other AS count___,
		                student_course_id
		FROM
		  (SELECT LHS.student_course_id AS student_course_id,
		          LHS.course_id AS course_id,
		          LHS.student_enrolment_id AS student_enrolment_id,
		          LHS.student_enrolment_id_other AS student_enrolment_id_other,
		          LHS.degree_program_id AS degree_program_id,
		          LHS.student_id AS student_id,
		          LHS.other_details AS other_details,
		          LHS.semester_id AS semester_id,
		          RHS.degree_program_id AS degree_program_id_other,
		          RHS.student_id AS student_id_other,
		          RHS.other_details AS other_details_other
		   FROM
		     (SELECT student_course_id,
		             course_id,
		             student_enrolment_id,
		             student_enrolment_id_other,
		             degree_program_id,
		             student_id,
		             other_details,
		             student_enrolment_id AS semester_id
		      FROM
		        (SELECT LHS.student_course_id AS student_course_id,
		                LHS.course_id AS course_id,
		                LHS.student_enrolment_id AS student_enrolment_id,
		                RHS.student_enrolment_id AS student_enrolment_id_other,
		                RHS.degree_program_id AS degree_program_id,
		                RHS.student_id AS student_id,
		                RHS.other_details AS other_details
		         FROM student_enrolment_courses AS LHS
		         INNER JOIN student_enrolment AS RHS ON (LHS.student_enrolment_id = RHS.semester_id))) AS LHS
		   INNER JOIN student_enrolment AS RHS ON (LHS.student_enrolment_id = RHS.student_enrolment_id
		                                              AND LHS.semester_id = RHS.semester_id))
		ORDER BY count___
		
		

	   count___  student_course_id
	0        13                  0
No solution for instance db2csv/student_transcripts_tracking/0055_dev (4072)
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0057_dev (4074)
	EXPECTED OUTPUT ====

	   avg_transcript_date_
	0           1989.933333
	ACTUAL OUTPUT ====

		SELECT avg(transcript_date)
		FROM Transcripts

	   avg(transcript_date)
	0           1989.933333
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0057_dev (4074)
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0008_dev (4076)
	EXPECTED OUTPUT ====

	   zip_postcode
	0           148
	ACTUAL OUTPUT ====

		SELECT zip_postcode
		FROM Addresses
		WHERE city = 'Port Chelsea'

	  zip_postcode
	0          148
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0008_dev (4076)
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0041_dev (4077)
	EXPECTED OUTPUT ====

	  course_name
	0          la
	ACTUAL OUTPUT ====

		SELECT T1.course_name
		FROM Courses AS T1
		JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
		GROUP BY T1.course_name
		ORDER BY count(*) DESC
		LIMIT 1

	  course_name
	0          rs
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0041_dev (4077)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0019_dev (4078)
	EXPECTED OUTPUT ====

		SELECT T1.course_name,
		       T1.course_id
		FROM Courses AS T1
		JOIN Sections AS T2 ON T1.course_id = T2.course_id
		GROUP BY T1.course_id
		HAVING count(*) <= 2

	  course_name  course_id
	0          rs          4
	1          oo          5
	2         oop          6
	3         oop          8
	4         oop         10
	5    0kcJnoop         11
	6          op         12
	7     Ekg5uos         13
	8          os         15
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT course_name,
		                course_id
		FROM
		  (SELECT section_id,
		          course_id,
		          section_name,
		          section_description,
		          other_details,
		          course_name,
		          course_description,
		          other_details_other,
		          COUNT(*) OVER () AS n
		   FROM
		     (SELECT LHS.section_id AS section_id,
		             LHS.course_id AS course_id,
		             LHS.section_name AS section_name,
		             LHS.section_description AS section_description,
		             LHS.other_details AS other_details,
		             RHS.course_name AS course_name,
		             RHS.course_description AS course_description,
		             RHS.other_details AS other_details_other
		      FROM sections AS LHS
		      INNER JOIN courses AS RHS ON (LHS.course_id = RHS.course_id)))
		WHERE (n > 2)
		ORDER BY course_name
		
		

	  course_name  course_id
	0          rs          3
	1          rs          4
	2          oo          5
	3         oop          6
	4         oop          8
	5         oop         10
	6    0kcJnoop         11
	7          op         12
	8     Ekg5uos         13
	9          os         15
No solution for instance db2csv/student_transcripts_tracking/0052_dev (4081)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0075_dev (4082)
	EXPECTED OUTPUT ====

		SELECT section_description
		FROM Sections
		WHERE section_name = 'h'

	  section_description
	0        facilisA7Y(m
	ACTUAL OUTPUT ====

		
		SELECT `section_description`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `sections`
		      WHERE (`section_name` = 'h')) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM sections AS RHS
		        WHERE (LHS.other_details = RHS.other_details
		               AND LHS.section_id = RHS.section_id) ))
		ORDER BY section_description
		
		

	Empty DataFrame
	Columns: [section_description]
	Index: []
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0040_dev (4083)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.course_name
		FROM Courses AS T1
		JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id

	  course_name
	0    0kcJnoop
	1    DKUmDoop
	2           d
	3         oop
	4          rs
	ACTUAL OUTPUT ====

		
		SELECT course_name
		FROM
		  (SELECT *
		   FROM courses AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM student_enrolment_courses AS RHS
		        WHERE (LHS.course_id = RHS.course_id) ))
		ORDER BY course_name
		
		

	  course_name
	0    0kcJnoop
	1    DKUmDoop
	2           d
	3         oop
	4          rs
	5          rs
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0069_dev (4085)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.semester_id
		FROM Degree_Programs AS T1
		JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id
		WHERE degree_summary_name = 'Master' INTERSECT
		  SELECT DISTINCT T2.semester_id
		  FROM Degree_Programs AS T1
		  JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Bachelor'

	   semester_id
	0           -1
	1            9
	2           14
	ACTUAL OUTPUT ====

		
		SELECT `department_id` AS `semester_id`
		FROM
		  (SELECT `semester_id`,
		          `semester_name`,
		          `semester_description`,
		          `other_details`,
		          `department_id`,
		          `degree_summary_name`,
		          `degree_summary_description`,
		          `other_details_other`,
		          `semester_id` AS `degree_program_id`
		   FROM
		     (SELECT `LHS`.`semester_id` AS `semester_id`,
		             `LHS`.`semester_name` AS `semester_name`,
		             `LHS`.`semester_description` AS `semester_description`,
		             `LHS`.`other_details` AS `other_details`,
		             `RHS`.`department_id` AS `department_id`,
		             `RHS`.`degree_summary_name` AS `degree_summary_name`,
		             `RHS`.`degree_summary_description` AS `degree_summary_description`,
		             `RHS`.`other_details` AS `other_details_other`
		      FROM `semesters` AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM
		           (SELECT *
		            FROM `degree_programs`
		            WHERE (`degree_summary_name` = 'Master')) AS `LHS`
		         WHERE NOT EXISTS
		             (SELECT 1
		              FROM `student_enrolment` AS `RHS`
		              WHERE (`LHS`.`degree_program_id` = `RHS`.`degree_program_id`) )) AS `RHS` ON (`LHS`.`semester_id` = `RHS`.`degree_program_id`)))
		WHERE (`degree_summary_name` != 'Bachelor')
		ORDER BY semester_id
		
		

	Empty DataFrame
	Columns: [semester_id]
	Index: []
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0068_dev (4087)
	EXPECTED OUTPUT ====

		SELECT T2.transcript_date,
		       T1.transcript_id
		FROM Transcript_Contents AS T1
		JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id
		GROUP BY T1.transcript_id
		ORDER BY count(*) ASC
		LIMIT 1

	       transcript_date  transcript_id
	0  2009-09-05 03:07:54              2
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT transcript_date,
		                transcript_id
		FROM
		  (SELECT LHS.student_course_id AS student_course_id,
		          LHS.transcript_id AS transcript_id,
		          LHS.transcript_date AS transcript_date,
		          LHS.other_details AS other_details,
		          LHS.n AS n,
		          RHS.student_course_id AS student_course_id_other,
		          RHS.transcript_id AS transcript_id_other,
		          RHS.transcript_date AS transcript_date_other,
		          RHS.other_details AS other_details_other
		   FROM
		     (SELECT LHS.student_course_id AS student_course_id,
		             LHS.transcript_id AS transcript_id,
		             LHS.transcript_date AS transcript_date,
		             LHS.other_details AS other_details,
		             RHS.n AS n
		      FROM
		        (SELECT LHS.student_course_id AS student_course_id,
		                LHS.transcript_id AS transcript_id,
		                RHS.transcript_date AS transcript_date,
		                RHS.other_details AS other_details
		         FROM transcript_contents AS LHS
		         INNER JOIN transcripts AS RHS ON (LHS.transcript_id = RHS.transcript_id)) AS LHS
		      INNER JOIN
		        (SELECT transcript_id,
		                COUNT() AS n
		         FROM transcript_contents
		         GROUP BY transcript_id) AS RHS ON (LHS.transcript_id = RHS.transcript_id)) AS LHS
		   INNER JOIN
		     (SELECT LHS.student_course_id AS student_course_id,
		             LHS.transcript_id AS transcript_id,
		             LHS.transcript_date AS transcript_date,
		             LHS.other_details AS other_details,
		             RHS.n AS n
		      FROM
		        (SELECT LHS.student_course_id AS student_course_id,
		                LHS.transcript_id AS transcript_id,
		                RHS.transcript_date AS transcript_date,
		                RHS.other_details AS other_details
		         FROM transcript_contents AS LHS
		         INNER JOIN transcripts AS RHS ON (LHS.transcript_id = RHS.transcript_id)) AS LHS
		      INNER JOIN
		        (SELECT transcript_id,
		                COUNT() AS n
		         FROM transcript_contents
		         GROUP BY transcript_id) AS RHS ON (LHS.transcript_id = RHS.transcript_id)) AS RHS ON (LHS.transcript_id = RHS.n))
		ORDER BY transcript_date
		
		

	       transcript_date  transcript_id
	0  1983-10-13 18:03:49              3
	1  1983-10-13 18:03:49              5
	2  2009-09-05 03:07:54              2
	3  2009-09-05 03:07:54              9
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0076_dev (4088)
	EXPECTED OUTPUT ====

		SELECT section_description
		FROM Sections
		WHERE section_name = 'h'

	  section_description
	0        facilisA7Y(m
	ACTUAL OUTPUT ====

		
		SELECT `section_description`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `sections`
		      WHERE (`section_name` = 'h')) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM sections AS RHS
		        WHERE (LHS.other_details = RHS.other_details
		               AND LHS.section_description = RHS.section_description) ))
		ORDER BY section_description
		
		

	Empty DataFrame
	Columns: [section_description]
	Index: []
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0059_dev (4091)
	EXPECTED OUTPUT ====

		SELECT transcript_date,
		       other_details
		FROM Transcripts
		ORDER BY transcript_date ASC
		LIMIT 1

	       transcript_date other_details
	0  1983-10-13 18:03:49          iufB
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT mintranscript_date AS transcript_date,
		                other_details
		FROM
		  (SELECT *
		   FROM
		     (SELECT transcript_id,
		             transcript_date,
		             other_details,
		             MIN(transcript_date) OVER () AS mintranscript_date
		      FROM transcripts) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM transcript_contents AS RHS
		        WHERE (LHS.transcript_id = RHS.transcript_id) ))
		ORDER BY transcript_date
		
		

	       transcript_date   other_details
	0  1983-10-13 18:03:49  NM7rc42S2UBIA6
No solution for instance db2csv/student_transcripts_tracking/0051_dev (4092)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0031_dev (4096)
	EXPECTED OUTPUT ====

		SELECT T1.degree_summary_name
		FROM Degree_Programs AS T1
		JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id
		GROUP BY T1.degree_summary_name
		ORDER BY count(*) DESC
		LIMIT 1

	  degree_summary_name
	0              Master
	ACTUAL OUTPUT ====

		
		SELECT degree_summary_name
		FROM
		  (SELECT degree_program_id AS student_enrolment_id,
		          degree_program_id,
		          semester_id,
		          student_id,
		          other_details,
		          department_id,
		          degree_summary_name,
		          degree_summary_description,
		          other_details_other,
		          student_course_id
		   FROM
		     (SELECT LHS.student_enrolment_id AS student_enrolment_id,
		             LHS.degree_program_id AS degree_program_id,
		             LHS.semester_id AS semester_id,
		             LHS.student_id AS student_id,
		             LHS.other_details AS other_details,
		             LHS.department_id AS department_id,
		             LHS.degree_summary_name AS degree_summary_name,
		             LHS.degree_summary_description AS degree_summary_description,
		             LHS.other_details_other AS other_details_other,
		             RHS.student_course_id AS student_course_id
		      FROM
		        (SELECT LHS.student_enrolment_id AS student_enrolment_id,
		                LHS.degree_program_id AS degree_program_id,
		                LHS.semester_id AS semester_id,
		                LHS.student_id AS student_id,
		                LHS.other_details AS other_details,
		                RHS.department_id AS department_id,
		                RHS.degree_summary_name AS degree_summary_name,
		                RHS.degree_summary_description AS degree_summary_description,
		                RHS.other_details AS other_details_other
		         FROM student_enrolment AS LHS
		         INNER JOIN degree_programs AS RHS ON (LHS.degree_program_id = RHS.degree_program_id)) AS LHS
		      INNER JOIN student_enrolment_courses AS RHS ON (LHS.degree_program_id = RHS.student_enrolment_id
		                                                         AND LHS.student_enrolment_id = RHS.course_id)))
		ORDER BY degree_summary_name
		
		

	Empty DataFrame
	Columns: [degree_summary_name]
	Index: []
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0007_dev (4098)
	EXPECTED OUTPUT ====

	   zip_postcode
	0           148
	ACTUAL OUTPUT ====

		SELECT zip_postcode
		FROM Addresses
		WHERE city = 'Port Chelsea'

	  zip_postcode
	0          148
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0007_dev (4098)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0015_dev (4099)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Departments AS T1
		JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id
		WHERE T1.department_name = 'engineer'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `department_name`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`degree_program_id` AS `degree_program_id`,
		                `LHS`.`department_id` AS `department_id`,
		                `LHS`.`degree_summary_name` AS `degree_summary_name`,
		                `LHS`.`degree_summary_description` AS `degree_summary_description`,
		                `LHS`.`other_details` AS `other_details`,
		                `RHS`.`department_name` AS `department_name`,
		                `RHS`.`department_description` AS `department_description`
		         FROM `degree_programs` AS `LHS`
		         INNER JOIN `departments` AS `RHS` ON (`LHS`.`department_id` = `RHS`.`department_id`
		                                                  AND `LHS`.`other_details` = `RHS`.`other_details`))
		      WHERE (`department_name` != 'engineer')))
		ORDER BY count___
		
		

	   count___
	0         1
No solution for instance db2csv/student_transcripts_tracking/0010_dev (4100)
No solution for instance db2csv/student_transcripts_tracking/0044_dev (4101)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0067_dev (4102)
	EXPECTED OUTPUT ====

		SELECT T2.transcript_date,
		       T1.transcript_id
		FROM Transcript_Contents AS T1
		JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id
		GROUP BY T1.transcript_id
		ORDER BY count(*) ASC
		LIMIT 1

	       transcript_date  transcript_id
	0  2009-09-05 03:07:54              2
	ACTUAL OUTPUT ====

		
		SELECT transcript_date,
		       transcript_id
		FROM
		  (SELECT *
		   FROM transcripts AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT student_course_id,
		                  transcript_id,
		                  transcript_id_other,
		                  transcript_id AS n
		           FROM
		             (SELECT LHS.student_course_id AS student_course_id,
		                     LHS.transcript_id AS transcript_id,
		                     RHS.transcript_id AS transcript_id_other
		              FROM transcript_contents AS LHS
		              INNER JOIN
		                (SELECT transcript_id,
		                        COUNT() AS n
		                 FROM transcript_contents
		                 GROUP BY transcript_id) AS RHS ON (LHS.transcript_id = RHS.n))) AS RHS
		        WHERE (LHS.transcript_id = RHS.transcript_id) ))
		ORDER BY transcript_date
		
		

	       transcript_date  transcript_id
	0  1983-10-13 18:03:49              3
	1  1983-10-13 18:03:49              5
	2  2009-09-05 03:07:54              2
	3  2009-09-05 03:07:54              9
No solution for instance db2csv/student_transcripts_tracking/0056_dev (4103)
No solution for instance db2csv/student_transcripts_tracking/0025_dev (4105)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0070_dev (4106)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.semester_id
		FROM Degree_Programs AS T1
		JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id
		WHERE degree_summary_name = 'Master' INTERSECT
		  SELECT DISTINCT T2.semester_id
		  FROM Degree_Programs AS T1
		  JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Bachelor'

	   semester_id
	0           -1
	1            9
	2           14
	ACTUAL OUTPUT ====

		
		SELECT `department_id` AS `semester_id`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM
		           (SELECT *
		            FROM `degree_programs`
		            WHERE (`degree_summary_name` = 'Master')) AS `LHS`
		         WHERE NOT EXISTS
		             (SELECT 1
		              FROM `student_enrolment` AS `RHS`
		              WHERE (`LHS`.`degree_program_id` = `RHS`.`degree_program_id`) ))
		      WHERE (`degree_summary_name` != 'Bachelor')) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM semesters AS RHS
		        WHERE (LHS.other_details = RHS.other_details) ))
		ORDER BY semester_id
		
		

	Empty DataFrame
	Columns: [semester_id]
	Index: []
No solution for instance db2csv/student_transcripts_tracking/0023_dev (4107)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0050_dev (4108)
	EXPECTED OUTPUT ====

		SELECT first_name,
		       middle_name,
		       last_name
		FROM Students
		ORDER BY date_first_registered ASC
		LIMIT 1

	  first_name middle_name  last_name
	0     Jarvis        Judd  Jaskolski
	ACTUAL OUTPUT ====

		
		SELECT first_name,
		       middle_name,
		       last_name
		FROM
		  (SELECT LHS.student_enrolment_id AS student_enrolment_id,
		          LHS.degree_program_id AS degree_program_id,
		          LHS.semester_id AS semester_id,
		          LHS.student_id AS student_id,
		          LHS.other_details AS other_details,
		          LHS.current_address_id AS current_address_id,
		          LHS.permanent_address_id AS permanent_address_id,
		          LHS.first_name AS first_name,
		          LHS.middle_name AS middle_name,
		          LHS.last_name AS last_name,
		          LHS.cell_mobile_number AS cell_mobile_number,
		          LHS.email_address AS email_address,
		          LHS.ssn AS ssn,
		          LHS.date_first_registered AS date_first_registered,
		          LHS.date_left AS date_left,
		          LHS.other_student_details AS other_student_details,
		          RHS.mindate_first_registered AS mindate_first_registered
		   FROM
		     (SELECT LHS.student_enrolment_id AS student_enrolment_id,
		             LHS.degree_program_id AS degree_program_id,
		             LHS.semester_id AS semester_id,
		             LHS.student_id AS student_id,
		             LHS.other_details AS other_details,
		             RHS.current_address_id AS current_address_id,
		             RHS.permanent_address_id AS permanent_address_id,
		             RHS.first_name AS first_name,
		             RHS.middle_name AS middle_name,
		             RHS.last_name AS last_name,
		             RHS.cell_mobile_number AS cell_mobile_number,
		             RHS.email_address AS email_address,
		             RHS.ssn AS ssn,
		             RHS.date_first_registered AS date_first_registered,
		             RHS.date_left AS date_left,
		             RHS.other_student_details AS other_student_details
		      FROM student_enrolment AS LHS
		      INNER JOIN students AS RHS ON (LHS.student_id = RHS.student_id)) AS LHS
		   INNER JOIN
		     (SELECT student_id,
		             current_address_id,
		             permanent_address_id,
		             first_name,
		             middle_name,
		             last_name,
		             cell_mobile_number,
		             email_address,
		             ssn,
		             date_first_registered,
		             date_left,
		             other_student_details,
		             MIN(date_first_registered) OVER () AS mindate_first_registered
		      FROM students) AS RHS ON (LHS.student_id = RHS.student_id
		                                   AND LHS.current_address_id = RHS.current_address_id
		                                   AND LHS.permanent_address_id = RHS.permanent_address_id
		                                   AND LHS.first_name = RHS.first_name
		                                   AND LHS.middle_name = RHS.middle_name
		                                   AND LHS.last_name = RHS.last_name
		                                   AND LHS.cell_mobile_number = RHS.cell_mobile_number
		                                   AND LHS.email_address = RHS.email_address
		                                   AND LHS.ssn = RHS.ssn
		                                   AND LHS.date_first_registered = RHS.date_first_registered
		                                   AND LHS.date_left = RHS.date_left
		                                   AND LHS.other_student_details = RHS.other_student_details))
		WHERE (mindate_first_registered = date_first_registered)
		ORDER BY first_name
		
		

	Empty DataFrame
	Columns: [first_name, middle_name, last_name]
	Index: []
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0032_dev (4110)
	EXPECTED OUTPUT ====

		SELECT T1.degree_summary_name
		FROM Degree_Programs AS T1
		JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id
		GROUP BY T1.degree_summary_name
		ORDER BY count(*) DESC
		LIMIT 1

	  degree_summary_name
	0              Master
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT degree_summary_name
		FROM
		  (SELECT LHS.degree_program_id AS degree_program_id,
		          LHS.department_id AS department_id,
		          LHS.degree_summary_name AS degree_summary_name,
		          LHS.degree_summary_description AS degree_summary_description,
		          LHS.other_details AS other_details,
		          RHS.degree_summary_name AS degree_summary_name_other
		   FROM
		     (SELECT *
		      FROM degree_programs AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM student_enrolment AS RHS
		           WHERE (LHS.degree_program_id = RHS.degree_program_id) )) AS LHS
		   INNER JOIN
		     (SELECT degree_summary_name,
		             COUNT() AS n
		      FROM degree_programs
		      GROUP BY degree_summary_name) AS RHS ON (LHS.degree_program_id = RHS.n))
		ORDER BY degree_summary_name
		
		

	  degree_summary_name
	0            Bachelor
No solution for instance db2csv/pets_1/0027_dev (4111)
Wrong output for fuzzied solution in instance db2csv/pets_1/0021_dev (4112)
	EXPECTED OUTPUT ====

		SELECT T1.fname,
		       T1.age
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		JOIN pets AS T3 ON T3.petid = T2.petid
		WHERE T3.pettype = 'dog'
		  AND T1.stuid NOT IN
		    (SELECT T1.stuid
		     FROM student AS T1
		     JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		     JOIN pets AS T3 ON T3.petid = T2.petid
		     WHERE T3.pettype = 'cat')

	         fname  age
	0        Bruce   17
	1        Bruce   17
	2        Bruce   17
	3        Bruce   17
	4     b34wAIan   17
	5     b34wAIan   17
	6     b34wAIan   17
	7     b34wAIan   17
	8        Steve   19
	9        Steve   19
	10       Steve   19
	11       Steve   19
	12        Bruc   25
	13        Bruc   25
	14        Bruc   25
	15       David   25
	16  5RX3(Bruce   29
	17  5RX3(Bruce   29
	ACTUAL OUTPUT ====

		
		SELECT `fname`,
		       `age`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`petid` AS `petid`,
		          `RHS`.`pettype` AS `pettype`,
		          `RHS`.`pet_age` AS `pet_age`,
		          `RHS`.`weight` AS `weight`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `RHS`.`petid` AS `petid`
		      FROM `student` AS `LHS`
		      INNER JOIN `has_pet` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `pets`
		      WHERE (`pettype` = 'dog')) AS `RHS` ON (`LHS`.`petid` = `RHS`.`petid`))
		WHERE (`pettype` != 'cat')
		ORDER BY fname
		
		

	           fname  age
	0             Ia   16
	1             Ia   16
	2             Ia   16
	3             Ia   16
	4       6wChvIan   17
	5       6wChvIan   17
	6          Bruce   17
	7          Bruce   17
	8          Bruce   17
	9          Bruce   17
	10         Bruce   17
	11         Bruce   17
	12         Bruce   17
	13         Bruce   17
	14         Bruce   17
	15         Bruce   17
	16         Bruce   17
	17      b34wAIan   17
	18      b34wAIan   17
	19      b34wAIan   17
	20      b34wAIan   17
	21            Ia   18
	22            Ia   18
	23            Ia   18
	24            Ia   18
	25        Steven   18
	26        Steven   18
	27        Steven   18
	28        Steven   18
	29        Steven   18
	30        Steven   18
	31  Michaelg2JVj   19
	32  Michaelg2JVj   19
	33  Michaelg2JVj   19
	34  Michaelg2JVj   19
	35         Steve   19
	36         Steve   19
	37         Steve   19
	38         Steve   19
	39         Bruce   20
	40         Bruce   20
	41         Bruce   20
	42          ruce   20
	43          ruce   20
	44          ruce   20
	45         teven   20
	46         teven   20
	47         teven   20
	48         teven   20
	49          Bruc   25
	50          Bruc   25
	51          Bruc   25
	52         David   25
	53         David   25
	54    5RX3(Bruce   29
	55    5RX3(Bruce   29
Wrong output for fuzzied solution in instance db2csv/pets_1/0039_dev (4115)
	EXPECTED OUTPUT ====

		SELECT T1.lname
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		JOIN pets AS T3 ON T3.petid = T2.petid
		WHERE T3.pet_age = 3
		  AND T3.pettype = 'cat'

	Empty DataFrame
	Columns: [lname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `lname`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`petid` AS `petid`,
		          `RHS`.`pettype` AS `pettype`,
		          `RHS`.`pet_age` AS `pet_age`,
		          `RHS`.`weight` AS `weight`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `RHS`.`petid` AS `petid`
		      FROM `student` AS `LHS`
		      INNER JOIN `has_pet` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `pets`
		      WHERE (`pettype` = 'cat')) AS RHS ON (LHS.petid = RHS.petid))
		WHERE (age != 3)
		ORDER BY lname
		
		

	            lname
	0             Han
	1             Han
	2             Han
	3              Ki
	4             Kim
	5             Kim
	6         Thornto
	7         Thornto
	8         Thornto
	9         Thornto
	10        Thornto
	11        Thornto
	12       Thornton
	13       Thornton
	14       Thornton
	15       Thornton
	16       Thornton
	17       Thornton
	18       Thornton
	19       Thornton
	20       Thornton
	21  ThorntonUfKyX
	22  ThorntonUfKyX
	23  Thorntongts2y
	24  ThorntonhT2eT
	25  ThorntonhT2eT
	26  ThorntonhT2eT
	27      UXmKim7ZP
	28      UXmKim7ZP
	29      XKyHan0fe
Wrong output for base solution in instance db2csv/pets_1/0029_dev (4116)
	EXPECTED OUTPUT ====

	   avg_weight_ pettype
	0        11.35     dog
	1        12.00     cat
	ACTUAL OUTPUT ====

		SELECT avg(weight),
		       pettype
		FROM pets
		GROUP BY pettype

	   avg(weight) pettype
	0        12.00     cat
	1        11.35     dog
Wrong output for ground truth in instance db2csv/pets_1/0029_dev (4116)
Wrong output for fuzzied solution in instance db2csv/pets_1/0037_dev (4117)
	EXPECTED OUTPUT ====

		SELECT T1.fname,
		       T1.sex
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		GROUP BY T1.stuid
		HAVING count(*) > 1

	           fname      sex
	0          Bruce   v6fImM
	1            Ian   z6 NvF
	2     Ofqe3Bruce        M
	3         Steven         
	4         Steven        M
	5         Steven  X1ZFRi(
	6       Y8nq4Ian        M
	7  lGPMichaelkMe        M
	8          teven         
	ACTUAL OUTPUT ====

		
		SELECT fname,
		       sex
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM student AS LHS
		         WHERE EXISTS
		             (SELECT 1
		              FROM
		                (SELECT stuid,
		                        petid,
		                        COUNT(*) OVER () AS n
		                 FROM has_pet) AS RHS
		              WHERE (LHS.stuid = RHS.stuid) ))
		      ORDER BY lname)
		   LIMIT 1)
		
		

	   fname     sex
	0  Bruce  v6fImM
Wrong output for fuzzied solution in instance db2csv/pets_1/0038_dev (4119)
	EXPECTED OUTPUT ====

		SELECT T1.fname,
		       T1.sex
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		GROUP BY T1.stuid
		HAVING count(*) > 1

	           fname      sex
	0          Bruce   v6fImM
	1            Ian   z6 NvF
	2     Ofqe3Bruce        M
	3         Steven         
	4         Steven        M
	5         Steven  X1ZFRi(
	6       Y8nq4Ian        M
	7  lGPMichaelkMe        M
	8          teven         
	ACTUAL OUTPUT ====

		
		SELECT fname,
		       sex
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT stuid,
		                lname,
		                fname,
		                age,
		                sex,
		                major,
		                advisor,
		                city_code,
		                petid,
		                COUNT(*) OVER () AS n
		         FROM
		           (SELECT LHS.stuid AS stuid,
		                   LHS.lname AS lname,
		                   LHS.fname AS fname,
		                   LHS.age AS age,
		                   LHS.sex AS sex,
		                   LHS.major AS major,
		                   LHS.advisor AS advisor,
		                   LHS.city_code AS city_code,
		                   RHS.petid AS petid
		            FROM student AS LHS
		            INNER JOIN has_pet AS RHS ON (LHS.stuid = RHS.stuid)))
		      ORDER BY age DESC)
		   LIMIT 1)
		
		

	           fname sex
	0  lGPMichaelkMe   M
Wrong output for fuzzied solution in instance db2csv/pets_1/0003_dev (4121)
	EXPECTED OUTPUT ====

		SELECT weight
		FROM pets
		ORDER BY pet_age
		LIMIT 1

	   weight
	0   12.02
	ACTUAL OUTPUT ====

		
		SELECT weight
		FROM
		  (SELECT MIN(weight) AS weight
		   FROM pets)
		ORDER BY weight
		
		

	   weight
	0   11.98
No solution for instance db2csv/pets_1/0001_dev (4122)
Wrong output for fuzzied solution in instance db2csv/pets_1/0024_dev (4126)
	EXPECTED OUTPUT ====

		SELECT pettype,
		       weight
		FROM pets
		ORDER BY pet_age
		LIMIT 1

	  pettype  weight
	0      ca    9.28
	ACTUAL OUTPUT ====

		
		SELECT pettype,
		       weight
		FROM
		  (SELECT *
		   FROM pets AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT MIN(pet_age) AS pet_age
		           FROM pets) AS RHS
		        WHERE (LHS.pet_age = RHS.pet_age) ))
		ORDER BY pettype
		
		

	  pettype  weight
	0      ca    9.28
	1      ca   13.39
Wrong output for fuzzied solution in instance db2csv/pets_1/0026_dev (4128)
	EXPECTED OUTPUT ====

		SELECT petid,
		       weight
		FROM pets
		WHERE pet_age > 1

	   petid  weight
	0   2002   11.99
	ACTUAL OUTPUT ====

		
		SELECT petid,
		       weight
		FROM pets
		WHERE (pet_age != 1)
		ORDER BY petid
		
		

	   petid  weight
	0   1999   13.40
	1   2000   12.01
	2   2002   11.99
	3   2004   12.01
No solution for instance db2csv/pets_1/0016_dev (4130)
No solution for instance db2csv/pets_1/0009_dev (4131)
No solution for instance db2csv/pets_1/0002_dev (4132)
Wrong output for fuzzied solution in instance db2csv/pets_1/0008_dev (4133)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		WHERE T1.age > 20

	   count(*)
	0        20
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT petid) AS n_distinct
		   FROM
		     (SELECT *
		      FROM has_pet
		      WHERE (petid <= 20)))
		ORDER BY count___
		
		

	   count___
	0         0
No solution for instance db2csv/pets_1/0040_dev (4137)
Wrong output for fuzzied solution in instance db2csv/pets_1/0004_dev (4138)
	EXPECTED OUTPUT ====

		SELECT weight
		FROM pets
		ORDER BY pet_age
		LIMIT 1

	   weight
	0   12.02
	ACTUAL OUTPUT ====

		
		SELECT weight
		FROM
		  (SELECT MIN(weight) AS weight
		   FROM pets)
		ORDER BY weight
		
		

	   weight
	0   11.98
Wrong output for base solution in instance db2csv/pets_1/0030_dev (4139)
	EXPECTED OUTPUT ====

	   avg_weight_ pettype
	0        11.35     dog
	1        12.00     cat
	ACTUAL OUTPUT ====

		SELECT avg(weight),
		       pettype
		FROM pets
		GROUP BY pettype

	   avg(weight) pettype
	0        12.00     cat
	1        11.35     dog
Wrong output for ground truth in instance db2csv/pets_1/0030_dev (4139)
No solution for instance db2csv/pets_1/0028_dev (4140)
Wrong output for fuzzied solution in instance db2csv/pets_1/0022_dev (4141)
	EXPECTED OUTPUT ====

		SELECT T1.fname,
		       T1.age
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		JOIN pets AS T3 ON T3.petid = T2.petid
		WHERE T3.pettype = 'dog'
		  AND T1.stuid NOT IN
		    (SELECT T1.stuid
		     FROM student AS T1
		     JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		     JOIN pets AS T3 ON T3.petid = T2.petid
		     WHERE T3.pettype = 'cat')

	         fname  age
	0        Bruce   17
	1        Bruce   17
	2        Bruce   17
	3        Bruce   17
	4     b34wAIan   17
	5     b34wAIan   17
	6     b34wAIan   17
	7     b34wAIan   17
	8        Steve   19
	9        Steve   19
	10       Steve   19
	11       Steve   19
	12        Bruc   25
	13        Bruc   25
	14        Bruc   25
	15       David   25
	16  5RX3(Bruce   29
	17  5RX3(Bruce   29
	ACTUAL OUTPUT ====

		
		SELECT `fname`,
		       `age`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`petid` AS `petid`,
		          `RHS`.`pettype` AS `pettype`,
		          `RHS`.`pet_age` AS `pet_age`,
		          `RHS`.`weight` AS `weight`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `RHS`.`petid` AS `petid`
		      FROM `student` AS `LHS`
		      INNER JOIN `has_pet` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`
		   INNER JOIN
		     (SELECT `LHS`.`petid` AS `petid`,
		             `LHS`.`pettype` AS `pettype`,
		             `LHS`.`pet_age` AS `pet_age`,
		             `LHS`.`weight` AS `weight`,
		             `LHS`.`stuid` AS `stuid`
		      FROM
		        (SELECT `LHS`.`petid` AS `petid`,
		                `LHS`.`pettype` AS `pettype`,
		                `LHS`.`pet_age` AS `pet_age`,
		                `LHS`.`weight` AS `weight`,
		                `RHS`.`stuid` AS `stuid`
		         FROM `pets` AS `LHS`
		         INNER JOIN `has_pet` AS `RHS` ON (`LHS`.`petid` = `RHS`.`petid`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `pets`
		         WHERE (`pettype` = 'dog')) AS `RHS` ON (`LHS`.`petid` = `RHS`.`petid`
		                                                 AND `LHS`.`pettype` = `RHS`.`pettype`
		                                                 AND `LHS`.`pet_age` = `RHS`.`pet_age`
		                                                 AND `LHS`.`weight` = `RHS`.`weight`)) AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                                                                                    AND `LHS`.`petid` = `RHS`.`petid`))
		WHERE (`pettype` != 'cat')
		ORDER BY fname
		
		

	          fname  age
	0            Ia   16
	1            Ia   16
	2            Ia   16
	3            Ia   16
	4            Ia   16
	..          ...  ...
	133       David   25
	134  5RX3(Bruce   29
	135  5RX3(Bruce   29
	136  5RX3(Bruce   29
	137  5RX3(Bruce   29
	
	[138 rows x 2 columns]
Wrong output for fuzzied solution in instance db2csv/pets_1/0013_dev (4142)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.Fname
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		JOIN pets AS T3 ON T3.petid = T2.petid
		WHERE T3.pettype = 'cat'
		  OR T3.pettype = 'dog'

	           fname
	0     5RX3(Bruce
	1       6wChvIan
	2           Bruc
	3          Bruce
	4          David
	5             Ia
	6   Michaelg2JVj
	7          Steve
	8         Steven
	9       b34wAIan
	10          ruce
	11         teven
	ACTUAL OUTPUT ====

		
		SELECT `fname`
		FROM
		  (SELECT *
		   FROM `student` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `has_pet` AS `LHS`
		           WHERE NOT EXISTS
		               (SELECT 1
		                FROM
		                  (SELECT *
		                   FROM
		                     (SELECT *
		                      FROM `pets`
		                      WHERE (`pettype` = 'cat'))
		                   WHERE (`pettype` = 'dog')) AS RHS
		                WHERE (LHS.petid = RHS.petid) )) AS RHS
		        WHERE (LHS.stuid = RHS.stuid) ))
		ORDER BY fname
		
		

	           fname
	0     5RX3(Bruce
	1       6wChvIan
	2           Bruc
	3          Bruce
	4          Bruce
	5          Bruce
	6          Bruce
	7          David
	8          David
	9             Ia
	10            Ia
	11  Michaelg2JVj
	12         Steve
	13        Steven
	14      b34wAIan
	15          ruce
	16         teven
Wrong output for fuzzied solution in instance db2csv/pets_1/0014_dev (4143)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.Fname
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		JOIN pets AS T3 ON T3.petid = T2.petid
		WHERE T3.pettype = 'cat'
		  OR T3.pettype = 'dog'

	           fname
	0          4sU7r
	1       1)vIDW3w
	2    1QsC(Dinesh
	3            And
	4           Andy
	5          Arthu
	6         Arthur
	7    Arthurbk7NL
	8    ArthurjoFbw
	9         Dinesh
	10          FwxF
	11  KORRHMichael
	12           NLK
	13          NLKl
	14    PtXAndyF((
	15          Stac
	16         Stacy
	17  VRyDineshfIo
	18   hmY rArthur
	19           ndy
	20         rthur
	21          tacy
	22   uuplpArthur
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `fname`
		FROM
		  (SELECT `LHS`.`petid` AS `petid`,
		          `LHS`.`pettype` AS `pettype`,
		          `LHS`.`pet_age` AS `pet_age`,
		          `LHS`.`weight` AS `weight`,
		          `RHS`.`stuid` AS `stuid`,
		          `RHS`.`lname` AS `lname`,
		          `RHS`.`fname` AS `fname`,
		          `RHS`.`age` AS `age`,
		          `RHS`.`sex` AS `sex`,
		          `RHS`.`major` AS `major`,
		          `RHS`.`advisor` AS `advisor`,
		          `RHS`.`city_code` AS `city_code`
		   FROM
		     (SELECT *
		      FROM `pets`
		      WHERE (`pettype` = 'dog')) AS `LHS`
		   CROSS JOIN
		     (SELECT *
		      FROM `student` AS `LHS`
		      WHERE EXISTS
		          (SELECT 1
		           FROM `has_pet` AS `RHS`
		           WHERE (`LHS`.`stuid` = `RHS`.`stuid`) )) AS `RHS`)
		WHERE (`pettype` != 'cat')
		ORDER BY fname
		
		

	            fname
	0           4sU7r
	1        1)vIDW3w
	2     1QsC(Dinesh
	3   9nLMichaelTnY
	4             And
	5            Andy
	6           Arthu
	7          Arthur
	8     Arthurbk7NL
	9     ArthurjoFbw
	10         Dinesh
	11           FwxF
	12   KORRHMichael
	13         Michae
	14            NLK
	15           NLKl
	16     PtXAndyF((
	17           Stac
	18          Stacy
	19  UPXMichaelZR8
	20   VRyDineshfIo
	21       Y  4sU7r
	22    hmY rArthur
	23   ksF37Michael
	24            ndy
	25          rthur
	26           tacy
	27    tlgseDinesh
	28    uuplpArthur
Wrong output for fuzzied solution in instance db2csv/pets_1/0031_dev (4144)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.fname,
		                T1.age
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid

	           fname  age
	0            Ian   17
	1           Lisa   17
	2        Michael   17
	3   MichaelUrEXP   17
	4          Sarah   17
	5            isa   17
	6      6u9VGLisa   18
	7         Dinesh   18
	8            isa   18
	9            Ian   19
	10  Michaeli42lo   19
	11       Michael   20
	12    aB1B4Sarah   20
	13           Ian   25
	14           Ian   27
	ACTUAL OUTPUT ====

		
		SELECT fname,
		       age
		FROM
		  (SELECT LHS.stuid AS stuid,
		          LHS.lname AS lname,
		          LHS.fname AS fname,
		          LHS.age AS age,
		          LHS.sex AS sex,
		          LHS.major AS major,
		          LHS.advisor AS advisor,
		          LHS.city_code AS city_code
		   FROM student AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM student AS LHS
		      WHERE EXISTS
		          (SELECT 1
		           FROM has_pet AS RHS
		           WHERE (LHS.stuid = RHS.stuid) )) AS RHS ON (LHS.stuid = RHS.stuid
		                                                       AND LHS.lname = RHS.lname
		                                                       AND LHS.fname = RHS.fname
		                                                       AND LHS.age = RHS.age
		                                                       AND LHS.sex = RHS.sex
		                                                       AND LHS.major = RHS.major
		                                                       AND LHS.advisor = RHS.advisor
		                                                       AND LHS.city_code = RHS.city_code))
		ORDER BY fname
		
		

	           fname  age
	0            Ian   17
	1           Lisa   17
	2           Lisa   17
	3        Michael   17
	4        Michael   17
	5   MichaelUrEXP   17
	6          Sarah   17
	7            isa   17
	8      6u9VGLisa   18
	9         Dinesh   18
	10           isa   18
	11           Ian   19
	12  Michaeli42lo   19
	13       Michael   20
	14    aB1B4Sarah   20
	15           Ian   25
	16           Ian   27
Wrong output for fuzzied solution in instance db2csv/pets_1/0007_dev (4145)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		WHERE T1.age > 20

	   count(*)
	0        20
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT petid) AS n_distinct
		   FROM
		     (SELECT *
		      FROM has_pet
		      WHERE (petid <= 20)))
		ORDER BY count___
		
		

	   count___
	0         0
No solution for instance db2csv/pets_1/0015_dev (4146)
Wrong output for fuzzied solution in instance db2csv/pets_1/0020_dev (4148)
	EXPECTED OUTPUT ====

		SELECT stuid
		FROM student
		EXCEPT
		SELECT T1.stuid
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		JOIN pets AS T3 ON T3.petid = T2.petid
		WHERE T3.pettype = 'cat'

	    stuid
	0    1014
	1    1015
	2    1017
	3    1018
	4    1019
	5    1020
	6    1021
	7    1022
	8    1023
	9    1026
	10   1027
	11   1028
	12   1029
	ACTUAL OUTPUT ====

		
		SELECT `stuid`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`petid` AS `petid`,
		                `LHS`.`pettype` AS `pettype`,
		                `LHS`.`pet_age` AS `pet_age`,
		                `LHS`.`weight` AS `weight`,
		                `RHS`.`stuid` AS `stuid`,
		                `RHS`.`lname` AS `lname`,
		                `RHS`.`fname` AS `fname`,
		                `RHS`.`age` AS `age`,
		                `RHS`.`sex` AS `sex`,
		                `RHS`.`major` AS `major`,
		                `RHS`.`advisor` AS `advisor`,
		                `RHS`.`city_code` AS `city_code`
		         FROM `pets` AS `LHS`
		         CROSS JOIN `student` AS `RHS`)
		      WHERE (`pettype` = 'cat')) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM has_pet AS RHS
		        WHERE (LHS.petid = RHS.petid
		               AND LHS.stuid = RHS.stuid) ))
		ORDER BY stuid
		
		

	Empty DataFrame
	Columns: [stuid]
	Index: []
Wrong output for fuzzied solution in instance db2csv/pets_1/0025_dev (4149)
	EXPECTED OUTPUT ====

		SELECT petid,
		       weight
		FROM pets
		WHERE pet_age > 1

	   petid  weight
	0   2002   11.99
	ACTUAL OUTPUT ====

		
		SELECT petid,
		       weight
		FROM
		  (SELECT *
		   FROM pets AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM has_pet AS RHS
		        WHERE (LHS.petid = RHS.petid) ))
		WHERE (pet_age != 1)
		ORDER BY petid
		
		

	   petid  weight
	0   1999   13.40
	1   2000   12.01
	2   2002   11.99
	3   2004   12.01
Wrong output for fuzzied solution in instance db2csv/pets_1/0023_dev (4150)
	EXPECTED OUTPUT ====

		SELECT pettype,
		       weight
		FROM pets
		ORDER BY pet_age
		LIMIT 1

	  pettype  weight
	0      ca    9.28
	ACTUAL OUTPUT ====

		
		SELECT pettype,
		       weight
		FROM
		  (SELECT LHS.petid AS petid,
		          LHS.pettype AS pettype,
		          LHS.pet_age AS pet_age,
		          LHS.weight AS weight
		   FROM pets AS LHS
		   INNER JOIN
		     (SELECT MIN(pet_age) AS pet_age
		      FROM pets) AS RHS ON (LHS.pet_age = RHS.pet_age))
		ORDER BY pettype
		
		

	  pettype  weight
	0      ca    9.28
	1      ca   13.39
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27716.sqlite3'
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0060_dev (4154)
	EXPECTED OUTPUT ====

		SELECT cost_of_treatment
		FROM Treatments
		ORDER BY date_of_treatment DESC
		LIMIT 1

	   cost_of_treatment
	0             851.99
	ACTUAL OUTPUT ====

		
		SELECT cost_of_treatment
		FROM
		  (SELECT treatment_id,
		          dog_id,
		          professional_id,
		          treatment_type_code,
		          date_of_treatment,
		          cost_of_treatment,
		          MAX(date_of_treatment) OVER () AS maxdate_of_treatment
		   FROM treatments)
		WHERE (maxdate_of_treatment <= date_of_treatment)
		ORDER BY cost_of_treatment
		
		

	   cost_of_treatment
	0             851.98
	1             851.99
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0063_dev (4155)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Owners
		WHERE owner_id NOT IN
		    (SELECT owner_id
		     FROM Dogs)

	   count(*)
	0         3
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT size_code
		      FROM dogs INTERSECT SELECT size_code
		      FROM dogs))
		ORDER BY count___
		
		

	   count___
	0        11
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0021_dev (4156)
	EXPECTED OUTPUT ====

		SELECT T1.treatment_type_description
		FROM Treatment_types AS T1
		JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code
		GROUP BY T1.treatment_type_code
		ORDER BY sum(cost_of_treatment) ASC
		LIMIT 1

	  treatment_type_description
	0       Take for a WalkrfrOT
	ACTUAL OUTPUT ====

		
		SELECT treatment_type_description
		FROM
		  (SELECT LHS.treatment_type_code AS treatment_type_code,
		          LHS.treatment_type_description AS treatment_type_description,
		          LHS.treatment_id AS treatment_id,
		          LHS.dog_id AS dog_id,
		          LHS.professional_id AS professional_id,
		          LHS.date_of_treatment AS date_of_treatment,
		          LHS.cost_of_treatment AS cost_of_treatment
		   FROM
		     (SELECT LHS.treatment_type_code AS treatment_type_code,
		             LHS.treatment_type_description AS treatment_type_description,
		             RHS.treatment_id AS treatment_id,
		             RHS.dog_id AS dog_id,
		             RHS.professional_id AS professional_id,
		             RHS.date_of_treatment AS date_of_treatment,
		             RHS.cost_of_treatment AS cost_of_treatment
		      FROM treatment_types AS LHS
		      INNER JOIN treatments AS RHS ON (LHS.treatment_type_code = RHS.treatment_type_code)) AS LHS
		   INNER JOIN
		     (SELECT MIN(cost_of_treatment) AS cost_of_treatment
		      FROM treatments) AS RHS ON (LHS.cost_of_treatment = RHS.cost_of_treatment))
		ORDER BY treatment_type_description
		
		

	  treatment_type_description
	0            Take for a Walk
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27716.sqlite3'
No solution for instance db2csv/dog_kennels/0018_dev (4158)
No solution for instance db2csv/dog_kennels/0033_dev (4159)
No solution for instance db2csv/dog_kennels/0054_dev (4163)
No solution for instance db2csv/dog_kennels/0037_dev (4165)
No solution for instance db2csv/dog_kennels/0038_dev (4167)
No solution for instance db2csv/dog_kennels/0053_dev (4170)
No solution for instance db2csv/dog_kennels/0078_dev (4171)
No solution for instance db2csv/dog_kennels/0034_dev (4173)
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0073_dev (4174)
	EXPECTED OUTPUT ====

		SELECT charge_type,
		       charge_amount
		FROM Charges

	                charge_type  charge_amount
	0                     Drugs         639.98
	1                     Drugs         640.00
	2  Daily Accommodationu2Epx         640.01
	3                     Drugs         640.01
	4  asV69Daily Accommodation         640.02
	ACTUAL OUTPUT ====

		
		SELECT charge_type,
		       sumcharge_amount AS charge_amount
		FROM
		  (SELECT charge_type,
		          SUM(charge_amount) AS sumcharge_amount
		   FROM charges
		   GROUP BY charge_type)
		ORDER BY charge_type
		
		

	                charge_type  charge_amount
	0  Daily Accommodationu2Epx         640.01
	1  asV69Daily Accommodation         640.02
	2                     Drugs        1919.99
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0061_dev (4175)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Dogs
		WHERE dog_id NOT IN
		    (SELECT dog_id
		     FROM Treatments)

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT *
		   FROM dogs AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM treatments AS RHS
		        WHERE (LHS.dog_id = RHS.dog_id) ))
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0064_dev (4176)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Owners
		WHERE owner_id NOT IN
		    (SELECT owner_id
		     FROM Dogs)

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT *
		   FROM owners AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM dogs AS RHS
		        WHERE (LHS.owner_id = RHS.owner_id) ))
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
Error while executing solution for instance db2csv/dog_kennels/0043_dev (4177)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT last_name
FROM
  (SELECT LHS.owner_id AS owner_id,
          LHS.first_name AS first_name,
          LHS.last_name AS last_name,
          LHS.street AS street,
          LHS.city AS city,
          LHS.state AS state,
          LHS.zip_code AS zip_code,
          LHS.email_address AS email_address,
          LHS.home_phone AS home_phone,
          LHS.cell_number AS cell_number,
          RHS.dog_id AS dog_id,
          RHS.abandoned_yn AS abandoned_yn,
          RHS.breed_code AS breed_code,
          RHS.size_code AS size_code,
          RHS.name AS name,
          RHS.age AS age,
          RHS.date_of_birth AS date_of_birth,
          RHS.gender AS gender,
          RHS.weight AS weight,
          RHS.date_arrived AS date_arrived,
          RHS.date_adopted AS date_adopted,
          RHS.date_departed AS date_departed,
          RHS.n_distinct AS n_distinct
   FROM owners AS LHS
   INNER JOIN
     (SELECT dog_id,
             owner_id,
             abandoned_yn,
             breed_code,
             size_code,
             name,
             age,
             date_of_birth,
             gender,
             weight,
             date_arrived,
             date_adopted,
             date_departed,
             COUNT(DISTINCT age) OVER () AS n_distinct
      FROM dogs) AS RHS ON (LHS.owner_id = RHS.owner_id))
WHERE (n_distinct < age)
ORDER BY last_name

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27716.sqlite3'
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0042_dev (4179)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.date_arrived,
		                T1.date_departed
		FROM Dogs AS T1
		JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id

	          date_arrived        date_departed
	0  1802-09-25 20:15:45  2018-03-25 04:50:22
	1  1802-09-25 20:15:45  2018-03-25 07:18:48
	2  2003-12-29 20:16:38  1971-10-29 21:10:53
	3  2003-12-29 20:16:38  2018-03-25 05:28:48
	4  2003-12-29 20:16:38  2018-03-25 07:19:17
	5  2003-12-29 20:16:38  2018-03-25 07:52:10
	6  2003-12-29 20:16:38  2018-03-25 10:25:46
	7  2017-12-29 06:08:26  2018-03-25 07:52:10
	ACTUAL OUTPUT ====

		
		SELECT date_arrived,
		       date_departed
		FROM
		  (SELECT *
		   FROM dogs AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT LHS.dog_id AS dog_id,
		                  LHS.owner_id AS owner_id,
		                  LHS.abandoned_yn AS abandoned_yn,
		                  LHS.breed_code AS breed_code,
		                  LHS.size_code AS size_code,
		                  LHS.name AS name,
		                  LHS.age AS age,
		                  LHS.date_of_birth AS date_of_birth,
		                  LHS.gender AS gender,
		                  LHS.weight AS weight,
		                  LHS.date_arrived AS date_arrived,
		                  LHS.date_adopted AS date_adopted,
		                  LHS.date_departed AS date_departed,
		                  RHS.treatment_id AS treatment_id,
		                  RHS.professional_id AS professional_id,
		                  RHS.treatment_type_code AS treatment_type_code,
		                  RHS.date_of_treatment AS date_of_treatment,
		                  RHS.cost_of_treatment AS cost_of_treatment
		           FROM dogs AS LHS
		           INNER JOIN treatments AS RHS ON (LHS.dog_id = RHS.dog_id)) AS RHS
		        WHERE (LHS.dog_id = RHS.dog_id
		               AND LHS.owner_id = RHS.owner_id
		               AND LHS.abandoned_yn = RHS.abandoned_yn
		               AND LHS.breed_code = RHS.breed_code
		               AND LHS.size_code = RHS.size_code
		               AND LHS.name = RHS.name
		               AND LHS.age = RHS.age
		               AND LHS.date_of_birth = RHS.date_of_birth
		               AND LHS.gender = RHS.gender
		               AND LHS.weight = RHS.weight
		               AND LHS.date_arrived = RHS.date_arrived
		               AND LHS.date_adopted = RHS.date_adopted
		               AND LHS.date_departed = RHS.date_departed) ))
		ORDER BY date_arrived
		
		

	           date_arrived        date_departed
	0   1802-09-25 20:15:45  2018-03-25 04:50:22
	1   1802-09-25 20:15:45  2018-03-25 07:18:48
	2   1802-09-25 20:15:45  2018-03-25 07:18:48
	3   2003-12-29 20:16:38  1971-10-29 21:10:53
	4   2003-12-29 20:16:38  1971-10-29 21:10:53
	5   2003-12-29 20:16:38  2018-03-25 05:28:48
	6   2003-12-29 20:16:38  2018-03-25 07:19:17
	7   2003-12-29 20:16:38  2018-03-25 07:52:10
	8   2003-12-29 20:16:38  2018-03-25 07:52:10
	9   2003-12-29 20:16:38  2018-03-25 10:25:46
	10  2017-12-29 06:08:26  2018-03-25 07:52:10
Wrong output for base solution in instance db2csv/dog_kennels/0024_dev (4180)
	EXPECTED OUTPUT ====

	   owner_id  zip_code
	0         3      2647
	ACTUAL OUTPUT ====

		SELECT T1.owner_id,
		       T1.zip_code
		FROM Owners AS T1
		JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
		JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id
		GROUP BY T1.owner_id
		ORDER BY sum(T3.cost_of_treatment) DESC
		LIMIT 1

	   owner_id zip_code
	0         3    02647
Wrong output for ground truth in instance db2csv/dog_kennels/0024_dev (4180)
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0017_dev (4181)
	EXPECTED OUTPUT ====

		SELECT T1.breed_name
		FROM Breeds AS T1
		JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code
		GROUP BY T1.breed_name
		ORDER BY count(*) DESC
		LIMIT 1

	  breed_name
	0    Bulldog
	ACTUAL OUTPUT ====

		
		SELECT breed_name
		FROM
		  (SELECT LHS.breed_code AS breed_code,
		          LHS.breed_name AS breed_name,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.breed_code AS breed_code,
		             LHS.breed_name AS breed_name,
		             RHS.n AS n
		      FROM breeds AS LHS
		      INNER JOIN
		        (SELECT breed_code,
		                COUNT() AS n
		         FROM dogs
		         GROUP BY breed_code) AS RHS ON (LHS.breed_code = RHS.breed_code)) AS LHS
		   INNER JOIN
		     (SELECT breed_code,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT breed_code,
		                COUNT() AS n
		         FROM dogs
		         GROUP BY breed_code)) AS RHS ON (LHS.breed_code = RHS.breed_code
		                                          AND LHS.n = RHS.n))
		ORDER BY breed_name
		
		

	     breed_name
	0      )UcitYOD
	1        Bulldo
	2       Bulldog
	3        JI7OM3
	4  sZM fBulldog
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0062_dev (4182)
	EXPECTED OUTPUT ====

		select count(*)
		from dogs
		where dog_id not in
		    (select dog_id
		     from treatments)

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT *
		   FROM dogs AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM treatments AS RHS
		        WHERE (LHS.dog_id = RHS.dog_id) ))
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance db2csv/dog_kennels/0077_dev (4183)
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0045_dev (4187)
	EXPECTED OUTPUT ====

		SELECT email_address
		FROM Professionals
		WHERE state = 'Hawaii'
		  OR state = 'Wisconsin'

	                     email_address
	0       cole.margarita@example.org
	1       cole.margarita@example.org
	2       cole.margarita@example.org
	3  cole.margarita@example.org8(tVR
	4    jDpTZeyhArjOhbPFAsr nQmB5apu7
	5  jacynthe.mclaughlin@example.net
	ACTUAL OUTPUT ====

		
		SELECT `email_address`
		FROM
		  (SELECT *
		   FROM `professionals` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT *
		              FROM `professionals`
		              WHERE (`state` != 'Wisconsin'))
		           WHERE (`state` != 'Hawaii')) AS RHS
		        WHERE (LHS.role_code = RHS.role_code
		               AND LHS.street = RHS.street) ))
		ORDER BY email_address
		
		

	                     email_address
	0       cole.margarita@example.org
	1       cole.margarita@example.org
	2  cole.margarita@example.org8(tVR
	3    jDpTZeyhArjOhbPFAsr nQmB5apu7
	4  jacynthe.mclaughlin@example.net
No solution for instance db2csv/dog_kennels/0009_dev (4190)
No solution for instance db2csv/dog_kennels/0055_dev (4193)
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0046_dev (4194)
	EXPECTED OUTPUT ====

		SELECT email_address
		FROM Professionals
		WHERE state = 'Hawaii'
		  OR state = 'Wisconsin'

	                         email_address
	0  2Pegoyette.roosevelt@example.netUMC
	1      jacynthe.mclaughlin@example.net
	2                west.eula@example.net
	3        xm5FDlourdes.lowe@example.net
	ACTUAL OUTPUT ====

		
		SELECT `email_address`
		FROM
		  (SELECT *
		   FROM `professionals` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT *
		              FROM `professionals`
		              WHERE (`state` != 'Wisconsin'))
		           WHERE (`state` != 'Hawaii')) AS RHS
		        WHERE (LHS.email_address = RHS.email_address) ))
		ORDER BY email_address
		
		

	                         email_address
	0  2Pegoyette.roosevelt@example.netUMC
	1                west.eula@example.net
	2        xm5FDlourdes.lowe@example.net
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27716.sqlite3'
No solution for instance db2csv/dog_kennels/0008_dev (4197)
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0041_dev (4198)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.date_arrived,
		                T1.date_departed
		FROM Dogs AS T1
		JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id

	          date_arrived        date_departed
	0  1802-09-25 20:15:45  2018-03-25 04:50:22
	1  1802-09-25 20:15:45  2018-03-25 07:18:48
	2  2003-12-29 20:16:38  1971-10-29 21:10:53
	3  2003-12-29 20:16:38  2018-03-25 05:28:48
	4  2003-12-29 20:16:38  2018-03-25 07:19:17
	5  2003-12-29 20:16:38  2018-03-25 07:52:10
	6  2003-12-29 20:16:38  2018-03-25 10:25:46
	7  2017-12-29 06:08:26  2018-03-25 07:52:10
	ACTUAL OUTPUT ====

		
		SELECT date_arrived,
		       date_departed
		FROM
		  (SELECT *
		   FROM dogs AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT LHS.treatment_id AS treatment_id,
		                  LHS.dog_id AS dog_id,
		                  LHS.professional_id AS professional_id,
		                  LHS.treatment_type_code AS treatment_type_code,
		                  LHS.date_of_treatment AS date_of_treatment,
		                  LHS.cost_of_treatment AS cost_of_treatment,
		                  LHS.owner_id AS owner_id,
		                  LHS.abandoned_yn AS abandoned_yn,
		                  LHS.breed_code AS breed_code,
		                  LHS.size_code AS size_code,
		                  LHS.name AS name,
		                  LHS.age AS age,
		                  LHS.date_of_birth AS date_of_birth,
		                  LHS.gender AS gender,
		                  LHS.weight AS weight,
		                  LHS.date_arrived AS date_arrived,
		                  LHS.date_adopted AS date_adopted,
		                  LHS.date_departed AS date_departed,
		                  RHS.treatment_type_description AS treatment_type_description
		           FROM
		             (SELECT LHS.treatment_id AS treatment_id,
		                     LHS.dog_id AS dog_id,
		                     LHS.professional_id AS professional_id,
		                     LHS.treatment_type_code AS treatment_type_code,
		                     LHS.date_of_treatment AS date_of_treatment,
		                     LHS.cost_of_treatment AS cost_of_treatment,
		                     RHS.owner_id AS owner_id,
		                     RHS.abandoned_yn AS abandoned_yn,
		                     RHS.breed_code AS breed_code,
		                     RHS.size_code AS size_code,
		                     RHS.name AS name,
		                     RHS.age AS age,
		                     RHS.date_of_birth AS date_of_birth,
		                     RHS.gender AS gender,
		                     RHS.weight AS weight,
		                     RHS.date_arrived AS date_arrived,
		                     RHS.date_adopted AS date_adopted,
		                     RHS.date_departed AS date_departed
		              FROM treatments AS LHS
		              INNER JOIN dogs AS RHS ON (LHS.dog_id = RHS.dog_id)) AS LHS
		           INNER JOIN treatment_types AS RHS ON (LHS.treatment_type_code = RHS.treatment_type_code)) AS RHS
		        WHERE (LHS.dog_id = RHS.dog_id
		               AND LHS.owner_id = RHS.owner_id
		               AND LHS.abandoned_yn = RHS.abandoned_yn
		               AND LHS.breed_code = RHS.breed_code
		               AND LHS.size_code = RHS.size_code
		               AND LHS.name = RHS.name
		               AND LHS.age = RHS.age
		               AND LHS.date_of_birth = RHS.date_of_birth
		               AND LHS.gender = RHS.gender
		               AND LHS.weight = RHS.weight
		               AND LHS.date_arrived = RHS.date_arrived
		               AND LHS.date_adopted = RHS.date_adopted
		               AND LHS.date_departed = RHS.date_departed) ))
		ORDER BY date_arrived
		
		

	           date_arrived        date_departed
	0   1802-09-25 20:15:45  2018-03-25 04:50:22
	1   1802-09-25 20:15:45  2018-03-25 07:18:48
	2   1802-09-25 20:15:45  2018-03-25 07:18:48
	3   2003-12-29 20:16:38  1971-10-29 21:10:53
	4   2003-12-29 20:16:38  1971-10-29 21:10:53
	5   2003-12-29 20:16:38  2018-03-25 05:28:48
	6   2003-12-29 20:16:38  2018-03-25 07:19:17
	7   2003-12-29 20:16:38  2018-03-25 07:52:10
	8   2003-12-29 20:16:38  2018-03-25 07:52:10
	9   2003-12-29 20:16:38  2018-03-25 10:25:46
	10  2017-12-29 06:08:26  2018-03-25 07:52:10
No solution for instance db2csv/dog_kennels/0019_dev (4199)
No solution for instance db2csv/dog_kennels/0006_dev (4201)
Wrong output for base solution in instance db2csv/dog_kennels/0071_dev (4205)
	EXPECTED OUTPUT ====

	   max_age_
	0         9
	ACTUAL OUTPUT ====

		SELECT max(age)
		FROM Dogs

	  max(age)
	0        9
Wrong output for ground truth in instance db2csv/dog_kennels/0071_dev (4205)
Wrong output for base solution in instance db2csv/dog_kennels/0068_dev (4208)
	EXPECTED OUTPUT ====

	         name  age  weight
	0  Evangeline    1    4.01
	1       Lyric    4    4.36
	2       Kacey    6    7.57
	ACTUAL OUTPUT ====

		SELECT name,
		       age,
		       weight
		FROM Dogs
		WHERE abandoned_yn = 1

	         name age weight
	0  Evangeline   1   4.01
	1       Lyric   4   4.36
	2       Kacey   6   7.57
Wrong output for ground truth in instance db2csv/dog_kennels/0068_dev (4208)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27716.sqlite3'
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0059_dev (4212)
	EXPECTED OUTPUT ====

		SELECT cost_of_treatment
		FROM Treatments
		ORDER BY date_of_treatment DESC
		LIMIT 1

	   cost_of_treatment
	0             851.99
	ACTUAL OUTPUT ====

		
		SELECT cost_of_treatment
		FROM
		  (SELECT treatment_id,
		          dog_id,
		          professional_id,
		          treatment_type_code,
		          date_of_treatment,
		          cost_of_treatment,
		          MAX(date_of_treatment) OVER () AS maxdate_of_treatment
		   FROM treatments)
		WHERE (maxdate_of_treatment = date_of_treatment)
		ORDER BY cost_of_treatment
		
		

	   cost_of_treatment
	0             851.98
	1             851.99
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0022_dev (4214)
	EXPECTED OUTPUT ====

		SELECT T1.treatment_type_description
		FROM Treatment_types AS T1
		JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code
		GROUP BY T1.treatment_type_code
		ORDER BY sum(cost_of_treatment) ASC
		LIMIT 1

	  treatment_type_description
	0       Take for a WalkrfrOT
	ACTUAL OUTPUT ====

		
		SELECT treatment_type_description
		FROM
		  (SELECT LHS.treatment_id AS treatment_id,
		          LHS.dog_id AS dog_id,
		          LHS.professional_id AS professional_id,
		          LHS.treatment_type_code AS treatment_type_code,
		          LHS.date_of_treatment AS date_of_treatment,
		          LHS.cost_of_treatment AS cost_of_treatment,
		          LHS.treatment_type_description AS treatment_type_description
		   FROM
		     (SELECT LHS.treatment_id AS treatment_id,
		             LHS.dog_id AS dog_id,
		             LHS.professional_id AS professional_id,
		             LHS.treatment_type_code AS treatment_type_code,
		             LHS.date_of_treatment AS date_of_treatment,
		             LHS.cost_of_treatment AS cost_of_treatment,
		             RHS.treatment_type_description AS treatment_type_description
		      FROM treatments AS LHS
		      INNER JOIN treatment_types AS RHS ON (LHS.treatment_type_code = RHS.treatment_type_code)) AS LHS
		   INNER JOIN
		     (SELECT treatment_id,
		             dog_id,
		             professional_id,
		             treatment_type_code,
		             date_of_treatment,
		             MIN(cost_of_treatment) OVER () AS cost_of_treatment
		      FROM treatments) AS RHS ON (LHS.treatment_id = RHS.treatment_id
		                                     AND LHS.dog_id = RHS.dog_id
		                                     AND LHS.professional_id = RHS.professional_id
		                                     AND LHS.treatment_type_code = RHS.treatment_type_code
		                                     AND LHS.date_of_treatment = RHS.date_of_treatment
		                                     AND LHS.cost_of_treatment = RHS.cost_of_treatment))
		ORDER BY treatment_type_description
		
		

	  treatment_type_description
	0            Take for a Walk
No solution for instance db2csv/dog_kennels/0013_dev (4216)
No solution for instance db2csv/dog_kennels/0014_dev (4217)
Wrong output for base solution in instance db2csv/dog_kennels/0072_dev (4219)
	EXPECTED OUTPUT ====

	   max_age_
	0         9
	ACTUAL OUTPUT ====

		SELECT max(age)
		FROM Dogs

	  max(age)
	0        9
Wrong output for ground truth in instance db2csv/dog_kennels/0072_dev (4219)
No solution for instance db2csv/dog_kennels/0007_dev (4220)
No solution for instance db2csv/dog_kennels/0010_dev (4222)
No solution for instance db2csv/dog_kennels/0044_dev (4223)
Wrong output for base solution in instance db2csv/dog_kennels/0067_dev (4224)
	EXPECTED OUTPUT ====

	         name  age  weight
	0  Evangeline    1    4.01
	1       Lyric    4    4.36
	2       Kacey    6    7.57
	ACTUAL OUTPUT ====

		SELECT name,
		       age,
		       weight
		FROM Dogs
		WHERE abandoned_yn = 1

	         name age weight
	0  Evangeline   1   4.01
	1       Lyric   4   4.36
	2       Kacey   6   7.57
Wrong output for ground truth in instance db2csv/dog_kennels/0067_dev (4224)
No solution for instance db2csv/dog_kennels/0056_dev (4226)
No solution for instance db2csv/dog_kennels/0020_dev (4227)
Wrong output for base solution in instance db2csv/dog_kennels/0023_dev (4231)
	EXPECTED OUTPUT ====

	   owner_id  zip_code
	0         3      2647
	ACTUAL OUTPUT ====

		SELECT T1.owner_id,
		       T1.zip_code
		FROM Owners AS T1
		JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
		JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id
		GROUP BY T1.owner_id
		ORDER BY sum(T3.cost_of_treatment) DESC
		LIMIT 1

	   owner_id zip_code
	0         3    02647
Wrong output for ground truth in instance db2csv/dog_kennels/0023_dev (4231)
No solution for instance db2csv/dog_kennels/0005_dev (4233)
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0021_dev (4236)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM employee AS t1
		JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID
		ORDER BY t2.bonus DESC
		LIMIT 1

	           name
	0  Matt Stevens
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.employee_id AS employee_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.city AS city,
		          LHS.year_awarded AS year_awarded,
		          LHS.bonus AS bonus
		   FROM
		     (SELECT LHS.employee_id AS employee_id,
		             LHS.name AS name,
		             LHS.age AS age,
		             LHS.city AS city,
		             RHS.year_awarded AS year_awarded,
		             RHS.bonus AS bonus
		      FROM employee AS LHS
		      INNER JOIN evaluation AS RHS ON (LHS.employee_id = RHS.employee_id)) AS LHS
		   INNER JOIN
		     (SELECT MAX(bonus) AS bonus
		      FROM evaluation) AS RHS ON (LHS.bonus = RHS.bonus))
		ORDER BY name
		
		

	             name
	0  Andrew Sherida
	1    Matt Stevens
	2    Matt Stevens
	3    Matt Stevens
	4        im Payne
	5        im Payne
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27716.sqlite3'
Wrong output for base solution in instance db2csv/employee_hire_evaluation/0033_dev (4238)
	EXPECTED OUTPUT ====

	   shop_id  employee_id  start_from is_full_time
	0        1            1        2009            T
	1        1            2        2003            T
	2        8            3        2011            F
	3        4            4        2012            T
	4        5            5        2013            T
	5        2            6        2010            F
	6        6            7        2008            T
	ACTUAL OUTPUT ====

		SELECT *
		FROM hiring

	   shop_id  employee_id start_from is_full_time
	0        1            1       2009            T
	1        1            2       2003            T
	2        8            3       2011            F
	3        4            4       2012            T
	4        5            5       2013            T
	5        2            6       2010            F
	6        6            7       2008            T
Wrong output for ground truth in instance db2csv/employee_hire_evaluation/0033_dev (4238)
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0029_dev (4239)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       t2.name
		FROM hiring AS t1
		JOIN shop AS t2 ON t1.shop_id = t2.shop_id
		GROUP BY t2.name

	   count(*)      name
	0         4   C Honka
	1         5  FC Honka
	2         5  FC Inter
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       name
		FROM
		  (SELECT shop_id,
		          name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.shop_id AS shop_id,
		             LHS.employee_id AS employee_id,
		             LHS.start_from AS start_from,
		             LHS.is_full_time AS is_full_time,
		             RHS.name AS name,
		             RHS.location AS LOCATION,
		             RHS.district AS district,
		             RHS.number_products AS number_products,
		             RHS.manager_name AS manager_name
		      FROM hiring AS LHS
		      INNER JOIN shop AS RHS ON (LHS.shop_id = RHS.shop_id))
		   GROUP BY shop_id,
		            name)
		ORDER BY count___
		
		

	   count___      name
	0         1   C Honka
	1         1  FC Honka
	2         1  FC Inter
	3         2  FC Honka
	4         2  FC Honka
	5         3   C Honka
	6         4  FC Inter
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0037_dev (4240)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT LOCATION)
		FROM shop

	   count(distinct location)
	0                         7
	ACTUAL OUTPUT ====

		
		SELECT n AS count_distinct_location_
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT manager_name
		      FROM shop INTERSECT SELECT manager_name
		      FROM shop))
		ORDER BY count_distinct_location_
		
		

	   count_distinct_location_
	0                         4
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0012_dev (4241)
	EXPECTED OUTPUT ====

		SELECT manager_name,
		       district
		FROM shop
		ORDER BY number_products DESC
		LIMIT 1

	   manager_name               district
	0  Ilkka Mäkelä  Tapiolan Urheilupuist
	ACTUAL OUTPUT ====

		
		SELECT manager_name,
		       district
		FROM
		  (SELECT *
		   FROM shop AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT MAX(number_products) AS number_products
		           FROM shop) AS RHS
		        WHERE (LHS.number_products = RHS.number_products) ))
		ORDER BY manager_name
		
		

	   manager_name                district
	0   lkka Mäkelä  Jakobstads Centralplan
	1  Ilkka Mäkelä   Tapiolan Urheilupuist
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0038_dev (4242)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT LOCATION)
		FROM shop

	   count(distinct location)
	0                         6
	ACTUAL OUTPUT ====

		
		SELECT n AS count_distinct_location_
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT shop_id
		      FROM shop INTERSECT SELECT shop_id
		      FROM shop))
		ORDER BY count_distinct_location_
		
		

	   count_distinct_location_
	0                         9
No solution for instance db2csv/employee_hire_evaluation/0036_dev (4243)
Wrong output for base solution in instance db2csv/employee_hire_evaluation/0034_dev (4246)
	EXPECTED OUTPUT ====

	   shop_id  employee_id  start_from is_full_time
	0        1            1        2009            T
	1        1            2        2003            T
	2        8            3        2011            F
	3        4            4        2012            T
	4        5            5        2013            T
	5        2            6        2010            F
	6        6            7        2008            T
	ACTUAL OUTPUT ====

		SELECT *
		FROM hiring

	   shop_id  employee_id start_from is_full_time
	0        1            1       2009            T
	1        1            2       2003            T
	2        8            3       2011            F
	3        4            4       2012            T
	4        5            5       2013            T
	5        2            6       2010            F
	6        6            7       2008            T
Wrong output for ground truth in instance db2csv/employee_hire_evaluation/0034_dev (4246)
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0011_dev (4247)
	EXPECTED OUTPUT ====

		SELECT manager_name,
		       district
		FROM shop
		ORDER BY number_products DESC
		LIMIT 1

	   manager_name               district
	0  Ilkka Mäkelä  Tapiolan Urheilupuist
	ACTUAL OUTPUT ====

		
		SELECT manager_name,
		       district
		FROM
		  (SELECT *
		   FROM shop AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT MAX(number_products) AS number_products
		           FROM shop) AS RHS
		        WHERE (LHS.number_products = RHS.number_products) ))
		ORDER BY manager_name
		
		

	   manager_name                district
	0   lkka Mäkelä  Jakobstads Centralplan
	1  Ilkka Mäkelä   Tapiolan Urheilupuist
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27716.sqlite3'
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0026_dev (4250)
	EXPECTED OUTPUT ====

		SELECT t2.name
		FROM hiring AS t1
		JOIN shop AS t2 ON t1.shop_id = t2.shop_id
		GROUP BY t1.shop_id
		ORDER BY count(*) DESC
		LIMIT 1

	      name
	0  FF Jaro
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT shop_id,
		          name,
		          LOCATION,
		          district,
		          number_products,
		          manager_name,
		          shop_id_other,
		          shop_id AS n
		   FROM
		     (SELECT LHS.shop_id AS shop_id,
		             LHS.name AS name,
		             LHS.location AS LOCATION,
		             LHS.district AS district,
		             LHS.number_products AS number_products,
		             LHS.manager_name AS manager_name,
		             RHS.shop_id AS shop_id_other
		      FROM shop AS LHS
		      INNER JOIN
		        (SELECT shop_id,
		                COUNT() AS n
		         FROM shop
		         GROUP BY shop_id) AS RHS ON (LHS.shop_id = RHS.n)))
		ORDER BY name
		
		

	   name
	0  KuPS
No solution for instance db2csv/employee_hire_evaluation/0035_dev (4251)
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0009_dev (4253)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       LOCATION
		FROM shop
		GROUP BY LOCATION

	   count(*)     location
	0         1        Kuopi
	1         1    Mariehamn
	2         1   QxKWLTurku
	3         1  aoVXSKuopio
	4         1  kS2TurkuvSn
	5         4        Turku
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       LOCATION
		FROM
		  (SELECT LOCATION,
		          COUNT() AS n
		   FROM
		     (SELECT LOCATION
		      FROM shop INTERSECT SELECT LOCATION
		      FROM shop)
		   GROUP BY LOCATION)
		ORDER BY count___
		
		

	   count___     location
	0         1        Kuopi
	1         1    Mariehamn
	2         1   QxKWLTurku
	3         1        Turku
	4         1  aoVXSKuopio
	5         1  kS2TurkuvSn
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0008_dev (4255)
	EXPECTED OUTPUT ====

		SELECT city
		FROM employee
		WHERE age < 30
		GROUP BY city
		HAVING count(*) > 1

	   city
	0  Bath
	ACTUAL OUTPUT ====

		
		SELECT city
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM employee
		         WHERE (age > 30))
		      ORDER BY age)
		   LIMIT 1)
		
		

	            city
	0  B4HBristolQ(o
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0019_dev (4256)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM employee AS t1
		JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID
		GROUP BY t2.Employee_ID
		ORDER BY count(*) DESC
		LIMIT 1

	           name
	0  Matt Stevens
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT employee_id,
		             name,
		             age,
		             city,
		             name_other,
		             employee_id AS n
		      FROM
		        (SELECT LHS.employee_id AS employee_id,
		                LHS.name AS name,
		                LHS.age AS age,
		                LHS.city AS city,
		                RHS.name AS name_other
		         FROM employee AS LHS
		         INNER JOIN
		           (SELECT name,
		                   COUNT() AS n
		            FROM employee
		            GROUP BY name) AS RHS ON (LHS.employee_id = RHS.n))) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM evaluation AS RHS
		        WHERE (LHS.employee_id = RHS.employee_id) ))
		ORDER BY name
		
		

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0004_dev (4258)
	EXPECTED OUTPUT ====

		SELECT name
		FROM employee
		ORDER BY age

	                 name
	0      Andrew Sherida
	1       George Chuter
	2  George ChuterFHAwK
	3        Matt Stevens
	4   N2)TPMatt Stevens
	5            im Payne
	6            im Payne
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT name
		   FROM employee INTERSECT SELECT name
		   FROM employee)
		ORDER BY name
		
		

	                 name
	0      Andrew Sherida
	1       George Chuter
	2  George ChuterFHAwK
	3        Matt Stevens
	4   N2)TPMatt Stevens
	5            im Payne
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0030_dev (4259)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       t2.name
		FROM hiring AS t1
		JOIN shop AS t2 ON t1.shop_id = t2.shop_id
		GROUP BY t2.name

	   count(*)      name
	0         4   C Honka
	1         5  FC Honka
	2         5  FC Inter
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       name
		FROM
		  (SELECT shop_id,
		          name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.shop_id AS shop_id,
		             LHS.employee_id AS employee_id,
		             LHS.start_from AS start_from,
		             LHS.is_full_time AS is_full_time,
		             RHS.name AS name,
		             RHS.location AS LOCATION,
		             RHS.district AS district,
		             RHS.number_products AS number_products,
		             RHS.manager_name AS manager_name
		      FROM hiring AS LHS
		      INNER JOIN shop AS RHS ON (LHS.shop_id = RHS.shop_id))
		   GROUP BY shop_id,
		            name)
		ORDER BY count___
		
		

	   count___      name
	0         1   C Honka
	1         1  FC Honka
	2         1  FC Inter
	3         2  FC Honka
	4         2  FC Honka
	5         3   C Honka
	6         4  FC Inter
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0022_dev (4261)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM employee AS t1
		JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID
		ORDER BY t2.bonus DESC
		LIMIT 1

	           name
	0  Matt Stevens
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.employee_id AS employee_id,
		          LHS.year_awarded AS year_awarded,
		          LHS.bonus AS bonus,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.city AS city
		   FROM
		     (SELECT LHS.employee_id AS employee_id,
		             LHS.year_awarded AS year_awarded,
		             LHS.bonus AS bonus,
		             RHS.name AS name,
		             RHS.age AS age,
		             RHS.city AS city
		      FROM evaluation AS LHS
		      INNER JOIN employee AS RHS ON (LHS.employee_id = RHS.employee_id)) AS LHS
		   INNER JOIN
		     (SELECT employee_id,
		             year_awarded,
		             MAX(bonus) OVER () AS bonus
		      FROM evaluation) AS RHS ON (LHS.employee_id = RHS.employee_id
		                                     AND LHS.year_awarded = RHS.year_awarded
		                                     AND LHS.bonus = RHS.bonus))
		ORDER BY name
		
		

	             name
	0  Andrew Sherida
	1    Matt Stevens
	2    Matt Stevens
	3    Matt Stevens
	4        im Payne
	5        im Payne
No solution for instance db2csv/employee_hire_evaluation/0007_dev (4265)
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0020_dev (4268)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM employee AS t1
		JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID
		GROUP BY t2.Employee_ID
		ORDER BY count(*) DESC
		LIMIT 1

	           name
	0  Matt Stevens
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT employee_id,
		          name,
		          employee_id AS n,
		          name_other
		   FROM
		     (SELECT LHS.employee_id AS employee_id,
		             LHS.name AS name,
		             LHS.n AS n,
		             RHS.name AS name_other
		      FROM
		        (SELECT *
		         FROM
		           (SELECT employee_id,
		                   name,
		                   COUNT() AS n
		            FROM employee
		            GROUP BY employee_id,
		                     name) AS LHS
		         WHERE EXISTS
		             (SELECT 1
		              FROM evaluation AS RHS
		              WHERE (LHS.employee_id = RHS.employee_id) )) AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM
		           (SELECT employee_id,
		                   name,
		                   COUNT() AS n
		            FROM employee
		            GROUP BY employee_id,
		                     name) AS LHS
		         WHERE EXISTS
		             (SELECT 1
		              FROM evaluation AS RHS
		              WHERE (LHS.employee_id = RHS.employee_id) )) AS RHS ON (LHS.employee_id = RHS.n
		                                                                      AND LHS.n = RHS.employee_id)))
		ORDER BY name
		
		

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0025_dev (4269)
	EXPECTED OUTPUT ====

		SELECT t2.name
		FROM hiring AS t1
		JOIN shop AS t2 ON t1.shop_id = t2.shop_id
		GROUP BY t1.shop_id
		ORDER BY count(*) DESC
		LIMIT 1

	      name
	0  FF Jaro
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.shop_id AS shop_id,
		          LHS.name AS name,
		          LHS.location AS LOCATION,
		          LHS.district AS district,
		          LHS.number_products AS number_products,
		          LHS.manager_name AS manager_name,
		          RHS.shop_id AS shop_id_other
		   FROM shop AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT shop_id,
		                COUNT() AS n
		         FROM shop
		         GROUP BY shop_id) AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM hiring AS RHS
		           WHERE (LHS.shop_id = RHS.shop_id) )) AS RHS ON (LHS.shop_id = RHS.n))
		ORDER BY name
		
		

	   name
	0  KuPS
No solution for instance db2csv/voter_1/0012_dev (4273)
Error while executing solution for instance db2csv/voter_1/0011_dev (4276)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT contestant_number) OVER () AS count___
FROM
  (SELECT *
   FROM contestants AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM votes AS RHS
        WHERE (LHS.contestant_number = RHS.contestant_number) ))
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance db2csv/voter_1/0009_dev (4277)
No solution for instance db2csv/voter_1/0004_dev (4281)
Wrong output for fuzzied solution in instance db2csv/voter_1/0014_dev (4283)
	EXPECTED OUTPUT ====

		SELECT T3.area_code
		FROM contestants AS T1
		JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number
		JOIN area_code_state AS T3 ON T2.state = T3.state
		WHERE T1.contestant_name = 'Tabatha Gehling' INTERSECT
		  SELECT T3.area_code
		  FROM contestants AS T1
		  JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number
		  JOIN area_code_state AS T3 ON T2.state = T3.state WHERE T1.contestant_name = 'Kelly Clauss'

	    area_code
	0         443
	1         444
	2         818
	3  4080537629
	ACTUAL OUTPUT ====

		
		SELECT `area_code`
		FROM
		  (SELECT *
		   FROM
		     (SELECT `LHS`.`contestant_number` AS `contestant_number`,
		             `LHS`.`contestant_name` AS `contestant_name`,
		             `LHS`.`area_code` AS `area_code`,
		             `LHS`.`state` AS `state`,
		             `RHS`.`vote_id` AS `vote_id`,
		             `RHS`.`phone_number` AS `phone_number`,
		             `RHS`.`created` AS `created`
		      FROM
		        (SELECT `LHS`.`contestant_number` AS `contestant_number`,
		                `LHS`.`contestant_name` AS `contestant_name`,
		                `RHS`.`area_code` AS `area_code`,
		                `RHS`.`state` AS `state`
		         FROM `contestants` AS `LHS`
		         CROSS JOIN `area_code_state` AS `RHS`) AS `LHS`
		      INNER JOIN `votes` AS `RHS` ON (`LHS`.`contestant_number` = `RHS`.`contestant_number`
		                                         AND `LHS`.`state` = `RHS`.`state`))
		   WHERE (`contestant_name` = 'Tabatha Gehling'))
		WHERE (`contestant_name` != 'Kelly Clauss')
		ORDER BY area_code
		
		

	    area_code
	0         443
	1         444
	2         818
	3  4080537629
	4  8228225125
Wrong output for fuzzied solution in instance db2csv/voter_1/0007_dev (4284)
	EXPECTED OUTPUT ====

		SELECT DISTINCT state,
		                created
		FROM votes

	      state              created
	0        GA  2018-03-09 19:03:25
	1  vTYGAvPj  2018-03-09 19:03:25
	2  vTYGAvPj  2018-03-09 19:03:28
	3        GA  2018-03-09 19:03:29
	4         A  2018-03-09 19:03:30
	5        GA  2018-03-09 19:03:31
	6         G  2018-03-09 19:03:34
	7         H  2018-03-09 19:03:35
	ACTUAL OUTPUT ====

		
		SELECT state,
		       created
		FROM
		  (SELECT *
		   FROM votes AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM contestants AS RHS
		        WHERE (LHS.contestant_number = RHS.contestant_number) ))
		ORDER BY state
		
		

	      state              created
	0        GA  2018-03-09 19:03:25
	1  vTYGAvPj  2018-03-09 19:03:25
	2  vTYGAvPj  2018-03-09 19:03:28
	3        GA  2018-03-09 19:03:29
	4         A  2018-03-09 19:03:30
	5        GA  2018-03-09 19:03:31
	6        GA  2018-03-09 19:03:31
	7         G  2018-03-09 19:03:34
	8         H  2018-03-09 19:03:35
No solution for instance db2csv/voter_1/0015_dev (4285)
Error while executing solution for instance db2csv/voter_1/0010_dev (4286)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT `vote_id` AS `count___`
FROM
  (SELECT `vote_id`,
          `phone_number`,
          `state`,
          `contestant_number`,
          `created`,
          COUNT(DISTINCT `state`) OVER () AS `n_distinct`
   FROM
     (SELECT *
      FROM `votes`
      WHERE (`state` = 'CA')))
WHERE (`state` != 'NY')
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance db2csv/poker_player/0027_dev (4288)
Wrong output for fuzzied solution in instance db2csv/poker_player/0021_dev (4289)
	EXPECTED OUTPUT ====

		SELECT T2.Money_Rank
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T1.Height DESC
		LIMIT 1

	   money_rank
	0       166.0
	ACTUAL OUTPUT ====

		
		SELECT money_rank
		FROM
		  (SELECT LHS.poker_player_id AS poker_player_id,
		          LHS.people_id AS people_id,
		          LHS.final_table_made AS final_table_made,
		          LHS.best_finish AS best_finish,
		          LHS.money_rank AS money_rank,
		          LHS.earnings AS earnings,
		          LHS.nationality AS nationality,
		          LHS.name AS name,
		          LHS.birth_date AS birth_date,
		          LHS.height AS height
		   FROM
		     (SELECT LHS.poker_player_id AS poker_player_id,
		             LHS.people_id AS people_id,
		             LHS.final_table_made AS final_table_made,
		             LHS.best_finish AS best_finish,
		             LHS.money_rank AS money_rank,
		             LHS.earnings AS earnings,
		             RHS.nationality AS nationality,
		             RHS.name AS name,
		             RHS.birth_date AS birth_date,
		             RHS.height AS height
		      FROM poker_player AS LHS
		      INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id)) AS LHS
		   INNER JOIN
		     (SELECT MAX(height) AS height
		      FROM people) AS RHS ON (LHS.height = RHS.height))
		ORDER BY money_rank
		
		

	   money_rank
	0       166.0
	1       166.0
Wrong output for base solution in instance db2csv/poker_player/0033_dev (4291)
	EXPECTED OUTPUT ====

	                 name birth_date
	0    Semen Poltavskiy 1981-02-08
	1     Teodor Salparov 1982-08-16
	2        Maksim Botin 1983-07-14
	3   Aleksey Ostapenko 1986-05-26
	4  Yevgeni Sivozhelez 1986-08-08
	5      Sergey Grankin 1987-01-22
	6        Roman Bragin 1987-04-17
	ACTUAL OUTPUT ====

		SELECT Name,
		       Birth_Date
		FROM people
		ORDER BY Name ASC

	                 name        birth_date
	0        Roman Bragin    April 17, 1987
	1     Teodor Salparov   August 16, 1982
	2  Yevgeni Sivozhelez    August 8, 1986
	3    Semen Poltavskiy  February 8, 1981
	4      Sergey Grankin  January 22, 1987
	5        Maksim Botin     July 14, 1983
	6   Aleksey Ostapenko      May 26, 1986
Wrong output for ground truth in instance db2csv/poker_player/0033_dev (4291)
No solution for instance db2csv/poker_player/0029_dev (4293)
Wrong output for fuzzied solution in instance db2csv/poker_player/0003_dev (4298)
	EXPECTED OUTPUT ====

		SELECT Earnings
		FROM poker_player
		ORDER BY Earnings DESC

	    earnings
	0  104871.01
	1  142800.00
	2  142800.00
	3  142800.01
	4  596461.98
	5  596461.98
	6  596462.00
	ACTUAL OUTPUT ====

		
		SELECT earnings
		FROM
		  (SELECT earnings
		   FROM poker_player INTERSECT SELECT earnings
		   FROM poker_player)
		ORDER BY earnings
		
		

	    earnings
	0  104871.01
	1  142800.00
	2  142800.01
	3  596461.98
	4  596462.00
Wrong output for fuzzied solution in instance db2csv/poker_player/0001_dev (4299)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM poker_player

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT earnings
		      FROM poker_player INTERSECT SELECT earnings
		      FROM poker_player))
		ORDER BY count___
		
		

	   count___
	0         5
Wrong output for base solution in instance db2csv/poker_player/0034_dev (4300)
	EXPECTED OUTPUT ====

	                 name birth_date
	0    Semen Poltavskiy 1981-02-08
	1     Teodor Salparov 1982-08-16
	2        Maksim Botin 1983-07-14
	3   Aleksey Ostapenko 1986-05-26
	4  Yevgeni Sivozhelez 1986-08-08
	5      Sergey Grankin 1987-01-22
	6        Roman Bragin 1987-04-17
	ACTUAL OUTPUT ====

		SELECT Name,
		       Birth_Date
		FROM people
		ORDER BY Name ASC

	                 name        birth_date
	0        Roman Bragin    April 17, 1987
	1     Teodor Salparov   August 16, 1982
	2  Yevgeni Sivozhelez    August 8, 1986
	3    Semen Poltavskiy  February 8, 1981
	4      Sergey Grankin  January 22, 1987
	5        Maksim Botin     July 14, 1983
	6   Aleksey Ostapenko      May 26, 1986
Wrong output for ground truth in instance db2csv/poker_player/0034_dev (4300)
Wrong output for fuzzied solution in instance db2csv/poker_player/0017_dev (4303)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T2.Final_Table_Made

	                   name
	0           Roman Bragi
	1        Sergey Grankin
	2        Sergey Grankin
	3        Sergey Grankin
	4        Sergey Grankin
	5        Teodor Salparo
	6  mxfhcTeodor Salparov
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.people_id AS people_id,
		          LHS.nationality AS nationality,
		          LHS.name AS name,
		          LHS.birth_date AS birth_date,
		          LHS.height AS height,
		          LHS.poker_player_id AS poker_player_id,
		          LHS.final_table_made AS final_table_made,
		          LHS.best_finish AS best_finish,
		          LHS.money_rank AS money_rank,
		          LHS.earnings AS earnings,
		          RHS.poker_player_id AS poker_player_id_other,
		          RHS.final_table_made AS final_table_made_other,
		          RHS.best_finish AS best_finish_other,
		          RHS.money_rank AS money_rank_other,
		          RHS.earnings AS earnings_other
		   FROM
		     (SELECT LHS.people_id AS people_id,
		             LHS.nationality AS nationality,
		             LHS.name AS name,
		             LHS.birth_date AS birth_date,
		             LHS.height AS height,
		             RHS.poker_player_id AS poker_player_id,
		             RHS.final_table_made AS final_table_made,
		             RHS.best_finish AS best_finish,
		             RHS.money_rank AS money_rank,
		             RHS.earnings AS earnings
		      FROM people AS LHS
		      INNER JOIN poker_player AS RHS ON (LHS.people_id = RHS.people_id)) AS LHS
		   INNER JOIN poker_player AS RHS ON (LHS.people_id = RHS.people_id))
		ORDER BY name
		
		

	                   name
	0           Roman Bragi
	1        Sergey Grankin
	2        Sergey Grankin
	3        Sergey Grankin
	4        Sergey Grankin
	5        Sergey Grankin
	6        Sergey Grankin
	7        Teodor Salparo
	8  mxfhcTeodor Salparov
Wrong output for fuzzied solution in instance db2csv/poker_player/0026_dev (4304)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T2.Earnings DESC

	                   name
	0           Roman Bragi
	1        Sergey Grankin
	2        Sergey Grankin
	3        Sergey Grankin
	4        Sergey Grankin
	5        Teodor Salparo
	6  mxfhcTeodor Salparov
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT name
		   FROM people INTERSECT SELECT name
		   FROM
		     (SELECT LHS.people_id AS people_id,
		             LHS.nationality AS nationality,
		             LHS.name AS name,
		             LHS.birth_date AS birth_date,
		             LHS.height AS height,
		             RHS.poker_player_id AS poker_player_id,
		             RHS.final_table_made AS final_table_made,
		             RHS.best_finish AS best_finish,
		             RHS.money_rank AS money_rank,
		             RHS.earnings AS earnings
		      FROM people AS LHS
		      INNER JOIN poker_player AS RHS ON (LHS.people_id = RHS.people_id)))
		ORDER BY name
		
		

	                   name
	0           Roman Bragi
	1        Sergey Grankin
	2        Teodor Salparo
	3  mxfhcTeodor Salparov
No solution for instance db2csv/poker_player/0016_dev (4306)
No solution for instance db2csv/poker_player/0009_dev (4307)
No solution for instance db2csv/poker_player/0008_dev (4309)
Wrong output for base solution in instance db2csv/poker_player/0019_dev (4310)
	EXPECTED OUTPUT ====

		SELECT T1.Birth_Date
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T2.Earnings ASC
		LIMIT 1

	       birth_date
	0  August 8, 1986
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT birth_date
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM poker_player AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY birth_date
		
		

	         birth_date
	0    April 17, 1987
	1  January 22, 1987
Wrong output for fuzzied solution in instance db2csv/poker_player/0006_dev (4311)
	EXPECTED OUTPUT ====

		SELECT Final_Table_Made,
		       Best_Finish
		FROM poker_player

	    final_table_made   best_finish
	0       4.199000e+01  9.800000e-01
	1       4.200000e+01  9.800000e-01
	2       4.862289e+09  9.800000e-01
	3       1.898000e+01  9.900000e-01
	4       1.899000e+01  9.900000e-01
	5       4.202000e+01  9.900000e-01
	6       1.900000e+01  1.000000e+00
	7       1.901000e+01  1.000000e+00
	8       9.980000e+00  1.010000e+00
	9       1.901000e+01  1.010000e+00
	10      1.902000e+01  1.020000e+00
	11      9.990000e+00  1.980000e+00
	12      1.902000e+01  1.980000e+00
	13      9.990000e+00  1.990000e+00
	14      9.270506e+09  1.990000e+00
	15      4.199000e+01  2.310325e+09
	16      4.201000e+01  3.891381e+09
	17      1.900000e+01  7.060938e+09
	ACTUAL OUTPUT ====

		
		SELECT final_table_made,
		       best_finish
		FROM poker_player
		WHERE (best_finish < final_table_made)
		ORDER BY final_table_made
		
		

	    final_table_made  best_finish
	0       4.199000e+01         0.98
	1       4.200000e+01         0.98
	2       4.862289e+09         0.98
	3       1.898000e+01         0.99
	4       1.899000e+01         0.99
	5       4.202000e+01         0.99
	6       1.900000e+01         1.00
	7       1.901000e+01         1.00
	8       9.980000e+00         1.01
	9       1.901000e+01         1.01
	10      1.902000e+01         1.02
	11      9.990000e+00         1.98
	12      1.902000e+01         1.98
	13      9.990000e+00         1.99
	14      9.270506e+09         1.99
Wrong output for fuzzied solution in instance db2csv/poker_player/0004_dev (4313)
	EXPECTED OUTPUT ====

		SELECT Earnings
		FROM poker_player
		ORDER BY Earnings DESC

	    earnings
	0  104871.01
	1  142800.00
	2  142800.00
	3  142800.01
	4  596461.98
	5  596461.98
	6  596462.00
	ACTUAL OUTPUT ====

		
		SELECT earnings
		FROM
		  (SELECT earnings
		   FROM poker_player INTERSECT SELECT earnings
		   FROM poker_player)
		ORDER BY earnings
		
		

	    earnings
	0  104871.01
	1  142800.00
	2  142800.01
	3  596461.98
	4  596462.00
Wrong output for fuzzied solution in instance db2csv/poker_player/0030_dev (4314)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM people
		GROUP BY Nationality
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  nationality
	0       Russi
	ACTUAL OUTPUT ====

		
		SELECT nationality
		FROM
		  (SELECT *
		   FROM
		     (SELECT nationality,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT nationality,
		                COUNT() AS n
		         FROM people
		         GROUP BY nationality)) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT nationality,
		                  COUNT() AS n
		           FROM people
		           GROUP BY nationality) AS RHS
		        WHERE (LHS.nationality = RHS.nationality
		               AND LHS.n = RHS.n) ))
		ORDER BY nationality
		
		

	  nationality
	0    Bulgaria
	1       Russi
No solution for instance db2csv/poker_player/0028_dev (4315)
Wrong output for fuzzied solution in instance db2csv/poker_player/0022_dev (4316)
	EXPECTED OUTPUT ====

		SELECT T2.Money_Rank
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T1.Height DESC
		LIMIT 1

	   money_rank
	0       166.0
	ACTUAL OUTPUT ====

		
		SELECT money_rank
		FROM
		  (SELECT LHS.people_id AS people_id,
		          LHS.nationality AS nationality,
		          LHS.name AS name,
		          LHS.birth_date AS birth_date,
		          LHS.height AS height,
		          LHS.poker_player_id AS poker_player_id,
		          LHS.final_table_made AS final_table_made,
		          LHS.best_finish AS best_finish,
		          LHS.money_rank AS money_rank,
		          LHS.earnings AS earnings
		   FROM
		     (SELECT LHS.people_id AS people_id,
		             LHS.nationality AS nationality,
		             LHS.name AS name,
		             LHS.birth_date AS birth_date,
		             LHS.height AS height,
		             RHS.poker_player_id AS poker_player_id,
		             RHS.final_table_made AS final_table_made,
		             RHS.best_finish AS best_finish,
		             RHS.money_rank AS money_rank,
		             RHS.earnings AS earnings
		      FROM people AS LHS
		      INNER JOIN poker_player AS RHS ON (LHS.people_id = RHS.people_id)) AS LHS
		   INNER JOIN
		     (SELECT MAX(height) AS height
		      FROM people) AS RHS ON (LHS.height = RHS.height))
		ORDER BY money_rank
		
		

	   money_rank
	0       166.0
	1       166.0
Wrong output for fuzzied solution in instance db2csv/poker_player/0031_dev (4319)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM people
		GROUP BY Nationality
		HAVING COUNT(*) >= 2

	  nationality
	0    Bulgaria
	1       Russi
	ACTUAL OUTPUT ====

		
		SELECT nationality
		FROM
		  (SELECT *
		   FROM
		     (SELECT nationality,
		             COUNT() AS n
		      FROM people
		      GROUP BY nationality) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM people AS RHS
		        WHERE (LHS.nationality = RHS.nationality) ))
		WHERE (n > 2)
		ORDER BY nationality
		
		

	Empty DataFrame
	Columns: [nationality]
	Index: []
No solution for instance db2csv/poker_player/0015_dev (4321)
No solution for instance db2csv/poker_player/0010_dev (4322)
Wrong output for base solution in instance db2csv/poker_player/0020_dev (4323)
	EXPECTED OUTPUT ====

		SELECT T1.Birth_Date
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T2.Earnings ASC
		LIMIT 1

	       birth_date
	0  August 8, 1986
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT birth_date
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM poker_player AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY birth_date
		
		

	         birth_date
	0   August 16, 1982
	1    August 8, 1986
	2  February 8, 1981
	3     July 14, 1983
	4      May 26, 1986
Wrong output for fuzzied solution in instance db2csv/poker_player/0025_dev (4324)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T2.Earnings DESC

	                   name
	0           Roman Bragi
	1        Sergey Grankin
	2        Sergey Grankin
	3        Sergey Grankin
	4        Sergey Grankin
	5        Teodor Salparo
	6  mxfhcTeodor Salparov
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM poker_player AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY name
		
		

	                   name
	0           Roman Bragi
	1        Sergey Grankin
	2        Sergey Grankin
	3        Sergey Grankin
	4        Teodor Salparo
	5  mxfhcTeodor Salparov
Wrong output for fuzzied solution in instance db2csv/poker_player/0005_dev (4326)
	EXPECTED OUTPUT ====

		SELECT Final_Table_Made,
		       Best_Finish
		FROM poker_player

	   final_table_made  best_finish
	0             18.98         0.99
	1             25.99         0.99
	2             18.99         1.01
	3             25.99         1.01
	4             25.98         2.01
	5             19.00         2.02
	6             25.99         3.00
	ACTUAL OUTPUT ====

		
		SELECT final_table_made,
		       maxbest_finish AS best_finish
		FROM
		  (SELECT final_table_made,
		          MAX(best_finish) AS maxbest_finish
		   FROM poker_player
		   GROUP BY final_table_made)
		ORDER BY final_table_made
		
		

	   final_table_made  best_finish
	0             18.98         0.99
	1             18.99         1.01
	2             25.98         2.01
	3             19.00         2.02
	4             25.99         3.00
No solution for instance db2csv/poker_player/0032_dev (4327)
Error while executing solution for instance db2csv/museum_visit/0018_dev (4328)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT museum_id AS count___
FROM
  (SELECT museum_id,
          name,
          num_of_staff,
          open_year,
          COUNT(DISTINCT open_year) OVER () AS n_distinct
   FROM
     (SELECT *
      FROM museum
      WHERE (open_year < 2008)))
WHERE (open_year <= 2013)
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Timeout while getting results...


Wrong output for fuzzied solution in instance db2csv/museum_visit/0003_dev (4330)
	EXPECTED OUTPUT ====

		SELECT avg(age)
		FROM visitor
		WHERE Level_of_membership <= 4

	       avg(age)
	0  8.381032e+08
	ACTUAL OUTPUT ====

		
		SELECT meanage AS avg_age_
		FROM
		  (SELECT AVG(age) AS meanage
		   FROM
		     (SELECT *
		      FROM visitor
		      WHERE (level_of_membership < 4)))
		ORDER BY avg_age_
		
		

	       avg_age_
	0  4.355833e+08
Wrong output for fuzzied solution in instance db2csv/museum_visit/0001_dev (4331)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM visitor
		WHERE age < 30

	   count(*)
	0        14
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM visitor
		      WHERE (age <= 30)))
		ORDER BY count___
		
		

	   count___
	0        17
No solution for instance db2csv/museum_visit/0011_dev (4332)
Wrong output for fuzzied solution in instance db2csv/museum_visit/0017_dev (4333)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM visitor
		WHERE id NOT IN
		    (SELECT t2.visitor_id
		     FROM museum AS t1
		     JOIN visit AS t2 ON t1.Museum_ID = t2.Museum_ID
		     WHERE t1.open_year > 2010)

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT visitor_id) AS n_distinct
		   FROM visit)
		WHERE (n_distinct <= 2010)
		ORDER BY count___
		
		

	   count___
	0         4
Wrong output for fuzzied solution in instance db2csv/museum_visit/0016_dev (4334)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM visitor AS t1
		JOIN visit AS t2 ON t1.id = t2.visitor_id
		JOIN museum AS t3 ON t3.Museum_ID = t2.Museum_ID
		WHERE t3.open_year < 2009 INTERSECT
		  SELECT t1.name
		  FROM visitor AS t1
		  JOIN visit AS t2 ON t1.id = t2.visitor_id
		  JOIN museum AS t3 ON t3.Museum_ID = t2.Museum_ID WHERE t3.open_year > 2011

	                  name
	0          Arjen Robbe
	1         Fernando Gag
	2        Fernando Gago
	3  zEAFernando GagoaMf
	ACTUAL OUTPUT ====

		
		SELECT name_other AS name
		FROM
		  (SELECT LHS.museum_id AS museum_id,
		          LHS.name AS name,
		          LHS.num_of_staff AS num_of_staff,
		          LHS.open_year AS open_year,
		          LHS.visitor_id AS visitor_id,
		          LHS.num_of_ticket AS num_of_ticket,
		          LHS.total_spent AS total_spent,
		          RHS.name AS name_other,
		          RHS.level_of_membership AS level_of_membership,
		          RHS.age AS age
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.museum_id AS museum_id,
		                LHS.name AS name,
		                LHS.num_of_staff AS num_of_staff,
		                LHS.open_year AS open_year,
		                RHS.visitor_id AS visitor_id,
		                RHS.num_of_ticket AS num_of_ticket,
		                RHS.total_spent AS total_spent
		         FROM
		           (SELECT *
		            FROM museum
		            WHERE (open_year < 2009)) AS LHS
		         INNER JOIN visit AS RHS ON (LHS.museum_id = RHS.museum_id))
		      WHERE (open_year < 2011)) AS LHS
		   INNER JOIN visitor AS RHS ON (LHS.visitor_id = RHS.id))
		ORDER BY name
		
		

	                   name
	0           Arjen Robbe
	1           Arjen Robbe
	2          Fernando Gag
	3          Fernando Gag
	4         Fernando Gago
	5         Fernando Gago
	6         Fernando Gago
	7         Fernando Gago
	8         Fernando Gago
	9    Fernando GagoFp2tc
	10   Fernando GagoFp2tc
	11  zEAFernando GagoaMf
	12  zEAFernando GagoaMf
	13  zEAFernando GagoaMf
Wrong output for fuzzied solution in instance db2csv/museum_visit/0009_dev (4335)
	EXPECTED OUTPUT ====

		SELECT t1.id,
		       t1.name,
		       t1.age
		FROM visitor AS t1
		JOIN visit AS t2 ON t1.id = t2.visitor_id
		GROUP BY t1.id
		HAVING count(*) > 1

	            id                name         age
	0  -9466258595        Arjen Robben          25
	1   8741403047       Fernando Gago          26
	2  -3219661386        Arjen Robben          27
	3            5       mCn1Zso3BuBIU          28
	4   3822917053        Arjen Robben          36
	5   6940104593      Zb)MaWRmGuzjwW          54
	6    971584405        3dvJA1Lvfe(X          57
	7            0        Arjen Robben          58
	8   8124467644  OgNArjen Robbenf0n  1032097015
	9   8233683612   QmAOuArjen Robben  4802559771
	10  8464608268        Arjen Robben  8104008929
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT id,
		                name,
		                age
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.level_of_membership AS level_of_membership,
		          LHS.age AS age,
		          LHS.n AS n,
		          RHS.museum_id AS museum_id,
		          RHS.num_of_ticket AS num_of_ticket,
		          RHS.total_spent AS total_spent
		   FROM
		     (SELECT *
		      FROM
		        (SELECT id,
		                name,
		                level_of_membership,
		                age,
		                COUNT(*) OVER () AS n
		         FROM visitor)
		      WHERE (n >= 1)) AS LHS
		   INNER JOIN visit AS RHS ON (LHS.id = RHS.visitor_id))
		ORDER BY id
		
		

	            id                 name         age
	0  -9466258595         Arjen Robben          25
	1   2733693572   SKdArjen Robbenngv          26
	2   8741403047        Fernando Gago          26
	3  -3219661386         Arjen Robben          27
	4            6        OzADEWSGa9)r1          27
	5    892917796  FtqFernando GagoZrQ          27
	6            5        mCn1Zso3BuBIU          28
	7   3697836853    Arjen RobbenJITas          28
	8   4425982690          Arjen Robbe          28
	9   4703857200       Zb)MaWRmGuzjwW          28
	10  1430677201        Fernando Gago          30
	11  5437695349         Arjen Robben          34
	12  3867126704   am4ZNFernando Gago          35
	13          -1    4QGy)Arjen Robben          36
	14           2   x4FArjen Robben62g          36
	15  3822917053         Arjen Robben          36
	16  6940104593       Zb)MaWRmGuzjwW          54
	17  4743059202         Arjen Robben          55
	18  8225324064        Fernando Gago          55
	19   795164870         Arjen Robben          56
	20           3    kxG42Arjen Robben          57
	21   971584405         3dvJA1Lvfe(X          57
	22 -3085881973   (SpArjen Robben4Qb          58
	23           0         Arjen Robben          58
	24  8124467644   OgNArjen Robbenf0n  1032097015
	25  7467654820    Arjen RobbenYRQ R  1216986273
	26           4    L(MHuArjen Robben  1265206960
	27  8233683612    QmAOuArjen Robben  4802559771
	28  8464608268         Arjen Robben  8104008929
	29  -497320576         Arjen Robben  8218793882
	30 -7007327847        OzADEWSGa9)r1  8473474501
No solution for instance db2csv/museum_visit/0002_dev (4336)
No solution for instance db2csv/museum_visit/0008_dev (4337)
Wrong output for base solution in instance db2csv/museum_visit/0006_dev (4338)
	EXPECTED OUTPUT ====

	   avg_num_of_staff_
	0          31.333333
	ACTUAL OUTPUT ====

		SELECT avg(num_of_staff)
		FROM museum
		WHERE open_year < 2009

	   avg(num_of_staff)
	0          31.333333
Wrong output for ground truth in instance db2csv/museum_visit/0006_dev (4338)
Wrong output for fuzzied solution in instance db2csv/museum_visit/0004_dev (4339)
	EXPECTED OUTPUT ====

		SELECT name,
		       Level_of_membership
		FROM visitor
		WHERE Level_of_membership > 4
		ORDER BY age DESC

	            name  level_of_membership
	0   Arjen Robben                    6
	1  Fernando Gago                    6
	2   Arjen Robben                    8
	3   Arjen Robben           1110900617
	4   Arjen Robben           2481202040
	5   Arjen Robben           3216455126
	6    Arjen Robbe           4499663745
	7   Arjen Robben           7937446293
	ACTUAL OUTPUT ====

		
		SELECT name,
		       level_of_membership
		FROM
		  (SELECT *
		   FROM visitor
		   WHERE (age > level_of_membership))
		WHERE (level_of_membership > 4)
		ORDER BY name
		
		

	            name  level_of_membership
	0   Arjen Robben                    6
	1  Fernando Gago                    6
	2   Arjen Robben                    8
Wrong output for fuzzied solution in instance db2csv/museum_visit/0013_dev (4340)
	EXPECTED OUTPUT ====

		SELECT t1.name,
		       t1.age
		FROM visitor AS t1
		JOIN visit AS t2 ON t1.id = t2.visitor_id
		ORDER BY t2.num_of_ticket DESC
		LIMIT 1

	                  name  age
	0  PZKFernando Gagocuz   29
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name,
		                age
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.level_of_membership AS level_of_membership,
		          LHS.age AS age,
		          RHS.museum_id AS museum_id,
		          RHS.visitor_id AS visitor_id,
		          RHS.total_spent AS total_spent,
		          RHS.museum_id_other AS museum_id_other,
		          RHS.visitor_id_other AS visitor_id_other,
		          RHS.total_spent_other AS total_spent_other
		   FROM visitor AS LHS
		   INNER JOIN
		     (SELECT museum_id,
		             visitor_id,
		             visitor_id AS num_of_ticket,
		             total_spent,
		             museum_id_other,
		             visitor_id_other,
		             total_spent_other
		      FROM
		        (SELECT LHS.museum_id AS museum_id,
		                LHS.visitor_id AS visitor_id,
		                LHS.num_of_ticket AS num_of_ticket,
		                LHS.total_spent AS total_spent,
		                RHS.museum_id AS museum_id_other,
		                RHS.visitor_id AS visitor_id_other,
		                RHS.total_spent AS total_spent_other
		         FROM visit AS LHS
		         INNER JOIN visit AS RHS ON (LHS.visitor_id = RHS.num_of_ticket))) AS RHS ON (LHS.id = RHS.num_of_ticket))
		ORDER BY name
		
		

	                   name  age
	0   PZKFernando Gagocuz   29
	1  Guti MidfielderBIQ)G   37
	2       mWS9ERaúl Brown   38
Wrong output for base solution in instance db2csv/museum_visit/0007_dev (4342)
	EXPECTED OUTPUT ====

	   num_of_staff  open_year
	0            62       2000
	ACTUAL OUTPUT ====

		SELECT Num_of_Staff,
		       Open_Year
		FROM museum
		WHERE name = 'Plaza Museum'

	   num_of_staff open_year
	0            62      2000
Wrong output for ground truth in instance db2csv/museum_visit/0007_dev (4342)
Wrong output for fuzzied solution in instance db2csv/museum_visit/0015_dev (4343)
	EXPECTED OUTPUT ====

		SELECT sum(t2.Total_spent)
		FROM visitor AS t1
		JOIN visit AS t2 ON t1.id = t2.visitor_id
		WHERE t1.Level_of_membership = 1

	   sum(t2.total_spent)
	0              1510.77
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT SUM(total_spent) OVER () AS sum_t2_total_spent_
		FROM
		  (SELECT id,
		          name,
		          level_of_membership,
		          age,
		          museum_id,
		          num_of_ticket,
		          total_spent,
		          id AS visitor_id
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.name AS name,
		             LHS.level_of_membership AS level_of_membership,
		             LHS.age AS age,
		             RHS.museum_id AS museum_id,
		             RHS.num_of_ticket AS num_of_ticket,
		             RHS.total_spent AS total_spent
		      FROM visitor AS LHS
		      INNER JOIN visit AS RHS ON (LHS.id = RHS.visitor_id)))
		WHERE (level_of_membership <= 1)
		ORDER BY sum_t2_total_spent_
		
		

	   sum_t2_total_spent_
	0              2271.63
Wrong output for base solution in instance db2csv/museum_visit/0010_dev (4344)
	EXPECTED OUTPUT ====

	   visitor_id          name  level_of_membership
	0           3  Arjen Robben                    1
	ACTUAL OUTPUT ====

		SELECT t2.visitor_id,
		       t1.name,
		       t1.Level_of_membership
		FROM visitor AS t1
		JOIN visit AS t2 ON t1.id = t2.visitor_id
		GROUP BY t2.visitor_id
		ORDER BY sum(t2.Total_spent) DESC
		LIMIT 1

	  visitor_id          name  level_of_membership
	0          3  Arjen Robben                    1
Wrong output for ground truth in instance db2csv/museum_visit/0010_dev (4344)
Wrong output for fuzzied solution in instance db2csv/real_estate_properties/0003_dev (4346)
	EXPECTED OUTPUT ====

		SELECT T2.property_type_description
		FROM Properties AS T1
		JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code
		GROUP BY T1.property_type_code

	      property_type_description
	0  Apartment, Flat, Condo, etc.
	1  Apartment, Flat, Condo, etc.
	2          B1EField, Meadow.fy)
	3      Other, to be determined.
	4           QF67VField, Meadow.
	5          Shop, Retail Outlet.
	6           hop, Retail Outlet.
	7    iYlShop, Retail Outlet.ZMY
	8                 ield, Meadow.
	ACTUAL OUTPUT ====

		
		SELECT property_type_description
		FROM ref_property_types
		ORDER BY property_type_description
		
		

	             property_type_description
	0          Apartment, Flat, Condo, etc
	1         Apartment, Flat, Condo, etc.
	2         Apartment, Flat, Condo, etc.
	3         Apartment, Flat, Condo, etc.
	4         Apartment, Flat, Condo, etc.
	5         Apartment, Flat, Condo, etc.
	6         Apartment, Flat, Condo, etc.
	7         Apartment, Flat, Condo, etc.
	8    Apartment, Flat, Condo, etc.O4)0v
	9    Apartment, Flat, Condo, etc.jx5W)
	10                B1EField, Meadow.fy)
	11                       Field, Meadow
	12                      Field, Meadow.
	13                      Field, Meadow.
	14   HEAmJApartment, Flat, Condo, etc.
	15           J6btqShop, Retail Outlet.
	16   OtJiUApartment, Flat, Condo, etc.
	17             Other, to be determined
	18             Other, to be determined
	19            Other, to be determined.
	20            Other, to be determined.
	21            Other, to be determined.
	22            Other, to be determined.
	23            Other, to be determined.
	24            Other, to be determined.
	25            Other, to be determined.
	26                 QF67VField, Meadow.
	27  QsXApartment, Flat, Condo, etc.2go
	28                 Shop, Retail Outlet
	29                Shop, Retail Outlet.
	30                Shop, Retail Outlet.
	31                Shop, Retail Outlet.
	32                Shop, Retail Outlet.
	33           Shop, Retail Outlet.JwkUR
	34           Shop, Retail Outlet.f1xzD
	35       VeVj9Other, to be determined.
	36                 hop, Retail Outlet.
	37                 hop, Retail Outlet.
	38          iYlShop, Retail Outlet.ZMY
	39                       ield, Meadow.
	40                 p9IqtField, Meadow.
	41   pcx)lApartment, Flat, Condo, etc.
Wrong output for fuzzied solution in instance db2csv/real_estate_properties/0004_dev (4349)
	EXPECTED OUTPUT ====

		SELECT property_name
		FROM Properties
		WHERE property_type_code = "House"
		UNION
		SELECT property_name
		FROM Properties
		WHERE property_type_code = "Apartment"
		  AND room_count > 1

	  property_name
	0     riverside
	ACTUAL OUTPUT ====

		
		SELECT `property_name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `properties`
		      WHERE (`room_count` >= 1)) AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT *
		              FROM `properties`
		              WHERE (`property_type_code` != 'Apartment'))
		           WHERE (`property_type_code` != 'House')) AS RHS
		        WHERE (LHS.agreed_selling_price = RHS.agreed_selling_price
		               AND LHS.room_count = RHS.room_count) ))
		ORDER BY property_name
		
		

	Empty DataFrame
	Columns: [property_name]
	Index: []
Wrong output for fuzzied solution in instance db2csv/flight_2/0027_dev (4350)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS
		WHERE DestAirport = "ATO"

	   count(*)
	0         6
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT LHS.city AS city,
		             LHS.airportcode AS airportcode,
		             LHS.airportname AS airportname,
		             LHS.country AS country,
		             LHS.countryabbrev AS countryabbrev,
		             RHS.uid AS UID,
		             RHS.airline AS airline,
		             RHS.abbreviation AS abbreviation
		      FROM airports AS LHS
		      INNER JOIN airlines AS RHS ON (LHS.country = RHS.country)))
		ORDER BY count___
		
		

	   count___
	0         0
No solution for instance db2csv/flight_2/0060_dev (4351)
Wrong output for fuzzied solution in instance db2csv/flight_2/0063_dev (4352)
	EXPECTED OUTPUT ====

		SELECT T1.Airline
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline
		GROUP BY T1.Airline
		HAVING count(*) > 10

	Empty DataFrame
	Columns: [airline]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT airline
		FROM
		  (SELECT LHS.uid AS UID,
		          LHS.airline AS airline,
		          LHS.abbreviation AS abbreviation,
		          LHS.country AS country,
		          RHS.n_distinct AS n_distinct
		   FROM airlines AS LHS
		   CROSS JOIN
		     (SELECT COUNT(DISTINCT flightno) AS n_distinct
		      FROM flights) AS RHS)
		WHERE (n_distinct > 10)
		ORDER BY airline
		
		

	              airline
	0  Allegiant AirFZjIj
	1  Allegiant Airu4)1C
	2   Northwest Airline
	3  Northwest Airlines
	4  Northwest Airlines
	5  Northwest Airlines
	6        llegiant Air
	7        llegiant Air
No solution for instance db2csv/flight_2/0021_dev (4353)
No solution for instance db2csv/flight_2/0058_dev (4354)
Wrong output for fuzzied solution in instance db2csv/flight_2/0018_dev (4355)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM AIRLINES
		WHERE Country = "USA"

	   count(*)
	0         6
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `airline`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM `airlines`
		      WHERE (`country` = 'USA')))
		ORDER BY count___
		
		

	   count___
	0         4
No solution for instance db2csv/flight_2/0033_dev (4356)
Wrong output for base solution in instance db2csv/flight_2/0039_dev (4357)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid
		WHERE T1.Airline = "United Airlines"
		  AND T2.SourceAirport = "AHD"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`city` AS `city`,
		          `LHS`.`airportcode` AS `airportcode`,
		          `LHS`.`airportname` AS `airportname`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`countryabbrev` AS `countryabbrev`,
		          `LHS`.`uid` AS `uid`,
		          `LHS`.`airline` AS `airline`,
		          `LHS`.`abbreviation` AS `abbreviation`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`city` AS `city`,
		             `LHS`.`airportcode` AS `airportcode`,
		             `LHS`.`airportname` AS `airportname`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`countryabbrev` AS `countryabbrev`,
		             `RHS`.`uid` AS `uid`,
		             `RHS`.`airline` AS `airline`,
		             `RHS`.`abbreviation` AS `abbreviation`
		      FROM `airports` AS `LHS`
		      INNER JOIN `airlines` AS `RHS` ON (`LHS`.`country` = `RHS`.`country`)) AS `LHS`
		   CROSS JOIN
		     (SELECT COUNT() AS `n`
		      FROM `flights`
		      WHERE (`airline` = 'United Airlines')) AS RHS)
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance db2csv/flight_2/0029_dev (4358)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode
		WHERE T2.City = "Aberdeen"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT city) AS n_distinct
		   FROM
		     (SELECT LHS.airline AS airline,
		             LHS.flightno AS flightno,
		             LHS.sourceairport AS sourceairport,
		             LHS.destairport AS destairport,
		             LHS.city AS city,
		             LHS.airportcode AS airportcode,
		             LHS.airportname AS airportname,
		             LHS.country AS country,
		             LHS.countryabbrev AS countryabbrev,
		             RHS.airline_other AS airline_other,
		             RHS.flightno_other AS flightno_other
		      FROM
		        (SELECT LHS.airline AS airline,
		                LHS.flightno AS flightno,
		                LHS.sourceairport AS sourceairport,
		                LHS.destairport AS destairport,
		                RHS.city AS city,
		                RHS.airportcode AS airportcode,
		                RHS.airportname AS airportname,
		                RHS.country AS country,
		                RHS.countryabbrev AS countryabbrev
		         FROM flights AS LHS
		         CROSS JOIN airports AS RHS) AS LHS
		      INNER JOIN
		        (SELECT airline,
		                flightno,
		                destairport AS sourceairport,
		                destairport,
		                airline_other,
		                flightno_other
		         FROM
		           (SELECT airline,
		                   flightno,
		                   sourceairport,
		                   sourceairport AS destairport,
		                   airline_other,
		                   flightno_other
		            FROM
		              (SELECT LHS.airline AS airline,
		                      LHS.flightno AS flightno,
		                      LHS.sourceairport AS sourceairport,
		                      LHS.destairport AS destairport,
		                      RHS.airline AS airline_other,
		                      RHS.flightno AS flightno_other
		               FROM flights AS LHS
		               INNER JOIN flights AS RHS ON (LHS.sourceairport = RHS.destairport
		                                                AND LHS.destairport = RHS.sourceairport)))) AS RHS ON (LHS.airline = RHS.airline
		                                                                                                       AND LHS.flightno = RHS.flightno
		                                                                                                       AND LHS.sourceairport = RHS.sourceairport
		                                                                                                       AND LHS.destairport = RHS.destairport)))
		ORDER BY count___
		
		

	   count___
	0        10
No solution for instance db2csv/flight_2/0054_dev (4359)
No solution for instance db2csv/flight_2/0048_dev (4360)
Wrong output for base solution in instance db2csv/flight_2/0037_dev (4361)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid
		WHERE T1.Airline = "United Airlines"
		  AND T2.DestAirport = "ASY"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT `LHS`.`uid` AS `uid`,
		          `LHS`.`airline` AS `airline`,
		          `LHS`.`abbreviation` AS `abbreviation`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`city` AS `city`,
		          `LHS`.`airportcode` AS `airportcode`,
		          `LHS`.`airportname` AS `airportname`,
		          `LHS`.`countryabbrev` AS `countryabbrev`,
		          `RHS`.`n_distinct` AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`uid` AS `uid`,
		             `LHS`.`airline` AS `airline`,
		             `LHS`.`abbreviation` AS `abbreviation`,
		             `LHS`.`country` AS `country`,
		             `RHS`.`city` AS `city`,
		             `RHS`.`airportcode` AS `airportcode`,
		             `RHS`.`airportname` AS `airportname`,
		             `RHS`.`countryabbrev` AS `countryabbrev`
		      FROM `airlines` AS `LHS`
		      INNER JOIN `airports` AS `RHS` ON (`LHS`.`country` = `RHS`.`country`)) AS `LHS`
		   CROSS JOIN
		     (SELECT COUNT(DISTINCT `airline`) AS `n_distinct`
		      FROM `flights`
		      WHERE (`airline` = 'United Airlines')) AS RHS)
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for base solution in instance db2csv/flight_2/0038_dev (4363)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid
		WHERE T1.Airline = "United Airlines"
		  AND T2.DestAirport = "ASY"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT `LHS`.`city` AS `city`,
		          `LHS`.`airportcode` AS `airportcode`,
		          `LHS`.`airportname` AS `airportname`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`countryabbrev` AS `countryabbrev`,
		          `LHS`.`uid` AS `uid`,
		          `LHS`.`airline` AS `airline`,
		          `LHS`.`abbreviation` AS `abbreviation`,
		          `RHS`.`n_distinct` AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`city` AS `city`,
		             `LHS`.`airportcode` AS `airportcode`,
		             `LHS`.`airportname` AS `airportname`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`countryabbrev` AS `countryabbrev`,
		             `RHS`.`uid` AS `uid`,
		             `RHS`.`airline` AS `airline`,
		             `RHS`.`abbreviation` AS `abbreviation`
		      FROM `airports` AS `LHS`
		      INNER JOIN `airlines` AS `RHS` ON (`LHS`.`country` = `RHS`.`country`)) AS `LHS`
		   CROSS JOIN
		     (SELECT COUNT(DISTINCT `airline`) AS `n_distinct`
		      FROM `flights`
		      WHERE (`airline` = 'United Airlines')) AS RHS)
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance db2csv/flight_2/0036_dev (4364)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRLINES AS T2 ON T1.Airline = T2.uid
		WHERE T2.Airline = "JetBlue Airways"

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT `sourceairport`
		      FROM `flights`
		      WHERE (`airline` != 'JetBlue Airways') INTERSECT
		        SELECT sourceairport
		        FROM flights))
		ORDER BY count___
		
		

	   count___
	0        38
No solution for instance db2csv/flight_2/0053_dev (4366)
No solution for instance db2csv/flight_2/0078_dev (4367)
Wrong output for fuzzied solution in instance db2csv/flight_2/0001_dev (4368)
	EXPECTED OUTPUT ====

		SELECT Country
		FROM AIRLINES
		WHERE Airline = "JetBlue Airways"

	    country
	0  USAw9Rpc
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `country`
		FROM
		  (SELECT *
		   FROM `airlines`
		   WHERE (`airline` != 'JetBlue Airways'))
		WHERE (`airline` != 'JetBlue Airways')
		ORDER BY country
		
		

	    country
	0  QF67VUSA
	1        SA
	2       USA
	3  USAjx5W)
	4  p9IqtUSA
No solution for instance db2csv/flight_2/0034_dev (4369)
No solution for instance db2csv/flight_2/0073_dev (4370)
No solution for instance db2csv/flight_2/0061_dev (4371)
Wrong output for fuzzied solution in instance db2csv/flight_2/0064_dev (4372)
	EXPECTED OUTPUT ====

		SELECT T1.Airline
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline
		GROUP BY T1.Airline
		HAVING count(*) > 10

	Empty DataFrame
	Columns: [airline]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT airline
		FROM
		  (SELECT LHS.uid AS UID,
		          LHS.airline AS airline,
		          LHS.abbreviation AS abbreviation,
		          LHS.country AS country,
		          RHS.n AS n
		   FROM airlines AS LHS
		   CROSS JOIN
		     (SELECT *
		      FROM
		        (SELECT COUNT() AS n
		         FROM flights)
		      WHERE (n >= 10)) AS RHS)
		ORDER BY airline
		
		

	              airline
	0  Allegiant AirFZjIj
	1  Allegiant Airu4)1C
	2   Northwest Airline
	3  Northwest Airlines
	4  Northwest Airlines
	5  Northwest Airlines
	6        llegiant Air
	7        llegiant Air
No solution for instance db2csv/flight_2/0043_dev (4373)
Wrong output for base solution in instance db2csv/flight_2/0042_dev (4375)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode
		JOIN AIRLINES AS T3 ON T3.uid = T1.Airline
		WHERE T2.City = "Aberdeen"
		  AND T3.Airline = "United Airlines"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`uid` AS `uid`,
		          `LHS`.`airline` AS `airline`,
		          `LHS`.`abbreviation` AS `abbreviation`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`city` AS `city`,
		          `LHS`.`airportcode` AS `airportcode`,
		          `LHS`.`airportname` AS `airportname`,
		          `LHS`.`countryabbrev` AS `countryabbrev`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`uid` AS `uid`,
		             `LHS`.`airline` AS `airline`,
		             `LHS`.`abbreviation` AS `abbreviation`,
		             `LHS`.`country` AS `country`,
		             `RHS`.`city` AS `city`,
		             `RHS`.`airportcode` AS `airportcode`,
		             `RHS`.`airportname` AS `airportname`,
		             `RHS`.`countryabbrev` AS `countryabbrev`
		      FROM `airlines` AS `LHS`
		      INNER JOIN `airports` AS `RHS` ON (`LHS`.`country` = `RHS`.`country`)) AS `LHS`
		   CROSS JOIN
		     (SELECT COUNT() AS `n`
		      FROM `flights`
		      WHERE (`airline` = 'United Airlines')) AS RHS)
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance db2csv/flight_2/0024_dev (4376)
No solution for instance db2csv/flight_2/0062_dev (4378)
No solution for instance db2csv/flight_2/0077_dev (4379)
Wrong output for fuzzied solution in instance db2csv/flight_2/0066_dev (4380)
	EXPECTED OUTPUT ====

		SELECT T1.Airline
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline
		GROUP BY T1.Airline
		HAVING count(*) < 200

	              airline
	0  Northwest Airlines
	1        llegiant Air
	ACTUAL OUTPUT ====

		
		SELECT airline
		FROM
		  (SELECT LHS.uid AS UID,
		          LHS.airline AS airline,
		          LHS.abbreviation AS abbreviation,
		          LHS.country AS country,
		          LHS.meanflightno AS meanflightno
		   FROM
		     (SELECT LHS.uid AS UID,
		             LHS.airline AS airline,
		             LHS.abbreviation AS abbreviation,
		             LHS.country AS country,
		             RHS.meanflightno AS meanflightno
		      FROM airlines AS LHS
		      CROSS JOIN
		        (SELECT AVG(flightno) AS meanflightno
		         FROM flights) AS RHS) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT AVG(flightno) AS meanflightno
		         FROM flights)
		      WHERE (meanflightno != 200.0)) AS RHS ON (LHS.meanflightno = RHS.meanflightno))
		ORDER BY airline
		
		

	              airline
	0  Allegiant AirFZjIj
	1  Allegiant Airu4)1C
	2   Northwest Airline
	3  Northwest Airlines
	4  Northwest Airlines
	5  Northwest Airlines
	6        llegiant Air
	7        llegiant Air
No solution for instance db2csv/flight_2/0049_dev (4381)
No solution for instance db2csv/flight_2/0026_dev (4382)
No solution for instance db2csv/flight_2/0045_dev (4383)
Wrong output for fuzzied solution in instance db2csv/flight_2/0035_dev (4384)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRLINES AS T2 ON T1.Airline = T2.uid
		WHERE T2.Airline = "JetBlue Airways"

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT `destairport`
		      FROM `flights`
		      WHERE (`airline` != 'JetBlue Airways') INTERSECT
		        SELECT destairport
		        FROM flights))
		ORDER BY count___
		
		

	   count___
	0        38
No solution for instance db2csv/flight_2/0055_dev (4389)
No solution for instance db2csv/flight_2/0046_dev (4390)
No solution for instance db2csv/flight_2/0057_dev (4391)
No solution for instance db2csv/flight_2/0074_dev (4392)
No solution for instance db2csv/flight_2/0008_dev (4393)
Wrong output for base solution in instance db2csv/flight_2/0041_dev (4394)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode
		JOIN AIRLINES AS T3 ON T3.uid = T1.Airline
		WHERE T2.City = "Aberdeen"
		  AND T3.Airline = "United Airlines"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT `LHS`.`city` AS `city`,
		          `LHS`.`airportcode` AS `airportcode`,
		          `LHS`.`airportname` AS `airportname`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`countryabbrev` AS `countryabbrev`,
		          `LHS`.`uid` AS `uid`,
		          `LHS`.`airline` AS `airline`,
		          `LHS`.`abbreviation` AS `abbreviation`,
		          `RHS`.`n_distinct` AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`city` AS `city`,
		             `LHS`.`airportcode` AS `airportcode`,
		             `LHS`.`airportname` AS `airportname`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`countryabbrev` AS `countryabbrev`,
		             `RHS`.`uid` AS `uid`,
		             `RHS`.`airline` AS `airline`,
		             `RHS`.`abbreviation` AS `abbreviation`
		      FROM `airports` AS `LHS`
		      INNER JOIN `airlines` AS `RHS` ON (`LHS`.`country` = `RHS`.`country`)) AS `LHS`
		   CROSS JOIN
		     (SELECT COUNT(DISTINCT `airline`) AS `n_distinct`
		      FROM `flights`
		      WHERE (`airline` = 'United Airlines')) AS RHS)
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance db2csv/flight_2/0019_dev (4395)
No solution for instance db2csv/flight_2/0047_dev (4396)
Wrong output for base solution in instance db2csv/flight_2/0052_dev (4398)
	EXPECTED OUTPUT ====

	           airline
	0  AirTran Airways
	ACTUAL OUTPUT ====

		SELECT T1.Airline
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline
		GROUP BY T1.Airline
		ORDER BY count(*) DESC
		LIMIT 1

	          airline
	0  Virgin America
Wrong output for ground truth in instance db2csv/flight_2/0052_dev (4398)
No solution for instance db2csv/flight_2/0075_dev (4399)
Wrong output for fuzzied solution in instance db2csv/flight_2/0040_dev (4400)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid
		WHERE T1.Airline = "United Airlines"
		  AND T2.SourceAirport = "AHD"

	   count(*)
	0         3
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `airline`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM `flights`
		      WHERE (`airline` = 'United Airlines')))
		ORDER BY count___
		
		

	   count___
	0         0
No solution for instance db2csv/flight_2/0071_dev (4401)
No solution for instance db2csv/flight_2/0069_dev (4402)
Wrong output for fuzzied solution in instance db2csv/flight_2/0004_dev (4403)
	EXPECTED OUTPUT ====

		SELECT Abbreviation
		FROM AIRLINES
		WHERE Airline = "JetBlue Airways"

	     abbreviation
	0        0zJZ3laB
	1           Delta
	2           Delta
	3           Delta
	4           Delta
	5     O70DeltawQF
	6        UALL8L9i
	7        UALSFAgW
	8          Virgin
	9          Virgin
	10          irgin
	11  yToTvAQu03vYU
	ACTUAL OUTPUT ====

		
		SELECT `abbreviation`
		FROM
		  (SELECT `abbreviation`
		   FROM `airlines` INTERSECT SELECT `abbreviation`
		   FROM `airlines`
		   WHERE (`airline` = 'JetBlue Airways'))
		ORDER BY abbreviation
		
		

	    abbreviation
	0       0zJZ3laB
	1          Delta
	2    O70DeltawQF
	3       UALL8L9i
	4       UALSFAgW
	5         Virgin
	6          irgin
	7  yToTvAQu03vYU
No solution for instance db2csv/flight_2/0076_dev (4405)
Wrong output for fuzzied solution in instance db2csv/flight_2/0030_dev (4406)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode
		WHERE T2.City = "Aberdeen"

	   count(*)
	0        12
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT country
		      FROM airlines INTERSECT SELECT country
		      FROM airports))
		ORDER BY count___
		
		

	   count___
	0         0
No solution for instance db2csv/flight_2/0028_dev (4407)
No solution for instance db2csv/flight_2/0059_dev (4408)
Wrong output for base solution in instance db2csv/flight_2/0051_dev (4409)
	EXPECTED OUTPUT ====

	           airline
	0  AirTran Airways
	ACTUAL OUTPUT ====

		SELECT T1.Airline
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline
		GROUP BY T1.Airline
		ORDER BY count(*) DESC
		LIMIT 1

	          airline
	0  Virgin America
Wrong output for ground truth in instance db2csv/flight_2/0051_dev (4409)
Wrong output for fuzzied solution in instance db2csv/flight_2/0079_dev (4411)
	EXPECTED OUTPUT ====

		SELECT AirportName
		FROM Airports
		WHERE AirportCode NOT IN
		    (SELECT SourceAirport
		     FROM Flights
		     UNION SELECT DestAirport
		     FROM Flights)

	Empty DataFrame
	Columns: [airportname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT airportname
		FROM airports
		ORDER BY airportname
		
		

	         airportname
	0         Anita Bay 
	1         Anita Bay 
	2         Anita Bay 
	3    Anita Bay Bl)T2
	4            Ashley 
	5         Municipal 
	6         Municipal 
	7         Municipal 
	8   RfyMunicipal vho
	9          nita Bay 
	10         nita Bay 
	11            shley 
	12         unicipal 
No solution for instance db2csv/flight_2/0031_dev (4414)
No solution for instance db2csv/flight_2/0072_dev (4415)
No solution for instance db2csv/flight_2/0007_dev (4416)
No solution for instance db2csv/flight_2/0044_dev (4419)
No solution for instance db2csv/flight_2/0056_dev (4421)
No solution for instance db2csv/flight_2/0020_dev (4422)
No solution for instance db2csv/flight_2/0025_dev (4423)
Wrong output for fuzzied solution in instance db2csv/flight_2/0080_dev (4424)
	EXPECTED OUTPUT ====

		SELECT AirportName
		FROM Airports
		WHERE AirportCode NOT IN
		    (SELECT SourceAirport
		     FROM Flights
		     UNION SELECT DestAirport
		     FROM Flights)

	Empty DataFrame
	Columns: [airportname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT airportname
		FROM airports
		ORDER BY airportname
		
		

	         airportname
	0         Anita Bay 
	1         Anita Bay 
	2         Anita Bay 
	3    Anita Bay Bl)T2
	4            Ashley 
	5         Municipal 
	6         Municipal 
	7         Municipal 
	8   RfyMunicipal vho
	9          nita Bay 
	10         nita Bay 
	11            shley 
	12         unicipal 
No solution for instance db2csv/flight_2/0070_dev (4425)
No solution for instance db2csv/flight_2/0023_dev (4426)
No solution for instance db2csv/flight_2/0050_dev (4427)
No solution for instance db2csv/flight_2/0032_dev (4429)
Error while executing solution for instance db2csv/wta_1/0027_dev (4430)

(sqlite3.OperationalError) Could not decode to UTF-8 column 'last_name' with text 'Treyes Albarrac��N'
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while checking ground truth in instance db2csv/wta_1/0027_dev (4430)
No solution for instance db2csv/wta_1/0060_dev (4431)
Wrong output for fuzzied solution in instance db2csv/wta_1/0021_dev (4432)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM matches
		WHERE YEAR = 2013
		  OR YEAR = 2016

	   count(*)
	0        35
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM matches
		      WHERE (YEAR <= 2016)))
		WHERE (n != 2013)
		ORDER BY count___
		
		

	   count___
	0        71
No solution for instance db2csv/wta_1/0058_dev (4433)
No solution for instance db2csv/wta_1/0018_dev (4434)
Wrong output for fuzzied solution in instance db2csv/wta_1/0033_dev (4435)
	EXPECTED OUTPUT ====

		SELECT YEAR
		FROM matches
		GROUP BY YEAR
		ORDER BY count(*) DESC
		LIMIT 1

	   year
	0  2018
	ACTUAL OUTPUT ====

		
		SELECT YEAR
		FROM
		  (SELECT YEAR,
		          n,
		          n AS maxn,
		          year_other
		   FROM
		     (SELECT LHS.year AS YEAR,
		             LHS.n AS n,
		             LHS.maxn AS maxn,
		             RHS.year AS year_other
		      FROM
		        (SELECT YEAR,
		                n,
		                MAX(n) OVER () AS maxn
		         FROM
		           (SELECT YEAR,
		                   COUNT() AS n
		            FROM matches
		            GROUP BY YEAR)) AS LHS
		      INNER JOIN
		        (SELECT YEAR,
		                n,
		                MAX(n) OVER () AS maxn
		         FROM
		           (SELECT YEAR,
		                   COUNT() AS n
		            FROM matches
		            GROUP BY YEAR)) AS RHS ON (LHS.n = RHS.maxn
		                                       AND LHS.maxn = RHS.n)))
		ORDER BY YEAR
		
		

	   year
	0  2016
	1  2016
	2  2018
	3  2018
Wrong output for fuzzied solution in instance db2csv/wta_1/0039_dev (4436)
	EXPECTED OUTPUT ====

		SELECT winner_name,
		       loser_name
		FROM matches
		ORDER BY minutes DESC
		LIMIT 1

	             winner_name                loser_name
	0  Angelique Kerber9OFuj  Anastasia Pavlyuchenkova
	ACTUAL OUTPUT ====

		
		SELECT winner_name,
		       loser_name
		FROM
		  (SELECT best_of,
		          draw_size,
		          loser_age,
		          loser_entry,
		          loser_hand,
		          loser_ht,
		          loser_id,
		          loser_ioc,
		          loser_name,
		          loser_rank,
		          loser_rank_points,
		          loser_seed,
		          match_num,
		          minutes,
		          round,
		          score,
		          surface,
		          tourney_date,
		          tourney_id,
		          tourney_level,
		          tourney_name,
		          winner_age,
		          winner_entry,
		          winner_hand,
		          winner_ht,
		          winner_id,
		          winner_ioc,
		          winner_name,
		          winner_rank,
		          winner_rank_points,
		          winner_seed,
		          YEAR,
		          minutes AS maxminutes,
		          best_of_other,
		          draw_size_other,
		          loser_age_other,
		          loser_entry_other,
		          loser_hand_other,
		          loser_ht_other,
		          loser_id_other,
		          loser_ioc_other,
		          loser_name_other,
		          loser_rank_other,
		          loser_rank_points_other,
		          loser_seed_other,
		          match_num_other,
		          round_other,
		          score_other,
		          surface_other,
		          tourney_date_other,
		          tourney_id_other,
		          tourney_level_other,
		          tourney_name_other,
		          winner_age_other,
		          winner_entry_other,
		          winner_hand_other,
		          winner_ht_other,
		          winner_id_other,
		          winner_ioc_other,
		          winner_name_other,
		          winner_rank_other,
		          winner_rank_points_other,
		          winner_seed_other,
		          year_other
		   FROM
		     (SELECT LHS.best_of AS best_of,
		             LHS.draw_size AS draw_size,
		             LHS.loser_age AS loser_age,
		             LHS.loser_entry AS loser_entry,
		             LHS.loser_hand AS loser_hand,
		             LHS.loser_ht AS loser_ht,
		             LHS.loser_id AS loser_id,
		             LHS.loser_ioc AS loser_ioc,
		             LHS.loser_name AS loser_name,
		             LHS.loser_rank AS loser_rank,
		             LHS.loser_rank_points AS loser_rank_points,
		             LHS.loser_seed AS loser_seed,
		             LHS.match_num AS match_num,
		             LHS.minutes AS minutes,
		             LHS.round AS round,
		             LHS.score AS score,
		             LHS.surface AS surface,
		             LHS.tourney_date AS tourney_date,
		             LHS.tourney_id AS tourney_id,
		             LHS.tourney_level AS tourney_level,
		             LHS.tourney_name AS tourney_name,
		             LHS.winner_age AS winner_age,
		             LHS.winner_entry AS winner_entry,
		             LHS.winner_hand AS winner_hand,
		             LHS.winner_ht AS winner_ht,
		             LHS.winner_id AS winner_id,
		             LHS.winner_ioc AS winner_ioc,
		             LHS.winner_name AS winner_name,
		             LHS.winner_rank AS winner_rank,
		             LHS.winner_rank_points AS winner_rank_points,
		             LHS.winner_seed AS winner_seed,
		             LHS.year AS YEAR,
		             LHS.maxminutes AS maxminutes,
		             RHS.best_of AS best_of_other,
		             RHS.draw_size AS draw_size_other,
		             RHS.loser_age AS loser_age_other,
		             RHS.loser_entry AS loser_entry_other,
		             RHS.loser_hand AS loser_hand_other,
		             RHS.loser_ht AS loser_ht_other,
		             RHS.loser_id AS loser_id_other,
		             RHS.loser_ioc AS loser_ioc_other,
		             RHS.loser_name AS loser_name_other,
		             RHS.loser_rank AS loser_rank_other,
		             RHS.loser_rank_points AS loser_rank_points_other,
		             RHS.loser_seed AS loser_seed_other,
		             RHS.match_num AS match_num_other,
		             RHS.round AS round_other,
		             RHS.score AS score_other,
		             RHS.surface AS surface_other,
		             RHS.tourney_date AS tourney_date_other,
		             RHS.tourney_id AS tourney_id_other,
		             RHS.tourney_level AS tourney_level_other,
		             RHS.tourney_name AS tourney_name_other,
		             RHS.winner_age AS winner_age_other,
		             RHS.winner_entry AS winner_entry_other,
		             RHS.winner_hand AS winner_hand_other,
		             RHS.winner_ht AS winner_ht_other,
		             RHS.winner_id AS winner_id_other,
		             RHS.winner_ioc AS winner_ioc_other,
		             RHS.winner_name AS winner_name_other,
		             RHS.winner_rank AS winner_rank_other,
		             RHS.winner_rank_points AS winner_rank_points_other,
		             RHS.winner_seed AS winner_seed_other,
		             RHS.year AS year_other
		      FROM
		        (SELECT best_of,
		                draw_size,
		                loser_age,
		                loser_entry,
		                loser_hand,
		                loser_ht,
		                loser_id,
		                loser_ioc,
		                loser_name,
		                loser_rank,
		                loser_rank_points,
		                loser_seed,
		                match_num,
		                minutes,
		                round,
		                score,
		                surface,
		                tourney_date,
		                tourney_id,
		                tourney_level,
		                tourney_name,
		                winner_age,
		                winner_entry,
		                winner_hand,
		                winner_ht,
		                winner_id,
		                winner_ioc,
		                winner_name,
		                winner_rank,
		                winner_rank_points,
		                winner_seed,
		                YEAR,
		                MAX(minutes) OVER () AS maxminutes
		         FROM matches) AS LHS
		      INNER JOIN
		        (SELECT best_of,
		                draw_size,
		                loser_age,
		                loser_entry,
		                loser_hand,
		                loser_ht,
		                loser_id,
		                loser_ioc,
		                loser_name,
		                loser_rank,
		                loser_rank_points,
		                loser_seed,
		                match_num,
		                minutes,
		                round,
		                score,
		                surface,
		                tourney_date,
		                tourney_id,
		                tourney_level,
		                tourney_name,
		                winner_age,
		                winner_entry,
		                winner_hand,
		                winner_ht,
		                winner_id,
		                winner_ioc,
		                winner_name,
		                winner_rank,
		                winner_rank_points,
		                winner_seed,
		                YEAR,
		                MAX(minutes) OVER () AS maxminutes
		         FROM matches) AS RHS ON (LHS.minutes = RHS.maxminutes
		                                     AND LHS.maxminutes = RHS.minutes)))
		ORDER BY winner_name
		
		

	              winner_name                     loser_name
	0   Angelique Kerber9OFuj       Anastasia Pavlyuchenkova
	1   Angelique Kerber9OFuj       Anastasia Pavlyuchenkova
	2   Angelique Kerber9OFuj       Anastasia Pavlyuchenkova
	3   Angelique Kerber9OFuj       Anastasia Pavlyuchenkova
	4    QNC9VSerena Williams       Anastasia Pavlyuchenkova
	5    QNC9VSerena Williams       Anastasia Pavlyuchenkova
	6    QNC9VSerena Williams       Anastasia Pavlyuchenkova
	7    QNC9VSerena Williams       Anastasia Pavlyuchenkova
	8         Serena Williams       Anastasia Pavlyuchenkova
	9         Serena Williams       Anastasia Pavlyuchenkova
	10        Serena Williams       Anastasia Pavlyuchenkova
	11        Serena Williams       Anastasia Pavlyuchenkova
	12        ngelique Kerber  P0QIdAnastasia Pavlyuchenkova
	13        ngelique Kerber  P0QIdAnastasia Pavlyuchenkova
	14        ngelique Kerber  P0QIdAnastasia Pavlyuchenkova
	15        ngelique Kerber  P0QIdAnastasia Pavlyuchenkova
No solution for instance db2csv/wta_1/0048_dev (4439)
Wrong output for fuzzied solution in instance db2csv/wta_1/0037_dev (4440)
	EXPECTED OUTPUT ====

		SELECT winner_name
		FROM matches
		WHERE tourney_name = 'Australian Open'
		ORDER BY winner_rank_points DESC
		LIMIT 1

	       winner_name
	0  Serena Williams
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `winner_name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `matches`
		      WHERE (`tourney_name` != 'Australian Open')) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT MAX(winner_rank_points) AS winner_rank_points
		           FROM matches) AS RHS
		        WHERE (LHS.winner_rank_points = RHS.winner_rank_points) ))
		ORDER BY winner_name
		
		

	            winner_name
	0  Serena Williamstr5wt
Wrong output for fuzzied solution in instance db2csv/wta_1/0038_dev (4442)
	EXPECTED OUTPUT ====

		SELECT winner_name
		FROM matches
		WHERE tourney_name = 'Australian Open'
		ORDER BY winner_rank_points DESC
		LIMIT 1

	       winner_name
	0  Serena Williams
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `winner_name`
		FROM
		  (SELECT *
		   FROM `matches` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `matches`
		           WHERE (`tourney_name` != 'Australian Open')) AS RHS
		        WHERE (LHS.winner_id = RHS.winner_id
		               AND LHS.year = RHS.year) ))
		ORDER BY winner_name
		
		

	            winner_name
	0  83zYsSerena Williams
	1   AQuPetra Kvitova03v
	2   Agnieszka Radwanska
	3      Angelique Kerber
	4       Serena Williams
	5  Serena WilliamsYYodv
	6    gnieszka Radwanska
	7    hB2BzPetra Kvitova
	8       ngelique Kerber
Wrong output for base solution in instance db2csv/wta_1/0036_dev (4443)
	EXPECTED OUTPUT ====

	        winner_name  winner_rank_points
	0  Angelique Kerber                7340
	ACTUAL OUTPUT ====

		SELECT winner_name,
		       winner_rank_points
		FROM matches
		GROUP BY winner_name
		ORDER BY count(*) DESC
		LIMIT 1

	        winner_name  winner_rank_points
	0  Angelique Kerber                3715
Wrong output for ground truth in instance db2csv/wta_1/0036_dev (4443)
No solution for instance db2csv/wta_1/0053_dev (4445)
Wrong output for fuzzied solution in instance db2csv/wta_1/0034_dev (4447)
	EXPECTED OUTPUT ====

		SELECT YEAR
		FROM matches
		GROUP BY YEAR
		ORDER BY count(*) DESC
		LIMIT 1

	   year
	0  2018
	ACTUAL OUTPUT ====

		
		SELECT YEAR
		FROM
		  (SELECT LHS.year AS YEAR,
		          LHS.n AS n
		   FROM
		     (SELECT YEAR,
		             COUNT() AS n
		      FROM matches
		      GROUP BY YEAR) AS LHS
		   INNER JOIN
		     (SELECT MAX(n) AS maxn
		      FROM
		        (SELECT YEAR,
		                COUNT() AS n
		         FROM matches
		         GROUP BY YEAR)) AS RHS ON (LHS.n = RHS.maxn))
		ORDER BY YEAR
		
		

	   year
	0  2016
	1  2018
Wrong output for base solution in instance db2csv/wta_1/0061_dev (4448)
	EXPECTED OUTPUT ====

	   count___ hand
	0       487    L
	1       954  NaN
	2      5028    R
	3     14193    U
	ACTUAL OUTPUT ====

		SELECT count(*),
		       hand
		FROM players
		GROUP BY hand

	   count(*) hand
	0       487    L
	1       954     
	2      5028    R
	3     14193    U
Wrong output for ground truth in instance db2csv/wta_1/0061_dev (4448)
No solution for instance db2csv/wta_1/0043_dev (4449)
Wrong output for base solution in instance db2csv/wta_1/0042_dev (4451)
	EXPECTED OUTPUT ====

	      avg_ranking_ first_name
	0        14.654295     Serena
	1        32.984863      Venus
	2        82.131124         Na
	3        95.034660     Kimiko
	4       114.055714        Jie
	...            ...        ...
	1575   1281.846154  Chanikarn
	1576   1332.073770    Micaela
	1577   1382.153846     Beauty
	1578   1397.500000  Olawaseun
	1579   1493.000000   Damilola
	
	[1580 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT avg(ranking),
		       T1.first_name
		FROM players AS T1
		JOIN rankings AS T2 ON T1.player_id = T2.player_id
		GROUP BY T1.first_name

	      avg(ranking) first_name
	0        14.654295     Serena
	1        32.984863      Venus
	2        82.131124         Na
	3        95.034660     Kimiko
	4       114.055714        Jie
	...            ...        ...
	1575   1281.846154  Chanikarn
	1576   1332.073770    Micaela
	1577   1382.153846     Beauty
	1578   1397.500000  Olawaseun
	1579   1493.000000   Damilola
	
	[1580 rows x 2 columns]
Wrong output for ground truth in instance db2csv/wta_1/0042_dev (4451)
No solution for instance db2csv/wta_1/0024_dev (4452)
No solution for instance db2csv/wta_1/0017_dev (4453)
Wrong output for base solution in instance db2csv/wta_1/0062_dev (4454)
	EXPECTED OUTPUT ====

	   count___ hand
	0       487    L
	1       954  NaN
	2      5028    R
	3     14193    U
	ACTUAL OUTPUT ====

		SELECT count(*),
		       hand
		FROM players
		GROUP BY hand

	   count(*) hand
	0       487    L
	1       954     
	2      5028    R
	3     14193    U
Wrong output for ground truth in instance db2csv/wta_1/0062_dev (4454)
No solution for instance db2csv/wta_1/0049_dev (4455)
No solution for instance db2csv/wta_1/0026_dev (4456)
No solution for instance db2csv/wta_1/0045_dev (4457)
Wrong output for base solution in instance db2csv/wta_1/0035_dev (4458)
	EXPECTED OUTPUT ====

	        winner_name  winner_rank_points
	0  Angelique Kerber                7340
	ACTUAL OUTPUT ====

		SELECT winner_name,
		       winner_rank_points
		FROM matches
		GROUP BY winner_name
		ORDER BY count(*) DESC
		LIMIT 1

	        winner_name  winner_rank_points
	0  Angelique Kerber                3715
Wrong output for ground truth in instance db2csv/wta_1/0035_dev (4458)
Wrong output for base solution in instance db2csv/wta_1/0009_dev (4460)
	EXPECTED OUTPUT ====

	   avg_winner_rank_
	0         13.715827
	ACTUAL OUTPUT ====

		SELECT avg(winner_rank)
		FROM matches

	   avg(winner_rank)
	0         13.715827
Wrong output for ground truth in instance db2csv/wta_1/0009_dev (4460)
No solution for instance db2csv/wta_1/0055_dev (4462)
Wrong output for fuzzied solution in instance db2csv/wta_1/0057_dev (4464)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT winner_name)
		FROM matches
		WHERE tourney_name = 'WTA Championships'
		  AND winner_hand = 'L'

	   count(distinct winner_name)
	0                            4
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count_distinct_winner_name_`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT `year`
		      FROM `matches` INTERSECT SELECT `year`
		      FROM `matches`
		      WHERE (`tourney_name` != 'WTA Championships')))
		ORDER BY count_distinct_winner_name_
		
		

	   count_distinct_winner_name_
	0                            5
Timeout while getting results...


Wrong output for base solution in instance db2csv/wta_1/0041_dev (4466)
	EXPECTED OUTPUT ====

	      avg_ranking_ first_name
	0        14.654295     Serena
	1        32.984863      Venus
	2        82.131124         Na
	3        95.034660     Kimiko
	4       114.055714        Jie
	...            ...        ...
	1575   1281.846154  Chanikarn
	1576   1332.073770    Micaela
	1577   1382.153846     Beauty
	1578   1397.500000  Olawaseun
	1579   1493.000000   Damilola
	
	[1580 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT avg(ranking),
		       T1.first_name
		FROM players AS T1
		JOIN rankings AS T2 ON T1.player_id = T2.player_id
		GROUP BY T1.first_name

	      avg(ranking) first_name
	0        14.654295     Serena
	1        32.984863      Venus
	2        82.131124         Na
	3        95.034660     Kimiko
	4       114.055714        Jie
	...            ...        ...
	1575   1281.846154  Chanikarn
	1576   1332.073770    Micaela
	1577   1382.153846     Beauty
	1578   1397.500000  Olawaseun
	1579   1493.000000   Damilola
	
	[1580 rows x 2 columns]
Wrong output for ground truth in instance db2csv/wta_1/0041_dev (4466)
No solution for instance db2csv/wta_1/0019_dev (4467)
No solution for instance db2csv/wta_1/0047_dev (4468)
Wrong output for base solution in instance db2csv/wta_1/0006_dev (4469)
	EXPECTED OUTPUT ====

	     first_name  birth_date
	0       Pauline  19190806.0
	1      Gertrude  19230908.0
	2         Betty  19250415.0
	3         Doris  19250620.0
	4       Dorothy  19250703.0
	...         ...         ...
	2212        NaN         NaN
	2213        NaN         NaN
	2214        NaN         NaN
	2215        NaN         NaN
	2216        NaN         NaN
	
	[2217 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT first_name,
		       birth_date
		FROM players
		WHERE country_code = 'USA'

	     first_name birth_date
	0       Pauline   19190806
	1      Gertrude   19230908
	2         Betty   19250415
	3         Doris   19250620
	4       Dorothy   19250703
	...         ...        ...
	2212   Victoria           
	2213       Vija           
	2214   Virginia           
	2215      Wendy           
	2216      Wendy           
	
	[2217 rows x 2 columns]
Wrong output for ground truth in instance db2csv/wta_1/0006_dev (4469)
No solution for instance db2csv/wta_1/0052_dev (4470)
Wrong output for fuzzied solution in instance db2csv/wta_1/0040_dev (4471)
	EXPECTED OUTPUT ====

		SELECT winner_name,
		       loser_name
		FROM matches
		ORDER BY minutes DESC
		LIMIT 1

	             winner_name                loser_name
	0  Angelique Kerber9OFuj  Anastasia Pavlyuchenkova
	ACTUAL OUTPUT ====

		
		SELECT winner_name,
		       loser_name
		FROM
		  (SELECT *
		   FROM matches AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT MAX(minutes) AS minutes
		           FROM matches) AS RHS
		        WHERE (LHS.minutes = RHS.minutes) ))
		ORDER BY winner_name
		
		

	             winner_name                     loser_name
	0  Angelique Kerber9OFuj       Anastasia Pavlyuchenkova
	1   QNC9VSerena Williams       Anastasia Pavlyuchenkova
	2        Serena Williams       Anastasia Pavlyuchenkova
	3        ngelique Kerber  P0QIdAnastasia Pavlyuchenkova
No solution for instance db2csv/wta_1/0004_dev (4472)
Error while executing solution for instance db2csv/wta_1/0028_dev (4474)

(sqlite3.OperationalError) Could not decode to UTF-8 column 'last_name' with text 'Treyes Albarrac��N'
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while checking ground truth in instance db2csv/wta_1/0028_dev (4474)
No solution for instance db2csv/wta_1/0059_dev (4475)
No solution for instance db2csv/wta_1/0051_dev (4476)
No solution for instance db2csv/wta_1/0022_dev (4477)
No solution for instance db2csv/wta_1/0014_dev (4479)
No solution for instance db2csv/wta_1/0031_dev (4480)
Wrong output for base solution in instance db2csv/wta_1/0010_dev (4483)
	EXPECTED OUTPUT ====

	   avg_winner_rank_
	0         13.715827
	ACTUAL OUTPUT ====

		SELECT avg(winner_rank)
		FROM matches

	   avg(winner_rank)
	0         13.715827
Wrong output for ground truth in instance db2csv/wta_1/0010_dev (4483)
No solution for instance db2csv/wta_1/0044_dev (4484)
No solution for instance db2csv/wta_1/0056_dev (4485)
No solution for instance db2csv/wta_1/0020_dev (4486)
No solution for instance db2csv/wta_1/0025_dev (4487)
No solution for instance db2csv/wta_1/0023_dev (4488)
No solution for instance db2csv/wta_1/0050_dev (4489)
Wrong output for base solution in instance db2csv/wta_1/0005_dev (4490)
	EXPECTED OUTPUT ====

	     first_name  birth_date
	0       Pauline  19190806.0
	1      Gertrude  19230908.0
	2         Betty  19250415.0
	3         Doris  19250620.0
	4       Dorothy  19250703.0
	...         ...         ...
	2212        NaN         NaN
	2213        NaN         NaN
	2214        NaN         NaN
	2215        NaN         NaN
	2216        NaN         NaN
	
	[2217 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT first_name,
		       birth_date
		FROM players
		WHERE country_code = 'USA'

	     first_name birth_date
	0       Pauline   19190806
	1      Gertrude   19230908
	2         Betty   19250415
	3         Doris   19250620
	4       Dorothy   19250703
	...         ...        ...
	2212   Victoria           
	2213       Vija           
	2214   Virginia           
	2215      Wendy           
	2216      Wendy           
	
	[2217 rows x 2 columns]
Wrong output for ground truth in instance db2csv/wta_1/0005_dev (4490)
No solution for instance db2csv/wta_1/0032_dev (4491)
No solution for instance db2csv/singer/0021_dev (4493)
Wrong output for fuzzied solution in instance db2csv/singer/0029_dev (4495)
	EXPECTED OUTPUT ====

		SELECT Citizenship
		FROM singer
		WHERE Birth_Year < 1945 INTERSECT
		  SELECT Citizenship
		  FROM singer WHERE Birth_Year > 1955

	Empty DataFrame
	Columns: [citizenship]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT citizenship
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM singer AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM song AS RHS
		           WHERE (LHS.singer_id = RHS.singer_id) ))
		   WHERE (birth_year >= 1955.0))
		WHERE (birth_year != 1945.0)
		ORDER BY citizenship
		
		

	          citizenship
	0  United StatesBl)T2
No solution for instance db2csv/singer/0012_dev (4496)
No solution for instance db2csv/singer/0001_dev (4498)
No solution for instance db2csv/singer/0011_dev (4499)
No solution for instance db2csv/singer/0024_dev (4500)
Wrong output for fuzzied solution in instance db2csv/singer/0016_dev (4503)
	EXPECTED OUTPUT ====

		select citizenship
		from singer
		group by citizenship
		order by count(*) desc
		limit 1

	  citizenship
	0      ermany
	ACTUAL OUTPUT ====

		
		SELECT citizenship
		FROM
		  (SELECT LHS.citizenship AS citizenship,
		          LHS.n AS n
		   FROM
		     (SELECT citizenship,
		             COUNT() AS n
		      FROM singer
		      GROUP BY citizenship) AS LHS
		   INNER JOIN
		     (SELECT MAX(n) AS maxn
		      FROM
		        (SELECT citizenship,
		                COUNT() AS n
		         FROM singer
		         GROUP BY citizenship)) AS RHS ON (LHS.n = RHS.maxn))
		ORDER BY citizenship
		
		

	          citizenship
	0  1yvwgUnited States
	1              France
	2             Germany
	3        United State
	4       United States
	5  United StatesBt9VI
	6  United StateswO sw
	7              ermany
Wrong output for fuzzied solution in instance db2csv/singer/0009_dev (4504)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM singer
		WHERE Birth_Year = 1948
		  OR Birth_Year = 1949

	                    name
	0           Alice Walton
	1         Christy Walton
	2        Jacqueline Mars
	3        Susanne Klatten
	4  TghSusanne Klattenl2R
	5    UDCpWChristy Walton
	6     iliane Bettencourt
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.singer_id AS singer_id,
		          LHS.name AS name,
		          LHS.birth_year AS birth_year,
		          LHS.net_worth_millions AS net_worth_millions,
		          LHS.citizenship AS citizenship
		   FROM
		     (SELECT *
		      FROM singer
		      WHERE (birth_year >= 1948.0)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM singer
		         WHERE (birth_year >= 1948.0))
		      WHERE (birth_year <= 1949.0)) AS RHS ON (LHS.singer_id = RHS.singer_id
		                                               AND LHS.name = RHS.name
		                                               AND LHS.birth_year = RHS.birth_year
		                                               AND LHS.net_worth_millions = RHS.net_worth_millions
		                                               AND LHS.citizenship = RHS.citizenship))
		ORDER BY name
		
		

	                    name
	0           Alice Walton
	1           Alice Walton
	2         Christy Walton
	3         Christy Walton
	4    Christy WaltonmtCM2
	5        Jacqueline Mars
	6        Susanne Klatten
	7  TghSusanne Klattenl2R
	8    UDCpWChristy Walton
	9     iliane Bettencourt
No solution for instance db2csv/singer/0002_dev (4505)
Wrong output for fuzzied solution in instance db2csv/singer/0030_dev (4510)
	EXPECTED OUTPUT ====

		SELECT Citizenship
		FROM singer
		WHERE Birth_Year < 1945 INTERSECT
		  SELECT Citizenship
		  FROM singer WHERE Birth_Year > 1955

	Empty DataFrame
	Columns: [citizenship]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT citizenship
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM singer AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM song AS RHS
		           WHERE (LHS.singer_id = RHS.singer_id) ))
		   WHERE (birth_year >= 1955.0))
		WHERE (birth_year > 1945.0)
		ORDER BY citizenship
		
		

	          citizenship
	0  United StatesBl)T2
No solution for instance db2csv/singer/0022_dev (4512)
No solution for instance db2csv/singer/0013_dev (4513)
No solution for instance db2csv/singer/0014_dev (4514)
No solution for instance db2csv/singer/0015_dev (4516)
Wrong output for fuzzied solution in instance db2csv/singer/0010_dev (4517)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM singer
		WHERE Birth_Year = 1948
		  OR Birth_Year = 1949

	                    name
	0           Alice Walton
	1         Christy Walton
	2        Jacqueline Mars
	3        Susanne Klatten
	4  TghSusanne Klattenl2R
	5    UDCpWChristy Walton
	6     iliane Bettencourt
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM singer
		   WHERE (birth_year >= 1948.0))
		WHERE (birth_year <= 1949.0)
		ORDER BY name
		
		

	                    name
	0           Alice Walton
	1           Alice Walton
	2         Christy Walton
	3         Christy Walton
	4    Christy WaltonmtCM2
	5        Jacqueline Mars
	6        Susanne Klatten
	7  TghSusanne Klattenl2R
	8    UDCpWChristy Walton
	9     iliane Bettencourt
No solution for instance db2csv/singer/0023_dev (4520)
Wrong output for base solution in instance db2csv/tvshow/0060_dev (4523)
	EXPECTED OUTPUT ====

	     id
	0   701
	1   703
	2   705
	3   706
	4   708
	5   709
	6   713
	7   714
	8   715
	9   717
	10  719
	ACTUAL OUTPUT ====

		SELECT id
		FROM TV_Channel
		EXCEPT
		SELECT channel
		FROM cartoon
		WHERE directed_by = 'Ben Jones'

	     id
	0   701
	1   703
	2   705
	3   706
	4   708
	5   709
	6   713
	7   714
	8   715
	9   717
	10  719
Wrong output for ground truth in instance db2csv/tvshow/0060_dev (4523)
Wrong output for fuzzied solution in instance db2csv/tvshow/0021_dev (4524)
	EXPECTED OUTPUT ====

		SELECT LANGUAGE,
		       count(*)
		FROM TV_Channel
		GROUP BY LANGUAGE
		ORDER BY count(*) ASC
		LIMIT 1;

	  language  count(*)
	0   Italia         1
	ACTUAL OUTPUT ====

		
		SELECT LANGUAGE,
		       n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT LANGUAGE,
		             COUNT() AS n
		      FROM tv_channel
		      GROUP BY LANGUAGE) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT id,
		                  series_name,
		                  country,
		                  MIN(LANGUAGE) OVER () AS LANGUAGE,
		                                     content,
		                                     pixel_aspect_ratio_par,
		                                     hight_definition_tv,
		                                     pay_per_view_ppv,
		                                     package_option
		           FROM tv_channel) AS RHS
		        WHERE (LHS.language = RHS.language) ))
		ORDER BY LANGUAGE
		
		

	  language  count___
	0  English         4
Wrong output for base solution in instance db2csv/tvshow/0058_dev (4525)
	EXPECTED OUTPUT ====

	    id
	0  728
	ACTUAL OUTPUT ====

		SELECT id
		FROM tv_channel
		GROUP BY country
		HAVING count(*) > 2

	    id
	0  700
Wrong output for ground truth in instance db2csv/tvshow/0058_dev (4525)
Wrong output for base solution in instance db2csv/tvshow/0018_dev (4526)
	EXPECTED OUTPUT ====

		SELECT Package_Option
		FROM TV_Channel
		WHERE series_name = "Sky Radio";

	  package_option
	0   Sky Famiglia
	ACTUAL OUTPUT ====

		
		SELECT `pixel_aspect_ratio_par` AS `package_option`
		FROM
		  (SELECT *
		   FROM `tv_channel`
		   WHERE (`series_name` = 'Sky Radio'))
		WHERE (`series_name` = 'Sky Radio')
		ORDER BY package_option
		
		

	  package_option
	0            4:3
Timeout while getting results...


Error while executing solution for instance db2csv/tvshow/0033_dev (4527)

(sqlite3.OperationalError) no such column: LHS.col_18_49_rating_share
[SQL: 
SELECT DISTINCT SHARE AS max_share_,
                         minshare AS min_share_
FROM
  (SELECT LHS.id AS id,
          LHS.episode AS episode,
          LHS.air_date AS air_date,
          LHS.rating AS rating,
          LHS.share AS SHARE,
          LHS.col_18_49_rating_share AS col_18_49_rating_share,
          LHS.viewers_m AS viewers_m,
          LHS.weekly_rank AS weekly_rank,
          LHS.channel AS channel,
          LHS.title AS title,
          LHS.directed_by AS directed_by,
          LHS.written_by AS written_by,
          LHS.original_air_date AS original_air_date,
          LHS.production_code AS production_code,
          RHS.minshare AS minshare
   FROM
     (SELECT LHS.id AS id,
             LHS.episode AS episode,
             LHS.air_date AS air_date,
             LHS.rating AS rating,
             LHS.share AS SHARE,
             LHS.col_18_49_rating_share AS col_18_49_rating_share,
             LHS.viewers_m AS viewers_m,
             LHS.weekly_rank AS weekly_rank,
             LHS.channel AS channel,
             RHS.title AS title,
             RHS.directed_by AS directed_by,
             RHS.written_by AS written_by,
             RHS.original_air_date AS original_air_date,
             RHS.production_code AS production_code
      FROM tv_series AS LHS
      INNER JOIN cartoon AS RHS ON (LHS.id = RHS.id
                                       AND LHS.channel = RHS.channel)) AS LHS
   CROSS JOIN
     (SELECT MIN(SHARE) AS minshare
      FROM tv_series) AS RHS)
ORDER BY max_share_

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance db2csv/tvshow/0039_dev (4528)

(sqlite3.OperationalError) no such column: RHS.col_18_49_rating_share
[SQL: 
SELECT `series_name`
FROM
  (SELECT `id`,
          `series_name`,
          `country`,
          `language`,
          `content`,
          `pixel_aspect_ratio_par`,
          `hight_definition_tv`,
          `pay_per_view_ppv`,
          `package_option`,
          `id_other`,
          `episode`,
          `air_date`,
          `rating`,
          `share`,
          `col_18_49_rating_share`,
          `viewers_m`,
          `weekly_rank`,
          `id` AS `channel`
   FROM
     (SELECT `LHS`.`id` AS `id`,
             `LHS`.`series_name` AS `series_name`,
             `LHS`.`country` AS `country`,
             `LHS`.`language` AS `language`,
             `LHS`.`content` AS `content`,
             `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
             `LHS`.`hight_definition_tv` AS `hight_definition_tv`,
             `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
             `LHS`.`package_option` AS `package_option`,
             `RHS`.`id` AS `id_other`,
             `RHS`.`episode` AS `episode`,
             `RHS`.`air_date` AS `air_date`,
             `RHS`.`rating` AS `rating`,
             `RHS`.`share` AS `share`,
             `RHS`.`col_18_49_rating_share` AS `col_18_49_rating_share`,
             `RHS`.`viewers_m` AS `viewers_m`,
             `RHS`.`weekly_rank` AS `weekly_rank`
      FROM `tv_channel` AS `LHS`
      INNER JOIN `tv_series` AS `RHS` ON (`LHS`.`id` = `RHS`.`channel`)))
WHERE (`episode` = 'A Love of a Lifetime')
ORDER BY series_name

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance db2csv/tvshow/0054_dev (4530)
Wrong output for base solution in instance db2csv/tvshow/0048_dev (4531)
	EXPECTED OUTPUT ====

		SELECT package_option,
		       series_name
		FROM TV_Channel
		WHERE hight_definition_TV = "yes"

	          package_option  series_name
	0  Sky Famiglia + Sky HD  MTV Live HD
	ACTUAL OUTPUT ====

		
		SELECT pixel_aspect_ratio_par AS package_option,
		       series_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM tv_channel
		      ORDER BY package_option DESC)
		   LIMIT 1)
		
		

	  package_option series_name
	0           16:9   MTV Music
Wrong output for fuzzied solution in instance db2csv/tvshow/0037_dev (4532)
	EXPECTED OUTPUT ====

		SELECT Weekly_Rank
		FROM TV_series
		WHERE Episode = "A Love of a Lifetime";

	   weekly_rank
	0        61.00
	1        61.02
	2        65.00
	3        65.00
	4        70.98
	5        70.99
	6        71.00
	ACTUAL OUTPUT ====

		
		SELECT `weekly_rank`
		FROM
		  (SELECT `weekly_rank`
		   FROM `tv_series`
		   WHERE (`episode` = 'A Love of a Lifetime') INTERSECT
		     SELECT weekly_rank
		     FROM tv_series)
		ORDER BY weekly_rank
		
		

	   weekly_rank
	0        61.00
	1        61.02
	2        65.00
	3        70.98
	4        70.99
	5        71.00
Wrong output for base solution in instance db2csv/tvshow/0012_dev (4533)
	EXPECTED OUTPUT ====

		SELECT Country,
		       count(*)
		FROM TV_Channel
		GROUP BY Country
		ORDER BY count(*) DESC
		LIMIT 1;

	  country  count(*)
	0   Italy        12
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT pixel_aspect_ratio_par AS country,
		                n AS count___
		FROM
		  (SELECT LHS.id AS id,
		          LHS.series_name AS series_name,
		          LHS.country AS country,
		          LHS.language AS LANGUAGE,
		          LHS.content AS content,
		          LHS.pixel_aspect_ratio_par AS pixel_aspect_ratio_par,
		          LHS.hight_definition_tv AS hight_definition_tv,
		          LHS.pay_per_view_ppv AS pay_per_view_ppv,
		          LHS.package_option AS package_option,
		          RHS.n AS n
		   FROM tv_channel AS LHS
		   CROSS JOIN
		     (SELECT COUNT() AS n
		      FROM tv_series) AS RHS)
		ORDER BY country
		
		

	      country  count___
	0        16:9        12
	1         4:3        12
	2  4:3 / 16:9        12
Wrong output for base solution in instance db2csv/tvshow/0036_dev (4535)
	EXPECTED OUTPUT ====

		SELECT Air_Date
		FROM TV_series
		WHERE Episode = "A Love of a Lifetime";

	             air_date
	0  September 24, 2007
	ACTUAL OUTPUT ====

		
		SELECT `air_date`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `tv_series`
		      WHERE (`episode` = 'A Love of a Lifetime')) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM tv_series AS RHS
		        WHERE (LHS.air_date = RHS.air_date
		               AND LHS.episode = RHS.episode) ))
		ORDER BY air_date
		
		

	Empty DataFrame
	Columns: [air_date]
	Index: []
No solution for instance db2csv/tvshow/0053_dev (4537)
Error while executing solution for instance db2csv/tvshow/0034_dev (4539)

(sqlite3.OperationalError) no such column: LHS.col_18_49_rating_share
[SQL: 
SELECT DISTINCT SHARE AS max_share_,
                         minshare AS min_share_
FROM
  (SELECT LHS.id AS id,
          LHS.episode AS episode,
          LHS.air_date AS air_date,
          LHS.rating AS rating,
          LHS.share AS SHARE,
          LHS.col_18_49_rating_share AS col_18_49_rating_share,
          LHS.viewers_m AS viewers_m,
          LHS.weekly_rank AS weekly_rank,
          LHS.channel AS channel,
          LHS.title AS title,
          LHS.directed_by AS directed_by,
          LHS.written_by AS written_by,
          LHS.original_air_date AS original_air_date,
          LHS.production_code AS production_code,
          RHS.minshare AS minshare
   FROM
     (SELECT LHS.id AS id,
             LHS.episode AS episode,
             LHS.air_date AS air_date,
             LHS.rating AS rating,
             LHS.share AS SHARE,
             LHS.col_18_49_rating_share AS col_18_49_rating_share,
             LHS.viewers_m AS viewers_m,
             LHS.weekly_rank AS weekly_rank,
             LHS.channel AS channel,
             RHS.title AS title,
             RHS.directed_by AS directed_by,
             RHS.written_by AS written_by,
             RHS.original_air_date AS original_air_date,
             RHS.production_code AS production_code
      FROM tv_series AS LHS
      INNER JOIN cartoon AS RHS ON (LHS.id = RHS.id
                                       AND LHS.channel = RHS.channel)) AS LHS
   CROSS JOIN
     (SELECT MIN(SHARE) AS minshare
      FROM tv_series) AS RHS)
ORDER BY max_share_

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/tvshow/0061_dev (4540)
	EXPECTED OUTPUT ====

		SELECT package_option
		FROM TV_Channel
		WHERE id NOT IN
		    (SELECT channel
		     FROM cartoon
		     WHERE directed_by = 'Ben Jones')

	       package_option
	0   N2)TPSky Famiglia
	1              Option
	2         Sky Famigli
	3         Sky Famigli
	4         Sky Famigli
	5        Sky Famiglia
	6        Sky Famiglia
	7        Sky Famiglia
	8        Sky Famiglia
	9        Sky Famiglia
	10       Sky Famiglia
	11  Sky Famiglia3cv)u
	12  q9Bp2Sky Famiglia
	13  v6fImSky Famiglia
	14        z6 NvOption
	15  zING4Sky Famiglia
	ACTUAL OUTPUT ====

		
		SELECT `package_option`
		FROM
		  (SELECT *
		   FROM `tv_channel` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT `id`,
		                  `series_name`,
		                  `country`,
		                  `language`,
		                  `content`,
		                  `pixel_aspect_ratio_par`,
		                  `hight_definition_tv`,
		                  `pay_per_view_ppv`,
		                  `package_option`,
		                  `id_other`,
		                  `title`,
		                  `directed_by`,
		                  `written_by`,
		                  `original_air_date`,
		                  `production_code`,
		                  `id` AS `channel`
		           FROM
		             (SELECT `LHS`.`id` AS `id`,
		                     `LHS`.`series_name` AS `series_name`,
		                     `LHS`.`country` AS `country`,
		                     `LHS`.`language` AS `language`,
		                     `LHS`.`content` AS `content`,
		                     `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
		                     `LHS`.`hight_definition_tv` AS `hight_definition_tv`,
		                     `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
		                     `LHS`.`package_option` AS `package_option`,
		                     `RHS`.`id` AS `id_other`,
		                     `RHS`.`title` AS `title`,
		                     `RHS`.`directed_by` AS `directed_by`,
		                     `RHS`.`written_by` AS `written_by`,
		                     `RHS`.`original_air_date` AS `original_air_date`,
		                     `RHS`.`production_code` AS `production_code`
		              FROM `tv_channel` AS `LHS`
		              INNER JOIN
		                (SELECT *
		                 FROM `cartoon`
		                 WHERE (`directed_by` = 'Ben Jones')) AS RHS ON (LHS.id = RHS.channel))) AS RHS
		        WHERE (LHS.package_option = RHS.package_option
		               AND LHS.series_name = RHS.series_name) ))
		ORDER BY package_option
		
		

	       package_option
	0   N2)TPSky Famiglia
	1              Option
	2         Sky Famigli
	3         Sky Famigli
	4         Sky Famigli
	5        Sky Famiglia
	6        Sky Famiglia
	7        Sky Famiglia
	8        Sky Famiglia
	9   Sky Famiglia3cv)u
	10  q9Bp2Sky Famiglia
	11  v6fImSky Famiglia
	12        z6 NvOption
	13  zING4Sky Famiglia
Wrong output for fuzzied solution in instance db2csv/tvshow/0011_dev (4542)
	EXPECTED OUTPUT ====

		SELECT Country,
		       count(*)
		FROM TV_Channel
		GROUP BY Country
		ORDER BY count(*) DESC
		LIMIT 1;

	  country  count(*)
	0   Italy        32
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT MIN(country) OVER () AS country,
		                                  maxn AS count___
		FROM
		  (SELECT country,
		          n,
		          MAX(n) OVER () AS maxn
		   FROM
		     (SELECT country,
		             COUNT() AS n
		      FROM tv_channel
		      GROUP BY country))
		ORDER BY country
		
		

	      country  count___
	0  0MFqJItaly        32
Error while executing solution for instance db2csv/tvshow/0042_dev (4543)

(sqlite3.OperationalError) no such column: LHS.col_18_49_rating_share
[SQL: 
SELECT `episode`
FROM
  (SELECT `LHS`.`id` AS `id`,
          `LHS`.`episode` AS `episode`,
          `LHS`.`air_date` AS `air_date`,
          `LHS`.`rating` AS `rating`,
          `LHS`.`share` AS `share`,
          `LHS`.`col_18_49_rating_share` AS `col_18_49_rating_share`,
          `LHS`.`viewers_m` AS `viewers_m`,
          `LHS`.`weekly_rank` AS `weekly_rank`,
          `LHS`.`channel` AS `channel`,
          `RHS`.`series_name` AS `series_name`,
          `RHS`.`country` AS `country`,
          `RHS`.`language` AS `language`,
          `RHS`.`content` AS `content`,
          `RHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
          `RHS`.`hight_definition_tv` AS `hight_definition_tv`,
          `RHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
          `RHS`.`package_option` AS `package_option`
   FROM `tv_series` AS `LHS`
   INNER JOIN
     (SELECT *
      FROM `tv_channel`
      WHERE (`series_name` = 'Sky Radio')) AS RHS ON (LHS.channel = RHS.id))
ORDER BY episode

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for base solution in instance db2csv/tvshow/0017_dev (4545)
	EXPECTED OUTPUT ====

		SELECT Package_Option
		FROM TV_Channel
		WHERE series_name = "Sky Radio";

	  package_option
	0   Sky Famiglia
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `pixel_aspect_ratio_par` AS `package_option`
		FROM `tv_channel`
		WHERE (`series_name` != 'Sky Radio')
		ORDER BY package_option
		
		

	  package_option
	0           16:9
	1            4:3
	2     4:3 / 16:9
Wrong output for base solution in instance db2csv/tvshow/0045_dev (4549)
	EXPECTED OUTPUT ====

	   production_code  channel
	0            102.0      701
	ACTUAL OUTPUT ====

		select production_code,
		       channel
		from cartoon
		order by original_air_date desc
		limit 1

	   production_code channel
	0            102.0     701
Wrong output for ground truth in instance db2csv/tvshow/0045_dev (4549)
Wrong output for fuzzied solution in instance db2csv/tvshow/0016_dev (4551)
	EXPECTED OUTPUT ====

		SELECT Content
		FROM TV_Channel
		WHERE series_name = "Sky Radio";

	  content
	0   music
	1   music
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `content`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`series_name` AS `series_name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`language` AS `language`,
		          `LHS`.`content` AS `content`,
		          `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
		          `LHS`.`hight_definition_tv` AS `hight_definition_tv`,
		          `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
		          `LHS`.`package_option` AS `package_option`,
		          `RHS`.`series_name` AS `series_name_other`,
		          `RHS`.`country` AS `country_other`,
		          `RHS`.`language` AS `language_other`,
		          `RHS`.`content` AS `content_other`,
		          `RHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par_other`,
		          `RHS`.`hight_definition_tv` AS `hight_definition_tv_other`,
		          `RHS`.`pay_per_view_ppv` AS `pay_per_view_ppv_other`,
		          `RHS`.`package_option` AS `package_option_other`
		   FROM
		     (SELECT *
		      FROM `tv_channel`
		      WHERE (`series_name` != 'Sky Radio')) AS LHS
		   INNER JOIN tv_channel AS RHS ON (LHS.id = RHS.id))
		ORDER BY content
		
		

	        content
	0     towRmusic
	1    2mzI8music
	2    4vVgVmusic
	3    AzisEmusic
	4   ey4music9XL
	5   h3umusicAZ6
	6    knmXrmusic
	7          musi
	8         music
	9    musicaRp1W
	10   musicnpOO(
	11   musicqxND1
	12  r5emusic47P
	13         usic
	14  vZ1music8)t
Wrong output for base solution in instance db2csv/tvshow/0055_dev (4554)
	EXPECTED OUTPUT ====

	   pixel_aspect_ratio_par country
	0                     NaT   Italy
	1                     NaT   Italy
	2                     NaT   Italy
	3                     NaT   Italy
	4                     NaT   Italy
	5                     NaT   Italy
	6                     NaT   Italy
	7                     NaT   Italy
	8                     NaT   Italy
	9                     NaT   Italy
	10                    NaT   Italy
	11                    NaT   Italy
	ACTUAL OUTPUT ====

		SELECT Pixel_aspect_ratio_PAR,
		       country
		FROM tv_channel
		WHERE LANGUAGE != 'English'

	   pixel_aspect_ratio_par country
	0                    16:9   Italy
	1                    16:9   Italy
	2                    16:9   Italy
	3                     4:3   Italy
	4                     4:3   Italy
	5                     4:3   Italy
	6                     4:3   Italy
	7                     4:3   Italy
	8                     4:3   Italy
	9              4:3 / 16:9   Italy
	10             4:3 / 16:9   Italy
	11             4:3 / 16:9   Italy
Wrong output for ground truth in instance db2csv/tvshow/0055_dev (4554)
Wrong output for base solution in instance db2csv/tvshow/0046_dev (4555)
	EXPECTED OUTPUT ====

	   production_code  channel
	0            102.0      701
	ACTUAL OUTPUT ====

		select production_code,
		       channel
		from cartoon
		order by original_air_date desc
		limit 1

	   production_code channel
	0            102.0     701
Wrong output for ground truth in instance db2csv/tvshow/0046_dev (4555)
Wrong output for base solution in instance db2csv/tvshow/0057_dev (4556)
	EXPECTED OUTPUT ====

	    id
	0  728
	ACTUAL OUTPUT ====

		SELECT id
		FROM tv_channel
		GROUP BY country
		HAVING count(*) > 2

	    id
	0  700
Wrong output for ground truth in instance db2csv/tvshow/0057_dev (4556)
Error while executing solution for instance db2csv/tvshow/0041_dev (4558)

(sqlite3.OperationalError) no such column: RHS.col_18_49_rating_share
[SQL: 
SELECT `episode`
FROM
  (SELECT `LHS`.`id` AS `id`,
          `LHS`.`series_name` AS `series_name`,
          `LHS`.`country` AS `country`,
          `LHS`.`language` AS `language`,
          `LHS`.`content` AS `content`,
          `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
          `LHS`.`hight_definition_tv` AS `hight_definition_tv`,
          `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
          `LHS`.`package_option` AS `package_option`,
          `RHS`.`id` AS `id_other`,
          `RHS`.`episode` AS `episode`,
          `RHS`.`air_date` AS `air_date`,
          `RHS`.`rating` AS `rating`,
          `RHS`.`share` AS `share`,
          `RHS`.`col_18_49_rating_share` AS `col_18_49_rating_share`,
          `RHS`.`viewers_m` AS `viewers_m`,
          `RHS`.`weekly_rank` AS `weekly_rank`
   FROM
     (SELECT *
      FROM `tv_channel`
      WHERE (`series_name` = 'Sky Radio')) AS LHS
   INNER JOIN tv_series AS RHS ON (LHS.id = RHS.channel))
ORDER BY episode

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for base solution in instance db2csv/tvshow/0047_dev (4560)
	EXPECTED OUTPUT ====

		SELECT package_option,
		       series_name
		FROM TV_Channel
		WHERE hight_definition_TV = "yes"

	          package_option  series_name
	0  Sky Famiglia + Sky HD  MTV Live HD
	ACTUAL OUTPUT ====

		
		SELECT pixel_aspect_ratio_par AS package_option,
		       series_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM tv_channel
		      ORDER BY hight_definition_tv DESC)
		   LIMIT 1)
		
		

	  package_option  series_name
	0           16:9  MTV Live HD
Wrong output for base solution in instance db2csv/tvshow/0052_dev (4562)
	EXPECTED OUTPUT ====

		SELECT country
		FROM TV_Channel
		EXCEPT
		SELECT T1.country
		FROM TV_Channel AS T1
		JOIN cartoon AS T2 ON T1.id = T2.Channel
		WHERE T2.written_by = 'Todd Casey'

	  country
	0  Poland
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `pixel_aspect_ratio_par` AS `country`
		FROM
		  (SELECT *
		   FROM `tv_channel` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `cartoon`
		           WHERE (`written_by` != 'Todd Casey')) AS RHS
		        WHERE (LHS.id = RHS.id) ))
		ORDER BY country
		
		

	      country
	0        16:9
	1         4:3
	2  4:3 / 16:9
Error while executing solution for instance db2csv/tvshow/0040_dev (4563)

(sqlite3.OperationalError) no such column: RHS.col_18_49_rating_share
[SQL: 
SELECT `series_name`
FROM
  (SELECT `LHS`.`id` AS `id`,
          `LHS`.`series_name` AS `series_name`,
          `LHS`.`country` AS `country`,
          `LHS`.`language` AS `language`,
          `LHS`.`content` AS `content`,
          `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
          `LHS`.`hight_definition_tv` AS `hight_definition_tv`,
          `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
          `LHS`.`package_option` AS `package_option`,
          `RHS`.`id` AS `id_other`,
          `RHS`.`episode` AS `episode`,
          `RHS`.`air_date` AS `air_date`,
          `RHS`.`rating` AS `rating`,
          `RHS`.`share` AS `share`,
          `RHS`.`col_18_49_rating_share` AS `col_18_49_rating_share`,
          `RHS`.`viewers_m` AS `viewers_m`,
          `RHS`.`weekly_rank` AS `weekly_rank`
   FROM `tv_channel` AS `LHS`
   INNER JOIN
     (SELECT *
      FROM `tv_series`
      WHERE (`episode` = 'A Love of a Lifetime')) AS RHS ON (LHS.id = RHS.channel))
ORDER BY series_name

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for base solution in instance db2csv/tvshow/0059_dev (4567)
	EXPECTED OUTPUT ====

	     id
	0   701
	1   703
	2   705
	3   706
	4   708
	5   709
	6   713
	7   714
	8   715
	9   717
	10  719
	ACTUAL OUTPUT ====

		SELECT id
		FROM TV_Channel
		EXCEPT
		SELECT channel
		FROM cartoon
		WHERE directed_by = 'Ben Jones'

	     id
	0   701
	1   703
	2   705
	3   706
	4   708
	5   709
	6   713
	7   714
	8   715
	9   717
	10  719
Wrong output for ground truth in instance db2csv/tvshow/0059_dev (4567)
Wrong output for base solution in instance db2csv/tvshow/0051_dev (4568)
	EXPECTED OUTPUT ====

		SELECT country
		FROM TV_Channel
		EXCEPT
		SELECT T1.country
		FROM TV_Channel AS T1
		JOIN cartoon AS T2 ON T1.id = T2.Channel
		WHERE T2.written_by = 'Todd Casey'

	  country
	0  Poland
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `pixel_aspect_ratio_par` AS `country`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`series_name` AS `series_name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`language` AS `language`,
		          `LHS`.`content` AS `content`,
		          `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
		          `LHS`.`hight_definition_tv` AS `hight_definition_tv`,
		          `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
		          `LHS`.`package_option` AS `package_option`,
		          `RHS`.`production_code` AS `production_code`
		   FROM `tv_channel` AS `LHS`
		   CROSS JOIN
		     (SELECT `production_code`
		      FROM `cartoon`
		      WHERE (`written_by` != 'Todd Casey') INTERSECT
		        SELECT `production_code`
		        FROM `cartoon` WHERE (`written_by` != 'Todd Casey')) AS RHS)
		ORDER BY country
		
		

	      country
	0        16:9
	1         4:3
	2  4:3 / 16:9
No solution for instance db2csv/tvshow/0022_dev (4569)
Wrong output for fuzzied solution in instance db2csv/tvshow/0013_dev (4570)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT series_name),
		       count(DISTINCT content)
		FROM TV_Channel;

	   count(distinct series_name)  count(distinct content)
	0                           40                       27
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count_distinct_series_name_,
		       COUNT(*) OVER () AS count_distinct_content_
		FROM
		  (SELECT COUNT(DISTINCT series_name) AS n_distinct
		   FROM tv_channel)
		ORDER BY count_distinct_series_name_
		
		

	   count_distinct_series_name_  count_distinct_content_
	0                           40                        1
Wrong output for fuzzied solution in instance db2csv/tvshow/0014_dev (4571)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT series_name),
		       count(DISTINCT content)
		FROM TV_Channel;

	   count(distinct series_name)  count(distinct content)
	0                           40                       27
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count_distinct_series_name_,
		       COUNT(*) OVER () AS count_distinct_content_
		FROM
		  (SELECT COUNT(DISTINCT series_name) AS n_distinct
		   FROM tv_channel)
		ORDER BY count_distinct_series_name_
		
		

	   count_distinct_series_name_  count_distinct_content_
	0                           40                        1
Wrong output for base solution in instance db2csv/tvshow/0031_dev (4572)
	EXPECTED OUTPUT ====

	                episode  rating
	0  A Love of a Lifetime     5.8
	1        Friendly Skies     5.3
	2            Game Three     4.4
	ACTUAL OUTPUT ====

		SELECT Episode,
		       Rating
		FROM TV_series
		ORDER BY Rating DESC
		LIMIT 3;

	                episode rating
	0  A Love of a Lifetime    5.8
	1        Friendly Skies    5.3
	2            Game Three    4.4
Wrong output for ground truth in instance db2csv/tvshow/0031_dev (4572)
Wrong output for fuzzied solution in instance db2csv/tvshow/0015_dev (4574)
	EXPECTED OUTPUT ====

		SELECT Content
		FROM TV_Channel
		WHERE series_name = "Sky Radio";

	  content
	0   music
	1   music
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `content`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`series_name` AS `series_name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`language` AS `language`,
		          `LHS`.`content` AS `content`,
		          `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
		          `LHS`.`hight_definition_tv` AS `hight_definition_tv`,
		          `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
		          `LHS`.`package_option` AS `package_option`,
		          `RHS`.`series_name` AS `series_name_other`,
		          `RHS`.`country` AS `country_other`,
		          `RHS`.`language` AS `language_other`,
		          `RHS`.`content` AS `content_other`,
		          `RHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par_other`,
		          `RHS`.`hight_definition_tv` AS `hight_definition_tv_other`,
		          `RHS`.`pay_per_view_ppv` AS `pay_per_view_ppv_other`,
		          `RHS`.`package_option` AS `package_option_other`
		   FROM
		     (SELECT *
		      FROM `tv_channel`
		      WHERE (`series_name` != 'Sky Radio')) AS LHS
		   INNER JOIN tv_channel AS RHS ON (LHS.id = RHS.id))
		ORDER BY content
		
		

	        content
	0     towRmusic
	1    2mzI8music
	2    4vVgVmusic
	3    AzisEmusic
	4   ey4music9XL
	5   h3umusicAZ6
	6    knmXrmusic
	7          musi
	8         music
	9    musicaRp1W
	10   musicnpOO(
	11   musicqxND1
	12  r5emusic47P
	13         usic
	14  vZ1music8)t
No solution for instance db2csv/tvshow/0044_dev (4576)
Wrong output for base solution in instance db2csv/tvshow/0056_dev (4577)
	EXPECTED OUTPUT ====

	   pixel_aspect_ratio_par country
	0                     NaT   Italy
	1                     NaT   Italy
	2                     NaT   Italy
	3                     NaT   Italy
	4                     NaT   Italy
	5                     NaT   Italy
	6                     NaT   Italy
	7                     NaT   Italy
	8                     NaT   Italy
	9                     NaT   Italy
	10                    NaT   Italy
	11                    NaT   Italy
	ACTUAL OUTPUT ====

		SELECT Pixel_aspect_ratio_PAR,
		       country
		FROM tv_channel
		WHERE LANGUAGE != 'English'

	   pixel_aspect_ratio_par country
	0                    16:9   Italy
	1                    16:9   Italy
	2                    16:9   Italy
	3                     4:3   Italy
	4                     4:3   Italy
	5                     4:3   Italy
	6                     4:3   Italy
	7                     4:3   Italy
	8                     4:3   Italy
	9              4:3 / 16:9   Italy
	10             4:3 / 16:9   Italy
	11             4:3 / 16:9   Italy
Wrong output for ground truth in instance db2csv/tvshow/0056_dev (4577)
Wrong output for fuzzied solution in instance db2csv/tvshow/0020_dev (4578)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM TV_Channel
		WHERE LANGUAGE = "English";

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `tv_channel`
		WHERE (`language` = 'English')
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for base solution in instance db2csv/tvshow/0025_dev (4579)
	EXPECTED OUTPUT ====

		SELECT T1.series_name
		FROM TV_Channel AS T1
		JOIN Cartoon AS T2 ON T1.id = T2.Channel
		WHERE T2.Title = "The Rise of the Blue Beetle!";

	  series_name
	0   Sky Radio
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `pixel_aspect_ratio_par` AS `series_name`
		FROM
		  (SELECT `id`,
		          `series_name`,
		          `country`,
		          `language`,
		          `content`,
		          `pixel_aspect_ratio_par`,
		          `hight_definition_tv`,
		          `pay_per_view_ppv`,
		          `package_option`,
		          `id_other`,
		          `title`,
		          `directed_by`,
		          `written_by`,
		          `original_air_date`,
		          `production_code`,
		          `id` AS `channel`
		   FROM
		     (SELECT `LHS`.`id` AS `id`,
		             `LHS`.`series_name` AS `series_name`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`language` AS `language`,
		             `LHS`.`content` AS `content`,
		             `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
		             `LHS`.`hight_definition_tv` AS `hight_definition_tv`,
		             `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
		             `LHS`.`package_option` AS `package_option`,
		             `RHS`.`id` AS `id_other`,
		             `RHS`.`title` AS `title`,
		             `RHS`.`directed_by` AS `directed_by`,
		             `RHS`.`written_by` AS `written_by`,
		             `RHS`.`original_air_date` AS `original_air_date`,
		             `RHS`.`production_code` AS `production_code`
		      FROM `tv_channel` AS `LHS`
		      INNER JOIN `cartoon` AS `RHS` ON (`LHS`.`id` = `RHS`.`channel`)))
		WHERE (`title` != 'The Rise of the Blue Beetle!')
		ORDER BY series_name
		
		

	  series_name
	0        16:9
	1         4:3
	2  4:3 / 16:9
Wrong output for fuzzied solution in instance db2csv/tvshow/0050_dev (4581)
	EXPECTED OUTPUT ====

		SELECT T1.country
		FROM TV_Channel AS T1
		JOIN cartoon AS T2 ON T1.id = T2.Channel
		WHERE T2.written_by = 'Todd Casey'

	               country
	0                Italy
	1  bsEmCUnited Kingdom
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `country`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`title` AS `title`,
		          `LHS`.`directed_by` AS `directed_by`,
		          `LHS`.`written_by` AS `written_by`,
		          `LHS`.`original_air_date` AS `original_air_date`,
		          `LHS`.`production_code` AS `production_code`,
		          `LHS`.`channel` AS `channel`,
		          `RHS`.`series_name` AS `series_name`,
		          `RHS`.`country` AS `country`,
		          `RHS`.`language` AS `language`,
		          `RHS`.`content` AS `content`,
		          `RHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
		          `RHS`.`hight_definition_tv` AS `hight_definition_tv`,
		          `RHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
		          `RHS`.`package_option` AS `package_option`
		   FROM
		     (SELECT *
		      FROM `cartoon`
		      WHERE (`written_by` != 'Todd Casey')) AS LHS
		   INNER JOIN tv_channel AS RHS ON (LHS.channel = RHS.id))
		ORDER BY country
		
		

	                country
	0  8ZgUnited Kingdom9kk
	1                 Italy
	2            ItalycHUB 
	3         United Kingdo
	4        United Kingdom
	5         nited Kingdom
	6                  taly
Wrong output for base solution in instance db2csv/tvshow/0032_dev (4583)
	EXPECTED OUTPUT ====

	                episode  rating
	0  A Love of a Lifetime     5.8
	1        Friendly Skies     5.3
	2            Game Three     4.4
	ACTUAL OUTPUT ====

		SELECT Episode,
		       Rating
		FROM TV_series
		ORDER BY Rating DESC
		LIMIT 3;

	                episode rating
	0  A Love of a Lifetime    5.8
	1        Friendly Skies    5.3
	2            Game Three    4.4
Wrong output for ground truth in instance db2csv/tvshow/0032_dev (4583)
No solution for instance db2csv/world_1/0060_dev (4586)
No solution for instance db2csv/world_1/0084_dev (4587)
No solution for instance db2csv/world_1/0063_dev (4588)
No solution for instance db2csv/world_1/0021_dev (4589)
No solution for instance db2csv/world_1/0103_dev (4590)
No solution for instance db2csv/world_1/0058_dev (4591)
No solution for instance db2csv/world_1/0107_dev (4592)
Wrong output for base solution in instance db2csv/world_1/0039_dev (4595)
	EXPECTED OUTPUT ====

	     name
	0  Canada
	ACTUAL OUTPUT ====

		SELECT T1.Name
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		GROUP BY T1.Name
		ORDER BY COUNT(*) DESC
		LIMIT 1

	            name
	0  United States
Wrong output for ground truth in instance db2csv/world_1/0039_dev (4595)
No solution for instance db2csv/world_1/0088_dev (4596)
No solution for instance db2csv/world_1/0081_dev (4597)
No solution for instance db2csv/world_1/0096_dev (4598)
Wrong output for base solution in instance db2csv/world_1/0029_dev (4599)
	EXPECTED OUTPUT ====

	     avg_gnp_  sum_population_
	0  510.333333           329000
	ACTUAL OUTPUT ====

		SELECT avg(GNP),
		       sum(population)
		FROM country
		WHERE GovernmentForm = "US Territory"

	     avg(gnp)  sum(population)
	0  510.333333           329000
Wrong output for ground truth in instance db2csv/world_1/0029_dev (4599)
No solution for instance db2csv/world_1/0083_dev (4600)
No solution for instance db2csv/world_1/0054_dev (4601)
Wrong output for fuzzied solution in instance db2csv/world_1/0048_dev (4602)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		WHERE T2.Language = "English"
		  AND T2.IsOfficial = "T" INTERSECT
		  SELECT T1.Name
		  FROM country AS T1
		  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = "French"
		  AND T2.IsOfficial = "T"

	    name
	0  Sudan
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`code` AS `code`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`continent` AS `continent`,
		          `LHS`.`region` AS `region`,
		          `LHS`.`surfacearea` AS `surfacearea`,
		          `LHS`.`indepyear` AS `indepyear`,
		          `LHS`.`population` AS `population`,
		          `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
		          `LHS`.`gnp` AS `gnp`,
		          `LHS`.`gnpold` AS `gnpold`,
		          `LHS`.`localname` AS `localname`,
		          `LHS`.`governmentform` AS `governmentform`,
		          `LHS`.`headofstate` AS `headofstate`,
		          `LHS`.`capital` AS `capital`,
		          `LHS`.`code2` AS `code2`,
		          `LHS`.`language` AS `language`,
		          `LHS`.`isofficial` AS `isofficial`,
		          `LHS`.`percentage` AS `percentage`,
		          `LHS`.`countrycode` AS `countrycode`,
		          `RHS`.`language` AS `language_other`,
		          `RHS`.`isofficial` AS `isofficial_other`,
		          `RHS`.`percentage` AS `percentage_other`
		   FROM
		     (SELECT `code`,
		             `name`,
		             `continent`,
		             `region`,
		             `surfacearea`,
		             `indepyear`,
		             `population`,
		             `lifeexpectancy`,
		             `gnp`,
		             `gnpold`,
		             `localname`,
		             `governmentform`,
		             `headofstate`,
		             `capital`,
		             `code2`,
		             `language`,
		             `isofficial`,
		             `percentage`,
		             `code` AS `countrycode`
		      FROM
		        (SELECT `LHS`.`code` AS `code`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`continent` AS `continent`,
		                `LHS`.`region` AS `region`,
		                `LHS`.`surfacearea` AS `surfacearea`,
		                `LHS`.`indepyear` AS `indepyear`,
		                `LHS`.`population` AS `population`,
		                `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
		                `LHS`.`gnp` AS `gnp`,
		                `LHS`.`gnpold` AS `gnpold`,
		                `LHS`.`localname` AS `localname`,
		                `LHS`.`governmentform` AS `governmentform`,
		                `LHS`.`headofstate` AS `headofstate`,
		                `LHS`.`capital` AS `capital`,
		                `LHS`.`code2` AS `code2`,
		                `RHS`.`language` AS `language`,
		                `RHS`.`isofficial` AS `isofficial`,
		                `RHS`.`percentage` AS `percentage`
		         FROM `country` AS `LHS`
		         INNER JOIN
		           (SELECT *
		            FROM
		              (SELECT *
		               FROM `countrylanguage`
		               WHERE (`isofficial` = 'T'))
		            WHERE (`language` = 'English')) AS `RHS` ON (`LHS`.`code` = `RHS`.`countrycode`))) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM `countrylanguage`
		         WHERE (`isofficial` = 'T'))
		      WHERE (`language` = 'French')) AS RHS ON (LHS.countrycode = RHS.countrycode))
		ORDER BY name
		
		

	Empty DataFrame
	Columns: [name]
	Index: []
No solution for instance db2csv/world_1/0101_dev (4603)
No solution for instance db2csv/world_1/0099_dev (4604)
Error while executing solution for instance db2csv/world_1/0037_dev (4605)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT `n_distinct` AS `count___`
FROM
  (SELECT `code`,
          `name`,
          `continent`,
          `region`,
          `surfacearea`,
          `indepyear`,
          `population`,
          `lifeexpectancy`,
          `gnp`,
          `gnpold`,
          `localname`,
          `governmentform`,
          `headofstate`,
          `capital`,
          `code2`,
          `countrycode`,
          `language`,
          `isofficial`,
          `percentage`,
          COUNT(DISTINCT `isofficial`) OVER () AS `n_distinct`
   FROM
     (SELECT `LHS`.`code` AS `code`,
             `LHS`.`name` AS `name`,
             `LHS`.`continent` AS `continent`,
             `LHS`.`region` AS `region`,
             `LHS`.`surfacearea` AS `surfacearea`,
             `LHS`.`indepyear` AS `indepyear`,
             `LHS`.`population` AS `population`,
             `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
             `LHS`.`gnp` AS `gnp`,
             `LHS`.`gnpold` AS `gnpold`,
             `LHS`.`localname` AS `localname`,
             `LHS`.`governmentform` AS `governmentform`,
             `LHS`.`headofstate` AS `headofstate`,
             `LHS`.`capital` AS `capital`,
             `LHS`.`code2` AS `code2`,
             `LHS`.`countrycode` AS `countrycode`,
             `LHS`.`language` AS `language`,
             `LHS`.`isofficial` AS `isofficial`,
             `LHS`.`percentage` AS `percentage`
      FROM
        (SELECT `LHS`.`code` AS `code`,
                `LHS`.`name` AS `name`,
                `LHS`.`continent` AS `continent`,
                `LHS`.`region` AS `region`,
                `LHS`.`surfacearea` AS `surfacearea`,
                `LHS`.`indepyear` AS `indepyear`,
                `LHS`.`population` AS `population`,
                `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
                `LHS`.`gnp` AS `gnp`,
                `LHS`.`gnpold` AS `gnpold`,
                `LHS`.`localname` AS `localname`,
                `LHS`.`governmentform` AS `governmentform`,
                `LHS`.`headofstate` AS `headofstate`,
                `LHS`.`capital` AS `capital`,
                `LHS`.`code2` AS `code2`,
                `RHS`.`countrycode` AS `countrycode`,
                `RHS`.`language` AS `language`,
                `RHS`.`isofficial` AS `isofficial`,
                `RHS`.`percentage` AS `percentage`
         FROM `country` AS `LHS`
         CROSS JOIN `countrylanguage` AS `RHS`) AS `LHS`
      INNER JOIN
        (SELECT *
         FROM `country`
         WHERE (`name` != 'Afghanistan')) AS `RHS` ON (`LHS`.`code` = `RHS`.`code`
                                                       AND `LHS`.`name` = `RHS`.`name`
                                                       AND `LHS`.`continent` = `RHS`.`continent`
                                                       AND `LHS`.`region` = `RHS`.`region`
                                                       AND `LHS`.`surfacearea` = `RHS`.`surfacearea`
                                                       AND `LHS`.`indepyear` = `RHS`.`indepyear`
                                                       AND `LHS`.`population` = `RHS`.`population`
                                                       AND `LHS`.`lifeexpectancy` = `RHS`.`lifeexpectancy`
                                                       AND `LHS`.`gnp` = `RHS`.`gnp`
                                                       AND `LHS`.`gnpold` = `RHS`.`gnpold`
                                                       AND `LHS`.`localname` = `RHS`.`localname`
                                                       AND `LHS`.`governmentform` = `RHS`.`governmentform`
                                                       AND `LHS`.`headofstate` = `RHS`.`headofstate`
                                                       AND `LHS`.`capital` = `RHS`.`capital`
                                                       AND `LHS`.`code2` = `RHS`.`code2`)))
WHERE (`isofficial` != 'T')
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance db2csv/world_1/0012_dev (4606)
No solution for instance db2csv/world_1/0036_dev (4608)
No solution for instance db2csv/world_1/0053_dev (4610)
No solution for instance db2csv/world_1/0104_dev (4611)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_30706.sqlite3'
No solution for instance db2csv/world_1/0087_dev (4618)
No solution for instance db2csv/world_1/0061_dev (4619)
No solution for instance db2csv/world_1/0064_dev (4620)
Wrong output for fuzzied solution in instance db2csv/world_1/0043_dev (4621)
	EXPECTED OUTPUT ====

		SELECT COUNT(*)
		FROM
		  (SELECT T1.Name
		   FROM country AS T1
		   JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		   WHERE T2.Language = "English" INTERSECT
		     SELECT T1.Name
		     FROM country AS T1
		     JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = "Dutch")

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT `countrycode`
		   FROM `countrylanguage`
		   WHERE (`language` = 'English') INTERSECT
		     SELECT `countrycode`
		     FROM `countrylanguage` WHERE (`language` = 'Dutch'))
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for base solution in instance db2csv/world_1/0110_dev (4622)
	EXPECTED OUTPUT ====

		select sum(population),
		       avg(surfacearea)
		from country
		where continent = "north america"
		  and surfacearea > 3000

	  sum(population) avg(surfacearea)
	0            None             None
	ACTUAL OUTPUT ====

		
		SELECT surfacearea AS sum_population_,
		       indepyear AS avg_surfacearea_
		FROM
		  (SELECT LHS.code AS code,
		          LHS.name AS name,
		          LHS.continent AS continent,
		          LHS.region AS region,
		          LHS.surfacearea AS surfacearea,
		          LHS.indepyear AS indepyear,
		          LHS.population AS population,
		          LHS.lifeexpectancy AS lifeexpectancy,
		          LHS.gnp AS gnp,
		          LHS.gnpold AS gnpold,
		          LHS.localname AS localname,
		          LHS.governmentform AS governmentform,
		          LHS.headofstate AS headofstate,
		          LHS.capital AS capital,
		          LHS.code2 AS code2,
		          RHS.meansurfacearea AS meansurfacearea
		   FROM
		     (SELECT LHS.code AS code,
		             LHS.name AS name,
		             LHS.continent AS continent,
		             LHS.region AS region,
		             LHS.surfacearea AS surfacearea,
		             LHS.indepyear AS indepyear,
		             LHS.population AS population,
		             LHS.lifeexpectancy AS lifeexpectancy,
		             LHS.gnp AS gnp,
		             LHS.gnpold AS gnpold,
		             LHS.localname AS localname,
		             LHS.governmentform AS governmentform,
		             LHS.headofstate AS headofstate,
		             LHS.capital AS capital,
		             LHS.code2 AS code2
		      FROM country AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM country
		         WHERE (surfacearea = 3000.0)) AS RHS ON (LHS.code = RHS.code
		                                                  AND LHS.name = RHS.name
		                                                  AND LHS.continent = RHS.continent
		                                                  AND LHS.region = RHS.region
		                                                  AND LHS.surfacearea = RHS.surfacearea
		                                                  AND LHS.indepyear = RHS.indepyear
		                                                  AND LHS.population = RHS.population
		                                                  AND LHS.lifeexpectancy = RHS.lifeexpectancy
		                                                  AND LHS.gnp = RHS.gnp
		                                                  AND LHS.gnpold = RHS.gnpold
		                                                  AND LHS.localname = RHS.localname
		                                                  AND LHS.governmentform = RHS.governmentform
		                                                  AND LHS.headofstate = RHS.headofstate
		                                                  AND LHS.capital = RHS.capital
		                                                  AND LHS.code2 = RHS.code2)) AS LHS
		   CROSS JOIN
		     (SELECT AVG(surfacearea) AS meansurfacearea
		      FROM country
		      WHERE (surfacearea = 3000.0)) AS RHS)
		ORDER BY sum_population_
		
		

	Empty DataFrame
	Columns: [sum_population_, avg_surfacearea_]
	Index: []
No solution for instance db2csv/world_1/0011_dev (4623)
Wrong output for base solution in instance db2csv/world_1/0042_dev (4624)
	EXPECTED OUTPUT ====

		SELECT T1.Continent
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		GROUP BY T1.Continent
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  continent
	0    Africa
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT continent
		FROM
		  (SELECT *
		   FROM
		     (SELECT countrycode,
		             LANGUAGE,
		             isofficial,
		             percentage,
		             name,
		             continent,
		             region,
		             surfacearea,
		             indepyear,
		             population,
		             lifeexpectancy,
		             gnp,
		             gnpold,
		             localname,
		             governmentform,
		             headofstate,
		             capital,
		             code2,
		             countrycode AS code
		      FROM
		        (SELECT LHS.countrycode AS countrycode,
		                LHS.language AS LANGUAGE,
		                LHS.isofficial AS isofficial,
		                LHS.percentage AS percentage,
		                RHS.name AS name,
		                RHS.continent AS continent,
		                RHS.region AS region,
		                RHS.surfacearea AS surfacearea,
		                RHS.indepyear AS indepyear,
		                RHS.population AS population,
		                RHS.lifeexpectancy AS lifeexpectancy,
		                RHS.gnp AS gnp,
		                RHS.gnpold AS gnpold,
		                RHS.localname AS localname,
		                RHS.governmentform AS governmentform,
		                RHS.headofstate AS headofstate,
		                RHS.capital AS capital,
		                RHS.code2 AS code2
		         FROM countrylanguage AS LHS
		         INNER JOIN country AS RHS ON (LHS.countrycode = RHS.code))) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM country AS RHS
		        WHERE (LHS.code2 = RHS.code2) ))
		ORDER BY continent
		
		

	Empty DataFrame
	Columns: [continent]
	Index: []
Error while executing solution for instance db2csv/world_1/0117_dev (4625)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT COUNT(DISTINCT `language`) OVER () AS `count___`,
                                       `percentage` AS `max_percentage_`
FROM `countrylanguage`
WHERE (`language` = 'Spanish')
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance db2csv/world_1/0094_dev (4626)
No solution for instance db2csv/world_1/0116_dev (4627)
No solution for instance db2csv/world_1/0093_dev (4630)
No solution for instance db2csv/world_1/0062_dev (4631)
Error while executing solution for instance db2csv/world_1/0077_dev (4632)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT `countrycode`
FROM
  (SELECT *
   FROM `countrylanguage` AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT `countrycode`,
                  `language`,
                  `isofficial`,
                  `percentage`,
                  COUNT(DISTINCT `language`) OVER () AS `n_distinct`
           FROM `countrylanguage`
           WHERE (`language` = 'English')) AS RHS
        WHERE (LHS.countrycode = RHS.countrycode) ))
ORDER BY countrycode

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance db2csv/world_1/0066_dev (4633)
No solution for instance db2csv/world_1/0114_dev (4634)
No solution for instance db2csv/world_1/0102_dev (4636)
Wrong output for fuzzied solution in instance db2csv/world_1/0045_dev (4638)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		WHERE T2.Language = "English" INTERSECT
		  SELECT T1.Name
		  FROM country AS T1
		  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = "French"

	     name
	0  Brazil
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`code` AS `code`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`continent` AS `continent`,
		          `LHS`.`region` AS `region`,
		          `LHS`.`surfacearea` AS `surfacearea`,
		          `LHS`.`indepyear` AS `indepyear`,
		          `LHS`.`population` AS `population`,
		          `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
		          `LHS`.`gnp` AS `gnp`,
		          `LHS`.`gnpold` AS `gnpold`,
		          `LHS`.`localname` AS `localname`,
		          `LHS`.`governmentform` AS `governmentform`,
		          `LHS`.`headofstate` AS `headofstate`,
		          `LHS`.`capital` AS `capital`,
		          `LHS`.`code2` AS `code2`,
		          `LHS`.`language` AS `language`,
		          `LHS`.`isofficial` AS `isofficial`,
		          `LHS`.`percentage` AS `percentage`,
		          `LHS`.`countrycode` AS `countrycode`,
		          `RHS`.`language` AS `language_other`,
		          `RHS`.`isofficial` AS `isofficial_other`,
		          `RHS`.`percentage` AS `percentage_other`
		   FROM
		     (SELECT `code`,
		             `name`,
		             `continent`,
		             `region`,
		             `surfacearea`,
		             `indepyear`,
		             `population`,
		             `lifeexpectancy`,
		             `gnp`,
		             `gnpold`,
		             `localname`,
		             `governmentform`,
		             `headofstate`,
		             `capital`,
		             `code2`,
		             `language`,
		             `isofficial`,
		             `percentage`,
		             `code` AS `countrycode`
		      FROM
		        (SELECT `LHS`.`code` AS `code`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`continent` AS `continent`,
		                `LHS`.`region` AS `region`,
		                `LHS`.`surfacearea` AS `surfacearea`,
		                `LHS`.`indepyear` AS `indepyear`,
		                `LHS`.`population` AS `population`,
		                `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
		                `LHS`.`gnp` AS `gnp`,
		                `LHS`.`gnpold` AS `gnpold`,
		                `LHS`.`localname` AS `localname`,
		                `LHS`.`governmentform` AS `governmentform`,
		                `LHS`.`headofstate` AS `headofstate`,
		                `LHS`.`capital` AS `capital`,
		                `LHS`.`code2` AS `code2`,
		                `RHS`.`language` AS `language`,
		                `RHS`.`isofficial` AS `isofficial`,
		                `RHS`.`percentage` AS `percentage`
		         FROM `country` AS `LHS`
		         INNER JOIN
		           (SELECT *
		            FROM `countrylanguage`
		            WHERE (`language` = 'English')) AS `RHS` ON (`LHS`.`code` = `RHS`.`countrycode`))) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `countrylanguage`
		      WHERE (`language` = 'French')) AS RHS ON (LHS.countrycode = RHS.countrycode))
		ORDER BY name
		
		

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for base solution in instance db2csv/world_1/0098_dev (4639)
	EXPECTED OUTPUT ====

	   sum_population_  avg_lifeexpectancy_      continent
	0        784475000            52.571930         Africa
	1       3705025700            67.441176           Asia
	2         30401150            69.715000        Oceania
	3        345780000            70.946154  South America
	ACTUAL OUTPUT ====

		SELECT sum(Population),
		       avg(LifeExpectancy),
		       Continent
		FROM country
		GROUP BY Continent
		HAVING avg(LifeExpectancy) < 72

	   sum(population)  avg(lifeexpectancy)      continent
	0        784475000            52.571930         Africa
	1       3705025700            67.441176           Asia
	2         30401150            69.715000        Oceania
	3        345780000            70.946154  South America
Wrong output for ground truth in instance db2csv/world_1/0098_dev (4639)
Error while executing solution for instance db2csv/world_1/0035_dev (4640)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `language`) OVER () AS `count_t2_language_`
FROM
  (SELECT `code`,
          `name`,
          `continent`,
          `region`,
          `surfacearea`,
          `indepyear`,
          `population`,
          `lifeexpectancy`,
          `gnp`,
          `gnpold`,
          `localname`,
          `governmentform`,
          `headofstate`,
          `capital`,
          `code2`,
          `language`,
          `isofficial`,
          `percentage`,
          `code` AS `countrycode`
   FROM
     (SELECT `LHS`.`code` AS `code`,
             `LHS`.`name` AS `name`,
             `LHS`.`continent` AS `continent`,
             `LHS`.`region` AS `region`,
             `LHS`.`surfacearea` AS `surfacearea`,
             `LHS`.`indepyear` AS `indepyear`,
             `LHS`.`population` AS `population`,
             `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
             `LHS`.`gnp` AS `gnp`,
             `LHS`.`gnpold` AS `gnpold`,
             `LHS`.`localname` AS `localname`,
             `LHS`.`governmentform` AS `governmentform`,
             `LHS`.`headofstate` AS `headofstate`,
             `LHS`.`capital` AS `capital`,
             `LHS`.`code2` AS `code2`,
             `RHS`.`language` AS `language`,
             `RHS`.`isofficial` AS `isofficial`,
             `RHS`.`percentage` AS `percentage`
      FROM `country` AS `LHS`
      INNER JOIN `countrylanguage` AS `RHS` ON (`LHS`.`code` = `RHS`.`countrycode`)))
WHERE (`name` = 'Aruba')
ORDER BY count_t2_language_
]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/world_1/0016_dev (4641)
	EXPECTED OUTPUT ====

		SELECT Population,
		       Region
		FROM country
		WHERE Name = "Angola"

	   population                region
	0       55998       Southern Europe
	1       56002              Caribbea
	2       56002        CaribbeanVVdvx
	3      455999              Caribbea
	4     5171302  Southern Europey0TVi
	5    61399000        6d1cnCaribbean
	ACTUAL OUTPUT ====

		
		SELECT `population`,
		       `region`
		FROM
		  (SELECT *
		   FROM `country` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM `city` AS `RHS`
		        WHERE (`LHS`.`name` = `RHS`.`name`
		               AND `LHS`.`population` = `RHS`.`population`) ))
		WHERE (`localname` = 'Angola')
		ORDER BY population
		
		

	Empty DataFrame
	Columns: [population, region]
	Index: []
No solution for instance db2csv/world_1/0095_dev (4642)
Error while executing solution for instance db2csv/world_1/0118_dev (4645)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT `n_distinct` AS `count___`,
       `percentage` AS `max_percentage_`
FROM
  (SELECT `countrycode`,
          `language`,
          `isofficial`,
          `percentage`,
          COUNT(DISTINCT `language`) OVER () AS `n_distinct`
   FROM
     (SELECT *
      FROM `countrylanguage`
      WHERE (`language` = 'Spanish')))
WHERE (percentage != n_distinct)
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance db2csv/world_1/0065_dev (4647)
No solution for instance db2csv/world_1/0055_dev (4649)
Wrong output for fuzzied solution in instance db2csv/world_1/0046_dev (4650)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		WHERE T2.Language = "English" INTERSECT
		  SELECT T1.Name
		  FROM country AS T1
		  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = "French"

	     name
	0  Brazil
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`code` AS `code`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`continent` AS `continent`,
		          `LHS`.`region` AS `region`,
		          `LHS`.`surfacearea` AS `surfacearea`,
		          `LHS`.`indepyear` AS `indepyear`,
		          `LHS`.`population` AS `population`,
		          `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
		          `LHS`.`gnp` AS `gnp`,
		          `LHS`.`gnpold` AS `gnpold`,
		          `LHS`.`localname` AS `localname`,
		          `LHS`.`governmentform` AS `governmentform`,
		          `LHS`.`headofstate` AS `headofstate`,
		          `LHS`.`capital` AS `capital`,
		          `LHS`.`code2` AS `code2`,
		          `RHS`.`language` AS `language`,
		          `RHS`.`isofficial` AS `isofficial`,
		          `RHS`.`percentage` AS `percentage`,
		          `RHS`.`language_other` AS `language_other`,
		          `RHS`.`isofficial_other` AS `isofficial_other`,
		          `RHS`.`percentage_other` AS `percentage_other`
		   FROM `country` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`countrycode` AS `countrycode`,
		                `LHS`.`language` AS `language`,
		                `LHS`.`isofficial` AS `isofficial`,
		                `LHS`.`percentage` AS `percentage`,
		                `RHS`.`language` AS `language_other`,
		                `RHS`.`isofficial` AS `isofficial_other`,
		                `RHS`.`percentage` AS `percentage_other`
		         FROM `countrylanguage` AS `LHS`
		         INNER JOIN
		           (SELECT *
		            FROM `countrylanguage`
		            WHERE (`language` = 'French')) AS `RHS` ON (`LHS`.`countrycode` = `RHS`.`countrycode`))
		      WHERE (`language` = 'English')) AS RHS ON (LHS.code = RHS.countrycode))
		ORDER BY name
		
		

	Empty DataFrame
	Columns: [name]
	Index: []
No solution for instance db2csv/world_1/0057_dev (4651)
No solution for instance db2csv/world_1/0074_dev (4652)
Wrong output for fuzzied solution in instance db2csv/world_1/0008_dev (4653)
	EXPECTED OUTPUT ====

		SELECT Continent
		FROM country
		WHERE Name = "Anguilla"

	     continent
	0       Africa
	1       Africa
	2         Asia
	3  J9HiDAfrica
	4          sia
	5          sia
	ACTUAL OUTPUT ====

		
		SELECT `continent`
		FROM `country`
		WHERE (`localname` = 'Anguilla')
		ORDER BY continent
		
		

	Empty DataFrame
	Columns: [continent]
	Index: []
Wrong output for base solution in instance db2csv/world_1/0041_dev (4654)
	EXPECTED OUTPUT ====

		SELECT T1.Continent
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		GROUP BY T1.Continent
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  continent
	0    Africa
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT continent
		FROM
		  (SELECT *
		   FROM
		     (SELECT code,
		             name,
		             continent,
		             region,
		             surfacearea,
		             indepyear,
		             population,
		             lifeexpectancy,
		             gnp,
		             gnpold,
		             localname,
		             governmentform,
		             headofstate,
		             capital,
		             code2,
		             LANGUAGE,
		             isofficial,
		             percentage,
		             code AS countrycode
		      FROM
		        (SELECT LHS.code AS code,
		                LHS.name AS name,
		                LHS.continent AS continent,
		                LHS.region AS region,
		                LHS.surfacearea AS surfacearea,
		                LHS.indepyear AS indepyear,
		                LHS.population AS population,
		                LHS.lifeexpectancy AS lifeexpectancy,
		                LHS.gnp AS gnp,
		                LHS.gnpold AS gnpold,
		                LHS.localname AS localname,
		                LHS.governmentform AS governmentform,
		                LHS.headofstate AS headofstate,
		                LHS.capital AS capital,
		                LHS.code2 AS code2,
		                RHS.language AS LANGUAGE,
		                RHS.isofficial AS isofficial,
		                RHS.percentage AS percentage
		         FROM country AS LHS
		         INNER JOIN countrylanguage AS RHS ON (LHS.code = RHS.countrycode))) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM country AS RHS
		        WHERE (LHS.code2 = RHS.code2) ))
		ORDER BY continent
		

	Empty DataFrame
	Columns: [continent]
	Index: []
Wrong output for fuzzied solution in instance db2csv/world_1/0019_dev (4655)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM country
		WHERE Continent = "Asia"
		ORDER BY LifeExpectancy
		LIMIT 1

	         name
	0  irGOVChile
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `name`
		FROM
		  (SELECT `LHS`.`code` AS `code`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`continent` AS `continent`,
		          `LHS`.`region` AS `region`,
		          `LHS`.`surfacearea` AS `surfacearea`,
		          `LHS`.`indepyear` AS `indepyear`,
		          `LHS`.`population` AS `population`,
		          `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
		          `LHS`.`gnp` AS `gnp`,
		          `LHS`.`gnpold` AS `gnpold`,
		          `LHS`.`localname` AS `localname`,
		          `LHS`.`governmentform` AS `governmentform`,
		          `LHS`.`headofstate` AS `headofstate`,
		          `LHS`.`capital` AS `capital`,
		          `LHS`.`code2` AS `code2`,
		          `RHS`.`code` AS `code_other`,
		          `RHS`.`name` AS `name_other`,
		          `RHS`.`region` AS `region_other`,
		          `RHS`.`surfacearea` AS `surfacearea_other`,
		          `RHS`.`indepyear` AS `indepyear_other`,
		          `RHS`.`population` AS `population_other`,
		          `RHS`.`lifeexpectancy` AS `lifeexpectancy_other`,
		          `RHS`.`gnp` AS `gnp_other`,
		          `RHS`.`gnpold` AS `gnpold_other`,
		          `RHS`.`localname` AS `localname_other`,
		          `RHS`.`governmentform` AS `governmentform_other`,
		          `RHS`.`headofstate` AS `headofstate_other`,
		          `RHS`.`capital` AS `capital_other`,
		          `RHS`.`code2` AS `code2_other`
		   FROM `country` AS `LHS`
		   INNER JOIN
		     (SELECT `code`,
		             `name`,
		             `continent`,
		             `region`,
		             `surfacearea`,
		             `indepyear`,
		             `population`,
		             `lifeexpectancy`,
		             `gnp`,
		             `gnpold`,
		             `localname`,
		             `governmentform`,
		             `headofstate`,
		             `capital`,
		             `code2`,
		             MIN(`lifeexpectancy`) OVER () AS `minlifeexpectancy`
		      FROM `country`
		      WHERE (`continent` = 'Asia')) AS RHS ON (LHS.continent = RHS.continent
		                                               AND LHS.lifeexpectancy = RHS.minlifeexpectancy))
		ORDER BY name
		
		

	                             name
	0  British Indian Ocean Territory
	1                       Venezuela
	2                      irGOVChile
Wrong output for fuzzied solution in instance db2csv/world_1/0047_dev (4656)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		WHERE T2.Language = "English"
		  AND T2.IsOfficial = "T" INTERSECT
		  SELECT T1.Name
		  FROM country AS T1
		  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = "French"
		  AND T2.IsOfficial = "T"

	    name
	0  Sudan
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`countrycode` AS `countrycode`,
		          `LHS`.`language` AS `language`,
		          `LHS`.`isofficial` AS `isofficial`,
		          `LHS`.`percentage` AS `percentage`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`continent` AS `continent`,
		          `LHS`.`region` AS `region`,
		          `LHS`.`surfacearea` AS `surfacearea`,
		          `LHS`.`indepyear` AS `indepyear`,
		          `LHS`.`population` AS `population`,
		          `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
		          `LHS`.`gnp` AS `gnp`,
		          `LHS`.`gnpold` AS `gnpold`,
		          `LHS`.`localname` AS `localname`,
		          `LHS`.`governmentform` AS `governmentform`,
		          `LHS`.`headofstate` AS `headofstate`,
		          `LHS`.`capital` AS `capital`,
		          `LHS`.`code2` AS `code2`,
		          `LHS`.`code` AS `code`,
		          `RHS`.`language` AS `language_other`,
		          `RHS`.`isofficial` AS `isofficial_other`,
		          `RHS`.`percentage` AS `percentage_other`
		   FROM
		     (SELECT `countrycode`,
		             `language`,
		             `isofficial`,
		             `percentage`,
		             `name`,
		             `continent`,
		             `region`,
		             `surfacearea`,
		             `indepyear`,
		             `population`,
		             `lifeexpectancy`,
		             `gnp`,
		             `gnpold`,
		             `localname`,
		             `governmentform`,
		             `headofstate`,
		             `capital`,
		             `code2`,
		             `countrycode` AS `code`
		      FROM
		        (SELECT `LHS`.`countrycode` AS `countrycode`,
		                `LHS`.`language` AS `language`,
		                `LHS`.`isofficial` AS `isofficial`,
		                `LHS`.`percentage` AS `percentage`,
		                `RHS`.`name` AS `name`,
		                `RHS`.`continent` AS `continent`,
		                `RHS`.`region` AS `region`,
		                `RHS`.`surfacearea` AS `surfacearea`,
		                `RHS`.`indepyear` AS `indepyear`,
		                `RHS`.`population` AS `population`,
		                `RHS`.`lifeexpectancy` AS `lifeexpectancy`,
		                `RHS`.`gnp` AS `gnp`,
		                `RHS`.`gnpold` AS `gnpold`,
		                `RHS`.`localname` AS `localname`,
		                `RHS`.`governmentform` AS `governmentform`,
		                `RHS`.`headofstate` AS `headofstate`,
		                `RHS`.`capital` AS `capital`,
		                `RHS`.`code2` AS `code2`
		         FROM
		           (SELECT *
		            FROM
		              (SELECT *
		               FROM `countrylanguage`
		               WHERE (`isofficial` = 'T'))
		            WHERE (`language` = 'English')) AS `LHS`
		         INNER JOIN `country` AS `RHS` ON (`LHS`.`countrycode` = `RHS`.`code`))) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM `countrylanguage`
		         WHERE (`isofficial` = 'T'))
		      WHERE (`language` = 'French')) AS RHS ON (LHS.countrycode = RHS.countrycode))
		ORDER BY name
		
		

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance db2csv/world_1/0052_dev (4658)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.Region
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		WHERE T2.Language = "English"
		  OR T2.Language = "Dutch"

	                           region
	0                  (uIEHCaribbean
	1           9nwSouthern Europe)Nm
	2                       Caribbean
	3  LeL88Southern and Central Asia
	4       Southern and Central Asia
	5  Y(ZVgSouthern and Central Asia
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `region`
		FROM
		  (SELECT `LHS`.`countrycode` AS `countrycode`,
		          `LHS`.`language` AS `language`,
		          `LHS`.`isofficial` AS `isofficial`,
		          `LHS`.`percentage` AS `percentage`,
		          `RHS`.`name` AS `name`,
		          `RHS`.`continent` AS `continent`,
		          `RHS`.`region` AS `region`,
		          `RHS`.`surfacearea` AS `surfacearea`,
		          `RHS`.`indepyear` AS `indepyear`,
		          `RHS`.`population` AS `population`,
		          `RHS`.`lifeexpectancy` AS `lifeexpectancy`,
		          `RHS`.`gnp` AS `gnp`,
		          `RHS`.`gnpold` AS `gnpold`,
		          `RHS`.`localname` AS `localname`,
		          `RHS`.`governmentform` AS `governmentform`,
		          `RHS`.`headofstate` AS `headofstate`,
		          `RHS`.`capital` AS `capital`,
		          `RHS`.`code2` AS `code2`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM `countrylanguage`
		         WHERE (`language` != 'Dutch'))
		      WHERE (`language` = 'English')) AS LHS
		   INNER JOIN country AS RHS ON (LHS.countrycode = RHS.code))
		ORDER BY region
		
		

	                      region
	0      9nwSouthern Europe)Nm
	1                  Caribbean
	2  Southern and Central Asia
No solution for instance db2csv/world_1/0075_dev (4659)
Wrong output for base solution in instance db2csv/world_1/0040_dev (4660)
	EXPECTED OUTPUT ====

	     name
	0  Canada
	ACTUAL OUTPUT ====

		SELECT T1.Name
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		GROUP BY T1.Name
		ORDER BY COUNT(*) DESC
		LIMIT 1

	            name
	0  United States
Wrong output for ground truth in instance db2csv/world_1/0040_dev (4660)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_30706.sqlite3'
Wrong output for fuzzied solution in instance db2csv/world_1/0069_dev (4662)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT T2.Language)
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		WHERE IndepYear < 1930
		  AND T2.IsOfficial = "T"

	   count(distinct t2.language)
	0                            8
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count_distinct_t2_language_`
		FROM
		  (SELECT COUNT(DISTINCT `language`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `code`,
		                `name`,
		                `continent`,
		                `region`,
		                `surfacearea`,
		                `indepyear`,
		                `population`,
		                `lifeexpectancy`,
		                `gnp`,
		                `gnpold`,
		                `localname`,
		                `governmentform`,
		                `headofstate`,
		                `capital`,
		                `code2`,
		                `language`,
		                `isofficial`,
		                `percentage`,
		                `code` AS `countrycode`
		         FROM
		           (SELECT `LHS`.`code` AS `code`,
		                   `LHS`.`name` AS `name`,
		                   `LHS`.`continent` AS `continent`,
		                   `LHS`.`region` AS `region`,
		                   `LHS`.`surfacearea` AS `surfacearea`,
		                   `LHS`.`indepyear` AS `indepyear`,
		                   `LHS`.`population` AS `population`,
		                   `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
		                   `LHS`.`gnp` AS `gnp`,
		                   `LHS`.`gnpold` AS `gnpold`,
		                   `LHS`.`localname` AS `localname`,
		                   `LHS`.`governmentform` AS `governmentform`,
		                   `LHS`.`headofstate` AS `headofstate`,
		                   `LHS`.`capital` AS `capital`,
		                   `LHS`.`code2` AS `code2`,
		                   `RHS`.`language` AS `language`,
		                   `RHS`.`isofficial` AS `isofficial`,
		                   `RHS`.`percentage` AS `percentage`
		            FROM
		              (SELECT *
		               FROM `country`
		               WHERE (`indepyear` <= 1930.0)) AS `LHS`
		            INNER JOIN `countrylanguage` AS `RHS` ON (`LHS`.`code` = `RHS`.`countrycode`)))
		      WHERE (`isofficial` = 'T')))
		ORDER BY count_distinct_t2_language_
		
		

	   count_distinct_t2_language_
	0                           11
No solution for instance db2csv/world_1/0113_dev (4664)
No solution for instance db2csv/world_1/0068_dev (4665)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_30706.sqlite3'
Wrong output for base solution in instance db2csv/world_1/0030_dev (4667)
	EXPECTED OUTPUT ====

	     avg_gnp_  sum_population_
	0  510.333333           329000
	ACTUAL OUTPUT ====

		SELECT avg(GNP),
		       sum(population)
		FROM country
		WHERE GovernmentForm = "US Territory"

	     avg(gnp)  sum(population)
	0  510.333333           329000
Wrong output for ground truth in instance db2csv/world_1/0030_dev (4667)
No solution for instance db2csv/world_1/0085_dev (4668)
No solution for instance db2csv/world_1/0089_dev (4670)
No solution for instance db2csv/world_1/0059_dev (4671)
Wrong output for fuzzied solution in instance db2csv/world_1/0051_dev (4672)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.Region
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		WHERE T2.Language = "English"
		  OR T2.Language = "Dutch"

	                           region
	0                  (uIEHCaribbean
	1           9nwSouthern Europe)Nm
	2                       Caribbean
	3  LeL88Southern and Central Asia
	4       Southern and Central Asia
	5  Y(ZVgSouthern and Central Asia
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `region`
		FROM
		  (SELECT `LHS`.`countrycode` AS `countrycode`,
		          `LHS`.`language` AS `language`,
		          `LHS`.`isofficial` AS `isofficial`,
		          `LHS`.`percentage` AS `percentage`,
		          `RHS`.`name` AS `name`,
		          `RHS`.`continent` AS `continent`,
		          `RHS`.`region` AS `region`,
		          `RHS`.`surfacearea` AS `surfacearea`,
		          `RHS`.`indepyear` AS `indepyear`,
		          `RHS`.`population` AS `population`,
		          `RHS`.`lifeexpectancy` AS `lifeexpectancy`,
		          `RHS`.`gnp` AS `gnp`,
		          `RHS`.`gnpold` AS `gnpold`,
		          `RHS`.`localname` AS `localname`,
		          `RHS`.`governmentform` AS `governmentform`,
		          `RHS`.`headofstate` AS `headofstate`,
		          `RHS`.`capital` AS `capital`,
		          `RHS`.`code2` AS `code2`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM `countrylanguage`
		         WHERE (`language` = 'English'))
		      WHERE (`language` != 'Dutch')) AS LHS
		   INNER JOIN country AS RHS ON (LHS.countrycode = RHS.code))
		ORDER BY region
		
		

	                      region
	0      9nwSouthern Europe)Nm
	1                  Caribbean
	2  Southern and Central Asia
No solution for instance db2csv/world_1/0022_dev (4673)
Wrong output for base solution in instance db2csv/world_1/0097_dev (4674)
	EXPECTED OUTPUT ====

	   sum_population_  avg_lifeexpectancy_      continent
	0        784475000            52.571930         Africa
	1       3705025700            67.441176           Asia
	2         30401150            69.715000        Oceania
	3        345780000            70.946154  South America
	ACTUAL OUTPUT ====

		SELECT sum(Population),
		       avg(LifeExpectancy),
		       Continent
		FROM country
		GROUP BY Continent
		HAVING avg(LifeExpectancy) < 72

	   sum(population)  avg(lifeexpectancy)      continent
	0        784475000            52.571930         Africa
	1       3705025700            67.441176           Asia
	2         30401150            69.715000        Oceania
	3        345780000            70.946154  South America
Wrong output for ground truth in instance db2csv/world_1/0097_dev (4674)
No solution for instance db2csv/world_1/0100_dev (4678)
Wrong output for fuzzied solution in instance db2csv/world_1/0091_dev (4679)
	EXPECTED OUTPUT ====

		SELECT COUNT(T2.Language),
		       T1.Name
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		GROUP BY T1.Name
		HAVING COUNT(*) > 2

	    count(t2.language)            name
	0                    3          Algeri
	1                    3   hmzAlgeria(Fd
	2                    4    e3ArmeniauCC
	3                    4  0kcJnSri Lanka
	4                    4    Ekg5uSomalia
	5                    4        Sri Lank
	6                    5          lgeria
	7                    6    ArmeniaoyteZ
	8                    6          rmenia
	9                    8       Sri Lanka
	10                   9          omalia
	11                  10         Armenia
	12                  10          Somali
	13                  11         Algeria
	14                  24         Somalia
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count_t2_language_,
		       name
		FROM
		  (SELECT countrycode,
		          name,
		          COUNT(DISTINCT LANGUAGE) AS n_distinct
		   FROM
		     (SELECT code,
		             name,
		             continent,
		             region,
		             surfacearea,
		             indepyear,
		             population,
		             lifeexpectancy,
		             gnp,
		             gnpold,
		             localname,
		             governmentform,
		             headofstate,
		             capital,
		             code2,
		             LANGUAGE,
		             isofficial,
		             percentage,
		             code AS countrycode
		      FROM
		        (SELECT LHS.code AS code,
		                LHS.name AS name,
		                LHS.continent AS continent,
		                LHS.region AS region,
		                LHS.surfacearea AS surfacearea,
		                LHS.indepyear AS indepyear,
		                LHS.population AS population,
		                LHS.lifeexpectancy AS lifeexpectancy,
		                LHS.gnp AS gnp,
		                LHS.gnpold AS gnpold,
		                LHS.localname AS localname,
		                LHS.governmentform AS governmentform,
		                LHS.headofstate AS headofstate,
		                LHS.capital AS capital,
		                LHS.code2 AS code2,
		                RHS.language AS LANGUAGE,
		                RHS.isofficial AS isofficial,
		                RHS.percentage AS percentage
		         FROM country AS LHS
		         INNER JOIN countrylanguage AS RHS ON (LHS.code = RHS.countrycode)))
		   GROUP BY countrycode,
		            name)
		WHERE (n_distinct > 2)
		ORDER BY count_t2_language_
		
		

	    count_t2_language_            name
	0                    3         Algeria
	1                    3         Algeria
	2                    3         Armenia
	3                    3          Somali
	4                    3          Somali
	5                    3       Sri Lanka
	6                    3       Sri Lanka
	7                    3   hmzAlgeria(Fd
	8                    3          omalia
	9                    3          rmenia
	10                   3          rmenia
	11                   4    e3ArmeniauCC
	12                   4  0kcJnSri Lanka
	13                   4         Algeria
	14                   4    Ekg5uSomalia
	15                   4          Somali
	16                   4         Somalia
	17                   4         Somalia
	18                   4         Somalia
	19                   5          lgeria
	20                   6         Armenia
	21                   6    ArmeniaoyteZ
	22                   6          omalia
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_30706.sqlite3'
Wrong output for fuzzied solution in instance db2csv/world_1/0007_dev (4682)
	EXPECTED OUTPUT ====

		SELECT Continent
		FROM country
		WHERE Name = "Anguilla"

	     continent
	0       Africa
	1       Africa
	2         Asia
	3  J9HiDAfrica
	4          sia
	5          sia
	ACTUAL OUTPUT ====

		
		SELECT `continent`
		FROM `country`
		WHERE (`localname` = 'Anguilla')
		ORDER BY continent
		
		

	Empty DataFrame
	Columns: [continent]
	Index: []
Wrong output for fuzzied solution in instance db2csv/world_1/0044_dev (4685)
	EXPECTED OUTPUT ====

		SELECT COUNT(*)
		FROM
		  (SELECT T1.Name
		   FROM country AS T1
		   JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		   WHERE T2.Language = "English" INTERSECT
		     SELECT T1.Name
		     FROM country AS T1
		     JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = "Dutch")

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT *
		   FROM `countrylanguage` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `countrylanguage`
		           WHERE (`language` = 'English')) AS `RHS`
		        WHERE (`LHS`.`percentage` = `RHS`.`percentage`) ))
		WHERE (`language` = 'Dutch')
		ORDER BY count___
		
		

	   count___
	0         4
No solution for instance db2csv/world_1/0067_dev (4686)
No solution for instance db2csv/world_1/0086_dev (4687)
No solution for instance db2csv/world_1/0082_dev (4688)
No solution for instance db2csv/world_1/0056_dev (4689)
Wrong output for fuzzied solution in instance db2csv/world_1/0020_dev (4690)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM country
		WHERE Continent = "Asia"
		ORDER BY LifeExpectancy
		LIMIT 1

	         name
	0  irGOVChile
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `code`,
		          `name`,
		          `continent`,
		          `region`,
		          `surfacearea`,
		          `indepyear`,
		          `population`,
		          `lifeexpectancy`,
		          `gnp`,
		          `gnpold`,
		          `localname`,
		          `governmentform`,
		          `headofstate`,
		          `capital`,
		          `code2`,
		          MIN(`lifeexpectancy`) OVER () AS `minlifeexpectancy`
		   FROM
		     (SELECT *
		      FROM `country`
		      WHERE (`continent` = 'Asia')))
		WHERE (minlifeexpectancy = lifeexpectancy)
		ORDER BY name
		
		

	                             name
	0  British Indian Ocean Territory
	1                       Venezuela
	2                      irGOVChile
Wrong output for fuzzied solution in instance db2csv/world_1/0025_dev (4691)
	EXPECTED OUTPUT ====

		SELECT sum(SurfaceArea)
		FROM country
		WHERE Continent = "Asia"
		  OR Continent = "Europe"

	   sum(surfacearea)
	0         736807.99
	ACTUAL OUTPUT ====

		
		SELECT `sumsurfacearea` AS `sum_surfacearea_`
		FROM
		  (SELECT SUM(`surfacearea`) AS `sumsurfacearea`
		   FROM
		     (SELECT *
		      FROM `country` AS `LHS`
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM
		                (SELECT *
		                 FROM `country`
		                 WHERE (`continent` != 'Asia'))
		              WHERE (`continent` != 'Europe')) AS RHS
		           WHERE (LHS.gnp = RHS.gnp
		                  AND LHS.population = RHS.population) )))
		ORDER BY sum_surfacearea_
		
		

	   sum_surfacearea_
	0         624719.97
Wrong output for fuzzied solution in instance db2csv/world_1/0109_dev (4693)
	EXPECTED OUTPUT ====

		select sum(population),
		       avg(surfacearea)
		from country
		where continent = "north america"
		  and surfacearea > 3000

	   sum(population)  avg(surfacearea)
	0         61855004        177494.005
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT lifeexpectancy AS sum_population_,
		                gnpold AS avg_surfacearea_
		FROM country
		WHERE (population < 3000)
		ORDER BY sum_population_
		
		

	Empty DataFrame
	Columns: [sum_population_, avg_surfacearea_]
	Index: []
No solution for instance db2csv/world_1/0115_dev (4695)
No solution for instance db2csv/world_1/0090_dev (4696)
No solution for instance db2csv/world_1/0070_dev (4697)
No solution for instance db2csv/world_1/0108_dev (4703)
Wrong output for base solution in instance db2csv/network_1/0018_dev (4706)
	EXPECTED OUTPUT ====

	   grade
	0      9
	ACTUAL OUTPUT ====

		SELECT grade
		FROM Highschooler
		GROUP BY grade
		ORDER BY count(*) DESC
		LIMIT 1

	   grade
	0     12
Wrong output for ground truth in instance db2csv/network_1/0018_dev (4706)
No solution for instance db2csv/network_1/0033_dev (4707)
Wrong output for fuzzied solution in instance db2csv/network_1/0039_dev (4708)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id INTERSECT
		SELECT T2.name
		FROM Likes AS T1
		JOIN Highschooler AS T2 ON T1.liked_id = T2.id

	           name
	0     MH5kLogan
	1          G8Xp
	2        Gabrie
	3       Gabriel
	4          Kyle
	5     KylekkCRX
	6          Loga
	7         Logan
	8   c2ZeaPRfpYh
	9          eaPR
	10      lTTDav5
	11  nQJLogansHf
	12         ogan
	13       sUy6W4
	14   vaAmhLogan
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.grade AS grade,
		          LHS.student_id AS student_id,
		          LHS.liked_id AS liked_id
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.name AS name,
		             LHS.grade AS grade,
		             RHS.student_id AS student_id,
		             RHS.liked_id AS liked_id
		      FROM highschooler AS LHS
		      CROSS JOIN likes AS RHS) AS LHS
		   INNER JOIN
		     (SELECT id,
		             name,
		             grade,
		             student_id,
		             id AS liked_id
		      FROM
		        (SELECT LHS.id AS id,
		                LHS.name AS name,
		                LHS.grade AS grade,
		                RHS.student_id AS student_id
		         FROM highschooler AS LHS
		         INNER JOIN likes AS RHS ON (LHS.id = RHS.liked_id))) AS RHS ON (LHS.id = RHS.id
		                                                                            AND LHS.name = RHS.name
		                                                                            AND LHS.grade = RHS.grade
		                                                                            AND LHS.student_id = RHS.student_id
		                                                                            AND LHS.liked_id = RHS.liked_id))
		ORDER BY name
		
		

	           name
	0      4M23kQpV
	1     MH5kLogan
	2          5KCo
	3   FS2Haleymkd
	4          G8Xp
	5        Gabrie
	6       Gabriel
	7          Hale
	8         Haley
	9       Joq0lsW
	10          KCo
	11         Kyle
	12    KylekkCRX
	13         Loga
	14        Logan
	15   Pg4Kyle)TK
	16  c2ZeaPRfpYh
	17         eaPR
	18      lTTDav5
	19  nQJLogansHf
	20         ogan
	21       sUy6W4
	22      tzzxNjG
	23   vaAmhLogan
Wrong output for fuzzied solution in instance db2csv/network_1/0029_dev (4709)
	EXPECTED OUTPUT ====

		SELECT T3.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		JOIN Highschooler AS T3 ON T1.friend_id = T3.id
		WHERE T2.name = "Kyle"

	            name
	0  )1)yMBrittany
	1            Joh
	2        rittany
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `highschooler`
		      WHERE (`name` != 'Kyle')) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT id,
		                  name,
		                  grade,
		                  student_id,
		                  id AS friend_id
		           FROM
		             (SELECT LHS.id AS id,
		                     LHS.name AS name,
		                     LHS.grade AS grade,
		                     RHS.student_id AS student_id
		              FROM highschooler AS LHS
		              INNER JOIN friend AS RHS ON (LHS.id = RHS.friend_id))) AS RHS
		        WHERE (LHS.id = RHS.id
		               AND LHS.name = RHS.name) ))
		ORDER BY name
		
		

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance db2csv/network_1/0054_dev (4710)
	EXPECTED OUTPUT ====

		SELECT avg(grade)
		FROM Highschooler
		WHERE id IN
		    (SELECT T1.student_id
		     FROM Friend AS T1
		     JOIN Highschooler AS T2 ON T1.student_id = T2.id)

	   avg(grade)
	0         9.8
	ACTUAL OUTPUT ====

		
		SELECT meangrade AS avg_grade_
		FROM
		  (SELECT AVG(grade) AS meangrade
		   FROM
		     (SELECT *
		      FROM
		        (SELECT id,
		                name,
		                grade,
		                AVG(id) OVER () AS meanid
		         FROM highschooler)
		      WHERE (meanid <= id)))
		ORDER BY avg_grade_
		
		

	   avg_grade_
	0    9.833333
No solution for instance db2csv/network_1/0048_dev (4711)
Wrong output for fuzzied solution in instance db2csv/network_1/0037_dev (4712)
	EXPECTED OUTPUT ====

		SELECT student_id
		FROM Friend INTERSECT
		SELECT liked_id
		FROM Likes

	    student_id
	0  -9183909867
	1  -4428529116
	2  -3865919954
	3  -3781309103
	4         1508
	5         1509
	6         1510
	7         1511
	8         1512
	9         1707
	10        1708
	11        1709
	12        1710
	13        1711
	14        1780
	15        1781
	16        1782
	17        1783
	18        1784
	19   904307959
	20   994262450
	21  1232820946
	22  2188644047
	23  2376503011
	24  2633021967
	25  3775974215
	26  4824916187
	27  5190065304
	28  5731738953
	29  6231813077
	30  6268701580
	31  7316846789
	32  7986557575
	33  8073137116
	34  8150454957
	35  8219704912
	36  9549819041
	37  9573239844
	ACTUAL OUTPUT ====

		
		SELECT liked_id AS student_id
		FROM
		  (SELECT liked_id
		   FROM likes INTERSECT SELECT liked_id
		   FROM likes)
		ORDER BY student_id
		
		

	    student_id
	0  -9183909867
	1  -4428529116
	2  -3865919954
	3  -3781309103
	4   -631278967
	5         1508
	6         1509
	7         1510
	8         1511
	9         1512
	10        1707
	11        1708
	12        1709
	13        1710
	14        1711
	15        1780
	16        1781
	17        1782
	18        1783
	19        1784
	20   904307959
	21   994262450
	22  1232820946
	23  2188644047
	24  2376503011
	25  2633021967
	26  3775974215
	27  4824916187
	28  5190065304
	29  5731738953
	30  6231813077
	31  6268701580
	32  7316846789
	33  7986557575
	34  8073137116
	35  8150454957
	36  8219704912
	37  9504859153
	38  9549819041
	39  9573239844
Wrong output for fuzzied solution in instance db2csv/network_1/0038_dev (4714)
	EXPECTED OUTPUT ====

		SELECT student_id
		FROM Friend INTERSECT
		SELECT liked_id
		FROM Likes

	    student_id
	0  -9183909867
	1  -4428529116
	2  -3865919954
	3  -3781309103
	4         1508
	5         1509
	6         1510
	7         1511
	8         1512
	9         1707
	10        1708
	11        1709
	12        1710
	13        1711
	14        1780
	15        1781
	16        1782
	17        1783
	18        1784
	19   904307959
	20   994262450
	21  1232820946
	22  2188644047
	23  2376503011
	24  2633021967
	25  3775974215
	26  4824916187
	27  5190065304
	28  5731738953
	29  6231813077
	30  6268701580
	31  7316846789
	32  7986557575
	33  8073137116
	34  8150454957
	35  8219704912
	36  9549819041
	37  9573239844
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT liked_id AS student_id
		FROM likes
		ORDER BY student_id
		
		

	    student_id
	0  -9183909867
	1  -4428529116
	2  -3865919954
	3  -3781309103
	4   -631278967
	5         1508
	6         1509
	7         1510
	8         1511
	9         1512
	10        1707
	11        1708
	12        1709
	13        1710
	14        1711
	15        1780
	16        1781
	17        1782
	18        1783
	19        1784
	20   904307959
	21   994262450
	22  1232820946
	23  2188644047
	24  2376503011
	25  2633021967
	26  3775974215
	27  4824916187
	28  5190065304
	29  5731738953
	30  6231813077
	31  6268701580
	32  7316846789
	33  7986557575
	34  8073137116
	35  8150454957
	36  8219704912
	37  9504859153
	38  9549819041
	39  9573239844
No solution for instance db2csv/network_1/0036_dev (4715)
Wrong output for fuzzied solution in instance db2csv/network_1/0003_dev (4716)
	EXPECTED OUTPUT ====

		SELECT name,
		       grade
		FROM Highschooler

	            name      grade
	0         Alexis          7
	1          Alexi          9
	2          Alexi          9
	3    Andrew3cv)u          9
	4    AndrewhWGqk          9
	5       FLc tYIw          9
	6        Gabriel          9
	7   QIijVJessica          9
	8        Jessica         10
	9         Andrew         11
	10  HQ(AlexisoBk         11
	11      ITDYZw8H         11
	12  qJyqfJp2l4XQ         11
	13  v6fImGabriel         11
	14        Andrew         12
	15   mxfhcAndrew  989523641
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name,
		                grade
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.grade AS grade,
		          RHS.student_id AS student_id,
		          RHS.liked_id AS liked_id
		   FROM highschooler AS LHS
		   CROSS JOIN likes AS RHS)
		ORDER BY name
		
		

	            name      grade
	0         Alexis          7
	1          Alexi          9
	2    Andrew3cv)u          9
	3    AndrewhWGqk          9
	4       FLc tYIw          9
	5        Gabriel          9
	6   QIijVJessica          9
	7        Jessica         10
	8         Andrew         11
	9   HQ(AlexisoBk         11
	10      ITDYZw8H         11
	11  qJyqfJp2l4XQ         11
	12  v6fImGabriel         11
	13        Andrew         12
	14   mxfhcAndrew  989523641
No solution for instance db2csv/network_1/0034_dev (4719)
Wrong output for fuzzied solution in instance db2csv/network_1/0042_dev (4722)
	EXPECTED OUTPUT ====

		SELECT student_id,
		       count(*)
		FROM Likes
		GROUP BY student_id

	   student_id  count(*)
	0        1662         2
	1        1709         2
	2        1500         4
	3        1501         4
	4        1661         4
	5        1663         4
	6        1502         7
	7        1708         7
	8        1710         7
	9        1503         8
	ACTUAL OUTPUT ====

		
		SELECT student_id,
		       n AS count___
		FROM
		  (SELECT student_id,
		          COUNT() AS n
		   FROM
		     (SELECT student_id
		      FROM likes INTERSECT SELECT student_id
		      FROM likes)
		   GROUP BY student_id)
		ORDER BY student_id
		
		

	   student_id  count___
	0        1500         1
	1        1501         1
	2        1502         1
	3        1503         1
	4        1661         1
	5        1662         1
	6        1663         1
	7        1708         1
	8        1709         1
	9        1710         1
Wrong output for base solution in instance db2csv/network_1/0017_dev (4724)
	EXPECTED OUTPUT ====

	   grade
	0      9
	ACTUAL OUTPUT ====

		SELECT grade
		FROM Highschooler
		GROUP BY grade
		ORDER BY count(*) DESC
		LIMIT 1

	   grade
	0     12
Wrong output for ground truth in instance db2csv/network_1/0017_dev (4724)
Wrong output for fuzzied solution in instance db2csv/network_1/0049_dev (4725)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		WHERE T2.grade > 5
		GROUP BY T1.student_id
		HAVING count(*) >= 2

	             name
	0         Brittan
	1        Brittany
	2        Brittany
	3        Brittany
	4        Brittany
	5  DwxBrittanylGe
	6            John
	7       T5IaXJohn
	8         rittany
	9         rittany
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.grade AS grade,
		          RHS.n AS n
		   FROM highschooler AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT student_id,
		                COUNT() AS n
		         FROM friend
		         GROUP BY student_id)
		      WHERE (n >= 2)) AS RHS ON (LHS.id = RHS.student_id))
		ORDER BY name
		
		

	              name
	0    ()Ye8Brittany
	1          Brittan
	2         Brittany
	3         Brittany
	4         Brittany
	5         Brittany
	6         Brittany
	7   DwxBrittanylGe
	8             John
	9        T5IaXJohn
	10         rittany
	11         rittany
No solution for instance db2csv/network_1/0026_dev (4726)
No solution for instance db2csv/network_1/0045_dev (4727)
No solution for instance db2csv/network_1/0035_dev (4728)
Wrong output for fuzzied solution in instance db2csv/network_1/0016_dev (4729)
	EXPECTED OUTPUT ====

		SELECT grade,
		       count(*)
		FROM Highschooler
		GROUP BY grade

	   grade  count(*)
	0      7         1
	1     10         2
	2      9         3
	3     11         4
	ACTUAL OUTPUT ====

		
		SELECT grade,
		       COUNT(*) OVER () AS count___
		FROM
		  (SELECT grade,
		          COUNT() AS n
		   FROM highschooler
		   GROUP BY grade)
		ORDER BY grade
		
		

	   grade  count___
	0      7         4
	1      9         4
	2     10         4
	3     11         4
Wrong output for fuzzied solution in instance db2csv/network_1/0055_dev (4732)
	EXPECTED OUTPUT ====

		SELECT min(grade)
		FROM Highschooler
		WHERE id NOT IN
		    (SELECT T1.student_id
		     FROM Friend AS T1
		     JOIN Highschooler AS T2 ON T1.student_id = T2.id)

	  min(grade)
	0       None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT MIN(grade) OVER () AS min_grade_
		FROM
		  (SELECT id,
		          name,
		          grade,
		          MIN(grade) OVER () AS mingrade
		   FROM highschooler)
		WHERE (mingrade != grade)
		ORDER BY min_grade_
		
		

	   min_grade_
	0           9
No solution for instance db2csv/network_1/0046_dev (4733)
Wrong output for fuzzied solution in instance db2csv/network_1/0041_dev (4735)
	EXPECTED OUTPUT ====

		SELECT student_id,
		       count(*)
		FROM Likes
		GROUP BY student_id

	   student_id  count(*)
	0        1662         2
	1        1709         2
	2        1500         4
	3        1501         4
	4        1661         4
	5        1663         4
	6        1502         7
	7        1708         7
	8        1710         7
	9        1503         8
	ACTUAL OUTPUT ====

		
		SELECT student_id,
		       n AS count___
		FROM
		  (SELECT student_id,
		          COUNT() AS n
		   FROM
		     (SELECT student_id
		      FROM likes INTERSECT SELECT student_id
		      FROM likes)
		   GROUP BY student_id)
		ORDER BY student_id
		
		

	   student_id  count___
	0        1500         1
	1        1501         1
	2        1502         1
	3        1503         1
	4        1661         1
	5        1662         1
	6        1663         1
	7        1708         1
	8        1709         1
	9        1710         1
No solution for instance db2csv/network_1/0019_dev (4736)
No solution for instance db2csv/network_1/0047_dev (4737)
Wrong output for fuzzied solution in instance db2csv/network_1/0040_dev (4740)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id INTERSECT
		SELECT T2.name
		FROM Likes AS T1
		JOIN Highschooler AS T2 ON T1.liked_id = T2.id

	           name
	0     MH5kLogan
	1          G8Xp
	2        Gabrie
	3       Gabriel
	4          Kyle
	5     KylekkCRX
	6          Loga
	7         Logan
	8   c2ZeaPRfpYh
	9          eaPR
	10      lTTDav5
	11  nQJLogansHf
	12         ogan
	13       sUy6W4
	14   vaAmhLogan
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT name
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.name AS name,
		             LHS.grade AS grade,
		             RHS.student_id AS student_id
		      FROM highschooler AS LHS
		      INNER JOIN likes AS RHS ON (LHS.id = RHS.liked_id)) INTERSECT SELECT name
		   FROM highschooler)
		ORDER BY name
		
		

	           name
	0      4M23kQpV
	1     MH5kLogan
	2          5KCo
	3   FS2Haleymkd
	4          G8Xp
	5        Gabrie
	6       Gabriel
	7          Hale
	8         Haley
	9       Joq0lsW
	10          KCo
	11         Kyle
	12    KylekkCRX
	13         Loga
	14        Logan
	15   Pg4Kyle)TK
	16  c2ZeaPRfpYh
	17         eaPR
	18      lTTDav5
	19  nQJLogansHf
	20         ogan
	21       sUy6W4
	22      tzzxNjG
	23   vaAmhLogan
Wrong output for fuzzied solution in instance db2csv/network_1/0004_dev (4741)
	EXPECTED OUTPUT ====

		SELECT name,
		       grade
		FROM Highschooler

	            name      grade
	0         Alexis          7
	1          Alexi          9
	2          Alexi          9
	3    Andrew3cv)u          9
	4    AndrewhWGqk          9
	5       FLc tYIw          9
	6        Gabriel          9
	7   QIijVJessica          9
	8        Jessica         10
	9         Andrew         11
	10  HQ(AlexisoBk         11
	11      ITDYZw8H         11
	12  qJyqfJp2l4XQ         11
	13  v6fImGabriel         11
	14        Andrew         12
	15   mxfhcAndrew  989523641
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name,
		                grade
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.grade AS grade,
		          RHS.student_id AS student_id,
		          RHS.friend_id AS friend_id
		   FROM highschooler AS LHS
		   CROSS JOIN
		     (SELECT *
		      FROM friend AS LHS
		      WHERE EXISTS
		          (SELECT 1
		           FROM likes AS RHS
		           WHERE (LHS.student_id = RHS.student_id) )) AS RHS)
		ORDER BY name
		
		

	            name      grade
	0         Alexis          7
	1          Alexi          9
	2    Andrew3cv)u          9
	3    AndrewhWGqk          9
	4       FLc tYIw          9
	5        Gabriel          9
	6   QIijVJessica          9
	7        Jessica         10
	8         Andrew         11
	9   HQ(AlexisoBk         11
	10      ITDYZw8H         11
	11  qJyqfJp2l4XQ         11
	12  v6fImGabriel         11
	13        Andrew         12
	14   mxfhcAndrew  989523641
Wrong output for fuzzied solution in instance db2csv/network_1/0030_dev (4742)
	EXPECTED OUTPUT ====

		SELECT T3.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		JOIN Highschooler AS T3 ON T1.friend_id = T3.id
		WHERE T2.name = "Kyle"

	            name
	0  )1)yMBrittany
	1            Joh
	2        rittany
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `highschooler`
		      WHERE (`name` != 'Kyle')) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT id,
		                  name,
		                  grade,
		                  student_id,
		                  id AS friend_id
		           FROM
		             (SELECT LHS.id AS id,
		                     LHS.name AS name,
		                     LHS.grade AS grade,
		                     RHS.student_id AS student_id
		              FROM highschooler AS LHS
		              INNER JOIN friend AS RHS ON (LHS.id = RHS.friend_id))) AS RHS
		        WHERE (LHS.grade = RHS.grade
		               AND LHS.id = RHS.id) ))
		ORDER BY name
		
		

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance db2csv/network_1/0028_dev (4743)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		GROUP BY T1.student_id
		HAVING count(*) >= 3

	            name
	0  )1)yMBrittany
	1       Brittany
	2       Brittany
	3       Brittany
	4       Brittany
	5           John
	6           John
	7           John
	8            ohn
	9        rittany
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT student_id,
		          n,
		          name,
		          grade,
		          student_id AS id
		   FROM
		     (SELECT LHS.student_id AS student_id,
		             LHS.n AS n,
		             RHS.name AS name,
		             RHS.grade AS grade
		      FROM
		        (SELECT student_id,
		                COUNT() AS n
		         FROM friend
		         GROUP BY student_id) AS LHS
		      INNER JOIN highschooler AS RHS ON (LHS.student_id = RHS.id)))
		WHERE (n = 3)
		ORDER BY name
		
		

	   name
	0  John
Wrong output for fuzzied solution in instance db2csv/network_1/0051_dev (4744)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Likes AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		WHERE T2.name = "Kyle"

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `name`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`id` AS `id`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`grade` AS `grade`,
		                `RHS`.`student_id` AS `student_id`,
		                `RHS`.`liked_id` AS `liked_id`
		         FROM `highschooler` AS `LHS`
		         CROSS JOIN `likes` AS `RHS`)
		      WHERE (`name` = 'Kyle')))
		ORDER BY count___
		
		

	   count___
	0         1
Wrong output for fuzzied solution in instance db2csv/network_1/0013_dev (4746)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Highschooler
		WHERE grade = 9
		  OR grade = 10

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM highschooler
		      WHERE (grade > 10)))
		WHERE (n < 9)
		ORDER BY count___
		
		

	   count___
	0         2
Wrong output for fuzzied solution in instance db2csv/network_1/0014_dev (4747)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Highschooler
		WHERE grade = 9
		  OR grade = 10

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM highschooler
		      WHERE (grade > 10)))
		WHERE (n <= 9)
		ORDER BY count___
		
		

	   count___
	0         2
Wrong output for fuzzied solution in instance db2csv/network_1/0031_dev (4748)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		WHERE T2.name = "Kyle"

	   count(*)
	0         3
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `name`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`student_id` AS `student_id`,
		                `LHS`.`friend_id` AS `friend_id`,
		                `RHS`.`id` AS `id`,
		                `RHS`.`name` AS `name`,
		                `RHS`.`grade` AS `grade`
		         FROM `friend` AS `LHS`
		         CROSS JOIN `highschooler` AS `RHS`)
		      WHERE (`name` = 'Kyle')))
		ORDER BY count___
		
		

	   count___
	0         1
Wrong output for fuzzied solution in instance db2csv/network_1/0056_dev (4753)
	EXPECTED OUTPUT ====

		SELECT min(grade)
		FROM Highschooler
		WHERE id NOT IN
		    (SELECT T1.student_id
		     FROM Friend AS T1
		     JOIN Highschooler AS T2 ON T1.student_id = T2.id)

	  min(grade)
	0       None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT MIN(grade) OVER () AS min_grade_
		FROM
		  (SELECT *
		   FROM highschooler AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT id,
		                  name,
		                  MIN(grade) OVER () AS grade
		           FROM highschooler) AS RHS
		        WHERE (LHS.id = RHS.id
		               AND LHS.name = RHS.name
		               AND LHS.grade = RHS.grade) ))
		ORDER BY min_grade_
		
		

	   min_grade_
	0           9
No solution for instance db2csv/network_1/0020_dev (4754)
Wrong output for fuzzied solution in instance db2csv/network_1/0025_dev (4755)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		GROUP BY T1.student_id
		ORDER BY count(*) DESC
		LIMIT 1

	           name
	0  4t5AustinnpO
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.student_id AS student_id,
		          LHS.n AS n,
		          LHS.name AS name,
		          LHS.grade AS grade,
		          LHS.id AS id
		   FROM
		     (SELECT LHS.student_id AS student_id,
		             LHS.n AS n,
		             RHS.name AS name,
		             RHS.grade AS grade,
		             RHS.id AS id
		      FROM
		        (SELECT student_id,
		                COUNT() AS n
		         FROM friend
		         GROUP BY student_id) AS LHS
		      INNER JOIN
		        (SELECT student_id,
		                n,
		                name,
		                grade,
		                student_id AS id
		         FROM
		           (SELECT LHS.student_id AS student_id,
		                   LHS.n AS n,
		                   RHS.name AS name,
		                   RHS.grade AS grade
		            FROM
		              (SELECT student_id,
		                      COUNT() AS n
		               FROM friend
		               GROUP BY student_id) AS LHS
		            INNER JOIN highschooler AS RHS ON (LHS.student_id = RHS.id))) AS RHS ON (LHS.student_id = RHS.student_id
		                                                                                        AND LHS.n = RHS.n)) AS LHS
		   INNER JOIN
		     (SELECT MAX(n) AS n
		      FROM
		        (SELECT student_id,
		                COUNT() AS n
		         FROM friend
		         GROUP BY student_id)) AS RHS ON (LHS.n = RHS.n))
		ORDER BY name
		
		

	           name
	0  4t5AustinnpO
	1        Austin
	2         ordan
Wrong output for fuzzied solution in instance db2csv/network_1/0050_dev (4757)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		WHERE T2.grade > 5
		GROUP BY T1.student_id
		HAVING count(*) >= 2

	             name
	0         Brittan
	1        Brittany
	2        Brittany
	3        Brittany
	4        Brittany
	5  DwxBrittanylGe
	6            John
	7       T5IaXJohn
	8         rittany
	9         rittany
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT student_id,
		          n,
		          name,
		          grade,
		          student_id AS id
		   FROM
		     (SELECT LHS.student_id AS student_id,
		             LHS.n AS n,
		             RHS.name AS name,
		             RHS.grade AS grade
		      FROM
		        (SELECT student_id,
		                COUNT() AS n
		         FROM friend
		         GROUP BY student_id) AS LHS
		      INNER JOIN highschooler AS RHS ON (LHS.student_id = RHS.id)))
		WHERE (n >= 2)
		ORDER BY name
		
		

	              name
	0    ()Ye8Brittany
	1          Brittan
	2         Brittany
	3         Brittany
	4         Brittany
	5         Brittany
	6         Brittany
	7   DwxBrittanylGe
	8             John
	9        T5IaXJohn
	10         rittany
	11         rittany
Wrong output for fuzzied solution in instance db2csv/network_1/0032_dev (4759)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		WHERE T2.name = "Kyle"

	   count(*)
	0         3
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `name`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM `highschooler`
		      WHERE (`name` = 'Kyle')))
		ORDER BY count___
		
		

	   count___
	0         1
No solution for instance db2csv/battle_death/0001_dev (4762)
No solution for instance db2csv/battle_death/0016_dev (4764)
No solution for instance db2csv/battle_death/0009_dev (4765)
Wrong output for fuzzied solution in instance db2csv/battle_death/0008_dev (4767)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.id,
		                T1.name
		FROM battle AS T1
		JOIN ship AS T2 ON T1.id = T2.lost_in_battle
		WHERE T2.ship_type = 'Brig'

	   id                    name
	0   2    Battle of Adrianople
	1   4         attle of Serres
	2   5        Battle of Serres
	3   9  kIUBattle of SerresLo5
	ACTUAL OUTPUT ====

		
		SELECT `lost_in_battle` AS `id`,
		       `name_other` AS `name`
		FROM
		  (SELECT `LHS`.`lost_in_battle` AS `lost_in_battle`,
		          `LHS`.`id` AS `id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`tonnage` AS `tonnage`,
		          `LHS`.`ship_type` AS `ship_type`,
		          `LHS`.`location` AS `location`,
		          `LHS`.`disposition_of_ship` AS `disposition_of_ship`,
		          `RHS`.`name` AS `name_other`,
		          `RHS`.`date` AS `date`,
		          `RHS`.`bulgarian_commander` AS `bulgarian_commander`,
		          `RHS`.`latin_commander` AS `latin_commander`,
		          `RHS`.`result` AS `result`
		   FROM
		     (SELECT *
		      FROM `ship`
		      WHERE (`ship_type` = 'Brig')) AS LHS
		   INNER JOIN battle AS RHS ON (LHS.lost_in_battle = RHS.id))
		ORDER BY id
		
		

	   id                    name
	0   2    Battle of Adrianople
	1   2    Battle of Adrianople
	2   4         attle of Serres
	3   4         attle of Serres
	4   5        Battle of Serres
	5   9  kIUBattle of SerresLo5
Wrong output for fuzzied solution in instance db2csv/battle_death/0004_dev (4769)
	EXPECTED OUTPUT ====

		SELECT max(killed),
		       min(killed)
		FROM death

	   max(killed)  min(killed)
	0           30            0
	ACTUAL OUTPUT ====

		
		SELECT killed AS max_killed_,
		       injured AS min_killed_
		FROM
		  (SELECT caused_by_ship_id,
		          id,
		          note,
		          killed,
		          injured,
		          killed AS maxkilled
		   FROM
		     (SELECT LHS.caused_by_ship_id AS caused_by_ship_id,
		             LHS.id AS id,
		             LHS.note AS note,
		             LHS.killed AS killed,
		             LHS.injured AS injured
		      FROM death AS LHS
		      INNER JOIN
		        (SELECT MAX(killed) AS maxkilled
		         FROM death) AS RHS ON (LHS.killed = RHS.maxkilled)))
		ORDER BY max_killed_
		
		

	   max_killed_  min_killed_
	0           30            0
	1           30            2
Wrong output for fuzzied solution in instance db2csv/battle_death/0013_dev (4770)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM battle
		WHERE id NOT IN
		    (SELECT lost_in_battle
		     FROM ship
		     WHERE tonnage = '225' );

	   count(*)
	0        11
	ACTUAL OUTPUT ====

		
		SELECT id AS count___
		FROM
		  (SELECT MAX(id) AS id
		   FROM ship)
		WHERE (id != 225)
		ORDER BY count___
		
		

	   count___
	0         9
Wrong output for base solution in instance db2csv/battle_death/0014_dev (4771)
	EXPECTED OUTPUT ====

	                      name  date
	0  Siege of Constantinople  1235
	ACTUAL OUTPUT ====

		SELECT T1.name,
		       T1.date
		FROM battle AS T1
		JOIN ship AS T2 ON T1.id = T2.lost_in_battle
		WHERE T2.name = 'Lettice' INTERSECT
		  SELECT T1.name,
		         T1.date
		  FROM battle AS T1
		  JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = 'HMS Atalanta'

	                      name  date
	0  Siege of Constantinople  1235
Wrong output for ground truth in instance db2csv/battle_death/0014_dev (4771)
Wrong output for fuzzied solution in instance db2csv/battle_death/0015_dev (4773)
	EXPECTED OUTPUT ====

		SELECT name,
		       RESULT,
		       bulgarian_commander
		FROM battle
		EXCEPT
		SELECT T1.name,
		       T1.result,
		       T1.bulgarian_commander
		FROM battle AS T1
		JOIN ship AS T2 ON T1.id = T2.lost_in_battle
		WHERE T2.location = 'English Channel'

	                           name                   result bulgarian_commander
	0  F)pBattle of MessinopolisQ3f        Bulgarian victory        Ivan Asen II
	1       Battle of Philippopolis        Bulgarian victory             Kaloyan
	2  Battle of Philippopolisom1Xu  2p1Bulgarian victoryvzI             Kaloyan
	ACTUAL OUTPUT ====

		
		SELECT `name`,
		       `result`,
		       `bulgarian_commander`
		FROM
		  (SELECT *
		   FROM `battle` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT `lost_in_battle`,
		                  `lost_in_battle` AS `id`,
		                  `name`,
		                  `tonnage`,
		                  `ship_type`,
		                  `location`,
		                  `disposition_of_ship`,
		                  `name_other`,
		                  `date`,
		                  `bulgarian_commander`,
		                  `latin_commander`,
		                  `result`
		           FROM
		             (SELECT `LHS`.`lost_in_battle` AS `lost_in_battle`,
		                     `LHS`.`id` AS `id`,
		                     `LHS`.`name` AS `name`,
		                     `LHS`.`tonnage` AS `tonnage`,
		                     `LHS`.`ship_type` AS `ship_type`,
		                     `LHS`.`location` AS `location`,
		                     `LHS`.`disposition_of_ship` AS `disposition_of_ship`,
		                     `RHS`.`name` AS `name_other`,
		                     `RHS`.`date` AS `date`,
		                     `RHS`.`bulgarian_commander` AS `bulgarian_commander`,
		                     `RHS`.`latin_commander` AS `latin_commander`,
		                     `RHS`.`result` AS `result`
		              FROM
		                (SELECT *
		                 FROM `ship`
		                 WHERE (`location` = 'English Channel')) AS LHS
		              INNER JOIN battle AS RHS ON (LHS.lost_in_battle = RHS.id))) AS RHS
		        WHERE (LHS.bulgarian_commander = RHS.bulgarian_commander
		               AND LHS.id = RHS.id) ))
		ORDER BY name
		
		

	                           name                   result bulgarian_commander
	0  F)pBattle of MessinopolisQ3f        Bulgarian victory        Ivan Asen II
	1       Battle of Philippopolis        Bulgarian victory             Kaloyan
	2  Battle of Philippopolisom1Xu  2p1Bulgarian victoryvzI             Kaloyan
	3              Battle of Rusion         ulgarian victory             Kaloyan
Wrong output for base solution in instance db2csv/battle_death/0010_dev (4774)
	EXPECTED OUTPUT ====

	   id  name
	0   3  Mary
	ACTUAL OUTPUT ====

		SELECT T2.id,
		       T2.name
		FROM death AS T1
		JOIN ship AS t2 ON T1.caused_by_ship_id = T2.id
		GROUP BY T2.id
		ORDER BY count(*) DESC
		LIMIT 1

	   id            name
	0   5  Three Brothers
Wrong output for ground truth in instance db2csv/battle_death/0010_dev (4774)
Wrong output for fuzzied solution in instance db2csv/course_teach/0027_dev (4776)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM course_arrange AS T1
		JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID
		GROUP BY T2.Name
		HAVING COUNT(*) >= 2

	                name
	0        John Deloor
	1     Kearsley Brown
	2  NZRJohn Deloor(oW
	3  Vicente Carretero
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.teacher_id AS teacher_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.hometown AS hometown,
		          LHS.course_id AS course_id,
		          LHS.staring_date AS staring_date,
		          LHS.course AS course,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.teacher_id AS teacher_id,
		             LHS.name AS name,
		             LHS.age AS age,
		             LHS.hometown AS hometown,
		             RHS.course_id AS course_id,
		             RHS.staring_date AS staring_date,
		             RHS.course AS course
		      FROM teacher AS LHS
		      CROSS JOIN course AS RHS) AS LHS
		   INNER JOIN
		     (SELECT teacher_id,
		             COUNT() AS n
		      FROM course_arrange
		      GROUP BY teacher_id) AS RHS ON (LHS.teacher_id = RHS.teacher_id))
		WHERE (n = 2)
		ORDER BY name
		
		

	                name
	0  Vicente Carretero
No solution for instance db2csv/course_teach/0018_dev (4778)
Wrong output for fuzzied solution in instance db2csv/course_teach/0012_dev (4780)
	EXPECTED OUTPUT ====

		SELECT Hometown
		FROM teacher
		ORDER BY Age ASC
		LIMIT 1

	                      hometown
	0  Little Lever Urban District
	ACTUAL OUTPUT ====

		
		SELECT hometown
		FROM
		  (SELECT LHS.teacher_id AS teacher_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.hometown AS hometown
		   FROM teacher AS LHS
		   INNER JOIN
		     (SELECT MIN(age) AS age
		      FROM teacher) AS RHS ON (LHS.age = RHS.age))
		ORDER BY hometown
		
		

	                      hometown
	0        Bolton County Borough
	1   Bolton County Boroughwu( P
	2  Little Lever Urban District
Wrong output for fuzzied solution in instance db2csv/course_teach/0011_dev (4783)
	EXPECTED OUTPUT ====

		SELECT Hometown
		FROM teacher
		ORDER BY Age ASC
		LIMIT 1

	                      hometown
	0  Little Lever Urban District
	ACTUAL OUTPUT ====

		
		SELECT hometown
		FROM
		  (SELECT LHS.teacher_id AS teacher_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.hometown AS hometown
		   FROM teacher AS LHS
		   INNER JOIN
		     (SELECT MIN(age) AS minage
		      FROM teacher) AS RHS ON (LHS.age = RHS.minage))
		ORDER BY hometown
		
		

	                      hometown
	0        Bolton County Borough
	1   Bolton County Boroughwu( P
	2  Little Lever Urban District
No solution for instance db2csv/course_teach/0017_dev (4785)
Wrong output for base solution in instance db2csv/course_teach/0016_dev (4787)
	EXPECTED OUTPUT ====

	                  hometown
	0  Blackrod Urban District
	ACTUAL OUTPUT ====

		SELECT Hometown
		FROM teacher
		GROUP BY Hometown
		ORDER BY COUNT(*) DESC
		LIMIT 1

	                hometown
	0  Turton Urban District
Wrong output for ground truth in instance db2csv/course_teach/0016_dev (4787)
Wrong output for fuzzied solution in instance db2csv/course_teach/0009_dev (4788)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM teacher
		WHERE Age = 32
		  OR Age = 33

	             name
	0  Gustaaf Deloor
	1       Lucy Wong
	2       Lucy Wong
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM teacher
		   WHERE (age >= 32))
		WHERE (age <= 33)
		ORDER BY name
		
		

	             name
	0  Gustaaf Deloor
	1       Lucy Wong
	2       Lucy Wong
	3   dzL446l D3dzy
Wrong output for fuzzied solution in instance db2csv/course_teach/0008_dev (4790)
	EXPECTED OUTPUT ====

		select name
		from teacher
		where hometown != "little lever urban district"

	                  name
	0  QIijVKearsley Brown
	1    Vicente Carretero
	2    Vicente Carretero
	3    Vicente Carretero
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT name
		   FROM teacher INTERSECT SELECT name
		   FROM teacher)
		ORDER BY name
		
		

	                  name
	0       Kearsley Brown
	1  QIijVKearsley Brown
	2    Vicente Carretero
	3  v6fImKearsley Brown
Wrong output for base solution in instance db2csv/course_teach/0006_dev (4792)
	EXPECTED OUTPUT ====

	   age                     hometown
	0   26  Farnworth Municipal Borough
	1   29        Bolton County Borough
	2   32      Blackrod Urban District
	3   33       Horwich Urban District
	4   39        Turton Urban District
	5   41  Little Lever Urban District
	6   45      Kearsley Urban District
	ACTUAL OUTPUT ====

		SELECT Age,
		       Hometown
		FROM teacher

	  age                     hometown
	0  26  Farnworth Municipal Borough
	1  29        Bolton County Borough
	2  32      Blackrod Urban District
	3  33       Horwich Urban District
	4  39        Turton Urban District
	5  41  Little Lever Urban District
	6  45      Kearsley Urban District
Wrong output for ground truth in instance db2csv/course_teach/0006_dev (4792)
Wrong output for fuzzied solution in instance db2csv/course_teach/0004_dev (4793)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM teacher
		ORDER BY Age ASC

	                name
	0        John Deloor
	1        John Deloor
	2     Kearsley Brown
	3     Kearsley Brown
	4  NZRJohn Deloor(oW
	5  Vicente Carretero
	6  Vicente Carretero
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT name
		   FROM teacher INTERSECT SELECT name
		   FROM teacher)
		ORDER BY name
		
		

	                name
	0        John Deloor
	1     Kearsley Brown
	2  NZRJohn Deloor(oW
	3  Vicente Carretero
Wrong output for fuzzied solution in instance db2csv/course_teach/0022_dev (4796)
	EXPECTED OUTPUT ====

		SELECT T3.Name,
		       T2.Course
		FROM course_arrange AS T1
		JOIN course AS T2 ON T1.Course_ID = T2.Course_ID
		JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID
		ORDER BY T3.Name

	                 name course
	0         John Deloor  Bible
	1         John Deloor  Bible
	2         John Deloor  Bible
	3         John Deloor  Bible
	4         John Deloor  Bible
	..                ...    ...
	57  NZRJohn Deloor(oW   ible
	58  NZRJohn Deloor(oW   ible
	59  NZRJohn Deloor(oW   ible
	60  Vicente Carretero   ible
	61  Vicente Carretero   ible
	
	[62 rows x 2 columns]
	ACTUAL OUTPUT ====

		
		SELECT name,
		       course
		FROM
		  (SELECT *
		   FROM
		     (SELECT LHS.course_id AS course_id,
		             LHS.staring_date AS staring_date,
		             LHS.course AS course,
		             RHS.teacher_id AS teacher_id,
		             RHS.name AS name,
		             RHS.age AS age,
		             RHS.hometown AS hometown
		      FROM course AS LHS
		      CROSS JOIN teacher AS RHS) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM course_arrange AS RHS
		        WHERE (LHS.course_id = RHS.course_id
		               AND LHS.teacher_id = RHS.teacher_id) ))
		ORDER BY name
		
		

	                 name       course
	0         John Deloor        Bible
	1         John Deloor        Bible
	2         John Deloor        Bible
	3         John Deloor        Bible
	4         John Deloor        Bible
	5         John Deloor        Bible
	6      Kearsley Brown        Bible
	7      Kearsley Brown        Bible
	8      Kearsley Brown        Bible
	9      Kearsley Brown        Bible
	10     Kearsley Brown        Bible
	11  NZRJohn Deloor(oW        Bible
	12  Vicente Carretero        Bible
	13  Vicente Carretero        Bible
	14        John Deloor   BibleNXR0y
	15        John Deloor   BibleNXR0y
	16     Kearsley Brown   BibleNXR0y
	17  NZRJohn Deloor(oW   BibleNXR0y
	18  Vicente Carretero   BibleNXR0y
	19  Vicente Carretero   BibleNXR0y
	20        John Deloor  DwxBiblelGe
	21        John Deloor  DwxBiblelGe
	22     Kearsley Brown  DwxBiblelGe
	23  NZRJohn Deloor(oW  DwxBiblelGe
	24  Vicente Carretero  DwxBiblelGe
	25        John Deloor       Health
	26        John Deloor       Health
	27        John Deloor       Health
	28     Kearsley Brown       Health
	29     Kearsley Brown       Health
	30     Kearsley Brown       Health
	31  NZRJohn Deloor(oW       Health
	32  Vicente Carretero       Health
	33  Vicente Carretero       Health
	34        John Deloor         ible
	35        John Deloor         ible
	36     Kearsley Brown         ible
	37     Kearsley Brown         ible
	38     Kearsley Brown         ible
	39  NZRJohn Deloor(oW         ible
	40  NZRJohn Deloor(oW         ible
	41  Vicente Carretero         ible
	42  Vicente Carretero         ible
No solution for instance db2csv/course_teach/0013_dev (4797)
Wrong output for fuzzied solution in instance db2csv/course_teach/0014_dev (4798)
	EXPECTED OUTPUT ====

		SELECT Hometown,
		       COUNT(*)
		FROM teacher
		GROUP BY Hometown

	                      hometown  count(*)
	0        Bolton County Borough         1
	1       Horwich Urban District         1
	2  mxfhcHorwich Urban District         1
	3        Horwich Urban Distric         2
	4      Kearsley Urban District         2
	ACTUAL OUTPUT ====

		
		SELECT hometown,
		       n_distinct AS count___
		FROM
		  (SELECT hometown,
		          COUNT(DISTINCT hometown) AS n_distinct
		   FROM teacher
		   GROUP BY hometown)
		ORDER BY hometown
		
		

	                      hometown  count___
	0        Bolton County Borough         1
	1        Horwich Urban Distric         1
	2       Horwich Urban District         1
	3      Kearsley Urban District         1
	4  mxfhcHorwich Urban District         1
Wrong output for fuzzied solution in instance db2csv/course_teach/0007_dev (4799)
	EXPECTED OUTPUT ====

		select name
		from teacher
		where hometown != "little lever urban district"

	                  name
	0  QIijVKearsley Brown
	1    Vicente Carretero
	2    Vicente Carretero
	3    Vicente Carretero
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT name
		   FROM teacher INTERSECT SELECT name
		   FROM teacher)
		ORDER BY name
		
		

	                  name
	0       Kearsley Brown
	1  QIijVKearsley Brown
	2    Vicente Carretero
	3  v6fImKearsley Brown
Wrong output for base solution in instance db2csv/course_teach/0015_dev (4800)
	EXPECTED OUTPUT ====

	                  hometown
	0  Blackrod Urban District
	ACTUAL OUTPUT ====

		SELECT Hometown
		FROM teacher
		GROUP BY Hometown
		ORDER BY COUNT(*) DESC
		LIMIT 1

	                hometown
	0  Turton Urban District
Wrong output for ground truth in instance db2csv/course_teach/0015_dev (4800)
Wrong output for fuzzied solution in instance db2csv/course_teach/0010_dev (4801)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM teacher
		WHERE Age = 32
		  OR Age = 33

	             name
	0  Gustaaf Deloor
	1       Lucy Wong
	2       Lucy Wong
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM teacher
		   WHERE (age >= 32))
		WHERE (age <= 33)
		ORDER BY name
		
		

	             name
	0  Gustaaf Deloor
	1       Lucy Wong
	2       Lucy Wong
	3   dzL446l D3dzy
Wrong output for base solution in instance db2csv/course_teach/0005_dev (4805)
	EXPECTED OUTPUT ====

	   age                     hometown
	0   26  Farnworth Municipal Borough
	1   29        Bolton County Borough
	2   32      Blackrod Urban District
	3   33       Horwich Urban District
	4   39        Turton Urban District
	5   41  Little Lever Urban District
	6   45      Kearsley Urban District
	ACTUAL OUTPUT ====

		SELECT Age,
		       Hometown
		FROM teacher

	  age                     hometown
	0  26  Farnworth Municipal Borough
	1  29        Bolton County Borough
	2  32      Blackrod Urban District
	3  33       Horwich Urban District
	4  39        Turton Urban District
	5  41  Little Lever Urban District
	6  45      Kearsley Urban District
Wrong output for ground truth in instance db2csv/course_teach/0005_dev (4805)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0027_dev (4806)
	EXPECTED OUTPUT ====

		SELECT template_id
		FROM Templates
		WHERE template_type_code = "PP"
		  OR template_type_code = "PPT"

	   template_id
	0           21
	ACTUAL OUTPUT ====

		
		SELECT `template_id`
		FROM
		  (SELECT *
		   FROM
		     (SELECT `template_id`,
		             `version_number`,
		             `template_type_code`,
		             `date_effective_from`,
		             `date_effective_to`,
		             `template_details`,
		             AVG(`template_id`) OVER () AS `meantemplate_id`
		      FROM `templates`) AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT *
		              FROM
		                (SELECT `template_id`,
		                        `version_number`,
		                        `template_type_code`,
		                        `date_effective_from`,
		                        `date_effective_to`,
		                        `template_details`,
		                        AVG(`template_id`) OVER () AS `meantemplate_id`
		                 FROM `templates`)
		              WHERE (`template_type_code` != 'PP'))
		           WHERE (`template_type_code` != 'PPT')) AS RHS
		        WHERE (LHS.date_effective_to = RHS.date_effective_to) ))
		ORDER BY template_id
		
		

	Empty DataFrame
	Columns: [template_id]
	Index: []
No solution for instance db2csv/cre_Doc_Template_Mgt/0060_dev (4807)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0084_dev (4808)
	EXPECTED OUTPUT ====

		SELECT document_id
		FROM Paragraphs
		WHERE paragraph_text = 'Brazil' INTERSECT
		  SELECT document_id
		  FROM Paragraphs WHERE paragraph_text = 'Ireland'

	Empty DataFrame
	Columns: [document_id]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `document_id`
		FROM
		  (SELECT *
		   FROM `paragraphs`
		   WHERE (`paragraph_text` != 'Ireland'))
		WHERE (`paragraph_text` = 'Brazil')
		ORDER BY document_id
		
		

	   document_id
	0       651512
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0063_dev (4809)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Paragraphs AS T1
		JOIN Documents AS T2 ON T1.document_ID = T2.document_ID
		WHERE T2.document_name = 'Summer Show'

	   count(*)
	0         5
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `document_name`) AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`document_id` AS `document_id`,
		             `LHS`.`template_id` AS `template_id`,
		             `LHS`.`document_name` AS `document_name`,
		             `LHS`.`document_description` AS `document_description`,
		             `LHS`.`other_details` AS `other_details`,
		             `RHS`.`paragraph_id` AS `paragraph_id`,
		             `RHS`.`paragraph_text` AS `paragraph_text`,
		             `RHS`.`other_details` AS `other_details_other`
		      FROM
		        (SELECT *
		         FROM `documents`
		         WHERE (`document_name` = 'Summer Show')) AS LHS
		      INNER JOIN paragraphs AS RHS ON (LHS.document_id = RHS.document_id)))
		ORDER BY count___
		
		

	   count___
	0         1
No solution for instance db2csv/cre_Doc_Template_Mgt/0058_dev (4811)
No solution for instance db2csv/cre_Doc_Template_Mgt/0018_dev (4812)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0039_dev (4814)
	EXPECTED OUTPUT ====

		SELECT min(Version_Number),
		       template_type_code
		FROM Templates

	   min(version_number) template_type_code
	0                    3                 BK
	ACTUAL OUTPUT ====

		
		SELECT version_number AS min_version_number_,
		       template_type_code
		FROM
		  (SELECT LHS.template_id AS template_id,
		          LHS.version_number AS version_number,
		          LHS.template_type_code AS template_type_code,
		          LHS.date_effective_from AS date_effective_from,
		          LHS.date_effective_to AS date_effective_to,
		          LHS.template_details AS template_details
		   FROM templates AS LHS
		   INNER JOIN
		     (SELECT MIN(version_number) AS minversion_number
		      FROM templates) AS RHS ON (LHS.version_number = RHS.minversion_number))
		ORDER BY min_version_number_
		
		

	   min_version_number_ template_type_code
	0                    3                 BK
	1                    3            PPO5oGB
	2                    3            rqrHJCV
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0083_dev (4817)
	EXPECTED OUTPUT ====

		SELECT document_id
		FROM Paragraphs
		WHERE paragraph_text = 'Brazil' INTERSECT
		  SELECT document_id
		  FROM Paragraphs WHERE paragraph_text = 'Ireland'

	Empty DataFrame
	Columns: [document_id]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `document_id`
		FROM
		  (SELECT *
		   FROM `paragraphs`
		   WHERE (`paragraph_text` != 'Ireland'))
		WHERE (`paragraph_text` = 'Brazil')
		ORDER BY document_id
		
		

	   document_id
	0       651512
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0048_dev (4819)
	EXPECTED OUTPUT ====

		SELECT T1.template_type_code
		FROM Templates AS T1
		JOIN Documents AS T2 ON T1.template_id = T2.template_id
		GROUP BY T1.template_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  template_type_code
	0           8C BKRJC
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT template_type_code
		FROM
		  (SELECT LHS.template_id AS template_id,
		          LHS.version_number AS version_number,
		          LHS.template_type_code AS template_type_code,
		          LHS.date_effective_from AS date_effective_from,
		          LHS.date_effective_to AS date_effective_to,
		          LHS.template_details AS template_details,
		          RHS.template_id AS template_id_other,
		          RHS.version_number AS version_number_other,
		          RHS.template_type_code AS template_type_code_other,
		          RHS.date_effective_from AS date_effective_from_other,
		          RHS.date_effective_to AS date_effective_to_other,
		          RHS.template_details AS template_details_other
		   FROM templates AS LHS
		   INNER JOIN
		     (SELECT template_id,
		             version_number,
		             template_type_code,
		             date_effective_from,
		             date_effective_to,
		             template_details,
		             COUNT(*) OVER () AS n
		      FROM
		        (SELECT *
		         FROM templates AS LHS
		         WHERE NOT EXISTS
		             (SELECT 1
		              FROM documents AS RHS
		              WHERE (LHS.template_id = RHS.template_id) ))) AS RHS ON (LHS.template_id = RHS.n))
		ORDER BY template_type_code
		
		

	Empty DataFrame
	Columns: [template_type_code]
	Index: []
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0012_dev (4821)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Documents AS T1
		JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
		WHERE T2.Template_Type_Code = 'PPT'

	   count(*)
	0         3
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT `template_id`
		      FROM `templates`
		      WHERE (`template_type_code` = 'PPT') INTERSECT
		        SELECT template_id
		        FROM documents))
		ORDER BY count___
		
		

	   count___
	0         1
Wrong output for base solution in instance db2csv/cre_Doc_Template_Mgt/0036_dev (4823)
	EXPECTED OUTPUT ====

	  template_type_code
	0                 BK
	ACTUAL OUTPUT ====

		SELECT template_type_code
		FROM Templates
		GROUP BY template_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  template_type_code
	0                 PP
Wrong output for ground truth in instance db2csv/cre_Doc_Template_Mgt/0036_dev (4823)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0003_dev (4824)
	EXPECTED OUTPUT ====

		SELECT document_id,
		       document_name,
		       document_description
		FROM Documents

	     document_id          document_name document_description
	0    -4965865000        Learning French                     
	1           2392   TOaxELearning French                     
	2           2394       Customer reviews                     
	3           2396  lDvu7Customer reviews                     
	4      199570419     How to read a book                     
	..           ...                    ...                  ...
	113      3540023     How to read a book                    y
	114   2491917222         Learning Frenc                    y
	115    706070353       Customer reviews               y8x0(i
	116    385906527     How to read a book                   zM
	117   6018617493        Learning French              zO6hQJl
	
	[118 rows x 3 columns]
	ACTUAL OUTPUT ====

		
		SELECT document_id,
		       document_name,
		       document_description
		FROM
		  (SELECT *
		   FROM documents AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM paragraphs AS RHS
		        WHERE (LHS.document_id = RHS.document_id
		               AND LHS.other_details = RHS.other_details) ))
		ORDER BY document_id
		
		

	     document_id          document_name document_description
	0    -4965865000        Learning French                     
	1           2392   TOaxELearning French                     
	2           2394       Customer reviews                     
	3           2396  lDvu7Customer reviews                     
	4      199570419     How to read a book                     
	..           ...                    ...                  ...
	112      3540023     How to read a book                    y
	113   2491917222         Learning Frenc                    y
	114    706070353       Customer reviews               y8x0(i
	115    385906527     How to read a book                   zM
	116   6018617493        Learning French              zO6hQJl
	
	[117 rows x 3 columns]
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0053_dev (4825)
	EXPECTED OUTPUT ====

		SELECT template_type_description
		FROM Ref_template_types
		WHERE template_type_code = "AD"

	  template_type_description
	0              Presentation
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `template_type_description`
		FROM
		  (SELECT `LHS`.`template_type_code` AS `template_type_code`,
		          `LHS`.`template_type_description` AS `template_type_description`,
		          `RHS`.`template_id` AS `template_id`,
		          `RHS`.`version_number` AS `version_number`,
		          `RHS`.`date_effective_from` AS `date_effective_from`,
		          `RHS`.`date_effective_to` AS `date_effective_to`,
		          `RHS`.`template_details` AS `template_details`
		   FROM
		     (SELECT *
		      FROM `ref_template_types`
		      WHERE (`template_type_code` = 'AD')) AS LHS
		   INNER JOIN templates AS RHS ON (LHS.template_type_code = RHS.template_type_code))
		ORDER BY template_type_description
		
		

	Empty DataFrame
	Columns: [template_type_description]
	Index: []
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0078_dev (4826)
	EXPECTED OUTPUT ====

		SELECT T1.document_id,
		       T2.document_name
		FROM Paragraphs AS T1
		JOIN Documents AS T2 ON T1.document_id = T2.document_id
		GROUP BY T1.document_id
		ORDER BY count(*) DESC
		LIMIT 1

	   document_id    document_name
	0       651510  Learning French
	ACTUAL OUTPUT ====

		
		SELECT document_id_other AS document_id,
		       document_name
		FROM
		  (SELECT LHS.document_id AS document_id,
		          LHS.n AS n,
		          RHS.document_id AS document_id_other,
		          RHS.template_id AS template_id,
		          RHS.document_name AS document_name,
		          RHS.document_description AS document_description,
		          RHS.other_details AS other_details
		   FROM
		     (SELECT document_id,
		             COUNT() AS n
		      FROM paragraphs
		      GROUP BY document_id) AS LHS
		   INNER JOIN
		     (SELECT LHS.document_id AS document_id,
		             LHS.n AS n,
		             RHS.template_id AS template_id,
		             RHS.document_name AS document_name,
		             RHS.document_description AS document_description,
		             RHS.other_details AS other_details
		      FROM
		        (SELECT document_id,
		                COUNT() AS n
		         FROM paragraphs
		         GROUP BY document_id) AS LHS
		      INNER JOIN documents AS RHS ON (LHS.document_id = RHS.document_id)) AS RHS ON (LHS.document_id = RHS.n))
		ORDER BY document_id
		
		

	Empty DataFrame
	Columns: [document_id, document_name]
	Index: []
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0001_dev (4827)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Documents

	   count(*)
	0        15
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM paragraphs)
		ORDER BY count___
		
		

	   count___
	0        17
No solution for instance db2csv/cre_Doc_Template_Mgt/0017_dev (4836)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0077_dev (4838)
	EXPECTED OUTPUT ====

		SELECT T1.document_id,
		       T2.document_name
		FROM Paragraphs AS T1
		JOIN Documents AS T2 ON T1.document_id = T2.document_id
		GROUP BY T1.document_id
		ORDER BY count(*) DESC
		LIMIT 1

	   document_id    document_name
	0       651510  Learning French
	ACTUAL OUTPUT ====

		
		SELECT document_id_other AS document_id,
		       document_name
		FROM
		  (SELECT LHS.document_id AS document_id,
		          LHS.n AS n,
		          RHS.document_id AS document_id_other,
		          RHS.template_id AS template_id,
		          RHS.document_name AS document_name,
		          RHS.document_description AS document_description,
		          RHS.other_details AS other_details
		   FROM
		     (SELECT document_id,
		             COUNT() AS n
		      FROM
		        (SELECT document_id,
		                COUNT() AS n
		         FROM paragraphs
		         GROUP BY document_id)
		      GROUP BY document_id) AS LHS
		   INNER JOIN
		     (SELECT LHS.document_id AS document_id,
		             LHS.n AS n,
		             RHS.template_id AS template_id,
		             RHS.document_name AS document_name,
		             RHS.document_description AS document_description,
		             RHS.other_details AS other_details
		      FROM
		        (SELECT document_id,
		                COUNT() AS n
		         FROM paragraphs
		         GROUP BY document_id) AS LHS
		      INNER JOIN documents AS RHS ON (LHS.document_id = RHS.document_id)) AS RHS ON (LHS.document_id = RHS.n))
		ORDER BY document_id
		
		

	Empty DataFrame
	Columns: [document_id, document_name]
	Index: []
Wrong output for base solution in instance db2csv/cre_Doc_Template_Mgt/0066_dev (4839)
	EXPECTED OUTPUT ====

	Empty DataFrame
	Columns: [other_details]
	Index: []
	ACTUAL OUTPUT ====

		select other_details
		from paragraphs
		where paragraph_text like 'korea'

	  other_details
	0          None
	1          None
Wrong output for ground truth in instance db2csv/cre_Doc_Template_Mgt/0066_dev (4839)
Wrong output for base solution in instance db2csv/cre_Doc_Template_Mgt/0035_dev (4843)
	EXPECTED OUTPUT ====

	  template_type_code
	0                 BK
	ACTUAL OUTPUT ====

		SELECT template_type_code
		FROM Templates
		GROUP BY template_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  template_type_code
	0                 PP
Wrong output for ground truth in instance db2csv/cre_Doc_Template_Mgt/0035_dev (4843)
Wrong output for base solution in instance db2csv/cre_Doc_Template_Mgt/0016_dev (4844)
	EXPECTED OUTPUT ====

	   template_id template_type_code
	0           11                 BK
	ACTUAL OUTPUT ====

		SELECT T1.template_id,
		       T2.Template_Type_Code
		FROM Documents AS T1
		JOIN Templates AS T2 ON T1.template_id = T2.template_id
		GROUP BY T1.template_id
		ORDER BY count(*) DESC
		LIMIT 1

	   template_id template_type_code
	0           25                 PP
Wrong output for ground truth in instance db2csv/cre_Doc_Template_Mgt/0016_dev (4844)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0002_dev (4846)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Documents

	   count(*)
	0        15
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM paragraphs)
		ORDER BY count___
		
		

	   count___
	0        17
Wrong output for base solution in instance db2csv/cre_Doc_Template_Mgt/0065_dev (4847)
	EXPECTED OUTPUT ====

	Empty DataFrame
	Columns: [other_details]
	Index: []
	ACTUAL OUTPUT ====

		select other_details
		from paragraphs
		where paragraph_text like 'korea'

	  other_details
	0          None
	1          None
Wrong output for ground truth in instance db2csv/cre_Doc_Template_Mgt/0065_dev (4847)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0047_dev (4855)
	EXPECTED OUTPUT ====

		SELECT T1.template_type_code
		FROM Templates AS T1
		JOIN Documents AS T2 ON T1.template_id = T2.template_id
		GROUP BY T1.template_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  template_type_code
	0           8C BKRJC
	ACTUAL OUTPUT ====

		
		SELECT template_type_code
		FROM
		  (SELECT LHS.template_id AS template_id,
		          LHS.version_number AS version_number,
		          LHS.template_type_code AS template_type_code,
		          LHS.date_effective_from AS date_effective_from,
		          LHS.date_effective_to AS date_effective_to,
		          LHS.template_details AS template_details
		   FROM templates AS LHS
		   INNER JOIN
		     (SELECT COUNT() AS n
		      FROM templates) AS RHS ON (LHS.template_id = RHS.n))
		ORDER BY template_type_code
		
		

	Empty DataFrame
	Columns: [template_type_code]
	Index: []
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0006_dev (4856)
	EXPECTED OUTPUT ====

		SELECT document_name,
		       template_id
		FROM Documents
		WHERE Document_Description LIKE "%w%"

	           document_name  template_id
	0            About Korea           24
	1  How Google people wor           19
	2  How Google people wor           22
	ACTUAL OUTPUT ====

		
		SELECT `document_name`,
		       `template_id`
		FROM `documents`
		WHERE (`document_description` = 'w')
		ORDER BY document_name
		
		

	Empty DataFrame
	Columns: [document_name, template_id]
	Index: []
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0040_dev (4859)
	EXPECTED OUTPUT ====

		SELECT min(Version_Number),
		       template_type_code
		FROM Templates

	   min(version_number) template_type_code
	0                    3                 BK
	ACTUAL OUTPUT ====

		
		SELECT version_number AS min_version_number_,
		       template_type_code
		FROM
		  (SELECT LHS.template_id AS template_id,
		          LHS.version_number AS version_number,
		          LHS.template_type_code AS template_type_code,
		          LHS.date_effective_from AS date_effective_from,
		          LHS.date_effective_to AS date_effective_to,
		          LHS.template_details AS template_details
		   FROM templates AS LHS
		   INNER JOIN
		     (SELECT MIN(version_number) AS version_number
		      FROM templates) AS RHS ON (LHS.version_number = RHS.version_number))
		ORDER BY min_version_number_
		
		

	   min_version_number_ template_type_code
	0                    3                 BK
	1                    3            PPO5oGB
	2                    3            rqrHJCV
No solution for instance db2csv/cre_Doc_Template_Mgt/0079_dev (4870)
No solution for instance db2csv/cre_Doc_Template_Mgt/0013_dev (4871)
Error while executing solution for instance db2csv/cre_Doc_Template_Mgt/0031_dev (4873)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT version_number,
       template_type_code
FROM
  (SELECT template_id,
          version_number,
          template_type_code,
          date_effective_from,
          date_effective_to,
          template_details,
          COUNT(DISTINCT version_number) OVER () AS n_distinct
   FROM templates)
WHERE (version_number > 5)
ORDER BY version_number

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for base solution in instance db2csv/cre_Doc_Template_Mgt/0015_dev (4876)
	EXPECTED OUTPUT ====

	   template_id template_type_code
	0           11                 BK
	ACTUAL OUTPUT ====

		SELECT T1.template_id,
		       T2.Template_Type_Code
		FROM Documents AS T1
		JOIN Templates AS T2 ON T1.template_id = T2.template_id
		GROUP BY T1.template_id
		ORDER BY count(*) DESC
		LIMIT 1

	   template_id template_type_code
	0           25                 PP
Wrong output for ground truth in instance db2csv/cre_Doc_Template_Mgt/0015_dev (4876)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0082_dev (4880)
	EXPECTED OUTPUT ====

		SELECT document_id
		FROM Paragraphs
		GROUP BY document_id
		HAVING count(*) BETWEEN 1 AND 2

	    document_id
	0   -9179648192
	1   -1811162346
	2          3829
	3          3832
	4         33930
	5        801803
	6       3540023
	7    2184096388
	8    2880551136
	9    3328443202
	10   3562497936
	11   3851745384
	12   4599240584
	13   4727733972
	14   8054311328
	15   8123667555
	16   8429115327
	17   8472238345
	ACTUAL OUTPUT ====

		
		SELECT document_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT document_id,
		             COUNT() AS n
		      FROM paragraphs
		      GROUP BY document_id)
		   WHERE (document_id > 1))
		WHERE (n <= 2)
		ORDER BY document_id
		
		

	    document_id
	0          3829
	1          3832
	2         33930
	3        801803
	4       3540023
	5    2184096388
	6    2880551136
	7    3328443202
	8    3562497936
	9    3851745384
	10   4599240584
	11   4727733972
	12   8054311328
	13   8123667555
	14   8429115327
	15   8472238345
No solution for instance db2csv/cre_Doc_Template_Mgt/0080_dev (4884)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0005_dev (4888)
	EXPECTED OUTPUT ====

		SELECT document_name,
		       template_id
		FROM Documents
		WHERE Document_Description LIKE "%w%"

	           document_name  template_id
	0            About Korea           24
	1  How Google people wor           19
	2  How Google people wor           22
	ACTUAL OUTPUT ====

		
		SELECT `document_name`,
		       `template_id`
		FROM `documents`
		WHERE (`document_description` = 'w')
		ORDER BY document_name
		
		

	Empty DataFrame
	Columns: [document_name, template_id]
	Index: []
No solution for instance db2csv/cre_Doc_Template_Mgt/0032_dev (4889)
No solution for instance db2csv/car_1/0027_dev (4890)
Wrong output for base solution in instance db2csv/car_1/0084_dev (4892)
	EXPECTED OUTPUT ====

	   max_mpg_
	0       NaN
	ACTUAL OUTPUT ====

		select max(mpg)
		from cars_data
		where cylinders = 8
		  or year < 1980

	  max(mpg)
	0     null
Wrong output for ground truth in instance db2csv/car_1/0084_dev (4892)
Wrong output for fuzzied solution in instance db2csv/car_1/0021_dev (4894)
	EXPECTED OUTPUT ====

		SELECT T2.CountryName
		FROM CAR_MAKERS AS T1
		JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId
		GROUP BY T1.Country
		ORDER BY Count(*) DESC
		LIMIT 1;

	  countryname
	0       japan
	ACTUAL OUTPUT ====

		
		SELECT countryname
		FROM
		  (SELECT countryid,
		          countryname,
		          countryid AS n
		   FROM
		     (SELECT LHS.countryid AS countryid,
		             LHS.countryname AS countryname,
		             LHS.n AS n
		      FROM
		        (SELECT countryid,
		                countryname,
		                COUNT() AS n
		         FROM countries
		         GROUP BY countryid,
		                  countryname) AS LHS
		      INNER JOIN
		        (SELECT country,
		                COUNT() AS n
		         FROM car_makers
		         GROUP BY country) AS RHS ON (LHS.countryid = RHS.n
		                                      AND LHS.n = RHS.country)))
		ORDER BY countryname
		
		

	Empty DataFrame
	Columns: [countryname]
	Index: []
Wrong output for fuzzied solution in instance db2csv/car_1/0033_dev (4897)
	EXPECTED OUTPUT ====

		select min(weight)
		from cars_data
		where cylinders = 8
		  and year = 1974

	  min(weight)
	0        None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT MIN(weight) OVER () AS min_weight_
		FROM
		  (SELECT *
		   FROM cars_data
		   WHERE (cylinders >= 8))
		WHERE (YEAR = 1974)
		ORDER BY min_weight_
		
		

	   min_weight_
	0         3083
No solution for instance db2csv/car_1/0039_dev (4898)
No solution for instance db2csv/car_1/0088_dev (4899)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_30706.sqlite3'
No solution for instance db2csv/car_1/0029_dev (4901)
Wrong output for base solution in instance db2csv/car_1/0083_dev (4902)
	EXPECTED OUTPUT ====

	   max_mpg_
	0       NaN
	ACTUAL OUTPUT ====

		select max(mpg)
		from cars_data
		where cylinders = 8
		  or year < 1980

	  max(mpg)
	0     null
Wrong output for ground truth in instance db2csv/car_1/0083_dev (4902)
No solution for instance db2csv/car_1/0048_dev (4904)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_30706.sqlite3'
Error while executing solution for instance db2csv/car_1/0038_dev (4907)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT countryname,
                country AS countryid
FROM
  (SELECT id,
          maker,
          fullname,
          country,
          countryname,
          continent,
          countryid,
          COUNT(DISTINCT countryname) OVER () AS n_distinct
   FROM
     (SELECT id,
             maker,
             fullname,
             country,
             countryname,
             continent,
             country AS countryid
      FROM
        (SELECT LHS.id AS id,
                LHS.maker AS maker,
                LHS.fullname AS fullname,
                LHS.country AS country,
                RHS.countryname AS countryname,
                RHS.continent AS continent
         FROM car_makers AS LHS
         INNER JOIN countries AS RHS ON (LHS.country = RHS.countryid))))
WHERE (n_distinct >= 1)
ORDER BY countryname

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/car_1/0001_dev (4912)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM CONTINENTS;

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT continent) AS n_distinct
		   FROM continents)
		ORDER BY count___
		
		

	   count___
	0         5
Wrong output for fuzzied solution in instance db2csv/car_1/0034_dev (4913)
	EXPECTED OUTPUT ====

		select min(weight)
		from cars_data
		where cylinders = 8
		  and year = 1974

	  min(weight)
	0        None
	ACTUAL OUTPUT ====

		
		SELECT weight AS min_weight_
		FROM
		  (SELECT MIN(weight) AS weight
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM cars_data
		         WHERE (YEAR = 1974))
		      WHERE (cylinders >= 8)))
		ORDER BY min_weight_
		
		

	   min_weight_
	0         3083
No solution for instance db2csv/car_1/0073_dev (4914)
No solution for instance db2csv/car_1/0087_dev (4915)
Wrong output for fuzzied solution in instance db2csv/car_1/0061_dev (4916)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM CAR_MAKERS AS T1
		JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker
		WHERE T1.FullName = 'American Motor Company';

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT `modelid` AS `count___`
		FROM
		  (SELECT `modelid`,
		          `maker`,
		          `model`,
		          `maker_other`,
		          `fullname`,
		          `country`,
		          `maker` AS `id`
		   FROM
		     (SELECT `LHS`.`modelid` AS `modelid`,
		             `LHS`.`maker` AS `maker`,
		             `LHS`.`model` AS `model`,
		             `RHS`.`maker` AS `maker_other`,
		             `RHS`.`fullname` AS `fullname`,
		             `RHS`.`country` AS `country`
		      FROM `model_list` AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `car_makers`
		         WHERE (`fullname` = 'American Motor Company')) AS RHS ON (LHS.maker = RHS.id)))
		ORDER BY count___
		
		

	   count___
	0        18
	1        25
Wrong output for fuzzied solution in instance db2csv/car_1/0043_dev (4918)
	EXPECTED OUTPUT ====

		SELECT T1.CountryName
		FROM COUNTRIES AS T1
		JOIN CONTINENTS AS T2 ON T1.Continent = T2.ContId
		JOIN CAR_MAKERS AS T3 ON T1.CountryId = T3.Country
		WHERE T2.Continent = 'europe'
		GROUP BY T1.CountryName
		HAVING count(*) >= 3;

	Empty DataFrame
	Columns: [countryname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT countryname
		FROM
		  (SELECT LHS.id AS id,
		          LHS.maker AS maker,
		          LHS.fullname AS fullname,
		          LHS.country AS country,
		          RHS.countryid AS countryid,
		          RHS.countryname AS countryname,
		          RHS.continent AS continent,
		          RHS.continent_other AS continent_other,
		          RHS.n AS n
		   FROM car_makers AS LHS
		   CROSS JOIN
		     (SELECT *
		      FROM
		        (SELECT countryid,
		                countryname,
		                continent,
		                continent_other,
		                countryid AS n
		         FROM
		           (SELECT LHS.countryid AS countryid,
		                   LHS.countryname AS countryname,
		                   LHS.continent AS continent,
		                   RHS.continent AS continent_other
		            FROM countries AS LHS
		            INNER JOIN
		              (SELECT continent,
		                      COUNT() AS n
		               FROM countries
		               GROUP BY continent) AS RHS ON (LHS.countryid = RHS.n)))
		      WHERE (n <= 3)) AS RHS)
		ORDER BY countryname
		
		

	  countryname
	0       japan
No solution for instance db2csv/car_1/0011_dev (4919)
Wrong output for base solution in instance db2csv/car_1/0042_dev (4920)
	EXPECTED OUTPUT ====

	    avg_weight_  year
	0   2436.655172  1980
	1   2453.548387  1982
	2   2532.166667  1981
	3   2861.805556  1978
	4   2877.925926  1974
	5   2960.344828  1971
	6   2997.357143  1977
	7   3055.344828  1979
	8   3078.735294  1976
	9   3176.800000  1975
	10  3237.714286  1972
	11  3419.025000  1973
	12  3441.314286  1970
	ACTUAL OUTPUT ====

		SELECT avg(Weight),
		       YEAR
		FROM CARS_DATA
		GROUP BY YEAR;

	    avg(weight)  year
	0   3441.314286  1970
	1   2960.344828  1971
	2   3237.714286  1972
	3   3419.025000  1973
	4   2877.925926  1974
	5   3176.800000  1975
	6   3078.735294  1976
	7   2997.357143  1977
	8   2861.805556  1978
	9   3055.344828  1979
	10  2436.655172  1980
	11  2532.166667  1981
	12  2453.548387  1982
Wrong output for ground truth in instance db2csv/car_1/0042_dev (4920)
Error while executing solution for instance db2csv/car_1/0062_dev (4923)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT `modelid` AS `count___`
FROM
  (SELECT `modelid`,
          `maker`,
          `model`,
          `n_distinct`,
          `maker_other`,
          `fullname`,
          `country`,
          `maker` AS `id`
   FROM
     (SELECT `LHS`.`modelid` AS `modelid`,
             `LHS`.`maker` AS `maker`,
             `LHS`.`model` AS `model`,
             `LHS`.`n_distinct` AS `n_distinct`,
             `RHS`.`maker` AS `maker_other`,
             `RHS`.`fullname` AS `fullname`,
             `RHS`.`country` AS `country`
      FROM
        (SELECT `modelid`,
                `maker`,
                `model`,
                COUNT(DISTINCT `model`) OVER () AS `n_distinct`
         FROM `model_list`) AS `LHS`
      INNER JOIN `car_makers` AS `RHS` ON (`LHS`.`maker` = `RHS`.`id`)))
WHERE (`fullname` = 'American Motor Company')
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance db2csv/car_1/0066_dev (4925)
Wrong output for base solution in instance db2csv/car_1/0049_dev (4926)
	EXPECTED OUTPUT ====

	   avg_horsepower_
	0       111.132911
	ACTUAL OUTPUT ====

		SELECT avg(horsepower)
		FROM CARS_DATA
		WHERE YEAR < 1980;

	   avg(horsepower)
	0       111.132911
Wrong output for ground truth in instance db2csv/car_1/0049_dev (4926)
Wrong output for base solution in instance db2csv/car_1/0045_dev (4928)
	EXPECTED OUTPUT ====

	   horsepower             make
	0          97  mazda rx2 coupe
	ACTUAL OUTPUT ====

		SELECT T2.horsepower,
		       T1.Make
		FROM CAR_NAMES AS T1
		JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id
		WHERE T2.cylinders = 3
		ORDER BY T2.horsepower DESC
		LIMIT 1;

	  horsepower             make
	0         97  mazda rx2 coupe
Wrong output for ground truth in instance db2csv/car_1/0045_dev (4928)
No solution for instance db2csv/car_1/0016_dev (4930)
No solution for instance db2csv/car_1/0009_dev (4931)
No solution for instance db2csv/car_1/0092_dev (4933)
No solution for instance db2csv/car_1/0065_dev (4934)
No solution for instance db2csv/car_1/0055_dev (4935)
Wrong output for base solution in instance db2csv/car_1/0046_dev (4936)
	EXPECTED OUTPUT ====

	   horsepower             make
	0          97  mazda rx2 coupe
	ACTUAL OUTPUT ====

		SELECT T2.horsepower,
		       T1.Make
		FROM CAR_NAMES AS T1
		JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id
		WHERE T2.cylinders = 3
		ORDER BY T2.horsepower DESC
		LIMIT 1;

	  horsepower             make
	0         97  mazda rx2 coupe
Wrong output for ground truth in instance db2csv/car_1/0046_dev (4936)
No solution for instance db2csv/car_1/0074_dev (4938)
Wrong output for base solution in instance db2csv/car_1/0041_dev (4940)
	EXPECTED OUTPUT ====

	    avg_weight_  year
	0   2436.655172  1980
	1   2453.548387  1982
	2   2532.166667  1981
	3   2861.805556  1978
	4   2877.925926  1974
	5   2960.344828  1971
	6   2997.357143  1977
	7   3055.344828  1979
	8   3078.735294  1976
	9   3176.800000  1975
	10  3237.714286  1972
	11  3419.025000  1973
	12  3441.314286  1970
	ACTUAL OUTPUT ====

		SELECT avg(Weight),
		       YEAR
		FROM CARS_DATA
		GROUP BY YEAR;

	    avg(weight)  year
	0   3441.314286  1970
	1   2960.344828  1971
	2   3237.714286  1972
	3   3419.025000  1973
	4   2877.925926  1974
	5   3176.800000  1975
	6   3078.735294  1976
	7   2997.357143  1977
	8   2861.805556  1978
	9   3055.344828  1979
	10  2436.655172  1980
	11  2532.166667  1981
	12  2453.548387  1982
Wrong output for ground truth in instance db2csv/car_1/0041_dev (4940)
Wrong output for fuzzied solution in instance db2csv/car_1/0019_dev (4941)
	EXPECTED OUTPUT ====

		SELECT T1.Continent,
		       count(*)
		FROM CONTINENTS AS T1
		JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent
		JOIN car_makers AS T3 ON T2.CountryId = T3.Country
		GROUP BY T1.Continent;

	        continent  count(*)
	0        2Vl)bJzn         1
	1   NlRamericaNpo         1
	2    Q9 lEzeWNLlw         4
	3    SA4 bamerica         1
	4          Z1jr4)         1
	5         america         8
	6           europ         2
	7          europe        14
	8     europe9iYGd         1
	9          ktQBH5         2
	10         merica         6
	11          urope         2
	ACTUAL OUTPUT ====

		
		SELECT continent_other AS continent,
		       n AS count___
		FROM
		  (SELECT LHS.continent AS continent,
		          LHS.n AS n,
		          RHS.continent AS continent_other
		   FROM
		     (SELECT continent,
		             COUNT() AS n
		      FROM
		        (SELECT id,
		                maker,
		                fullname,
		                country,
		                countryname,
		                continent,
		                country AS countryid
		         FROM
		           (SELECT LHS.id AS id,
		                   LHS.maker AS maker,
		                   LHS.fullname AS fullname,
		                   LHS.country AS country,
		                   RHS.countryname AS countryname,
		                   RHS.continent AS continent
		            FROM car_makers AS LHS
		            INNER JOIN countries AS RHS ON (LHS.country = RHS.countryid)))
		      GROUP BY continent) AS LHS
		   INNER JOIN continents AS RHS ON (LHS.continent = RHS.contid))
		ORDER BY continent
		
		

	        continent  count___
	0        2Vl)bJzn         1
	1   NlRamericaNpo         1
	2    Q9 lEzeWNLlw         4
	3    SA4 bamerica         1
	4          Z1jr4)         1
	5         america         1
	6         america         2
	7         america         2
	8         america         3
	9           europ         2
	10         europe         1
	11         europe         1
	12         europe         1
	13         europe         1
	14         europe         4
	15         europe         6
	16    europe9iYGd         1
	17         ktQBH5         2
	18         merica         2
	19         merica         4
	20          urope         2
No solution for instance db2csv/car_1/0047_dev (4942)
No solution for instance db2csv/car_1/0040_dev (4946)
Wrong output for fuzzied solution in instance db2csv/car_1/0071_dev (4947)
	EXPECTED OUTPUT ====

		SELECT T1.cylinders
		FROM CARS_DATA AS T1
		JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId
		WHERE T2.Model = 'volvo'
		ORDER BY T1.accelerate ASC
		LIMIT 1;

	   cylinders
	0          6
	ACTUAL OUTPUT ====

		
		SELECT `cylinders`
		FROM
		  (SELECT `id`,
		          `mpg`,
		          `cylinders`,
		          `edispl`,
		          `horsepower`,
		          `weight`,
		          `accelerate`,
		          `year`,
		          `model`,
		          `make`,
		          `makeid`,
		          MIN(`accelerate`) OVER () AS `minaccelerate`
		   FROM
		     (SELECT `id`,
		             `mpg`,
		             `cylinders`,
		             `edispl`,
		             `horsepower`,
		             `weight`,
		             `accelerate`,
		             `year`,
		             `model`,
		             `make`,
		             `id` AS `makeid`
		      FROM
		        (SELECT `LHS`.`id` AS `id`,
		                `LHS`.`mpg` AS `mpg`,
		                `LHS`.`cylinders` AS `cylinders`,
		                `LHS`.`edispl` AS `edispl`,
		                `LHS`.`horsepower` AS `horsepower`,
		                `LHS`.`weight` AS `weight`,
		                `LHS`.`accelerate` AS `accelerate`,
		                `LHS`.`year` AS `year`,
		                `RHS`.`model` AS `model`,
		                `RHS`.`make` AS `make`
		         FROM `cars_data` AS `LHS`
		         INNER JOIN
		           (SELECT *
		            FROM `car_names`
		            WHERE (`model` = 'volvo')) AS RHS ON (LHS.id = RHS.makeid))))
		WHERE (minaccelerate = accelerate)
		ORDER BY cylinders
		
		

	    cylinders
	0           6
	1  5552437655
Wrong output for base solution in instance db2csv/car_1/0069_dev (4948)
	EXPECTED OUTPUT ====

	   horsepower
	0          71
	ACTUAL OUTPUT ====

		SELECT T1.horsepower
		FROM CARS_DATA AS T1
		ORDER BY T1.accelerate DESC
		LIMIT 1;

	  horsepower
	0         71
Wrong output for ground truth in instance db2csv/car_1/0069_dev (4948)
Wrong output for fuzzied solution in instance db2csv/car_1/0068_dev (4950)
	EXPECTED OUTPUT ====

		select distinct year
		from cars_data
		where weight between 3000 and 4000;

	   year
	0  1970
	1  1978
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT YEAR
		FROM
		  (SELECT LHS.id AS id,
		          LHS.mpg AS mpg,
		          LHS.cylinders AS cylinders,
		          LHS.edispl AS edispl,
		          LHS.horsepower AS horsepower,
		          LHS.weight AS weight,
		          LHS.accelerate AS accelerate,
		          LHS.year AS YEAR
		   FROM
		     (SELECT *
		      FROM cars_data
		      WHERE (weight != 4000)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM cars_data
		         WHERE (weight != 4000))
		      WHERE (weight < 3000)) AS RHS ON (LHS.id = RHS.id
		                                        AND LHS.mpg = RHS.mpg
		                                        AND LHS.cylinders = RHS.cylinders
		                                        AND LHS.edispl = RHS.edispl
		                                        AND LHS.horsepower = RHS.horsepower
		                                        AND LHS.weight = RHS.weight
		                                        AND LHS.accelerate = RHS.accelerate
		                                        AND LHS.year = RHS.year))
		ORDER BY YEAR
		
		

	   year
	0  1968
	1  1972
	2  1973
	3  1975
	4  1976
	5  1977
	6  1978
	7  1979
	8  1980
Wrong output for fuzzied solution in instance db2csv/car_1/0030_dev (4952)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM MODEL_LIST AS T1
		JOIN CAR_MAKERS AS T2 ON T1.Maker = T2.Id
		JOIN COUNTRIES AS T3 ON T2.Country = T3.CountryId
		WHERE T3.CountryName = 'usa';

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT `id`,
		          `maker`,
		          `fullname`,
		          `country`,
		          `countryname`,
		          `continent`,
		          `id` AS `countryid`
		   FROM
		     (SELECT `LHS`.`id` AS `id`,
		             `LHS`.`maker` AS `maker`,
		             `LHS`.`fullname` AS `fullname`,
		             `LHS`.`country` AS `country`,
		             `RHS`.`countryname` AS `countryname`,
		             `RHS`.`continent` AS `continent`
		      FROM `car_makers` AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `countries`
		         WHERE (`countryname` != 'usa')) AS RHS ON (LHS.id = RHS.countryid)))
		ORDER BY count___
		
		

	   count___
	0         8
No solution for instance db2csv/car_1/0085_dev (4953)
Wrong output for fuzzied solution in instance db2csv/car_1/0028_dev (4954)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM CAR_MAKERS AS T1
		JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId
		WHERE T2.CountryName = 'france';

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT `countryid` AS `count___`
		FROM
		  (SELECT `countryid`,
		          `countryname`,
		          `continent`,
		          COUNT(*) OVER () AS `n`
		   FROM `countries`)
		WHERE (`countryname` = 'france')
		ORDER BY count___
		
		

	   count___
	0        14
No solution for instance db2csv/car_1/0089_dev (4955)
No solution for instance db2csv/car_1/0022_dev (4958)
Wrong output for base solution in instance db2csv/car_1/0079_dev (4959)
	EXPECTED OUTPUT ====

		SELECT T1.Model
		FROM CAR_NAMES AS T1
		JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id
		WHERE T2.Cylinders = 4
		ORDER BY T2.horsepower DESC
		LIMIT 1;

	  model
	0  ford
	ACTUAL OUTPUT ====

		
		SELECT model
		FROM
		  (SELECT LHS.makeid AS makeid,
		          LHS.model AS model,
		          LHS.make AS make,
		          RHS.id AS id,
		          RHS.mpg AS mpg,
		          RHS.edispl AS edispl,
		          RHS.horsepower AS horsepower,
		          RHS.weight AS weight,
		          RHS.accelerate AS accelerate,
		          RHS.year AS YEAR
		   FROM car_names AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM cars_data
		         WHERE (cylinders != 4)) AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM cars_data AS RHS
		           WHERE (LHS.horsepower = RHS.horsepower) )) AS RHS ON (LHS.makeid = RHS.cylinders))
		ORDER BY model
		
		

	Empty DataFrame
	Columns: [model]
	Index: []
No solution for instance db2csv/car_1/0013_dev (4960)
No solution for instance db2csv/car_1/0014_dev (4961)
No solution for instance db2csv/car_1/0091_dev (4962)
No solution for instance db2csv/car_1/0031_dev (4963)
Wrong output for fuzzied solution in instance db2csv/car_1/0072_dev (4964)
	EXPECTED OUTPUT ====

		SELECT T1.cylinders
		FROM CARS_DATA AS T1
		JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId
		WHERE T2.Model = 'volvo'
		ORDER BY T1.accelerate ASC
		LIMIT 1;

	   cylinders
	0          3
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `cylinders`
		FROM
		  (SELECT *
		   FROM `cars_data` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT `makeid`,
		                  `model`,
		                  `make`,
		                  `mpg`,
		                  `cylinders`,
		                  `edispl`,
		                  `horsepower`,
		                  `weight`,
		                  `accelerate`,
		                  `year`,
		                  `makeid` AS `id`
		           FROM
		             (SELECT `LHS`.`makeid` AS `makeid`,
		                     `LHS`.`model` AS `model`,
		                     `LHS`.`make` AS `make`,
		                     `RHS`.`mpg` AS `mpg`,
		                     `RHS`.`cylinders` AS `cylinders`,
		                     `RHS`.`edispl` AS `edispl`,
		                     `RHS`.`horsepower` AS `horsepower`,
		                     `RHS`.`weight` AS `weight`,
		                     `RHS`.`accelerate` AS `accelerate`,
		                     `RHS`.`year` AS `year`
		              FROM
		                (SELECT *
		                 FROM `car_names`
		                 WHERE (`model` != 'volvo')) AS LHS
		              INNER JOIN cars_data AS RHS ON (LHS.makeid = RHS.id))) AS RHS
		        WHERE (LHS.accelerate = RHS.accelerate
		               AND LHS.cylinders = RHS.cylinders) ))
		ORDER BY cylinders
		
		

	Empty DataFrame
	Columns: [cylinders]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_30706.sqlite3'
No solution for instance db2csv/car_1/0010_dev (4967)
No solution for instance db2csv/car_1/0044_dev (4968)
Wrong output for fuzzied solution in instance db2csv/car_1/0067_dev (4969)
	EXPECTED OUTPUT ====

		select distinct year
		from cars_data
		where weight between 3000 and 4000;

	   year
	0  1970
	1  1978
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT YEAR
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM cars_data
		      WHERE (weight != 4000)) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM cars_data AS RHS
		        WHERE (LHS.id = RHS.id
		               AND LHS.mpg = RHS.mpg
		               AND LHS.cylinders = RHS.cylinders
		               AND LHS.edispl = RHS.edispl
		               AND LHS.horsepower = RHS.horsepower
		               AND LHS.weight = RHS.weight
		               AND LHS.accelerate = RHS.accelerate
		               AND LHS.year = RHS.year) ))
		WHERE (weight != 3000)
		ORDER BY YEAR
		
		

	   year
	0  1968
	1  1970
	2  1972
	3  1973
	4  1975
	5  1976
	6  1977
	7  1978
	8  1979
	9  1980
No solution for instance db2csv/car_1/0086_dev (4970)
No solution for instance db2csv/car_1/0082_dev (4971)
Wrong output for fuzzied solution in instance db2csv/car_1/0056_dev (4972)
	EXPECTED OUTPUT ====

		SELECT Model
		FROM CAR_NAMES
		GROUP BY Model
		ORDER BY count(*) DESC
		LIMIT 1;

	        model
	0  volvoqcF9V
	ACTUAL OUTPUT ====

		
		SELECT model
		FROM
		  (SELECT *
		   FROM
		     (SELECT model,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT model,
		                COUNT() AS n
		         FROM car_names
		         GROUP BY model)) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT model,
		                  COUNT() AS n
		           FROM car_names
		           GROUP BY model) AS RHS
		        WHERE (LHS.model = RHS.model
		               AND LHS.n = RHS.n) ))
		ORDER BY model
		
		

	        model
	0       volvo
	1  volvoqcF9V
No solution for instance db2csv/car_1/0020_dev (4973)
No solution for instance db2csv/car_1/0080_dev (4975)
No solution for instance db2csv/car_1/0090_dev (4976)
Wrong output for base solution in instance db2csv/car_1/0070_dev (4977)
	EXPECTED OUTPUT ====

	   horsepower
	0          71
	ACTUAL OUTPUT ====

		SELECT T1.horsepower
		FROM CARS_DATA AS T1
		ORDER BY T1.accelerate DESC
		LIMIT 1;

	  horsepower
	0         71
Wrong output for ground truth in instance db2csv/car_1/0070_dev (4977)
Wrong output for fuzzied solution in instance db2csv/car_1/0023_dev (4978)
	EXPECTED OUTPUT ====

		select count(*),
		       t2.fullname
		from model_list as t1
		join car_makers as t2 on t1.maker = t2.id
		group by t2.id;

	   count(*)      fullname
	0         1      Chrysler
	1         1  Daimler Benz
	2         1         Mazda
	3         1         Mazda
	4         1          Opel
	5         1     Opels(oUH
	6         1           pel
	7         2   Daimler Ben
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       fullname
		FROM
		  (SELECT fullname,
		          COUNT() AS n
		   FROM
		     (SELECT modelid,
		             maker,
		             model,
		             maker_other,
		             fullname,
		             country,
		             maker AS id
		      FROM
		        (SELECT LHS.modelid AS modelid,
		                LHS.maker AS maker,
		                LHS.model AS model,
		                RHS.maker AS maker_other,
		                RHS.fullname AS fullname,
		                RHS.country AS country
		         FROM model_list AS LHS
		         INNER JOIN car_makers AS RHS ON (LHS.maker = RHS.id)))
		   GROUP BY fullname)
		ORDER BY count___
		
		

	   count___      fullname
	0         1      Chrysler
	1         1  Daimler Benz
	2         1          Opel
	3         1     Opels(oUH
	4         1           pel
	5         2   Daimler Ben
	6         2         Mazda
Wrong output for base solution in instance db2csv/car_1/0050_dev (4979)
	EXPECTED OUTPUT ====

	   avg_horsepower_
	0       111.132911
	ACTUAL OUTPUT ====

		select avg(horsepower)
		from cars_data
		where year < 1980;

	   avg(horsepower)
	0       111.132911
Wrong output for ground truth in instance db2csv/car_1/0050_dev (4979)
No solution for instance db2csv/car_1/0032_dev (4981)
Wrong output for base solution in instance db2csv/concert_singer/0027_dev (4982)
	EXPECTED OUTPUT ====

	   year
	0  2014
	ACTUAL OUTPUT ====

		SELECT YEAR
		FROM concert
		GROUP BY YEAR
		ORDER BY count(*) DESC
		LIMIT 1

	   year
	0  2015
Wrong output for ground truth in instance db2csv/concert_singer/0027_dev (4982)
Wrong output for fuzzied solution in instance db2csv/concert_singer/0021_dev (4983)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM concert
		WHERE YEAR = 2014
		  OR YEAR = 2015

	   count(*)
	0         5
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM concert
		      WHERE (YEAR <= 2015)))
		WHERE (n != 2014)
		ORDER BY count___
		
		

	   count___
	0         6
Timeout while getting results...


Wrong output for fuzzied solution in instance db2csv/concert_singer/0033_dev (4985)
	EXPECTED OUTPUT ====

		SELECT name
		FROM stadium
		EXCEPT
		SELECT T2.name
		FROM concert AS T1
		JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id
		WHERE T1.year = 2014

	                   name
	0    )LDHampden ParkZkW
	1  2a2uQokkncgfKu2EpWGl
	2       Bayview Stadium
	3        Recreation Par
	4  Recreation ParkjpN)3
	5      orthbank Stadium
	6           seLMmamYM1U
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM stadium AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT LHS.concert_id AS concert_id,
		                     LHS.concert_name AS concert_name,
		                     LHS.theme AS theme,
		                     LHS.stadium_id AS stadium_id,
		                     LHS.year AS YEAR,
		                     RHS.location AS LOCATION,
		                     RHS.name AS name,
		                     RHS.capacity AS capacity,
		                     RHS.highest AS highest,
		                     RHS.lowest AS lowest,
		                     RHS.average AS average
		              FROM concert AS LHS
		              INNER JOIN stadium AS RHS ON (LHS.stadium_id = RHS.stadium_id))
		           WHERE (YEAR = 2014)) AS RHS
		        WHERE (LHS.capacity = RHS.capacity) ))
		ORDER BY name
		
		

	                   name
	0    )LDHampden ParkZkW
	1       Bayview Stadium
	2     Forthbank Stadium
	3     Forthbank Stadium
	4        Recreation Par
	5  Recreation ParkjpN)3
	6           seLMmamYM1U
Wrong output for fuzzied solution in instance db2csv/concert_singer/0039_dev (4986)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM singer_in_concert AS T1
		JOIN singer AS T2 ON T1.singer_id = T2.singer_id
		JOIN concert AS T3 ON T1.concert_id = T3.concert_id
		WHERE T3.year = 2014

	                   name
	0       5qtTimbalandaXv
	1       Dy5iIwaz)hI7mHQ
	2       Dy5iIwaz)hI7mHQ
	3             Joe Sharp
	4             Joe Sharp
	5             Joe Sharp
	6        Joe SharpaF9OO
	7        Joe SharpaF9OO
	8           John Nizini
	9           John Nizini
	10          John Nizini
	11         John Nizinik
	12         John Nizinik
	13    John Nizinik5q7w1
	14    John Nizinik5q7w1
	15      OtYR(Rose White
	16           Rose White
	17           Rose White
	18       T00PSeUQ4rnuMS
	19       T00PSeUQ4rnuMS
	20      TgZTimbaland O7
	21      TgZTimbaland O7
	22            Timbaland
	23            Timbaland
	24            Timbaland
	25            Timbaland
	26    eWVR8John Nizinik
	27    jl  2John Nizinik
	28         szpO(2iOTAjB
	29         szpO(2iOTAjB
	30            wZ3sB6znq
	31  yjS2UswhbVkhpstc S(
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.concert_id AS concert_id,
		          LHS.concert_name AS concert_name,
		          LHS.theme AS theme,
		          LHS.stadium_id AS stadium_id,
		          LHS.year AS YEAR,
		          LHS.singer_id AS singer_id,
		          RHS.name AS name,
		          RHS.country AS country,
		          RHS.song_name AS song_name,
		          RHS.song_release_year AS song_release_year,
		          RHS.age AS age,
		          RHS.is_male AS is_male
		   FROM
		     (SELECT LHS.concert_id AS concert_id,
		             LHS.concert_name AS concert_name,
		             LHS.theme AS theme,
		             LHS.stadium_id AS stadium_id,
		             LHS.year AS YEAR,
		             RHS.singer_id AS singer_id
		      FROM concert AS LHS
		      INNER JOIN singer_in_concert AS RHS ON (LHS.concert_id = RHS.concert_id)) AS LHS
		   INNER JOIN singer AS RHS ON (LHS.singer_id = RHS.singer_id))
		WHERE (YEAR <= 2014)
		ORDER BY name
		
		

	                   name
	0       5qtTimbalandaXv
	1           DXjKnpXcAZ5
	2       Dy5iIwaz)hI7mHQ
	3       Dy5iIwaz)hI7mHQ
	4      EmsRose WhiteztC
	5             Joe Sharp
	6             Joe Sharp
	7             Joe Sharp
	8             Joe Sharp
	9        Joe SharpaF9OO
	10       Joe SharpaF9OO
	11          John Nizini
	12          John Nizini
	13          John Nizini
	14         John Nizinik
	15         John Nizinik
	16         John Nizinik
	17    John Nizinik5q7w1
	18    John Nizinik5q7w1
	19      OtYR(Rose White
	20           Rose White
	21           Rose White
	22           Rose White
	23           Rose White
	24           Rose White
	25       T00PSeUQ4rnuMS
	26       T00PSeUQ4rnuMS
	27      TgZTimbaland O7
	28      TgZTimbaland O7
	29            Timbaland
	30            Timbaland
	31            Timbaland
	32            Timbaland
	33            Timbaland
	34           Tribal Kin
	35    eWVR8John Nizinik
	36             imbaland
	37    jl  2John Nizinik
	38         szpO(2iOTAjB
	39         szpO(2iOTAjB
	40           u5TmEL124a
	41            wZ3sB6znq
	42            wZ3sB6znq
	43            wZ3sB6znq
	44  yjS2UswhbVkhpstc S(
	45  yjS2UswhbVkhpstc S(
Wrong output for base solution in instance db2csv/concert_singer/0029_dev (4987)
	EXPECTED OUTPUT ====

		SELECT name
		FROM stadium
		WHERE stadium_id NOT IN
		    (SELECT stadium_id
		     FROM concert)

	                name
	0    Bayview Stadium
	1  Forthbank Stadium
	2      Gayfield Park
	3       Hampden Park
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM stadium AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT stadium_id
		           FROM stadium INTERSECT SELECT stadium_id
		           FROM concert) AS RHS
		        WHERE (LHS.stadium_id = RHS.stadium_id) ))
		ORDER BY name
		
		

	                name
	0            Balmoor
	1    Bayview Stadium
	2  Forthbank Stadium
	3      Gayfield Park
	4         Glebe Park
	5       Hampden Park
	6    Recreation Park
	7      Somerset Park
	8       Stark's Park
Wrong output for fuzzied solution in instance db2csv/concert_singer/0038_dev (4990)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM singer_in_concert AS T1
		JOIN singer AS T2 ON T1.singer_id = T2.singer_id
		JOIN concert AS T3 ON T1.concert_id = T3.concert_id
		WHERE T3.year = 2014

	                   name
	0       5qtTimbalandaXv
	1       Dy5iIwaz)hI7mHQ
	2       Dy5iIwaz)hI7mHQ
	3             Joe Sharp
	4             Joe Sharp
	5             Joe Sharp
	6        Joe SharpaF9OO
	7        Joe SharpaF9OO
	8           John Nizini
	9           John Nizini
	10          John Nizini
	11         John Nizinik
	12         John Nizinik
	13    John Nizinik5q7w1
	14    John Nizinik5q7w1
	15      OtYR(Rose White
	16           Rose White
	17           Rose White
	18       T00PSeUQ4rnuMS
	19       T00PSeUQ4rnuMS
	20      TgZTimbaland O7
	21      TgZTimbaland O7
	22            Timbaland
	23            Timbaland
	24            Timbaland
	25            Timbaland
	26    eWVR8John Nizinik
	27    jl  2John Nizinik
	28         szpO(2iOTAjB
	29         szpO(2iOTAjB
	30            wZ3sB6znq
	31  yjS2UswhbVkhpstc S(
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.concert_id AS concert_id,
		          LHS.concert_name AS concert_name,
		          LHS.theme AS theme,
		          LHS.stadium_id AS stadium_id,
		          LHS.year AS YEAR,
		          LHS.singer_id AS singer_id,
		          RHS.name AS name,
		          RHS.country AS country,
		          RHS.song_name AS song_name,
		          RHS.song_release_year AS song_release_year,
		          RHS.age AS age,
		          RHS.is_male AS is_male
		   FROM
		     (SELECT LHS.concert_id AS concert_id,
		             LHS.concert_name AS concert_name,
		             LHS.theme AS theme,
		             LHS.stadium_id AS stadium_id,
		             LHS.year AS YEAR,
		             RHS.singer_id AS singer_id
		      FROM concert AS LHS
		      INNER JOIN singer_in_concert AS RHS ON (LHS.concert_id = RHS.concert_id)) AS LHS
		   INNER JOIN singer AS RHS ON (LHS.singer_id = RHS.singer_id))
		WHERE (YEAR <= 2014)
		ORDER BY name
		
		

	                   name
	0       5qtTimbalandaXv
	1           DXjKnpXcAZ5
	2       Dy5iIwaz)hI7mHQ
	3       Dy5iIwaz)hI7mHQ
	4      EmsRose WhiteztC
	5             Joe Sharp
	6             Joe Sharp
	7             Joe Sharp
	8             Joe Sharp
	9        Joe SharpaF9OO
	10       Joe SharpaF9OO
	11          John Nizini
	12          John Nizini
	13          John Nizini
	14         John Nizinik
	15         John Nizinik
	16         John Nizinik
	17    John Nizinik5q7w1
	18    John Nizinik5q7w1
	19      OtYR(Rose White
	20           Rose White
	21           Rose White
	22           Rose White
	23           Rose White
	24           Rose White
	25       T00PSeUQ4rnuMS
	26       T00PSeUQ4rnuMS
	27      TgZTimbaland O7
	28      TgZTimbaland O7
	29            Timbaland
	30            Timbaland
	31            Timbaland
	32            Timbaland
	33            Timbaland
	34           Tribal Kin
	35    eWVR8John Nizinik
	36             imbaland
	37    jl  2John Nizinik
	38         szpO(2iOTAjB
	39         szpO(2iOTAjB
	40           u5TmEL124a
	41            wZ3sB6znq
	42            wZ3sB6znq
	43            wZ3sB6znq
	44  yjS2UswhbVkhpstc S(
	45  yjS2UswhbVkhpstc S(
Wrong output for fuzzied solution in instance db2csv/concert_singer/0036_dev (4991)
	EXPECTED OUTPUT ====

		SELECT T2.name,
		       count(*)
		FROM singer_in_concert AS T1
		JOIN singer AS T2 ON T1.singer_id = T2.singer_id
		GROUP BY T2.singer_id

	                name  count(*)
	0          Timbaland         6
	1          Joe Sharp         7
	2     Joe SharpMFQml         7
	3          Timbaland         7
	4          Timbaland         7
	5     TimbalandT(7tm         7
	6     iiO5oJoe Sharp         7
	7  kJl4lJustin Brown         7
	ACTUAL OUTPUT ====

		
		SELECT name,
		       n AS count___
		FROM
		  (SELECT name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.concert_id AS concert_id,
		             LHS.singer_id AS singer_id,
		             RHS.name AS name,
		             RHS.country AS country,
		             RHS.song_name AS song_name,
		             RHS.song_release_year AS song_release_year,
		             RHS.age AS age,
		             RHS.is_male AS is_male
		      FROM singer_in_concert AS LHS
		      INNER JOIN singer AS RHS ON (LHS.singer_id = RHS.singer_id))
		   GROUP BY name)
		ORDER BY name
		
		

	                name  count___
	0          Joe Sharp         7
	1     Joe SharpMFQml         7
	2     TimbalandT(7tm         7
	3     iiO5oJoe Sharp         7
	4  kJl4lJustin Brown         7
	5          Timbaland        20
Wrong output for fuzzied solution in instance db2csv/concert_singer/0001_dev (4993)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM singer

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT name) AS n_distinct
		   FROM singer)
		ORDER BY count___
		
		

	   count___
	0         6
Wrong output for fuzzied solution in instance db2csv/concert_singer/0043_dev (4995)
	EXPECTED OUTPUT ====

		SELECT T2.name,
		       T2.location
		FROM concert AS T1
		JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id
		WHERE T1.Year = 2014 INTERSECT
		  SELECT T2.name,
		         T2.location
		  FROM concert AS T1
		  JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.Year = 2015

	                   name         location
	0  PCueCBayview Stadium     Queen's Park
	1        ayview Stadium  Stirling Albion
	ACTUAL OUTPUT ====

		
		SELECT name,
		       LOCATION
		FROM
		  (SELECT LHS.concert_id AS concert_id,
		          LHS.concert_name AS concert_name,
		          LHS.theme AS theme,
		          LHS.stadium_id AS stadium_id,
		          LHS.year AS YEAR,
		          RHS.location AS LOCATION,
		          RHS.name AS name,
		          RHS.capacity AS capacity,
		          RHS.highest AS highest,
		          RHS.lowest AS lowest,
		          RHS.average AS average
		   FROM
		     (SELECT LHS.concert_id AS concert_id,
		             LHS.concert_name AS concert_name,
		             LHS.theme AS theme,
		             LHS.stadium_id AS stadium_id,
		             LHS.year AS YEAR
		      FROM concert AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM concert
		         WHERE (YEAR > 2014)) AS RHS ON (LHS.concert_id = RHS.concert_id
		                                         AND LHS.concert_name = RHS.concert_name
		                                         AND LHS.theme = RHS.theme
		                                         AND LHS.stadium_id = RHS.stadium_id
		                                         AND LHS.year = RHS.year)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM stadium AS LHS
		      WHERE EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM concert
		              WHERE (YEAR < 2015)) AS RHS
		           WHERE (LHS.stadium_id = RHS.stadium_id) )) AS RHS ON (LHS.stadium_id = RHS.stadium_id))
		ORDER BY name
		
		

	                   name         location
	0  PCueCBayview Stadium     Queen's Park
	1  PCueCBayview Stadium     Queen's Park
	2  PCueCBayview Stadium     Queen's Park
	3        ayview Stadium  Stirling Albion
No solution for instance db2csv/concert_singer/0042_dev (4997)
Wrong output for fuzzied solution in instance db2csv/concert_singer/0026_dev (5000)
	EXPECTED OUTPUT ====

		select t2.name,
		       t2.capacity
		from concert as t1
		join stadium as t2 on t1.stadium_id = t2.stadium_id
		where t1.year > 2013
		group by t2.stadium_id
		order by count(*) desc
		limit 1

	             name  capacity
	0  ayview Stadium      2000
	ACTUAL OUTPUT ====

		
		SELECT name,
		       capacity
		FROM
		  (SELECT LHS.stadium_id AS stadium_id,
		          LHS.location AS LOCATION,
		          LHS.name AS name,
		          LHS.capacity AS capacity,
		          LHS.highest AS highest,
		          LHS.lowest AS lowest,
		          LHS.average AS average
		   FROM stadium AS LHS
		   INNER JOIN
		     (SELECT COUNT(DISTINCT YEAR) AS n_distinct
		      FROM concert
		      WHERE (YEAR >= 2013)) AS RHS ON (LHS.stadium_id = RHS.n_distinct))
		ORDER BY name
		
		

	           name  capacity
	0  b)MaWBalmoor      4125
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_32513.sqlite3'
No solution for instance db2csv/concert_singer/0016_dev (5003)
No solution for instance db2csv/concert_singer/0009_dev (5004)
Wrong output for fuzzied solution in instance db2csv/concert_singer/0002_dev (5005)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM singer

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT name) AS n_distinct
		   FROM singer)
		ORDER BY count___
		
		

	   count___
	0         6
Wrong output for base solution in instance db2csv/concert_singer/0008_dev (5006)
	EXPECTED OUTPUT ====

	  song_name  song_release_year
	0      Love               2016
	ACTUAL OUTPUT ====

		SELECT song_name,
		       song_release_year
		FROM singer
		ORDER BY age
		LIMIT 1

	  song_name song_release_year
	0      Love              2016
Wrong output for ground truth in instance db2csv/concert_singer/0008_dev (5006)
No solution for instance db2csv/concert_singer/0041_dev (5007)
Wrong output for fuzzied solution in instance db2csv/concert_singer/0019_dev (5008)
	EXPECTED OUTPUT ====

		SELECT name,
		       capacity
		FROM stadium
		ORDER BY average DESC
		LIMIT 1

	            name  capacity
	0  Gayfield Park     11996
	ACTUAL OUTPUT ====

		
		SELECT name,
		       capacity
		FROM
		  (SELECT *
		   FROM stadium AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT MAX(name) AS name
		           FROM stadium) AS RHS
		        WHERE (LHS.name = RHS.name) ))
		ORDER BY name
		
		

	                    name    capacity
	0  s(lRecreation Park4xK  6940105817
Wrong output for fuzzied solution in instance db2csv/concert_singer/0006_dev (5009)
	EXPECTED OUTPUT ====

		SELECT avg(age),
		       min(age),
		       max(age)
		FROM singer
		WHERE country = 'France'

	   avg(age)  min(age)  max(age)
	0      32.0        32        32
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `meanage` AS `avg_age_`,
		                `minage` AS `min_age_`,
		                MAX(`age`) OVER () AS `max_age_`
		FROM
		  (SELECT `singer_id`,
		          `name`,
		          `country`,
		          `song_name`,
		          `song_release_year`,
		          `age`,
		          `is_male`,
		          `minage`,
		          AVG(`age`) OVER () AS `meanage`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `singer_id`,
		                `name`,
		                `country`,
		                `song_name`,
		                `song_release_year`,
		                `age`,
		                `is_male`,
		                MIN(`age`) OVER () AS `minage`
		         FROM `singer`)
		      WHERE (`country` = 'France')))
		ORDER BY avg_age_
		
		

	   avg_age_  min_age_  max_age_
	0      32.0        28        32
No solution for instance db2csv/concert_singer/0040_dev (5010)
Wrong output for base solution in instance db2csv/concert_singer/0028_dev (5013)
	EXPECTED OUTPUT ====

	   year
	0  2014
	ACTUAL OUTPUT ====

		SELECT YEAR
		FROM concert
		GROUP BY YEAR
		ORDER BY count(*) DESC
		LIMIT 1

	   year
	0  2015
Wrong output for ground truth in instance db2csv/concert_singer/0028_dev (5013)
Wrong output for fuzzied solution in instance db2csv/concert_singer/0022_dev (5014)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM concert
		WHERE YEAR = 2014
		  OR YEAR = 2015

	   count(*)
	0         5
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM concert
		      WHERE (YEAR <= 2015)))
		WHERE (n != 2014)
		ORDER BY count___
		
		

	   count___
	0         6
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_32513.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_32513.sqlite3'
No solution for instance db2csv/concert_singer/0031_dev (5017)
Wrong output for base solution in instance db2csv/concert_singer/0007_dev (5018)
	EXPECTED OUTPUT ====

	  song_name  song_release_year
	0      Love               2016
	ACTUAL OUTPUT ====

		SELECT song_name,
		       song_release_year
		FROM singer
		ORDER BY age
		LIMIT 1

	  song_name song_release_year
	0      Love              2016
Wrong output for ground truth in instance db2csv/concert_singer/0007_dev (5018)
No solution for instance db2csv/concert_singer/0015_dev (5019)
No solution for instance db2csv/concert_singer/0010_dev (5020)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_32513.sqlite3'
Error while executing solution for instance db2csv/concert_singer/0025_dev (5023)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT name,
                capacity
FROM
  (SELECT stadium_id,
          LOCATION,
          name,
          capacity,
          highest,
          lowest,
          average,
          concert_id,
          concert_name,
          theme,
          stadium_id_other,
          YEAR,
          stadium_id AS n_distinct
   FROM
     (SELECT LHS.stadium_id AS stadium_id,
             LHS.location AS LOCATION,
             LHS.name AS name,
             LHS.capacity AS capacity,
             LHS.highest AS highest,
             LHS.lowest AS lowest,
             LHS.average AS average,
             RHS.concert_id AS concert_id,
             RHS.concert_name AS concert_name,
             RHS.theme AS theme,
             RHS.stadium_id AS stadium_id_other,
             RHS.year AS YEAR
      FROM stadium AS LHS
      INNER JOIN
        (SELECT concert_id,
                concert_name,
                theme,
                stadium_id,
                YEAR,
                COUNT(DISTINCT YEAR) OVER () AS n_distinct
         FROM concert) AS RHS ON (LHS.stadium_id = RHS.n_distinct)))
WHERE (n_distinct <= 2014)
ORDER BY name

]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/concert_singer/0005_dev (5025)
	EXPECTED OUTPUT ====

		SELECT avg(age),
		       min(age),
		       max(age)
		FROM singer
		WHERE country = 'France'

	  avg(age) min(age) max(age)
	0     None     None     None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `meanage` AS `avg_age_`,
		                `minage` AS `min_age_`,
		                MAX(`age`) OVER () AS `max_age_`
		FROM
		  (SELECT `singer_id`,
		          `name`,
		          `country`,
		          `song_name`,
		          `song_release_year`,
		          `age`,
		          `is_male`,
		          `minage`,
		          AVG(`age`) OVER () AS `meanage`
		   FROM
		     (SELECT `singer_id`,
		             `name`,
		             `country`,
		             `song_name`,
		             `song_release_year`,
		             `age`,
		             `is_male`,
		             MIN(`age`) OVER () AS `minage`
		      FROM
		        (SELECT *
		         FROM `singer`
		         WHERE (`country` = 'France'))))
		WHERE (minage <= age)
		ORDER BY avg_age_
		
		

	Empty DataFrame
	Columns: [avg_age_, min_age_, max_age_]
	Index: []
Wrong output for fuzzied solution in instance db2csv/concert_singer/0032_dev (5026)
	EXPECTED OUTPUT ====

		SELECT name
		FROM stadium
		EXCEPT
		SELECT T2.name
		FROM concert AS T1
		JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id
		WHERE T1.year = 2014

	                   name
	0    )LDHampden ParkZkW
	1  2a2uQokkncgfKu2EpWGl
	2       Bayview Stadium
	3        Recreation Par
	4  Recreation ParkjpN)3
	5      orthbank Stadium
	6           seLMmamYM1U
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM stadium AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM concert
		           WHERE (YEAR <= 2014)) AS RHS
		        WHERE (LHS.stadium_id = RHS.stadium_id) ))
		ORDER BY name
		
		

	                   name
	0  2a2uQokkncgfKu2EpWGl
	1       Bayview Stadium
	2     Forthbank Stadium
	3        Recreation Par
	4  Recreation ParkjpN)3
	5      orthbank Stadium
	6           seLMmamYM1U
No log for textbook/1 (5027)
No log for textbook/12 (5028)
No log for textbook/24 (5029)
No log for textbook/27 (5030)
No log for textbook/14 (5031)
No log for textbook/23 (5032)
No log for textbook/4 (5033)
No log for textbook/20 (5034)
No log for textbook/8 (5035)
No log for textbook/35 (5036)
No log for textbook/16 (5037)
No log for textbook/10 (5038)
No log for textbook/21 (5039)
No log for textbook/18 (5040)
No log for textbook/3 (5041)
No log for textbook/29 (5042)
No log for textbook/36 (5043)
No log for textbook/37 (5044)
No log for textbook/6 (5045)
No log for textbook/30 (5046)
No log for textbook/25 (5047)
No log for textbook/11 (5048)
No log for textbook/7 (5049)
No log for textbook/5 (5050)
No log for textbook/32 (5051)
No log for textbook/28 (5052)
No log for textbook/13 (5053)
No log for textbook/33 (5054)
No log for textbook/34 (5055)
No log for textbook/26 (5056)
No log for textbook/2 (5057)
No log for textbook/17 (5058)
No log for textbook/22 (5059)
No log for textbook/19 (5060)
No log for textbook/15 (5061)
No log for textbook/31 (5062)
No log for textbook/9 (5063)
