Starting log for run s62
No database for instance scythe/recent_posts/011 (1)
No database for instance scythe/recent_posts/022 (2)
No solution for instance scythe/recent_posts/026 (3)
No solution for instance scythe/recent_posts/033 (4)
No solution for instance scythe/recent_posts/046 (5)
No solution for instance scythe/recent_posts/051 (6)
No solution for instance scythe/recent_posts/050 (7)
No solution for instance scythe/recent_posts/012 (8)
No solution for instance scythe/recent_posts/039 (9)
No solution for instance scythe/recent_posts/040 (10)
No solution for instance scythe/recent_posts/020 (11)
No database for instance scythe/recent_posts/003 (12)
No solution for instance scythe/recent_posts/002 (13)
No solution for instance scythe/recent_posts/016 (14)
No database for instance scythe/recent_posts/045 (15)
No solution for instance scythe/recent_posts/005 (16)
No database for instance scythe/recent_posts/028 (17)
No solution for instance scythe/recent_posts/024 (18)
No solution for instance scythe/recent_posts/004 (19)
No solution for instance scythe/recent_posts/032 (20)
No solution for instance scythe/recent_posts/027 (21)
No solution for instance scythe/recent_posts/037 (22)
No solution for instance scythe/recent_posts/017 (23)
No solution for instance scythe/recent_posts/014 (24)
No solution for instance scythe/recent_posts/035 (25)
No solution for instance scythe/recent_posts/019 (26)
No solution for instance scythe/recent_posts/043 (27)
No solution for instance scythe/recent_posts/013 (28)
No solution for instance scythe/recent_posts/015 (29)
No solution for instance scythe/recent_posts/049 (30)
No solution for instance scythe/recent_posts/021 (31)
No solution for instance scythe/recent_posts/023 (32)
No solution for instance scythe/recent_posts/006 (33)
No database for instance scythe/recent_posts/031 (34)
No solution for instance scythe/recent_posts/030 (35)
No solution for instance scythe/recent_posts/047 (36)
No solution for instance scythe/recent_posts/010 (37)
No solution for instance scythe/recent_posts/025 (38)
No database for instance scythe/recent_posts/007 (39)
No solution for instance scythe/recent_posts/001 (40)
No solution for instance scythe/recent_posts/008 (41)
No solution for instance scythe/recent_posts/048 (42)
No solution for instance scythe/recent_posts/029 (43)
No database for instance scythe/recent_posts/034 (44)
No database for instance scythe/recent_posts/044 (45)
No solution for instance scythe/recent_posts/041 (46)
No database for instance scythe/recent_posts/009 (47)
No database for instance scythe/recent_posts/042 (48)
No database for instance scythe/recent_posts/036 (49)
No database for instance scythe/recent_posts/038 (50)
No solution for instance scythe/recent_posts/018 (51)
No database for instance scythe/top_rated_posts/011 (52)
No database for instance scythe/top_rated_posts/022 (53)
No solution for instance scythe/top_rated_posts/026 (54)
No solution for instance scythe/top_rated_posts/033 (55)
No solution for instance scythe/top_rated_posts/046 (56)
No database for instance scythe/top_rated_posts/051 (57)
No database for instance scythe/top_rated_posts/050 (58)
No solution for instance scythe/top_rated_posts/012 (59)
No database for instance scythe/top_rated_posts/039 (60)
No solution for instance scythe/top_rated_posts/052 (61)
No solution for instance scythe/top_rated_posts/056 (62)
No database for instance scythe/top_rated_posts/040 (63)
No database for instance scythe/top_rated_posts/057 (64)
No solution for instance scythe/top_rated_posts/020 (65)
No database for instance scythe/top_rated_posts/003 (66)
No database for instance scythe/top_rated_posts/002 (67)
No database for instance scythe/top_rated_posts/016 (68)
No database for instance scythe/top_rated_posts/045 (69)
No solution for instance scythe/top_rated_posts/005 (70)
No database for instance scythe/top_rated_posts/055 (71)
No database for instance scythe/top_rated_posts/028 (72)
No solution for instance scythe/top_rated_posts/024 (73)
No solution for instance scythe/top_rated_posts/004 (74)
No database for instance scythe/top_rated_posts/032 (75)
No database for instance scythe/top_rated_posts/027 (76)
No database for instance scythe/top_rated_posts/037 (77)
No solution for instance scythe/top_rated_posts/017 (78)
No database for instance scythe/top_rated_posts/014 (79)
No solution for instance scythe/top_rated_posts/035 (80)
No database for instance scythe/top_rated_posts/019 (81)
No database for instance scythe/top_rated_posts/043 (82)
No database for instance scythe/top_rated_posts/013 (83)
No solution for instance scythe/top_rated_posts/015 (84)
No database for instance scythe/top_rated_posts/049 (85)
No database for instance scythe/top_rated_posts/021 (86)
No database for instance scythe/top_rated_posts/023 (87)
No database for instance scythe/top_rated_posts/006 (88)
No solution for instance scythe/top_rated_posts/031 (89)
No solution for instance scythe/top_rated_posts/030 (90)
No solution for instance scythe/top_rated_posts/047 (91)
No database for instance scythe/top_rated_posts/010 (92)
No database for instance scythe/top_rated_posts/025 (93)
No solution for instance scythe/top_rated_posts/007 (94)
No database for instance scythe/top_rated_posts/001 (95)
No solution for instance scythe/top_rated_posts/008 (96)
No database for instance scythe/top_rated_posts/048 (97)
No database for instance scythe/top_rated_posts/029 (98)
No solution for instance scythe/top_rated_posts/034 (99)
No solution for instance scythe/top_rated_posts/053 (100)
No database for instance scythe/top_rated_posts/044 (101)
No solution for instance scythe/top_rated_posts/041 (102)
No database for instance scythe/top_rated_posts/009 (103)
No solution for instance scythe/top_rated_posts/042 (104)
No solution for instance scythe/top_rated_posts/036 (105)
No solution for instance scythe/top_rated_posts/054 (106)
No database for instance scythe/top_rated_posts/038 (107)
No solution for instance scythe/top_rated_posts/018 (108)
No solution for instance 55-tests/46 (109)
No database for instance 55-tests/1 (110)
No database for instance 55-tests/12 (111)
No ground truth for instance 55-tests/24 (112)
No solution for instance 55-tests/43 (113)
No solution for instance 55-tests/27 (114)
No database for instance 55-tests/14 (115)
No ground truth for instance 55-tests/23 (116)
No ground truth for instance 55-tests/40 (117)
No database for instance 55-tests/4 (118)
No ground truth for instance 55-tests/20 (119)
No database for instance 55-tests/8 (120)
No ground truth for instance 55-tests/44 (121)
No ground truth for instance 55-tests/35 (122)
No database for instance 55-tests/16 (123)
No database for instance 55-tests/10 (124)
No ground truth for instance 55-tests/21 (125)
No database for instance 55-tests/18 (126)
No solution for instance 55-tests/52 (127)
No database for instance 55-tests/3 (128)
No ground truth for instance 55-tests/29 (129)
No ground truth for instance 55-tests/36 (130)
No ground truth for instance 55-tests/37 (131)
No database for instance 55-tests/6 (132)
No ground truth for instance 55-tests/55 (133)
No ground truth for instance 55-tests/30 (134)
No ground truth for instance 55-tests/39 (135)
No solution for instance 55-tests/38 (136)
No ground truth for instance 55-tests/53 (137)
No ground truth for instance 55-tests/54 (138)
No solution for instance 55-tests/25 (139)
No database for instance 55-tests/11 (140)
No database for instance 55-tests/7 (141)
No database for instance 55-tests/5 (142)
No ground truth for instance 55-tests/51 (143)
No ground truth for instance 55-tests/32 (144)
No ground truth for instance 55-tests/48 (145)
No ground truth for instance 55-tests/28 (146)
No solution for instance 55-tests/47 (147)
No database for instance 55-tests/13 (148)
No ground truth for instance 55-tests/33 (149)
No ground truth for instance 55-tests/34 (150)
No ground truth for instance 55-tests/26 (151)
No ground truth for instance 55-tests/45 (152)
No ground truth for instance 55-tests/42 (153)
No database for instance 55-tests/2 (154)
No ground truth for instance 55-tests/41 (155)
No solution for instance 55-tests/17 (156)
No solution for instance 55-tests/49 (157)
No solution for instance 55-tests/22 (158)
No database for instance 55-tests/19 (159)
No database for instance 55-tests/15 (160)
No ground truth for instance 55-tests/31 (161)
No solution for instance 55-tests/9 (162)
No ground truth for instance 55-tests/50 (163)
Wrong output for fuzzied solution in instance spider/club_1/0033 (164)
	EXPECTED OUTPUT ====

		SELECT avg(t3.age)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t1.clubname = "Bootup Baltimore"

	   avg(t3.age)
	0    18.636364
	ACTUAL OUTPUT ====

		
		SELECT `meanage` AS `avg_t3_age_`
		FROM
		  (SELECT `clubname`,
		          `major`,
		          AVG(`age`) AS `meanage`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`clubid` AS `clubid`,
		             `LHS`.`clubname` AS `clubname`,
		             `LHS`.`clubdesc` AS `clubdesc`,
		             `LHS`.`clublocation` AS `clublocation`,
		             `RHS`.`position` AS `position`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`clubid` AS `clubid`,
		                `RHS`.`clubname` AS `clubname`,
		                `RHS`.`clubdesc` AS `clubdesc`,
		                `RHS`.`clublocation` AS `clublocation`
		         FROM `student` AS `LHS`
		         CROSS JOIN `club` AS `RHS`) AS `LHS`
		      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                                  AND `LHS`.`clubid` = `RHS`.`clubid`))
		   GROUP BY `clubname`,
		            `major`)
		WHERE (`clubname` = 'Bootup Baltimore')
		ORDER BY avg_t3_age_

	   avg_t3_age_
	0    16.400000
	1    17.000000
	2    17.000000
	3    17.750000
	4    18.000000
	5    20.000000
	6    20.333333
	7    20.666667
	8    22.000000
Wrong output for fuzzied solution in instance spider/club_1/0027 (169)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t1.clubname = "Bootup Baltimore"
		  AND t3.age < 18

	   count(*)
	0         3
	ACTUAL OUTPUT ====

		
		SELECT `clubid` AS `count___`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`clubid` AS `clubid`,
		          `LHS`.`clubname` AS `clubname`,
		          `LHS`.`clubdesc` AS `clubdesc`,
		          `LHS`.`clublocation` AS `clublocation`,
		          `LHS`.`position` AS `position`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`clubid` AS `clubid`,
		             `LHS`.`clubname` AS `clubname`,
		             `LHS`.`clubdesc` AS `clubdesc`,
		             `LHS`.`clublocation` AS `clublocation`,
		             `RHS`.`position` AS `position`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`clubid` AS `clubid`,
		                `RHS`.`clubname` AS `clubname`,
		                `RHS`.`clubdesc` AS `clubdesc`,
		                `RHS`.`clublocation` AS `clublocation`
		         FROM `student` AS `LHS`
		         CROSS JOIN `club` AS `RHS`) AS `LHS`
		      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                                  AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`
		   INNER JOIN
		     (SELECT `stuid`,
		             `clubid`,
		             `position`,
		             COUNT(*) OVER () AS `n`
		      FROM `member_of_club`) AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                             AND `LHS`.`clubid` = `RHS`.`clubid`
		                                             AND `LHS`.`position` = `RHS`.`position`))
		WHERE (`clubname` = 'Bootup Baltimore'
		       AND age >= 18)
		ORDER BY count___

	    count___
	0          1
	1          1
	2          1
	3          1
	4          1
	5          1
	6          1
	7          1
	8          1
	9          1
	10         1
	11         1
	12         1
	13         1
	14         1
	15         1
	16         1
	17         1
	18         1
	19         1
	20         1
	21         1
	22         1
	23         1
	24         1
	25         1
	26         1
	27         1
	28         1
	29         1
	30         1
	31         1
	32         1
Wrong output for fuzzied solution in instance spider/club_1/0022 (170)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM club
		WHERE clublocation = "HHH"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `clubid`,
		          `clublocation`,
		          COUNT() AS `n`
		   FROM `club`
		   GROUP BY `clubid`,
		            `clublocation`)
		WHERE (`clublocation` = 'HHH')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/club_1/0030 (171)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT t1.clubname)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t3.fname = "Eric"
		  AND t3.lname = "Tai"

	   count(distinct t1.clubname)
	0                            0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count_distinct_t1_clubname_`
		FROM
		  (SELECT COUNT(DISTINCT `clubname`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `LHS`.`clubid` AS `clubid`,
		                `LHS`.`clubname` AS `clubname`,
		                `LHS`.`clubdesc` AS `clubdesc`,
		                `LHS`.`clublocation` AS `clublocation`,
		                `RHS`.`position` AS `position`
		         FROM
		           (SELECT `LHS`.`stuid` AS `stuid`,
		                   `LHS`.`lname` AS `lname`,
		                   `LHS`.`fname` AS `fname`,
		                   `LHS`.`age` AS `age`,
		                   `LHS`.`sex` AS `sex`,
		                   `LHS`.`major` AS `major`,
		                   `LHS`.`advisor` AS `advisor`,
		                   `LHS`.`city_code` AS `city_code`,
		                   `RHS`.`clubid` AS `clubid`,
		                   `RHS`.`clubname` AS `clubname`,
		                   `RHS`.`clubdesc` AS `clubdesc`,
		                   `RHS`.`clublocation` AS `clublocation`
		            FROM `student` AS `LHS`
		            CROSS JOIN `club` AS `RHS`) AS `LHS`
		         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                                     AND `LHS`.`clubid` = `RHS`.`clubid`))
		      WHERE (`fname` = 'Eric'
		             AND `lname` != 'Tai')))
		ORDER BY count_distinct_t1_clubname_

	   count_distinct_t1_clubname_
	0                            4
Wrong output for fuzzied solution in instance spider/club_1/0013 (172)
	EXPECTED OUTPUT ====

		SELECT t3.fname,
		       t3.lname
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t1.clubname = "Bootup Baltimore"
		  AND t3.major = "600"

	  fname       lname
	0   Jun  fEoAwSmith
	ACTUAL OUTPUT ====

		
		SELECT `fname`,
		       `lname`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`clubid` AS `clubid`,
		          `LHS`.`clubname` AS `clubname`,
		          `LHS`.`clubdesc` AS `clubdesc`,
		          `LHS`.`clublocation` AS `clublocation`,
		          `RHS`.`position` AS `position`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `RHS`.`clubid` AS `clubid`,
		             `RHS`.`clubname` AS `clubname`,
		             `RHS`.`clubdesc` AS `clubdesc`,
		             `RHS`.`clublocation` AS `clublocation`
		      FROM `student` AS `LHS`
		      CROSS JOIN `club` AS `RHS`) AS `LHS`
		   INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                               AND `LHS`.`clubid` = `RHS`.`clubid`))
		WHERE (`clubname` = 'Bootup Baltimore'
		       AND major <= 600)
		ORDER BY fname

	         fname           lname
	0     4k2TvIan             Rug
	1     4k2TvIan             Rug
	2     4k2TvIan             Rug
	3         Andy          Nelson
	4    AndyCQQBf        Thornton
	5    AndyCQQBf        Thornton
	6    AndyCQQBf        Thornton
	7         Eric  M 6ThorntonGSQ
	8         Eric            Rugh
	9           Ju          Nelson
	10          Ju          Nelson
	11          Ju          Nelson
	12          Ju          Nelson
	13          Ju     bXmSmithaaw
	14          Ju     bXmSmithaaw
	15          Ju     bXmSmithaaw
	16         Jun          Nelson
	17         Jun      RKiPangCvs
	18         Jun      RKiPangCvs
	19         Jun      RKiPangCvs
	20         Jun      fEoAwSmith
	21        Mark      (VGPangFiH
	22        Mark      (VGPangFiH
	23   UxhIanAyc         hornton
	24  x4FEric62g           Smith
No solution for instance spider/club_1/0026 (175)
No solution for instance spider/club_1/0015 (176)
Wrong output for fuzzied solution in instance spider/club_1/0032 (179)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t1.clubname
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t3.advisor = 1121

	           clubname
	0        Tennis Clu
	1       Tennis Club
	2  zING4Tennis Club
	ACTUAL OUTPUT ====

		
		SELECT clubname
		FROM
		  (SELECT LHS.stuid AS stuid,
		          LHS.lname AS lname,
		          LHS.fname AS fname,
		          LHS.age AS age,
		          LHS.sex AS sex,
		          LHS.major AS major,
		          LHS.advisor AS advisor,
		          LHS.city_code AS city_code,
		          LHS.clubid AS clubid,
		          LHS.clubname AS clubname,
		          LHS.clubdesc AS clubdesc,
		          LHS.clublocation AS clublocation,
		          RHS.position AS POSITION
		   FROM
		     (SELECT LHS.stuid AS stuid,
		             LHS.lname AS lname,
		             LHS.fname AS fname,
		             LHS.age AS age,
		             LHS.sex AS sex,
		             LHS.major AS major,
		             LHS.advisor AS advisor,
		             LHS.city_code AS city_code,
		             RHS.clubid AS clubid,
		             RHS.clubname AS clubname,
		             RHS.clubdesc AS clubdesc,
		             RHS.clublocation AS clublocation
		      FROM student AS LHS
		      CROSS JOIN club AS RHS) AS LHS
		   INNER JOIN member_of_club AS RHS ON (LHS.stuid = RHS.stuid
		                                           AND LHS.clubid = RHS.clubid))
		WHERE (advisor = 1121)
		ORDER BY clubname

	           clubname
	0        Tennis Clu
	1        Tennis Clu
	2       Tennis Club
	3       Tennis Club
	4       Tennis Club
	5  zING4Tennis Club
	6  zING4Tennis Club
Wrong output for fuzzied solution in instance spider/club_1/0035 (181)
	EXPECTED OUTPUT ====

		SELECT avg(t3.age)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t1.clubname = "Tennis Club"

	   avg(t3.age)
	0     18.62069
	ACTUAL OUTPUT ====

		
		SELECT `meanage` AS `avg_t3_age_`
		FROM
		  (SELECT `advisor`,
		          `clubname`,
		          AVG(`age`) AS `meanage`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`clubid` AS `clubid`,
		             `LHS`.`clubname` AS `clubname`,
		             `LHS`.`clubdesc` AS `clubdesc`,
		             `LHS`.`clublocation` AS `clublocation`,
		             `RHS`.`position` AS `position`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`clubid` AS `clubid`,
		                `RHS`.`clubname` AS `clubname`,
		                `RHS`.`clubdesc` AS `clubdesc`,
		                `RHS`.`clublocation` AS `clublocation`
		         FROM `student` AS `LHS`
		         CROSS JOIN `club` AS `RHS`) AS `LHS`
		      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                                  AND `LHS`.`clubid` = `RHS`.`clubid`))
		   GROUP BY `advisor`,
		            `clubname`)
		WHERE (`clubname` = 'Tennis Club')
		ORDER BY avg_t3_age_

	    avg_t3_age_
	0     16.000000
	1     17.000000
	2     17.000000
	3     17.000000
	4     18.000000
	5     18.000000
	6     18.666667
	7     19.285714
	8     19.454545
	9     20.000000
	10    20.000000
	11    20.000000
	12    20.000000
	13    21.000000
Wrong output for fuzzied solution in instance spider/club_1/0007 (184)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t1.clubname = "Tennis Club"

	   count(*)
	0        87
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `advisor`,
		          `lname`,
		          COUNT() AS `n`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`clubid` AS `clubid`,
		             `LHS`.`clubname` AS `clubname`,
		             `LHS`.`clubdesc` AS `clubdesc`,
		             `LHS`.`clublocation` AS `clublocation`,
		             `LHS`.`position` AS `position`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `LHS`.`clubid` AS `clubid`,
		                `LHS`.`clubname` AS `clubname`,
		                `LHS`.`clubdesc` AS `clubdesc`,
		                `LHS`.`clublocation` AS `clublocation`,
		                `RHS`.`position` AS `position`
		         FROM
		           (SELECT `LHS`.`stuid` AS `stuid`,
		                   `LHS`.`lname` AS `lname`,
		                   `LHS`.`fname` AS `fname`,
		                   `LHS`.`age` AS `age`,
		                   `LHS`.`sex` AS `sex`,
		                   `LHS`.`major` AS `major`,
		                   `LHS`.`advisor` AS `advisor`,
		                   `LHS`.`city_code` AS `city_code`,
		                   `RHS`.`clubid` AS `clubid`,
		                   `RHS`.`clubname` AS `clubname`,
		                   `RHS`.`clubdesc` AS `clubdesc`,
		                   `RHS`.`clublocation` AS `clublocation`
		            FROM `student` AS `LHS`
		            CROSS JOIN `club` AS `RHS`) AS `LHS`
		         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                                     AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `club`
		         WHERE (`clubname` != 'Tennis Club')) AS RHS ON (LHS.clubid = RHS.clubid
		                                                         AND LHS.clubname = RHS.clubname
		                                                         AND LHS.clubdesc = RHS.clubdesc
		                                                         AND LHS.clublocation = RHS.clublocation))
		   GROUP BY advisor,
		            lname)
		ORDER BY count___

	   count___
	0         1
	1         2
	2         3
	3         4
	4         5
	5         6
	6         8
Wrong output for fuzzied solution in instance spider/club_1/0034 (185)
	EXPECTED OUTPUT ====

		SELECT avg(t3.age)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t1.clubname = "Hopkins Student Enterprises"

	   avg(t3.age)
	0    18.636364
	ACTUAL OUTPUT ====

		
		SELECT `meanage` AS `avg_t3_age_`
		FROM
		  (SELECT `advisor`,
		          `clubname`,
		          AVG(`age`) AS `meanage`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`clubid` AS `clubid`,
		             `LHS`.`clubname` AS `clubname`,
		             `LHS`.`clubdesc` AS `clubdesc`,
		             `LHS`.`clublocation` AS `clublocation`,
		             `RHS`.`position` AS `position`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`clubid` AS `clubid`,
		                `RHS`.`clubname` AS `clubname`,
		                `RHS`.`clubdesc` AS `clubdesc`,
		                `RHS`.`clublocation` AS `clublocation`
		         FROM `student` AS `LHS`
		         CROSS JOIN `club` AS `RHS`) AS `LHS`
		      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                                  AND `LHS`.`clubid` = `RHS`.`clubid`))
		   GROUP BY `advisor`,
		            `clubname`)
		WHERE (`clubname` = 'Hopkins Student Enterprises')
		ORDER BY avg_t3_age_

	    avg_t3_age_
	0          16.0
	1          17.0
	2          17.0
	3          17.0
	4          18.0
	5          18.0
	6          18.8
	7          20.0
	8          20.0
	9          20.0
	10         20.0
	11         20.0
	12         21.0
	13         21.0
Wrong output for fuzzied solution in instance spider/club_1/0014 (190)
	EXPECTED OUTPUT ====

		SELECT t1.clubname
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t3.major = "600"
		GROUP BY t1.clubname
		ORDER BY count(*) DESC
		LIMIT 1

	      clubname
	0  Tennis Club
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT clubname
		FROM
		  (SELECT LHS.stuid AS stuid,
		          LHS.lname AS lname,
		          LHS.fname AS fname,
		          LHS.age AS age,
		          LHS.sex AS sex,
		          LHS.major AS major,
		          LHS.advisor AS advisor,
		          LHS.city_code AS city_code,
		          LHS.clubid AS clubid,
		          LHS.clubname AS clubname,
		          LHS.clubdesc AS clubdesc,
		          LHS.clublocation AS clublocation,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.stuid AS stuid,
		             LHS.lname AS lname,
		             LHS.fname AS fname,
		             LHS.age AS age,
		             LHS.sex AS sex,
		             LHS.major AS major,
		             LHS.advisor AS advisor,
		             LHS.city_code AS city_code,
		             RHS.clubid AS clubid,
		             RHS.clubname AS clubname,
		             RHS.clubdesc AS clubdesc,
		             RHS.clublocation AS clublocation
		      FROM student AS LHS
		      CROSS JOIN club AS RHS) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT clubid,
		                COUNT() AS n
		         FROM member_of_club
		         GROUP BY clubid)
		      WHERE (n >= 600
		             OR n != 1)) AS RHS ON (LHS.clubid = RHS.clubid))
		ORDER BY clubname

	           clubname
	0        Tennis Clu
	1       Tennis Club
	2  zING4Tennis Club
Wrong output for fuzzied solution in instance spider/club_1/0009 (191)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t3.fname = "Linda"
		  AND t3.lname = "Smith"

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n_distinct` AS `count___`
		FROM
		  (SELECT `city_code`,
		          `clubdesc`,
		          COUNT(DISTINCT `fname`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `LHS`.`clubid` AS `clubid`,
		                `LHS`.`clubname` AS `clubname`,
		                `LHS`.`clubdesc` AS `clubdesc`,
		                `LHS`.`clublocation` AS `clublocation`,
		                `RHS`.`position` AS `position`
		         FROM
		           (SELECT `LHS`.`stuid` AS `stuid`,
		                   `LHS`.`lname` AS `lname`,
		                   `LHS`.`fname` AS `fname`,
		                   `LHS`.`age` AS `age`,
		                   `LHS`.`sex` AS `sex`,
		                   `LHS`.`major` AS `major`,
		                   `LHS`.`advisor` AS `advisor`,
		                   `LHS`.`city_code` AS `city_code`,
		                   `RHS`.`clubid` AS `clubid`,
		                   `RHS`.`clubname` AS `clubname`,
		                   `RHS`.`clubdesc` AS `clubdesc`,
		                   `RHS`.`clublocation` AS `clublocation`
		            FROM `student` AS `LHS`
		            CROSS JOIN `club` AS `RHS`) AS `LHS`
		         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                                     AND `LHS`.`clubid` = `RHS`.`clubid`))
		      WHERE (`fname` != 'Linda'
		             AND `lname` != 'Smith'))
		   GROUP BY city_code,
		            clubdesc)
		ORDER BY count___

	   count___
	0         1
	1         2
	2         3
	3         4
Wrong output for fuzzied solution in instance spider/club_1/0025 (192)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT t2.position)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		WHERE t1.clubname = "Bootup Baltimore"

	   count(distinct t2.position)
	0                           17
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count_distinct_t2_position_`
		FROM
		  (SELECT `clubdesc`,
		          `clubname`,
		          COUNT() AS `n`
		   FROM
		     (SELECT `LHS`.`clubid` AS `clubid`,
		             `LHS`.`clubname` AS `clubname`,
		             `LHS`.`clubdesc` AS `clubdesc`,
		             `LHS`.`clublocation` AS `clublocation`,
		             `RHS`.`stuid` AS `stuid`,
		             `RHS`.`position` AS `position`
		      FROM `club` AS `LHS`
		      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`clubid` = `RHS`.`clubid`))
		   GROUP BY `clubdesc`,
		            `clubname`)
		WHERE (`clubname` = 'Bootup Baltimore')
		ORDER BY count_distinct_t2_position_

	   count_distinct_t2_position_
	0                           33
Wrong output for fuzzied solution in instance spider/club_1/0029 (194)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t1.clubname
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t3.city_code = "HOU"

	           clubname
	0        Tennis Clu
	1       Tennis Club
	2        ennis Club
	3  zING4Tennis Club
	ACTUAL OUTPUT ====

		
		SELECT `clubname`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`clubid` AS `clubid`,
		          `LHS`.`clubname` AS `clubname`,
		          `LHS`.`clubdesc` AS `clubdesc`,
		          `LHS`.`clublocation` AS `clublocation`,
		          `RHS`.`position` AS `position`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `RHS`.`clubid` AS `clubid`,
		             `RHS`.`clubname` AS `clubname`,
		             `RHS`.`clubdesc` AS `clubdesc`,
		             `RHS`.`clublocation` AS `clublocation`
		      FROM `student` AS `LHS`
		      CROSS JOIN `club` AS `RHS`) AS `LHS`
		   INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                               AND `LHS`.`clubid` = `RHS`.`clubid`))
		WHERE (`city_code` = 'HOU')
		ORDER BY clubname

	            clubname
	0         Tennis Clu
	1         Tennis Clu
	2         Tennis Clu
	3         Tennis Clu
	4        Tennis Club
	5        Tennis Club
	6        Tennis Club
	7        Tennis Club
	8        Tennis Club
	9        Tennis Club
	10       Tennis Club
	11       Tennis Club
	12       Tennis Club
	13       Tennis Club
	14       Tennis Club
	15       Tennis Club
	16       Tennis Club
	17        ennis Club
	18        ennis Club
	19        ennis Club
	20        ennis Club
	21        ennis Club
	22  zING4Tennis Club
	23  zING4Tennis Club
Wrong output for fuzzied solution in instance spider/club_1/0010 (195)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t3.fname = "Tracy"
		  AND t3.lname = "Kim"

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n_distinct` AS `count___`
		FROM
		  (SELECT `LHS`.`clubid` AS `clubid`,
		          `LHS`.`clubname` AS `clubname`,
		          `LHS`.`clubdesc` AS `clubdesc`,
		          `LHS`.`clublocation` AS `clublocation`,
		          `LHS`.`stuid` AS `stuid`,
		          `LHS`.`position` AS `position`,
		          `RHS`.`n_distinct` AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`clubid` AS `clubid`,
		             `LHS`.`clubname` AS `clubname`,
		             `LHS`.`clubdesc` AS `clubdesc`,
		             `LHS`.`clublocation` AS `clublocation`,
		             `RHS`.`stuid` AS `stuid`,
		             `RHS`.`position` AS `position`
		      FROM `club` AS `LHS`
		      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`
		   CROSS JOIN
		     (SELECT COUNT(DISTINCT `lname`) AS `n_distinct`
		      FROM `student`
		      WHERE (`fname` != 'Tracy'
		             AND `lname` = 'Kim')) AS RHS)
		ORDER BY count___

	   count___
	0         1
Wrong output for fuzzied solution in instance spider/club_1/0028 (196)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t1.clubname
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t3.city_code = "BAL"

	           clubname
	0        Tennis Clu
	1       Tennis Club
	2        ennis Club
	3  zING4Tennis Club
	ACTUAL OUTPUT ====

		
		SELECT `clubname`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`clubid` AS `clubid`,
		          `LHS`.`clubname` AS `clubname`,
		          `LHS`.`clubdesc` AS `clubdesc`,
		          `LHS`.`clublocation` AS `clublocation`,
		          `RHS`.`position` AS `position`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `RHS`.`clubid` AS `clubid`,
		             `RHS`.`clubname` AS `clubname`,
		             `RHS`.`clubdesc` AS `clubdesc`,
		             `RHS`.`clublocation` AS `clublocation`
		      FROM `student` AS `LHS`
		      CROSS JOIN `club` AS `RHS`) AS `LHS`
		   INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                               AND `LHS`.`clubid` = `RHS`.`clubid`))
		WHERE (`city_code` = 'BAL')
		ORDER BY clubname

	            clubname
	0         Tennis Clu
	1         Tennis Clu
	2         Tennis Clu
	3         Tennis Clu
	4        Tennis Club
	5        Tennis Club
	6        Tennis Club
	7        Tennis Club
	8        Tennis Club
	9        Tennis Club
	10       Tennis Club
	11       Tennis Club
	12       Tennis Club
	13       Tennis Club
	14       Tennis Club
	15       Tennis Club
	16       Tennis Club
	17        ennis Club
	18        ennis Club
	19        ennis Club
	20        ennis Club
	21        ennis Club
	22  zING4Tennis Club
	23  zING4Tennis Club
Wrong output for fuzzied solution in instance spider/decoration_competition/0006 (201)
	EXPECTED OUTPUT ====

		SELECT Country
		FROM member
		GROUP BY Country
		ORDER BY COUNT(*) DESC
		LIMIT 1

	         country
	0  United States
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT country
		FROM
		  (SELECT college_id,
		          country,
		          COUNT() AS n
		   FROM
		     (SELECT member_id,
		             name,
		             country,
		             member_id AS college_id,
		             member_id_other,
		             name_other
		      FROM
		        (SELECT LHS.member_id AS member_id,
		                LHS.name AS name,
		                LHS.country AS country,
		                LHS.college_id AS college_id,
		                RHS.member_id AS member_id_other,
		                RHS.name AS name_other
		         FROM member AS LHS
		         INNER JOIN member AS RHS ON (LHS.member_id = RHS.college_id
		                                         AND LHS.country = RHS.country)))
		   GROUP BY college_id,
		            country)
		ORDER BY country

	Empty DataFrame
	Columns: [country]
	Index: []
Wrong output for fuzzied solution in instance spider/decoration_competition/0004 (202)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM member
		WHERE Country = "United States"
		  OR Country = "Canada"

	             name
	0  Homero Blancas
	1     Lee Trevino
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM `member`
		WHERE (`country` != 'United States'
		       OR `country` != 'Canada')
		ORDER BY name

	               name
	0  2y(nXLee Trevino
	1     Homero Blanca
	2    Homero Blancas
	3    Homero Blancas
	4    Homero Blancas
	5       Lee Trevino
	6       Lee Trevino
No solution for instance spider/decoration_competition/0007 (206)
Error while executing solution for instance spider/decoration_competition/0009 (209)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/decoration_competition/0009 (209)
No solution for instance spider/swimming/0027 (216)
No solution for instance spider/swimming/0022 (217)
Wrong output for fuzzied solution in instance spider/swimming/0030 (218)
	EXPECTED OUTPUT ====

		SELECT avg(capacity)
		FROM stadium
		WHERE opening_year = 2005

	   avg(capacity)
	0        65626.0
	ACTUAL OUTPUT ====

		
		SELECT meancapacity AS avg_capacity_
		FROM
		  (SELECT opening_year,
		          AVG(capacity) AS meancapacity
		   FROM
		     (SELECT *
		      FROM stadium
		      WHERE (opening_year = 2005
		             OR opening_year > capacity))
		   GROUP BY opening_year)
		ORDER BY avg_capacity_

	   avg_capacity_
	0        56250.0
	1        65626.0
Error while executing solution for instance spider/swimming/0013 (219)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT `n_distinct` AS `count___`
FROM
  (SELECT `id`,
          `name`,
          `capacity`,
          `city`,
          `country`,
          `opening_year`,
          COUNT(DISTINCT `country`) OVER () AS `n_distinct`
   FROM `stadium`)
WHERE (`country` != 'Russia')
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
Wrong output for fuzzied solution in instance spider/swimming/0026 (223)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM swimmer AS t1
		JOIN record AS t2 ON t1.id = t2.swimmer_id
		WHERE RESULT = 'Win' INTERSECT
		  SELECT t1.name
		  FROM swimmer AS t1
		  JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Loss'

	                 name
	0       Grant Hackett
	1  Grant Hackettw9Rpc
	2      Sergiy Fesenko
	3  wkURsRyan Cochrane
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `name`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`nationality` AS `nationality`,
		          `LHS`.`meter_100` AS `meter_100`,
		          `LHS`.`meter_200` AS `meter_200`,
		          `LHS`.`meter_300` AS `meter_300`,
		          `LHS`.`meter_400` AS `meter_400`,
		          `LHS`.`meter_500` AS `meter_500`,
		          `LHS`.`meter_600` AS `meter_600`,
		          `LHS`.`meter_700` AS `meter_700`,
		          `LHS`.`time` AS `time`,
		          `RHS`.`id` AS `id_other`,
		          `RHS`.`result` AS `result`,
		          `RHS`.`swimmer_id` AS `swimmer_id`
		   FROM `swimmer` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `record`
		      WHERE (`result` != 'Win'
		             OR `result` = 'Loss')) AS RHS ON (LHS.id = RHS.event_id))
		ORDER BY name

	                  name
	0         Grant Hacket
	1   Grant Hackettw9Rpc
	2        Ryan Cochrane
	3       Sergiy Fesenko
	4    Sébastien Rouault
	5  Z6gm7Sergiy Fesenko
Error while executing solution for instance spider/swimming/0015 (224)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT nationality) OVER () AS count_distinct_nationality_
FROM swimmer
ORDER BY count_distinct_nationality_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/swimming/0005 (225)
	EXPECTED OUTPUT ====

		SELECT name
		FROM stadium
		ORDER BY capacity DESC
		LIMIT 1

	                name
	0  Xj4NPNou Mestalla
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM stadium
		      ORDER BY id)
		   LIMIT 1)

	                  name
	0  w()Arena Baltika0gt
Wrong output for fuzzied solution in instance spider/swimming/0016 (226)
	EXPECTED OUTPUT ====

		SELECT nationality,
		       count(*)
		FROM swimmer
		GROUP BY nationality
		HAVING count(*) > 1

	  nationality  count(*)
	0   Australia         3
	ACTUAL OUTPUT ====

		
		SELECT nationality,
		       id AS count___
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.nationality AS nationality,
		          LHS.meter_100 AS meter_100,
		          LHS.meter_200 AS meter_200,
		          LHS.meter_300 AS meter_300,
		          LHS.meter_400 AS meter_400,
		          LHS.meter_500 AS meter_500,
		          LHS.meter_600 AS meter_600,
		          LHS.meter_700 AS meter_700,
		          LHS.time AS TIME
		   FROM swimmer AS LHS
		   INNER JOIN
		     (SELECT meter_100,
		             COUNT() AS n
		      FROM swimmer
		      GROUP BY meter_100) AS RHS ON (LHS.id = RHS.n
		                                     AND LHS.meter_100 = RHS.meter_100))
		ORDER BY nationality

	      nationality  count___
	0       Australia         1
	1  AustraliawHVqK         4
No solution for instance spider/swimming/0019 (229)
Wrong output for fuzzied solution in instance spider/swimming/0007 (230)
	EXPECTED OUTPUT ====

		SELECT country
		FROM stadium
		GROUP BY country
		ORDER BY count(*) DESC
		LIMIT 1

	   country
	0  England
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.capacity AS capacity,
		          LHS.city AS city,
		          LHS.country AS country,
		          LHS.opening_year AS opening_year
		   FROM stadium AS LHS
		   INNER JOIN
		     (SELECT COUNT() AS n
		      FROM stadium) AS RHS ON (LHS.id = RHS.n))
		ORDER BY country

	Empty DataFrame
	Columns: [country]
	Index: []
No solution for instance spider/swimming/0024 (231)
No solution for instance spider/swimming/0021 (232)
Wrong output for fuzzied solution in instance spider/swimming/0009 (236)
	EXPECTED OUTPUT ====

		SELECT country
		FROM stadium
		WHERE capacity > 60000 INTERSECT
		  SELECT country
		  FROM stadium WHERE capacity < 50000

	   country
	0  England
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT country
		FROM stadium
		WHERE (capacity = 60000
		       OR capacity < 50000)
		ORDER BY country

	   country
	0   Englan
	1  England
	2  Hungary
	3     Spai
	4    Spain
No solution for instance spider/swimming/0025 (237)
Wrong output for fuzzied solution in instance spider/swimming/0010 (240)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT city)
		FROM stadium
		WHERE opening_year < 2006

	   count(distinct city)
	0                     7
	ACTUAL OUTPUT ====

		
		SELECT n AS count_distinct_city_
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM stadium
		      WHERE (opening_year < 2006)))
		ORDER BY count_distinct_city_

	   count_distinct_city_
	0                     8
No solution for instance spider/swimming/0028 (241)
Error while executing solution for instance spider/perpetrator/0008 (244)

(sqlite3.OperationalError) no such column: LHS.home_town
[SQL: 
SELECT `name`
FROM
  (SELECT `LHS`.`people_id` AS `people_id`,
          `LHS`.`name` AS `name`,
          `LHS`.`height` AS `height`,
          `LHS`.`weight` AS `weight`,
          `LHS`.`home_town` AS `home_town`,
          `RHS`.`perpetrator_id` AS `perpetrator_id`,
          `RHS`.`date` AS `date`,
          `RHS`.`year` AS `year`,
          `RHS`.`location` AS `location`,
          `RHS`.`country` AS `country`,
          `RHS`.`killed` AS `killed`,
          `RHS`.`injured` AS `injured`
   FROM `people` AS `LHS`
   INNER JOIN
     (SELECT *
      FROM `perpetrator`
      WHERE (`country` != 'China')) AS RHS ON (LHS.people_id = RHS.people_id))
ORDER BY name]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/perpetrator/0012 (249)

(sqlite3.OperationalError) no such column: RHS.home_town
[SQL: 
SELECT height
FROM
  (SELECT LHS.perpetrator_id AS perpetrator_id,
          LHS.people_id AS people_id,
          LHS.date AS date,
          LHS.year AS YEAR,
          LHS.location AS LOCATION,
          LHS.country AS country,
          LHS.killed AS killed,
          LHS.injured AS injured,
          RHS.name AS name,
          RHS.height AS height,
          RHS.weight AS weight,
          RHS.home_town AS home_town
   FROM perpetrator AS LHS
   INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))
ORDER BY height]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/perpetrator/0015 (250)
	EXPECTED OUTPUT ====

		SELECT Country,
		       COUNT(*)
		FROM perpetrator
		GROUP BY Country
		HAVING COUNT(*) >= 2

	  country  count(*)
	0    Chin         2
	1    hina         2
	2   China        25
	ACTUAL OUTPUT ====

		
		SELECT country,
		       n AS count___
		FROM
		  (SELECT country,
		          COUNT() AS n
		   FROM perpetrator
		   GROUP BY country)
		WHERE (n = 2)
		ORDER BY country

	  country  count___
	0    Chin         2
	1    hina         2
Wrong output for fuzzied solution in instance spider/perpetrator/0005 (251)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM perpetrator
		ORDER BY Killed DESC
		LIMIT 1

	     location
	0  jxTKaiowx0
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM perpetrator
		      ORDER BY perpetrator_id)
		   LIMIT 1)

	   location
	0  Nainital
Error while executing solution for instance spider/perpetrator/0016 (252)

(sqlite3.OperationalError) no such column: RHS.home_town
[SQL: 
SELECT name
FROM
  (SELECT LHS.perpetrator_id AS perpetrator_id,
          LHS.people_id AS people_id,
          LHS.date AS date,
          LHS.year AS YEAR,
          LHS.location AS LOCATION,
          LHS.country AS country,
          LHS.killed AS killed,
          LHS.injured AS injured,
          RHS.name AS name,
          RHS.height AS height,
          RHS.weight AS weight,
          RHS.home_town AS home_town
   FROM perpetrator AS LHS
   INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))
ORDER BY name]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/perpetrator/0018 (253)
	EXPECTED OUTPUT ====

		SELECT Country
		FROM perpetrator
		WHERE Injured > 50 INTERSECT
		  SELECT Country
		  FROM perpetrator WHERE Injured < 20

	Empty DataFrame
	Columns: [country]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM perpetrator
		WHERE (injured >= 50
		       AND injured != 20)
		ORDER BY country

	       country
	0  A3KChinaF9)
Error while executing solution for instance spider/perpetrator/0020 (254)

(sqlite3.OperationalError) no such column: LHS.home_town
[SQL: 
SELECT date
FROM
  (SELECT LHS.people_id AS people_id,
          LHS.name AS name,
          LHS.height AS height,
          LHS.weight AS weight,
          LHS.home_town AS home_town,
          RHS.perpetrator_id AS perpetrator_id,
          RHS.people_id AS people_id_other,
          RHS.date AS date,
          RHS.year AS YEAR,
          RHS.location AS LOCATION,
          RHS.country AS country,
          RHS.killed AS killed
   FROM people AS LHS
   INNER JOIN perpetrator AS RHS ON (LHS.people_id = RHS.injured))
ORDER BY date]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/perpetrator/0007 (256)

(sqlite3.OperationalError) no such column: RHS.home_town
[SQL: 
SELECT name
FROM
  (SELECT LHS.perpetrator_id AS perpetrator_id,
          LHS.people_id AS people_id,
          LHS.date AS date,
          LHS.year AS YEAR,
          LHS.location AS LOCATION,
          LHS.country AS country,
          LHS.killed AS killed,
          LHS.injured AS injured,
          RHS.name AS name,
          RHS.height AS height,
          RHS.weight AS weight,
          RHS.home_town AS home_town
   FROM perpetrator AS LHS
   INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))
ORDER BY name]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/perpetrator/0014 (259)
	EXPECTED OUTPUT ====

		SELECT Country,
		       COUNT(*)
		FROM perpetrator
		GROUP BY Country
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  country  count(*)
	0   Japan         2
	ACTUAL OUTPUT ====

		
		SELECT country,
		       perpetrator_id AS count___
		FROM
		  (SELECT LHS.perpetrator_id AS perpetrator_id,
		          LHS.people_id AS people_id,
		          LHS.date AS date,
		          LHS.year AS YEAR,
		          LHS.location AS LOCATION,
		          LHS.country AS country,
		          LHS.killed AS killed,
		          LHS.injured AS injured,
		          RHS.date AS date_other,
		          RHS.n AS n
		   FROM perpetrator AS LHS
		   INNER JOIN
		     (SELECT date, injured,
		                   COUNT() AS n
		      FROM perpetrator
		      GROUP BY date, injured) AS RHS ON (LHS.people_id = RHS.injured))
		ORDER BY country

	Empty DataFrame
	Columns: [country, count___]
	Index: []
Error while executing solution for instance spider/perpetrator/0009 (260)

(sqlite3.OperationalError) no such column: LHS.home_town
[SQL: 
SELECT name
FROM
  (SELECT LHS.people_id AS people_id,
          LHS.name AS name,
          LHS.height AS height,
          LHS.weight AS weight,
          LHS.home_town AS home_town,
          RHS.perpetrator_id AS perpetrator_id,
          RHS.people_id AS people_id_other,
          RHS.date AS date,
          RHS.year AS YEAR,
          RHS.location AS LOCATION,
          RHS.country AS country,
          RHS.killed AS killed
   FROM people AS LHS
   INNER JOIN perpetrator AS RHS ON (LHS.people_id = RHS.injured))
ORDER BY name]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/perpetrator/0011 (261)

(sqlite3.OperationalError) no such column: LHS.home_town
[SQL: 
SELECT `name`
FROM
  (SELECT `LHS`.`people_id` AS `people_id`,
          `LHS`.`name` AS `name`,
          `LHS`.`height` AS `height`,
          `LHS`.`weight` AS `weight`,
          `LHS`.`home_town` AS `home_town`,
          `RHS`.`perpetrator_id` AS `perpetrator_id`,
          `RHS`.`date` AS `date`,
          `RHS`.`year` AS `year`,
          `RHS`.`location` AS `location`,
          `RHS`.`country` AS `country`,
          `RHS`.`killed` AS `killed`,
          `RHS`.`injured` AS `injured`
   FROM `people` AS `LHS`
   INNER JOIN `perpetrator` AS `RHS` ON (`LHS`.`people_id` = `RHS`.`people_id`))
WHERE (`country` = 'China'
       OR `country` = 'Japan')
ORDER BY name]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/perpetrator/0010 (262)
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0027 (268)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Draft_Copies
		WHERE document_id = 2;

	   count(*)
	0        62
	ACTUAL OUTPUT ====

		
		SELECT draft_number AS count___
		FROM
		  (SELECT document_id,
		          draft_number,
		          COUNT() AS n
		   FROM draft_copies
		   GROUP BY document_id,
		            draft_number)
		WHERE (document_id < 2
		       AND n != 2)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0030 (270)
	EXPECTED OUTPUT ====

		SELECT Employees.employee_name
		FROM Employees
		JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id
		WHERE Circulation_History.document_id = 1;

	Empty DataFrame
	Columns: [employee_name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT employee_name
		FROM
		  (SELECT LHS.document_id AS document_id,
		          LHS.draft_number AS draft_number,
		          LHS.copy_number AS copy_number,
		          LHS.employee_id AS employee_id,
		          RHS.employee_id AS employee_id_other,
		          RHS.role_code AS role_code,
		          RHS.employee_name AS employee_name,
		          RHS.other_details AS other_details,
		          RHS.document_id AS document_id_other,
		          RHS.copy_number AS copy_number_other,
		          RHS.employee_id_other AS employee_id_other_other,
		          RHS.draft_number AS draft_number_other
		   FROM circulation_history AS LHS
		   CROSS JOIN
		     (SELECT employee_id,
		             role_code,
		             employee_name,
		             other_details,
		             document_id,
		             copy_number,
		             employee_id_other,
		             employee_id AS draft_number
		      FROM
		        (SELECT LHS.employee_id AS employee_id,
		                LHS.role_code AS role_code,
		                LHS.employee_name AS employee_name,
		                LHS.other_details AS other_details,
		                RHS.document_id AS document_id,
		                RHS.copy_number AS copy_number,
		                RHS.employee_id AS employee_id_other
		         FROM employees AS LHS
		         INNER JOIN circulation_history AS RHS ON (LHS.employee_id = RHS.draft_number))) AS RHS)
		WHERE (document_id < document_id_other)
		ORDER BY employee_name

	        employee_name
	0        ))wErlingI 8
	1        ))wErlingI 8
	2        ))wErlingI 8
	3        ))wErlingI 8
	4        ))wErlingI 8
	...               ...
	1877654  ue1ErlingCG3
	1877655  ue1ErlingCG3
	1877656  ue1ErlingCG3
	1877657  ue1ErlingCG3
	1877658  ue1ErlingCG3
	
	[1877659 rows x 1 columns]
No solution for instance spider/cre_Doc_Control_Systems/0013 (271)
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0015 (276)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Documents
		WHERE document_status_code = "done";

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `documents`
		WHERE (`document_status_code` = 'done')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0032 (279)
	EXPECTED OUTPUT ====

		SELECT Employees.employee_name,
		       count(*)
		FROM Employees
		JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id
		GROUP BY Circulation_History.document_id,
		         Circulation_History.draft_number,
		         Circulation_History.copy_number
		ORDER BY count(*) DESC
		LIMIT 1;

	  employee_name  count(*)
	0   D8u1YErling         2
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT employee_name,
		                employee_id AS count___
		FROM
		  (SELECT LHS.employee_id AS employee_id,
		          LHS.role_code AS role_code,
		          LHS.employee_name AS employee_name,
		          LHS.other_details AS other_details,
		          RHS.document_id AS document_id,
		          RHS.employee_id AS employee_id_other
		   FROM employees AS LHS
		   INNER JOIN
		     (SELECT document_id,
		             employee_id,
		             COUNT() AS n
		      FROM circulation_history
		      GROUP BY document_id,
		               employee_id) AS RHS ON (LHS.employee_id = RHS.n))
		ORDER BY employee_name

	  employee_name  count___
	0  JONKenyonReM         1
	1   D8u1YErling         2
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0018 (280)
	EXPECTED OUTPUT ====

		SELECT Ref_Shipping_Agents.shipping_agent_name
		FROM Ref_Shipping_Agents
		JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code
		WHERE Documents.document_id = 2;

	  shipping_agent_name
	0                Ship
	ACTUAL OUTPUT ====

		
		SELECT shipping_agent_name
		FROM
		  (SELECT document_id,
		          document_status_code,
		          document_type_code,
		          shipping_agent_code,
		          receipt_date,
		          receipt_number,
		          other_details,
		          shipping_agent_name,
		          other_details AS shipping_agent_description
		   FROM
		     (SELECT LHS.document_id AS document_id,
		             LHS.document_status_code AS document_status_code,
		             LHS.document_type_code AS document_type_code,
		             LHS.shipping_agent_code AS shipping_agent_code,
		             LHS.receipt_date AS receipt_date,
		             LHS.receipt_number AS receipt_number,
		             LHS.other_details AS other_details,
		             RHS.shipping_agent_name AS shipping_agent_name
		      FROM documents AS LHS
		      INNER JOIN ref_shipping_agents AS RHS ON (LHS.shipping_agent_code = RHS.shipping_agent_code
		                                                   AND LHS.other_details = RHS.shipping_agent_description)))
		WHERE (document_id != 2)
		ORDER BY shipping_agent_name

	  shipping_agent_name
	0              Airlin
No solution for instance spider/cre_Doc_Control_Systems/0020 (281)
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0019 (282)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Ref_Shipping_Agents
		JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code
		WHERE Ref_Shipping_Agents.shipping_agent_name = "USPS";

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `shipping_agent_name`,
		          COUNT() AS `n`
		   FROM
		     (SELECT `LHS`.`document_id` AS `document_id`,
		             `LHS`.`document_status_code` AS `document_status_code`,
		             `LHS`.`document_type_code` AS `document_type_code`,
		             `LHS`.`shipping_agent_code` AS `shipping_agent_code`,
		             `LHS`.`receipt_date` AS `receipt_date`,
		             `LHS`.`receipt_number` AS `receipt_number`,
		             `LHS`.`other_details` AS `other_details`,
		             `RHS`.`shipping_agent_name` AS `shipping_agent_name`,
		             `RHS`.`shipping_agent_description` AS `shipping_agent_description`
		      FROM `documents` AS `LHS`
		      INNER JOIN `ref_shipping_agents` AS `RHS` ON (`LHS`.`shipping_agent_code` = `RHS`.`shipping_agent_code`))
		   GROUP BY `shipping_agent_name`)
		WHERE (`shipping_agent_name` = 'USPS')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0029 (292)
	EXPECTED OUTPUT ====

		SELECT document_id,
		       count(*)
		FROM Draft_Copies
		GROUP BY document_id
		HAVING count(*) > 1;

	    document_id  count(*)
	0            14         2
	1            15         3
	2            21         4
	3             2         5
	4            23         5
	5            20         7
	6             5         8
	7            13         9
	8            19         9
	9            24         9
	10           25         9
	11            3        10
	ACTUAL OUTPUT ====

		
		SELECT document_id,
		       document_id_other AS count___
		FROM
		  (SELECT document_id,
		          draft_number,
		          draft_number AS n,
		          document_id_other
		   FROM
		     (SELECT LHS.document_id AS document_id,
		             LHS.draft_number AS draft_number,
		             LHS.n AS n,
		             RHS.document_id AS document_id_other
		      FROM
		        (SELECT document_id,
		                draft_number,
		                COUNT() AS n
		         FROM draft_copies
		         GROUP BY document_id,
		                  draft_number) AS LHS
		      INNER JOIN
		        (SELECT document_id,
		                draft_number,
		                COUNT() AS n
		         FROM draft_copies
		         GROUP BY document_id,
		                  draft_number) AS RHS ON (LHS.draft_number = RHS.n
		                                           AND LHS.n = RHS.draft_number)))
		ORDER BY document_id

	    document_id  count___
	0             2         2
	1             3         2
	2            20         2
	3             2         3
	4             3         3
	5            20         3
	6            25        15
	7            25        19
	8             2        20
	9             3        20
	10           20        20
	11           15        25
	12           19        25
Error while executing solution for instance spider/cre_Doc_Control_Systems/0028 (294)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT document_id,
       document_id_other AS count_copy_number_
FROM
  (SELECT LHS.document_id AS document_id,
          LHS.draft_number AS draft_number,
          LHS.copy_number AS copy_number,
          LHS.n_distinct AS n_distinct,
          RHS.document_id AS document_id_other,
          RHS.draft_number AS draft_number_other,
          RHS.copy_number AS copy_number_other
   FROM
     (SELECT document_id,
             draft_number,
             copy_number,
             COUNT(DISTINCT copy_number) OVER () AS n_distinct
      FROM draft_copies) AS LHS
   CROSS JOIN draft_copies AS RHS)
WHERE (copy_number < n_distinct
       AND copy_number >= copy_number_other)
ORDER BY document_id]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0031 (295)
	EXPECTED OUTPUT ====

		SELECT employee_name
		FROM Employees
		EXCEPT
		SELECT Employees.employee_name
		FROM Employees
		JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id

	Empty DataFrame
	Columns: [employee_name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT employee_name
		FROM
		  (SELECT *
		   FROM employees AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM circulation_history AS RHS
		        WHERE (LHS.employee_id = RHS.employee_id) ))
		ORDER BY employee_name

	  employee_name
	0          Koby
Wrong output for fuzzied solution in instance spider/pilot_record/0008 (297)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM pilot
		GROUP BY Nationality
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  nationality
	0      igeria
	ACTUAL OUTPUT ====

		
		SELECT nationality
		FROM
		  (SELECT LHS.pilot_id AS pilot_id,
		          LHS.pilot_name AS pilot_name,
		          LHS.rank AS rank,
		          LHS.age AS age,
		          LHS.nationality AS nationality,
		          LHS.position AS POSITION,
		          LHS.join_year AS join_year,
		          LHS.team AS team
		   FROM pilot AS LHS
		   INNER JOIN
		     (SELECT age,
		             COUNT() AS n
		      FROM pilot
		      GROUP BY age) AS RHS ON (LHS.pilot_id = RHS.n
		                               AND LHS.age = RHS.age))
		ORDER BY nationality

	     nationality
	0  United Kindom
Wrong output for fuzzied solution in instance spider/pilot_record/0013 (299)
	EXPECTED OUTPUT ====

		SELECT T2.Pilot_name,
		       COUNT(*)
		FROM pilot_record AS T1
		JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID
		GROUP BY T2.Pilot_name

	             pilot_name  count(*)
	0        Dan O'Sullivan         6
	1       Hakeem Olajuwon         8
	2  cbpwgJermaine O'Neal        10
	3        ermaine O'Neal        11
	4         an O'Sullivan        12
	5  Jermaine O'NealYYodv        13
	6       Jermaine O'Neal        28
	ACTUAL OUTPUT ====

		
		SELECT pilot_name,
		       n AS count___
		FROM
		  (SELECT LHS.pilot_id AS pilot_id,
		          LHS.pilot_name AS pilot_name,
		          LHS.rank AS rank,
		          LHS.age AS age,
		          LHS.nationality AS nationality,
		          LHS.position AS POSITION,
		          LHS.join_year AS join_year,
		          LHS.team AS team,
		          RHS.n AS n
		   FROM pilot AS LHS
		   INNER JOIN
		     (SELECT pilot_id,
		             COUNT() AS n
		      FROM pilot_record
		      GROUP BY pilot_id) AS RHS ON (LHS.pilot_id = RHS.pilot_id))
		ORDER BY pilot_name

	             pilot_name  count___
	0        Dan O'Sullivan         6
	1       Jermaine O'Neal         6
	2       Jermaine O'Neal         7
	3       Hakeem Olajuwon         8
	4  cbpwgJermaine O'Neal        10
	5        ermaine O'Neal        11
	6         an O'Sullivan        12
	7  Jermaine O'NealYYodv        13
	8       Jermaine O'Neal        15
Wrong output for fuzzied solution in instance spider/pilot_record/0012 (302)
	EXPECTED OUTPUT ====

		SELECT T2.Fleet_Series
		FROM pilot_record AS T1
		JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID
		JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID
		WHERE T3.Age < 34

	          fleet_series
	0          )qUlErUlcPT
	1         310-329 (20)
	2         310-329 (20)
	3         310-329 (20)
	4         310-329 (20)
	5         310-329 (20)
	6         310-329 (20)
	7         310-329 (20)
	8         310-329 (20)
	9    444-464 (21)6mnMG
	10   444-464 (21)U1C6F
	11   444-464 (21)U1C6F
	12         468-473 (6)
	13         468-473 (6)
	14         468-473 (6)
	15         468-473 (6)
	16         468-473 (6)
	17         468-473 (6)
	18         468-473 (6)
	19         468-473 (6)
	20         468-473 (6)
	21         468-473 (6)
	22          68-473 (6)
	23          68-473 (6)
	24          68-473 (6)
	25         9YgnA33OQA4
	26         9YgnA33OQA4
	27        DIRbtz6XYSGp
	28        Gn1OuBqaG4Hm
	29        Gn1OuBqaG4Hm
	30        Gn1OuBqaG4Hm
	31        Gn1OuBqaG4Hm
	32  I0uIEaHoCBL(xUyM2i
	33    N7E291wdWis37(ur
	34    N7E291wdWis37(ur
	35   PtX468-473 (6)F((
	36   RcTyo444-464 (21)
	37        iPxtihHAWk12
	38        iPxtihHAWk12
	39          ob72xUmG1F
	40        qqi(sGJ(Tg83
	41   rDEST444-464 (21)
	42   rDEST444-464 (21)
	43   rDEST444-464 (21)
	ACTUAL OUTPUT ====

		
		SELECT fleet_series
		FROM
		  (SELECT LHS.aircraft_id AS aircraft_id,
		          LHS.order_year AS order_year,
		          LHS.manufacturer AS manufacturer,
		          LHS.model AS model,
		          LHS.fleet_series AS fleet_series,
		          LHS.powertrain AS powertrain,
		          LHS.fuel_propulsion AS fuel_propulsion,
		          LHS.pilot_id AS pilot_id,
		          LHS.pilot_name AS pilot_name,
		          LHS.rank AS rank,
		          LHS.age AS age,
		          LHS.nationality AS nationality,
		          LHS.position AS POSITION,
		          LHS.join_year AS join_year,
		          LHS.team AS team,
		          LHS.record_id AS record_id,
		          LHS.date AS date
		   FROM
		     (SELECT LHS.aircraft_id AS aircraft_id,
		             LHS.order_year AS order_year,
		             LHS.manufacturer AS manufacturer,
		             LHS.model AS model,
		             LHS.fleet_series AS fleet_series,
		             LHS.powertrain AS powertrain,
		             LHS.fuel_propulsion AS fuel_propulsion,
		             LHS.pilot_id AS pilot_id,
		             LHS.pilot_name AS pilot_name,
		             LHS.rank AS rank,
		             LHS.age AS age,
		             LHS.nationality AS nationality,
		             LHS.position AS POSITION,
		             LHS.join_year AS join_year,
		             LHS.team AS team,
		             RHS.record_id AS record_id,
		             RHS.date AS date
		      FROM
		        (SELECT LHS.aircraft_id AS aircraft_id,
		                LHS.order_year AS order_year,
		                LHS.manufacturer AS manufacturer,
		                LHS.model AS model,
		                LHS.fleet_series AS fleet_series,
		                LHS.powertrain AS powertrain,
		                LHS.fuel_propulsion AS fuel_propulsion,
		                RHS.pilot_id AS pilot_id,
		                RHS.pilot_name AS pilot_name,
		                RHS.rank AS rank,
		                RHS.age AS age,
		                RHS.nationality AS nationality,
		                RHS.position AS POSITION,
		                RHS.join_year AS join_year,
		                RHS.team AS team
		         FROM aircraft AS LHS
		         CROSS JOIN pilot AS RHS) AS LHS
		      INNER JOIN pilot_record AS RHS ON (LHS.aircraft_id = RHS.aircraft_id
		                                            AND LHS.pilot_id = RHS.pilot_id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM pilot
		      WHERE (age <= 34)) AS RHS ON (LHS.pilot_id = RHS.pilot_id
		                                    AND LHS.pilot_name = RHS.pilot_name
		                                    AND LHS.rank = RHS.rank
		                                    AND LHS.age = RHS.age
		                                    AND LHS.nationality = RHS.nationality
		                                    AND LHS.position = RHS.position
		                                    AND LHS.join_year = RHS.join_year
		                                    AND LHS.team = RHS.team))
		ORDER BY fleet_series

	         fleet_series
	0         )qUlErUlcPT
	1         )qUlErUlcPT
	2   2bz)9444-464 (21)
	3        310-329 (20)
	4        310-329 (20)
	..                ...
	62       qqi(sGJ(Tg83
	63       qqi(sGJ(Tg83
	64  rDEST444-464 (21)
	65  rDEST444-464 (21)
	66  rDEST444-464 (21)
	
	[67 rows x 1 columns]
No solution for instance spider/pilot_record/0014 (307)
Wrong output for fuzzied solution in instance spider/pilot_record/0009 (308)
	EXPECTED OUTPUT ====

		SELECT POSITION
		FROM pilot
		WHERE Join_Year < 2000 INTERSECT
		  SELECT POSITION
		  FROM pilot WHERE Join_Year > 2005

	Empty DataFrame
	Columns: [position]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT POSITION
		FROM pilot
		WHERE (join_year <= 2000
		       AND join_year < 2005)
		ORDER BY POSITION

	       position
	0   Center Team
	1   Center Team
	2  Forward Team
	3  Forward Team
	4    enter Team
No solution for instance spider/local_govt_in_alabama/0008 (312)
Wrong output for fuzzied solution in instance spider/local_govt_in_alabama/0013 (314)
	EXPECTED OUTPUT ====

		SELECT T1.service_type_code
		FROM services AS T1
		JOIN EVENTS AS T2 ON T1.service_id = T2.service_id
		WHERE T2.event_details = 'Success' INTERSECT
		  SELECT T1.service_type_code
		  FROM services AS T1
		  JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Fail'

	Empty DataFrame
	Columns: [service_type_code]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `service_type_code`
		FROM
		  (SELECT `LHS`.`event_id` AS `event_id`,
		          `LHS`.`service_id` AS `service_id`,
		          `LHS`.`event_details` AS `event_details`,
		          `RHS`.`service_type_code` AS `service_type_code`
		   FROM `events` AS `LHS`
		   INNER JOIN `services` AS `RHS` ON (`LHS`.`service_id` = `RHS`.`service_id`))
		WHERE (`event_details` = 'Success'
		       AND `event_details` != 'Fail')
		ORDER BY service_type_code

	  service_type_code
	0       Death Proof
	1    roperty Change
Error while executing solution for instance spider/local_govt_in_alabama/0015 (318)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT participant_id) OVER () AS count_distinct_participant_id_
FROM participants_in_events
ORDER BY count_distinct_participant_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/local_govt_in_alabama/0014 (322)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM EVENTS
		WHERE event_id NOT IN
		    (SELECT event_id
		     FROM Participants_in_Events)

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT event_id AS count___
		FROM
		  (SELECT LHS.event_id AS event_id,
		          LHS.participant_id AS participant_id,
		          RHS.event_details AS event_details,
		          RHS.service_id AS service_id
		   FROM participants_in_events AS LHS
		   INNER JOIN
		     (SELECT event_details,
		             service_id,
		             COUNT(DISTINCT event_id) AS n_distinct
		      FROM events
		      GROUP BY event_details,
		               service_id) AS RHS ON (LHS.event_id = RHS.n_distinct))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/local_govt_in_alabama/0009 (323)
	EXPECTED OUTPUT ====

		SELECT participant_type_code
		FROM participants
		GROUP BY participant_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  participant_type_code
	0           Participant
	ACTUAL OUTPUT ====

		
		SELECT participant_type_code
		FROM
		  (SELECT LHS.participant_type_code AS participant_type_code,
		          LHS.n AS n,
		          RHS.participant_type_code AS participant_type_code_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT participant_type_code,
		             COUNT() AS n
		      FROM participants
		      GROUP BY participant_type_code) AS LHS
		   CROSS JOIN
		     (SELECT participant_type_code,
		             COUNT() AS n
		      FROM participants
		      GROUP BY participant_type_code) AS RHS)
		WHERE (n > n_other)
		ORDER BY participant_type_code

	   participant_type_code
	0               Organize
	1               Organize
	2               Organize
	3               Organize
	4               Organize
	5            Participant
	6            Participant
	7            Participant
	8            Participant
	9            Participant
	10           Participant
Wrong output for fuzzied solution in instance spider/local_govt_in_alabama/0011 (324)
	EXPECTED OUTPUT ====

		SELECT Event_ID
		FROM Participants_in_Events
		GROUP BY Event_ID
		ORDER BY count(*) DESC
		LIMIT 1

	   event_id
	0        38
	ACTUAL OUTPUT ====

		
		SELECT event_id_other AS event_id
		FROM
		  (SELECT LHS.event_id AS event_id,
		          LHS.n AS n,
		          RHS.event_id AS event_id_other
		   FROM
		     (SELECT event_id,
		             COUNT() AS n
		      FROM participants_in_events
		      GROUP BY event_id) AS LHS
		   INNER JOIN
		     (SELECT event_id,
		             COUNT() AS n
		      FROM participants_in_events
		      GROUP BY event_id) AS RHS ON (LHS.event_id = RHS.n))
		ORDER BY event_id

	Empty DataFrame
	Columns: [event_id]
	Index: []
Wrong output for fuzzied solution in instance spider/local_govt_in_alabama/0010 (325)
	EXPECTED OUTPUT ====

		SELECT T3.service_id,
		       T4.Service_Type_Code
		FROM participants AS T1
		JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID
		JOIN EVENTS AS T3 ON T2.Event_ID = T3.Event_ID
		JOIN services AS T4 ON T3.service_id = T4.service_id
		GROUP BY T3.service_id
		ORDER BY count(*) ASC
		LIMIT 1

	   service_id service_type_code
	0           9   Property Change
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT service_id,
		                service_type_code
		FROM
		  (SELECT LHS.service_id AS service_id,
		          LHS.service_type_code AS service_type_code,
		          LHS.participant_id AS participant_id,
		          LHS.participant_type_code AS participant_type_code,
		          LHS.participant_details AS participant_details,
		          LHS.event_id AS event_id,
		          RHS.event_details AS event_details
		   FROM
		     (SELECT LHS.service_id AS service_id,
		             LHS.service_type_code AS service_type_code,
		             LHS.participant_id AS participant_id,
		             LHS.participant_type_code AS participant_type_code,
		             LHS.participant_details AS participant_details,
		             RHS.event_id AS event_id
		      FROM
		        (SELECT LHS.service_id AS service_id,
		                LHS.service_type_code AS service_type_code,
		                RHS.participant_id AS participant_id,
		                RHS.participant_type_code AS participant_type_code,
		                RHS.participant_details AS participant_details
		         FROM services AS LHS
		         CROSS JOIN participants AS RHS) AS LHS
		      INNER JOIN participants_in_events AS RHS ON (LHS.participant_id = RHS.participant_id)) AS LHS
		   INNER JOIN
		     (SELECT event_details,
		             COUNT() AS n
		      FROM events
		      GROUP BY event_details) AS RHS ON (LHS.service_id = RHS.n))
		ORDER BY service_id

	   service_id service_type_code
	0           1   Property Change
	1           2        Death Proo
	2           6   Property Change
No solution for instance spider/architecture/0017 (327)
No solution for instance spider/architecture/0008 (328)
No solution for instance spider/architecture/0003 (329)
No solution for instance spider/architecture/0013 (330)
No solution for instance spider/architecture/0006 (331)
Wrong output for fuzzied solution in instance spider/architecture/0015 (334)
	EXPECTED OUTPUT ====

		SELECT TYPE,
		       count(*)
		FROM mill
		GROUP BY TYPE
		ORDER BY count(*) DESC
		LIMIT 1

	          type  count(*)
	0  Grondzeiler         5
	ACTUAL OUTPUT ====

		
		SELECT TYPE,
		       n AS count___
		FROM
		  (SELECT LHS.type AS TYPE,
		          LHS.n AS n,
		          RHS.architect_id AS architect_id,
		          RHS.location AS LOCATION,
		          RHS.name AS name,
		          RHS.built_year AS built_year,
		          RHS.notes AS notes
		   FROM
		     (SELECT TYPE,
		             COUNT() AS n
		      FROM mill
		      GROUP BY TYPE) AS LHS
		   INNER JOIN mill AS RHS ON (LHS.n = RHS.id
		                                 AND LHS.type = RHS.type))
		ORDER BY TYPE

	               type  count___
	0         Bergmolen         2
	1       Grondzeiler         5
	2  PCueCGrondzeiler         1
No solution for instance spider/architecture/0016 (336)
Wrong output for fuzzied solution in instance spider/architecture/0001 (338)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM architect
		WHERE gender = 'female'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `name`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `architect`
		      WHERE (`gender` != 'female'))
		   GROUP BY name)
		ORDER BY count___

	   count___
	0         1
	1         2
No solution for instance spider/architecture/0014 (339)
No solution for instance spider/architecture/0009 (340)
No solution for instance spider/architecture/0011 (341)
No solution for instance spider/architecture/0010 (342)
Wrong output for fuzzied solution in instance spider/election_representative/0017 (344)
	EXPECTED OUTPUT ====

		SELECT State
		FROM representative
		GROUP BY State
		HAVING COUNT(*) >= 2

	          state
	0  Pennsylvania
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT state_other AS state
		FROM
		  (SELECT LHS.representative_id AS representative_id,
		          LHS.name AS name,
		          LHS.state AS state,
		          LHS.party AS party,
		          LHS.lifespan AS lifespan,
		          RHS.representative_id AS representative_id_other,
		          RHS.name AS name_other,
		          RHS.state AS state_other,
		          RHS.lifespan AS lifespan_other
		   FROM representative AS LHS
		   INNER JOIN
		     (SELECT representative_id,
		             name,
		             state,
		             party,
		             lifespan,
		             COUNT(*) OVER () AS n
		      FROM representative) AS RHS ON (LHS.representative_id = RHS.n
		                                         AND LHS.party = RHS.party))
		ORDER BY state

	Empty DataFrame
	Columns: [state]
	Index: []
Wrong output for fuzzied solution in instance spider/election_representative/0015 (351)
	EXPECTED OUTPUT ====

		SELECT Party,
		       COUNT(*)
		FROM representative
		GROUP BY Party
		ORDER BY COUNT(*) DESC
		LIMIT 1

	        party  count(*)
	0  Republican         5
	ACTUAL OUTPUT ====

		
		SELECT party,
		       n AS count___
		FROM
		  (SELECT LHS.party AS party,
		          LHS.n AS n,
		          RHS.party AS party_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT party,
		             COUNT() AS n
		      FROM representative
		      GROUP BY party) AS LHS
		   CROSS JOIN
		     (SELECT party,
		             COUNT() AS n
		      FROM representative
		      GROUP BY party) AS RHS)
		WHERE (n > n_other)
		ORDER BY party

	        party  count___
	0  Republican         5
	1  Republican         5
	2  Republican         5
	3  Republican         5
Wrong output for fuzzied solution in instance spider/election_representative/0016 (353)
	EXPECTED OUTPUT ====

		SELECT Party
		FROM representative
		GROUP BY Party
		HAVING COUNT(*) >= 3

	        party
	0  Republican
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT party
		FROM
		  (SELECT party,
		          representative_id,
		          COUNT() AS n
		   FROM representative
		   GROUP BY party,
		            representative_id)
		WHERE (n != 3)
		ORDER BY party

	              party
	0   5ZIHXRepublican
	1   BNNPMRepublican
	2        Democratic
	3        Republican
	4  mFFRepublican9ow
Wrong output for fuzzied solution in instance spider/election_representative/0019 (356)
	EXPECTED OUTPUT ====

		SELECT Party
		FROM representative
		WHERE State = "New York" INTERSECT
		  SELECT Party
		  FROM representative WHERE State = "Pennsylvania"

	Empty DataFrame
	Columns: [party]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `party`
		FROM `representative`
		WHERE (`state` != 'New York'
		       AND `state` = 'Pennsylvania')
		ORDER BY party

	       party
	0  Democrati
Wrong output for fuzzied solution in instance spider/election_representative/0009 (360)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM election AS T1
		JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID
		WHERE Votes > 10000

	               name
	0        Dan Quayle
	1     James L. Quin
	2    James L. Quinn
	3    James L. Quinn
	4  MJ5Dan QuaylenIm
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.election_id AS election_id,
		          LHS.representative_id AS representative_id,
		          LHS.date AS date,
		          LHS.votes AS votes,
		          LHS.vote_percent AS vote_percent,
		          LHS.seats AS seats,
		          LHS.place AS place,
		          RHS.name AS name,
		          RHS.state AS state,
		          RHS.party AS party,
		          RHS.lifespan AS lifespan
		   FROM election AS LHS
		   INNER JOIN representative AS RHS ON (LHS.representative_id = RHS.representative_id))
		WHERE (votes >= 10000.0)
		ORDER BY name

	               name
	0        Dan Quayle
	1     James L. Quin
	2    James L. Quinn
	3    James L. Quinn
	4     Jimmy Quillen
	5  MJ5Dan QuaylenIm
Wrong output for fuzzied solution in instance spider/election_representative/0011 (361)
	EXPECTED OUTPUT ====

		SELECT T2.Party
		FROM election AS T1
		JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID
		ORDER BY votes ASC
		LIMIT 1

	             party
	0  5ZIHXRepublican
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT party
		FROM
		  (SELECT *
		   FROM representative AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM election AS RHS
		        WHERE (LHS.representative_id = RHS.representative_id) ))
		ORDER BY party

	             party
	0  BNNPMRepublican
	1       Democratic
	2       Republican
No solution for instance spider/student_assessment/0008 (365)
Wrong output for fuzzied solution in instance spider/student_assessment/0003 (366)
	EXPECTED OUTPUT ====

		SELECT T2.first_name,
		       T2.last_name
		FROM candidates AS T1
		JOIN people AS T2 ON T1.candidate_id = T2.person_id

	       first_name     last_name
	0   EWSGaVirginie   RfyGrantvho
	1             Hoy      Hartmann
	2            Hoyt         Grant
	3          Lizeth          Gran
	4          Lizeth         Grant
	5            Nova   )mqGrantY E
	6            Nova      Hartmann
	7            Nova      Hartmann
	8            Nova  h1MSengerYfd
	9       NovaA7Y(m        Senger
	10     SogNovaXCu          Gran
	11        Virgini          rant
	12  VirginieZso3B   SengerBl)T2
	13      aD8TqNova      Hartmann
	14        irginie    GrantcUqtK
	ACTUAL OUTPUT ====

		
		SELECT first_name,
		       last_name
		FROM people
		ORDER BY first_name

	       first_name     last_name
	0   EWSGaVirginie   RfyGrantvho
	1             Hoy    Grantzola2
	2             Hoy      Hartmann
	3            Hoyt         Grant
	4          Lizeth          Gran
	5          Lizeth         Grant
	6            Nova   )mqGrantY E
	7            Nova         Grant
	8            Nova      Hartmann
	9            Nova      Hartmann
	10           Nova  h1MSengerYfd
	11      NovaA7Y(m        Senger
	12      NovaEEfCk          Gran
	13     SogNovaXCu          Gran
	14        Virgini          rant
	15  VirginieZso3B   SengerBl)T2
	16  VirginiegJNG5   Sengers(oUH
	17      aD8TqNova      Hartmann
	18        irginie    GrantcUqtK
No solution for instance spider/student_assessment/0027 (367)
No solution for instance spider/student_assessment/0006 (370)
Wrong output for fuzzied solution in instance spider/student_assessment/0012 (372)
	EXPECTED OUTPUT ====

		SELECT T1.student_details
		FROM students AS T1
		JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id
		GROUP BY T1.student_id
		ORDER BY count(*) DESC
		LIMIT 1

	  student_details
	0           Nancy
	ACTUAL OUTPUT ====

		
		SELECT student_details
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT registration_date,
		                student_details,
		                COUNT() AS n
		         FROM
		           (SELECT LHS.student_id AS student_id,
		                   LHS.course_id AS course_id,
		                   LHS.registration_date AS registration_date,
		                   RHS.student_details AS student_details
		            FROM student_course_registrations AS LHS
		            LEFT JOIN students AS RHS ON (LHS.student_id = RHS.student_id))
		         GROUP BY registration_date,
		                  student_details)
		      ORDER BY registration_date DESC)
		   LIMIT 1)

	  student_details
	0            Barr
No solution for instance spider/student_assessment/0026 (373)
Wrong output for fuzzied solution in instance spider/student_assessment/0020 (378)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.city
		FROM addresses AS T1
		JOIN people_addresses AS T2 ON T1.address_id = T2.address_id
		JOIN students AS T3 ON T2.person_id = T3.student_id

	                      city
	0         8 qBoyleshireAWg
	1                Alizeshir
	2               Boyleshire
	3        East Tavaresburgh
	4   East TavaresburghK8pU(
	5          F2Z6RBoyleshire
	6         Rm BoyleshireJDO
	7          South Naomibury
	8               Terencetow
	9              Terencetown
	10        Terencetown4D134
	11           a5(rOjE0 vYMU
	12        ast Tavaresburgh
	13             eIX)hivoSip
	14         veX9VKZvcRkpgQQ
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT city
		FROM
		  (SELECT LHS.address_id AS address_id,
		          LHS.line_1 AS line_1,
		          LHS.line_2 AS line_2,
		          LHS.city AS city,
		          LHS.zip_postcode AS zip_postcode,
		          LHS.state_province_county AS state_province_county,
		          LHS.country AS country,
		          LHS.student_id AS student_id,
		          LHS.student_details AS student_details,
		          RHS.person_address_id AS person_address_id,
		          RHS.person_id AS person_id,
		          RHS.date_from AS date_from,
		          RHS.date_to AS date_to
		   FROM
		     (SELECT LHS.address_id AS address_id,
		             LHS.line_1 AS line_1,
		             LHS.line_2 AS line_2,
		             LHS.city AS city,
		             LHS.zip_postcode AS zip_postcode,
		             LHS.state_province_county AS state_province_county,
		             LHS.country AS country,
		             RHS.student_id AS student_id,
		             RHS.student_details AS student_details
		      FROM addresses AS LHS
		      CROSS JOIN students AS RHS) AS LHS
		   INNER JOIN people_addresses AS RHS ON (LHS.address_id = RHS.address_id))
		ORDER BY city

	                      city
	0         8 qBoyleshireAWg
	1                Alizeshir
	2               Alizeshire
	3                Boyleshir
	4               Boyleshire
	5        East Tavaresburgh
	6   East TavaresburghK8pU(
	7          F2Z6RBoyleshire
	8         IJGBoyleshireTSY
	9         Rm BoyleshireJDO
	10          South Naomibur
	11         South Naomibury
	12              Terencetow
	13             Terencetown
	14        Terencetown4D134
	15           a5(rOjE0 vYMU
	16        ast Tavaresburgh
	17             eIX)hivoSip
	18   nuRYDVGQ958DOK )o tUr
	19      pumu8bV9J6lCseY14B
	20         veX9VKZvcRkpgQQ
Wrong output for fuzzied solution in instance spider/student_assessment/0019 (379)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.city
		FROM addresses AS T1
		JOIN people_addresses AS T2 ON T1.address_id = T2.address_id

	                   city
	0  6btqGSouth Naomibury
	1            Boyleshire
	2            Lake Devon
	3            Lake Kaley
	4       Lake KaleyB1Efy
	5         O'Connellview
	6        South Naomibur
	7       wkURsLake Kaley
	ACTUAL OUTPUT ====

		
		SELECT city
		FROM
		  (SELECT LHS.person_address_id AS person_address_id,
		          LHS.person_id AS person_id,
		          LHS.address_id AS address_id,
		          LHS.date_from AS date_from,
		          LHS.date_to AS date_to,
		          RHS.line_1 AS line_1,
		          RHS.line_2 AS line_2,
		          RHS.city AS city,
		          RHS.zip_postcode AS zip_postcode,
		          RHS.state_province_county AS state_province_county,
		          RHS.country AS country
		   FROM people_addresses AS LHS
		   INNER JOIN addresses AS RHS ON (LHS.address_id = RHS.address_id))
		ORDER BY city

	                    city
	0   6btqGSouth Naomibury
	1             Boyleshire
	2             Boyleshire
	3             Lake Devon
	4             Lake Devon
	5             Lake Devon
	6             Lake Kaley
	7             Lake Kaley
	8             Lake Kaley
	9             Lake Kaley
	10            Lake Kaley
	11            Lake Kaley
	12            Lake Kaley
	13            Lake Kaley
	14       Lake KaleyB1Efy
	15       Lake KaleyB1Efy
	16       Lake KaleyB1Efy
	17         O'Connellview
	18         O'Connellview
	19        South Naomibur
	20        South Naomibur
	21        South Naomibur
	22       wkURsLake Kaley
	23       wkURsLake Kaley
Error while executing ground truth for instance spider/student_assessment/0024 (381)

'<' not supported between instances of 'str' and 'int'
No solution for instance spider/student_assessment/0001 (384)
No solution for instance spider/student_assessment/0014 (385)
Wrong output for fuzzied solution in instance spider/student_assessment/0009 (386)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM courses AS T1
		JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id
		WHERE T2.student_id = 171

	   count(*)
	0        17
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___
		FROM
		  (SELECT LHS.course_id AS course_id,
		          LHS.course_name AS course_name,
		          LHS.course_description AS course_description,
		          LHS.other_details AS other_details,
		          RHS.date_of_attendance AS date_of_attendance,
		          RHS.n AS n
		   FROM courses AS LHS
		   CROSS JOIN
		     (SELECT date_of_attendance,
		             COUNT() AS n
		      FROM student_course_attendance
		      WHERE (student_id = 171)
		      GROUP BY date_of_attendance) AS RHS)
		ORDER BY count___

	   count___
	0         1
Wrong output for fuzzied solution in instance spider/customers_campaigns_ecommerce/0009 (402)
	EXPECTED OUTPUT ====

		SELECT T2.customer_name
		FROM mailshot_customers AS T1
		JOIN customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE outcome_code = 'Order'
		GROUP BY T1.customer_id
		HAVING count(*) >= 2

	    customer_name
	0   Carlotta7Efeb
	1  JONCarlottaReM
	2            Kyle
	3       Kyle5oi1T
	4         Osborne
	5         Osborne
	6         Osborne
	7    OsborneFKMDd
	8    Y(ZVgOsborne
	9   wg6PuCarlotta
	ACTUAL OUTPUT ====

		
		SELECT `customer_name`
		FROM
		  (SELECT `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`payment_method` AS `payment_method`,
		          `LHS`.`customer_name` AS `customer_name`,
		          `LHS`.`customer_phone` AS `customer_phone`,
		          `LHS`.`customer_email` AS `customer_email`,
		          `LHS`.`customer_address` AS `customer_address`,
		          `LHS`.`customer_login` AS `customer_login`,
		          `LHS`.`customer_password` AS `customer_password`,
		          `RHS`.`outcome_code` AS `outcome_code`,
		          `RHS`.`n` AS `n`
		   FROM `customers` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT `customer_id`,
		                `outcome_code`,
		                COUNT() AS `n`
		         FROM `mailshot_customers`
		         GROUP BY `customer_id`,
		                  `outcome_code`)
		      WHERE (`outcome_code` = 'Order'
		             AND n = 2)) AS RHS ON (LHS.customer_id = RHS.customer_id))
		ORDER BY customer_name

	   customer_name
	0           Kyle
	1   OsborneFKMDd
	2  wg6PuCarlotta
No solution for instance spider/customers_campaigns_ecommerce/0011 (403)
Wrong output for fuzzied solution in instance spider/customers_campaigns_ecommerce/0010 (404)
	EXPECTED OUTPUT ====

		SELECT T2.customer_name
		FROM mailshot_customers AS T1
		JOIN customers AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T1.customer_id
		ORDER BY count(*) DESC
		LIMIT 1

	    customer_name
	0  JONCarlottaReM
	ACTUAL OUTPUT ====

		
		SELECT customer_name
		FROM
		  (SELECT *
		   FROM customers AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT mailshot_id,
		                  mailshot_id AS customer_id,
		                  outcome_code,
		                  mailshot_customer_date,
		                  n
		           FROM
		             (SELECT customer_id AS mailshot_id,
		                     customer_id,
		                     outcome_code,
		                     mailshot_customer_date,
		                     n
		              FROM
		                (SELECT LHS.mailshot_id AS mailshot_id,
		                        LHS.customer_id AS customer_id,
		                        LHS.outcome_code AS outcome_code,
		                        LHS.mailshot_customer_date AS mailshot_customer_date,
		                        RHS.n AS n
		                 FROM mailshot_customers AS LHS
		                 INNER JOIN
		                   (SELECT customer_id,
		                           mailshot_id,
		                           COUNT() AS n
		                    FROM mailshot_customers
		                    GROUP BY customer_id,
		                             mailshot_id) AS RHS ON (LHS.customer_id = RHS.mailshot_id
		                                                     AND LHS.mailshot_id = RHS.customer_id)))) AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY customer_name

	    customer_name
	0        Carlotta
	1  JONCarlottaReM
	2    OsborneFKMDd
	3   wg6PuCarlotta
No solution for instance spider/csu_1/0017 (407)
Wrong output for fuzzied solution in instance spider/csu_1/0008 (408)
	EXPECTED OUTPUT ====

		SELECT campusfee
		FROM campuses AS T1
		JOIN csu_fees AS T2 ON T1.id = t2.campus
		WHERE t1.campus = "San Francisco State University"
		  AND T2.year = 1996

	Empty DataFrame
	Columns: [campusfee]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `campusfee`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`campus` AS `campus`,
		          `LHS`.`location` AS `location`,
		          `LHS`.`county` AS `county`,
		          `LHS`.`year` AS `year`,
		          `RHS`.`year` AS `year_other`,
		          `RHS`.`campusfee` AS `campusfee`
		   FROM
		     (SELECT *
		      FROM `campuses`
		      WHERE (`campus` = 'San Francisco State University'
		             AND campus > 1996)) AS LHS
		   INNER JOIN csu_fees AS RHS ON (LHS.id = RHS.campus))
		ORDER BY campusfee

	   campusfee
	0       1905
	1       2008
	2       2009
	3       2010
No solution for instance spider/csu_1/0027 (410)
No solution for instance spider/csu_1/0022 (411)
No solution for instance spider/csu_1/0030 (412)
No solution for instance spider/csu_1/0013 (413)
Wrong output for fuzzied solution in instance spider/csu_1/0006 (414)
	EXPECTED OUTPUT ====

		SELECT campus
		FROM campuses
		WHERE LOCATION = "Northridge"
		  AND county = "Los Angeles"
		UNION
		SELECT campus
		FROM campuses
		WHERE LOCATION = "San Francisco"
		  AND county = "San Francisco"

	                           campus
	0  DHZxivNEVIAqM i0SW0EeKiuaYePKV
	ACTUAL OUTPUT ====

		
		SELECT `campus`
		FROM
		  (SELECT *
		   FROM `campuses`
		   WHERE (`location` = 'Northridge'
		          OR `location` = 'San Francisco'))
		WHERE (`location` != 'Los Angeles')
		ORDER BY campus

	                           campus
	0     California  Maritime Academ
	1  DHZxivNEVIAqM i0SW0EeKiuaYePKV
	2         Fresno State University
	3         Sonoma State University
No solution for instance spider/csu_1/0012 (415)
No solution for instance spider/csu_1/0015 (416)
Wrong output for fuzzied solution in instance spider/csu_1/0005 (417)
	EXPECTED OUTPUT ====

		SELECT campus
		FROM campuses
		WHERE YEAR >= 1935
		  AND YEAR <= 1939

	                                   campus
	0  California State University-San Marcos
	1               San Diego State Universit
	2          San Francisco State University
	3     XjZqGSan Francisco State University
	ACTUAL OUTPUT ====

		
		SELECT campus
		FROM campuses
		WHERE (YEAR > 1935
		       AND YEAR < 1939)
		ORDER BY campus

	                                   campus
	0  California State University-San Marcos
No solution for instance spider/csu_1/0016 (418)
No solution for instance spider/csu_1/0018 (419)
No solution for instance spider/csu_1/0019 (421)
Wrong output for fuzzied solution in instance spider/csu_1/0007 (422)
	EXPECTED OUTPUT ====

		SELECT campusfee
		FROM campuses AS T1
		JOIN csu_fees AS T2 ON T1.id = t2.campus
		WHERE t1.campus = "San Jose State University"
		  AND T2.year = 1996

	Empty DataFrame
	Columns: [campusfee]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `campusfee`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`campus` AS `campus`,
		          `LHS`.`location` AS `location`,
		          `LHS`.`county` AS `county`,
		          `LHS`.`year` AS `year`,
		          `RHS`.`year` AS `year_other`,
		          `RHS`.`campusfee` AS `campusfee`
		   FROM
		     (SELECT *
		      FROM `campuses`
		      WHERE (`campus` = 'San Jose State University'
		             AND campus > 1996)) AS LHS
		   INNER JOIN csu_fees AS RHS ON (LHS.id = RHS.campus))
		ORDER BY campusfee

	   campusfee
	0       1905
	1       2008
	2       2009
	3       2010
No solution for instance spider/csu_1/0024 (423)
No solution for instance spider/csu_1/0021 (424)
Wrong output for fuzzied solution in instance spider/csu_1/0023 (425)
	EXPECTED OUTPUT ====

		SELECT sum(faculty)
		FROM faculty
		WHERE YEAR = 2002

	   sum(faculty)
	0  1.690695e+10
	ACTUAL OUTPUT ====

		
		SELECT sumfaculty AS sum_faculty_
		FROM
		  (SELECT YEAR,
		          SUM(faculty) AS sumfaculty
		   FROM faculty
		   GROUP BY YEAR)
		WHERE (YEAR = 2002
		       OR sumfaculty < YEAR)
		ORDER BY sum_faculty_

	    sum_faculty_
	0  -8.677277e+09
	1   3.344000e+02
	2   3.344000e+02
	3   3.344200e+02
	4   1.101980e+03
	5   1.101980e+03
	6   1.101990e+03
	7   1.102000e+03
	8   1.102000e+03
	9   1.102000e+03
	10  1.102000e+03
	11  1.102000e+03
	12  1.102000e+03
	13  1.102010e+03
	14  1.102010e+03
	15  1.102010e+03
	16  1.102020e+03
	17  1.257280e+03
	18  1.257300e+03
	19  1.257320e+03
	20  1.257320e+03
	21  1.257320e+03
	22  2.910180e+09
	23  4.583543e+09
	24  8.518876e+09
	25  1.690695e+10
Wrong output for fuzzied solution in instance spider/csu_1/0014 (427)
	EXPECTED OUTPUT ====

		SELECT avg(campusfee)
		FROM csu_fees
		WHERE YEAR = 1996

	   avg(campusfee)
	0          1880.8
	ACTUAL OUTPUT ====

		
		SELECT meancampusfee AS avg_campusfee_
		FROM
		  (SELECT AVG(campusfee) AS meancampusfee
		   FROM
		     (SELECT *
		      FROM csu_fees
		      WHERE (YEAR <= 1996
		             AND campusfee != YEAR)))
		ORDER BY avg_campusfee_

	   avg_campusfee_
	0        1904.125
No solution for instance spider/csu_1/0009 (428)
No solution for instance spider/csu_1/0025 (429)
No solution for instance spider/csu_1/0011 (430)
No solution for instance spider/csu_1/0029 (431)
Wrong output for fuzzied solution in instance spider/csu_1/0010 (432)
	EXPECTED OUTPUT ====

		SELECT campus
		FROM campuses
		WHERE county = "Los Angeles"
		  AND YEAR > 1950

	Empty DataFrame
	Columns: [campus]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `campus`
		FROM `campuses`
		WHERE (`county` = 'Los Angeles'
		       AND YEAR >= 1950)
		ORDER BY campus

	                                        campus
	0  California State University-StanislausxfJcN
Wrong output for fuzzied solution in instance spider/farm/0013 (436)
	EXPECTED OUTPUT ====

		SELECT T2.Theme
		FROM city AS T1
		JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID
		WHERE T1.Population > 1000

	            theme
	0         MTV Cub
	1        MTV Cube
	2         TV Cube
	3  UAgMTV Cubeknm
	4      odehunters
	5      odehunters
	ACTUAL OUTPUT ====

		
		SELECT theme
		FROM
		  (SELECT LHS.city_id AS city_id,
		          LHS.official_name AS official_name,
		          LHS.status AS status,
		          LHS.area_km_2 AS area_km_2,
		          LHS.population AS population,
		          LHS.census_ranking AS census_ranking,
		          RHS.competition_id AS competition_id,
		          RHS.year AS YEAR,
		          RHS.theme AS theme,
		          RHS.hosts AS hosts
		   FROM
		     (SELECT *
		      FROM city
		      WHERE (population >= 1000.0)) AS LHS
		   INNER JOIN farm_competition AS RHS ON (LHS.city_id = RHS.host_city_id))
		ORDER BY theme

	            theme
	0         MTV Cub
	1        MTV Cube
	2         TV Cube
	3  UAgMTV Cubeknm
	4  gVTMTV Cube3EM
	5      odehunters
	6      odehunters
Wrong output for fuzzied solution in instance spider/farm/0012 (439)
	EXPECTED OUTPUT ====

		SELECT T1.Status
		FROM city AS T1
		JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID
		GROUP BY T2.Host_city_ID
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  status
	0   Town
	ACTUAL OUTPUT ====

		
		SELECT status
		FROM
		  (SELECT city_id,
		          official_name,
		          status,
		          area_km_2,
		          population,
		          census_ranking,
		          n,
		          YEAR,
		          theme,
		          hosts,
		          city_id AS competition_id
		   FROM
		     (SELECT LHS.city_id AS city_id,
		             LHS.official_name AS official_name,
		             LHS.status AS status,
		             LHS.area_km_2 AS area_km_2,
		             LHS.population AS population,
		             LHS.census_ranking AS census_ranking,
		             LHS.n AS n,
		             RHS.year AS YEAR,
		             RHS.theme AS theme,
		             RHS.hosts AS hosts
		      FROM
		        (SELECT city_id,
		                official_name,
		                status,
		                area_km_2,
		                population,
		                census_ranking,
		                COUNT(*) OVER () AS n
		         FROM city) AS LHS
		      INNER JOIN farm_competition AS RHS ON (LHS.city_id = RHS.competition_id
		                                                AND LHS.n = RHS.host_city_id)))
		ORDER BY status

	Empty DataFrame
	Columns: [status]
	Index: []
Wrong output for base solution in instance spider/farm/0005 (441)
	EXPECTED OUTPUT ====

	   avg_working_horses_
	0              3977.75
	ACTUAL OUTPUT ====

		SELECT avg(Working_Horses)
		FROM farm
		WHERE Total_Horses > 5000

	   avg(working_horses)
	0              3977.75
Wrong output for ground truth in instance spider/farm/0005 (441)
Wrong output for fuzzied solution in instance spider/farm/0016 (442)
	EXPECTED OUTPUT ====

		SELECT Status
		FROM city
		GROUP BY Status
		ORDER BY COUNT(*) DESC
		LIMIT 1

	    status
	0  Village
	ACTUAL OUTPUT ====

		
		SELECT status
		FROM
		  (SELECT LHS.city_id AS city_id,
		          LHS.official_name AS official_name,
		          LHS.status AS status,
		          LHS.area_km_2 AS area_km_2,
		          LHS.population AS population,
		          LHS.census_ranking AS census_ranking
		   FROM city AS LHS
		   INNER JOIN
		     (SELECT COUNT() AS n
		      FROM city) AS RHS ON (LHS.city_id = RHS.n))
		ORDER BY status

	Empty DataFrame
	Columns: [status]
	Index: []
Wrong output for fuzzied solution in instance spider/farm/0018 (443)
	EXPECTED OUTPUT ====

		SELECT Status
		FROM city
		WHERE Population > 1500 INTERSECT
		  SELECT Status
		  FROM city WHERE Population < 500

	  status
	0   Town
	ACTUAL OUTPUT ====

		
		SELECT status
		FROM city
		WHERE (population <= 1500.0
		       AND population < 500.0)
		ORDER BY status

	    status
	0     Town
	1     Town
	2   Villag
	3  Village
Wrong output for fuzzied solution in instance spider/farm/0019 (445)
	EXPECTED OUTPUT ====

		SELECT Official_Name
		FROM city
		WHERE Population > 1500
		  OR Population < 500

	  official_name
	0  Plaster Rock
	ACTUAL OUTPUT ====

		
		SELECT official_name
		FROM city
		WHERE (population > 1500.0
		       OR population <= 500.0)
		ORDER BY official_name

	    official_name
	0    Plaster Rock
	1  nO6WlAroostook
Error while executing solution for instance spider/farm/0007 (446)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT status) OVER () AS count_distinct_status_
FROM city
ORDER BY count_distinct_status_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/farm/0009 (449)
	EXPECTED OUTPUT ====

		SELECT Official_Name,
		       Status
		FROM city
		ORDER BY Population DESC
		LIMIT 1

	   official_name     status
	0  Perth-Andover  MCKkjTown
	ACTUAL OUTPUT ====

		
		SELECT official_name,
		       status
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM city
		      ORDER BY area_km_2 DESC)
		   LIMIT 1)

	   official_name        status
	0  Perth-Andover  VillageZ16YK
Wrong output for fuzzied solution in instance spider/farm/0011 (450)
	EXPECTED OUTPUT ====

		SELECT T1.Official_Name
		FROM city AS T1
		JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID
		GROUP BY T2.Host_city_ID
		HAVING COUNT(*) > 1

	   official_name
	0  Perth-Andover
	1  Perth-Andover
	2    Plaster Roc
	ACTUAL OUTPUT ====

		
		SELECT official_name
		FROM
		  (SELECT city_id,
		          official_name,
		          status,
		          area_km_2,
		          population,
		          census_ranking,
		          n,
		          YEAR,
		          theme,
		          hosts,
		          city_id AS competition_id
		   FROM
		     (SELECT LHS.city_id AS city_id,
		             LHS.official_name AS official_name,
		             LHS.status AS status,
		             LHS.area_km_2 AS area_km_2,
		             LHS.population AS population,
		             LHS.census_ranking AS census_ranking,
		             LHS.n AS n,
		             RHS.year AS YEAR,
		             RHS.theme AS theme,
		             RHS.hosts AS hosts
		      FROM
		        (SELECT city_id,
		                official_name,
		                status,
		                area_km_2,
		                population,
		                census_ranking,
		                COUNT(*) OVER () AS n
		         FROM city) AS LHS
		      INNER JOIN farm_competition AS RHS ON (LHS.city_id = RHS.competition_id
		                                                AND LHS.n = RHS.host_city_id)))
		ORDER BY official_name

	Empty DataFrame
	Columns: [official_name]
	Index: []
Wrong output for fuzzied solution in instance spider/train_station/0017 (453)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM train_station AS T1
		JOIN station AS T2 ON T1.station_id = T2.station_id
		GROUP BY T1.station_id
		ORDER BY count(*) DESC
		LIMIT 1

	                       name
	0  London King's CrosshA1fg
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.name AS name,
		          LHS.station_id AS station_id,
		          LHS.n AS n
		   FROM
		     (SELECT name,
		             station_id,
		             COUNT() AS n
		      FROM station
		      GROUP BY name,
		               station_id) AS LHS
		   INNER JOIN train_station AS RHS ON (LHS.station_id = RHS.station_id
		                                          AND LHS.n = RHS.train_id))
		ORDER BY name

	                          name
	0     London King's CrosshA1fg
	1       London St Pancras(qJy4
	2               Ofqe3Stratford
	3                    Stratford
	4  wS1Birmingham New StreethT 
Wrong output for fuzzied solution in instance spider/train_station/0008 (454)
	EXPECTED OUTPUT ====

		SELECT DISTINCT LOCATION
		FROM station
		WHERE number_of_platforms >= 15
		  AND total_passengers > 25

	      location
	0   Birmingham
	1      CDhUi4P
	2       Glasgo
	3      Glasgow
	4  HdmV5HmKrk 
	5       London
	6  TFPDFBNNPMa
	7   Y9DdWh kFf
	8       yrd3dD
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT LOCATION
		FROM station
		WHERE (number_of_platforms > 15
		       OR number_of_platforms > 25)
		ORDER BY LOCATION

	      location
	0      CDhUi4P
	1       Glasgo
	2      Glasgow
	3  HdmV5HmKrk 
	4  LAqWeLondon
	5       London
	6  TFPDFBNNPMa
	7   Y9DdWh kFf
	8   jOXBue4BZo
	9       yrd3dD
Wrong output for base solution in instance spider/train_station/0006 (458)
	EXPECTED OUTPUT ====

	   avg_total_passengers_  max_total_passengers_
	0                 48.015                103.534
	ACTUAL OUTPUT ====

		SELECT avg(total_passengers),
		       max(total_passengers)
		FROM station
		WHERE LOCATION = 'London'
		  OR LOCATION = 'Glasgow'

	   avg(total_passengers)  max(total_passengers)
	0                 48.015                103.534
Wrong output for ground truth in instance spider/train_station/0006 (458)
Wrong output for base solution in instance spider/train_station/0004 (459)
	EXPECTED OUTPUT ====

	                    name  total_passengers
	0  Birmingham New Street            36.331
	1        Glasgow Central            29.658
	ACTUAL OUTPUT ====

		SELECT name,
		       total_passengers
		FROM station
		WHERE LOCATION != 'London'

	                    name  total_passengers
	0  Birmingham New Street            36.331
	1        Glasgow Central            29.658
Wrong output for ground truth in instance spider/train_station/0004 (459)
Error while executing solution for instance spider/train_station/0015 (461)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/train_station/0015 (461)
Wrong output for fuzzied solution in instance spider/train_station/0005 (462)
	EXPECTED OUTPUT ====

		SELECT name,
		       main_services
		FROM station
		ORDER BY total_passengers DESC
		LIMIT 3

	                       name                             main_services
	0                 Stratford                      West Coast Main Line
	1  London King's CrosshA1fg   West Coast Main Line Cross Country Rout
	2            Ofqe3Stratford  West Coast Main Line Cross Country Route
	ACTUAL OUTPUT ====

		
		SELECT name,
		       main_services
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM station
		      ORDER BY station_id)
		   LIMIT 3)

	                     name                             main_services
	0  London St Pancras(qJy4                       West Coast Main Lin
	1          Ofqe3Stratford  West Coast Main Line Cross Country Route
	2     London King's Cross                       est Coast Main Line
Wrong output for fuzzied solution in instance spider/train_station/0019 (466)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM station
		GROUP BY LOCATION
		HAVING count(*) = 1

	       location
	0  Glasgow3cv)u
	1   LondontYIwj
	2  QIijVGlasgow
	3         ondon
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT LOCATION,
		          number_of_platforms,
		          COUNT() AS n
		   FROM station
		   GROUP BY LOCATION,
		            number_of_platforms)
		WHERE (n <= 1)
		ORDER BY LOCATION

	       location
	0       Glasgow
	1       Glasgow
	2  Glasgow3cv)u
	3   LondontYIwj
	4  QIijVGlasgow
	5         ondon
Wrong output for base solution in instance spider/train_station/0007 (467)
	EXPECTED OUTPUT ====

	     location  sum_number_of_platforms_  sum_total_passengers_
	0  Birmingham                        13                 36.331
	1     Glasgow                        17                 29.658
	2      London                       140                498.507
	ACTUAL OUTPUT ====

		SELECT LOCATION,
		       sum(number_of_platforms),
		       sum(total_passengers)
		FROM station
		GROUP BY LOCATION

	     location  sum(number_of_platforms)  sum(total_passengers)
	0  Birmingham                        13                 36.331
	1     Glasgow                        17                 29.658
	2      London                       140                498.507
Wrong output for ground truth in instance spider/train_station/0007 (467)
Wrong output for fuzzied solution in instance spider/train_station/0021 (468)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM train_station AS T1
		JOIN station AS T2 ON T1.station_id = T2.station_id
		JOIN train AS T3 ON T3.train_id = T1.train_id
		WHERE T3.Name = "Ananthapuri Express" INTERSECT
		  SELECT T2.name
		  FROM train_station AS T1
		  JOIN station AS T2 ON T1.station_id = T2.station_id
		  JOIN train AS T3 ON T3.train_id = T1.train_id WHERE T3.Name = "Guruvayur Express"

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `name`
		FROM
		  (SELECT `LHS`.`station_id` AS `station_id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`annual_entry_exit` AS `annual_entry_exit`,
		          `LHS`.`annual_interchanges` AS `annual_interchanges`,
		          `LHS`.`total_passengers` AS `total_passengers`,
		          `LHS`.`location` AS `location`,
		          `LHS`.`main_services` AS `main_services`,
		          `LHS`.`number_of_platforms` AS `number_of_platforms`,
		          `RHS`.`station_id` AS `station_id_other`,
		          `RHS`.`name` AS `name_other`,
		          `RHS`.`time` AS `time`,
		          `RHS`.`service` AS `service`
		   FROM `station` AS `LHS`
		   INNER JOIN
		     (SELECT `station_id` AS `train_id`,
		             `station_id`,
		             `name`,
		             `time`,
		             `service`
		      FROM
		        (SELECT `LHS`.`train_id` AS `train_id`,
		                `LHS`.`station_id` AS `station_id`,
		                `RHS`.`name` AS `name`,
		                `RHS`.`time` AS `time`,
		                `RHS`.`service` AS `service`
		         FROM `train_station` AS `LHS`
		         INNER JOIN
		           (SELECT *
		            FROM `train`
		            WHERE (`name` = 'Ananthapuri Express'
		                   AND `name` != 'Guruvayur Express')) AS RHS ON (LHS.station_id = RHS.train_id))) AS RHS ON (LHS.station_id = RHS.train_id))
		ORDER BY name

	                       name
	0  TVam4London King's Cross
Wrong output for fuzzied solution in instance spider/train_station/0009 (472)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM station
		EXCEPT
		SELECT LOCATION
		FROM station
		WHERE number_of_platforms >= 15

	       location
	0       Glasgow
	1  HQCLondonHFd
	2         Londo
	3  QIijVGlasgow
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT *
		   FROM station AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM station
		           WHERE (number_of_platforms >= 15)) AS RHS
		        WHERE (LHS.location = RHS.location) ))
		ORDER BY LOCATION

	       location
	0       Glasgow
	1       Glasgow
	2  HQCLondonHFd
	3         Londo
	4         Londo
	5  QIijVGlasgow
Wrong output for fuzzied solution in instance spider/train_station/0010 (474)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM station
		GROUP BY LOCATION
		ORDER BY count(*) DESC
		LIMIT 1

	  location
	0  Glasgow
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT LOCATION,
		          COUNT() AS n
		   FROM
		     (SELECT station_id,
		             name,
		             annual_entry_exit,
		             annual_interchanges,
		             total_passengers,
		             LOCATION,
		             main_services,
		             station_id AS number_of_platforms,
		             station_id_other,
		             name_other,
		             annual_entry_exit_other,
		             total_passengers_other,
		             location_other,
		             main_services_other
		      FROM
		        (SELECT LHS.station_id AS station_id,
		                LHS.name AS name,
		                LHS.annual_entry_exit AS annual_entry_exit,
		                LHS.annual_interchanges AS annual_interchanges,
		                LHS.total_passengers AS total_passengers,
		                LHS.location AS LOCATION,
		                LHS.main_services AS main_services,
		                LHS.number_of_platforms AS number_of_platforms,
		                RHS.station_id AS station_id_other,
		                RHS.name AS name_other,
		                RHS.annual_entry_exit AS annual_entry_exit_other,
		                RHS.total_passengers AS total_passengers_other,
		                RHS.location AS location_other,
		                RHS.main_services AS main_services_other
		         FROM station AS LHS
		         INNER JOIN station AS RHS ON (LHS.station_id = RHS.number_of_platforms
		                                          AND LHS.annual_interchanges = RHS.annual_interchanges)))
		   GROUP BY LOCATION)
		ORDER BY LOCATION

	       location
	0       Glasgow
	1  Glasgow3cv)u
Wrong output for fuzzied solution in instance spider/manufacturer/0002 (475)
	EXPECTED OUTPUT ====

		SELECT name,
		       furniture_id
		FROM furniture
		ORDER BY market_rate DESC
		LIMIT 1

	       name  furniture_id
	0  Chabudai             2
	ACTUAL OUTPUT ====

		
		SELECT name,
		       furniture_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM furniture
		      ORDER BY num_of_component DESC)
		   LIMIT 1)

	       name  furniture_id
	0  Chabudai             3
Wrong output for fuzzied solution in instance spider/manufacturer/0008 (476)
	EXPECTED OUTPUT ====

		SELECT avg(Num_of_Factories)
		FROM manufacturer
		WHERE num_of_shops > 20

	   avg(num_of_factories)
	0           6.010821e+08
	ACTUAL OUTPUT ====

		
		SELECT meannum_of_factories AS avg_num_of_factories_
		FROM
		  (SELECT AVG(num_of_factories) AS meannum_of_factories
		   FROM
		     (SELECT *
		      FROM manufacturer
		      WHERE (num_of_factories != 20
		             AND num_of_shops > 20)))
		ORDER BY avg_num_of_factories_

	   avg_num_of_factories_
	0           6.284040e+08
Wrong output for fuzzied solution in instance spider/manufacturer/0003 (477)
	EXPECTED OUTPUT ====

		SELECT sum(market_rate)
		FROM furniture
		ORDER BY market_rate DESC
		LIMIT 2

	   sum(market_rate)
	0     -2.586309e+10
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT summarket_rate AS sum_market_rate_
		FROM
		  (SELECT furniture_id,
		          name,
		          num_of_component,
		          market_rate,
		          SUM(market_rate) OVER () AS summarket_rate
		   FROM furniture)
		WHERE (summarket_rate > 2.0
		       AND summarket_rate >= market_rate)
		ORDER BY sum_market_rate_

	Empty DataFrame
	Columns: [sum_market_rate_]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
Wrong output for fuzzied solution in instance spider/manufacturer/0012 (481)
	EXPECTED OUTPUT ====

		SELECT t1.manufacturer_id,
		       t1.num_of_shops
		FROM manufacturer AS t1
		JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id
		ORDER BY t2.Price_in_Dollar DESC
		LIMIT 1

	   manufacturer_id  num_of_shops
	0                4            36
	ACTUAL OUTPUT ====

		
		SELECT manufacturer_id,
		       furniture_id AS num_of_shops
		FROM
		  (SELECT LHS.manufacturer_id AS manufacturer_id,
		          LHS.furniture_id AS furniture_id,
		          LHS.price_in_dollar AS price_in_dollar,
		          RHS.open_year AS open_year,
		          RHS.name AS name,
		          RHS.num_of_factories AS num_of_factories
		   FROM furniture_manufacte AS LHS
		   INNER JOIN manufacturer AS RHS ON (LHS.manufacturer_id = RHS.manufacturer_id
		                                         AND LHS.furniture_id = RHS.num_of_shops))
		ORDER BY manufacturer_id

	   manufacturer_id  num_of_shops
	0                3             6
Wrong output for fuzzied solution in instance spider/manufacturer/0005 (483)
	EXPECTED OUTPUT ====

		SELECT name,
		       Num_of_Component
		FROM furniture
		ORDER BY market_rate
		LIMIT 1

	       name  num_of_component
	0  Bookcase                 2
	ACTUAL OUTPUT ====

		
		SELECT name,
		       num_of_component
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM furniture
		      ORDER BY name DESC)
		   LIMIT 1)

	             name  num_of_component
	0  XCgChabudai0vg                 6
Wrong output for fuzzied solution in instance spider/manufacturer/0016 (484)
	EXPECTED OUTPUT ====

		SELECT t3.name
		FROM furniture AS t1
		JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID
		JOIN manufacturer AS t3 ON t2.manufacturer_id = t3.manufacturer_id
		WHERE t1.num_of_component < 6 INTERSECT
		  SELECT t3.name
		  FROM furniture AS t1
		  JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID
		  JOIN manufacturer AS t3 ON t2.manufacturer_id = t3.manufacturer_id WHERE t1.num_of_component > 10

	       name
	0      IKEA
	1       KEA
	2  ord Make
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.manufacturer_id AS manufacturer_id,
		          LHS.open_year AS open_year,
		          LHS.name AS name,
		          LHS.num_of_factories AS num_of_factories,
		          LHS.num_of_shops AS num_of_shops,
		          RHS.furniture_id AS furniture_id,
		          RHS.price_in_dollar AS price_in_dollar,
		          RHS.name AS name_other,
		          RHS.market_rate AS market_rate
		   FROM manufacturer AS LHS
		   INNER JOIN
		     (SELECT LHS.manufacturer_id AS manufacturer_id,
		             LHS.furniture_id AS furniture_id,
		             LHS.price_in_dollar AS price_in_dollar,
		             RHS.name AS name,
		             RHS.num_of_component AS num_of_component,
		             RHS.market_rate AS market_rate
		      FROM furniture_manufacte AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM furniture
		         WHERE (num_of_component >= 6
		                AND num_of_component >= 10)) AS RHS ON (LHS.furniture_id = RHS.furniture_id)) AS RHS ON (LHS.manufacturer_id = RHS.manufacturer_id
		                                                                                                         AND LHS.num_of_factories = RHS.num_of_component))
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
No solution for instance spider/manufacturer/0011 (489)
Wrong output for fuzzied solution in instance spider/manufacturer/0010 (490)
	EXPECTED OUTPUT ====

		SELECT name,
		       open_year
		FROM manufacturer
		WHERE num_of_shops > 10
		  OR Num_of_Factories < 10

	      name  open_year
	0     Dodg    2000.00
	1    Dodge    2000.01
	2    Jiaju    2000.98
	3  omorrow    1999.98
	ACTUAL OUTPUT ====

		
		SELECT name,
		       open_year
		FROM manufacturer
		WHERE (num_of_shops >= 10
		       OR num_of_shops >= num_of_factories)
		ORDER BY name

	          name  open_year
	0         Dodg    2000.00
	1        Dodge    2000.01
	2        Jiaju    2000.98
	3  RDXJiajuNfP    1991.00
	4      omorrow    1999.98
Wrong output for fuzzied solution in instance spider/twitter_1/0002 (491)
	EXPECTED OUTPUT ====

		SELECT partitionid
		FROM user_profiles
		WHERE name = 'Iron Man'

	   partitionid
	0           11
	ACTUAL OUTPUT ====

		
		SELECT `uid` AS `partitionid`
		FROM `user_profiles`
		WHERE (`name` = 'Iron Man')
		ORDER BY partitionid

	   partitionid
	0            6
Wrong output for fuzzied solution in instance spider/twitter_1/0017 (492)
	EXPECTED OUTPUT ====

		SELECT name
		FROM user_profiles
		ORDER BY followers DESC
		LIMIT 1

	        name
	0  SaQ5dMary
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM user_profiles
		      ORDER BY name DESC)
		   LIMIT 1)

	        name
	0  vIL5PMary
No solution for instance spider/twitter_1/0008 (493)
Wrong output for fuzzied solution in instance spider/twitter_1/0013 (497)
	EXPECTED OUTPUT ====

		SELECT T1.name,
		       T1.email
		FROM user_profiles AS T1
		JOIN follows AS T2 ON T1.uid = T2.f1
		GROUP BY T2.f1
		HAVING count(*) > 1

	              name                  email
	0   atalie Portman          Mary@yale.edu
	1   atalie Portman          Mary@yale.edu
	2  Natalie Portman    Y(ZVgts@richest.com
	3             Susa       cd@superstar.com
	4            Susan       cd@superstar.com
	5   atalie Portman  np@superstar.comid8qE
	ACTUAL OUTPUT ====

		
		SELECT name,
		       email
		FROM
		  (SELECT email,
		          name,
		          COUNT() AS n
		   FROM
		     (SELECT f1,
		             f2,
		             name,
		             email,
		             partitionid,
		             followers,
		             f1 AS UID
		      FROM
		        (SELECT LHS.f1 AS f1,
		                LHS.f2 AS f2,
		                RHS.name AS name,
		                RHS.email AS email,
		                RHS.partitionid AS partitionid,
		                RHS.followers AS followers
		         FROM follows AS LHS
		         INNER JOIN user_profiles AS RHS ON (LHS.f1 = RHS.uid)))
		   GROUP BY email,
		            name)
		WHERE (n != 1)
		ORDER BY name

	              name                  email
	0   atalie Portman          Mary@yale.edu
	1  Natalie Portman    Y(ZVgts@richest.com
	2             Susa       cd@superstar.com
	3            Susan       cd@superstar.com
	4   atalie Portman  np@superstar.comid8qE
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
No solution for instance spider/twitter_1/0026 (501)
Wrong output for fuzzied solution in instance spider/twitter_1/0023 (510)
	EXPECTED OUTPUT ====

		SELECT T1.name,
		       T1.partitionid
		FROM user_profiles AS T1
		JOIN tweets AS T2 ON T1.uid = T2.uid
		GROUP BY T2.uid
		HAVING count(*) < 2

	   name  partitionid
	0  Mary           -1
	ACTUAL OUTPUT ====

		
		SELECT name,
		       partitionid
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.id AS id,
		                LHS.uid AS UID,
		                LHS.text AS text,
		                LHS.createdate AS createdate,
		                LHS.name AS name,
		                LHS.email AS email,
		                LHS.partitionid AS partitionid,
		                LHS.followers AS followers,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.id AS id,
		                   LHS.uid AS UID,
		                   LHS.text AS text,
		                   LHS.createdate AS createdate,
		                   RHS.name AS name,
		                   RHS.email AS email,
		                   RHS.partitionid AS partitionid,
		                   RHS.followers AS followers
		            FROM tweets AS LHS
		            INNER JOIN user_profiles AS RHS ON (LHS.uid = RHS.uid)) AS LHS
		         INNER JOIN
		           (SELECT followers,
		                   COUNT() AS n
		            FROM user_profiles
		            GROUP BY followers) AS RHS ON (LHS.followers = RHS.followers))
		      ORDER BY followers DESC)
		   LIMIT 2)

	        name  partitionid
	0  SaQ5dMary            3
	1  SaQ5dMary            3
No solution for instance spider/twitter_1/0009 (513)
Wrong output for fuzzied solution in instance spider/twitter_1/0025 (514)
	EXPECTED OUTPUT ====

		SELECT avg(followers)
		FROM user_profiles
		WHERE UID NOT IN
		    (SELECT UID
		     FROM tweets)

	  avg(followers)
	0           None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(followers) OVER () AS avg_followers_
		FROM
		  (SELECT *
		   FROM user_profiles AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM tweets AS RHS
		        WHERE (LHS.uid = RHS.uid) ))
		ORDER BY avg_followers_

	Empty DataFrame
	Columns: [avg_followers_]
	Index: []
No solution for instance spider/twitter_1/0010 (516)
Wrong output for fuzzied solution in instance spider/party_host/0008 (518)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM HOST
		GROUP BY Nationality
		ORDER BY COUNT(*) DESC
		LIMIT 1

	     nationality
	0  United States
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT nationality
		FROM
		  (SELECT LHS.nationality AS nationality,
		          LHS.n AS n,
		          RHS.nationality AS nationality_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT nationality,
		             COUNT() AS n
		      FROM host
		      GROUP BY nationality) AS LHS
		   CROSS JOIN
		     (SELECT nationality,
		             COUNT() AS n
		      FROM host
		      GROUP BY nationality) AS RHS)
		WHERE (n > n_other)
		ORDER BY nationality

	     nationality
	0       Argentin
	1      Argentina
	2        Hungary
	3  United States
	4   hSpFp2tcUqtK
	5   nited States
Wrong output for fuzzied solution in instance spider/party_host/0013 (520)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM party_host AS T1
		JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID
		JOIN party AS T3 ON T1.Party_ID = T3.Party_ID
		WHERE T3.Number_of_hosts > 20

	                 name
	0       DeMar DeRozan
	1       DeMar DeRozan
	2        Hubert Davis
	3   R0yHnHubert Davis
	4  dYPHubert Davis1hM
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.party_id AS party_id,
		          LHS.party_theme AS party_theme,
		          LHS.location AS LOCATION,
		          LHS.first_year AS first_year,
		          LHS.last_year AS last_year,
		          LHS.number_of_hosts AS number_of_hosts,
		          LHS.host_id AS host_id,
		          LHS.name AS name,
		          LHS.nationality AS nationality,
		          LHS.age AS age,
		          RHS.is_main_in_charge AS is_main_in_charge
		   FROM
		     (SELECT LHS.party_id AS party_id,
		             LHS.party_theme AS party_theme,
		             LHS.location AS LOCATION,
		             LHS.first_year AS first_year,
		             LHS.last_year AS last_year,
		             LHS.number_of_hosts AS number_of_hosts,
		             RHS.host_id AS host_id,
		             RHS.name AS name,
		             RHS.nationality AS nationality,
		             RHS.age AS age
		      FROM party AS LHS
		      CROSS JOIN host AS RHS) AS LHS
		   INNER JOIN party_host AS RHS ON (LHS.party_id = RHS.party_id
		                                       AND LHS.host_id = RHS.host_id))
		WHERE (number_of_hosts >= 20)
		ORDER BY name

	                 name
	0       DeMar DeRozan
	1       DeMar DeRozan
	2       DeMar DeRozan
	3        Hubert Davis
	4   Hubert Davisu4)1C
	5   R0yHnHubert Davis
	6   R0yHnHubert Davis
	7  dYPHubert Davis1hM
	8  dYPHubert Davis1hM
Wrong output for fuzzied solution in instance spider/party_host/0012 (523)
	EXPECTED OUTPUT ====

		SELECT T3.Location
		FROM party_host AS T1
		JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID
		JOIN party AS T3 ON T1.Party_ID = T3.Party_ID
		WHERE T2.Age > 50

	                        location
	0        Bg(YSHemkade 48 Zaandam
	1  Heineken Music Hall Amsterdam
	2             Hemkade 48 Zaandam
	3                  RAI Amsterdam
	4        Vv6kpHemkade 48 Zaandam
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.party_id AS party_id,
		                LHS.party_theme AS party_theme,
		                LHS.location AS LOCATION,
		                LHS.first_year AS first_year,
		                LHS.last_year AS last_year,
		                LHS.number_of_hosts AS number_of_hosts,
		                LHS.host_id AS host_id,
		                LHS.name AS name,
		                LHS.nationality AS nationality,
		                LHS.age AS age,
		                RHS.is_main_in_charge AS is_main_in_charge
		         FROM
		           (SELECT LHS.party_id AS party_id,
		                   LHS.party_theme AS party_theme,
		                   LHS.location AS LOCATION,
		                   LHS.first_year AS first_year,
		                   LHS.last_year AS last_year,
		                   LHS.number_of_hosts AS number_of_hosts,
		                   RHS.host_id AS host_id,
		                   RHS.name AS name,
		                   RHS.nationality AS nationality,
		                   RHS.age AS age
		            FROM party AS LHS
		            CROSS JOIN host AS RHS) AS LHS
		         INNER JOIN party_host AS RHS ON (LHS.party_id = RHS.party_id
		                                             AND LHS.host_id = RHS.host_id))
		      ORDER BY name DESC)
		   LIMIT 1)

	             location
	0  Hemkade 48 Zaandam
Wrong output for fuzzied solution in instance spider/party_host/0009 (529)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM HOST
		WHERE Age > 45 INTERSECT
		  SELECT Nationality
		  FROM HOST WHERE Age < 35

	  nationality
	0   Argentina
	1     Hungary
	ACTUAL OUTPUT ====

		
		SELECT nationality
		FROM host
		WHERE (age = 45)
		ORDER BY nationality

	Empty DataFrame
	Columns: [nationality]
	Index: []
Wrong output for fuzzied solution in instance spider/school_player/0012 (538)
	EXPECTED OUTPUT ====

		SELECT T2.Denomination
		FROM player AS T1
		JOIN school AS T2 ON T1.School_ID = T2.School_ID
		GROUP BY T1.School_ID
		ORDER BY COUNT(*) DESC
		LIMIT 1

	    denomination
	0  CatholicX3hSC
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT denomination
		FROM
		  (SELECT LHS.school_id AS school_id,
		          LHS.school AS school,
		          LHS.location AS LOCATION,
		          LHS.enrollment AS enrollment,
		          LHS.founded AS founded,
		          LHS.denomination AS denomination,
		          LHS.boys_or_girls AS boys_or_girls,
		          LHS.day_or_boarding AS day_or_boarding,
		          LHS.year_entered_competition AS year_entered_competition,
		          LHS.school_colors AS school_colors,
		          RHS.player AS player,
		          RHS.school_id AS school_id_other
		   FROM school AS LHS
		   INNER JOIN
		     (SELECT player,
		             school_id,
		             COUNT() AS n
		      FROM player
		      GROUP BY player,
		               school_id) AS RHS ON (LHS.school_id = RHS.n))
		ORDER BY denomination

	     denomination
	0        Catholic
	1  XY1Catholic)27
	2         nglican
Wrong output for fuzzied solution in instance spider/school_player/0015 (539)
	EXPECTED OUTPUT ====

		SELECT Denomination,
		       COUNT(*)
		FROM school
		GROUP BY Denomination
		ORDER BY COUNT(*) DESC

	     denomination  count(*)
	0   CatholicX3hSC         1
	1  XY1Catholic)27         1
	2         nglican         1
	3        Anglican         3
	4        Catholic         3
	ACTUAL OUTPUT ====

		
		SELECT denomination,
		       n AS count___
		FROM
		  (SELECT day_or_boarding,
		          denomination,
		          COUNT() AS n
		   FROM school
		   GROUP BY day_or_boarding,
		            denomination)
		ORDER BY denomination

	     denomination  count___
	0        Anglican         1
	1        Catholic         1
	2   CatholicX3hSC         1
	3  XY1Catholic)27         1
	4         nglican         1
	5        Anglican         2
	6        Catholic         2
Wrong output for base solution in instance spider/school_player/0005 (540)
	EXPECTED OUTPUT ====

	   avg_enrollment_
	0      1663.333333
	ACTUAL OUTPUT ====

		SELECT avg(Enrollment)
		FROM school

	   avg(enrollment)
	0      1663.333333
Wrong output for ground truth in instance spider/school_player/0005 (540)
Wrong output for fuzzied solution in instance spider/school_player/0016 (541)
	EXPECTED OUTPUT ====

		SELECT School_Colors
		FROM school
		ORDER BY Enrollment DESC
		LIMIT 1

	     school_colors
	0  EOGlaE(QBcCutW1
	ACTUAL OUTPUT ====

		
		SELECT school_colors
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM school
		      ORDER BY boys_or_girls DESC)
		   LIMIT 1)

	         school_colors
	0  Royal Blue and Gold
Wrong output for fuzzied solution in instance spider/school_player/0018 (542)
	EXPECTED OUTPUT ====

		SELECT Denomination
		FROM school
		WHERE Founded < 1890 INTERSECT
		  SELECT Denomination
		  FROM school WHERE Founded > 1900

	Empty DataFrame
	Columns: [denomination]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT denomination
		FROM school
		WHERE (founded < 1890.0
		       AND founded <= 1900.0)
		ORDER BY denomination

	  denomination
	0     Catholic
Wrong output for fuzzied solution in instance spider/school_player/0020 (543)
	EXPECTED OUTPUT ====

		SELECT Denomination
		FROM school
		GROUP BY Denomination
		HAVING COUNT(*) > 1

	  denomination
	0     Anglican
	1     Catholic
	ACTUAL OUTPUT ====

		
		SELECT denomination
		FROM
		  (SELECT day_or_boarding,
		          denomination,
		          COUNT() AS n
		   FROM school
		   GROUP BY day_or_boarding,
		            denomination)
		WHERE (n != 1)
		ORDER BY denomination

	  denomination
	0     Catholic
	1     Catholic
Error while executing solution for instance spider/school_player/0007 (545)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT POSITION) OVER () AS count_distinct_position_
FROM player
ORDER BY count_distinct_position_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/school_player/0014 (547)
	EXPECTED OUTPUT ====

		SELECT Denomination,
		       COUNT(*)
		FROM school
		GROUP BY Denomination

	     denomination  count(*)
	0   CatholicX3hSC         1
	1  XY1Catholic)27         1
	2         nglican         1
	3        Anglican         3
	4        Catholic         3
	ACTUAL OUTPUT ====

		
		SELECT denomination,
		       n AS count___
		FROM
		  (SELECT day_or_boarding,
		          denomination,
		          COUNT() AS n
		   FROM school
		   GROUP BY day_or_boarding,
		            denomination)
		ORDER BY denomination

	     denomination  count___
	0        Anglican         1
	1        Catholic         1
	2   CatholicX3hSC         1
	3  XY1Catholic)27         1
	4         nglican         1
	5        Anglican         2
	6        Catholic         2
No solution for instance spider/customers_and_invoices/0033 (551)
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0017 (555)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       account_id
		FROM Financial_transactions

	   count(*)  account_id
	0      1186           7
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       account_id
		FROM
		  (SELECT LHS.transaction_id AS transaction_id,
		          LHS.account_id AS account_id,
		          LHS.invoice_number AS invoice_number,
		          LHS.transaction_type AS transaction_type,
		          LHS.transaction_date AS transaction_date,
		          LHS.transaction_amount AS transaction_amount,
		          LHS.transaction_comment AS transaction_comment,
		          LHS.other_transaction_details AS other_transaction_details,
		          RHS.account_id AS account_id_other,
		          RHS.invoice_number AS invoice_number_other,
		          RHS.transaction_type AS transaction_type_other,
		          RHS.transaction_amount AS transaction_amount_other,
		          RHS.transaction_comment AS transaction_comment_other,
		          RHS.other_transaction_details AS other_transaction_details_other,
		          RHS.n AS n
		   FROM financial_transactions AS LHS
		   INNER JOIN
		     (SELECT transaction_id,
		             account_id,
		             invoice_number,
		             transaction_type,
		             transaction_date,
		             transaction_amount,
		             transaction_comment,
		             other_transaction_details,
		             COUNT(*) OVER () AS n
		      FROM financial_transactions) AS RHS ON (LHS.account_id = RHS.transaction_id
		                                                 AND LHS.transaction_date = RHS.transaction_date))
		ORDER BY count___

	      count___  account_id
	0         1186           7
	1         1186           7
	2         1186           7
	3         1186           7
	4         1186           7
	...        ...         ...
	5257      1186          14
	5258      1186          14
	5259      1186          14
	5260      1186          14
	5261      1186          14
	
	[5262 rows x 2 columns]
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0039 (557)
	EXPECTED OUTPUT ====

		SELECT order_id,
		       count(DISTINCT product_id)
		FROM Order_items
		GROUP BY order_id

	   order_id  count(distinct product_id)
	0        -1                           1
	1         1                           1
	2         6                           1
	3         8                           2
	4         9                           2
	5        10                           2
	6         5                           3
	ACTUAL OUTPUT ====

		
		SELECT order_id,
		       n_distinct AS count_distinct_product_id_
		FROM
		  (SELECT order_id,
		          other_order_item_details,
		          COUNT(DISTINCT product_id) AS n_distinct
		   FROM order_items
		   GROUP BY order_id,
		            other_order_item_details)
		ORDER BY order_id

	    order_id  count_distinct_product_id_
	0         -1                           1
	1          1                           1
	2          5                           1
	3          5                           1
	4          5                           1
	5          6                           1
	6          8                           1
	7          8                           1
	8          9                           1
	9          9                           1
	10        10                           1
	11        10                           1
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0038 (558)
	EXPECTED OUTPUT ====

		SELECT T2.product_name,
		       count(*)
		FROM Order_items AS T1
		JOIN Products AS T2 ON T1.product_id = T2.product_id
		JOIN Orders AS T3 ON T3.order_id = T1.order_id
		GROUP BY T2.product_name

	             product_name  count(*)
	0     INw8RHarry Potter 2         1
	1  ROWLearning EnglishXLk         1
	2               ard Drive         2
	3        ue1Hard DriveCG3         2
	4              Hard Drive         3
	5          Harry Potter 2         3
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT product_name,
		                n AS count___
		FROM
		  (SELECT LHS.order_id AS order_id,
		          LHS.customer_id AS customer_id,
		          LHS.date_order_placed AS date_order_placed,
		          LHS.order_details AS order_details,
		          LHS.product_id AS product_id,
		          LHS.parent_product_id AS parent_product_id,
		          LHS.production_type_code AS production_type_code,
		          LHS.unit_price AS unit_price,
		          LHS.product_name AS product_name,
		          LHS.product_color AS product_color,
		          LHS.product_size AS product_size,
		          LHS.order_item_id AS order_item_id,
		          LHS.product_quantity AS product_quantity,
		          LHS.other_order_item_details AS other_order_item_details,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.order_id AS order_id,
		             LHS.customer_id AS customer_id,
		             LHS.date_order_placed AS date_order_placed,
		             LHS.order_details AS order_details,
		             LHS.product_id AS product_id,
		             LHS.parent_product_id AS parent_product_id,
		             LHS.production_type_code AS production_type_code,
		             LHS.unit_price AS unit_price,
		             LHS.product_name AS product_name,
		             LHS.product_color AS product_color,
		             LHS.product_size AS product_size,
		             RHS.order_item_id AS order_item_id,
		             RHS.product_quantity AS product_quantity,
		             RHS.other_order_item_details AS other_order_item_details
		      FROM
		        (SELECT LHS.order_id AS order_id,
		                LHS.customer_id AS customer_id,
		                LHS.date_order_placed AS date_order_placed,
		                LHS.order_details AS order_details,
		                RHS.product_id AS product_id,
		                RHS.parent_product_id AS parent_product_id,
		                RHS.production_type_code AS production_type_code,
		                RHS.unit_price AS unit_price,
		                RHS.product_name AS product_name,
		                RHS.product_color AS product_color,
		                RHS.product_size AS product_size
		         FROM orders AS LHS
		         CROSS JOIN products AS RHS) AS LHS
		      INNER JOIN order_items AS RHS ON (LHS.order_id = RHS.order_id
		                                           AND LHS.product_id = RHS.product_id)) AS LHS
		   INNER JOIN
		     (SELECT product_id,
		             COUNT() AS n
		      FROM order_items
		      GROUP BY product_id) AS RHS ON (LHS.product_id = RHS.product_id))
		ORDER BY product_name

	             product_name  count___
	0              Hard Drive         1
	1          Harry Potter 2         1
	2     INw8RHarry Potter 2         1
	3  ROWLearning EnglishXLk         1
	4              Hard Drive         2
	5               ard Drive         2
	6        ue1Hard DriveCG3         2
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0027 (560)
	EXPECTED OUTPUT ====

		SELECT invoice_number,
		       count(*)
		FROM Financial_transactions
		GROUP BY invoice_number

	    invoice_number  count(*)
	0                3        62
	1               14        66
	2               11        67
	3               16        69
	4               17        73
	5                2        77
	6                9        77
	7                1        81
	8               10        81
	9                4        83
	10              13        83
	11               8        84
	12              15        88
	13              12        95
	14               0       100
	ACTUAL OUTPUT ====

		
		SELECT invoice_number,
		       n AS count___
		FROM
		  (SELECT invoice_number,
		          transaction_comment,
		          COUNT() AS n
		   FROM financial_transactions
		   GROUP BY invoice_number,
		            transaction_comment)
		ORDER BY invoice_number

	      invoice_number  count___
	0                  0         1
	1                  0         1
	2                  0         1
	3                  0         1
	4                  0         1
	...              ...       ...
	1134              17         5
	1135               9         6
	1136               1         7
	1137              11         7
	1138               3         8
	
	[1139 rows x 2 columns]
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0022 (561)
	EXPECTED OUTPUT ====

		SELECT T2.account_name,
		       T1.account_id,
		       count(*)
		FROM Financial_transactions AS T1
		JOIN Accounts AS T2 ON T1.account_id = T2.account_id
		GROUP BY T1.account_id

	  account_name  account_id  count(*)
	0          429           7       127
	1           97           8       106
	2    nFK389MDd           9       117
	3           98          10       139
	4          429          11       131
	5    JON900ReM          12       123
	6          901          13       122
	7          901          14        98
	8          901          15       110
	9          428          16       113
	ACTUAL OUTPUT ====

		
		SELECT account_name,
		       account_id,
		       n AS count___
		FROM
		  (SELECT LHS.account_id AS account_id,
		          LHS.transaction_comment AS transaction_comment,
		          LHS.n AS n,
		          RHS.customer_id AS customer_id,
		          RHS.date_account_opened AS date_account_opened,
		          RHS.account_name AS account_name,
		          RHS.other_account_details AS other_account_details
		   FROM
		     (SELECT account_id,
		             transaction_comment,
		             COUNT() AS n
		      FROM financial_transactions
		      GROUP BY account_id,
		               transaction_comment) AS LHS
		   LEFT JOIN accounts AS RHS ON (LHS.account_id = RHS.account_id))
		ORDER BY account_name

	     account_name  account_id  count___
	0             429           7         1
	1             429           7         1
	2             429           7         1
	3             429           7         1
	4             429           7         1
	...           ...         ...       ...
	1129          428          16         1
	1130          428          16         1
	1131          428          16         1
	1132          428          16         2
	1133          428          16         3
	
	[1134 rows x 3 columns]
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0030 (562)
	EXPECTED OUTPUT ====

		SELECT T1.invoice_date,
		       T1.order_id,
		       T2.order_details
		FROM Invoices AS T1
		JOIN Orders AS T2 ON T1.order_id = T2.order_id

	           invoice_date  order_id              order_details
	0   2018-03-01 04:11:45         4                         ZZ
	1   2018-03-01 16:30:20         5                8CmJIVnUw46
	2   2018-03-01 21:33:44         2                FiUNfTbXmaa
	3   2018-03-01 23:35:07         1                           
	4   2018-03-02 05:30:47        10                     VirZx3
	5   2018-03-02 07:07:50         2                FiUNfTbXmaa
	6   2018-03-02 09:07:26         1                           
	7   2018-03-02 11:51:57        10                     VirZx3
	8   2018-03-02 16:03:53         7  Vl1FUCHuqh6TqFMf14(gwW(ON
	9   2018-03-02 22:23:36         3  Tu2f)b (hEEnP1weXNTd5RhQH
	10  2018-03-03 00:56:13         9        rFEUcz4emw q9)DEhVv
	11  2018-03-03 01:20:07         3  Tu2f)b (hEEnP1weXNTd5RhQH
	12  2018-03-03 08:50:49         3  Tu2f)b (hEEnP1weXNTd5RhQH
	13  2018-03-03 12:10:41         8                           
	14  2018-03-03 13:08:40         8                           
	ACTUAL OUTPUT ====

		
		SELECT invoice_date,
		       order_id_other AS order_id,
		       order_details
		FROM
		  (SELECT LHS.order_id AS order_id,
		          LHS.customer_id AS customer_id,
		          LHS.date_order_placed AS date_order_placed,
		          LHS.order_details AS order_details,
		          RHS.order_id AS order_id_other,
		          RHS.invoice_date AS invoice_date
		   FROM orders AS LHS
		   INNER JOIN invoices AS RHS ON (LHS.order_id = RHS.invoice_number))
		ORDER BY invoice_date

	          invoice_date  order_id              order_details
	0  2018-03-01 04:11:45         4        rFEUcz4emw q9)DEhVv
	1  2018-03-01 16:30:20         5                         ZZ
	2  2018-03-02 11:51:57        10                FiUNfTbXmaa
	3  2018-03-02 22:23:36         3  Tu2f)b (hEEnP1weXNTd5RhQH
	4  2018-03-03 00:56:13         9                           
	5  2018-03-03 01:20:07         3  7cXX(H4c0eLgSzRxFrlfmtWEs
	6  2018-03-03 12:10:41         8                           
	7  2018-03-03 13:08:40         8                     VirZx3
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0013 (563)
	EXPECTED OUTPUT ====

		SELECT T2.customer_first_name,
		       T1.customer_id
		FROM Accounts AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T1.customer_id
		HAVING count(*) >= 2

	  customer_first_name  customer_id
	0          (KGwPAbbey            6
	1           MurluLgo2           10
	2                 ita           14
	ACTUAL OUTPUT ====

		
		SELECT customer_first_name,
		       customer_id
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.other_account_details AS other_account_details,
		          LHS.n AS n,
		          RHS.customer_first_name AS customer_first_name,
		          RHS.customer_middle_initial AS customer_middle_initial,
		          RHS.customer_last_name AS customer_last_name,
		          RHS.gender AS gender,
		          RHS.email_address AS email_address,
		          RHS.login_name AS login_name,
		          RHS.login_password AS login_password,
		          RHS.phone_number AS phone_number,
		          RHS.town_city AS town_city,
		          RHS.state_county_province AS state_county_province,
		          RHS.country AS country
		   FROM
		     (SELECT *
		      FROM
		        (SELECT customer_id,
		                other_account_details,
		                COUNT() AS n
		         FROM accounts
		         GROUP BY customer_id,
		                  other_account_details)
		      WHERE (n >= 2)) AS LHS
		   INNER JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))
		ORDER BY customer_first_name

	  customer_first_name  customer_id
	0          (KGwPAbbey            6
No solution for instance spider/customers_and_invoices/0012 (566)
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0005 (569)
	EXPECTED OUTPUT ====

		SELECT T1.account_name,
		       T1.other_account_details
		FROM Accounts AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.customer_first_name = "Meaghan"
		  AND T2.customer_last_name = "Keeling"

	Empty DataFrame
	Columns: [account_name, other_account_details]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `account_name`,
		       `other_account_details`
		FROM
		  (SELECT `LHS`.`account_id` AS `account_id`,
		          `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`date_account_opened` AS `date_account_opened`,
		          `LHS`.`account_name` AS `account_name`,
		          `LHS`.`other_account_details` AS `other_account_details`,
		          `RHS`.`customer_first_name` AS `customer_first_name`,
		          `RHS`.`customer_middle_initial` AS `customer_middle_initial`,
		          `RHS`.`customer_last_name` AS `customer_last_name`,
		          `RHS`.`gender` AS `gender`,
		          `RHS`.`email_address` AS `email_address`,
		          `RHS`.`login_name` AS `login_name`,
		          `RHS`.`login_password` AS `login_password`,
		          `RHS`.`phone_number` AS `phone_number`,
		          `RHS`.`town_city` AS `town_city`,
		          `RHS`.`state_county_province` AS `state_county_province`,
		          `RHS`.`country` AS `country`
		   FROM `accounts` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `customers`
		      WHERE (`customer_first_name` = 'Meaghan'
		             OR `customer_last_name` = 'Keeling')) AS RHS ON (LHS.customer_id = RHS.customer_id))
		ORDER BY account_name

	  account_name other_account_details
	0          372                   VIP
	1    C2J901WlZ                   VIP
No solution for instance spider/customers_and_invoices/0032 (571)
Error while executing solution for instance spider/customers_and_invoices/0018 (572)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT account_id AS count___
FROM
  (SELECT transaction_id,
          account_id,
          invoice_number,
          transaction_type,
          transaction_date,
          transaction_amount,
          transaction_comment,
          other_transaction_details,
          customer_id,
          date_account_opened,
          account_name,
          other_account_details,
          transaction_id AS n_distinct
   FROM
     (SELECT LHS.transaction_id AS transaction_id,
             LHS.account_id AS account_id,
             LHS.invoice_number AS invoice_number,
             LHS.transaction_type AS transaction_type,
             LHS.transaction_date AS transaction_date,
             LHS.transaction_amount AS transaction_amount,
             LHS.transaction_comment AS transaction_comment,
             LHS.other_transaction_details AS other_transaction_details,
             RHS.customer_id AS customer_id,
             RHS.date_account_opened AS date_account_opened,
             RHS.account_name AS account_name,
             RHS.other_account_details AS other_account_details
      FROM financial_transactions AS LHS
      INNER JOIN
        (SELECT account_id,
                customer_id,
                date_account_opened,
                account_name,
                other_account_details,
                COUNT(DISTINCT account_name) OVER () AS n_distinct
         FROM accounts) AS RHS ON (LHS.account_id = RHS.account_id
                                      AND LHS.transaction_id = RHS.n_distinct)))
WHERE (account_name = 337
       OR n_distinct <= 337)
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/customers_and_invoices/0041 (573)
Wrong output for base solution in instance spider/customers_and_invoices/0035 (574)
	EXPECTED OUTPUT ====

	       product_name sum_t1_product_quantity_
	0              Arts                        5
	1        Beer Menus                        2
	2         Chocolate                        1
	3              Fans                        9
	4        Hard Drive                       10
	5    Harry Potter 2                        8
	6    Harry Potter 3                       15
	7    Harry Potter 4                        3
	8  Learning English                        5
	9                TV                        7
	ACTUAL OUTPUT ====

		SELECT T2.product_name,
		       sum(T1.product_quantity)
		FROM Order_items AS T1
		JOIN Products AS T2 ON T1.product_id = T2.product_id
		GROUP BY T2.product_name

	       product_name  sum(t1.product_quantity)
	0              Arts                         5
	1        Beer Menus                         2
	2         Chocolate                         1
	3              Fans                         9
	4        Hard Drive                        10
	5    Harry Potter 2                         8
	6    Harry Potter 3                        15
	7    Harry Potter 4                         3
	8  Learning English                         5
	9                TV                         7
Wrong output for ground truth in instance spider/customers_and_invoices/0035 (574)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
Wrong output for base solution in instance spider/customers_and_invoices/0019 (576)
	EXPECTED OUTPUT ====

	   avg_transaction_amount_  min_transaction_amount_  max_transaction_amount_  sum_transaction_amount_
	0                 1329.056                   368.46                  1979.66                 19935.84
	ACTUAL OUTPUT ====

		SELECT avg(transaction_amount),
		       min(transaction_amount),
		       max(transaction_amount),
		       sum(transaction_amount)
		FROM Financial_transactions

	   avg(transaction_amount)  min(transaction_amount)  max(transaction_amount)  sum(transaction_amount)
	0                 1329.056                   368.46                  1979.66                 19935.84
Wrong output for ground truth in instance spider/customers_and_invoices/0019 (576)
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0007 (577)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Customers
		WHERE customer_id NOT IN
		    (SELECT customer_id
		     FROM Accounts)

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT customer_id AS count___
		FROM
		  (SELECT LHS.account_id AS account_id,
		          LHS.customer_id AS customer_id,
		          LHS.date_account_opened AS date_account_opened,
		          LHS.account_name AS account_name,
		          LHS.other_account_details AS other_account_details,
		          RHS.customer_last_name AS customer_last_name,
		          RHS.town_city AS town_city
		   FROM accounts AS LHS
		   INNER JOIN
		     (SELECT customer_last_name,
		             town_city,
		             COUNT() AS n
		      FROM customers
		      GROUP BY customer_last_name,
		               town_city) AS RHS ON (LHS.account_id = RHS.n))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0034 (578)
	EXPECTED OUTPUT ====

		SELECT product_name
		FROM Products
		EXCEPT
		SELECT T1.product_name
		FROM Products AS T1
		JOIN Order_items AS T2 ON T1.product_id = T2.product_id

	             product_name
	0  6dhLearning EnglishIg7
	1             Coffee Bean
	2              offee Bean
	ACTUAL OUTPUT ====

		
		SELECT product_name
		FROM
		  (SELECT *
		   FROM products AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM order_items AS RHS
		        WHERE (LHS.product_id = RHS.product_id) ))
		ORDER BY product_name

	             product_name
	0  6dhLearning EnglishIg7
	1             Coffee Bean
	2             Coffee Bean
	3              offee Bean
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0024 (579)
	EXPECTED OUTPUT ====

		SELECT T1.account_id,
		       T2.account_name
		FROM Financial_transactions AS T1
		JOIN Accounts AS T2 ON T1.account_id = T2.account_id
		GROUP BY T1.account_id
		HAVING count(*) >= 4

	   account_id account_name
	0           7          429
	1           8           97
	2           9    nFK389MDd
	3          10           98
	4          11          429
	5          12    JON900ReM
	6          13          901
	7          14          901
	8          15          901
	9          16          428
	ACTUAL OUTPUT ====

		
		SELECT account_id,
		       account_name
		FROM
		  (SELECT *
		   FROM accounts AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT account_id,
		                     other_transaction_details,
		                     COUNT() AS n
		              FROM financial_transactions
		              GROUP BY account_id,
		                       other_transaction_details)
		           WHERE (n >= 4)) AS RHS
		        WHERE (LHS.account_id = RHS.account_id) ))
		ORDER BY account_id

	   account_id account_name
	0           7          429
	1           8           97
	2           9    nFK389MDd
	3          10           98
	4          11          429
	5          12    JON900ReM
	6          14          901
	7          15          901
Wrong output for base solution in instance spider/customers_and_invoices/0021 (580)
	EXPECTED OUTPUT ====

	  transaction_type  sum_transaction_amount_
	0          Payment                  8743.15
	1           Refund                 11192.69
	ACTUAL OUTPUT ====

		SELECT transaction_type,
		       sum(transaction_amount)
		FROM Financial_transactions
		GROUP BY transaction_type

	  transaction_type  sum(transaction_amount)
	0          Payment                  8743.15
	1           Refund                 11192.69
Wrong output for ground truth in instance spider/customers_and_invoices/0021 (580)
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0023 (581)
	EXPECTED OUTPUT ====

		SELECT account_id
		FROM Financial_transactions
		GROUP BY account_id
		ORDER BY count(*) DESC
		LIMIT 1

	   account_id
	0          10
	ACTUAL OUTPUT ====

		
		SELECT account_id
		FROM
		  (SELECT account_id,
		          other_transaction_details,
		          COUNT() AS n
		   FROM
		     (SELECT transaction_id,
		             account_id,
		             transaction_id AS invoice_number,
		             transaction_type,
		             transaction_date,
		             transaction_amount,
		             transaction_comment,
		             other_transaction_details,
		             transaction_id_other,
		             transaction_type_other,
		             transaction_date_other,
		             transaction_amount_other,
		             transaction_comment_other,
		             other_transaction_details_other
		      FROM
		        (SELECT LHS.transaction_id AS transaction_id,
		                LHS.account_id AS account_id,
		                LHS.invoice_number AS invoice_number,
		                LHS.transaction_type AS transaction_type,
		                LHS.transaction_date AS transaction_date,
		                LHS.transaction_amount AS transaction_amount,
		                LHS.transaction_comment AS transaction_comment,
		                LHS.other_transaction_details AS other_transaction_details,
		                RHS.transaction_id AS transaction_id_other,
		                RHS.transaction_type AS transaction_type_other,
		                RHS.transaction_date AS transaction_date_other,
		                RHS.transaction_amount AS transaction_amount_other,
		                RHS.transaction_comment AS transaction_comment_other,
		                RHS.other_transaction_details AS other_transaction_details_other
		         FROM financial_transactions AS LHS
		         INNER JOIN financial_transactions AS RHS ON (LHS.transaction_id = RHS.invoice_number
		                                                         AND LHS.account_id = RHS.account_id)))
		   GROUP BY account_id,
		            other_transaction_details)
		ORDER BY account_id

	     account_id
	0             7
	1             7
	2             7
	3             7
	4             7
	..          ...
	901          16
	902          16
	903          16
	904          16
	905          16
	
	[906 rows x 1 columns]
No solution for instance spider/customers_and_invoices/0011 (586)
Wrong output for base solution in instance spider/customers_and_invoices/0040 (589)
	EXPECTED OUTPUT ====

	   order_id sum_product_quantity_
	0         1                    12
	1         2                     3
	2         4                    17
	3        10                     4
	4        12                     1
	5        13                    18
	6        14                     1
	7        15                     9
	ACTUAL OUTPUT ====

		SELECT order_id,
		       sum(product_quantity)
		FROM Order_items
		GROUP BY order_id

	   order_id  sum(product_quantity)
	0         1                     12
	1         2                      3
	2         4                     17
	3        10                      4
	4        12                      1
	5        13                     18
	6        14                      1
	7        15                      9
Wrong output for ground truth in instance spider/customers_and_invoices/0040 (589)
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0028 (590)
	EXPECTED OUTPUT ====

		SELECT T2.invoice_number,
		       T2.invoice_date
		FROM Financial_transactions AS T1
		JOIN Invoices AS T2 ON T1.invoice_number = T2.invoice_number
		GROUP BY T1.invoice_number
		ORDER BY count(*) DESC
		LIMIT 1

	   invoice_number         invoice_date
	0               0  2018-03-03 01:20:07
	ACTUAL OUTPUT ====

		
		SELECT invoice_number,
		       invoice_date
		FROM
		  (SELECT LHS.invoice_number AS invoice_number,
		          LHS.order_id AS order_id,
		          LHS.invoice_date AS invoice_date,
		          RHS.transaction_type AS transaction_type
		   FROM invoices AS LHS
		   INNER JOIN
		     (SELECT invoice_number,
		             transaction_type,
		             COUNT() AS n
		      FROM financial_transactions
		      GROUP BY invoice_number,
		               transaction_type) AS RHS ON (LHS.invoice_number = RHS.invoice_number
		                                            AND LHS.order_id = RHS.n))
		ORDER BY invoice_number

	    invoice_number         invoice_date
	0                9  2018-03-01 04:11:45
	1                4  2018-03-01 16:30:20
	2               13  2018-03-01 21:33:44
	3               12  2018-03-01 23:35:07
	4               12  2018-03-01 23:35:07
	5               12  2018-03-01 23:35:07
	6               12  2018-03-01 23:35:07
	7               12  2018-03-01 23:35:07
	8               12  2018-03-01 23:35:07
	9               12  2018-03-01 23:35:07
	10              12  2018-03-01 23:35:07
	11              12  2018-03-01 23:35:07
	12              12  2018-03-01 23:35:07
	13              12  2018-03-01 23:35:07
	14              12  2018-03-01 23:35:07
	15              12  2018-03-01 23:35:07
	16              12  2018-03-01 23:35:07
	17              12  2018-03-01 23:35:07
	18              12  2018-03-01 23:35:07
	19              12  2018-03-01 23:35:07
	20              12  2018-03-01 23:35:07
	21              12  2018-03-01 23:35:07
	22              12  2018-03-01 23:35:07
	23              12  2018-03-01 23:35:07
	24              12  2018-03-01 23:35:07
	25              12  2018-03-01 23:35:07
	26              12  2018-03-01 23:35:07
	27              12  2018-03-01 23:35:07
	28              12  2018-03-01 23:35:07
	29              12  2018-03-01 23:35:07
	30              12  2018-03-01 23:35:07
	31              12  2018-03-01 23:35:07
	32              11  2018-03-02 09:07:26
	33              11  2018-03-02 09:07:26
	34              11  2018-03-02 09:07:26
	35              11  2018-03-02 09:07:26
	36              11  2018-03-02 09:07:26
	37              11  2018-03-02 09:07:26
	38              11  2018-03-02 09:07:26
	39              11  2018-03-02 09:07:26
	40              11  2018-03-02 09:07:26
	41              11  2018-03-02 09:07:26
	42              11  2018-03-02 09:07:26
	43              11  2018-03-02 09:07:26
	44              11  2018-03-02 09:07:26
	45              11  2018-03-02 09:07:26
	46              11  2018-03-02 09:07:26
	47              11  2018-03-02 09:07:26
	48              14  2018-03-03 08:50:49
	49               1  2018-03-03 12:10:41
No solution for instance spider/ship_1/0003 (595)
Wrong output for fuzzied solution in instance spider/ship_1/0022 (596)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM ship AS t1
		JOIN captain AS t2 ON t1.ship_id = t2.ship_id
		ORDER BY t2.age
		LIMIT 1

	               name
	0  HM Sloop Sparrow
	ACTUAL OUTPUT ====

		
		SELECT name_other AS name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT captain_id,
		                name,
		                captain_id AS ship_id,
		                age,
		                CLASS,
		                rank,
		                name_other,
		                TYPE,
		                built_year,
		                class_other,
		                flag
		         FROM
		           (SELECT LHS.captain_id AS captain_id,
		                   LHS.name AS name,
		                   LHS.ship_id AS ship_id,
		                   LHS.age AS age,
		                   LHS.class AS CLASS,
		                   LHS.rank AS rank,
		                   RHS.name AS name_other,
		                   RHS.type AS TYPE,
		                   RHS.built_year AS built_year,
		                   RHS.class AS class_other,
		                   RHS.flag AS flag
		            FROM captain AS LHS
		            INNER JOIN ship AS RHS ON (LHS.captain_id = RHS.ship_id)))
		      ORDER BY age)
		   LIMIT 1)

	        name
	0  HMS Undin
Wrong output for fuzzied solution in instance spider/ship_1/0006 (598)
	EXPECTED OUTPUT ====

		SELECT rank
		FROM captain
		GROUP BY rank
		ORDER BY count(*) DESC
		LIMIT 1

	               rank
	0  ugFLieutenantGi4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT rank
		FROM
		  (SELECT LHS.captain_id AS captain_id,
		          LHS.name AS name,
		          LHS.ship_id AS ship_id,
		          LHS.age AS age,
		          LHS.class AS CLASS,
		          LHS.rank AS rank,
		          RHS.name AS name_other
		   FROM captain AS LHS
		   INNER JOIN
		     (SELECT CLASS,
		             name,
		             COUNT() AS n
		      FROM captain
		      GROUP BY CLASS,
		               name) AS RHS ON (LHS.ship_id = RHS.n
		                                AND LHS.class = RHS.class))
		ORDER BY rank

	Empty DataFrame
	Columns: [rank]
	Index: []
Wrong output for fuzzied solution in instance spider/ship_1/0016 (603)
	EXPECTED OUTPUT ====

		SELECT flag
		FROM ship
		GROUP BY flag
		ORDER BY count(*) DESC
		LIMIT 1

	     flag
	0  Panama
	ACTUAL OUTPUT ====

		
		SELECT flag
		FROM
		  (SELECT LHS.class AS CLASS,
		          LHS.n AS n,
		          RHS.name AS name,
		          RHS.type AS TYPE,
		          RHS.built_year AS built_year,
		          RHS.flag AS flag
		   FROM
		     (SELECT CLASS,
		             COUNT() AS n
		      FROM ship
		      GROUP BY CLASS) AS LHS
		   INNER JOIN ship AS RHS ON (LHS.n = RHS.ship_id
		                                 AND LHS.class = RHS.class))
		ORDER BY flag

	Empty DataFrame
	Columns: [flag]
	Index: []
Wrong output for fuzzied solution in instance spider/ship_1/0018 (604)
	EXPECTED OUTPUT ====

		SELECT TYPE
		FROM ship
		WHERE flag = 'Panama' INTERSECT
		  SELECT TYPE
		  FROM ship WHERE flag = 'Malta'

	Empty DataFrame
	Columns: [type]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `type`
		FROM `ship`
		WHERE (`flag` = 'Panama'
		       AND `flag` != 'Malta')
		ORDER BY TYPE

	            type
	0        Panamax
	1         anamax
	2  ruGPanamaxb1e
Wrong output for fuzzied solution in instance spider/ship_1/0019 (606)
	EXPECTED OUTPUT ====

		SELECT built_year
		FROM ship
		GROUP BY built_year
		ORDER BY count(*) DESC
		LIMIT 1

	   built_year
	0     1997.02
	ACTUAL OUTPUT ====

		
		SELECT built_year
		FROM
		  (SELECT LHS.class AS CLASS,
		          LHS.n AS n,
		          RHS.name AS name,
		          RHS.type AS TYPE,
		          RHS.built_year AS built_year,
		          RHS.flag AS flag
		   FROM
		     (SELECT CLASS,
		             COUNT() AS n
		      FROM ship
		      GROUP BY CLASS) AS LHS
		   INNER JOIN ship AS RHS ON (LHS.n = RHS.ship_id
		                                 AND LHS.class = RHS.class))
		ORDER BY built_year

	Empty DataFrame
	Columns: [built_year]
	Index: []
No solution for instance spider/ship_1/0024 (608)
Error while executing solution for instance spider/ship_1/0001 (611)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT rank) OVER () AS count_distinct_rank_
FROM captain
ORDER BY count_distinct_rank_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for base solution in instance spider/ship_1/0009 (613)
	EXPECTED OUTPUT ====

	    avg_age_ min_age_                        class
	0  38.000000       38                      Frigate
	1  38.000000       38                 Sloop-of-war
	2  43.000000       43                       Cutter
	3  45.000000       45               Armed schooner
	4  51.333333       40  Third-rate ship of the line
	ACTUAL OUTPUT ====

		SELECT avg(age),
		       min(age),
		       CLASS
		FROM captain
		GROUP BY CLASS

	    avg(age) min(age)                        class
	0  45.000000       45               Armed schooner
	1  43.000000       43                       Cutter
	2  38.000000       38                      Frigate
	3  38.000000       38                 Sloop-of-war
	4  51.333333       40  Third-rate ship of the line
Wrong output for ground truth in instance spider/ship_1/0009 (613)
Wrong output for fuzzied solution in instance spider/ship_1/0011 (614)
	EXPECTED OUTPUT ====

		SELECT rank
		FROM captain
		EXCEPT
		SELECT rank
		FROM captain
		WHERE CLASS = 'Third-rate ship of the line'

	                       rank
	0    NOl8RBl3zRvcBO8egU(Sr9
	1      T4ntv5trukGETOvJ7tOi
	2          golCKG1FeGyPST5W
	3  ommander, junior captain
	ACTUAL OUTPUT ====

		
		SELECT `rank`
		FROM
		  (SELECT *
		   FROM `captain` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `captain`
		           WHERE (`class` = 'Third-rate ship of the line')) AS RHS
		        WHERE (LHS.rank = RHS.rank) ))
		ORDER BY rank

	                       rank
	0    NOl8RBl3zRvcBO8egU(Sr9
	1      T4ntv5trukGETOvJ7tOi
	2          golCKG1FeGyPST5W
	3  ommander, junior captain
	4  ommander, junior captain
	5  ommander, junior captain
	6  ommander, junior captain
Wrong output for fuzzied solution in instance spider/ship_1/0010 (615)
	EXPECTED OUTPUT ====

		SELECT rank
		FROM captain
		WHERE CLASS = 'Cutter' INTERSECT
		  SELECT rank
		  FROM captain WHERE CLASS = 'Armed schooner'

	Empty DataFrame
	Columns: [rank]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `rank`
		FROM `captain`
		WHERE (`class` = 'Cutter'
		       OR `class` = 'Armed schooner')
		ORDER BY rank

	                        rank
	0  Commander, junior captain
	1                 Lieutenant
No solution for instance spider/baseball_1/0033 (616)
No solution for instance spider/baseball_1/0037 (617)
Wrong output for base solution in instance spider/baseball_1/0002 (618)
	EXPECTED OUTPUT ====

	   avg_t1_salary_
	0    2.856617e+06
	ACTUAL OUTPUT ====

		SELECT avg(T1.salary)
		FROM salary AS T1
		JOIN team AS T2 ON T1.team_id = T2.team_id_br
		WHERE T2.name = 'Boston Red Stockings'

	   avg(t1.salary)
	0    2.856617e+06
Wrong output for ground truth in instance spider/baseball_1/0002 (618)
No solution for instance spider/baseball_1/0036 (619)
Wrong output for base solution in instance spider/baseball_1/0017 (620)
	EXPECTED OUTPUT ====

	      name_first name_last
	0          A. J.    Achter
	1          A. J.   Burnett
	2          A. J.      Cole
	3          A. J.     Ellis
	4          A. J.   Griffin
	...          ...       ...
	18223        NaN  Stoddard
	18224        NaN  Sullivan
	18225        NaN  Sweigert
	18226        NaN     Wills
	18227        NaN      Wood
	
	[18228 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT T1.name_first,
		       T1.name_last
		FROM player AS T1
		JOIN player_award AS T2
		WHERE T2.year = 1960 INTERSECT
		  SELECT T1.name_first,
		         T1.name_last
		  FROM player AS T1
		  JOIN player_award AS T2 WHERE T2.year = 1961

	      name_first  name_last
	0                    Boland
	1                     Booth
	2                   Carroll
	3                   Collins
	4                   Edwards
	...          ...        ...
	18223       Zinn       Beck
	18224        Zip    Collins
	18225        Zip      Zabel
	18226      Zoilo    Almonte
	18227      Zoilo  Versalles
	
	[18228 rows x 2 columns]
Wrong output for ground truth in instance spider/baseball_1/0017 (620)
No solution for instance spider/baseball_1/0008 (621)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
No solution for instance spider/baseball_1/0003 (624)
No solution for instance spider/baseball_1/0027 (625)
No solution for instance spider/baseball_1/0022 (626)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
Wrong output for base solution in instance spider/baseball_1/0006 (629)
	EXPECTED OUTPUT ====

	     year  avg_attendance_
	0    1873     0.000000e+00
	1    1876     0.000000e+00
	2    1877     0.000000e+00
	3    1878     0.000000e+00
	4    1879     0.000000e+00
	..    ...              ...
	139  2009     2.447340e+06
	140  2007     2.484490e+06
	141  2005     2.497233e+06
	142  1993     2.509234e+06
	143  2006     2.534516e+06
	
	[144 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT YEAR,
		       avg(attendance)
		FROM home_game
		GROUP BY YEAR;

	     year  avg(attendance)
	0    1873     0.000000e+00
	1    1876     0.000000e+00
	2    1877     0.000000e+00
	3    1878     0.000000e+00
	4    1879     0.000000e+00
	..    ...              ...
	139  2009     2.447340e+06
	140  2007     2.484490e+06
	141  2005     2.497233e+06
	142  1993     2.509234e+06
	143  2006     2.534516e+06
	
	[144 rows x 2 columns]
Wrong output for ground truth in instance spider/baseball_1/0006 (629)
No solution for instance spider/baseball_1/0004 (630)
Wrong output for base solution in instance spider/baseball_1/0012 (631)
	EXPECTED OUTPUT ====

	     name_first name_last
	0         A. J.    Achter
	1         A. J.   Burnett
	2         A. J.      Cole
	3         A. J.     Ellis
	4         A. J.   Griffin
	...         ...       ...
	9505        NaN  Stoddard
	9506        NaN  Sullivan
	9507        NaN  Sweigert
	9508        NaN     Wills
	9509        NaN      Wood
	
	[9510 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT name_first,
		       name_last
		FROM player
		WHERE death_year = '';

	     name_first name_last
	0                  Boland
	1                   Booth
	2                 Carroll
	3                 Collins
	4                 Edwards
	...         ...       ...
	9505        Zak   Shinall
	9506       Zane     Smith
	9507       Zeke   Spruill
	9508     Zelous   Wheeler
	9509      Zoilo   Almonte
	
	[9510 rows x 2 columns]
Wrong output for ground truth in instance spider/baseball_1/0012 (631)
No solution for instance spider/baseball_1/0026 (632)
No solution for instance spider/baseball_1/0015 (633)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
No solution for instance spider/baseball_1/0016 (635)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
Wrong output for base solution in instance spider/baseball_1/0018 (637)
	EXPECTED OUTPUT ====

	      name_first   name_last
	0          A. J.     Burnett
	1          A. J.       Ellis
	2          A. J.     Griffin
	3          A. J.       Hinch
	4          A. J.  Pierzynski
	...          ...         ...
	16044        NaN    Stoddard
	16045        NaN    Sullivan
	16046        NaN    Sweigert
	16047        NaN       Wills
	16048        NaN        Wood
	
	[16049 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT name_first,
		       name_last
		FROM player
		WHERE weight > 220
		  OR height < 75

	      name_first  name_last
	0                    Boland
	1                     Booth
	2                   Carroll
	3                   Collins
	4                   Edwards
	...          ...        ...
	16044       Zinn       Beck
	16045        Zip    Collins
	16046        Zip      Zabel
	16047      Zoilo    Almonte
	16048      Zoilo  Versalles
	
	[16049 rows x 2 columns]
Wrong output for ground truth in instance spider/baseball_1/0018 (637)
No solution for instance spider/baseball_1/0041 (638)
No solution for instance spider/baseball_1/0035 (639)
No solution for instance spider/baseball_1/0020 (640)
No solution for instance spider/baseball_1/0019 (641)
No solution for instance spider/baseball_1/0007 (642)
No solution for instance spider/baseball_1/0034 (643)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
No solution for instance spider/baseball_1/0021 (645)
No solution for instance spider/baseball_1/0001 (646)
Wrong output for base solution in instance spider/baseball_1/0014 (647)
	EXPECTED OUTPUT ====

	   avg_t1_height_
	0       59.135593
	ACTUAL OUTPUT ====

		SELECT avg(T1.height)
		FROM player AS T1
		JOIN player_college AS T2 ON T1.player_id = T2.player_id
		JOIN college AS T3 ON T3.college_id = T2.college_id
		WHERE T3.name_full = 'Yale University';

	   avg(t1.height)
	0       59.135593
Wrong output for ground truth in instance spider/baseball_1/0014 (647)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
No solution for instance spider/baseball_1/0025 (649)
No solution for instance spider/baseball_1/0011 (650)
No solution for instance spider/baseball_1/0029 (651)
No solution for instance spider/baseball_1/0010 (652)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
Wrong output for fuzzied solution in instance spider/entertainment_awards/0017 (657)
	EXPECTED OUTPUT ====

		SELECT TYPE
		FROM artwork
		GROUP BY TYPE
		ORDER BY COUNT(*) DESC
		LIMIT 1

	                       type
	0  Program Talent ShowBIQ)G
	ACTUAL OUTPUT ====

		
		SELECT TYPE
		FROM
		  (SELECT LHS.name AS name,
		          LHS.n AS n,
		          RHS.type AS TYPE
		   FROM
		     (SELECT name,
		             COUNT() AS n
		      FROM artwork
		      GROUP BY name) AS LHS
		   INNER JOIN artwork AS RHS ON (LHS.n = RHS.artwork_id
		                                    AND LHS.name = RHS.name))
		ORDER BY TYPE

	Empty DataFrame
	Columns: [type]
	Index: []
Wrong output for fuzzied solution in instance spider/entertainment_awards/0008 (658)
	EXPECTED OUTPUT ====

		SELECT avg(Num_of_Audience)
		FROM festival_detail

	   avg(num_of_audience)
	0            155.666667
	ACTUAL OUTPUT ====

		
		SELECT meannum_of_audience AS avg_num_of_audience_
		FROM
		  (SELECT LOCATION,
		          AVG(num_of_audience) AS meannum_of_audience
		   FROM festival_detail
		   GROUP BY LOCATION)
		ORDER BY avg_num_of_audience_

	   avg_num_of_audience_
	0                 154.0
	1                 155.0
	2                 158.0
No solution for instance spider/entertainment_awards/0006 (661)
Wrong output for fuzzied solution in instance spider/entertainment_awards/0018 (667)
	EXPECTED OUTPUT ====

		SELECT YEAR
		FROM festival_detail
		GROUP BY YEAR
		HAVING COUNT(*) > 1

	   year
	0  2007
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT YEAR
		FROM
		  (SELECT LHS.location AS LOCATION,
		          LHS.year AS YEAR,
		          LHS.n AS n,
		          RHS.location AS location_other,
		          RHS.year AS year_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT LOCATION,
		             YEAR,
		             COUNT() AS n
		      FROM festival_detail
		      GROUP BY LOCATION,
		               YEAR) AS LHS
		   CROSS JOIN
		     (SELECT LOCATION,
		             YEAR,
		             COUNT() AS n
		      FROM festival_detail
		      GROUP BY LOCATION,
		               YEAR) AS RHS)
		WHERE (n > n_other)
		ORDER BY YEAR

	Empty DataFrame
	Columns: [year]
	Index: []
Wrong output for fuzzied solution in instance spider/entertainment_awards/0020 (668)
	EXPECTED OUTPUT ====

		SELECT Num_of_Audience
		FROM festival_detail
		WHERE YEAR = 2008
		  OR YEAR = 2010

	   num_of_audience
	0              154
	1              161
	2              162
	ACTUAL OUTPUT ====

		
		SELECT num_of_audience
		FROM festival_detail
		WHERE (YEAR >= 2008
		       OR YEAR > 2010)
		ORDER BY num_of_audience

	   num_of_audience
	0              154
	1              160
	2              161
	3              161
	4              161
	5              162
Wrong output for fuzzied solution in instance spider/entertainment_awards/0014 (673)
	EXPECTED OUTPUT ====

		SELECT T1.Festival_ID,
		       T3.Festival_Name
		FROM nomination AS T1
		JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID
		JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID
		GROUP BY T1.Festival_ID
		HAVING COUNT(*) >= 2

	    festival_id       festival_name
	0   -7658281762      AmvPpLA Awards
	1             1        lower Awards
	2             2      aRBP5R8kFF6jND
	3             3       Flower Awards
	4             4  Flower AwardsoyteZ
	5             5   Gobel Awards)rt0d
	6             7  Flower Awardsi4)4z
	7    1118565107          MvwKdtGgFa
	8    1142455150        Flower Award
	9    1389947476       Flower Awards
	10   2458433947       Flower Awards
	11   2777846331        lower Awards
	12   3276579630      8LI04LA Awards
	13   3453123946       Flower Awards
	14   3895591655  k)EGobel Awardshkg
	15   4189765147         rfrpwGarghv
	16   5320846252  oUFGobel Awardsph8
	17   6214836392       Flower Awards
	18   6905326702  Flower AwardsU8O41
	19   7054449898         obel Awards
	20   7311886007       Flower Awards
	21   8250349213           LA Awards
	22   9919084526       Flower Awards
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT festival_id,
		                festival_name
		FROM
		  (SELECT LHS.festival_id AS festival_id,
		          LHS.festival_name AS festival_name,
		          LHS.chair_name AS chair_name,
		          LHS.location AS LOCATION,
		          LHS.year AS YEAR,
		          LHS.num_of_audience AS num_of_audience,
		          LHS.artwork_id AS artwork_id,
		          LHS.type AS TYPE,
		          LHS.name AS name,
		          LHS.result AS RESULT,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.festival_id AS festival_id,
		             LHS.festival_name AS festival_name,
		             LHS.chair_name AS chair_name,
		             LHS.location AS LOCATION,
		             LHS.year AS YEAR,
		             LHS.num_of_audience AS num_of_audience,
		             LHS.artwork_id AS artwork_id,
		             LHS.type AS TYPE,
		             LHS.name AS name,
		             RHS.result AS RESULT
		      FROM
		        (SELECT LHS.festival_id AS festival_id,
		                LHS.festival_name AS festival_name,
		                LHS.chair_name AS chair_name,
		                LHS.location AS LOCATION,
		                LHS.year AS YEAR,
		                LHS.num_of_audience AS num_of_audience,
		                RHS.artwork_id AS artwork_id,
		                RHS.type AS TYPE,
		                RHS.name AS name
		         FROM festival_detail AS LHS
		         CROSS JOIN artwork AS RHS) AS LHS
		      INNER JOIN nomination AS RHS ON (LHS.festival_id = RHS.festival_id
		                                          AND LHS.artwork_id = RHS.artwork_id)) AS LHS
		   INNER JOIN
		     (SELECT artwork_id,
		             festival_id,
		             RESULT,
		             COUNT(*) OVER () AS n
		      FROM nomination) AS RHS ON (LHS.festival_id = RHS.festival_id
		                                     AND LHS.artwork_id = RHS.artwork_id
		                                     AND LHS.result = RHS.result))
		WHERE (n >= 2)
		ORDER BY festival_id

	    festival_id       festival_name
	0   -7658281762      AmvPpLA Awards
	1             1        lower Awards
	2             2      aRBP5R8kFF6jND
	3             3       Flower Awards
	4             4  Flower AwardsoyteZ
	5             5   Gobel Awards)rt0d
	6             6       Flower Awards
	7             7  Flower Awardsi4)4z
	8    1118565107          MvwKdtGgFa
	9    1142455150        Flower Award
	10   1389947476       Flower Awards
	11   2458433947       Flower Awards
	12   2777846331        lower Awards
	13   3276579630      8LI04LA Awards
	14   3453123946       Flower Awards
	15   3895591655  k)EGobel Awardshkg
	16   4189765147         rfrpwGarghv
	17   5320846252  oUFGobel Awardsph8
	18   6214836392       Flower Awards
	19   6905326702  Flower AwardsU8O41
	20   7054449898         obel Awards
	21   7311886007       Flower Awards
	22   8250349213           LA Awards
	23   9919084526       Flower Awards
Wrong output for fuzzied solution in instance spider/store_product/0002 (677)
	EXPECTED OUTPUT ====

		SELECT max_page_size
		FROM product
		GROUP BY max_page_size
		HAVING count(*) > 3

	  max_page_size
	0            A4
	ACTUAL OUTPUT ====

		
		SELECT max_page_size
		FROM
		  (SELECT dpi,
		          max_page_size,
		          COUNT() AS n
		   FROM product
		   GROUP BY dpi,
		            max_page_size)
		WHERE (n > 3)
		ORDER BY max_page_size

	Empty DataFrame
	Columns: [max_page_size]
	Index: []
Wrong output for fuzzied solution in instance spider/store_product/0017 (678)
	EXPECTED OUTPUT ====

		SELECT product
		FROM product
		WHERE max_page_size = "A4"
		  OR pages_per_minute_color < 5

	                          product
	0           JmScanShell 3000DNhS9
	1   2vw5TXerox Travel Scanner 100
	2                 ScanShell 3000D
	3                ScanShell 3000DN
	4  WvVXerox Travel Scanner 100i3K
	5         Xerox Travel Scanner 10
	6         erox Travel Scanner 100
	ACTUAL OUTPUT ====

		
		SELECT `product`
		FROM `product`
		WHERE (`max_page_size` = 'A4'
		       AND pages_per_minute_color != 5.0)
		ORDER BY product

	                          product
	0  WvVXerox Travel Scanner 100i3K
	1         Xerox Travel Scanner 10
	2         erox Travel Scanner 100
Wrong output for fuzzied solution in instance spider/store_product/0022 (681)
	EXPECTED OUTPUT ====

		SELECT t3.District_name
		FROM store AS t1
		JOIN store_district AS t2 ON t1.store_id = t2.store_id
		JOIN district AS t3 ON t2.district_id = t3.district_id
		WHERE t1.Type = "City Mall" INTERSECT
		  SELECT t3.District_name
		  FROM store AS t1
		  JOIN store_district AS t2 ON t1.store_id = t2.store_id
		  JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.Type = "Village Store"

	Empty DataFrame
	Columns: [district_name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `district_name`
		FROM
		  (SELECT `LHS`.`store_id` AS `store_id`,
		          `LHS`.`store_name` AS `store_name`,
		          `LHS`.`type` AS `type`,
		          `LHS`.`area_size` AS `area_size`,
		          `LHS`.`number_of_product_category` AS `number_of_product_category`,
		          `LHS`.`ranking` AS `ranking`,
		          `LHS`.`district_id` AS `district_id`,
		          `LHS`.`district_name` AS `district_name`,
		          `LHS`.`headquartered_city` AS `headquartered_city`,
		          `LHS`.`city_population` AS `city_population`,
		          `LHS`.`city_area` AS `city_area`,
		          `RHS`.`store_name` AS `store_name_other`,
		          `RHS`.`area_size` AS `area_size_other`,
		          `RHS`.`number_of_product_category` AS `number_of_product_category_other`,
		          `RHS`.`ranking` AS `ranking_other`
		   FROM
		     (SELECT `LHS`.`store_id` AS `store_id`,
		             `LHS`.`store_name` AS `store_name`,
		             `LHS`.`type` AS `type`,
		             `LHS`.`area_size` AS `area_size`,
		             `LHS`.`number_of_product_category` AS `number_of_product_category`,
		             `LHS`.`ranking` AS `ranking`,
		             `LHS`.`district_id` AS `district_id`,
		             `LHS`.`district_name` AS `district_name`,
		             `LHS`.`headquartered_city` AS `headquartered_city`,
		             `LHS`.`city_population` AS `city_population`,
		             `LHS`.`city_area` AS `city_area`
		      FROM
		        (SELECT `LHS`.`store_id` AS `store_id`,
		                `LHS`.`store_name` AS `store_name`,
		                `LHS`.`type` AS `type`,
		                `LHS`.`area_size` AS `area_size`,
		                `LHS`.`number_of_product_category` AS `number_of_product_category`,
		                `LHS`.`ranking` AS `ranking`,
		                `RHS`.`district_id` AS `district_id`,
		                `RHS`.`district_name` AS `district_name`,
		                `RHS`.`headquartered_city` AS `headquartered_city`,
		                `RHS`.`city_population` AS `city_population`,
		                `RHS`.`city_area` AS `city_area`
		         FROM `store` AS `LHS`
		         CROSS JOIN `district` AS `RHS`) AS `LHS`
		      INNER JOIN `store_district` AS `RHS` ON (`LHS`.`store_id` = `RHS`.`store_id`
		                                                  AND `LHS`.`district_id` = `RHS`.`district_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `store`
		      WHERE (`type` != 'City Mall'
		             OR `type` != 'Village Store')) AS RHS ON (LHS.ranking = RHS.store_id
		                                                       AND LHS.type = RHS.type))
		ORDER BY district_name

	         district_name
	0  Bahawalpur District
Wrong output for fuzzied solution in instance spider/store_product/0013 (682)
	EXPECTED OUTPUT ====

		SELECT t3.headquartered_city
		FROM store AS t1
		JOIN store_district AS t2 ON t1.store_id = t2.store_id
		JOIN district AS t3 ON t2.district_id = t3.district_id
		GROUP BY t3.headquartered_city
		ORDER BY count(*) DESC
		LIMIT 1

	  headquartered_city
	0  Bahawalnagar City
	ACTUAL OUTPUT ====

		
		SELECT headquartered_city
		FROM
		  (SELECT LHS.district_id AS district_id,
		          LHS.district_name AS district_name,
		          LHS.headquartered_city AS headquartered_city,
		          LHS.city_population AS city_population,
		          LHS.city_area AS city_area,
		          LHS.store_id AS store_id,
		          RHS.area_size AS area_size,
		          RHS.ranking AS ranking,
		          RHS.n AS n,
		          RHS.store_name AS store_name,
		          RHS.type AS TYPE,
		          RHS.area_size_other AS area_size_other,
		          RHS.number_of_product_category AS number_of_product_category
		   FROM
		     (SELECT LHS.district_id AS district_id,
		             LHS.district_name AS district_name,
		             LHS.headquartered_city AS headquartered_city,
		             LHS.city_population AS city_population,
		             LHS.city_area AS city_area,
		             RHS.store_id AS store_id
		      FROM district AS LHS
		      INNER JOIN store_district AS RHS ON (LHS.district_id = RHS.district_id)) AS LHS
		   INNER JOIN
		     (SELECT area_size,
		             ranking,
		             n,
		             store_name,
		             TYPE,
		             area_size_other,
		             number_of_product_category,
		             n AS store_id
		      FROM
		        (SELECT LHS.area_size AS area_size,
		                LHS.ranking AS ranking,
		                LHS.n AS n,
		                RHS.store_name AS store_name,
		                RHS.type AS TYPE,
		                RHS.area_size AS area_size_other,
		                RHS.number_of_product_category AS number_of_product_category
		         FROM
		           (SELECT area_size,
		                   ranking,
		                   COUNT() AS n
		            FROM store
		            GROUP BY area_size,
		                     ranking) AS LHS
		         INNER JOIN store AS RHS ON (LHS.ranking = RHS.ranking
		                                        AND LHS.n = RHS.store_id))) AS RHS ON (LHS.store_id = RHS.store_id))
		ORDER BY headquartered_city

	        headquartered_city
	0  HQCBahawalnagar CityHFd
	1  HQCBahawalnagar CityHFd
Wrong output for fuzzied solution in instance spider/store_product/0004 (684)
	EXPECTED OUTPUT ====

		SELECT district_name
		FROM district
		WHERE city_area > 10
		  OR City_Population > 100000

	               district_name
	0        4KDOFtuGF d1YCrjkv6
	1            Chakwal Distric
	2           Chakwal District
	3           Chakwal District
	4    Dera Ghazi Khan Distric
	5   Dera Ghazi Khan District
	6   Dera Ghazi Khan District
	7   Dera Ghazi Khan District
	8   Dera Ghazi Khan District
	9   Dera Ghazi Khan District
	10     G2m04Llg1tSzk5UoQmAOu
	11       Gujranwala District
	12       Gujranwala District
	13       Gujranwala District
	14  Gujranwala DistrictONeN4
	15             Jhang Distric
	16            Jhang District
	17       asyGBJhang District
	18       bKtp2Jhang District
	19   era Ghazi Khan District
	20    hBOmuM sk(i1Ut5ZPK(jrc
	21  hLHP)Gujranwala District
	22        ujranwala District
	23  zCr2zGujranwala District
	ACTUAL OUTPUT ====

		
		SELECT district_name
		FROM district
		WHERE (city_population > 10.0
		       AND city_area != 100000.0)
		ORDER BY district_name

	               district_name
	0        4KDOFtuGF d1YCrjkv6
	1            Chakwal Distric
	2           Chakwal District
	3           Chakwal District
	4    Dera Ghazi Khan Distric
	5   Dera Ghazi Khan District
	6   Dera Ghazi Khan District
	7   Dera Ghazi Khan District
	8   Dera Ghazi Khan District
	9   Dera Ghazi Khan District
	10     G2m04Llg1tSzk5UoQmAOu
	11       Gujranwala District
	12       Gujranwala District
	13       Gujranwala District
	14  Gujranwala DistrictONeN4
	15             Jhang Distric
	16            Jhang District
	17       asyGBJhang District
	18       bKtp2Jhang District
	19   era Ghazi Khan District
	20   era Ghazi Khan District
	21    hBOmuM sk(i1Ut5ZPK(jrc
	22  hLHP)Gujranwala District
	23        ujranwala District
	24        ujranwala District
	25  zCr2zGujranwala District
Wrong output for fuzzied solution in instance spider/store_product/0012 (685)
	EXPECTED OUTPUT ====

		SELECT t3.headquartered_city,
		       count(*)
		FROM store AS t1
		JOIN store_district AS t2 ON t1.store_id = t2.store_id
		JOIN district AS t3 ON t2.district_id = t3.district_id
		GROUP BY t3.headquartered_city

	        headquartered_city  count(*)
	0  HQCBahawalnagar CityHFd         2
	1        Bahawalnagar City         5
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT headquartered_city,
		                n AS count___
		FROM
		  (SELECT LHS.store_id AS store_id,
		          LHS.store_name AS store_name,
		          LHS.type AS TYPE,
		          LHS.area_size AS area_size,
		          LHS.number_of_product_category AS number_of_product_category,
		          LHS.ranking AS ranking,
		          LHS.district_id AS district_id,
		          LHS.district_name AS district_name,
		          LHS.headquartered_city AS headquartered_city,
		          LHS.city_population AS city_population,
		          LHS.city_area AS city_area,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.store_id AS store_id,
		             LHS.store_name AS store_name,
		             LHS.type AS TYPE,
		             LHS.area_size AS area_size,
		             LHS.number_of_product_category AS number_of_product_category,
		             LHS.ranking AS ranking,
		             LHS.district_id AS district_id,
		             LHS.district_name AS district_name,
		             LHS.headquartered_city AS headquartered_city,
		             LHS.city_population AS city_population,
		             LHS.city_area AS city_area
		      FROM
		        (SELECT LHS.store_id AS store_id,
		                LHS.store_name AS store_name,
		                LHS.type AS TYPE,
		                LHS.area_size AS area_size,
		                LHS.number_of_product_category AS number_of_product_category,
		                LHS.ranking AS ranking,
		                RHS.district_id AS district_id,
		                RHS.district_name AS district_name,
		                RHS.headquartered_city AS headquartered_city,
		                RHS.city_population AS city_population,
		                RHS.city_area AS city_area
		         FROM store AS LHS
		         CROSS JOIN district AS RHS) AS LHS
		      INNER JOIN store_district AS RHS ON (LHS.store_id = RHS.store_id
		                                              AND LHS.district_id = RHS.district_id)) AS LHS
		   INNER JOIN
		     (SELECT district_id,
		             COUNT() AS n
		      FROM store_district
		      GROUP BY district_id) AS RHS ON (LHS.district_id = RHS.district_id))
		ORDER BY headquartered_city

	        headquartered_city  count___
	0        Bahawalnagar City         1
	1        Bahawalnagar City         2
	2  HQCBahawalnagar CityHFd         2
Wrong output for fuzzied solution in instance spider/store_product/0015 (686)
	EXPECTED OUTPUT ====

		SELECT t1.product
		FROM product AS t1
		JOIN store_product AS t2 ON t1.product_id = t2.product_id
		JOIN store AS t3 ON t2.store_id = t3.store_id
		WHERE t3.store_name = "Miramichi"

	                               product
	0        4ntOiXerox Travel Scanner 100
	1    Plustek MobileOffice D28 Corporat
	2   Plustek MobileOffice D28 Corporate
	3   Plustek MobileOffice D28 Corporate
	4   Plustek MobileOffice D28 Corporate
	5   Plustek MobileOffice D28 Corporate
	6                     ScanShell 3000DN
	7                     ScanShell 3000DN
	8             Xerox Travel Scanner 100
	9                      canShell 3000DN
	10                     canShell 3000DN
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `product`
		FROM
		  (SELECT `LHS`.`product_id` AS `product_id`,
		          `LHS`.`product` AS `product`,
		          `LHS`.`dimensions` AS `dimensions`,
		          `LHS`.`dpi` AS `dpi`,
		          `LHS`.`pages_per_minute_color` AS `pages_per_minute_color`,
		          `LHS`.`max_page_size` AS `max_page_size`,
		          `LHS`.`interface` AS `interface`,
		          `LHS`.`store_id` AS `store_id`,
		          `LHS`.`store_name` AS `store_name`,
		          `LHS`.`type` AS `type`,
		          `LHS`.`area_size` AS `area_size`,
		          `LHS`.`number_of_product_category` AS `number_of_product_category`,
		          `LHS`.`ranking` AS `ranking`
		   FROM
		     (SELECT `LHS`.`product_id` AS `product_id`,
		             `LHS`.`product` AS `product`,
		             `LHS`.`dimensions` AS `dimensions`,
		             `LHS`.`dpi` AS `dpi`,
		             `LHS`.`pages_per_minute_color` AS `pages_per_minute_color`,
		             `LHS`.`max_page_size` AS `max_page_size`,
		             `LHS`.`interface` AS `interface`,
		             `RHS`.`store_id` AS `store_id`,
		             `RHS`.`store_name` AS `store_name`,
		             `RHS`.`type` AS `type`,
		             `RHS`.`area_size` AS `area_size`,
		             `RHS`.`number_of_product_category` AS `number_of_product_category`,
		             `RHS`.`ranking` AS `ranking`
		      FROM `product` AS `LHS`
		      CROSS JOIN `store` AS `RHS`) AS `LHS`
		   INNER JOIN `store_product` AS `RHS` ON (`LHS`.`product_id` = `RHS`.`product_id`
		                                              AND `LHS`.`store_id` = `RHS`.`store_id`))
		WHERE (`store_name` != 'Miramichi')
		ORDER BY product

	                              product
	0       4ntOiXerox Travel Scanner 100
	1   Plustek MobileOffice D28 Corporat
	2  Plustek MobileOffice D28 Corporate
	3                    ScanShell 3000DN
	4            Xerox Travel Scanner 100
	5                     canShell 3000DN
Wrong output for fuzzied solution in instance spider/store_product/0005 (687)
	EXPECTED OUTPUT ====

		SELECT district_name
		FROM district
		ORDER BY city_population DESC
		LIMIT 1

	         district_name
	0  Bahawalpur District
	ACTUAL OUTPUT ====

		
		SELECT district_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM district
		      ORDER BY city_area DESC)
		   LIMIT 1)

	              district_name
	0  18nQmBahawalpur District
No solution for instance spider/store_product/0018 (689)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
Wrong output for fuzzied solution in instance spider/store_product/0019 (691)
	EXPECTED OUTPUT ====

		SELECT max_page_size
		FROM product
		GROUP BY max_page_size
		ORDER BY count(*) DESC
		LIMIT 1

	  max_page_size
	0            A4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT max_page_size_other AS max_page_size
		FROM
		  (SELECT LHS.interface AS interface,
		          LHS.max_page_size AS max_page_size,
		          LHS.n AS n,
		          RHS.interface AS interface_other,
		          RHS.max_page_size AS max_page_size_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT interface,
		             max_page_size,
		             COUNT() AS n
		      FROM product
		      GROUP BY interface,
		               max_page_size) AS LHS
		   CROSS JOIN
		     (SELECT interface,
		             max_page_size,
		             COUNT() AS n
		      FROM product
		      GROUP BY interface,
		               max_page_size) AS RHS)
		WHERE (n < n_other)
		ORDER BY max_page_size

	Empty DataFrame
	Columns: [max_page_size]
	Index: []
Wrong output for fuzzied solution in instance spider/store_product/0007 (692)
	EXPECTED OUTPUT ====

		SELECT sum(city_population)
		FROM district
		ORDER BY city_area DESC
		LIMIT 3

	   sum(city_population)
	0          2.857637e+09
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT SUM(city_population) OVER () AS sum_city_population_
		FROM district
		WHERE (city_population > 3.0)
		ORDER BY sum_city_population_

	   sum_city_population_
	0          1.343990e+10
No solution for instance spider/store_product/0021 (693)
Wrong output for fuzzied solution in instance spider/store_product/0001 (694)
	EXPECTED OUTPUT ====

		SELECT DISTINCT District_name
		FROM district
		ORDER BY city_area DESC

	              district_name
	0       Bahawalpur District
	1  Bahawalpur DistrictMO0MO
	2  Bahawalpur DistrictW9jZ1
	3         Hafizabad Distric
	4        Hafizabad District
	5   Hafizabad DistrictwHVqK
	ACTUAL OUTPUT ====

		
		SELECT district_name
		FROM district
		ORDER BY district_name

	               district_name
	0        Bahawalpur District
	1        Bahawalpur District
	2   Bahawalpur DistrictMO0MO
	3   Bahawalpur DistrictW9jZ1
	4          Hafizabad Distric
	5         Hafizabad District
	6         Hafizabad District
	7         Hafizabad District
	8         Hafizabad District
	9         Hafizabad District
	10        Hafizabad District
	11   Hafizabad DistrictwHVqK
Wrong output for fuzzied solution in instance spider/store_product/0014 (695)
	EXPECTED OUTPUT ====

		SELECT avg(pages_per_minute_color)
		FROM product

	   avg(pages_per_minute_color)
	0                    14.658889
	ACTUAL OUTPUT ====

		
		SELECT meanpages_per_minute_color AS avg_pages_per_minute_color_
		FROM
		  (SELECT interface,
		          AVG(pages_per_minute_color) AS meanpages_per_minute_color
		   FROM product
		   GROUP BY interface)
		ORDER BY avg_pages_per_minute_color_

	   avg_pages_per_minute_color_
	0                     4.000000
	1                     4.000000
	2                    14.656667
	3                    35.990000
Wrong output for fuzzied solution in instance spider/department_management/0013 (701)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.age
		FROM management AS T2
		JOIN head AS T1 ON T1.head_id = T2.head_id
		WHERE T2.temporary_acting = 'Yes'

	            age
	0  5.200000e+01
	1  5.201000e+01
	2  5.202000e+01
	3  6.701000e+01
	4  6.900000e+01
	5  6.902000e+01
	6  2.298111e+09
	7  9.304683e+09
	ACTUAL OUTPUT ====

		
		SELECT `age`
		FROM
		  (SELECT `LHS`.`department_id` AS `department_id`,
		          `LHS`.`head_id` AS `head_id`,
		          `LHS`.`temporary_acting` AS `temporary_acting`,
		          `RHS`.`name` AS `name`,
		          `RHS`.`born_state` AS `born_state`,
		          `RHS`.`age` AS `age`
		   FROM
		     (SELECT *
		      FROM `management`
		      WHERE (`temporary_acting` = 'Yes')) AS LHS
		   LEFT JOIN head AS RHS ON (LHS.head_id = RHS.head_id))
		ORDER BY age

	             age
	0   5.200000e+01
	1   5.200000e+01
	2   5.201000e+01
	3   5.201000e+01
	4   5.202000e+01
	5   5.202000e+01
	6   5.202000e+01
	7   6.701000e+01
	8   6.701000e+01
	9   6.900000e+01
	10  6.900000e+01
	11  6.902000e+01
	12  2.298111e+09
	13  9.304683e+09
Wrong output for fuzzied solution in instance spider/department_management/0015 (705)
	EXPECTED OUTPUT ====

		SELECT T1.department_id,
		       T1.name,
		       count(*)
		FROM management AS T2
		JOIN department AS T1 ON T1.department_id = T2.department_id
		GROUP BY T1.department_id
		HAVING count(*) > 1

	   department_id              name  count(*)
	0              7              Stat         2
	1              8             State         2
	2             14             Labor         2
	3              6  omeland Security         3
	4              9              tate         3
	5             15  omeland Security         3
	ACTUAL OUTPUT ====

		
		SELECT n AS department_id,
		       name,
		       n AS count___
		FROM
		  (SELECT department_id,
		          n,
		          name,
		          creation,
		          budget_in_billions,
		          num_employees,
		          department_id AS ranking
		   FROM
		     (SELECT LHS.department_id AS department_id,
		             LHS.n AS n,
		             RHS.name AS name,
		             RHS.creation AS creation,
		             RHS.budget_in_billions AS budget_in_billions,
		             RHS.num_employees AS num_employees
		      FROM
		        (SELECT department_id,
		                COUNT() AS n
		         FROM management
		         GROUP BY department_id) AS LHS
		      INNER JOIN department AS RHS ON (LHS.department_id = RHS.ranking
		                                          AND LHS.n = RHS.department_id)))
		ORDER BY department_id

	Empty DataFrame
	Columns: [department_id, name, count___]
	Index: []
Wrong output for base solution in instance spider/department_management/0005 (706)
	EXPECTED OUTPUT ====

	   avg_num_employees_
	0       105468.166667
	ACTUAL OUTPUT ====

		SELECT avg(num_employees)
		FROM department
		WHERE ranking BETWEEN 10 AND 15

	   avg(num_employees)
	0       105468.166667
Wrong output for ground truth in instance spider/department_management/0005 (706)
No solution for instance spider/department_management/0016 (707)
Wrong output for fuzzied solution in instance spider/department_management/0007 (708)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.creation
		FROM department AS T1
		JOIN management AS T2 ON T1.department_id = T2.department_id
		JOIN head AS T3 ON T2.head_id = T3.head_id
		WHERE T3.born_state = 'Alabama'

	     creation
	0        1890
	1        1965
	2   1966A7Y(m
	3        1978
	4  GZJ1980Tj2
	5   QtHX31966
	ACTUAL OUTPUT ====

		
		SELECT `creation`
		FROM
		  (SELECT `LHS`.`department_id` AS `department_id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`creation` AS `creation`,
		          `LHS`.`ranking` AS `ranking`,
		          `LHS`.`budget_in_billions` AS `budget_in_billions`,
		          `LHS`.`num_employees` AS `num_employees`,
		          `RHS`.`head_id` AS `head_id`,
		          `RHS`.`temporary_acting` AS `temporary_acting`,
		          `RHS`.`name` AS `name_other`,
		          `RHS`.`born_state` AS `born_state`,
		          `RHS`.`age` AS `age`
		   FROM `department` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`department_id` AS `department_id`,
		                `LHS`.`head_id` AS `head_id`,
		                `LHS`.`temporary_acting` AS `temporary_acting`,
		                `RHS`.`name` AS `name`,
		                `RHS`.`born_state` AS `born_state`,
		                `RHS`.`age` AS `age`
		         FROM `management` AS `LHS`
		         INNER JOIN `head` AS `RHS` ON (`LHS`.`head_id` = `RHS`.`head_id`))
		      WHERE (`born_state` = 'Alabama')) AS RHS ON (LHS.department_id = RHS.department_id))
		ORDER BY creation

	      creation
	0         1890
	1         1890
	2         1890
	3         1965
	4         1965
	5    1966A7Y(m
	6    1966A7Y(m
	7    1966A7Y(m
	8         1978
	9         1978
	10  GZJ1980Tj2
	11  GZJ1980Tj2
	12  GZJ1980Tj2
	13   QtHX31966
	14   QtHX31966
Wrong output for fuzzied solution in instance spider/department_management/0001 (709)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM head
		WHERE age > 56

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM head
		      WHERE (age <= 56.0)))
		ORDER BY count___

	   count___
	0         4
Wrong output for fuzzied solution in instance spider/department_management/0014 (710)
	EXPECTED OUTPUT ====

		SELECT T3.born_state
		FROM department AS T1
		JOIN management AS T2 ON T1.department_id = T2.department_id
		JOIN head AS T3 ON T2.head_id = T3.head_id
		WHERE T1.name = 'Treasury' INTERSECT
		  SELECT T3.born_state
		  FROM department AS T1
		  JOIN management AS T2 ON T1.department_id = T2.department_id
		  JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Homeland Security'

	Empty DataFrame
	Columns: [born_state]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `born_state`
		FROM
		  (SELECT `department_id`,
		          `head_id`,
		          `temporary_acting`,
		          `department_id_other`,
		          `name`,
		          `creation`,
		          `budget_in_billions`,
		          `num_employees`,
		          `name_other`,
		          `born_state`,
		          `age`,
		          `department_id` AS `ranking`
		   FROM
		     (SELECT `LHS`.`department_id` AS `department_id`,
		             `LHS`.`head_id` AS `head_id`,
		             `LHS`.`temporary_acting` AS `temporary_acting`,
		             `RHS`.`department_id` AS `department_id_other`,
		             `RHS`.`name` AS `name`,
		             `RHS`.`creation` AS `creation`,
		             `RHS`.`budget_in_billions` AS `budget_in_billions`,
		             `RHS`.`num_employees` AS `num_employees`,
		             `RHS`.`name_other` AS `name_other`,
		             `RHS`.`born_state` AS `born_state`,
		             `RHS`.`age` AS `age`
		      FROM `management` AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM
		           (SELECT `LHS`.`department_id` AS `department_id`,
		                   `LHS`.`name` AS `name`,
		                   `LHS`.`creation` AS `creation`,
		                   `LHS`.`ranking` AS `ranking`,
		                   `LHS`.`budget_in_billions` AS `budget_in_billions`,
		                   `LHS`.`num_employees` AS `num_employees`,
		                   `RHS`.`head_id` AS `head_id`,
		                   `RHS`.`name` AS `name_other`,
		                   `RHS`.`born_state` AS `born_state`,
		                   `RHS`.`age` AS `age`
		            FROM `department` AS `LHS`
		            CROSS JOIN `head` AS `RHS`)
		         WHERE (`name` != `name_other`)) AS `RHS` ON (`LHS`.`department_id` = `RHS`.`ranking`
		                                                      AND `LHS`.`head_id` = `RHS`.`head_id`)))
		WHERE (`name` != 'Treasury'
		       AND `name` = 'Homeland Security')
		ORDER BY born_state

	     born_state
	0  AlabamasHiVk
	1        lorida
Wrong output for fuzzied solution in instance spider/department_management/0009 (711)
	EXPECTED OUTPUT ====

		SELECT creation
		FROM department
		GROUP BY creation
		ORDER BY count(*) DESC
		LIMIT 1

	  creation
	0     1946
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT creation
		FROM
		  (SELECT LHS.department_id AS department_id,
		          LHS.name AS name,
		          LHS.creation AS creation,
		          LHS.ranking AS ranking,
		          LHS.budget_in_billions AS budget_in_billions,
		          LHS.num_employees AS num_employees,
		          RHS.creation AS creation_other,
		          RHS.ranking AS ranking_other
		   FROM department AS LHS
		   INNER JOIN
		     (SELECT creation,
		             ranking,
		             COUNT() AS n
		      FROM department
		      GROUP BY creation,
		               ranking) AS RHS ON (LHS.ranking = RHS.n))
		ORDER BY creation

	    creation
	0  Jw8gB1948
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
Error while executing solution for instance spider/small_bank_1/0008 (716)

The column label 'balance' is not unique.
Error while checking ground truth in instance spider/small_bank_1/0008 (716)
Error while executing solution for instance spider/small_bank_1/0022 (718)

The column label 'balance' is not unique.
Error while checking ground truth in instance spider/small_bank_1/0022 (718)
No solution for instance spider/small_bank_1/0013 (719)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
No solution for instance spider/small_bank_1/0012 (722)
Wrong output for fuzzied solution in instance spider/small_bank_1/0015 (723)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.name
		FROM accounts AS T1
		JOIN checking AS T2 ON T1.custid = T2.custid
		GROUP BY T1.name

	   count(*)           name
	0         1     (E14UWeeks
	1         1  0J2GrangerQ9B
	2         1          Brown
	3         1     BrownkjBw2
	4         1         Porter
	5         1           Wang
	6         1    ruGWeeksb1e
	7         2          Weeks
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       name
		FROM
		  (SELECT LHS.balance AS balance,
		          LHS.custid AS custid,
		          LHS.n AS n,
		          RHS.name AS name
		   FROM
		     (SELECT balance,
		             custid,
		             COUNT() AS n
		      FROM checking
		      GROUP BY balance,
		               custid) AS LHS
		   LEFT JOIN accounts AS RHS ON (LHS.custid = RHS.custid))
		ORDER BY count___

	   count___           name
	0         1     (E14UWeeks
	1         1  0J2GrangerQ9B
	2         1          Brown
	3         1     BrownkjBw2
	4         1         Porter
	5         1           Wang
	6         1          Weeks
	7         1          Weeks
	8         1    ruGWeeksb1e
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
Wrong output for fuzzied solution in instance spider/small_bank_1/0016 (725)
	EXPECTED OUTPUT ====

		SELECT sum(T2.balance),
		       T1.name
		FROM accounts AS T1
		JOIN savings AS T2 ON T1.custid = T2.custid
		GROUP BY T1.name

	   sum(t2.balance)           name
	0     2.300000e+05     (E14UWeeks
	1     2.300000e+05  0J2GrangerQ9B
	2     1.000000e+09          Brown
	3     1.000000e+09     BrownkjBw2
	4     2.300000e+05         Porter
	5     2.300000e+05           Wang
	6     1.000230e+09          Weeks
	7     2.300000e+05    ruGWeeksb1e
	ACTUAL OUTPUT ====

		
		SELECT balance AS sum_t2_balance_,
		       name
		FROM
		  (SELECT LHS.custid AS custid,
		          LHS.name AS name,
		          RHS.balance AS balance,
		          RHS.sumbalance AS sumbalance
		   FROM accounts AS LHS
		   INNER JOIN
		     (SELECT balance,
		             custid,
		             SUM(balance) AS sumbalance
		      FROM savings
		      GROUP BY balance,
		               custid) AS RHS ON (LHS.custid = RHS.custid))
		ORDER BY sum_t2_balance_

	   sum_t2_balance_           name
	0     2.300000e+05     (E14UWeeks
	1     2.300000e+05  0J2GrangerQ9B
	2     1.000000e+09          Brown
	3     1.000000e+09     BrownkjBw2
	4     2.300000e+05         Porter
	5     2.300000e+05           Wang
	6     2.300000e+05          Weeks
	7     1.000000e+09          Weeks
	8     2.300000e+05    ruGWeeksb1e
Wrong output for fuzzied solution in instance spider/small_bank_1/0018 (726)
	EXPECTED OUTPUT ====

		SELECT T3.balance
		FROM accounts AS T1
		JOIN checking AS T2 ON T1.custid = T2.custid
		JOIN savings AS T3 ON T1.custid = T3.custid
		ORDER BY T2.balance DESC
		LIMIT 1

	     balance
	0  230000.01
	ACTUAL OUTPUT ====

		
		SELECT balance_other AS balance
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.custid AS custid,
		                LHS.balance AS balance,
		                RHS.name AS name,
		                RHS.balance AS balance_other
		         FROM checking AS LHS
		         INNER JOIN
		           (SELECT LHS.custid AS custid,
		                   LHS.name AS name,
		                   RHS.balance AS balance
		            FROM accounts AS LHS
		            INNER JOIN savings AS RHS ON (LHS.custid = RHS.custid)) AS RHS ON (LHS.custid = RHS.custid))
		      ORDER BY custid)
		   LIMIT 1)

	        balance
	0  1.000000e+09
No solution for instance spider/small_bank_1/0020 (727)
No solution for instance spider/small_bank_1/0019 (728)
No solution for instance spider/small_bank_1/0007 (729)
No solution for instance spider/small_bank_1/0024 (730)
Error while executing solution for instance spider/small_bank_1/0021 (731)

The column label 'balance' is not unique.
Error while checking ground truth in instance spider/small_bank_1/0021 (731)
Wrong output for fuzzied solution in instance spider/small_bank_1/0023 (732)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM accounts AS T1
		JOIN checking AS T2 ON T1.custid = T2.custid
		JOIN savings AS T3 ON T1.custid = T3.custid
		WHERE T2.balance > T3.balance

	            name
	0          4KDOF
	1  A6WjBRBLK6kdj
	2      BHJvKWang
	3        Granger
	4           Wang
	5          Wesle
	6         zk5UoQ
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.custid AS custid,
		          LHS.name AS name,
		          LHS.balance AS balance,
		          LHS.custid_other AS custid_other,
		          RHS.balance_other AS balance_other
		   FROM
		     (SELECT LHS.custid AS custid,
		             LHS.name AS name,
		             LHS.balance AS balance,
		             RHS.custid_other AS custid_other
		      FROM
		        (SELECT LHS.custid AS custid,
		                LHS.name AS name,
		                RHS.balance AS balance
		         FROM accounts AS LHS
		         INNER JOIN savings AS RHS ON (LHS.custid = RHS.custid)) AS LHS
		      INNER JOIN
		        (SELECT LHS.custid AS custid,
		                LHS.balance AS balance,
		                RHS.custid AS custid_other
		         FROM savings AS LHS
		         INNER JOIN savings AS RHS ON (LHS.balance = RHS.balance)) AS RHS ON (LHS.custid = RHS.custid
		                                                                                 AND LHS.balance = RHS.balance)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT LHS.custid AS custid,
		                LHS.balance AS balance,
		                RHS.custid AS custid_other,
		                RHS.balance AS balance_other
		         FROM savings AS LHS
		         CROSS JOIN checking AS RHS)
		      WHERE (balance <= balance_other)) AS RHS ON (LHS.custid = RHS.custid
		                                                   AND LHS.balance = RHS.balance
		                                                   AND LHS.custid_other = RHS.custid_other))
		ORDER BY name

	             name
	0           4KDOF
	1           4KDOF
	2           4KDOF
	3   A6WjBRBLK6kdj
	4       BHJvKWang
	5       BHJvKWang
	6       BHJvKWang
	7         Granger
	8            Wang
	9            Wang
	10           Wang
	11           Wang
	12          Wesle
	13            ang
	14            ang
	15            ang
	16         zk5UoQ
No solution for instance spider/small_bank_1/0014 (734)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
Wrong output for fuzzied solution in instance spider/small_bank_1/0025 (736)
	EXPECTED OUTPUT ====

		SELECT T1.name,
		       T2.balance
		FROM accounts AS T1
		JOIN savings AS T2 ON T1.custid = T2.custid
		ORDER BY T2.balance DESC
		LIMIT 3

	         name       balance
	0  BrownkjBw2  1.000000e+09
	1       Brown  1.000000e+09
	2       Weeks  1.000000e+09
	ACTUAL OUTPUT ====

		
		SELECT name,
		       balance
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.custid AS custid,
		                LHS.name AS name,
		                RHS.balance AS balance
		         FROM accounts AS LHS
		         INNER JOIN savings AS RHS ON (LHS.custid = RHS.custid))
		      ORDER BY custid)
		   LIMIT 3)

	    name       balance
	0   Wang  2.300000e+05
	1  Weeks  2.300000e+05
	2  Brown  1.000000e+09
No solution for instance spider/small_bank_1/0010 (738)
No solution for instance spider/browser_web/0012 (746)
No solution for instance spider/browser_web/0015 (747)
No solution for instance spider/browser_web/0016 (749)
Error while executing solution for instance spider/browser_web/0018 (750)

The column label 'name' is not unique.
Error while checking ground truth in instance spider/browser_web/0018 (750)
Wrong output for fuzzied solution in instance spider/browser_web/0014 (753)
	EXPECTED OUTPUT ====

		SELECT T3.name
		FROM web_client_accelerator AS T1
		JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id
		JOIN browser AS T3 ON T2.browser_id = T3.id
		WHERE T1.name = 'CACHEbox' INTERSECT
		  SELECT T3.name
		  FROM web_client_accelerator AS T1
		  JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id
		  JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'Fasterfox'

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`market_share` AS `market_share`,
		          `RHS`.`id` AS `id_other`,
		          `RHS`.`name` AS `name_other`,
		          `RHS`.`operating_system` AS `operating_system`,
		          `RHS`.`client` AS `client`,
		          `RHS`.`connection` AS `connection`,
		          `RHS`.`compatible_since_year` AS `compatible_since_year`,
		          `RHS`.`accelerator_id` AS `accelerator_id`
		   FROM `browser` AS `LHS`
		   INNER JOIN
		     (SELECT `id`,
		             `name`,
		             `operating_system`,
		             `client`,
		             `connection`,
		             `browser_id`,
		             `compatible_since_year`,
		             `id` AS `accelerator_id`
		      FROM
		        (SELECT `LHS`.`id` AS `id`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`operating_system` AS `operating_system`,
		                `LHS`.`client` AS `client`,
		                `LHS`.`connection` AS `connection`,
		                `RHS`.`browser_id` AS `browser_id`,
		                `RHS`.`compatible_since_year` AS `compatible_since_year`
		         FROM
		           (SELECT *
		            FROM `web_client_accelerator`
		            WHERE (`name` = 'CACHEbox'
		                   AND `name` != 'Fasterfox')) AS LHS
		         INNER JOIN accelerator_compatible_browser AS RHS ON (LHS.id = RHS.accelerator_id))) AS RHS ON (LHS.id = RHS.browser_id))
		ORDER BY name

	           name
	0  9rnPfFirefox
	1       Firefox
	2         Safar
	3         Safar
	4   SafariBIQ)G
	5   SafariBIQ)G
	6   mWS9ESafari
	7   mWS9ESafari
Wrong output for fuzzied solution in instance spider/browser_web/0009 (754)
	EXPECTED OUTPUT ====

		SELECT T1.id,
		       T1.name
		FROM browser AS T1
		JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id
		GROUP BY T1.id
		ORDER BY count(*) DESC
		LIMIT 1

	   id         name
	0   5  kJl4lSafari
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT id,
		                name
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.market_share AS market_share,
		          RHS.accelerator_id AS accelerator_id,
		          RHS.browser_id AS browser_id
		   FROM browser AS LHS
		   INNER JOIN
		     (SELECT accelerator_id,
		             browser_id,
		             COUNT() AS n
		      FROM accelerator_compatible_browser
		      GROUP BY accelerator_id,
		               browser_id) AS RHS ON (LHS.id = RHS.n))
		ORDER BY id

	   id           name
	0   1  kIUFirefoxLo5
Error while executing solution for instance spider/browser_web/0011 (755)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT client) OVER () AS count_distinct_client_
FROM web_client_accelerator
ORDER BY count_distinct_client_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/browser_web/0010 (756)
Wrong output for fuzzied solution in instance spider/customer_deliveries/0002 (757)
	EXPECTED OUTPUT ====

		SELECT t1.product_name,
		       t1.product_price
		FROM products AS t1
		JOIN regular_order_products AS t2 ON t1.product_id = t2.product_id
		GROUP BY t2.product_id
		ORDER BY count(*) DESC
		LIMIT 1

	  product_name  product_price
	0         dvds        7111.66
	ACTUAL OUTPUT ====

		
		SELECT product_name,
		       product_price
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.product_id AS product_id,
		                LHS.product_name AS product_name,
		                LHS.product_price AS product_price,
		                LHS.product_description AS product_description,
		                RHS.regular_order_id AS regular_order_id,
		                RHS.n AS n
		         FROM products AS LHS
		         LEFT JOIN
		           (SELECT regular_order_id,
		                   product_id,
		                   COUNT(*) OVER () AS n
		            FROM regular_order_products) AS RHS ON (LHS.product_id = RHS.product_id))
		      ORDER BY product_name)
		   LIMIT 1)

	  product_name  product_price
	0        cloth         7111.7
Wrong output for fuzzied solution in instance spider/customer_deliveries/0013 (760)
	EXPECTED OUTPUT ====

		SELECT payment_method
		FROM Customers
		GROUP BY payment_method
		ORDER BY count(*) DESC
		LIMIT 1

	  payment_method
	0           Visa
	ACTUAL OUTPUT ====

		
		SELECT payment_method
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.payment_method AS payment_method,
		          LHS.customer_name AS customer_name,
		          LHS.customer_phone AS customer_phone,
		          LHS.customer_email AS customer_email,
		          LHS.date_became_customer AS date_became_customer,
		          RHS.customer_id AS customer_id_other
		   FROM customers AS LHS
		   INNER JOIN
		     (SELECT customer_email,
		             customer_id,
		             COUNT() AS n
		      FROM customers
		      GROUP BY customer_email,
		               customer_id) AS RHS ON (LHS.customer_id = RHS.n
		                                       AND LHS.customer_email = RHS.customer_email))
		ORDER BY payment_method

	Empty DataFrame
	Columns: [payment_method]
	Index: []
Wrong output for fuzzied solution in instance spider/customer_deliveries/0015 (764)
	EXPECTED OUTPUT ====

		SELECT t1.route_name
		FROM Delivery_Routes AS t1
		JOIN Delivery_Route_Locations AS t2 ON t1.route_id = t2.route_id
		GROUP BY t1.route_id
		ORDER BY count(*) DESC
		LIMIT 1

	                      route_name
	0  Adams, Macejkovic and Carroll
	ACTUAL OUTPUT ====

		
		SELECT route_name
		FROM
		  (SELECT LHS.route_id AS route_id,
		          LHS.route_name AS route_name,
		          LHS.other_route_details AS other_route_details,
		          LHS.location_code AS location_code,
		          LHS.location_address_id AS location_address_id,
		          LHS.location_name AS location_name
		   FROM
		     (SELECT LHS.route_id AS route_id,
		             LHS.route_name AS route_name,
		             LHS.other_route_details AS other_route_details,
		             RHS.location_code AS location_code,
		             RHS.location_address_id AS location_address_id,
		             RHS.location_name AS location_name
		      FROM delivery_routes AS LHS
		      LEFT JOIN delivery_route_locations AS RHS ON (LHS.route_id = RHS.route_id)) AS LHS
		   INNER JOIN
		     (SELECT route_id,
		             COUNT() AS n
		      FROM delivery_route_locations
		      GROUP BY route_id) AS RHS ON (LHS.route_id = RHS.route_id
		                                    AND LHS.location_address_id = RHS.n))
		ORDER BY route_name

	Empty DataFrame
	Columns: [route_name]
	Index: []
Wrong output for fuzzied solution in instance spider/customer_deliveries/0016 (766)
	EXPECTED OUTPUT ====

		SELECT t2.state_province_county,
		       count(*)
		FROM customer_addresses AS t1
		JOIN addresses AS t2 ON t1.address_id = t2.address_id
		GROUP BY t2.state_province_county

	   state_province_county  count(*)
	0          yqMrRMichigan         2
	1                Michiga         3
	2              nY8Cg5C)7         3
	3               Kentucky         4
	4          Ld8vYColorado         4
	5               Colorado         5
	6              hkoys4bxz         7
	7          MCKkjMichigan         7
	8               ab0WP7Kc         7
	9      Rt 3ofcaGmGNuVlJl         9
	10              Michigan        10
	11        kflMichigan(Bo        10
	12         Massachusetts        17
	ACTUAL OUTPUT ====

		
		SELECT state_province_county,
		       n AS count___
		FROM
		  (SELECT LHS.address_id AS address_id,
		          LHS.n AS n,
		          RHS.address_details AS address_details,
		          RHS.city AS city,
		          RHS.zip_postcode AS zip_postcode,
		          RHS.state_province_county AS state_province_county,
		          RHS.country AS country
		   FROM
		     (SELECT address_id,
		             COUNT() AS n
		      FROM customer_addresses
		      GROUP BY address_id) AS LHS
		   INNER JOIN addresses AS RHS ON (LHS.address_id = RHS.address_id))
		ORDER BY state_province_county

	   state_province_county  count___
	0          yqMrRMichigan         2
	1                Michiga         3
	2              nY8Cg5C)7         3
	3               Kentucky         4
	4          Ld8vYColorado         4
	5               Michigan         4
	6               Colorado         5
	7               Michigan         6
	8              hkoys4bxz         7
	9          MCKkjMichigan         7
	10              ab0WP7Kc         7
	11         Massachusetts         8
	12         Massachusetts         9
	13     Rt 3ofcaGmGNuVlJl         9
	14        kflMichigan(Bo        10
No solution for instance spider/customer_deliveries/0007 (767)
No solution for instance spider/customer_deliveries/0010 (772)
Wrong output for fuzzied solution in instance spider/journal_committee/0008 (775)
	EXPECTED OUTPUT ====

		SELECT Age
		FROM editor
		GROUP BY Age
		ORDER BY COUNT(*) DESC
		LIMIT 1

	    age
	0  25.0
	ACTUAL OUTPUT ====

		
		SELECT age
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT editor_id,
		                name,
		                age,
		                COUNT(*) OVER () AS n
		         FROM editor)
		      ORDER BY age DESC)
		   LIMIT 1)

	     age
	0  25.02
Wrong output for fuzzied solution in instance spider/journal_committee/0012 (780)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM journal_committee AS T1
		JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID
		JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID
		WHERE T3.Sales > 3000

	                     name
	0       Grażyna Wolszczak
	1         Mariusz Zalejsk
	2         Mariusz Zalejsk
	3        Mariusz Zalejski
	4        Mariusz Zalejski
	5        Mariusz Zalejski
	6  RCnMariusz ZalejskiDsf
	7         ariusz Zalejski
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.journal_id AS journal_id,
		          LHS.date AS date,
		          LHS.theme AS theme,
		          LHS.sales AS sales,
		          LHS.editor_id AS editor_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          RHS.work_type AS work_type
		   FROM
		     (SELECT LHS.journal_id AS journal_id,
		             LHS.date AS date,
		             LHS.theme AS theme,
		             LHS.sales AS sales,
		             RHS.editor_id AS editor_id,
		             RHS.name AS name,
		             RHS.age AS age
		      FROM journal AS LHS
		      CROSS JOIN editor AS RHS) AS LHS
		   INNER JOIN journal_committee AS RHS ON (LHS.journal_id = RHS.journal_id
		                                              AND LHS.editor_id = RHS.editor_id))
		WHERE (sales >= 3000)
		ORDER BY name

	                      name
	0        Grażyna Wolszczak
	1          Maria Góralczyk
	2          Mariusz Zalejsk
	3          Mariusz Zalejsk
	4         Mariusz Zalejski
	5         Mariusz Zalejski
	6         Mariusz Zalejski
	7         Mariusz Zalejski
	8   RCnMariusz ZalejskiDsf
	9   RCnMariusz ZalejskiDsf
	10  RCnMariusz ZalejskiDsf
	11          aria Góralczyk
	12         ariusz Zalejski
Wrong output for fuzzied solution in instance spider/journal_committee/0005 (782)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM editor
		WHERE Age = 24
		  OR Age = 25

	             name
	0  Kamila Porczyk
	1     Szymon Wydr
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM editor
		WHERE (age >= 24.0
		       AND age <= 25.0)
		ORDER BY name

	                  name
	0        Anna Powierza
	1  B4HAnna PowierzaQ(o
	2       Kamila Porczyk
	3          Szymon Wydr
Wrong output for fuzzied solution in instance spider/journal_committee/0007 (784)
	EXPECTED OUTPUT ====

		SELECT Age,
		       COUNT(*)
		FROM editor
		GROUP BY Age

	     age  count(*)
	0  21.00         2
	1  25.00         2
	2  25.01         1
	3  25.02         1
	ACTUAL OUTPUT ====

		
		SELECT age,
		       n AS count___
		FROM
		  (SELECT age,
		          editor_id,
		          COUNT() AS n
		   FROM editor
		   GROUP BY age,
		            editor_id)
		ORDER BY age

	     age  count___
	0  21.00         1
	1  21.00         1
	2  25.00         1
	3  25.00         1
	4  25.01         1
	5  25.02         1
Wrong output for fuzzied solution in instance spider/journal_committee/0014 (786)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM editor AS T1
		JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID
		GROUP BY T1.Name
		HAVING COUNT(*) >= 2

	                  name
	0         Anna Powierz
	1        Anna Powierza
	2  HQCAnna PowierzaHFd
	3   ijV6gAnna Powierza
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT age,
		          name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.editor_id AS editor_id,
		             LHS.name AS name,
		             LHS.age AS age,
		             RHS.journal_id AS journal_id,
		             RHS.work_type AS work_type
		      FROM editor AS LHS
		      INNER JOIN journal_committee AS RHS ON (LHS.editor_id = RHS.editor_id))
		   GROUP BY age,
		            name)
		WHERE (n >= 2)
		ORDER BY name

	                  name
	0         Anna Powierz
	1        Anna Powierza
	2        Anna Powierza
	3  HQCAnna PowierzaHFd
	4   ijV6gAnna Powierza
Wrong output for fuzzied solution in instance spider/journal_committee/0009 (787)
	EXPECTED OUTPUT ====

		SELECT DISTINCT Theme
		FROM journal

	                         theme
	0  2y(at Cincinnati BengalsnXL
	1   9rnPfat Cincinnati Bengals
	2    Jacksonville JaguarsBIQ)G
	3          acksonville Jaguars
	4          at Baltimore Ravens
	5     at Baltimore RavensWS9Ei
	6          at Cleveland Browns
	7         at Minnesota Vikings
	8   kIUat Minnesota VikingsLo5
	ACTUAL OUTPUT ====

		
		SELECT theme
		FROM journal
		ORDER BY theme

	                          theme
	0   2y(at Cincinnati BengalsnXL
	1    9rnPfat Cincinnati Bengals
	2     Jacksonville JaguarsBIQ)G
	3           acksonville Jaguars
	4           at Baltimore Ravens
	5           at Baltimore Ravens
	6      at Baltimore RavensWS9Ei
	7           at Cleveland Browns
	8           at Cleveland Browns
	9           at Cleveland Browns
	10         at Minnesota Vikings
	11   kIUat Minnesota VikingsLo5
No solution for instance spider/tracking_grants_for_research/0033 (790)
Error while executing solution for instance spider/tracking_grants_for_research/0037 (791)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT DISTINCT `role_code`
FROM `project_staff`
WHERE (`date_from` < parse_datetime('2003-04-19 15:06:20')
       OR `date_to` = parse_datetime('2016-03-15 00:33:18'))
ORDER BY role_code]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/tracking_grants_for_research/0002 (792)
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0036 (793)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.project_details
		FROM Projects AS T1
		JOIN Tasks AS T2 ON T1.project_id = T2.project_id
		GROUP BY T1.project_id

	   count(*) project_details
	0         1     ZTHYGbeatae
	1         1          beatae
	2         1          beatae
	3         1          beatae
	4         1           eatae
	5         1             sin
	6         2          beatae
	7         2          beatae
	8         2             int
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       project_details
		FROM
		  (SELECT LHS.project_id AS project_id,
		          LHS.task_details AS task_details,
		          LHS.n AS n,
		          RHS.organisation_id AS organisation_id,
		          RHS.project_details AS project_details
		   FROM
		     (SELECT project_id,
		             task_details,
		             COUNT() AS n
		      FROM tasks
		      GROUP BY project_id,
		               task_details) AS LHS
		   LEFT JOIN projects AS RHS ON (LHS.project_id = RHS.project_id))
		ORDER BY count___

	    count___ project_details
	0          1     ZTHYGbeatae
	1          1          beatae
	2          1          beatae
	3          1          beatae
	4          1          beatae
	5          1          beatae
	6          1          beatae
	7          1          beatae
	8          1           eatae
	9          1             int
	10         1             int
	11         1             sin
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0039 (796)
	EXPECTED OUTPUT ====

		SELECT role_code
		FROM Project_Staff
		GROUP BY role_code
		ORDER BY count(*) DESC
		LIMIT 1

	         role_code
	0  vaAmhresearcher
	ACTUAL OUTPUT ====

		
		SELECT role_code
		FROM
		  (SELECT LHS.role_code AS role_code,
		          LHS.n AS n,
		          RHS.role_code AS role_code_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT role_code,
		             COUNT() AS n
		      FROM project_staff
		      GROUP BY role_code) AS LHS
		   CROSS JOIN
		     (SELECT role_code,
		             COUNT() AS n
		      FROM project_staff
		      GROUP BY role_code) AS RHS)
		WHERE (n > n_other)
		ORDER BY role_code

	           role_code
	0   9DOresearcheroNt
	1   9DOresearcheroNt
	2   9DOresearcheroNt
	3   9DOresearcheroNt
	4   9DOresearcheroNt
	..               ...
	70   vaAmhresearcher
	71   vaAmhresearcher
	72   vaAmhresearcher
	73   vaAmhresearcher
	74   vaAmhresearcher
	
	[75 rows x 1 columns]
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0003 (798)
	EXPECTED OUTPUT ====

		SELECT sum(grant_amount)
		FROM Grants AS T1
		JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id
		JOIN organisation_Types AS T3 ON T2.organisation_type = T3.organisation_type
		WHERE T3.organisation_type_description = 'Research'

	  sum(grant_amount)
	0              None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT SUM(`grant_amount`) OVER () AS `sum_grant_amount_`
		FROM
		  (SELECT `LHS`.`grant_id` AS `grant_id`,
		          `LHS`.`organisation_id` AS `organisation_id`,
		          `LHS`.`grant_amount` AS `grant_amount`,
		          `LHS`.`grant_start_date` AS `grant_start_date`,
		          `LHS`.`grant_end_date` AS `grant_end_date`,
		          `LHS`.`other_details` AS `other_details`,
		          `LHS`.`organisation_type` AS `organisation_type`,
		          `LHS`.`organisation_details` AS `organisation_details`,
		          `RHS`.`organisation_type_description` AS `organisation_type_description`
		   FROM
		     (SELECT `LHS`.`grant_id` AS `grant_id`,
		             `LHS`.`organisation_id` AS `organisation_id`,
		             `LHS`.`grant_amount` AS `grant_amount`,
		             `LHS`.`grant_start_date` AS `grant_start_date`,
		             `LHS`.`grant_end_date` AS `grant_end_date`,
		             `LHS`.`other_details` AS `other_details`,
		             `RHS`.`organisation_type` AS `organisation_type`,
		             `RHS`.`organisation_details` AS `organisation_details`
		      FROM `grants` AS `LHS`
		      INNER JOIN `organisations` AS `RHS` ON (`LHS`.`organisation_id` = `RHS`.`organisation_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `organisation_types`
		      WHERE (`organisation_type_description` = 'Research')) AS RHS ON (LHS.organisation_type = RHS.organisation_type))
		ORDER BY sum_grant_amount_

	Empty DataFrame
	Columns: [sum_grant_amount_]
	Index: []
No solution for instance spider/tracking_grants_for_research/0022 (800)
Error while executing solution for instance spider/tracking_grants_for_research/0013 (802)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT role_code) OVER () AS count_distinct_role_code_
FROM project_staff
ORDER BY count_distinct_role_code_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/tracking_grants_for_research/0006 (803)
Error while executing solution for instance spider/tracking_grants_for_research/0004 (804)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT `date_from`,
       `date_to`
FROM
  (SELECT *
   FROM
     (SELECT `staff_id`,
             `project_id`,
             `role_code`,
             `date_from`,
             `date_to`,
             `other_details`,
             COUNT(DISTINCT `role_code`) OVER () AS `n_distinct`
      FROM `project_staff`)
   WHERE (`role_code` = 'leader'
          OR n_distinct = project_id))
WHERE (project_id > 1
       OR n_distinct != 1)
ORDER BY date_from]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/tracking_grants_for_research/0015 (807)
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0005 (808)
	EXPECTED OUTPUT ====

		SELECT T2.organisation_id,
		       T2.organisation_details
		FROM Grants AS T1
		JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id
		GROUP BY T2.organisation_id
		HAVING sum(T1.grant_amount) > 6000

	   organisation_id organisation_details
	0                3                    a
	1               12               aRNdYk
	2                5                   et
	3               11                   et
	4                6              impedit
	5                8               itaque
	6                4              kwUaQ6y
	ACTUAL OUTPUT ====

		
		SELECT organisation_id,
		       organisation_details
		FROM
		  (SELECT LHS.grant_id AS grant_id,
		          LHS.organisation_id AS organisation_id,
		          LHS.sumgrant_amount AS sumgrant_amount,
		          RHS.organisation_type AS organisation_type,
		          RHS.organisation_details AS organisation_details
		   FROM
		     (SELECT grant_id,
		             organisation_id,
		             SUM(grant_amount) AS sumgrant_amount
		      FROM grants
		      WHERE (grant_amount > 6000.0)
		      GROUP BY grant_id,
		               organisation_id) AS LHS
		   INNER JOIN organisations AS RHS ON (LHS.organisation_id = RHS.organisation_id))
		ORDER BY organisation_id

	    organisation_id organisation_details
	0                 3                    a
	1                12               aRNdYk
	2                 5                   et
	3                 5                   et
	4                11                   et
	5                11                   et
	6                11                   et
	7                 6              impedit
	8                 8               itaque
	9                 4              kwUaQ6y
	10                4              kwUaQ6y
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0016 (809)
	EXPECTED OUTPUT ====

		SELECT T1.project_id,
		       count(*)
		FROM Project_Staff AS T1
		JOIN Projects AS T2 ON T1.project_id = T2.project_id
		GROUP BY T1.project_id
		ORDER BY count(*) ASC

	    project_id  count(*)
	0           -1         1
	1            1         1
	2            4         1
	3            7         1
	4           13         1
	5           16         1
	6           17         1
	7            5         2
	8           12         2
	9           14         2
	10          15         2
	11           2         3
	12           6         3
	13           0         4
	ACTUAL OUTPUT ====

		
		SELECT project_id,
		       n AS count___
		FROM
		  (SELECT other_details,
		          project_id,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.staff_id AS staff_id,
		             LHS.project_id AS project_id,
		             LHS.role_code AS role_code,
		             LHS.date_from AS date_from,
		             LHS.date_to AS date_to,
		             LHS.other_details AS other_details,
		             RHS.organisation_id AS organisation_id,
		             RHS.project_details AS project_details
		      FROM project_staff AS LHS
		      INNER JOIN projects AS RHS ON (LHS.project_id = RHS.project_id))
		   GROUP BY other_details,
		            project_id)
		ORDER BY project_id

	    project_id  count___
	0           -1         1
	1            0         1
	2            0         1
	3            1         1
	4            2         1
	5            2         1
	6            2         1
	7            4         1
	8            5         1
	9            5         1
	10           6         1
	11           6         1
	12           6         1
	13           7         1
	14          12         1
	15          12         1
	16          13         1
	17          14         1
	18          14         1
	19          15         1
	20          15         1
	21          16         1
	22          17         1
	23           0         2
No solution for instance spider/tracking_grants_for_research/0032 (810)
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0019 (814)
	EXPECTED OUTPUT ====

		SELECT T1.project_details,
		       T1.project_id
		FROM Projects AS T1
		JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id
		GROUP BY T1.project_id
		ORDER BY count(*) DESC
		LIMIT 1

	  project_details  project_id
	0     ZTHYGbeatae          -1
	ACTUAL OUTPUT ====

		
		SELECT project_details,
		       project_id
		FROM
		  (SELECT LHS.outcome_details AS outcome_details,
		          LHS.project_id AS project_id,
		          LHS.n AS n,
		          RHS.project_details AS project_details
		   FROM
		     (SELECT outcome_details,
		             project_id,
		             COUNT() AS n
		      FROM project_outcomes
		      GROUP BY outcome_details,
		               project_id) AS LHS
		   INNER JOIN projects AS RHS ON (LHS.project_id = RHS.project_id
		                                     AND LHS.n = RHS.organisation_id))
		ORDER BY project_details

	  project_details  project_id
	0            sint          14
	1            sint          14
	2            sint          14
	3            sint          14
	4            sint          14
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0007 (815)
	EXPECTED OUTPUT ====

		SELECT T1.organisation_type
		FROM Organisations AS T1
		JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id
		GROUP BY T1.organisation_type
		ORDER BY count(*) DESC
		LIMIT 1

	  organisation_type
	0          6wChvRES
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT organisation_type
		FROM
		  (SELECT LHS.organisation_id AS organisation_id,
		          LHS.organisation_type AS organisation_type,
		          LHS.organisation_details AS organisation_details,
		          RHS.employer_organisation_id AS employer_organisation_id
		   FROM organisations AS LHS
		   INNER JOIN
		     (SELECT employer_organisation_id,
		             COUNT() AS n
		      FROM research_staff
		      GROUP BY employer_organisation_id) AS RHS ON (LHS.organisation_id = RHS.n))
		ORDER BY organisation_type

	  organisation_type
	0                ES
	1                RE
	2          RES4)l(R
No solution for instance spider/tracking_grants_for_research/0024 (817)
No solution for instance spider/tracking_grants_for_research/0021 (818)
No solution for instance spider/tracking_grants_for_research/0023 (819)
No solution for instance spider/tracking_grants_for_research/0001 (820)
Wrong output for base solution in instance spider/tracking_grants_for_research/0014 (821)
	EXPECTED OUTPUT ====

	   sum_grant_amount_  organisation_id
	0       6.084380e+05                2
	1       2.812446e+02                3
	2       6.107004e+02                5
	3       7.697781e+07                7
	4       4.280610e+01                8
	5       2.531351e+04                9
	6       3.867950e+07               10
	7       3.306339e+02               11
	8       2.001349e+06               12
	9       4.516014e+06               14
	ACTUAL OUTPUT ====

		SELECT sum(grant_amount),
		       organisation_id
		FROM Grants
		GROUP BY organisation_id

	   sum(grant_amount)  organisation_id
	0       6.084380e+05                2
	1       2.812446e+02                3
	2       6.107004e+02                5
	3       7.697781e+07                7
	4       4.280610e+01                8
	5       2.531351e+04                9
	6       3.867950e+07               10
	7       3.306339e+02               11
	8       2.001349e+06               12
	9       4.516014e+06               14
Wrong output for ground truth in instance spider/tracking_grants_for_research/0014 (821)
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0025 (823)
	EXPECTED OUTPUT ====

		SELECT grant_id,
		       count(*)
		FROM Documents
		GROUP BY grant_id
		ORDER BY count(*) DESC
		LIMIT 1

	   grant_id  count(*)
	0        13         3
	ACTUAL OUTPUT ====

		
		SELECT grant_id_other AS grant_id,
		       grant_id AS count___
		FROM
		  (SELECT LHS.grant_id AS grant_id,
		          LHS.n AS n,
		          RHS.grant_id AS grant_id_other
		   FROM
		     (SELECT grant_id,
		             COUNT() AS n
		      FROM documents
		      GROUP BY grant_id) AS LHS
		   INNER JOIN
		     (SELECT grant_id,
		             COUNT() AS n
		      FROM documents
		      GROUP BY grant_id) AS RHS ON (LHS.grant_id = RHS.n))
		ORDER BY grant_id

	   grant_id  count___
	0         0         1
	1         1         1
	2         2         1
	3         5         1
	4         9         1
	5        10         1
	6        11         1
	7        12         1
No solution for instance spider/tracking_grants_for_research/0011 (824)
Error while executing solution for instance spider/tracking_grants_for_research/0029 (825)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `n_distinct` AS `count___`
FROM
  (SELECT COUNT(DISTINCT `date_from`) AS `n_distinct`
   FROM
     (SELECT *
      FROM `project_staff`
      WHERE (`role_code` = 'leader'
             OR `date_from` < parse_datetime('1989-04-24 23:51:54'))))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0028 (827)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Project_outcomes
		WHERE outcome_code = 'Patent'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `outcome_code`,
		          COUNT() AS `n`
		   FROM `project_outcomes`
		   GROUP BY `outcome_code`)
		WHERE (`outcome_code` = 'Patent')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_16577.sqlite3'
Wrong output for fuzzied solution in instance spider/epinions_1/0026 (838)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM useracct AS T1
		JOIN trust AS T2 ON T1.u_id = T2.target_u_id
		ORDER BY trust
		LIMIT 1

	        name
	0  MarkLJFWa
	ACTUAL OUTPUT ====

		
		SELECT name_other AS name
		FROM
		  (SELECT LHS.u_id AS u_id,
		          LHS.name AS name,
		          LHS.source_u_id AS source_u_id,
		          LHS.target_u_id AS target_u_id,
		          LHS.trust AS trust,
		          RHS.u_id AS u_id_other,
		          RHS.name AS name_other,
		          RHS.trust AS trust_other
		   FROM
		     (SELECT u_id,
		             name,
		             source_u_id,
		             target_u_id,
		             u_id AS trust
		      FROM
		        (SELECT LHS.u_id AS u_id,
		                LHS.name AS name,
		                RHS.source_u_id AS source_u_id,
		                RHS.target_u_id AS target_u_id
		         FROM useracct AS LHS
		         INNER JOIN trust AS RHS ON (LHS.u_id = RHS.trust))) AS LHS
		   INNER JOIN
		     (SELECT u_id,
		             name,
		             source_u_id,
		             target_u_id,
		             u_id AS trust
		      FROM
		        (SELECT LHS.u_id AS u_id,
		                LHS.name AS name,
		                RHS.source_u_id AS source_u_id,
		                RHS.target_u_id AS target_u_id
		         FROM useracct AS LHS
		         INNER JOIN trust AS RHS ON (LHS.u_id = RHS.trust))) AS RHS ON (LHS.target_u_id = RHS.target_u_id
		                                                                           AND LHS.trust = RHS.source_u_id))
		ORDER BY name

	          name
	0   G4vRoxiT90
	1   G4vRoxiT90
	2   G4vRoxiT90
	3   G4vRoxiT90
	4   G4vRoxiT90
	..         ...
	76        Roxi
	77   z6 NvMark
	78   z6 NvMark
	79   z6 NvMark
	80   z6 NvMark
	
	[81 rows x 1 columns]
Wrong output for fuzzied solution in instance spider/epinions_1/0015 (839)
	EXPECTED OUTPUT ====

		SELECT T1.title
		FROM item AS T1
		JOIN review AS T2 ON T1.i_id = T2.i_id
		WHERE T2.rank > 3 INTERSECT
		  SELECT T1.title
		  FROM item AS T1
		  JOIN review AS T2 ON T1.i_id = T2.i_id
		GROUP BY T2.i_id
		HAVING avg(T2.rating) > 5

	           title
	0    7hcappleQ8b
	1         EisOYN
	2          apple
	3   c1C3Nshampoo
	4          gMsaw
	5           pear
	6      peargMVnm
	7         shampo
	8        shampoo
	9   shampooy0TVi
	10      tbGweS8x
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT title
		FROM
		  (SELECT LHS.i_id AS i_id,
		          LHS.title AS title,
		          LHS.rank AS rank,
		          LHS.meanrating AS meanrating,
		          RHS.a_id AS a_id,
		          RHS.u_id AS u_id,
		          RHS.rating AS rating
		   FROM
		     (SELECT LHS.i_id AS i_id,
		             LHS.title AS title,
		             RHS.rank AS rank,
		             RHS.meanrating AS meanrating
		      FROM item AS LHS
		      INNER JOIN
		        (SELECT i_id,
		                rank,
		                AVG(rating) AS meanrating
		         FROM review
		         GROUP BY i_id,
		                  rank) AS RHS ON (LHS.i_id = RHS.i_id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM review
		      WHERE (rank > 3
		             AND rating > 5)) AS RHS ON (LHS.i_id = RHS.i_id
		                                         AND LHS.rank = RHS.rank))
		ORDER BY title

	            title
	0     7hcappleQ8b
	1          EisOYN
	2   HuYshampooZ(C
	3           apple
	4    c1C3Nshampoo
	5            pear
	6       peargMVnm
	7          shampo
	8         shampoo
	9    shampooy0TVi
	10       tbGweS8x
Wrong output for base solution in instance spider/epinions_1/0005 (840)
	EXPECTED OUTPUT ====

	   avg_rating_  max_rating_
	0     7.142857           10
	ACTUAL OUTPUT ====

		SELECT avg(rating),
		       max(rating)
		FROM review

	   avg(rating)  max(rating)
	0     7.142857           10
Wrong output for ground truth in instance spider/epinions_1/0005 (840)
Wrong output for fuzzied solution in instance spider/epinions_1/0016 (841)
	EXPECTED OUTPUT ====

		SELECT T1.title
		FROM item AS T1
		JOIN review AS T2 ON T1.i_id = T2.i_id
		GROUP BY T2.i_id
		ORDER BY avg(T2.rating)
		LIMIT 1

	     title
	0  shampoo
	ACTUAL OUTPUT ====

		
		SELECT title_other AS title
		FROM
		  (SELECT i_id,
		          title,
		          a_id,
		          i_id AS u_id,
		          rating,
		          rank,
		          meanrating,
		          i_id_other,
		          title_other,
		          a_id_other,
		          rating_other,
		          meanrating_other
		   FROM
		     (SELECT LHS.i_id AS i_id,
		             LHS.title AS title,
		             LHS.a_id AS a_id,
		             LHS.u_id AS u_id,
		             LHS.rating AS rating,
		             LHS.rank AS rank,
		             LHS.meanrating AS meanrating,
		             RHS.i_id AS i_id_other,
		             RHS.title AS title_other,
		             RHS.a_id AS a_id_other,
		             RHS.rating AS rating_other,
		             RHS.meanrating AS meanrating_other
		      FROM
		        (SELECT LHS.i_id AS i_id,
		                LHS.title AS title,
		                LHS.a_id AS a_id,
		                LHS.u_id AS u_id,
		                LHS.rating AS rating,
		                LHS.rank AS rank,
		                RHS.meanrating AS meanrating
		         FROM
		           (SELECT LHS.i_id AS i_id,
		                   LHS.title AS title,
		                   RHS.a_id AS a_id,
		                   RHS.u_id AS u_id,
		                   RHS.rating AS rating,
		                   RHS.rank AS rank
		            FROM item AS LHS
		            INNER JOIN review AS RHS ON (LHS.i_id = RHS.i_id)) AS LHS
		         INNER JOIN
		           (SELECT i_id,
		                   AVG(rating) AS meanrating
		            FROM review
		            GROUP BY i_id) AS RHS ON (LHS.i_id = RHS.i_id)) AS LHS
		      INNER JOIN
		        (SELECT LHS.i_id AS i_id,
		                LHS.title AS title,
		                LHS.a_id AS a_id,
		                LHS.u_id AS u_id,
		                LHS.rating AS rating,
		                LHS.rank AS rank,
		                RHS.meanrating AS meanrating
		         FROM
		           (SELECT LHS.i_id AS i_id,
		                   LHS.title AS title,
		                   RHS.a_id AS a_id,
		                   RHS.u_id AS u_id,
		                   RHS.rating AS rating,
		                   RHS.rank AS rank
		            FROM item AS LHS
		            INNER JOIN review AS RHS ON (LHS.i_id = RHS.i_id)) AS LHS
		         INNER JOIN
		           (SELECT i_id,
		                   AVG(rating) AS meanrating
		            FROM review
		            GROUP BY i_id) AS RHS ON (LHS.i_id = RHS.i_id)) AS RHS ON (LHS.i_id = RHS.u_id
		                                                                       AND LHS.rating = RHS.rank)))
		ORDER BY title

	Empty DataFrame
	Columns: [title]
	Index: []
Wrong output for fuzzied solution in instance spider/epinions_1/0018 (842)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM useracct AS T1
		JOIN review AS T2 ON T1.u_id = T2.u_id
		GROUP BY T2.u_id
		ORDER BY count(*) DESC
		LIMIT 1

	    name
	0  Emily
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.a_id AS a_id,
		          LHS.u_id AS u_id,
		          LHS.i_id AS i_id,
		          LHS.rating AS rating,
		          LHS.rank AS rank,
		          RHS.name AS name
		   FROM review AS LHS
		   INNER JOIN
		     (SELECT u_id,
		             name,
		             COUNT(*) OVER () AS n
		      FROM useracct) AS RHS ON (LHS.a_id = RHS.n
		                                   AND LHS.u_id = RHS.u_id))
		ORDER BY name

	    name
	0  Terry
Wrong output for fuzzied solution in instance spider/epinions_1/0020 (843)
	EXPECTED OUTPUT ====

		SELECT T1.title,
		       T1.i_id
		FROM item AS T1
		JOIN review AS T2 ON T1.i_id = T2.i_id
		GROUP BY T2.i_id
		ORDER BY avg(T2.rank) DESC
		LIMIT 1

	  title  i_id
	0  comb     0
	ACTUAL OUTPUT ====

		
		SELECT title,
		       rank AS i_id
		FROM
		  (SELECT LHS.rank AS rank,
		          LHS.rating AS rating,
		          LHS.meanrank AS meanrank,
		          LHS.u_id AS u_id,
		          LHS.i_id AS i_id,
		          LHS.rating_other AS rating_other,
		          LHS.a_id AS a_id,
		          RHS.title AS title
		   FROM
		     (SELECT rank,
		             rating,
		             meanrank,
		             u_id,
		             i_id,
		             rating_other,
		             rank AS a_id
		      FROM
		        (SELECT rating AS rank,
		                rating,
		                meanrank,
		                u_id,
		                i_id,
		                rating_other
		         FROM
		           (SELECT LHS.rank AS rank,
		                   LHS.rating AS rating,
		                   LHS.meanrank AS meanrank,
		                   RHS.u_id AS u_id,
		                   RHS.i_id AS i_id,
		                   RHS.rating AS rating_other
		            FROM
		              (SELECT rank,
		                      rating,
		                      AVG(rank) AS meanrank
		               FROM review
		               GROUP BY rank,
		                        rating) AS LHS
		            INNER JOIN review AS RHS ON (LHS.rating = RHS.rank
		                                            AND LHS.rank = RHS.a_id)))) AS LHS
		   INNER JOIN item AS RHS ON (LHS.i_id = RHS.i_id))
		ORDER BY title

	  title  i_id
	0  comb     6
Wrong output for fuzzied solution in instance spider/epinions_1/0019 (844)
	EXPECTED OUTPUT ====

		SELECT T1.title,
		       T1.i_id
		FROM item AS T1
		JOIN review AS T2 ON T1.i_id = T2.i_id
		GROUP BY T2.i_id
		ORDER BY avg(T2.rating) DESC
		LIMIT 1

	  title  i_id
	0  comb     0
	ACTUAL OUTPUT ====

		
		SELECT title,
		       a_id AS i_id
		FROM
		  (SELECT LHS.a_id AS a_id,
		          LHS.u_id AS u_id,
		          LHS.i_id AS i_id,
		          LHS.rating AS rating,
		          LHS.rank AS rank,
		          RHS.title AS title,
		          RHS.meanrating AS meanrating,
		          RHS.a_id AS a_id_other
		   FROM review AS LHS
		   INNER JOIN
		     (SELECT i_id,
		             title,
		             rating,
		             meanrating,
		             i_id AS a_id
		      FROM
		        (SELECT LHS.i_id AS i_id,
		                LHS.title AS title,
		                RHS.rating AS rating,
		                RHS.meanrating AS meanrating
		         FROM item AS LHS
		         INNER JOIN
		           (SELECT a_id,
		                   rating,
		                   AVG(rating) AS meanrating
		            FROM review
		            GROUP BY a_id,
		                     rating) AS RHS ON (LHS.i_id = RHS.a_id))) AS RHS ON (LHS.i_id = RHS.i_id
		                                                                          AND LHS.rank = RHS.rating))
		ORDER BY title

	         title  i_id
	0  9rnPforange     7
Wrong output for fuzzied solution in instance spider/epinions_1/0024 (846)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM useracct AS T1
		JOIN trust AS T2 ON T1.u_id = T2.source_u_id
		GROUP BY T2.source_u_id
		ORDER BY avg(trust) DESC
		LIMIT 1

	        name
	0  MarkFHAwK
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.u_id AS u_id,
		          LHS.name AS name,
		          RHS.target_u_id AS target_u_id,
		          RHS.trust AS trust,
		          RHS.trust_other AS trust_other,
		          RHS.meantrust AS meantrust
		   FROM useracct AS LHS
		   INNER JOIN
		     (SELECT source_u_id,
		             target_u_id,
		             trust,
		             trust_other,
		             AVG(trust) OVER () AS meantrust
		      FROM
		        (SELECT source_u_id,
		                trust AS target_u_id,
		                trust,
		                trust_other
		         FROM
		           (SELECT target_u_id AS source_u_id,
		                   target_u_id,
		                   trust,
		                   trust_other
		            FROM
		              (SELECT LHS.source_u_id AS source_u_id,
		                      LHS.target_u_id AS target_u_id,
		                      LHS.trust AS trust,
		                      RHS.trust AS trust_other
		               FROM trust AS LHS
		               INNER JOIN trust AS RHS ON (LHS.target_u_id = RHS.source_u_id
		                                              AND LHS.trust = RHS.target_u_id))))) AS RHS ON (LHS.u_id = RHS.source_u_id))
		ORDER BY name

	           name
	0    G4vRoxiT90
	1    G4vRoxiT90
	2    G4vRoxiT90
	3    G4vRoxiT90
	4    G4vRoxiT90
	..          ...
	122   z6 NvMark
	123   z6 NvMark
	124   z6 NvMark
	125   z6 NvMark
	126   z6 NvMark
	
	[127 rows x 1 columns]
Wrong output for base solution in instance spider/epinions_1/0021 (847)
	EXPECTED OUTPUT ====

	    name  avg_t2_rating_
	0   Mark        7.000000
	1  Helen        7.333333
	ACTUAL OUTPUT ====

		SELECT T1.name,
		       avg(T2.rating)
		FROM useracct AS T1
		JOIN review AS T2 ON T1.u_id = T2.u_id
		GROUP BY T2.u_id

	    name  avg(t2.rating)
	0   Mark        7.000000
	1  Helen        7.333333
Wrong output for ground truth in instance spider/epinions_1/0021 (847)
Wrong output for fuzzied solution in instance spider/epinions_1/0023 (848)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM useracct AS T1
		JOIN review AS T2 ON T1.u_id = T2.u_id
		ORDER BY T2.rating DESC
		LIMIT 1

	   name
	0  Roxi
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.u_id AS u_id,
		          LHS.name AS name,
		          RHS.a_id AS a_id,
		          RHS.u_id AS u_id_other,
		          RHS.rating AS rating,
		          RHS.rank AS rank
		   FROM
		     (SELECT *
		      FROM useracct AS LHS
		      WHERE EXISTS
		          (SELECT 1
		           FROM review AS RHS
		           WHERE (LHS.u_id = RHS.u_id) )) AS LHS
		   INNER JOIN review AS RHS ON (LHS.u_id = RHS.i_id))
		ORDER BY name

	    name
	0  Nancy
	1  Rosie
Wrong output for fuzzied solution in instance spider/epinions_1/0009 (850)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM item
		WHERE i_id NOT IN
		    (SELECT i_id
		     FROM review)

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n_distinct AS count___
		FROM
		  (SELECT u_id,
		          COUNT(DISTINCT i_id) AS n_distinct
		   FROM
		     (SELECT LHS.a_id AS a_id,
		             LHS.u_id AS u_id,
		             LHS.i_id AS i_id,
		             LHS.rating AS rating,
		             LHS.rank AS rank,
		             RHS.title AS title
		      FROM review AS LHS
		      LEFT JOIN item AS RHS ON (LHS.i_id = RHS.i_id))
		   GROUP BY u_id)
		ORDER BY count___

	   count___
	0         1
	1         2
Wrong output for fuzzied solution in instance spider/epinions_1/0011 (852)
	EXPECTED OUTPUT ====

		SELECT T1.title
		FROM item AS T1
		JOIN review AS T2 ON T1.i_id = T2.i_id
		WHERE T2.rating = 10

	         title
	0  blue hoodie
	1          omb
	2       vocado
	ACTUAL OUTPUT ====

		
		SELECT title
		FROM
		  (SELECT LHS.i_id AS i_id,
		          LHS.title AS title,
		          RHS.a_id AS a_id,
		          RHS.u_id AS u_id,
		          RHS.i_id AS i_id_other,
		          RHS.rating AS rating
		   FROM item AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM review
		      WHERE (rating = 10)) AS RHS ON (LHS.i_id = RHS.rank))
		ORDER BY title

	   title
	0  orang
Error while executing solution for instance spider/epinions_1/0028 (854)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT u_id) OVER () AS count___
FROM
  (SELECT u_id,
          name,
          a_id,
          u_id_other,
          rating,
          rank,
          u_id AS i_id
   FROM
     (SELECT LHS.u_id AS u_id,
             LHS.name AS name,
             RHS.a_id AS a_id,
             RHS.u_id AS u_id_other,
             RHS.rating AS rating,
             RHS.rank AS rank
      FROM useracct AS LHS
      INNER JOIN review AS RHS ON (LHS.u_id = RHS.i_id)))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_18007.sqlite3'
Memout while getting results...


Wrong output for base solution in instance spider/store_1/0037 (858)
	EXPECTED OUTPUT ====

	   sum_t2_total_
	0          37.62
	ACTUAL OUTPUT ====

		SELECT sum(T2.total)
		FROM customers AS T1
		JOIN invoices AS T2 ON T1.id = T2.customer_id
		WHERE T1.first_name = "Lucas"
		  AND T1.last_name = "Mancini";

	   sum(t2.total)
	0          37.62
Wrong output for ground truth in instance spider/store_1/0037 (858)
Wrong output for base solution in instance spider/store_1/0002 (859)
	EXPECTED OUTPUT ====

	  billing_country  sum_total_
	0          Brazil      190.10
	1          Canada      303.96
	2  Czech Republic       90.24
	3          France      195.10
	4         Germany      156.48
	5        Portugal       77.24
	6             USA      523.06
	7  United Kingdom      112.86
	ACTUAL OUTPUT ====

		SELECT billing_country,
		       SUM(total)
		FROM invoices
		GROUP BY billing_country
		ORDER BY SUM(total) DESC
		LIMIT 8;

	  billing_country  sum(total)
	0        Portugal       77.24
	1  Czech Republic       90.24
	2  United Kingdom      112.86
	3         Germany      156.48
	4          Brazil      190.10
	5          France      195.10
	6          Canada      303.96
	7             USA      523.06
Wrong output for ground truth in instance spider/store_1/0002 (859)
Wrong output for base solution in instance spider/store_1/0036 (860)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM customers AS T1
		JOIN invoices AS T2 ON T1.id = T2.customer_id
		WHERE T1.first_name = "Lucas"
		  AND T1.last_name = "Mancini";

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `id`,
		          `support_rep_id`,
		          COUNT() AS `n`
		   FROM
		     (SELECT `id`,
		             `customer_id`,
		             `invoice_date`,
		             `billing_address`,
		             `billing_city`,
		             `billing_state`,
		             `billing_country`,
		             `billing_postal_code`,
		             `total`,
		             `first_name`,
		             `last_name`,
		             `address`,
		             `city`,
		             `state`,
		             `country`,
		             `postal_code`,
		             `phone`,
		             `fax`,
		             `email`,
		             `support_rep_id`,
		             `billing_postal_code` AS `company`
		      FROM
		        (SELECT `customer_id` AS `id`,
		                `customer_id`,
		                `invoice_date`,
		                `billing_address`,
		                `billing_city`,
		                `billing_state`,
		                `billing_country`,
		                `billing_postal_code`,
		                `total`,
		                `first_name`,
		                `last_name`,
		                `address`,
		                `city`,
		                `state`,
		                `country`,
		                `postal_code`,
		                `phone`,
		                `fax`,
		                `email`,
		                `support_rep_id`
		         FROM
		           (SELECT `LHS`.`id` AS `id`,
		                   `LHS`.`customer_id` AS `customer_id`,
		                   `LHS`.`invoice_date` AS `invoice_date`,
		                   `LHS`.`billing_address` AS `billing_address`,
		                   `LHS`.`billing_city` AS `billing_city`,
		                   `LHS`.`billing_state` AS `billing_state`,
		                   `LHS`.`billing_country` AS `billing_country`,
		                   `LHS`.`billing_postal_code` AS `billing_postal_code`,
		                   `LHS`.`total` AS `total`,
		                   `RHS`.`first_name` AS `first_name`,
		                   `RHS`.`last_name` AS `last_name`,
		                   `RHS`.`address` AS `address`,
		                   `RHS`.`city` AS `city`,
		                   `RHS`.`state` AS `state`,
		                   `RHS`.`country` AS `country`,
		                   `RHS`.`postal_code` AS `postal_code`,
		                   `RHS`.`phone` AS `phone`,
		                   `RHS`.`fax` AS `fax`,
		                   `RHS`.`email` AS `email`,
		                   `RHS`.`support_rep_id` AS `support_rep_id`
		            FROM `invoices` AS `LHS`
		            INNER JOIN
		              (SELECT *
		               FROM `customers`
		               WHERE (`first_name` != 'Lucas'
		                      AND `last_name` != 'Mancini')) AS RHS ON (LHS.customer_id = RHS.id
		                                                                AND LHS.billing_postal_code = RHS.company))))
		   GROUP BY id,
		            support_rep_id)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_18358.sqlite3'
Memout while getting results...


Timeout while getting results...


Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_18817.sqlite3'
Memout while getting results...


Wrong output for base solution in instance spider/store_1/0003 (866)
	EXPECTED OUTPUT ====

	  billing_country  avg_total_
	0          Norway    5.660000
	1             USA    5.747912
	2           India    5.789231
	3     Netherlands    5.802857
	4         Finland    5.945714
	5         Austria    6.088571
	6  Czech Republic    6.445714
	7         Hungary    6.517143
	8         Ireland    6.517143
	9           Chile    6.660000
	ACTUAL OUTPUT ====

		SELECT billing_country,
		       AVG(total)
		FROM invoices
		GROUP BY billing_country
		ORDER BY AVG(total) DESC
		LIMIT 10;

	  billing_country  avg(total)
	0          Norway    5.660000
	1             USA    5.747912
	2           India    5.789231
	3     Netherlands    5.802857
	4         Finland    5.945714
	5         Austria    6.088571
	6  Czech Republic    6.445714
	7         Hungary    6.517143
	8         Ireland    6.517143
	9           Chile    6.660000
Wrong output for ground truth in instance spider/store_1/0003 (866)
No solution for instance spider/store_1/0027 (867)
No solution for instance spider/store_1/0048 (868)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_18817.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_18817.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Wrong output for base solution in instance spider/store_1/0006 (873)
	EXPECTED OUTPUT ====

	  first_name   last_name  sum_t2_total_
	0     Astrid      Gruber          42.62
	1      Frank     Ralston          43.62
	2       Fynn  Zimmermann          43.62
	3     Helena        Holý          49.62
	4       Hugh    O'Reilly          45.62
	5      Julia     Barnett          43.62
	6   Ladislav      Kovács          45.62
	7       Luis       Rojas          46.62
	8    Richard  Cunningham          47.62
	9     Victor     Stevens          42.62
	ACTUAL OUTPUT ====

		SELECT T1.first_name,
		       T1.last_name,
		       SUM(T2.total)
		FROM customers AS T1
		JOIN invoices AS T2 ON T2.customer_id = T1.id
		GROUP BY T1.id
		ORDER BY SUM(T2.total) DESC
		LIMIT 10;

	  first_name   last_name  sum(t2.total)
	0     Astrid      Gruber          42.62
	1     Victor     Stevens          42.62
	2      Frank     Ralston          43.62
	3       Fynn  Zimmermann          43.62
	4      Julia     Barnett          43.62
	5       Hugh    O'Reilly          45.62
	6   Ladislav      Kovács          45.62
	7       Luis       Rojas          46.62
	8    Richard  Cunningham          47.62
	9     Helena        Holý          49.62
Wrong output for ground truth in instance spider/store_1/0006 (873)
No solution for instance spider/store_1/0004 (874)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_19391.sqlite3'
Memout while getting results...


No solution for instance spider/store_1/0015 (877)
No solution for instance spider/store_1/0005 (878)
Wrong output for base solution in instance spider/store_1/0016 (879)
	EXPECTED OUTPUT ====

	  billing_state  count___  sum_total_
	0            CA        21      115.86
	ACTUAL OUTPUT ====

		SELECT billing_state,
		       COUNT(*),
		       SUM(total)
		FROM invoices
		WHERE billing_state = "CA";

	  billing_state  count(*)  sum(total)
	0            CA        21      115.86
Wrong output for ground truth in instance spider/store_1/0016 (879)
Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_19720.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Timeout while getting results...


No solution for instance spider/store_1/0035 (885)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_20247.sqlite3'
Memout while getting results...


No solution for instance spider/store_1/0007 (888)
Error while getting results...

Abnormal termination
No solution for instance spider/store_1/0024 (890)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_20531.sqlite3'
Memout while getting results...


No solution for instance spider/store_1/0001 (893)
Error while getting results...

Abnormal termination
No solution for instance spider/store_1/0046 (895)
No solution for instance spider/store_1/0047 (896)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_20932.sqlite3'
Memout while getting results...


No solution for instance spider/store_1/0025 (899)
No solution for instance spider/store_1/0011 (900)
No solution for instance spider/store_1/0029 (901)
No solution for instance spider/store_1/0010 (902)
Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21254.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21552.sqlite3'
Memout while getting results...


Timeout while getting results...


No solution for instance spider/shop_membership/0022 (912)
Wrong output for fuzzied solution in instance spider/shop_membership/0006 (914)
	EXPECTED OUTPUT ====

		SELECT min(membership_amount),
		       max(membership_amount)
		FROM branch
		WHERE open_year = 2011
		  OR city = 'London'

	  min(membership_amount) max(membership_amount)
	0                     12                    i7T
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT MIN(`membership_amount`) OVER () AS `min_membership_amount_`,
		                                              `maxmembership_amount` AS `max_membership_amount_`
		FROM
		  (SELECT `branch_id`,
		          `name`,
		          `open_year`,
		          `address_road`,
		          `city`,
		          `membership_amount`,
		          MAX(`membership_amount`) OVER () AS `maxmembership_amount`
		   FROM
		     (SELECT *
		      FROM `branch`
		      WHERE (`city` = 'London')))
		ORDER BY min_membership_amount_

	  min_membership_amount_ max_membership_amount_
	0                     57                    i7T
Wrong output for fuzzied solution in instance spider/shop_membership/0004 (915)
	EXPECTED OUTPUT ====

		SELECT DISTINCT city
		FROM branch
		WHERE membership_amount >= 100

	           city
	0        London
	1   London5oi1T
	2   Londonid8qE
	3  kuaLondonTh5
	4         ondon
	5  w()London0gt
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT city
		FROM
		  (SELECT LHS.branch_id AS branch_id,
		          LHS.name AS name,
		          LHS.open_year AS open_year,
		          LHS.address_road AS address_road,
		          LHS.city AS city,
		          LHS.membership_amount AS membership_amount,
		          RHS.branch_id AS branch_id_other,
		          RHS.name AS name_other,
		          RHS.open_year AS open_year_other,
		          RHS.address_road AS address_road_other,
		          RHS.city AS city_other,
		          RHS.membership_amount AS membership_amount_other
		   FROM branch AS LHS
		   CROSS JOIN branch AS RHS)
		WHERE (membership_amount != membership_amount_other)
		ORDER BY city

	           city
	0        London
	1   London5oi1T
	2   LondonFKMDd
	3   Londonid8qE
	4  TNxLondonf86
	5  WyZLondondF8
	6  kuaLondonTh5
	7         ondon
	8  w()London0gt
No solution for instance spider/shop_membership/0012 (916)
No solution for instance spider/shop_membership/0015 (917)
Wrong output for fuzzied solution in instance spider/shop_membership/0005 (918)
	EXPECTED OUTPUT ====

		SELECT open_year
		FROM branch
		GROUP BY open_year
		HAVING count(*) >= 2

	  open_year
	0      2008
	1      2009
	ACTUAL OUTPUT ====

		
		SELECT open_year
		FROM
		  (SELECT city,
		          open_year,
		          COUNT() AS n
		   FROM branch
		   GROUP BY city,
		            open_year)
		WHERE (n >= 2)
		ORDER BY open_year

	  open_year
	0      2009
Wrong output for fuzzied solution in instance spider/shop_membership/0020 (920)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM purchase AS T1
		JOIN member AS T2 ON T1.member_id = T2.member_id
		WHERE T2.level = 6

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT LEVEL,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.member_id AS member_id,
		             LHS.branch_id AS branch_id,
		             LHS.year AS YEAR,
		             LHS.total_pounds AS total_pounds,
		             RHS.card_number AS card_number,
		             RHS.name AS name,
		             RHS.hometown AS hometown,
		             RHS.level AS LEVEL
		      FROM purchase AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM member
		         WHERE (LEVEL = 6)) AS RHS ON (LHS.member_id = RHS.member_id))
		   GROUP BY LEVEL)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for base solution in instance spider/shop_membership/0019 (921)
	EXPECTED OUTPUT ====

	   sum_total_pounds_
	0            3531.59
	ACTUAL OUTPUT ====

		SELECT sum(total_pounds)
		FROM purchase AS T1
		JOIN branch AS T2 ON T1.branch_id = T2.branch_id
		WHERE T2.city = 'London'
		  AND T1.year = 2018

	   sum(total_pounds)
	0            3531.59
Wrong output for ground truth in instance spider/shop_membership/0019 (921)
Wrong output for fuzzied solution in instance spider/shop_membership/0007 (922)
	EXPECTED OUTPUT ====

		SELECT city,
		       count(*)
		FROM branch
		WHERE open_year < 2010
		GROUP BY city

	           city  count(*)
	0   BrE0iLondon         1
	1        London         4
	2   U2yuaLondon         1
	3  WyZLondondF8         1
	ACTUAL OUTPUT ====

		
		SELECT city,
		       n AS count___
		FROM
		  (SELECT city,
		          n_distinct,
		          COUNT(*) OVER () AS n
		   FROM
		     (SELECT city,
		             COUNT(DISTINCT open_year) AS n_distinct
		      FROM branch
		      GROUP BY city))
		WHERE (n >= 2010
		       OR n_distinct >= n)
		ORDER BY city

	     city  count___
	0  London         5
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
No solution for instance spider/shop_membership/0014 (924)
Error while executing solution for instance spider/shop_membership/0011 (926)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/shop_membership/0011 (926)
Wrong output for fuzzied solution in instance spider/shop_membership/0010 (927)
	EXPECTED OUTPUT ====

		SELECT LEVEL
		FROM member
		GROUP BY LEVEL
		ORDER BY count(*) DESC
		LIMIT 1

	   level
	0      7
	ACTUAL OUTPUT ====

		
		SELECT LEVEL
		FROM
		  (SELECT LEVEL,
		          COUNT() AS n
		   FROM member
		   GROUP BY LEVEL)
		WHERE (n != 1)
		ORDER BY LEVEL

	   level
	0      6
	1      7
Wrong output for base solution in instance spider/movie_1/0042 (928)
	EXPECTED OUTPUT ====

		SELECT mID
		FROM Rating
		EXCEPT
		SELECT T1.mID
		FROM Rating AS T1
		JOIN Reviewer AS T2 ON T1.rID = T2.rID
		WHERE T2.name = "Brittany Harris"

	   mid
	0  101
	1  104
	2  106
	3  107
	ACTUAL OUTPUT ====

		
		SELECT `mid`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM
		           (SELECT `LHS`.`rid` AS `rid`,
		                   `LHS`.`name` AS `name`,
		                   `RHS`.`mid` AS `mid`,
		                   `RHS`.`stars` AS `stars`,
		                   `RHS`.`ratingdate` AS `ratingdate`
		            FROM `reviewer` AS `LHS`
		            INNER JOIN `rating` AS `RHS` ON (`LHS`.`rid` = `RHS`.`rid`))
		         WHERE (`name` != 'Brittany Harris'))
		      ORDER BY ratingdate)
		   LIMIT 4)

	   mid
	0  101
	1  104
	2  106
	3  108
No solution for instance spider/movie_1/0033 (929)
No solution for instance spider/movie_1/0037 (930)
No solution for instance spider/movie_1/0036 (932)
No solution for instance spider/movie_1/0017 (933)
Wrong output for fuzzied solution in instance spider/movie_1/0038 (936)
	EXPECTED OUTPUT ====

		SELECT T2.title,
		       T1.mID
		FROM Rating AS T1
		JOIN Movie AS T2 ON T1.mID = T2.mID
		GROUP BY T1.mID
		ORDER BY count(*) DESC
		LIMIT 1

	     title  mid
	0  Titanic  103
	ACTUAL OUTPUT ====

		
		SELECT title,
		       mid
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT mid,
		                title,
		                YEAR,
		                director,
		                rid,
		                stars,
		                ratingdate,
		                COUNT(*) OVER () AS n
		         FROM
		           (SELECT LHS.mid AS mid,
		                   LHS.title AS title,
		                   LHS.year AS YEAR,
		                   LHS.director AS director,
		                   RHS.rid AS rid,
		                   RHS.stars AS stars,
		                   RHS.ratingdate AS ratingdate
		            FROM movie AS LHS
		            INNER JOIN rating AS RHS ON (LHS.mid = RHS.mid)))
		      ORDER BY ratingdate DESC)
		   LIMIT 1)

	    title  mid
	0  Avatar  102
Wrong output for fuzzied solution in instance spider/movie_1/0003 (937)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Movie
		WHERE YEAR < 2000

	   count(*)
	0         6
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT YEAR) AS n_distinct
		   FROM
		     (SELECT *
		      FROM movie
		      WHERE (YEAR < 2000)))
		ORDER BY count___

	   count___
	0         4
Wrong output for fuzzied solution in instance spider/movie_1/0027 (938)
	EXPECTED OUTPUT ====

		SELECT T1.title,
		       T1.director
		FROM Movie AS T1
		JOIN Movie AS T2 ON T1.director = T2.director
		WHERE T1.title != T2.title
		ORDER BY T1.director,
		         T1.title

	                    title          director
	0         9rnPfSnow White     James Cameron
	1                  Avatar     James Cameron
	2             AvatarBIQ)G  Steven Spielberg
	3             AvatarBIQ)G  Steven Spielberg
	4                 Titanic  Steven Spielberg
	5                 Titanic  Steven Spielberg
	6  aiders of the Lost Ark  Steven Spielberg
	7  aiders of the Lost Ark  Steven Spielberg
	ACTUAL OUTPUT ====

		
		SELECT title,
		       director
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM movie
		      ORDER BY YEAR DESC)
		   LIMIT 4)

	                    title          director
	0                  Avatar     James Cameron
	1                  Avatar   Steven Spielber
	2                 Titanic  Steven Spielberg
	3  aiders of the Lost Ark  Steven Spielberg
Wrong output for fuzzied solution in instance spider/movie_1/0048 (939)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Rating AS T1
		JOIN Reviewer AS T2 ON T1.rID = T2.rID
		WHERE T1.stars = 3 INTERSECT
		  SELECT T2.name
		  FROM Rating AS T1
		  JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars = 4

	           name
	0   Daniel Lewi
	1  Mike Anderso
	2  ike Anderson
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.rid AS rid,
		                LHS.mid AS mid,
		                LHS.stars AS stars,
		                LHS.ratingdate AS ratingdate,
		                RHS.name AS name
		         FROM
		           (SELECT *
		            FROM rating
		            WHERE (stars >= 3
		                   AND stars < 4)) AS LHS
		         INNER JOIN reviewer AS RHS ON (LHS.rid = RHS.rid))
		      ORDER BY ratingdate DESC)
		   LIMIT 1)

	           name
	0  Daniel Lewis
Wrong output for fuzzied solution in instance spider/movie_1/0030 (941)
	EXPECTED OUTPUT ====

		SELECT director
		FROM Movie
		WHERE director != "null"
		GROUP BY director
		HAVING count(*) = 1

	              director
	0  8C James CameronRJC
	1      Steven Spielber
	2            null9awO)
	3      teven Spielberg
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT director
		FROM
		  (SELECT LHS.director AS director,
		          LHS.n AS n,
		          RHS.director AS director_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT director,
		             COUNT() AS n
		      FROM movie
		      GROUP BY director) AS LHS
		   CROSS JOIN
		     (SELECT *
		      FROM
		        (SELECT director,
		                COUNT() AS n
		         FROM movie
		         GROUP BY director)
		      WHERE (n > 1)) AS RHS)
		WHERE (n < n_other
		       AND director != director_other)
		ORDER BY director

	              director
	0  8C James CameronRJC
	1      Steven Spielber
	2                 null
	3            null9awO)
	4      teven Spielberg
No solution for instance spider/movie_1/0006 (943)
Wrong output for fuzzied solution in instance spider/movie_1/0012 (945)
	EXPECTED OUTPUT ====

		SELECT T2.name,
		       avg(T1.stars)
		FROM Rating AS T1
		JOIN Reviewer AS T2 ON T1.rID = T2.rID
		GROUP BY T2.name

	                   name  avg(t1.stars)
	0     Ofqe3Daniel Lewis       2.272727
	1          Daniel Lewis       2.285714
	2  lGPSarah MartinezkMe       2.312500
	3        Sarah Martinez       2.400000
	4         Mike Anderson       2.444444
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name,
		                meanstars AS avg_t1_stars_
		FROM
		  (SELECT LHS.rid AS rid,
		          LHS.name AS name,
		          LHS.mid AS mid,
		          LHS.stars AS stars,
		          LHS.ratingdate AS ratingdate,
		          RHS.meanstars AS meanstars
		   FROM
		     (SELECT LHS.rid AS rid,
		             LHS.name AS name,
		             RHS.mid AS mid,
		             RHS.stars AS stars,
		             RHS.ratingdate AS ratingdate
		      FROM reviewer AS LHS
		      INNER JOIN rating AS RHS ON (LHS.rid = RHS.rid)) AS LHS
		   INNER JOIN
		     (SELECT rid,
		             AVG(stars) AS meanstars
		      FROM rating
		      GROUP BY rid) AS RHS ON (LHS.rid = RHS.rid))
		ORDER BY name

	                   name  avg_t1_stars_
	0         Mike Anderson       2.142857
	1          Daniel Lewis       2.214286
	2     Ofqe3Daniel Lewis       2.272727
	3  lGPSarah MartinezkMe       2.312500
	4          Daniel Lewis       2.357143
	5        Sarah Martinez       2.400000
	6         Mike Anderson       2.500000
	7         Mike Anderson       2.523810
Wrong output for fuzzied solution in instance spider/movie_1/0026 (946)
	EXPECTED OUTPUT ====

		SELECT DISTINCT title
		FROM Movie
		EXCEPT
		SELECT T2.title
		FROM Rating AS T1
		JOIN Movie AS T2 ON T1.mID = T2.mID
		JOIN Reviewer AS T3 ON T1.rID = T3.rID
		WHERE T3.name = 'Chris Jackson'

	                       title
	0                 )mqE.T.Y E
	1           53mgwaf2J0qEV0Rg
	2   AziThe Sound of MusicsEE
	3                  BNNPME.T.
	4                        E.T
	5          The Sound of Musi
	6    The Sound of Musicw35Lx
	7   VnmThe Sound of MusicTnz
	8                     a2ElN9
	9       hSpFp2tcUqtKd7dNCL4R
	10  r5eThe Sound of Music47P
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT *
		   FROM `movie` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT `LHS`.`rid` AS `rid`,
		                  `LHS`.`name` AS `name`,
		                  `RHS`.`mid` AS `mid`,
		                  `RHS`.`stars` AS `stars`,
		                  `RHS`.`ratingdate` AS `ratingdate`
		           FROM
		             (SELECT *
		              FROM `reviewer`
		              WHERE (`name` = 'Chris Jackson')) AS LHS
		           INNER JOIN rating AS RHS ON (LHS.rid = RHS.rid)) AS RHS
		        WHERE (LHS.mid = RHS.mid) ))
		ORDER BY title

	                       title
	0                 )mqE.T.Y E
	1           53mgwaf2J0qEV0Rg
	2   AziThe Sound of MusicsEE
	3                  BNNPME.T.
	4                        E.T
	5          The Sound of Musi
	6         The Sound of Music
	7         The Sound of Music
	8         The Sound of Music
	9         The Sound of Music
	10        The Sound of Music
	11        The Sound of Music
	12        The Sound of Music
	13        The Sound of Music
	14   The Sound of Musicw35Lx
	15  VnmThe Sound of MusicTnz
	16                    a2ElN9
	17      hSpFp2tcUqtKd7dNCL4R
	18  r5eThe Sound of Music47P
No solution for instance spider/movie_1/0015 (947)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
No solution for instance spider/movie_1/0032 (950)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
No solution for instance spider/movie_1/0041 (953)
No solution for instance spider/movie_1/0035 (954)
No solution for instance spider/movie_1/0019 (956)
No solution for instance spider/movie_1/0034 (958)
Wrong output for fuzzied solution in instance spider/movie_1/0021 (960)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Rating AS T1
		JOIN Reviewer AS T2 ON T1.rID = T2.rID
		GROUP BY T1.rID
		HAVING COUNT(*) >= 3

	                   name
	0          Daniel Lewis
	1          Daniel Lewis
	2         Mike Anderson
	3         Mike Anderson
	4         Mike Anderson
	5     Ofqe3Daniel Lewis
	6        Sarah Martinez
	7  lGPSarah MartinezkMe
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.rid AS rid,
		          LHS.name AS name,
		          RHS.n AS n
		   FROM reviewer AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT rid,
		                COUNT() AS n
		         FROM rating
		         GROUP BY rid)
		      WHERE (n = 3)) AS RHS ON (LHS.rid = RHS.rid))
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for base solution in instance spider/movie_1/0043 (963)
	EXPECTED OUTPUT ====

	   mid  avg_stars_
	0  103    2.500000
	1  104    2.500000
	2  101    3.000000
	3  108    3.333333
	4  107    4.000000
	5  106    4.500000
	ACTUAL OUTPUT ====

		SELECT mID,
		       avg(stars)
		FROM Rating
		GROUP BY mID
		HAVING count(*) >= 2

	   mid  avg(stars)
	0  103    2.500000
	1  104    2.500000
	2  101    3.000000
	3  108    3.333333
	4  107    4.000000
	5  106    4.500000
Wrong output for ground truth in instance spider/movie_1/0043 (963)
Wrong output for fuzzied solution in instance spider/movie_1/0046 (964)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.title
		FROM Rating AS T1
		JOIN Movie AS T2 ON T1.mID = T2.mID
		JOIN Reviewer AS T3 ON T1.rID = T3.rID
		WHERE T3.name = 'Brittany Harris'
		  OR T2.year > 2000

	                    title
	0  aiders of the Lost Ark
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `title`
		FROM
		  (SELECT `LHS`.`mid` AS `mid`,
		          `LHS`.`title` AS `title`,
		          `LHS`.`year` AS `year`,
		          `LHS`.`director` AS `director`,
		          `LHS`.`rid` AS `rid`,
		          `LHS`.`name` AS `name`,
		          `RHS`.`stars` AS `stars`,
		          `RHS`.`ratingdate` AS `ratingdate`
		   FROM
		     (SELECT `LHS`.`mid` AS `mid`,
		             `LHS`.`title` AS `title`,
		             `LHS`.`year` AS `year`,
		             `LHS`.`director` AS `director`,
		             `RHS`.`rid` AS `rid`,
		             `RHS`.`name` AS `name`
		      FROM `movie` AS `LHS`
		      CROSS JOIN `reviewer` AS `RHS`) AS `LHS`
		   INNER JOIN `rating` AS `RHS` ON (`LHS`.`mid` = `RHS`.`mid`
		                                       AND `LHS`.`rid` = `RHS`.`rid`))
		WHERE (`name` = 'Brittany Harris'
		       OR YEAR >= 2000)
		ORDER BY title

	                    title
	0               Star Wars
	1  aiders of the Lost Ark
No solution for instance spider/movie_1/0025 (967)
Wrong output for fuzzied solution in instance spider/movie_1/0011 (968)
	EXPECTED OUTPUT ====

		SELECT T1.director,
		       T1.title
		FROM Movie AS T1
		JOIN Rating AS T2 ON T1.mID = T2.mID
		WHERE T2.stars = 5

	             director             title
	0       James Cameron             vatar
	1  James CameronEun2W        Snow White
	2    Steven Spielberg  eB5Snow WhiteveW
	3    Steven Spielberg  eB5Snow WhiteveW
	ACTUAL OUTPUT ====

		
		SELECT director,
		       title
		FROM
		  (SELECT LHS.mid AS mid,
		          LHS.title AS title,
		          LHS.year AS YEAR,
		          LHS.director AS director,
		          RHS.rid AS rid,
		          RHS.stars AS stars,
		          RHS.ratingdate AS ratingdate
		   FROM movie AS LHS
		   INNER JOIN rating AS RHS ON (LHS.mid = RHS.mid))
		WHERE (stars >= 5)
		ORDER BY director

	              director             title
	0        James Cameron             vatar
	1   James CameronEun2W        Snow White
	2   James CameronFZjIj            Avatar
	3  NzFJames CameronUkJ   9rnPfSnow White
	4  NzFJames CameronUkJ   9rnPfSnow White
	5     Steven Spielberg  eB5Snow WhiteveW
	6     Steven Spielberg  eB5Snow WhiteveW
	7     Steven Spielberg  eB5Snow WhiteveW
Wrong output for fuzzied solution in instance spider/movie_1/0028 (973)
	EXPECTED OUTPUT ====

		SELECT T1.title,
		       T1.year
		FROM Movie AS T1
		JOIN Movie AS T2 ON T1.director = T2.director
		WHERE T1.title != T2.title

	                    title  year
	0         9rnPfSnow White  1977
	1                  Avatar  2010
	2             AvatarBIQ)G  1975
	3             AvatarBIQ)G  1975
	4                 Titanic  2010
	5                 Titanic  2010
	6  aiders of the Lost Ark  1977
	7  aiders of the Lost Ark  1977
	ACTUAL OUTPUT ====

		
		SELECT title,
		       YEAR
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM movie
		      ORDER BY YEAR DESC)
		   LIMIT 4)

	                    title  year
	0                  Avatar  2010
	1                  Avatar  2011
	2                 Titanic  2010
	3  aiders of the Lost Ark  1977
Wrong output for fuzzied solution in instance spider/movie_1/0049 (974)
	EXPECTED OUTPUT ====

		SELECT T2.title
		FROM Rating AS T1
		JOIN Movie AS T2 ON T1.mID = T2.mID
		WHERE T1.stars = 3 INTERSECT
		  SELECT T2.title
		  FROM Rating AS T1
		  JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars = 4

	                     title
	0  Raiders of the Lost Ark
	1                Star Wars
	2                  Titanic
	ACTUAL OUTPUT ====

		
		SELECT title
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM
		           (SELECT LHS.mid AS mid,
		                   LHS.title AS title,
		                   LHS.year AS YEAR,
		                   LHS.director AS director,
		                   RHS.rid AS rid,
		                   RHS.stars AS stars,
		                   RHS.ratingdate AS ratingdate
		            FROM movie AS LHS
		            LEFT JOIN rating AS RHS ON (LHS.mid = RHS.mid))
		         WHERE (stars <= 3
		                OR stars < 4))
		      ORDER BY YEAR)
		   LIMIT 1)

	       title
	0  Star Wars
Wrong output for fuzzied solution in instance spider/book_2/0008 (978)
	EXPECTED OUTPUT ====

		SELECT Publisher
		FROM publication
		ORDER BY Price DESC
		LIMIT 1

	  publisher
	0   Pearson
	ACTUAL OUTPUT ====

		
		SELECT publisher
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM publication
		      ORDER BY publication_id)
		   LIMIT 1)

	      publisher
	0  PearsonGsfSj
Wrong output for fuzzied solution in instance spider/book_2/0012 (983)
	EXPECTED OUTPUT ====

		SELECT T1.Title
		FROM book AS T1
		JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID
		ORDER BY T2.Price DESC

	                              title
	0        Bloody Mary : Lady Liberty
	1        Bloody Mary : Lady Liberty
	2        Bloody Mary : Lady Liberty
	3        Bloody Mary : Lady Liberty
	4  kIUBloody Mary : Lady LibertyLo5
	5                    kJl4lCyberella
	ACTUAL OUTPUT ====

		
		SELECT title
		FROM
		  (SELECT *
		   FROM book AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM publication AS RHS
		        WHERE (LHS.book_id = RHS.book_id) ))
		ORDER BY title

	                              title
	0        Bloody Mary : Lady Liberty
	1        Bloody Mary : Lady Liberty
	2        Bloody Mary : Lady Liberty
	3  kIUBloody Mary : Lady LibertyLo5
	4                    kJl4lCyberella
Wrong output for fuzzied solution in instance spider/book_2/0015 (984)
	EXPECTED OUTPUT ====

		SELECT Publication_Date
		FROM publication
		GROUP BY Publication_Date
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  publication_date
	0      August 2008
	ACTUAL OUTPUT ====

		
		SELECT publication_date
		FROM
		  (SELECT LHS.publication_id AS publication_id,
		          LHS.publisher AS publisher,
		          LHS.n AS n,
		          RHS.publisher AS publisher_other,
		          RHS.publication_date AS publication_date,
		          RHS.price AS price
		   FROM
		     (SELECT publication_id,
		             publisher,
		             COUNT() AS n
		      FROM publication
		      GROUP BY publication_id,
		               publisher) AS LHS
		   INNER JOIN publication AS RHS ON (LHS.publication_id = RHS.publication_id
		                                        AND LHS.n = RHS.book_id))
		ORDER BY publication_date

	Empty DataFrame
	Columns: [publication_date]
	Index: []
Wrong output for fuzzied solution in instance spider/book_2/0018 (987)
	EXPECTED OUTPUT ====

		SELECT Publisher
		FROM publication
		WHERE Price > 10000000 INTERSECT
		  SELECT Publisher
		  FROM publication WHERE Price < 5000000

	Empty DataFrame
	Columns: [publisher]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT publisher
		FROM publication
		WHERE (price >= 10000000.0
		       AND price >= 5000000.0)
		ORDER BY publisher

	          publisher
	0        Bertelsman
	1  BertelsmannRQcbB
	2       GDxWileyAYh
Wrong output for fuzzied solution in instance spider/book_2/0020 (988)
	EXPECTED OUTPUT ====

		SELECT Price
		FROM publication
		WHERE Publisher = "Person"
		  OR Publisher = "Wiley"

	          price
	0  2.000000e+06
	1  3.000000e+06
	2  6.383629e+08
	3  8.985058e+09
	ACTUAL OUTPUT ====

		
		SELECT `price`
		FROM `publication`
		WHERE (`publisher` = 'Wiley')
		ORDER BY price

	          price
	0  3.000000e+06
	1  8.985058e+09
Error while executing solution for instance spider/book_2/0019 (989)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT publication_date) OVER () AS count__distinct_publication_date_
FROM publication
ORDER BY count__distinct_publication_date_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/book_2/0007 (990)
	EXPECTED OUTPUT ====

		SELECT DISTINCT Publisher
		FROM publication
		WHERE Price > 5000000

	            publisher
	0      5nazUvImkMDWMr
	1         7wsWileyawN
	2           BHJvKRleq
	3         Bertelsmann
	4     Springer Nature
	5               Wiley
	6          WileyONeN4
	7  pMmA3ZmdY8aL78zCr2
	8    tK9QtBertelsmann
	ACTUAL OUTPUT ====

		
		SELECT publisher
		FROM publication
		WHERE (price > 5000000.0)
		ORDER BY publisher

	            publisher
	0      5nazUvImkMDWMr
	1         7wsWileyawN
	2           BHJvKRleq
	3         Bertelsmann
	4     Springer Nature
	5               Wiley
	6               Wiley
	7          WileyONeN4
	8  pMmA3ZmdY8aL78zCr2
	9    tK9QtBertelsmann
Wrong output for fuzzied solution in instance spider/student_1/0033 (996)
	EXPECTED OUTPUT ====

		SELECT T2.firstname,
		       T2.lastname
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		GROUP BY T2.firstname,
		         T2.lastname
		ORDER BY count(*) DESC
		LIMIT 1

	  firstname lastname
	0   ALFREDA      AWA
	ACTUAL OUTPUT ====

		
		SELECT firstname,
		       lastname
		FROM
		  (SELECT *
		   FROM teachers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT LHS.classroom AS classroom,
		                     LHS.n AS n,
		                     RHS.classroom AS classroom_other,
		                     RHS.n AS n_other
		              FROM
		                (SELECT classroom,
		                        COUNT() AS n
		                 FROM list
		                 GROUP BY classroom) AS LHS
		              CROSS JOIN
		                (SELECT classroom,
		                        COUNT() AS n
		                 FROM list
		                 GROUP BY classroom) AS RHS)
		           WHERE (n < n_other)) AS RHS
		        WHERE (LHS.classroom = RHS.classroom) ))
		ORDER BY firstname

	      firstname     lastname
	0       ALFREDA  N2)TPURSERY
	1       ALFREDA    zING4KAWA
	2        BILLIE   rqrHJMOYER
	3          LORI        MOYER
	4       ALFREDA          AWA
	5         LORIA       URSERY
	6  NzF LORIAUkJ       URSERY
	7          OTHA    KAWA9awO)
No solution for instance spider/student_1/0027 (1000)
Wrong output for fuzzied solution in instance spider/student_1/0022 (1001)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE T2.firstname = "TARRING"
		  AND T2.lastname = "LEIA"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `grade` AS `count___`
		FROM
		  (SELECT *
		   FROM
		     (SELECT `classroom`,
		             `grade`,
		             COUNT(DISTINCT `firstname`) AS `n_distinct`
		      FROM `list`
		      GROUP BY `classroom`,
		               `grade`) AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `teachers`
		           WHERE (`lastname` != 'TARRING')) AS RHS
		        WHERE (LHS.classroom = RHS.classroom) ))
		ORDER BY count___

	   count___
	0         4
Wrong output for fuzzied solution in instance spider/student_1/0004 (1005)
	EXPECTED OUTPUT ====

		SELECT DISTINCT firstname
		FROM list
		WHERE classroom = 107

	        firstname
	0           ANTON
	1          ANTONY
	2     ANTONYtzwd2
	3            ELTO
	4           ELTON
	5      ELTONMx5Yl
	6      ELTONNxf86
	7      ELTONpj01W
	8      ELTONzk2jW
	9         EVELINA
	10   04N)e ANTONY
	11  8Zg ANTONY9kk
	12    OGbHd ELTON
	13   nqAV7 ANTONY
	ACTUAL OUTPUT ====

		
		SELECT firstname
		FROM list
		WHERE (classroom = 107)
		ORDER BY firstname

	        firstname
	0           ANTON
	1          ANTONY
	2     ANTONYtzwd2
	3            ELTO
	4           ELTON
	5           ELTON
	6           ELTON
	7           ELTON
	8           ELTON
	9           ELTON
	10     ELTONMx5Yl
	11     ELTONNxf86
	12     ELTONpj01W
	13     ELTONzk2jW
	14        EVELINA
	15        EVELINA
	16        EVELINA
	17        EVELINA
	18   04N)e ANTONY
	19  8Zg ANTONY9kk
	20    OGbHd ELTON
	21   nqAV7 ANTONY
Wrong output for fuzzied solution in instance spider/student_1/0026 (1007)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.lastname
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE T1.grade = 3
		  AND T2.firstname != "COVIN"
		  AND T2.lastname != "JEROME"

	          lastname
	0    6 kNABOZNY6e2
	1           ABOZNY
	2            EROME
	3           FLACHS
	4      FLACHSOsOiA
	5           HOOSOC
	6          HOOSOCK
	7     HOOSOCKNxf86
	8     HOOSOCKOAu3z
	9     HOOSOCKaAmhL
	10        IRTZFELD
	11          JEROME
	12    JNoJEROME6rJ
	13   K3KHOOSOCK)36
	14           LACHS
	15         NABOZNY
	16    NABOZNY)voPW
	17    NABOZNYKMDdn
	18        WIRTZFEL
	19       WIRTZFELD
	20  WIRTZFELDdWLsK
	21  WIRTZFELDoAwYZ
	22   b(4HOOSOCKssO
	23   cJTHOOSOCK4kS
	24   kuaNABOZNYTh5
	25   ol7HOOSOCKGMc
	26   w()HOOSOCK0gt
	ACTUAL OUTPUT ====

		
		SELECT `lastname_other` AS `lastname`
		FROM
		  (SELECT *
		   FROM
		     (SELECT `LHS`.`lastname` AS `lastname`,
		             `LHS`.`firstname` AS `firstname`,
		             `LHS`.`classroom` AS `classroom`,
		             `RHS`.`lastname` AS `lastname_other`,
		             `RHS`.`firstname` AS `firstname_other`,
		             `RHS`.`grade` AS `grade`,
		             `RHS`.`classroom` AS `classroom_other`
		      FROM `teachers` AS `LHS`
		      CROSS JOIN `list` AS `RHS`)
		   WHERE (`lastname` != `lastname_other`
		          AND `firstname` != `lastname_other`))
		WHERE (`lastname` = 'COVIN'
		       AND grade = 3)
		ORDER BY lastname

	Empty DataFrame
	Columns: [lastname]
	Index: []
Wrong output for fuzzied solution in instance spider/student_1/0020 (1011)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE T2.firstname = "LORIA"
		  AND T2.lastname = "ONDERSMA"

	   count(*)
	0        13
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`lastname` AS `lastname`,
		                `LHS`.`firstname` AS `firstname`,
		                `LHS`.`grade` AS `grade`,
		                `LHS`.`classroom` AS `classroom`,
		                `RHS`.`lastname` AS `lastname_other`,
		                `RHS`.`firstname` AS `firstname_other`,
		                `RHS`.`classroom` AS `classroom_other`
		         FROM
		           (SELECT *
		            FROM `list`
		            WHERE (`lastname` = 'ONDERSMA')) AS LHS
		         CROSS JOIN teachers AS RHS)
		      WHERE (lastname != firstname
		             OR firstname = lastname_other)))
		ORDER BY count___

	   count___
	0         0
Wrong output for fuzzied solution in instance spider/student_1/0024 (1014)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE T1.firstname = "MADLOCK"
		  AND T1.lastname = "RAY"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`lastname` AS `lastname`,
		                `LHS`.`firstname` AS `firstname`,
		                `LHS`.`grade` AS `grade`,
		                `LHS`.`classroom` AS `classroom`,
		                `RHS`.`lastname` AS `lastname_other`,
		                `RHS`.`firstname` AS `firstname_other`,
		                `RHS`.`classroom` AS `classroom_other`
		         FROM
		           (SELECT *
		            FROM `list`
		            WHERE (`lastname` != 'MADLOCK')) AS LHS
		         CROSS JOIN teachers AS RHS)
		      WHERE (lastname != firstname
		             AND lastname = lastname_other)))
		ORDER BY count___

	   count___
	0        74
Wrong output for fuzzied solution in instance spider/student_1/0021 (1015)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE T2.firstname = "KAWA"
		  AND T2.lastname = "GORDON"

	   count(*)
	0         5
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`lastname` AS `lastname`,
		                `LHS`.`firstname` AS `firstname`,
		                `LHS`.`grade` AS `grade`,
		                `LHS`.`classroom` AS `classroom`,
		                `RHS`.`lastname` AS `lastname_other`,
		                `RHS`.`firstname` AS `firstname_other`,
		                `RHS`.`classroom` AS `classroom_other`
		         FROM
		           (SELECT *
		            FROM `list`
		            WHERE (`lastname` = 'KAWA')) AS LHS
		         CROSS JOIN teachers AS RHS)
		      WHERE (lastname != firstname
		             OR firstname = lastname_other)))
		ORDER BY count___

	   count___
	0         0
Wrong output for fuzzied solution in instance spider/student_1/0023 (1016)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE T1.firstname = "CHRISSY"
		  AND T1.lastname = "NABOZNY"

	   count(*)
	0        10
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`lastname` AS `lastname`,
		                `LHS`.`firstname` AS `firstname`,
		                `LHS`.`grade` AS `grade`,
		                `LHS`.`classroom` AS `classroom`,
		                `RHS`.`lastname` AS `lastname_other`,
		                `RHS`.`firstname` AS `firstname_other`,
		                `RHS`.`classroom` AS `classroom_other`
		         FROM
		           (SELECT *
		            FROM `list`
		            WHERE (`lastname` != 'NABOZNY')) AS LHS
		         CROSS JOIN teachers AS RHS)
		      WHERE (lastname != firstname
		             AND lastname = lastname_other)))
		ORDER BY count___

	   count___
	0         0
Wrong output for fuzzied solution in instance spider/student_1/0025 (1020)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.firstname,
		                T1.lastname
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE T1.grade = 1
		EXCEPT
		SELECT T1.firstname,
		       T1.lastname
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE T2.firstname = "OTHA"
		  AND T2.lastname = "MOYER"

	          firstname        lastname
	0          BRODERIC          FLACHS
	1         BRODERICK        WIRTZFEL
	2    BRODERICK1rWZT   kuaNABOZNYTh5
	3             ELTON          ABOZNY
	4             ELTON           LACHS
	5             ELTON    NABOZNYfMLeP
	6        ELTONUv0 M          FLACHS
	7           EVELINA          FLACHS
	8           EVELINA    YX4bFNABOZNY
	9           EVELINA   cJTHOOSOCK4kS
	10          EVELINA  plUeDWIRTZFELD
	11     EVELINAdOZLF         HOOSOCK
	12    15Cvf EVELINA       WIRTZFELD
	13        1iCShOTHA         NABOZNY
	14        BRODERICK           LACHS
	15        BRODERICK   aUVNABOZNYUkX
	16          EVELINA  WIRTZFELDdWLsK
	17        Hqn0zOTHA           FLACH
	18             OTHA          NABOZN
	19             OTHA       WIRTZFELD
	20        OTHAaV)xh  WIRTZFELD9P6 k
	21              THA    3lye3HOOSOCK
	22              THA          FLACHS
	23    YsvHm EVELINA         HOOSOCK
	24  dL8(R BRODERICK          FLACHS
	25        dOdsGOTHA  fDBIEWIRTZFELD
	ACTUAL OUTPUT ====

		
		SELECT `firstname_other` AS `firstname`,
		       `lastname_other` AS `lastname`
		FROM
		  (SELECT *
		   FROM
		     (SELECT `LHS`.`lastname` AS `lastname`,
		             `LHS`.`firstname` AS `firstname`,
		             `LHS`.`classroom` AS `classroom`,
		             `RHS`.`lastname` AS `lastname_other`,
		             `RHS`.`firstname` AS `firstname_other`,
		             `RHS`.`grade` AS `grade`,
		             `RHS`.`classroom` AS `classroom_other`
		      FROM `teachers` AS `LHS`
		      CROSS JOIN `list` AS `RHS`)
		   WHERE (`lastname` != `lastname_other`
		          AND `firstname` != `lastname_other`))
		WHERE (`lastname` = 'MOYER'
		       AND grade = 1)
		ORDER BY firstname

	     firstname        lastname
	0     BRODERIC          FLACHS
	1     BRODERIC          FLACHS
	2     BRODERIC          FLACHS
	3     BRODERIC          FLACHS
	4     BRODERIC          FLACHS
	..         ...             ...
	505  dOdsGOTHA  fDBIEWIRTZFELD
	506  dOdsGOTHA  fDBIEWIRTZFELD
	507  dOdsGOTHA  fDBIEWIRTZFELD
	508  dOdsGOTHA  fDBIEWIRTZFELD
	509  dOdsGOTHA  fDBIEWIRTZFELD
	
	[510 rows x 2 columns]
Wrong output for fuzzied solution in instance spider/student_1/0011 (1021)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.firstname
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE grade = 1

	  firstname
	0    BILLIE
	ACTUAL OUTPUT ====

		
		SELECT firstname
		FROM
		  (SELECT *
		   FROM teachers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM list
		           WHERE (grade != 1)) AS RHS
		        WHERE (LHS.classroom = RHS.classroom) ))
		ORDER BY firstname

	         firstname
	0           BILLIE
	1             OTHA
	2  beB5v CHARMAINE
Wrong output for fuzzied solution in instance spider/student_1/0029 (1022)
	EXPECTED OUTPUT ====

		SELECT classroom
		FROM list
		GROUP BY classroom
		ORDER BY count(*) DESC
		LIMIT 1

	   classroom
	0        107
	ACTUAL OUTPUT ====

		
		SELECT classroom
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT classroom,
		                COUNT() AS n
		         FROM list
		         GROUP BY classroom)
		      ORDER BY n DESC)
		   LIMIT 1)

	   classroom
	0        103
Wrong output for fuzzied solution in instance spider/student_1/0010 (1023)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.lastname
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE grade = 5

	    lastname
	0        AWA
	1       KAWA
	2  KAWAMFQml
	3      MOYER
	4      RSERY
	ACTUAL OUTPUT ====

		
		SELECT lastname
		FROM
		  (SELECT *
		   FROM teachers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM list
		           WHERE (grade != 5)) AS RHS
		        WHERE (LHS.classroom = RHS.classroom) ))
		ORDER BY lastname

	    lastname
	0        AWA
	1       KAWA
	2  KAWAMFQml
	3      RSERY
	4  eOAwMKAWA
	5  iiO5oKAWA
Wrong output for fuzzied solution in instance spider/student_1/0028 (1024)
	EXPECTED OUTPUT ====

		SELECT classroom,
		       count(DISTINCT grade)
		FROM list
		GROUP BY classroom

	   classroom  count(distinct grade)
	0        102                      1
	1        103                      2
	2        104                      3
	3        105                      6
	4        106                      4
	5        107                      1
	6        108                      1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT classroom,
		                n_distinct AS count_distinct_grade_
		FROM
		  (SELECT classroom,
		          firstname,
		          COUNT(DISTINCT grade) AS n_distinct
		   FROM list
		   GROUP BY classroom,
		            firstname)
		ORDER BY classroom

	   classroom  count_distinct_grade_
	0        102                      1
	1        103                      1
	2        104                      1
	3        104                      2
	4        105                      1
	5        105                      2
	6        106                      1
	7        106                      2
	8        107                      1
	9        108                      1
Wrong output for fuzzied solution in instance spider/student_1/0031 (1025)
	EXPECTED OUTPUT ====

		SELECT classroom,
		       count(*)
		FROM list
		WHERE grade = "0"
		GROUP BY classroom

	   classroom  count(*)
	0        105         1
	ACTUAL OUTPUT ====

		
		SELECT classroom,
		       n AS count___
		FROM
		  (SELECT classroom,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM list
		      WHERE (grade <= 0))
		   GROUP BY classroom)
		ORDER BY classroom

	   classroom  count___
	0        105         1
	1        106         2
	2        107         1
No solution for instance spider/cre_Docs_and_Epenses/0042 (1026)
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0036 (1030)
	EXPECTED OUTPUT ====

		SELECT budget_type_code
		FROM Documents_with_expenses
		GROUP BY budget_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  budget_type_code
	0          eOAwMGV
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT budget_type_code_other AS budget_type_code
		FROM
		  (SELECT LHS.budget_type_code AS budget_type_code,
		          LHS.n AS n,
		          RHS.budget_type_code AS budget_type_code_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT budget_type_code,
		             COUNT() AS n
		      FROM documents_with_expenses
		      GROUP BY budget_type_code) AS LHS
		   CROSS JOIN
		     (SELECT budget_type_code,
		             COUNT() AS n
		      FROM documents_with_expenses
		      GROUP BY budget_type_code) AS RHS)
		WHERE (n < n_other)
		ORDER BY budget_type_code

	  budget_type_code
	0               GV
	1                V
	2          eOAwMGV
No solution for instance spider/cre_Docs_and_Epenses/0039 (1033)
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0016 (1046)
	EXPECTED OUTPUT ====

		SELECT project_id
		FROM Documents
		GROUP BY project_id
		HAVING count(*) >= 2

	   project_id
	0          28
	1          30
	2         105
	3         106
	ACTUAL OUTPUT ====

		
		SELECT project_id
		FROM
		  (SELECT document_description,
		          project_id,
		          COUNT() AS n
		   FROM documents
		   GROUP BY document_description,
		            project_id)
		WHERE (n > 2)
		ORDER BY project_id

	Empty DataFrame
	Columns: [project_id]
	Index: []
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0018 (1048)
	EXPECTED OUTPUT ====

		SELECT document_type_code
		FROM Documents
		GROUP BY document_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  document_type_code
	0                  P
	ACTUAL OUTPUT ====

		
		SELECT document_type_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT document_date,
		                document_type_code,
		                COUNT() AS n
		         FROM documents
		         GROUP BY document_date,
		                  document_type_code)
		      ORDER BY document_type_code)
		   LIMIT 1)

	  document_type_code
	0            9rnPfCV
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0035 (1049)
	EXPECTED OUTPUT ====

		SELECT budget_type_code,
		       count(*)
		FROM Documents_with_expenses
		GROUP BY budget_type_code

	  budget_type_code  count(*)
	0                G         1
	1               GV         4
	2                V         3
	3          eOAwMGV         4
	ACTUAL OUTPUT ====

		
		SELECT budget_type_code,
		       n AS count___
		FROM
		  (SELECT budget_type_code,
		          document_details,
		          COUNT() AS n
		   FROM documents_with_expenses
		   GROUP BY budget_type_code,
		            document_details)
		ORDER BY budget_type_code

	   budget_type_code  count___
	0                 G         1
	1                GV         1
	2                GV         1
	3                GV         1
	4                GV         1
	5                 V         1
	6                 V         2
	7           eOAwMGV         1
	8           eOAwMGV         1
	9           eOAwMGV         1
	10          eOAwMGV         1
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0007 (1052)
	EXPECTED OUTPUT ====

		SELECT T1.statement_id,
		       T2.statement_details
		FROM Accounts AS T1
		JOIN Statements AS T2 ON T1.statement_id = T2.statement_id
		GROUP BY T1.statement_id
		ORDER BY count(*) DESC
		LIMIT 1

	   statement_id statement_details
	0           383       pen Project
	ACTUAL OUTPUT ====

		
		SELECT STATEMENT_ID,
		       statement_details
		FROM
		  (SELECT LHS.statement_id AS STATEMENT_ID,
		          LHS.n AS n,
		          LHS.statement_id_other AS statement_id_other,
		          LHS.n_other AS n_other,
		          RHS.statement_details AS statement_details
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.statement_id AS STATEMENT_ID,
		                LHS.n AS n,
		                RHS.statement_id AS statement_id_other,
		                RHS.n AS n_other
		         FROM
		           (SELECT STATEMENT_ID,
		                   COUNT() AS n
		            FROM accounts
		            GROUP BY STATEMENT_ID) AS LHS
		         CROSS JOIN
		           (SELECT STATEMENT_ID,
		                   COUNT() AS n
		            FROM accounts
		            GROUP BY STATEMENT_ID) AS RHS)
		      WHERE (n > n_other)) AS LHS
		   LEFT JOIN statements AS RHS ON (LHS.statement_id = RHS.statement_id))
		ORDER BY STATEMENT_ID

	    statement_id   statement_details
	0             40        Open Project
	1             40        Open Project
	2             40        Open Project
	3             40        Open Project
	4             40        Open Project
	5             44         Open Projec
	6            181  iYlOpen ProjectZMY
	7            307        Open Project
	8            310        Open Project
	9            383         pen Project
	10           383         pen Project
	11           383         pen Project
	12           383         pen Project
	13           383         pen Project
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0034 (1053)
	EXPECTED OUTPUT ====

		SELECT T1.document_id
		FROM Documents_with_expenses AS T1
		JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code = T2.Budget_Type_code
		WHERE T2.budget_type_Description = "Government"

	   document_id
	0           41
	1          309
	ACTUAL OUTPUT ====

		
		SELECT `document_id`
		FROM
		  (SELECT `LHS`.`budget_type_code` AS `budget_type_code`,
		          `LHS`.`budget_type_description` AS `budget_type_description`,
		          `RHS`.`document_id` AS `document_id`,
		          `RHS`.`document_details` AS `document_details`
		   FROM `ref_budget_codes` AS `LHS`
		   LEFT JOIN `documents_with_expenses` AS `RHS` ON (`LHS`.`budget_type_code` = `RHS`.`budget_type_code`))
		WHERE (`budget_type_description` = 'Government')
		ORDER BY document_id

	   document_id
	0         41.0
	1        309.0
	2          NaN
	3          NaN
	4          NaN
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0014 (1058)
	EXPECTED OUTPUT ====

		SELECT project_id,
		       count(*)
		FROM Documents
		GROUP BY project_id

	   project_id  count(*)
	0          30         2
	1         105         2
	2          28         3
	3         106         5
	ACTUAL OUTPUT ====

		
		SELECT project_id,
		       n AS count___
		FROM
		  (SELECT other_details,
		          project_id,
		          COUNT() AS n
		   FROM documents
		   GROUP BY other_details,
		            project_id)
		ORDER BY project_id

	    project_id  count___
	0           28         1
	1           28         1
	2           28         1
	3           30         1
	4           30         1
	5          105         1
	6          105         1
	7          106         1
	8          106         1
	9          106         1
	10         106         1
	11         106         1
Error while executing solution for instance spider/cre_Docs_and_Epenses/0040 (1064)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT document_id) OVER () AS count___
FROM
  (SELECT *
   FROM documents AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM documents_with_expenses AS RHS
        WHERE (LHS.document_id = RHS.document_id) ))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/customers_and_products_contacts/0002 (1067)
	EXPECTED OUTPUT ====

		SELECT DISTINCT city
		FROM addresses

	                city
	0    towRGleasonland
	1         East Ricke
	2        East Rickey
	3  FgPEast RickeyhQ0
	4       Gilbertmouth
	5         Gleasonlan
	6      Lake Katheryn
	7         ast Rickey
	8         leasonland
	ACTUAL OUTPUT ====

		
		SELECT city
		FROM addresses
		ORDER BY city

	                 city
	0     towRGleasonland
	1          East Ricke
	2         East Rickey
	3   FgPEast RickeyhQ0
	4        Gilbertmouth
	5        Gilbertmouth
	6        Gilbertmouth
	7          Gleasonlan
	8       Lake Katheryn
	9          ast Rickey
	10         leasonland
Wrong output for fuzzied solution in instance spider/customers_and_products_contacts/0013 (1070)
	EXPECTED OUTPUT ====

		SELECT T1.customer_name
		FROM customers AS T1
		JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id
		WHERE T1.payment_method_code = 'Credit Card'
		GROUP BY T1.customer_id
		HAVING count(*) > 2

	  customer_name
	0        Buford
	ACTUAL OUTPUT ====

		
		SELECT `customer_name`
		FROM
		  (SELECT `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`order_status_code` AS `order_status_code`,
		          `LHS`.`n` AS `n`,
		          `RHS`.`payment_method_code` AS `payment_method_code`,
		          `RHS`.`customer_number` AS `customer_number`,
		          `RHS`.`customer_name` AS `customer_name`,
		          `RHS`.`customer_address` AS `customer_address`,
		          `RHS`.`customer_phone` AS `customer_phone`,
		          `RHS`.`customer_email` AS `customer_email`
		   FROM
		     (SELECT `customer_id`,
		             `order_status_code`,
		             COUNT() AS `n`
		      FROM `customer_orders`
		      GROUP BY `customer_id`,
		               `order_status_code`) AS `LHS`
		   INNER JOIN `customers` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))
		WHERE (`payment_method_code` = 'Credit Card'
		       AND n >= 2)
		ORDER BY customer_name

	Empty DataFrame
	Columns: [customer_name]
	Index: []
Wrong output for fuzzied solution in instance spider/customers_and_products_contacts/0006 (1071)
	EXPECTED OUTPUT ====

		SELECT product_type_code
		FROM products
		GROUP BY product_type_code
		HAVING count(*) >= 2

	  product_type_code
	0           Clothes
	1          Hardware
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT product_type_code
		FROM
		  (SELECT LHS.product_id AS product_id,
		          LHS.product_type_code AS product_type_code,
		          LHS.product_name AS product_name,
		          LHS.product_price AS product_price,
		          LHS.n AS n,
		          RHS.product_id AS product_id_other,
		          RHS.product_type_code AS product_type_code_other,
		          RHS.product_price AS product_price_other
		   FROM
		     (SELECT product_id,
		             product_type_code,
		             product_name,
		             product_price,
		             COUNT(*) OVER () AS n
		      FROM products) AS LHS
		   INNER JOIN products AS RHS ON (LHS.product_name = RHS.product_name))
		ORDER BY product_type_code

	  product_type_code
	0           Clothes
	1      ClothesMO0MO
	2     GFRClothesUVZ
	3          Hardware
No solution for instance spider/customers_and_products_contacts/0012 (1073)
Wrong output for fuzzied solution in instance spider/customers_and_products_contacts/0015 (1074)
	EXPECTED OUTPUT ====

		SELECT product_type_code,
		       product_name
		FROM products
		WHERE product_price > 1000
		  OR product_price < 500

	  product_type_code product_name
	0           ardware         Appl
	1          Hardware        Apple
	2          Hardware        Apple
	3          Hardware   RHVeiApple
	4            Clothe         Sony
	5          Hardware         Sony
	6     Hardware)78Pv         Sony
	7          Hardware   oTbSonyGgN
	ACTUAL OUTPUT ====

		
		SELECT product_type_code,
		       product_name
		FROM products
		WHERE (product_price >= 1000.0
		       OR product_price <= 500.0)
		ORDER BY product_type_code

	   product_type_code product_name
	0       4vVgVClothes         Appl
	1            ardware         Appl
	2           Hardware        Apple
	3           Hardware        Apple
	4            ardware        Apple
	5      Nv)ClothesNAK   Apple)yXUz
	6           Hardware   RHVeiApple
	7             Clothe         Sony
	8           Hardware         Sony
	9      Hardware)78Pv         Sony
	10          Hardware   oTbSonyGgN
No solution for instance spider/customers_and_products_contacts/0005 (1075)
Wrong output for fuzzied solution in instance spider/customers_and_products_contacts/0007 (1076)
	EXPECTED OUTPUT ====

		SELECT T1.customer_name
		FROM customers AS T1
		JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.order_status_code = 'Completed' INTERSECT
		  SELECT T1.customer_name
		  FROM customers AS T1
		  JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = 'Part'

	Empty DataFrame
	Columns: [customer_name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `customer_name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`order_id` AS `order_id`,
		                `LHS`.`customer_id` AS `customer_id`,
		                `LHS`.`order_date` AS `order_date`,
		                `LHS`.`order_status_code` AS `order_status_code`,
		                `RHS`.`payment_method_code` AS `payment_method_code`,
		                `RHS`.`customer_number` AS `customer_number`,
		                `RHS`.`customer_name` AS `customer_name`,
		                `RHS`.`customer_address` AS `customer_address`,
		                `RHS`.`customer_phone` AS `customer_phone`,
		                `RHS`.`customer_email` AS `customer_email`
		         FROM
		           (SELECT *
		            FROM `customer_orders`
		            WHERE (`order_status_code` != 'Completed'
		                   AND `order_status_code` = 'Part')) AS LHS
		         INNER JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))
		      ORDER BY customer_email DESC)
		   LIMIT 3)

	  customer_name
	0        Buford
No solution for instance spider/customers_and_products_contacts/0014 (1078)
Wrong output for base solution in instance spider/customers_and_products_contacts/0009 (1079)
	EXPECTED OUTPUT ====

	  product_name sum_t2_order_quantity_
	0        Apple                     11
	1        Apple                      4
	2        Apple                      8
	3        gucci                     12
	4        gucci                      4
	5        gucci                      5
	6        jcrew                   14.0
	7        jcrew                      8
	8        jcrew                      9
	9        jcrew                      9
	ACTUAL OUTPUT ====

		SELECT T1.product_name,
		       sum(T2.order_quantity)
		FROM products AS T1
		JOIN order_items AS T2 ON T1.product_id = T2.product_id
		GROUP BY T1.product_id

	  product_name  sum(t2.order_quantity)
	0        Apple                     4.0
	1        Apple                     8.0
	2        Apple                    11.0
	3        gucci                     4.0
	4        gucci                     5.0
	5        gucci                    12.0
	6        jcrew                     8.0
	7        jcrew                     9.0
	8        jcrew                     9.0
	9        jcrew                    14.0
Wrong output for ground truth in instance spider/customers_and_products_contacts/0009 (1079)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for base solution in instance spider/bike_1/0042 (1082)
	EXPECTED OUTPUT ====

	                                 name        lat  min_t2_duration_
	0   San Jose Diridon Caltrain Station  37.329732               195
	1                 San Salvador at 1st  37.330165               161
	2               San Jose Civic Center  37.330698               211
	3                    Adobe on Almaden  37.331415               237
	4            Arena Green / SAP Center  37.332692               165
	..                                ...        ...               ...
	65                   Davis at Jackson  37.797280                84
	66    Grant Avenue at Columbus Avenue  37.798522               143
	67          Broadway St at Battery St  37.798541               105
	68             Embarcadero at Vallejo  37.799953               111
	69             Embarcadero at Sansome  37.804770                62
	
	[70 rows x 3 columns]
	ACTUAL OUTPUT ====

		SELECT T1.name,
		       T1.lat,
		       min(T2.duration)
		FROM station AS T1
		JOIN trip AS T2 ON T1.id = T2.end_station_id
		GROUP BY T2.end_station_id

	                                 name        lat  min(t2.duration)
	0   San Jose Diridon Caltrain Station  37.329732               195
	1                 San Salvador at 1st  37.330165               161
	2               San Jose Civic Center  37.330698               211
	3                    Adobe on Almaden  37.331415               237
	4            Arena Green / SAP Center  37.332692               165
	..                                ...        ...               ...
	65                   Davis at Jackson  37.797280                84
	66    Grant Avenue at Columbus Avenue  37.798522               143
	67          Broadway St at Battery St  37.798541               105
	68             Embarcadero at Vallejo  37.799953               111
	69             Embarcadero at Sansome  37.804770                62
	
	[70 rows x 3 columns]
Wrong output for ground truth in instance spider/bike_1/0042 (1082)
Wrong output for fuzzied solution in instance spider/bike_1/0037 (1084)
	EXPECTED OUTPUT ====

		SELECT zip_code
		FROM weather
		GROUP BY zip_code
		HAVING avg(mean_visibility_miles) < 10

	   zip_code
	0     94303
	ACTUAL OUTPUT ====

		
		SELECT zip_code
		FROM
		  (SELECT zip_code,
		          AVG(mean_visibility_miles) AS meanmean_visibility_miles
		   FROM weather
		   GROUP BY zip_code)
		WHERE (meanmean_visibility_miles <= 10.0)
		ORDER BY zip_code

	   zip_code
	0     94105
	1     94301
	2     94303
Wrong output for fuzzied solution in instance spider/bike_1/0002 (1085)
	EXPECTED OUTPUT ====

		SELECT name
		FROM station
		WHERE lat < 37.5

	                           name
	0               2nd at Townsend
	1  OnuSJSU 4th at San CarlosXfm
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM `station`
		WHERE (`lat` <= '37.5')
		ORDER BY name

	                           name
	0               2nd at Townsend
	1               2nd at Townsend
	2  OnuSJSU 4th at San CarlosXfm
No solution for instance spider/bike_1/0017 (1087)
Wrong output for base solution in instance spider/bike_1/0052 (1088)
	EXPECTED OUTPUT ====

	   avg_t1_lat_  avg_t1_long_
	0    37.746181   -122.361347
	ACTUAL OUTPUT ====

		SELECT avg(T1.lat),
		       avg(T1.long)
		FROM station AS T1
		JOIN trip AS T2 ON T1.id = T2.start_station_id

	   avg(t1.lat)  avg(t1.long)
	0    37.746181   -122.361347
Wrong output for ground truth in instance spider/bike_1/0052 (1088)
No solution for instance spider/bike_1/0008 (1089)
Wrong output for base solution in instance spider/bike_1/0039 (1090)
	EXPECTED OUTPUT ====

	        date  cloud_cover
	0  1/29/2014            8
	1   2/6/2014            8
	2   2/7/2014            8
	3   2/8/2014            8
	4   8/8/2015         <NA>
	ACTUAL OUTPUT ====

		SELECT date , cloud_cover
		FROM weather
		ORDER BY cloud_cover DESC
		LIMIT 5

	        date cloud_cover
	0  1/29/2014           8
	1   2/6/2014           8
	2   2/7/2014           8
	3   2/8/2014           8
	4   8/8/2015            
Wrong output for ground truth in instance spider/bike_1/0039 (1090)
Wrong output for base solution in instance spider/bike_1/0003 (1092)
	EXPECTED OUTPUT ====

	            city   max_lat_
	0  Mountain View  37.406940
	1      Palo Alto  37.448598
	2   Redwood City  37.491269
	3  San Francisco  37.804770
	4       San Jose  37.352601
	ACTUAL OUTPUT ====

		SELECT city,
		       max(lat)
		FROM station
		GROUP BY city

	            city   max(lat)
	0  Mountain View  37.406940
	1      Palo Alto  37.448598
	2   Redwood City  37.491269
	3  San Francisco  37.804770
	4       San Jose  37.352601
Wrong output for ground truth in instance spider/bike_1/0003 (1092)
Wrong output for base solution in instance spider/bike_1/0022 (1095)
	EXPECTED OUTPUT ====

	    avg_long_
	0 -122.167486
	ACTUAL OUTPUT ====

		SELECT avg(long)
		FROM station
		WHERE id NOT IN
		    (SELECT station_id
		     FROM status
		     GROUP BY station_id
		     HAVING max(bikes_available) > 10)

	    avg(long)
	0 -122.167486
Wrong output for ground truth in instance spider/bike_1/0022 (1095)
No solution for instance spider/bike_1/0030 (1096)
No solution for instance spider/bike_1/0013 (1097)
No solution for instance spider/bike_1/0006 (1098)
No solution for instance spider/bike_1/0004 (1099)
No solution for instance spider/bike_1/0026 (1101)
No solution for instance spider/bike_1/0015 (1102)
No solution for instance spider/bike_1/0005 (1103)
Wrong output for base solution in instance spider/bike_1/0016 (1104)
	EXPECTED OUTPUT ====

	         lat       long           city
	0  37.776617 -122.39526  San Francisco
	ACTUAL OUTPUT ====

		SELECT T1.lat,
		       T1.long,
		       T1.city
		FROM station AS T1
		JOIN trip AS T2 ON T1.id = T2.start_station_id
		ORDER BY T2.duration
		LIMIT 1

	         lat       long           city
	0  37.776617 -122.39526  San Francisco
Wrong output for ground truth in instance spider/bike_1/0016 (1104)
Error while executing solution for instance spider/bike_1/0050 (1105)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT `name`
FROM
  (SELECT `id`,
          `name`,
          `lat`,
          `long`,
          `dock_count`,
          `city`,
          `installation_date`,
          COUNT(DISTINCT `city`) OVER () AS `n_distinct`
   FROM
     (SELECT *
      FROM `station` AS `LHS`
      WHERE NOT EXISTS
          (SELECT 1
           FROM `trip` AS `RHS`
           WHERE (`LHS`.`id` = `RHS`.`id`) )))
WHERE (`city` = 'Palo Alto'
       AND n_distinct < 100)
ORDER BY name]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/bike_1/0032 (1106)
No solution for instance spider/bike_1/0045 (1107)
No solution for instance spider/bike_1/0018 (1108)
Wrong output for base solution in instance spider/bike_1/0041 (1109)
	EXPECTED OUTPUT ====

	                             name        long  avg_t2_duration_
	0                      Mezes Park -122.236234        253.333333
	1          Santa Clara at Almaden -121.894902        378.280000
	2    San Antonio Caltrain Station -122.106758        380.409091
	3                   2nd at Folsom -122.396236        399.678733
	4                   Howard at 2nd -122.398108        414.511737
	..                            ...         ...               ...
	64         Embarcadero at Vallejo -122.398525       1817.221649
	65         University and Emerson -122.163093       2643.600000
	66  Redwood City Caltrain Station -122.232089       2643.871795
	67     SJSU - San Salvador at 9th -121.877349       3597.095238
	68              Franklin at Maple -122.226904       3909.000000
	
	[69 rows x 3 columns]
	ACTUAL OUTPUT ====

		SELECT T1.name,
		       T1.long,
		       avg(T2.duration)
		FROM station AS T1
		JOIN trip AS T2 ON T1.id = T2.start_station_id
		GROUP BY T2.start_station_id

	                             name        long  avg(t2.duration)
	0                      Mezes Park -122.236234        253.333333
	1          Santa Clara at Almaden -121.894902        378.280000
	2    San Antonio Caltrain Station -122.106758        380.409091
	3                   2nd at Folsom -122.396236        399.678733
	4                   Howard at 2nd -122.398108        414.511737
	..                            ...         ...               ...
	64         Embarcadero at Vallejo -122.398525       1817.221649
	65         University and Emerson -122.163093       2643.600000
	66  Redwood City Caltrain Station -122.232089       2643.871795
	67     SJSU - San Salvador at 9th -121.877349       3597.095238
	68              Franklin at Maple -122.226904       3909.000000
	
	[69 rows x 3 columns]
Wrong output for ground truth in instance spider/bike_1/0041 (1109)
Wrong output for fuzzied solution in instance spider/bike_1/0051 (1110)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM station AS T1
		JOIN trip AS T2
		JOIN station AS T3
		JOIN trip AS T4 ON T1.id = T2.start_station_id
		AND T2.id = T4.id
		AND T3.id = T4.end_station_id
		WHERE T1.city = "Mountain View"
		  AND T3.city = "Palo Alto"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM `station`
		         WHERE (`city` = 'Mountain View'
		                AND `city` != 'Palo Alto')) AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM trip AS RHS
		           WHERE (LHS.id = RHS.id) )))
		ORDER BY count___

	   count___
	0         2
Wrong output for base solution in instance spider/bike_1/0020 (1112)
	EXPECTED OUTPUT ====

		SELECT zip_code
		FROM weather
		GROUP BY zip_code
		ORDER BY avg(mean_sea_level_pressure_inches)
		LIMIT 1

	   zip_code
	0     94301
	ACTUAL OUTPUT ====

		
		SELECT zip_code
		FROM
		  (SELECT max_gust_speed_mph,
		          zip_code,
		          AVG(mean_sea_level_pressure_inches) AS meanmean_sea_level_pressure_inches
		   FROM
		     (SELECT date, max_temperature_f,
		                   mean_temperature_f,
		                   min_humidity AS min_temperature_f,
		                   max_dew_point_f,
		                   mean_dew_point_f,
		                   min_dew_point_f,
		                   max_humidity,
		                   mean_humidity,
		                   min_humidity,
		                   max_sea_level_pressure_inches,
		                   mean_sea_level_pressure_inches,
		                   min_sea_level_pressure_inches,
		                   max_visibility_miles,
		                   mean_visibility_miles,
		                   min_visibility_miles,
		                   max_wind_speed_mph,
		                   mean_wind_speed_mph,
		                   max_gust_speed_mph,
		                   precipitation_inches,
		                   cloud_cover,
		                   EVENTS,
		                   wind_dir_degrees,
		                   zip_code,
		                   date_other,
		                   max_temperature_f_other,
		                   mean_temperature_f_other,
		                   max_dew_point_f_other,
		                   mean_dew_point_f_other,
		                   max_humidity_other,
		                   mean_humidity_other,
		                   min_humidity_other,
		                   max_sea_level_pressure_inches_other,
		                   mean_sea_level_pressure_inches_other,
		                   min_sea_level_pressure_inches_other,
		                   max_visibility_miles_other,
		                   mean_visibility_miles_other,
		                   min_visibility_miles_other,
		                   max_wind_speed_mph_other,
		                   mean_wind_speed_mph_other,
		                   max_gust_speed_mph_other,
		                   precipitation_inches_other,
		                   cloud_cover_other,
		                   events_other,
		                   wind_dir_degrees_other,
		                   zip_code_other
		      FROM
		        (SELECT date, max_temperature_f,
		                      mean_temperature_f,
		                      min_temperature_f,
		                      max_dew_point_f,
		                      mean_dew_point_f,
		                      mean_humidity AS min_dew_point_f,
		                      max_humidity,
		                      mean_humidity,
		                      min_humidity,
		                      max_sea_level_pressure_inches,
		                      mean_sea_level_pressure_inches,
		                      min_sea_level_pressure_inches,
		                      max_visibility_miles,
		                      mean_visibility_miles,
		                      min_visibility_miles,
		                      max_wind_speed_mph,
		                      mean_wind_speed_mph,
		                      max_gust_speed_mph,
		                      precipitation_inches,
		                      cloud_cover,
		                      EVENTS,
		                      wind_dir_degrees,
		                      zip_code,
		                      date_other,
		                      max_temperature_f_other,
		                      mean_temperature_f_other,
		                      max_dew_point_f_other,
		                      mean_dew_point_f_other,
		                      max_humidity_other,
		                      mean_humidity_other,
		                      min_humidity_other,
		                      max_sea_level_pressure_inches_other,
		                      mean_sea_level_pressure_inches_other,
		                      min_sea_level_pressure_inches_other,
		                      max_visibility_miles_other,
		                      mean_visibility_miles_other,
		                      min_visibility_miles_other,
		                      max_wind_speed_mph_other,
		                      mean_wind_speed_mph_other,
		                      max_gust_speed_mph_other,
		                      precipitation_inches_other,
		                      cloud_cover_other,
		                      events_other,
		                      wind_dir_degrees_other,
		                      zip_code_other
		         FROM
		           (SELECT LHS.date AS date,
		                   LHS.max_temperature_f AS max_temperature_f,
		                   LHS.mean_temperature_f AS mean_temperature_f,
		                   LHS.min_temperature_f AS min_temperature_f,
		                   LHS.max_dew_point_f AS max_dew_point_f,
		                   LHS.mean_dew_point_f AS mean_dew_point_f,
		                   LHS.min_dew_point_f AS min_dew_point_f,
		                   LHS.max_humidity AS max_humidity,
		                   LHS.mean_humidity AS mean_humidity,
		                   LHS.min_humidity AS min_humidity,
		                   LHS.max_sea_level_pressure_inches AS max_sea_level_pressure_inches,
		                   LHS.mean_sea_level_pressure_inches AS mean_sea_level_pressure_inches,
		                   LHS.min_sea_level_pressure_inches AS min_sea_level_pressure_inches,
		                   LHS.max_visibility_miles AS max_visibility_miles,
		                   LHS.mean_visibility_miles AS mean_visibility_miles,
		                   LHS.min_visibility_miles AS min_visibility_miles,
		                   LHS.max_wind_speed_mph AS max_wind_speed_mph,
		                   LHS.mean_wind_speed_mph AS mean_wind_speed_mph,
		                   LHS.max_gust_speed_mph AS max_gust_speed_mph,
		                   LHS.precipitation_inches AS precipitation_inches,
		                   LHS.cloud_cover AS cloud_cover,
		                   LHS.events AS EVENTS,
		                   LHS.wind_dir_degrees AS wind_dir_degrees,
		                   LHS.zip_code AS zip_code,
		                   RHS.date AS date_other,
		                   RHS.max_temperature_f AS max_temperature_f_other,
		                   RHS.mean_temperature_f AS mean_temperature_f_other,
		                   RHS.max_dew_point_f AS max_dew_point_f_other,
		                   RHS.mean_dew_point_f AS mean_dew_point_f_other,
		                   RHS.max_humidity AS max_humidity_other,
		                   RHS.mean_humidity AS mean_humidity_other,
		                   RHS.min_humidity AS min_humidity_other,
		                   RHS.max_sea_level_pressure_inches AS max_sea_level_pressure_inches_other,
		                   RHS.mean_sea_level_pressure_inches AS mean_sea_level_pressure_inches_other,
		                   RHS.min_sea_level_pressure_inches AS min_sea_level_pressure_inches_other,
		                   RHS.max_visibility_miles AS max_visibility_miles_other,
		                   RHS.mean_visibility_miles AS mean_visibility_miles_other,
		                   RHS.min_visibility_miles AS min_visibility_miles_other,
		                   RHS.max_wind_speed_mph AS max_wind_speed_mph_other,
		                   RHS.mean_wind_speed_mph AS mean_wind_speed_mph_other,
		                   RHS.max_gust_speed_mph AS max_gust_speed_mph_other,
		                   RHS.precipitation_inches AS precipitation_inches_other,
		                   RHS.cloud_cover AS cloud_cover_other,
		                   RHS.events AS events_other,
		                   RHS.wind_dir_degrees AS wind_dir_degrees_other,
		                   RHS.zip_code AS zip_code_other
		            FROM weather AS LHS
		            INNER JOIN weather AS RHS ON (LHS.mean_humidity = RHS.min_dew_point_f
		                                             AND LHS.min_humidity = RHS.min_temperature_f))))
		   GROUP BY max_gust_speed_mph,
		            zip_code)
		ORDER BY zip_code

	    zip_code
	0      94041
	1      94041
	2      94041
	3      94301
	4      94301
	5      94301
	6      94301
	7      94301
	8      94301
	9      94301
	10     94301
Wrong output for fuzzied solution in instance spider/bike_1/0019 (1113)
	EXPECTED OUTPUT ====

		SELECT cloud_cover
		FROM weather
		WHERE zip_code = 94107
		GROUP BY cloud_cover
		ORDER BY COUNT (*) DESC
		LIMIT 3

	   cloud_cover
	0            3
	1            4
	2            8
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS cloud_cover
		FROM
		  (SELECT mean_sea_level_pressure_inches,
		          wind_dir_degrees,
		          COUNT() AS n
		   FROM weather
		   GROUP BY mean_sea_level_pressure_inches,
		            wind_dir_degrees)
		WHERE (n >= 94107
		       OR n > 3)
		ORDER BY cloud_cover

	   cloud_cover
	0            4
No solution for instance spider/bike_1/0007 (1114)
No solution for instance spider/bike_1/0034 (1115)
No solution for instance spider/bike_1/0024 (1116)
Wrong output for base solution in instance spider/bike_1/0021 (1117)
	EXPECTED OUTPUT ====

	   avg_bikes_available_
	0              7.657901
	ACTUAL OUTPUT ====

		SELECT avg(bikes_available)
		FROM status
		WHERE station_id NOT IN
		    (SELECT id
		     FROM station
		     WHERE city = "Palo Alto")

	   avg(bikes_available)
	0              7.657901
Wrong output for ground truth in instance spider/bike_1/0021 (1117)
No solution for instance spider/bike_1/0023 (1118)
No solution for instance spider/bike_1/0001 (1119)
Wrong output for base solution in instance spider/bike_1/0046 (1121)
	EXPECTED OUTPUT ====

		SELECT date
		FROM weather
		WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31

	         date
	0   1/12/2014
	1   1/12/2014
	2   1/12/2014
	3   1/12/2014
	4   1/12/2014
	..        ...
	82  2/24/2015
	83  2/24/2015
	84  2/24/2015
	85   3/5/2015
	86  4/14/2015
	
	[87 rows x 1 columns]
	ACTUAL OUTPUT ====

		
		SELECT `date`
		FROM `weather`
		WHERE (`mean_sea_level_pressure_inches` != 31.0
		       AND `mean_sea_level_pressure_inches` >= '30.3')
		ORDER BY date

	         date
	0   1/12/2014
	1   1/12/2014
	2   1/12/2014
	3   1/12/2014
	4   1/12/2014
	..        ...
	83  2/24/2015
	84  2/24/2015
	85   3/5/2015
	86  4/14/2015
	87   8/8/2015
	
	[88 rows x 1 columns]
Wrong output for base solution in instance spider/bike_1/0047 (1122)
	EXPECTED OUTPUT ====

		SELECT date , max_temperature_f - min_temperature_f
		FROM weather
		ORDER BY max_temperature_f - min_temperature_f
		LIMIT 1

	        date  max_temperature_f - min_temperature_f
	0  4/16/2015                                      0
	ACTUAL OUTPUT ====

		
		SELECT date, cloud_cover AS max_temperature_f___min_temperature_f
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM weather
		      ORDER BY min_temperature_f DESC)
		   LIMIT 1)

	       date max_temperature_f___min_temperature_f
	0  8/8/2015                                      
No solution for instance spider/bike_1/0014 (1123)
No solution for instance spider/bike_1/0025 (1125)
Wrong output for fuzzied solution in instance spider/bike_1/0011 (1126)
	EXPECTED OUTPUT ====

		SELECT COUNT(*)
		FROM station
		WHERE city = "Mountain View"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `station`
		WHERE (`city` = 'Mountain View')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/bike_1/0029 (1127)
Wrong output for base solution in instance spider/bike_1/0044 (1129)
	EXPECTED OUTPUT ====

		SELECT DISTINCT zip_code
		FROM weather
		EXCEPT
		SELECT DISTINCT zip_code
		FROM weather
		WHERE max_dew_point_f >= 70

	   zip_code
	0     94063
	1     94107
	2     95113
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT zip_code
		FROM
		  (SELECT date, max_temperature_f,
		                mean_temperature_f,
		                min_temperature_f,
		                max_temperature_f AS max_dew_point_f,
		                mean_dew_point_f,
		                min_dew_point_f,
		                max_humidity,
		                mean_humidity,
		                min_humidity,
		                max_sea_level_pressure_inches,
		                mean_sea_level_pressure_inches,
		                min_sea_level_pressure_inches,
		                max_visibility_miles,
		                mean_visibility_miles,
		                min_visibility_miles,
		                max_wind_speed_mph,
		                mean_wind_speed_mph,
		                max_gust_speed_mph,
		                precipitation_inches,
		                cloud_cover,
		                EVENTS,
		                wind_dir_degrees,
		                zip_code,
		                date_other,
		                max_temperature_f_other,
		                mean_temperature_f_other,
		                min_temperature_f_other,
		                min_dew_point_f_other,
		                max_humidity_other,
		                mean_humidity_other,
		                min_humidity_other,
		                max_sea_level_pressure_inches_other,
		                mean_sea_level_pressure_inches_other,
		                min_sea_level_pressure_inches_other,
		                max_visibility_miles_other,
		                mean_visibility_miles_other,
		                min_visibility_miles_other,
		                max_wind_speed_mph_other,
		                mean_wind_speed_mph_other,
		                max_gust_speed_mph_other,
		                precipitation_inches_other,
		                cloud_cover_other,
		                events_other,
		                wind_dir_degrees_other,
		                zip_code_other
		   FROM
		     (SELECT LHS.date AS date,
		             LHS.max_temperature_f AS max_temperature_f,
		             LHS.mean_temperature_f AS mean_temperature_f,
		             LHS.min_temperature_f AS min_temperature_f,
		             LHS.max_dew_point_f AS max_dew_point_f,
		             LHS.mean_dew_point_f AS mean_dew_point_f,
		             LHS.min_dew_point_f AS min_dew_point_f,
		             LHS.max_humidity AS max_humidity,
		             LHS.mean_humidity AS mean_humidity,
		             LHS.min_humidity AS min_humidity,
		             LHS.max_sea_level_pressure_inches AS max_sea_level_pressure_inches,
		             LHS.mean_sea_level_pressure_inches AS mean_sea_level_pressure_inches,
		             LHS.min_sea_level_pressure_inches AS min_sea_level_pressure_inches,
		             LHS.max_visibility_miles AS max_visibility_miles,
		             LHS.mean_visibility_miles AS mean_visibility_miles,
		             LHS.min_visibility_miles AS min_visibility_miles,
		             LHS.max_wind_speed_mph AS max_wind_speed_mph,
		             LHS.mean_wind_speed_mph AS mean_wind_speed_mph,
		             LHS.max_gust_speed_mph AS max_gust_speed_mph,
		             LHS.precipitation_inches AS precipitation_inches,
		             LHS.cloud_cover AS cloud_cover,
		             LHS.events AS EVENTS,
		             LHS.wind_dir_degrees AS wind_dir_degrees,
		             LHS.zip_code AS zip_code,
		             RHS.date AS date_other,
		             RHS.max_temperature_f AS max_temperature_f_other,
		             RHS.mean_temperature_f AS mean_temperature_f_other,
		             RHS.min_temperature_f AS min_temperature_f_other,
		             RHS.min_dew_point_f AS min_dew_point_f_other,
		             RHS.max_humidity AS max_humidity_other,
		             RHS.mean_humidity AS mean_humidity_other,
		             RHS.min_humidity AS min_humidity_other,
		             RHS.max_sea_level_pressure_inches AS max_sea_level_pressure_inches_other,
		             RHS.mean_sea_level_pressure_inches AS mean_sea_level_pressure_inches_other,
		             RHS.min_sea_level_pressure_inches AS min_sea_level_pressure_inches_other,
		             RHS.max_visibility_miles AS max_visibility_miles_other,
		             RHS.mean_visibility_miles AS mean_visibility_miles_other,
		             RHS.min_visibility_miles AS min_visibility_miles_other,
		             RHS.max_wind_speed_mph AS max_wind_speed_mph_other,
		             RHS.mean_wind_speed_mph AS mean_wind_speed_mph_other,
		             RHS.max_gust_speed_mph AS max_gust_speed_mph_other,
		             RHS.precipitation_inches AS precipitation_inches_other,
		             RHS.cloud_cover AS cloud_cover_other,
		             RHS.events AS events_other,
		             RHS.wind_dir_degrees AS wind_dir_degrees_other,
		             RHS.zip_code AS zip_code_other
		      FROM
		        (SELECT *
		         FROM weather
		         WHERE (max_dew_point_f != 70)) AS LHS
		      INNER JOIN weather AS RHS ON (LHS.max_temperature_f = RHS.max_dew_point_f
		                                       AND LHS.max_gust_speed_mph = RHS.mean_dew_point_f)))
		ORDER BY zip_code

	   zip_code
	0     94041
	1     94063
	2     94107
	3     94301
	4     95113
No solution for instance spider/bike_1/0040 (1130)
No solution for instance spider/bike_1/0028 (1131)
No solution for instance spider/bike_1/0049 (1132)
No solution for instance spider/bike_1/0031 (1133)
Wrong output for fuzzied solution in instance spider/flight_company/0008 (1136)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.type
		FROM operate_company AS T1
		JOIN flight AS t2 ON T1.id = T2.company_id
		WHERE T2.velocity < 200

	                  type
	0  rssJoint VentureEzd
	1            ubsidiary
	ACTUAL OUTPUT ====

		
		SELECT TYPE
		FROM
		  (SELECT id,
		          name,
		          TYPE,
		          principal_activities,
		          incorporated_in,
		          group_equity_shareholding,
		          id_other,
		          vehicle_flight_number, date, pilot,
		                                       velocity,
		                                       altitude,
		                                       airport_id,
		                                       id AS company_id
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.name AS name,
		             LHS.type AS TYPE,
		             LHS.principal_activities AS principal_activities,
		             LHS.incorporated_in AS incorporated_in,
		             LHS.group_equity_shareholding AS group_equity_shareholding,
		             RHS.id AS id_other,
		             RHS.vehicle_flight_number AS vehicle_flight_number,
		             RHS.date AS date,
		             RHS.pilot AS pilot,
		             RHS.velocity AS velocity,
		             RHS.altitude AS altitude,
		             RHS.airport_id AS airport_id
		      FROM operate_company AS LHS
		      INNER JOIN flight AS RHS ON (LHS.id = RHS.company_id)))
		WHERE (velocity < 200.0)
		ORDER BY TYPE

	                  type
	0  rssJoint VentureEzd
	1            ubsidiary
	2            ubsidiary
Wrong output for fuzzied solution in instance spider/flight_company/0013 (1138)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM airport
		WHERE id NOT IN
		    (SELECT airport_id
		     FROM flight
		     WHERE pilot = 'Thompson' );

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT `id` AS `count___`
		FROM
		  (SELECT `id`,
		          `city`,
		          `country`,
		          `iata`,
		          `icao`,
		          `name`,
		          `pilot`,
		          `velocity`,
		          `id` AS `n`
		   FROM
		     (SELECT `LHS`.`id` AS `id`,
		             `LHS`.`city` AS `city`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`iata` AS `iata`,
		             `LHS`.`icao` AS `icao`,
		             `LHS`.`name` AS `name`,
		             `RHS`.`pilot` AS `pilot`,
		             `RHS`.`velocity` AS `velocity`
		      FROM `airport` AS `LHS`
		      INNER JOIN
		        (SELECT `pilot`,
		                `velocity`,
		                COUNT() AS `n`
		         FROM `flight`
		         GROUP BY `pilot`,
		                  `velocity`) AS `RHS` ON (`LHS`.`id` = `RHS`.`n`)))
		WHERE (`pilot` != 'Thompson'
		       OR n != id)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/flight_company/0004 (1140)
	EXPECTED OUTPUT ====

		SELECT max(group_equity_shareholding)
		FROM operate_company

	   max(group_equity_shareholding)
	0                          100.02
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT maxgroup_equity_shareholding AS max_group_equity_shareholding_
		FROM
		  (SELECT principal_activities,
		          MAX(group_equity_shareholding) AS maxgroup_equity_shareholding
		   FROM operate_company
		   GROUP BY principal_activities)
		ORDER BY max_group_equity_shareholding_

	   max_group_equity_shareholding_
	0                           30.02
	1                           39.99
	2                           99.98
	3                           99.99
	4                          100.02
Wrong output for fuzzied solution in instance spider/flight_company/0012 (1141)
	EXPECTED OUTPUT ====

		SELECT TYPE,
		       count(*)
		FROM operate_company
		GROUP BY TYPE
		ORDER BY count(*) DESC
		LIMIT 1

	         type  count(*)
	0  Subsidiary         3
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT TYPE,
		                n AS count___
		FROM
		  (SELECT LHS.group_equity_shareholding AS group_equity_shareholding,
		          LHS.type AS TYPE,
		          LHS.n AS n,
		          RHS.group_equity_shareholding AS group_equity_shareholding_other,
		          RHS.type AS type_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT group_equity_shareholding,
		             TYPE,
		             COUNT() AS n
		      FROM operate_company
		      GROUP BY group_equity_shareholding,
		               TYPE) AS LHS
		   CROSS JOIN
		     (SELECT group_equity_shareholding,
		             TYPE,
		             COUNT() AS n
		      FROM operate_company
		      GROUP BY group_equity_shareholding,
		               TYPE) AS RHS)
		WHERE (n > n_other)
		ORDER BY TYPE

	        type  count___
	0  ubsidiary         2
No solution for instance spider/flight_company/0015 (1142)
Wrong output for base solution in instance spider/flight_company/0016 (1144)
	EXPECTED OUTPUT ====

		SELECT T3.id,
		       count(*)
		FROM operate_company AS T1
		JOIN flight AS t2 ON T1.id = T2.company_id
		JOIN airport AS T3 ON T2.airport_id = T3.id
		GROUP BY T3.id

	   id  count(*)
	0   1         1
	1   3         1
	2   5         1
	3   8         1
	4   9         1
	5   6         2
	6   2         3
	7   4         3
	ACTUAL OUTPUT ====

		
		SELECT airport_id AS id,
		       n AS count___
		FROM
		  (SELECT LHS.id AS id,
		          LHS.city AS city,
		          LHS.country AS country,
		          LHS.iata AS iata,
		          LHS.icao AS icao,
		          LHS.name AS name,
		          LHS.type AS TYPE,
		          LHS.principal_activities AS principal_activities,
		          LHS.incorporated_in AS incorporated_in,
		          LHS.group_equity_shareholding AS group_equity_shareholding,
		          RHS.airport_id AS airport_id,
		          RHS.altitude AS altitude,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.city AS city,
		             LHS.country AS country,
		             LHS.iata AS iata,
		             LHS.icao AS icao,
		             LHS.name AS name,
		             RHS.type AS TYPE,
		             RHS.principal_activities AS principal_activities,
		             RHS.incorporated_in AS incorporated_in,
		             RHS.group_equity_shareholding AS group_equity_shareholding
		      FROM airport AS LHS
		      INNER JOIN operate_company AS RHS ON (LHS.id = RHS.id
		                                               AND LHS.name = RHS.name)) AS LHS
		   CROSS JOIN
		     (SELECT airport_id,
		             altitude,
		             COUNT() AS n
		      FROM flight
		      GROUP BY airport_id,
		               altitude) AS RHS)
		ORDER BY id

	Empty DataFrame
	Columns: [id, count___]
	Index: []
Wrong output for fuzzied solution in instance spider/flight_company/0018 (1145)
	EXPECTED OUTPUT ====

		SELECT country
		FROM airport
		GROUP BY country
		HAVING count(*) > 2

	Empty DataFrame
	Columns: [country]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM
		  (SELECT country,
		          COUNT() AS n
		   FROM airport
		   GROUP BY country)
		WHERE (n >= 2)
		ORDER BY country

	   country
	0  Belgium
Wrong output for fuzzied solution in instance spider/flight_company/0019 (1146)
	EXPECTED OUTPUT ====

		SELECT pilot
		FROM flight
		GROUP BY pilot
		ORDER BY count(*) DESC
		LIMIT 1

	      pilot
	0  Thompson
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT pilot
		FROM
		  (SELECT pilot,
		          vehicle_flight_number,
		          COUNT() AS n
		   FROM
		     (SELECT company_id AS id,
		             vehicle_flight_number, date, pilot,
		                                          velocity,
		                                          altitude,
		                                          airport_id,
		                                          company_id,
		                                          date_other,
		                                          pilot_other,
		                                          velocity_other,
		                                          altitude_other,
		                                          airport_id_other,
		                                          company_id_other
		      FROM
		        (SELECT LHS.id AS id,
		                LHS.vehicle_flight_number AS vehicle_flight_number,
		                LHS.date AS date,
		                LHS.pilot AS pilot,
		                LHS.velocity AS velocity,
		                LHS.altitude AS altitude,
		                LHS.airport_id AS airport_id,
		                LHS.company_id AS company_id,
		                RHS.date AS date_other,
		                RHS.pilot AS pilot_other,
		                RHS.velocity AS velocity_other,
		                RHS.altitude AS altitude_other,
		                RHS.airport_id AS airport_id_other,
		                RHS.company_id AS company_id_other
		         FROM flight AS LHS
		         INNER JOIN flight AS RHS ON (LHS.company_id = RHS.id
		                                         AND LHS.vehicle_flight_number = RHS.vehicle_flight_number)))
		   GROUP BY pilot,
		            vehicle_flight_number)
		ORDER BY pilot

	      pilot
	0   Thompso
	1  Thompson
Wrong output for fuzzied solution in instance spider/flight_company/0001 (1148)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM flight
		WHERE velocity > 200

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT velocity,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM flight
		      WHERE (velocity > 200.0))
		   GROUP BY velocity)
		ORDER BY count___

	   count___
	0         1
	1         1
	2         3
	3         3
Wrong output for fuzzied solution in instance spider/flight_company/0014 (1149)
	EXPECTED OUTPUT ====

		SELECT T2.pilot
		FROM operate_company AS T1
		JOIN flight AS t2 ON T1.id = T2.company_id
		WHERE T1.principal_activities = 'Cargo' INTERSECT
		  SELECT T2.pilot
		  FROM operate_company AS T1
		  JOIN flight AS t2 ON T1.id = T2.company_id WHERE T1.principal_activities = 'Catering services'

	Empty DataFrame
	Columns: [pilot]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `pilot`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`type` AS `type`,
		          `LHS`.`principal_activities` AS `principal_activities`,
		          `LHS`.`incorporated_in` AS `incorporated_in`,
		          `LHS`.`group_equity_shareholding` AS `group_equity_shareholding`,
		          `RHS`.`id` AS `id_other`,
		          `RHS`.`vehicle_flight_number` AS `vehicle_flight_number`,
		          `RHS`.`date` AS `date`,
		          `RHS`.`pilot` AS `pilot`,
		          `RHS`.`velocity` AS `velocity`,
		          `RHS`.`altitude` AS `altitude`,
		          `RHS`.`company_id` AS `company_id`
		   FROM
		     (SELECT *
		      FROM `operate_company`
		      WHERE (`principal_activities` != 'Cargo'
		             AND `principal_activities` = 'Catering services')) AS LHS
		   INNER JOIN flight AS RHS ON (LHS.id = RHS.airport_id))
		ORDER BY pilot

	     pilot
	0  Thompso
No solution for instance spider/flight_company/0009 (1150)
Wrong output for fuzzied solution in instance spider/flight_company/0011 (1151)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.pilot
		FROM airport AS T1
		JOIN flight AS T2 ON T1.id = T2.airport_id
		WHERE T1.country = 'United States'
		  OR T1.name = 'Billund Airport'

	            pilot
	0  B1EPetersonfy)
	1        Peterson
	2         Thompso
	3        Thompson
	4   ThompsonO4)0v
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `pilot`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`vehicle_flight_number` AS `vehicle_flight_number`,
		          `LHS`.`date` AS `date`,
		          `LHS`.`pilot` AS `pilot`,
		          `LHS`.`velocity` AS `velocity`,
		          `LHS`.`altitude` AS `altitude`,
		          `LHS`.`airport_id` AS `airport_id`,
		          `LHS`.`company_id` AS `company_id`,
		          `RHS`.`city` AS `city`,
		          `RHS`.`country` AS `country`,
		          `RHS`.`iata` AS `iata`,
		          `RHS`.`icao` AS `icao`,
		          `RHS`.`name` AS `name`
		   FROM `flight` AS `LHS`
		   LEFT JOIN `airport` AS `RHS` ON (`LHS`.`id` = `RHS`.`id`))
		WHERE (`country` = 'United States'
		       OR `name` = 'Billund Airport')
		ORDER BY pilot

	      pilot
	0  Thompson
Wrong output for fuzzied solution in instance spider/flight_company/0010 (1152)
	EXPECTED OUTPUT ====

		SELECT T1.id,
		       T1.name,
		       T1.IATA
		FROM airport AS T1
		JOIN flight AS T2 ON T1.id = T2.airport_id
		GROUP BY T2.id
		ORDER BY count(*) DESC
		LIMIT 1

	   id                   name       iata
	0  10  kIUEl Prat AirportLo5  gAkBGOQpi
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT id,
		                name,
		                iata
		FROM
		  (SELECT LHS.id AS id,
		          LHS.city AS city,
		          LHS.country AS country,
		          LHS.iata AS iata,
		          LHS.icao AS icao,
		          LHS.name AS name,
		          RHS.id AS id_other,
		          RHS.pilot AS pilot
		   FROM airport AS LHS
		   INNER JOIN
		     (SELECT id,
		             pilot,
		             COUNT() AS n
		      FROM flight
		      GROUP BY id,
		               pilot) AS RHS ON (LHS.id = RHS.n))
		ORDER BY id

	Empty DataFrame
	Columns: [id, name, iata]
	Index: []
Wrong output for fuzzied solution in instance spider/insurance_and_eClaims/0017 (1154)
	EXPECTED OUTPUT ====

		SELECT t2.customer_details
		FROM policies AS t1
		JOIN customers AS t2 ON t1.customer_id = t2.customer_id
		GROUP BY t2.customer_details
		ORDER BY count(*) DESC
		LIMIT 1

	  customer_details
	0   Dr. Diana Rath
	ACTUAL OUTPUT ====

		
		SELECT customer_details
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.end_date AS end_date,
		                LHS.n AS n,
		                RHS.customer_details AS customer_details
		         FROM
		           (SELECT customer_id,
		                   end_date,
		                   COUNT() AS n
		            FROM policies
		            GROUP BY customer_id,
		                     end_date) AS LHS
		         INNER JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))
		      ORDER BY end_date)
		   LIMIT 1)

	      customer_details
	0  Dr. Diana RathWfqQX
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for fuzzied solution in instance spider/insurance_and_eClaims/0003 (1156)
	EXPECTED OUTPUT ====

		SELECT policy_type_code
		FROM policies
		GROUP BY policy_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  policy_type_code
	0        Uniformed
	ACTUAL OUTPUT ====

		
		SELECT policy_type_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT customer_id,
		                policy_type_code,
		                COUNT() AS n
		         FROM policies
		         GROUP BY customer_id,
		                  policy_type_code)
		      ORDER BY n DESC)
		   LIMIT 1)

	  policy_type_code
	0     Jurisdiction
Wrong output for fuzzied solution in instance spider/insurance_and_eClaims/0013 (1157)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t2.customer_details
		FROM policies AS t1
		JOIN customers AS t2 ON t1.customer_id = t2.customer_id
		WHERE t1.policy_type_code = "Deputy"

	  customer_details
	0   Dr. Diana Rath
	ACTUAL OUTPUT ====

		
		SELECT `customer_details`
		FROM
		  (SELECT `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`customer_details` AS `customer_details`,
		          `RHS`.`policy_id` AS `policy_id`,
		          `RHS`.`policy_type_code` AS `policy_type_code`,
		          `RHS`.`start_date` AS `start_date`,
		          `RHS`.`end_date` AS `end_date`
		   FROM `customers` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `policies`
		      WHERE (`policy_type_code` = 'Deputy')) AS RHS ON (LHS.customer_id = RHS.customer_id))
		ORDER BY customer_details

	  customer_details
	0   Dr. Diana Rath
	1   Dr. Diana Rath
	2   Dr. Diana Rath
Wrong output for base solution in instance spider/insurance_and_eClaims/0006 (1158)
	EXPECTED OUTPUT ====

	   sum_t1_amount_claimed_
	0                 1293.55
	ACTUAL OUTPUT ====

		SELECT sum(t1.amount_claimed)
		FROM claim_headers AS t1
		JOIN claims_documents AS t2 ON t1.claim_header_id = t2.claim_id
		WHERE t2.created_date =
		    (SELECT created_date
		     FROM claims_documents
		     ORDER BY created_date
		     LIMIT 1)

	   sum(t1.amount_claimed)
	0                 1293.55
Wrong output for ground truth in instance spider/insurance_and_eClaims/0006 (1158)
Wrong output for fuzzied solution in instance spider/insurance_and_eClaims/0004 (1159)
	EXPECTED OUTPUT ====

		SELECT policy_type_code
		FROM policies
		GROUP BY policy_type_code
		HAVING count(*) > 2

	  policy_type_code
	0           Deputy
	1     Jurisdiction
	2        Uniformed
	ACTUAL OUTPUT ====

		
		SELECT policy_type_code
		FROM
		  (SELECT policy_type_code,
		          COUNT() AS n
		   FROM policies
		   GROUP BY policy_type_code)
		WHERE (n >= 2)
		ORDER BY policy_type_code

	  policy_type_code
	0           Deputy
	1     Jurisdiction
	2        Uniformed
	3      urisdiction
No solution for instance spider/insurance_and_eClaims/0012 (1160)
No solution for instance spider/insurance_and_eClaims/0015 (1161)
Wrong output for base solution in instance spider/insurance_and_eClaims/0005 (1162)
	EXPECTED OUTPUT ====

	   sum_amount_piad_  avg_amount_piad_
	0           7314.68        487.645333
	ACTUAL OUTPUT ====

		SELECT sum(amount_piad),
		       avg(amount_piad)
		FROM claim_headers

	   sum(amount_piad)  avg(amount_piad)
	0           7314.68        487.645333
Wrong output for ground truth in instance spider/insurance_and_eClaims/0005 (1162)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for fuzzied solution in instance spider/insurance_and_eClaims/0014 (1169)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t2.customer_details
		FROM policies AS t1
		JOIN customers AS t2 ON t1.customer_id = t2.customer_id
		WHERE t1.policy_type_code = "Deputy"
		  OR t1.policy_type_code = "Uniform"

	              customer_details
	0  B4HMiss Felicita ReichelQ(o
	1               Dr. Diana Rath
	2          Mr. Edwardo Blanda 
	ACTUAL OUTPUT ====

		
		SELECT `customer_details`
		FROM
		  (SELECT `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`customer_details` AS `customer_details`,
		          `RHS`.`policy_id` AS `policy_id`,
		          `RHS`.`policy_type_code` AS `policy_type_code`,
		          `RHS`.`start_date` AS `start_date`,
		          `RHS`.`end_date` AS `end_date`
		   FROM `customers` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `policies`
		      WHERE (`policy_type_code` = 'Deputy')) AS RHS ON (LHS.customer_id = RHS.customer_id))
		ORDER BY customer_details

	              customer_details
	0  B4HMiss Felicita ReichelQ(o
	1               Dr. Diana Rath
	2               Dr. Diana Rath
Wrong output for fuzzied solution in instance spider/insurance_and_eClaims/0009 (1170)
	EXPECTED OUTPUT ====

		SELECT customer_details
		FROM customers
		EXCEPT
		SELECT t2.customer_details
		FROM policies AS t1
		JOIN customers AS t2 ON t1.customer_id = t2.customer_id

	          customer_details
	0     0O3Sydnie Friesenv3A
	1  Lauriane Ferry PhDd42sP
	2      ROuSIog)KvXlTQ2vKZf
	3      j2KaSSydnie Friesen
	4         merica Jaskolski
	ACTUAL OUTPUT ====

		
		SELECT customer_details
		FROM
		  (SELECT *
		   FROM customers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM policies AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY customer_details

	          customer_details
	0     0O3Sydnie Friesenv3A
	1        America Jaskolski
	2  Lauriane Ferry PhDd42sP
	3      ROuSIog)KvXlTQ2vKZf
	4           Sydnie Friesen
	5      j2KaSSydnie Friesen
	6         merica Jaskolski
Wrong output for fuzzied solution in instance spider/insurance_and_eClaims/0011 (1171)
	EXPECTED OUTPUT ====

		SELECT t2.claim_status_name
		FROM claims_processing AS t1
		JOIN claims_processing_stages AS t2 ON t1.claim_stage_id = t2.claim_stage_id
		GROUP BY t1.claim_stage_id
		ORDER BY count(*) DESC
		LIMIT 1

	  claim_status_name
	0        FA)Open)Yp
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT claim_status_name
		FROM
		  (SELECT LHS.claim_stage_id AS claim_stage_id,
		          LHS.next_claim_stage_id AS next_claim_stage_id,
		          LHS.claim_status_name AS claim_status_name,
		          LHS.claim_status_description AS claim_status_description,
		          RHS.claim_processing_id AS claim_processing_id
		   FROM claims_processing_stages AS LHS
		   INNER JOIN
		     (SELECT claim_processing_id,
		             COUNT() AS n
		      FROM claims_processing
		      GROUP BY claim_processing_id) AS RHS ON (LHS.claim_stage_id = RHS.n))
		ORDER BY claim_status_name

	  claim_status_name
	0              Open
Wrong output for base solution in instance spider/formula_1/0037 (1174)
	EXPECTED OUTPUT ====

	    avg_t2_fastestlapspeed_                      name  year
	0                150.597355         Monaco Grand Prix  2015
	1                151.406984      Singapore Grand Prix  2015
	2                176.392984        Spanish Grand Prix  2015
	3                178.447016        Russian Grand Prix  2015
	4                180.719387      Brazilian Grand Prix  2015
	5                182.294516        Mexican Grand Prix  2015
	6                182.863194      Hungarian Grand Prix  2015
	7                184.105129      Abu Dhabi Grand Prix  2015
	8                185.930435  United States Grand Prix  2015
	9                188.202677        Chinese Grand Prix  2015
	10               188.330806        Bahrain Grand Prix  2015
	11               189.373950     Australian Grand Prix  2015
	12               189.907887      Malaysian Grand Prix  2015
	13               195.544855        British Grand Prix  2015
	14               196.345419       Canadian Grand Prix  2015
	15               199.620636       European Grand Prix  2016
	16               202.048371        Belgian Grand Prix  2015
	17               202.265468       Austrian Grand Prix  2015
	18               203.450950     Azerbaijan Grand Prix  2017
	19               205.553773         German Grand Prix  2016
	20               211.279774       Japanese Grand Prix  2015
	21               228.389774        Italian Grand Prix  2015
	ACTUAL OUTPUT ====

		SELECT avg(T2.fastestlapspeed),
		       T1.name,
		       T1.year
		FROM races AS T1
		JOIN results AS T2 ON T1.raceid = T2.raceid
		WHERE T1.year > 2014
		GROUP BY T1.name
		ORDER BY T1.year

	    avg(t2.fastestlapspeed)                      name  year
	0                150.597355         Monaco Grand Prix  2015
	1                151.406984      Singapore Grand Prix  2015
	2                176.392984        Spanish Grand Prix  2015
	3                178.447016        Russian Grand Prix  2015
	4                180.719387      Brazilian Grand Prix  2015
	5                182.294516        Mexican Grand Prix  2015
	6                182.863194      Hungarian Grand Prix  2015
	7                184.105129      Abu Dhabi Grand Prix  2015
	8                185.930435  United States Grand Prix  2015
	9                188.202677        Chinese Grand Prix  2015
	10               188.330806        Bahrain Grand Prix  2015
	11               189.373950     Australian Grand Prix  2015
	12               189.907887      Malaysian Grand Prix  2015
	13               195.544855        British Grand Prix  2015
	14               196.345419       Canadian Grand Prix  2015
	15               199.620636       European Grand Prix  2016
	16               202.048371        Belgian Grand Prix  2015
	17               202.265468       Austrian Grand Prix  2015
	18               203.450950     Azerbaijan Grand Prix  2017
	19               205.553773         German Grand Prix  2016
	20               211.279774       Japanese Grand Prix  2015
	21               228.389774        Italian Grand Prix  2015
Wrong output for ground truth in instance spider/formula_1/0037 (1174)
Wrong output for fuzzied solution in instance spider/formula_1/0002 (1175)
	EXPECTED OUTPUT ====

		SELECT name , date
		FROM races
		ORDER BY date DESC
		LIMIT 1

	                       name             date
	0  QpqItalian Grand PrixrGC  tW3Zp2001-04-29
	ACTUAL OUTPUT ====

		
		SELECT name, date
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM races
		      ORDER BY raceid DESC)
		   LIMIT 1)

	                 name       date
	0  Italian Grand Prix  988-07-10
No solution for instance spider/formula_1/0036 (1176)
No solution for instance spider/formula_1/0017 (1177)
No solution for instance spider/formula_1/0039 (1178)
No solution for instance spider/formula_1/0038 (1179)
No solution for instance spider/formula_1/0027 (1181)
No solution for instance spider/formula_1/0030 (1182)
No solution for instance spider/formula_1/0012 (1185)
No solution for instance spider/formula_1/0015 (1187)
Wrong output for fuzzied solution in instance spider/formula_1/0016 (1188)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.forename
		FROM drivers AS T1
		JOIN driverstandings AS T2 ON T1.driverid = T2.driverid
		WHERE T2.position = 1
		  AND T2.wins = 1

	Empty DataFrame
	Columns: [forename]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT forename
		FROM
		  (SELECT LHS.driverstandingsid AS driverstandingsid,
		          LHS.raceid AS raceid,
		          LHS.driverid AS driverid,
		          LHS.points AS points,
		          LHS.position AS POSITION,
		          LHS.positiontext AS positiontext,
		          LHS.wins AS wins,
		          RHS.driverref AS driverref,
		          RHS.number AS number,
		          RHS.code AS code,
		          RHS.forename AS forename,
		          RHS.surname AS surname,
		          RHS.dob AS dob,
		          RHS.nationality AS nationality,
		          RHS.url AS url
		   FROM driverstandings AS LHS
		   INNER JOIN drivers AS RHS ON (LHS.driverid = RHS.driverid))
		WHERE (wins <= 1
		       AND wins = POSITION)
		ORDER BY forename

	          forename
	0  QkPGiancarloBrk
No solution for instance spider/formula_1/0035 (1191)
Wrong output for fuzzied solution in instance spider/formula_1/0020 (1192)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM races AS T1
		JOIN circuits AS T2 ON T1.circuitid = T2.circuitid
		WHERE T2.country = "Spain"
		  AND T1.year > 2017

	                      name
	0       Belgian Grand Prix
	1        D09x9OZyU3dx1cLcK
	2          Indianapolis 50
	3  Italian Grand PrixMR3(Z
	4  dUyU2u4kuDM8ZY7G2c2gki6
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `name`
		FROM
		  (SELECT `LHS`.`raceid` AS `raceid`,
		          `LHS`.`year` AS `year`,
		          `LHS`.`round` AS `round`,
		          `LHS`.`circuitid` AS `circuitid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`date` AS `date`,
		          `LHS`.`time` AS `time`,
		          `LHS`.`url` AS `url`,
		          `RHS`.`circuitref` AS `circuitref`,
		          `RHS`.`name` AS `name_other`,
		          `RHS`.`location` AS `location`,
		          `RHS`.`country` AS `country`,
		          `RHS`.`lat` AS `lat`,
		          `RHS`.`lng` AS `lng`,
		          `RHS`.`alt` AS `alt`,
		          `RHS`.`url` AS `url_other`
		   FROM `races` AS `LHS`
		   INNER JOIN `circuits` AS `RHS` ON (`LHS`.`circuitid` = `RHS`.`circuitid`))
		WHERE (`country` = 'Spain'
		       AND YEAR >= 2017)
		ORDER BY name

	                      name
	0       Belgian Grand Prix
	1  Belgian Grand PrixvpY1j
	2        D09x9OZyU3dx1cLcK
	3          Indianapolis 50
	4  Italian Grand PrixMR3(Z
	5  dUyU2u4kuDM8ZY7G2c2gki6
No solution for instance spider/formula_1/0034 (1194)
Wrong output for fuzzied solution in instance spider/formula_1/0021 (1196)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.name
		FROM races AS T1
		JOIN circuits AS T2 ON T1.circuitid = T2.circuitid
		WHERE T2.country = "Spain"
		  AND T1.year > 2000

	                      name
	0       Belgian Grand Prix
	1        D09x9OZyU3dx1cLcK
	2          Indianapolis 50
	3  Italian Grand PrixMR3(Z
	4  dUyU2u4kuDM8ZY7G2c2gki6
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `name`
		FROM
		  (SELECT `LHS`.`raceid` AS `raceid`,
		          `LHS`.`year` AS `year`,
		          `LHS`.`round` AS `round`,
		          `LHS`.`circuitid` AS `circuitid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`date` AS `date`,
		          `LHS`.`time` AS `time`,
		          `LHS`.`url` AS `url`,
		          `RHS`.`circuitref` AS `circuitref`,
		          `RHS`.`name` AS `name_other`,
		          `RHS`.`location` AS `location`,
		          `RHS`.`country` AS `country`,
		          `RHS`.`lat` AS `lat`,
		          `RHS`.`lng` AS `lng`,
		          `RHS`.`alt` AS `alt`,
		          `RHS`.`url` AS `url_other`
		   FROM `races` AS `LHS`
		   INNER JOIN `circuits` AS `RHS` ON (`LHS`.`circuitid` = `RHS`.`circuitid`))
		WHERE (`country` = 'Spain'
		       AND YEAR >= 2000)
		ORDER BY name

	                      name
	0       Belgian Grand Prix
	1  Belgian Grand PrixvpY1j
	2        D09x9OZyU3dx1cLcK
	3          Indianapolis 50
	4  Italian Grand PrixMR3(Z
	5  dUyU2u4kuDM8ZY7G2c2gki6
Wrong output for fuzzied solution in instance spider/formula_1/0001 (1197)
	EXPECTED OUTPUT ====

		SELECT name
		FROM races
		ORDER BY date DESC
		LIMIT 1

	                       name
	0  QpqItalian Grand PrixrGC
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM races
		      ORDER BY round DESC)
		   LIMIT 1)

	                     name
	0  x4th)Monaco Grand Prix
No solution for instance spider/formula_1/0014 (1198)
No solution for instance spider/formula_1/0011 (1200)
No solution for instance spider/formula_1/0010 (1201)
No solution for instance spider/formula_1/0040 (1202)
Wrong output for fuzzied solution in instance spider/e_government/0017 (1205)
	EXPECTED OUTPUT ====

		SELECT t1.party_email
		FROM parties AS t1
		JOIN party_services AS t2 ON t1.party_id = t2.customer_id
		GROUP BY t1.party_email
		ORDER BY count(*) DESC
		LIMIT 1

	               party_email
	0  erick.mills@example.com
	ACTUAL OUTPUT ====

		
		SELECT party_email
		FROM
		  (SELECT LHS.party_id AS party_id,
		          LHS.payment_method_code AS payment_method_code,
		          LHS.party_phone AS party_phone,
		          LHS.party_email AS party_email,
		          RHS.n AS n
		   FROM parties AS LHS
		   INNER JOIN
		     (SELECT n AS customer_id,
		             n
		      FROM
		        (SELECT customer_id,
		                customer_id AS n
		         FROM
		           (SELECT LHS.customer_id AS customer_id,
		                   LHS.n AS n
		            FROM
		              (SELECT customer_id,
		                      COUNT() AS n
		               FROM party_services
		               GROUP BY customer_id) AS LHS
		            INNER JOIN
		              (SELECT customer_id,
		                      COUNT() AS n
		               FROM party_services
		               GROUP BY customer_id) AS RHS ON (LHS.customer_id = RHS.n
		                                                AND LHS.n = RHS.customer_id)))) AS RHS ON (LHS.party_id = RHS.customer_id))
		ORDER BY party_email

	Empty DataFrame
	Columns: [party_email]
	Index: []
No solution for instance spider/e_government/0008 (1206)
Wrong output for fuzzied solution in instance spider/e_government/0003 (1207)
	EXPECTED OUTPUT ====

		SELECT t1.form_name
		FROM forms AS t1
		JOIN party_forms AS t2 ON t1.form_id = t2.form_id
		GROUP BY t2.form_id
		ORDER BY count(*) DESC
		LIMIT 1

	             form_name
	0  Divorce  Certificat
	ACTUAL OUTPUT ====

		
		SELECT form_name
		FROM
		  (SELECT form_id,
		          form_type_code,
		          service_id,
		          form_number,
		          form_name,
		          form_description,
		          n,
		          date_completion_started,
		          form_status_code,
		          date_fully_completed,
		          service_id AS party_id
		   FROM
		     (SELECT LHS.form_id AS form_id,
		             LHS.form_type_code AS form_type_code,
		             LHS.service_id AS service_id,
		             LHS.form_number AS form_number,
		             LHS.form_name AS form_name,
		             LHS.form_description AS form_description,
		             LHS.n AS n,
		             RHS.date_completion_started AS date_completion_started,
		             RHS.form_status_code AS form_status_code,
		             RHS.date_fully_completed AS date_fully_completed
		      FROM
		        (SELECT form_id,
		                form_type_code,
		                service_id,
		                form_number,
		                form_name,
		                form_description,
		                COUNT(*) OVER () AS n
		         FROM forms) AS LHS
		      INNER JOIN party_forms AS RHS ON (LHS.service_id = RHS.party_id
		                                           AND LHS.n = RHS.form_id)))
		ORDER BY form_name

	Empty DataFrame
	Columns: [form_name]
	Index: []
Wrong output for fuzzied solution in instance spider/e_government/0013 (1208)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM addresses
		WHERE state_province_county = "Colorado"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `town_city`,
		          `zip_postcode`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `addresses`
		      WHERE (`state_province_county` = 'Colorado'))
		   GROUP BY town_city,
		            zip_postcode)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/e_government/0012 (1211)
No solution for instance spider/e_government/0015 (1212)
Error while executing solution for instance spider/e_government/0005 (1213)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT party_email
FROM
  (SELECT party_id,
          form_id,
          date_completion_started,
          form_status_code,
          date_fully_completed,
          payment_method_code,
          party_phone,
          party_email,
          COUNT(DISTINCT form_id) OVER () AS n_distinct
   FROM
     (SELECT LHS.party_id AS party_id,
             LHS.form_id AS form_id,
             LHS.date_completion_started AS date_completion_started,
             LHS.form_status_code AS form_status_code,
             LHS.date_fully_completed AS date_fully_completed,
             RHS.payment_method_code AS payment_method_code,
             RHS.party_phone AS party_phone,
             RHS.party_email AS party_email
      FROM party_forms AS LHS
      LEFT JOIN parties AS RHS ON (LHS.party_id = RHS.party_id)))
WHERE (n_distinct <= 1
       OR n_distinct < form_id)
ORDER BY party_email]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Error while executing solution for instance spider/e_government/0016 (1214)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT payment_method_code) OVER () AS count_distinct_payment_method_code_
FROM parties
ORDER BY count_distinct_payment_method_code_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/e_government/0018 (1215)
No solution for instance spider/e_government/0019 (1217)
Wrong output for fuzzied solution in instance spider/e_government/0014 (1220)
	EXPECTED OUTPUT ====

		SELECT payment_method_code
		FROM parties
		GROUP BY payment_method_code
		HAVING count(*) > 3

	Empty DataFrame
	Columns: [payment_method_code]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT payment_method_code
		FROM
		  (SELECT LHS.party_id AS party_id,
		          LHS.payment_method_code AS payment_method_code,
		          LHS.party_phone AS party_phone,
		          LHS.party_email AS party_email,
		          RHS.payment_method_code AS payment_method_code_other
		   FROM parties AS LHS
		   INNER JOIN
		     (SELECT payment_method_code,
		             COUNT() AS n
		      FROM parties
		      GROUP BY payment_method_code) AS RHS ON (LHS.party_id = RHS.n))
		ORDER BY payment_method_code

	  payment_method_code
	0           CashMbehq
No solution for instance spider/e_government/0009 (1221)
Wrong output for fuzzied solution in instance spider/e_government/0011 (1222)
	EXPECTED OUTPUT ====

		SELECT service_name
		FROM services
		EXCEPT
		SELECT t1.service_name
		FROM services AS t1
		JOIN party_services AS t2 ON t1.service_id = t2.service_id

	Empty DataFrame
	Columns: [service_name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT service_type_code AS service_name
		FROM
		  (SELECT LHS.service_id AS service_id,
		          LHS.service_type_code AS service_type_code,
		          LHS.service_name AS service_name,
		          LHS.service_descriptio AS service_descriptio,
		          RHS.customer_id AS customer_id,
		          RHS.service_id AS service_id_other,
		          RHS.service_datetime AS service_datetime,
		          RHS.booking_made_date AS booking_made_date,
		          RHS.booking_id_other AS booking_id_other,
		          RHS.service_datetime_other AS service_datetime_other,
		          RHS.booking_made_date_other AS booking_made_date_other
		   FROM services AS LHS
		   INNER JOIN
		     (SELECT booking_id,
		             customer_id,
		             customer_id AS service_id,
		             service_datetime,
		             booking_made_date,
		             booking_id_other,
		             service_datetime_other,
		             booking_made_date_other
		      FROM
		        (SELECT booking_id,
		                booking_id AS customer_id,
		                service_id,
		                service_datetime,
		                booking_made_date,
		                booking_id_other,
		                service_datetime_other,
		                booking_made_date_other
		         FROM
		           (SELECT LHS.booking_id AS booking_id,
		                   LHS.customer_id AS customer_id,
		                   LHS.service_id AS service_id,
		                   LHS.service_datetime AS service_datetime,
		                   LHS.booking_made_date AS booking_made_date,
		                   RHS.booking_id AS booking_id_other,
		                   RHS.service_datetime AS service_datetime_other,
		                   RHS.booking_made_date AS booking_made_date_other
		            FROM party_services AS LHS
		            INNER JOIN party_services AS RHS ON (LHS.booking_id = RHS.customer_id
		                                                    AND LHS.customer_id = RHS.service_id)))) AS RHS ON (LHS.service_id = RHS.booking_id))
		ORDER BY service_name

	      service_name
	0   7mghWEducation
	1   7mghWEducation
	2   7mghWEducation
	3        Education
	4        Education
	5        Education
	6        Education
	7        Education
	8        Education
	9        Education
	10       Education
	11       Education
	12       Education
	13       Education
	14       Education
	15       Education
	16       Education
	17       Education
	18       Education
	19       Education
	20       Education
	21       Education
	22       Education
	23       Education
	24       Education
	25       Education
	26       Education
	27       Education
	28       Education
	29       Education
	30       Education
	31       Education
	32       Education
	33  EducationNC5r3
	34  EducationNC5r3
	35   GyIWelfarex)z
	36   GyIWelfarex)z
	37         Welfare
	38         Welfare
	39         Welfare
	40         Welfare
	41         Welfare
	42         Welfare
	43         Welfare
	44         Welfare
	45         Welfare
	46         Welfare
Wrong output for fuzzied solution in instance spider/machine_repair/0008 (1225)
	EXPECTED OUTPUT ====

		SELECT Team
		FROM technician
		GROUP BY Team
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  team
	0  CWS
	ACTUAL OUTPUT ====

		
		SELECT team
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT age,
		                team,
		                COUNT() AS n
		         FROM technician
		         GROUP BY age,
		                  team)
		      ORDER BY n)
		   LIMIT 1)

	        team
	0  z45CWSFhY
Wrong output for fuzzied solution in instance spider/machine_repair/0013 (1227)
	EXPECTED OUTPUT ====

		SELECT T2.Name,
		       COUNT(*)
		FROM repair_assignment AS T1
		JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID
		GROUP BY T2.Name

	                    name  count(*)
	0           Eddie Collin         1
	1         GM6Q3c99qd1XxK         1
	2            Mark Sewell         1
	3        Mickey Cochrane         1
	4           QqDDR3SbiIxb         1
	5    RU3Eddie CollinsNkh         1
	6     U2yuaEddie Collins         1
	7         ickey Cochrane         1
	8       w()0gMark Sewell         1
	9   Mickey CochranerPypQ         2
	10           N0jxdWLsKrv         2
	11          ddie Collins         2
	12         Eddie Collins         3
	ACTUAL OUTPUT ====

		
		SELECT name,
		       n AS count___
		FROM
		  (SELECT LHS.technician_id AS technician_id,
		          LHS.n AS n,
		          RHS.name AS name,
		          RHS.team AS team,
		          RHS.starting_year AS starting_year,
		          RHS.age AS age
		   FROM
		     (SELECT technician_id,
		             COUNT() AS n
		      FROM repair_assignment
		      GROUP BY technician_id) AS LHS
		   INNER JOIN technician AS RHS ON (LHS.technician_id = RHS.technician_id))
		ORDER BY name

	                    name  count___
	0           Eddie Collin         1
	1          Eddie Collins         1
	2          Eddie Collins         1
	3          Eddie Collins         1
	4         GM6Q3c99qd1XxK         1
	5            Mark Sewell         1
	6        Mickey Cochrane         1
	7           QqDDR3SbiIxb         1
	8    RU3Eddie CollinsNkh         1
	9     U2yuaEddie Collins         1
	10          ddie Collins         1
	11          ddie Collins         1
	12        ickey Cochrane         1
	13      w()0gMark Sewell         1
	14  Mickey CochranerPypQ         2
	15           N0jxdWLsKrv         2
Wrong output for fuzzied solution in instance spider/machine_repair/0012 (1230)
	EXPECTED OUTPUT ====

		SELECT T3.Name
		FROM repair_assignment AS T1
		JOIN machine AS T2 ON T1.machine_id = T2.machine_id
		JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID
		WHERE T2.value_points > 70

	                     name
	0      8C Joe CochraneRJC
	1      8C Joe CochraneRJC
	2      8C Joe CochraneRJC
	3      8C Joe CochraneRJC
	4      8C Joe CochraneRJC
	5            Joe Cochrane
	6            Joe Cochrane
	7            Joe Cochrane
	8            Joe Cochrane
	9            Joe Cochrane
	10           Joe Cochrane
	11           Joe Cochrane
	12             Joe Sewell
	13             Joe Sewell
	14             Joe Sewell
	15           Lou Boudreau
	16           Lou Boudreau
	17         Mickey Cochran
	18         Mickey Cochran
	19         Mickey Cochran
	20         Mickey Cochran
	21         Mickey Cochran
	22         Mickey Cochran
	23         Mickey Cochran
	24        SXvflJoe Sewell
	25        SXvflJoe Sewell
	26        SXvflJoe Sewell
	27   Vv6kpMickey Cochrane
	28   Vv6kpMickey Cochrane
	29         ickey Cochrane
	30  lD9Mickey CochraneawO
	31  lD9Mickey CochraneawO
	32  lD9Mickey CochraneawO
	33              oe Sewell
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT machine_id,
		          making_year,
		          CLASS,
		          team,
		          machine_series,
		          value_points,
		          quality_rank,
		          repair_id,
		          machine_id_other,
		          name,
		          team_other,
		          starting_year,
		          age,
		          machine_id AS technician_id
		   FROM
		     (SELECT LHS.machine_id AS machine_id,
		             LHS.making_year AS making_year,
		             LHS.class AS CLASS,
		             LHS.team AS team,
		             LHS.machine_series AS machine_series,
		             LHS.value_points AS value_points,
		             LHS.quality_rank AS quality_rank,
		             RHS.repair_id AS repair_id,
		             RHS.machine_id AS machine_id_other,
		             RHS.name AS name,
		             RHS.team AS team_other,
		             RHS.starting_year AS starting_year,
		             RHS.age AS age
		      FROM machine AS LHS
		      INNER JOIN
		        (SELECT LHS.technician_id AS technician_id,
		                LHS.repair_id AS repair_id,
		                LHS.machine_id AS machine_id,
		                RHS.name AS name,
		                RHS.team AS team,
		                RHS.starting_year AS starting_year,
		                RHS.age AS age
		         FROM repair_assignment AS LHS
		         LEFT JOIN technician AS RHS ON (LHS.technician_id = RHS.technician_id)) AS RHS ON (LHS.machine_id = RHS.technician_id)))
		WHERE (value_points >= 70.0)
		ORDER BY name

	                   name
	0  Vv6kpMickey Cochrane
	1  Vv6kpMickey Cochrane
Wrong output for fuzzied solution in instance spider/machine_repair/0015 (1231)
	EXPECTED OUTPUT ====

		SELECT Starting_Year
		FROM technician
		WHERE Team = "CLE" INTERSECT
		  SELECT Starting_Year
		  FROM technician WHERE Team = "CWS"

	Empty DataFrame
	Columns: [starting_year]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `starting_year`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM `technician`
		         WHERE (`team` = 'CLE'
		                OR `team` = 'CWS'))
		      ORDER BY technician_id)
		   LIMIT 1)

	   starting_year
	0        2002.98
Wrong output for fuzzied solution in instance spider/machine_repair/0010 (1238)
	EXPECTED OUTPUT ====

		SELECT T3.Name,
		       T2.Machine_series
		FROM repair_assignment AS T1
		JOIN machine AS T2 ON T1.machine_id = T2.machine_id
		JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID

	                     name machine_series
	0      8C Joe CochraneRJC          RS125
	1      8C Joe CochraneRJC          RS125
	2            Joe Cochrane          RS125
	3            Joe Cochrane          RS125
	4            Joe Cochrane          RS125
	5            Joe Cochrane          RS125
	6            Joe Cochrane          RS125
	7              Joe Sewell          RS125
	8              Joe Sewell          RS125
	9              Joe Sewell          RS125
	10             Joe Sewell          RS125
	11         Mickey Cochran          RS125
	12         Mickey Cochran          RS125
	13        SXvflJoe Sewell          RS125
	14        SXvflJoe Sewell          RS125
	15         ickey Cochrane          RS125
	16  lD9Mickey CochraneawO          RS125
	17  lD9Mickey CochraneawO          RS125
	18  lD9Mickey CochraneawO          RS125
	19  lD9Mickey CochraneawO          RS125
	20              oe Sewell          RS125
	21              oe Sewell          RS125
	22              oe Sewell          RS125
	23              oe Sewell          RS125
	24     8C Joe CochraneRJC     RS125hA1fg
	25           Joe Cochrane     RS125hA1fg
	26           Joe Cochrane     RS125hA1fg
	27             Joe Sewell     RS125hA1fg
	28           Lou Boudreau     RS125hA1fg
	29           Lou Boudreau     RS125hA1fg
	30         Mickey Cochran     RS125hA1fg
	31        SXvflJoe Sewell     RS125hA1fg
	32   Vv6kpMickey Cochrane     RS125hA1fg
	33           Joe Cochrane     Y8nq4RS125
	34           Lou Boudreau     Y8nq4RS125
	35         Mickey Cochran     Y8nq4RS125
	36        SXvflJoe Sewell     Y8nq4RS125
	37        SXvflJoe Sewell     Y8nq4RS125
	38           Joe Cochrane    hT RS125z1i
	39             Joe Sewell    hT RS125z1i
	40           Lou Boudreau    hT RS125z1i
	41        SXvflJoe Sewell    hT RS125z1i
	42        SXvflJoe Sewell    hT RS125z1i
	43         ickey Cochrane    hT RS125z1i
	44  lD9Mickey CochraneawO    hT RS125z1i
	45     8C Joe CochraneRJC    lGPRS125kMe
	46           Joe Cochrane    lGPRS125kMe
	47           Joe Cochrane    lGPRS125kMe
	48   Vv6kpMickey Cochrane    lGPRS125kMe
	49  lD9Mickey CochraneawO    lGPRS125kMe
	ACTUAL OUTPUT ====

		
		SELECT name,
		       machine_series
		FROM
		  (SELECT LHS.machine_id AS machine_id,
		          LHS.making_year AS making_year,
		          LHS.class AS CLASS,
		          LHS.team AS team,
		          LHS.machine_series AS machine_series,
		          LHS.value_points AS value_points,
		          LHS.quality_rank AS quality_rank,
		          LHS.name AS name,
		          LHS.team_other AS team_other,
		          LHS.starting_year AS starting_year,
		          LHS.age AS age,
		          LHS.technician_id AS technician_id,
		          RHS.repair_id AS repair_id,
		          RHS.machine_id AS machine_id_other
		   FROM
		     (SELECT machine_id,
		             making_year,
		             CLASS,
		             team,
		             machine_series,
		             value_points,
		             quality_rank,
		             name,
		             team_other,
		             starting_year,
		             age,
		             quality_rank AS technician_id
		      FROM
		        (SELECT LHS.machine_id AS machine_id,
		                LHS.making_year AS making_year,
		                LHS.class AS CLASS,
		                LHS.team AS team,
		                LHS.machine_series AS machine_series,
		                LHS.value_points AS value_points,
		                LHS.quality_rank AS quality_rank,
		                RHS.name AS name,
		                RHS.team AS team_other,
		                RHS.starting_year AS starting_year,
		                RHS.age AS age
		         FROM machine AS LHS
		         INNER JOIN technician AS RHS ON (LHS.quality_rank = RHS.technician_id))) AS LHS
		   INNER JOIN repair_assignment AS RHS ON (LHS.quality_rank = RHS.technician_id))
		ORDER BY name

	                   name machine_series
	0  Vv6kpMickey Cochrane          RS125
	1  Vv6kpMickey Cochrane          RS125
	2        ickey Cochrane          RS125
	3        ickey Cochrane          RS125
No solution for instance spider/insurance_policies/0002 (1239)
Wrong output for fuzzied solution in instance spider/insurance_policies/0022 (1243)
	EXPECTED OUTPUT ====

		SELECT customer_details
		FROM Customers
		EXCEPT
		SELECT T1.customer_details
		FROM Customers AS T1
		JOIN Customer_Policies AS T2 ON T1.customer_id = T2.customer_id

	           customer_details
	0     FPGs6ghf2CrW1Uoru(wxA
	1           IYZG8uY k(4Op7)
	2  YgsFWo56QSM5Q8bC44j Cyps
	3    sEu0 Mrs. Hanna Willms
	ACTUAL OUTPUT ====

		
		SELECT customer_details
		FROM
		  (SELECT *
		   FROM customers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM customer_policies AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY customer_details

	           customer_details
	0     FPGs6ghf2CrW1Uoru(wxA
	1           IYZG8uY k(4Op7)
	2      Mr. Randal Lynch III
	3         Mrs. Hanna Willms
	4  YgsFWo56QSM5Q8bC44j Cyps
	5    sEu0 Mrs. Hanna Willms
No solution for instance spider/insurance_policies/0006 (1245)
Wrong output for fuzzied solution in instance spider/insurance_policies/0004 (1246)
	EXPECTED OUTPUT ====

		SELECT Amount_Settled,
		       Amount_Claimed
		FROM Claims
		ORDER BY Amount_Claimed DESC
		LIMIT 1

	   amount_settled  amount_claimed
	0            1352           89634
	ACTUAL OUTPUT ====

		
		SELECT amount_settled,
		       amount_claimed
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM claims
		      ORDER BY policy_id DESC)
		   LIMIT 1)

	   amount_settled  amount_claimed
	0            1637            3325
Wrong output for fuzzied solution in instance spider/insurance_policies/0016 (1250)
	EXPECTED OUTPUT ====

		SELECT Payment_Method_Code
		FROM Payments
		GROUP BY Payment_Method_Code
		ORDER BY count(*) ASC
		LIMIT 1

	  payment_method_code
	0                 Vis
	ACTUAL OUTPUT ====

		
		SELECT payment_method_code
		FROM
		  (SELECT payment_method_code,
		          COUNT() AS n
		   FROM
		     (SELECT payment_id,
		             payment_id AS settlement_id,
		             payment_method_code,
		             date_payment_made,
		             amount_payment,
		             payment_id_other,
		             payment_method_code_other,
		             date_payment_made_other,
		             amount_payment_other
		      FROM
		        (SELECT LHS.payment_id AS payment_id,
		                LHS.settlement_id AS settlement_id,
		                LHS.payment_method_code AS payment_method_code,
		                LHS.date_payment_made AS date_payment_made,
		                LHS.amount_payment AS amount_payment,
		                RHS.payment_id AS payment_id_other,
		                RHS.payment_method_code AS payment_method_code_other,
		                RHS.date_payment_made AS date_payment_made_other,
		                RHS.amount_payment AS amount_payment_other
		         FROM payments AS LHS
		         INNER JOIN payments AS RHS ON (LHS.payment_id = RHS.settlement_id)))
		   GROUP BY payment_method_code)
		ORDER BY payment_method_code

	  payment_method_code
	0           MasterCar
	1          MasterCard
Wrong output for fuzzied solution in instance spider/insurance_policies/0018 (1251)
	EXPECTED OUTPUT ====

		SELECT DISTINCT customer_details
		FROM Customers

	         customer_details
	0  America JaskolskiT(7tm
	1          Buddy Marquard
	2         Buddy Marquardt
	3    Buddy MarquardtlFCcF
	4       Mrs. Hanna Willms
	5        rs. Hanna Willms
	ACTUAL OUTPUT ====

		
		SELECT customer_details
		FROM customers
		ORDER BY customer_details

	         customer_details
	0  America JaskolskiT(7tm
	1          Buddy Marquard
	2         Buddy Marquardt
	3         Buddy Marquardt
	4    Buddy MarquardtlFCcF
	5       Mrs. Hanna Willms
	6       Mrs. Hanna Willms
	7        rs. Hanna Willms
Wrong output for fuzzied solution in instance spider/insurance_policies/0019 (1253)
	EXPECTED OUTPUT ====

		SELECT Policy_Type_Code
		FROM Customer_Policies
		GROUP BY Policy_Type_Code
		ORDER BY count(*) DESC
		LIMIT 1

	  policy_type_code
	0           Travel
	ACTUAL OUTPUT ====

		
		SELECT policy_type_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT end_date,
		                policy_type_code,
		                COUNT() AS n
		         FROM customer_policies
		         GROUP BY end_date,
		                  policy_type_code)
		      ORDER BY n DESC)
		   LIMIT 1)

	  policy_type_code
	0             Life
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
No solution for instance spider/insurance_policies/0023 (1257)
No solution for instance spider/insurance_policies/0001 (1258)
No solution for instance spider/insurance_policies/0009 (1260)
Wrong output for fuzzied solution in instance spider/insurance_policies/0011 (1261)
	EXPECTED OUTPUT ====

		SELECT Date_Claim_Made
		FROM Claims
		ORDER BY Date_Claim_Made ASC
		LIMIT 1

	  date_claim_made
	0      2017-01-05
	ACTUAL OUTPUT ====

		
		SELECT date_claim_made
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM claims
		      ORDER BY date_claim_settled)
		   LIMIT 1)

	  date_claim_made
	0      2017-10-19
No solution for instance spider/insurance_policies/0010 (1262)
Wrong output for fuzzied solution in instance spider/cinema/0002 (1263)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM cinema
		WHERE openning_year = 2010 INTERSECT
		  SELECT LOCATION
		  FROM cinema WHERE openning_year = 2011

	           location
	0  County Tipperary
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM cinema
		         WHERE (openning_year = 2010
		                OR openning_year = 2011))
		      ORDER BY capacity)
		   LIMIT 1)

	       location
	0  County Clare
Wrong output for fuzzied solution in instance spider/cinema/0017 (1264)
	EXPECTED OUTPUT ====

		SELECT T2.title,
		       max(T1.price)
		FROM schedule AS T1
		JOIN film AS T2 ON T1.film_id = T2.film_id
		GROUP BY T1.film_id

	                                   title  max(t1.price)
	0            The Case of the Smart Dummy          12.99
	1            The Case of the Smart Dummy          12.99
	2             The Case of the Smart Dumm          13.00
	3        The Case of the Bermuda Triangl          13.01
	4       The Case of the Bermuda Triangle          13.01
	5      The Case of the Piggy BankerZfBOq          13.01
	6       The Case of the Smart DummyC68Vb          13.01
	7  jisg3The Case of the Bermuda Triangle          13.01
	ACTUAL OUTPUT ====

		
		SELECT title,
		       maxprice AS max_t1_price_
		FROM
		  (SELECT LHS.film_id AS film_id,
		          LHS.show_times_per_day AS show_times_per_day,
		          LHS.maxprice AS maxprice,
		          RHS.film_id AS film_id_other,
		          RHS.rank_in_series AS rank_in_series,
		          RHS.title AS title,
		          RHS.directed_by AS directed_by,
		          RHS.original_air_date AS original_air_date,
		          RHS.production_code AS production_code
		   FROM
		     (SELECT film_id,
		             show_times_per_day,
		             MAX(price) AS maxprice
		      FROM schedule
		      GROUP BY film_id,
		               show_times_per_day) AS LHS
		   INNER JOIN film AS RHS ON (LHS.film_id = RHS.number_in_season))
		ORDER BY title

	                                    title  max_t1_price_
	0             The Case of the Smart Dummy           9.97
	1        The Case of the Smart DummyC68Vb           9.97
	2        The Case of the Bermuda Triangle           9.98
	3        The Case of the Bermuda Triangle           9.98
	4             The Case of the Smart Dummy           9.98
	5        The Case of the Smart DummyC68Vb           9.98
	6             The Case of the Smart Dummy           9.99
	7             The Case of the Smart Dummy           9.99
	8        The Case of the Smart DummyC68Vb           9.99
	9             The Case of the Smart Dummy          10.01
	10       The Case of the Bermuda Triangle          12.97
	11            The Case of the Smart Dummy          12.97
	12       The Case of the Smart DummyC68Vb          12.97
	13        The Case of the Bermuda Triangl          12.98
	14      The Case of the Piggy BankerZfBOq          12.98
	15             The Case of the Smart Dumm          12.98
	16            The Case of the Smart Dummy          12.98
	17        The Case of the Bermuda Triangl          12.99
	18      The Case of the Piggy BankerZfBOq          12.99
	19             The Case of the Smart Dumm          12.99
	20            The Case of the Smart Dummy          12.99
	21            The Case of the Smart Dummy          12.99
	22       The Case of the Smart DummyC68Vb          12.99
	23  jisg3The Case of the Bermuda Triangle          12.99
	24       The Case of the Bermuda Triangle          13.00
	25        The Case of the Bermuda Triangl          13.01
	26       The Case of the Bermuda Triangle          13.01
	27      The Case of the Piggy BankerZfBOq          13.01
	28             The Case of the Smart Dumm          13.01
	29            The Case of the Smart Dummy          13.01
	30  jisg3The Case of the Bermuda Triangle          13.01
	31  jisg3The Case of the Bermuda Triangle          13.01
Wrong output for fuzzied solution in instance spider/cinema/0008 (1265)
	EXPECTED OUTPUT ====

		SELECT name,
		       LOCATION
		FROM cinema
		ORDER BY capacity DESC
		LIMIT 1

	                name          location
	0  Dublin ArrayA7Y(m  County Corkusp3q
	ACTUAL OUTPUT ====

		
		SELECT name,
		       LOCATION
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM cinema
		      ORDER BY LOCATION DESC)
		   LIMIT 1)

	           name          location
	0  Grouse Lodge  County Tipperary
No solution for instance spider/cinema/0022 (1267)
Wrong output for fuzzied solution in instance spider/cinema/0012 (1271)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM cinema
		WHERE capacity > 300
		GROUP BY LOCATION
		HAVING count(*) >= 2

	        location
	0  County Dublin
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT LOCATION,
		          openning_year,
		          COUNT(DISTINCT capacity) AS n_distinct
		   FROM cinema
		   GROUP BY LOCATION,
		            openning_year)
		WHERE (n_distinct <= 300
		       AND n_distinct = 2)
		ORDER BY LOCATION

	Empty DataFrame
	Columns: [location]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
No solution for instance spider/cinema/0018 (1275)
Wrong output for fuzzied solution in instance spider/cinema/0020 (1276)
	EXPECTED OUTPUT ====

		SELECT T2.directed_by
		FROM schedule AS T1
		JOIN film AS T2 ON T1.film_id = T2.film_id
		GROUP BY T2.directed_by
		ORDER BY sum(T1.show_times_per_day) DESC
		LIMIT 1

	      directed_by
	0  Bill Schreiner
	ACTUAL OUTPUT ====

		
		SELECT directed_by
		FROM
		  (SELECT LHS.cinema_id AS cinema_id,
		          LHS.film_id AS film_id,
		          LHS.sumshow_times_per_day AS sumshow_times_per_day,
		          RHS.rank_in_series AS rank_in_series,
		          RHS.title AS title,
		          RHS.directed_by AS directed_by,
		          RHS.original_air_date AS original_air_date,
		          RHS.production_code AS production_code
		   FROM
		     (SELECT cinema_id,
		             film_id,
		             SUM(show_times_per_day) AS sumshow_times_per_day
		      FROM schedule
		      GROUP BY cinema_id,
		               film_id) AS LHS
		   INNER JOIN film AS RHS ON (LHS.film_id = RHS.film_id
		                                 AND LHS.cinema_id = RHS.number_in_season))
		ORDER BY directed_by

	           directed_by
	0       Bill Schreiner
	1       Bill Schreiner
	2  WHFk(Bill Schreiner
	3        ill Schreiner
Wrong output for fuzzied solution in instance spider/cinema/0021 (1278)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM cinema
		WHERE capacity > 300
		GROUP BY LOCATION
		HAVING count(*) > 1

	        location
	0  County Dublin
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT LOCATION,
		          openning_year,
		          COUNT(DISTINCT capacity) AS n_distinct
		   FROM cinema
		   GROUP BY LOCATION,
		            openning_year)
		WHERE (n_distinct <= 300
		       AND n_distinct > 1)
		ORDER BY LOCATION

	Empty DataFrame
	Columns: [location]
	Index: []
Wrong output for base solution in instance spider/cinema/0009 (1281)
	EXPECTED OUTPUT ====

	   avg_capacity_  min_capacity_  max_capacity_
	0     399.666667            203            908
	ACTUAL OUTPUT ====

		SELECT avg(capacity),
		       min(capacity),
		       max(capacity)
		FROM cinema
		WHERE openning_year >= 2011

	   avg(capacity)  min(capacity)  max(capacity)
	0     399.666667            203            908
Wrong output for ground truth in instance spider/cinema/0009 (1281)
No solution for instance spider/cinema/0011 (1282)
Wrong output for base solution in instance spider/flight_1/0033 (1285)
	EXPECTED OUTPUT ====

		SELECT origin
		FROM Flight
		GROUP BY origin
		ORDER BY count(*) DESC
		LIMIT 1

	        origin
	0  Los Angeles
	ACTUAL OUTPUT ====

		
		SELECT origin
		FROM
		  (SELECT departure_date,
		          origin,
		          COUNT() AS n
		   FROM
		     (SELECT flno,
		             origin,
		             destination,
		             distance,
		             departure_date,
		             arrival_date,
		             price,
		             flno AS aid,
		             flno_other,
		             origin_other,
		             destination_other,
		             distance_other,
		             departure_date_other,
		             arrival_date_other,
		             price_other
		      FROM
		        (SELECT LHS.flno AS flno,
		                LHS.origin AS origin,
		                LHS.destination AS destination,
		                LHS.distance AS distance,
		                LHS.departure_date AS departure_date,
		                LHS.arrival_date AS arrival_date,
		                LHS.price AS price,
		                LHS.aid AS aid,
		                RHS.flno AS flno_other,
		                RHS.origin AS origin_other,
		                RHS.destination AS destination_other,
		                RHS.distance AS distance_other,
		                RHS.departure_date AS departure_date_other,
		                RHS.arrival_date AS arrival_date_other,
		                RHS.price AS price_other
		         FROM flight AS LHS
		         INNER JOIN flight AS RHS ON (LHS.flno = RHS.aid)))
		   GROUP BY departure_date,
		            origin)
		ORDER BY origin

	        origin
	0  Los Angeles
	1  Los Angeles
Wrong output for base solution in instance spider/flight_1/0037 (1286)
	EXPECTED OUTPUT ====

		SELECT T2.name,
		       count(*)
		FROM Flight AS T1
		JOIN Aircraft AS T2 ON T1.aid = T2.aid
		GROUP BY T1.aid

	               name  count(*)
	0    Boeing 737-800         1
	1    Boeing 747-400         1
	2    Boeing 757-300         1
	3   Embraer ERJ-145         1
	4  Piper Archer III         1
	5          SAAB 340         1
	6   Airbus A340-300         2
	7    Lockheed L1011         2
	ACTUAL OUTPUT ====

		
		SELECT name,
		       n AS count___
		FROM
		  (SELECT arrival_date,
		          name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.flno AS flno,
		             LHS.origin AS origin,
		             LHS.destination AS destination,
		             LHS.distance AS distance,
		             LHS.departure_date AS departure_date,
		             LHS.arrival_date AS arrival_date,
		             LHS.price AS price,
		             LHS.aid AS aid,
		             RHS.name AS name,
		             RHS.distance AS distance_other
		      FROM flight AS LHS
		      INNER JOIN aircraft AS RHS ON (LHS.aid = RHS.aid))
		   GROUP BY arrival_date,
		            name)
		ORDER BY name

	               name  count___
	0   Airbus A340-300         1
	1   Airbus A340-300         1
	2    Boeing 737-800         1
	3    Boeing 747-400         1
	4    Boeing 757-300         1
	5   Embraer ERJ-145         1
	6    Lockheed L1011         1
	7    Lockheed L1011         1
	8  Piper Archer III         1
	9          SAAB 340         1
Wrong output for base solution in instance spider/flight_1/0038 (1292)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Flight AS T1
		JOIN Aircraft AS T2 ON T1.aid = T2.aid
		GROUP BY T1.aid
		HAVING count(*) >= 2

	              name
	0  Airbus A340-300
	1   Lockheed L1011
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.aid AS aid,
		          LHS.arrival_date AS arrival_date,
		          LHS.n AS n,
		          RHS.aid AS aid_other,
		          RHS.name AS name,
		          RHS.distance AS distance,
		          RHS.arrival_date AS arrival_date_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT aid,
		             arrival_date,
		             COUNT() AS n
		      FROM flight
		      GROUP BY aid,
		               arrival_date) AS LHS
		   CROSS JOIN
		     (SELECT LHS.aid AS aid,
		             LHS.name AS name,
		             LHS.distance AS distance,
		             RHS.arrival_date AS arrival_date,
		             RHS.n AS n
		      FROM aircraft AS LHS
		      INNER JOIN
		        (SELECT aid,
		                arrival_date,
		                COUNT() AS n
		         FROM flight
		         GROUP BY aid,
		                  arrival_date) AS RHS ON (LHS.aid = RHS.aid)) AS RHS)
		WHERE (n < n_other)
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance spider/flight_1/0003 (1293)
	EXPECTED OUTPUT ====

		SELECT aid
		FROM Aircraft
		WHERE distance > 1000

	      aid
	0    4.98
	1    5.02
	2    6.98
	3    7.01
	4    7.02
	5    7.99
	6   13.98
	7   14.02
	8   14.98
	9   14.99
	10  15.01
	ACTUAL OUTPUT ====

		
		SELECT aid
		FROM aircraft
		WHERE (distance >= 1000.0)
		ORDER BY aid

	      aid
	0    4.98
	1    4.99
	2    5.02
	3    6.98
	4    7.01
	5    7.02
	6    7.99
	7   13.98
	8   14.00
	9   14.02
	10  14.98
	11  14.99
	12  15.01
No solution for instance spider/flight_1/0048 (1295)
No solution for instance spider/flight_1/0030 (1297)
Wrong output for fuzzied solution in instance spider/flight_1/0013 (1298)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Employee
		WHERE salary BETWEEN 100000 AND 200000

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM employee
		WHERE (salary >= 100000.0
		       AND salary <= 200000.0)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/flight_1/0006 (1299)
Wrong output for fuzzied solution in instance spider/flight_1/0004 (1300)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Aircraft
		WHERE distance BETWEEN 1000 AND 5000

	   count(*)
	0        26
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT distance) AS n_distinct
		   FROM
		     (SELECT *
		      FROM aircraft
		      WHERE (distance >= 1000.0
		             AND distance <= 5000.0)))
		ORDER BY count___

	   count___
	0         9
Wrong output for fuzzied solution in instance spider/flight_1/0012 (1301)
	EXPECTED OUTPUT ====

		SELECT eid
		FROM Employee
		WHERE salary > 100000

	             eid
	0   1.564549e+07
	1   1.564549e+07
	2   1.564549e+07
	3   2.697348e+08
	4   2.697348e+08
	5   2.697348e+08
	6   2.697348e+08
	7   5.501565e+08
	8   5.501565e+08
	9   5.524553e+08
	10  5.744895e+08
	ACTUAL OUTPUT ====

		
		SELECT eid
		FROM employee
		WHERE (salary >= 100000.0)
		ORDER BY eid

	             eid
	0   1.564549e+07
	1   1.564549e+07
	2   1.564549e+07
	3   2.697348e+08
	4   2.697348e+08
	5   2.697348e+08
	6   2.697348e+08
	7   5.501565e+08
	8   5.501565e+08
	9   5.524553e+08
	10  5.744895e+08
	11  5.744895e+08
Wrong output for fuzzied solution in instance spider/flight_1/0026 (1302)
	EXPECTED OUTPUT ====

		SELECT avg(price)
		FROM Flight
		WHERE origin = "Los Angeles"
		  AND destination = "Honolulu"

	   avg(price)
	0     343.755
	ACTUAL OUTPUT ====

		
		SELECT `meanprice` AS `avg_price_`
		FROM
		  (SELECT `distance`,
		          AVG(`price`) AS `meanprice`
		   FROM
		     (SELECT *
		      FROM `flight`
		      WHERE (`destination` != 'Los Angeles'
		             AND `destination` = 'Honolulu'))
		   GROUP BY distance)
		ORDER BY avg_price_

	   avg_price_
	0      261.55
	1      425.96
	2      425.99
Wrong output for fuzzied solution in instance spider/flight_1/0032 (1306)
	EXPECTED OUTPUT ====

		SELECT destination,
		       count(*)
		FROM Flight
		GROUP BY destination

	    destination  count(*)
	0   )3ruGSydney         1
	1   Jw8gBSydney         1
	2    Los Angele         1
	3   SydneyK HK0         1
	4   SydneyMOK           1
	5   SydneyTs0sc         1
	6   Z6gm7Sydney         1
	7   cllaXSydney         1
	8   Los Angeles         2
	9         ydney         2
	10       Sydney         7
	ACTUAL OUTPUT ====

		
		SELECT destination,
		       n AS count___
		FROM
		  (SELECT destination,
		          distance,
		          COUNT() AS n
		   FROM flight
		   GROUP BY destination,
		            distance)
		ORDER BY destination

	    destination  count___
	0   )3ruGSydney         1
	1   Jw8gBSydney         1
	2    Los Angele         1
	3   Los Angeles         1
	4   Los Angeles         1
	5        Sydney         1
	6        Sydney         1
	7        Sydney         1
	8   SydneyK HK0         1
	9   SydneyMOK           1
	10  SydneyTs0sc         1
	11  Z6gm7Sydney         1
	12  cllaXSydney         1
	13        ydney         1
	14        ydney         1
	15       Sydney         2
	16       Sydney         2
Wrong output for fuzzied solution in instance spider/flight_1/0045 (1307)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Certificate AS T1
		JOIN Aircraft AS T2 ON T2.aid = T1.aid
		GROUP BY T1.aid
		ORDER BY count(*) DESC
		LIMIT 1

	        name
	0  Boeing 72
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT distance,
		                name,
		                COUNT() AS n
		         FROM
		           (SELECT LHS.aid AS aid,
		                   LHS.name AS name,
		                   LHS.distance AS distance,
		                   RHS.eid AS eid
		            FROM aircraft AS LHS
		            LEFT JOIN certificate AS RHS ON (LHS.aid = RHS.aid))
		         GROUP BY distance,
		                  name)
		      ORDER BY n DESC)
		   LIMIT 1)

	                             name
	0  British Aerospace Jetstream 41
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for base solution in instance spider/flight_1/0020 (1311)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Flight

	   count(*)
	0        10
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT departure_date,
		          COUNT() AS n
		   FROM flight
		   GROUP BY departure_date)
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
	3         1
	4         1
	5         1
	6         1
	7         1
	8         1
	9         1
Wrong output for fuzzied solution in instance spider/flight_1/0007 (1313)
	EXPECTED OUTPUT ====

		SELECT aid,
		       name
		FROM Aircraft
		ORDER BY distance DESC
		LIMIT 1

	    aid       name
	0  6.02  oeing 727
	ACTUAL OUTPUT ====

		
		SELECT aid,
		       name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM aircraft
		      ORDER BY aid)
		   LIMIT 1)

	    aid                            name
	0  5.98  British Aerospace Jetstream 41
Wrong output for fuzzied solution in instance spider/flight_1/0034 (1314)
	EXPECTED OUTPUT ====

		SELECT destination
		FROM Flight
		GROUP BY destination
		ORDER BY count(*)
		LIMIT 1

	     destination
	0  QzsChicagokbl
	ACTUAL OUTPUT ====

		
		SELECT destination
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT arrival_date,
		                destination,
		                COUNT() AS n
		         FROM flight
		         GROUP BY arrival_date,
		                  destination)
		      ORDER BY destination)
		   LIMIT 1)

	  destination
	0     Chicago
Wrong output for base solution in instance spider/flight_1/0024 (1315)
	EXPECTED OUTPUT ====

		SELECT departure_date,
		       arrival_date
		FROM Flight
		WHERE origin = "Los Angeles"
		  AND destination = "Honolulu"

	     departure_date      arrival_date
	0  04/12/2005 12:45  04/12/2005 03:18
	1  04/12/2005 09:15  04/12/2005 11:15
	ACTUAL OUTPUT ====

		
		SELECT `departure_date`,
		       `arrival_date`
		FROM `flight`
		WHERE (`origin` != 'Los Angeles'
		       AND `destination` != 'Honolulu')
		ORDER BY departure_date

	     departure_date      arrival_date
	0  04/12/2005 08:32  04/12/2005 10:03
	1  04/12/2005 09:00  04/12/2005 12:02
No solution for instance spider/flight_1/0043 (1319)
Wrong output for fuzzied solution in instance spider/flight_1/0046 (1320)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Certificate AS T1
		JOIN Aircraft AS T2 ON T2.aid = T1.aid
		WHERE T2.distance > 5000
		GROUP BY T1.aid
		ORDER BY count(*) >= 5

	                             name
	0                       Boeing 72
	1                      Boeing 727
	2                 Boeing 727tYIwj
	3  British Aerospace Jetstream 41
	4  British Aerospace Jetstream 41
	5             N2)TPBoeing 777-300
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.aid AS aid,
		          LHS.name AS name,
		          LHS.distance AS distance,
		          LHS.eid AS eid,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.aid AS aid,
		             LHS.name AS name,
		             LHS.distance AS distance,
		             RHS.eid AS eid
		      FROM aircraft AS LHS
		      INNER JOIN certificate AS RHS ON (LHS.aid = RHS.aid)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT aid,
		                name,
		                distance,
		                COUNT(*) OVER () AS n
		         FROM aircraft)
		      WHERE (distance > 5000.0
		             AND distance >= 5.0)) AS RHS ON (LHS.aid = RHS.aid
		                                              AND LHS.name = RHS.name
		                                              AND LHS.distance = RHS.distance))
		ORDER BY name

	                             name
	0                       Boeing 72
	1                      Boeing 727
	2                 Boeing 727tYIwj
	3  British Aerospace Jetstream 41
	4             N2)TPBoeing 777-300
Wrong output for fuzzied solution in instance spider/flight_1/0047 (1321)
	EXPECTED OUTPUT ====

		SELECT T1.name,
		       T1.salary
		FROM Employee AS T1
		JOIN Certificate AS T2 ON T1.eid = T2.eid
		GROUP BY T1.eid
		ORDER BY count(*) DESC
		LIMIT 1

	           name    salary
	0  Chad Stewart  24449.98
	ACTUAL OUTPUT ====

		
		SELECT name,
		       salary
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT eid,
		                name,
		                salary,
		                aid,
		                COUNT(*) OVER () AS n
		         FROM
		           (SELECT LHS.eid AS eid,
		                   LHS.name AS name,
		                   LHS.salary AS salary,
		                   RHS.aid AS aid
		            FROM employee AS LHS
		            LEFT JOIN certificate AS RHS ON (LHS.eid = RHS.eid)))
		      ORDER BY salary DESC)
		   LIMIT 1)

	              name     salary
	0  Richard Jackson  227489.02
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for fuzzied solution in instance spider/flight_1/0025 (1324)
	EXPECTED OUTPUT ====

		SELECT flno
		FROM Flight
		WHERE distance > 2000

	    flno
	0   1.99
	1   2.00
	2   2.01
	3   2.02
	4   6.99
	5   7.02
	6  76.01
	7  98.99
	8  99.00
	9  99.02
	ACTUAL OUTPUT ====

		
		SELECT flno
		FROM flight
		WHERE (distance >= 2000.0)
		ORDER BY flno

	     flno
	0    1.99
	1    2.00
	2    2.01
	3    2.02
	4    6.99
	5    7.02
	6   75.99
	7   76.01
	8   98.99
	9   99.00
	10  99.02
Wrong output for fuzzied solution in instance spider/flight_1/0029 (1326)
	EXPECTED OUTPUT ====

		SELECT flno
		FROM Flight
		ORDER BY distance ASC
		LIMIT 3

	    flno
	0   1.99
	1   6.98
	2  76.02
	ACTUAL OUTPUT ====

		
		SELECT flno
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM flight
		      ORDER BY price)
		   LIMIT 3)

	    flno
	0   6.98
	1   6.99
	2  76.01
Wrong output for fuzzied solution in instance spider/flight_1/0044 (1328)
	EXPECTED OUTPUT ====

		SELECT name
		FROM Employee
		EXCEPT
		SELECT T1.name
		FROM Employee AS T1
		JOIN Certificate AS T2 ON T1.eid = T2.eid
		JOIN Aircraft AS T3 ON T3.aid = T2.aid
		WHERE T3.name = "Boeing 737-800"

	              name
	0  Vv6kpMark Young
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `name`
		FROM
		  (SELECT *
		   FROM `employee` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT `LHS`.`eid` AS `eid`,
		                  `LHS`.`aid` AS `aid`,
		                  `RHS`.`name` AS `name`,
		                  `RHS`.`distance` AS `distance`
		           FROM `certificate` AS `LHS`
		           INNER JOIN
		             (SELECT *
		              FROM `aircraft`
		              WHERE (`name` = 'Boeing 737-800')) AS RHS ON (LHS.aid = RHS.aid)) AS RHS
		        WHERE (LHS.eid = RHS.eid) ))
		ORDER BY name

	              name
	0     Chad Stewart
	1  Richard Jackson
	2  Vv6kpMark Young
Wrong output for fuzzied solution in instance spider/flight_1/0028 (1330)
	EXPECTED OUTPUT ====

		SELECT flno,
		       distance
		FROM Flight
		ORDER BY price DESC
		LIMIT 1

	   flno  distance
	0    76   7487.01
	ACTUAL OUTPUT ====

		
		SELECT flno,
		       distance
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM flight
		      ORDER BY flno)
		   LIMIT 1)

	   flno  distance
	0  1.98      1251
Wrong output for base solution in instance spider/flight_1/0031 (1331)
	EXPECTED OUTPUT ====

		SELECT origin,
		       count(*)
		FROM Flight
		GROUP BY origin

	        origin  count(*)
	0      Chicago         2
	1  Los Angeles         8
	ACTUAL OUTPUT ====

		
		SELECT origin,
		       n AS count___
		FROM
		  (SELECT departure_date,
		          origin,
		          COUNT() AS n
		   FROM flight
		   GROUP BY departure_date,
		            origin)
		ORDER BY origin

	        origin  count___
	0      Chicago         1
	1      Chicago         1
	2  Los Angeles         1
	3  Los Angeles         1
	4  Los Angeles         1
	5  Los Angeles         1
	6  Los Angeles         1
	7  Los Angeles         1
	8  Los Angeles         1
	9  Los Angeles         1
Error while executing solution for instance spider/network_2/0042 (1332)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT n_distinct AS count_distinct_name_
FROM
  (SELECT LHS.name AS name,
          LHS.age AS age,
          LHS.city AS city,
          LHS.gender AS gender,
          LHS.job AS job,
          RHS.friend AS friend,
          RHS.year AS YEAR,
          RHS.n_distinct AS n_distinct
   FROM person AS LHS
   INNER JOIN
     (SELECT name,
             friend,
             YEAR,
             COUNT(DISTINCT name) OVER () AS n_distinct
      FROM personfriend) AS RHS ON (LHS.name = RHS.name))
ORDER BY count_distinct_name_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for fuzzied solution in instance spider/network_2/0002 (1335)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Person
		WHERE gender = 'female'

	   count(*)
	0        15
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `gender`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `person`
		      WHERE (`gender` != 'female'))
		   GROUP BY gender)
		ORDER BY count___

	    count___
	0          1
	1          1
	2          1
	3          1
	4          1
	5          1
	6          1
	7          1
	8          1
	9          1
	10         1
	11         1
	12         1
	13         1
	14         1
	15         2
	16         3
	17        13
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for fuzzied solution in instance spider/network_2/0022 (1343)
	EXPECTED OUTPUT ====

		SELECT T1.name,
		       T1.age
		FROM Person AS T1
		JOIN PersonFriend AS T2 ON T1.name = T2.name
		WHERE T2.friend = 'Dan' INTERSECT
		  SELECT T1.name,
		         T1.age
		  FROM Person AS T1
		  JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Alice'

	Empty DataFrame
	Columns: [name, age]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `name`,
		                `age`
		FROM
		  (SELECT `LHS`.`name` AS `name`,
		          `LHS`.`friend` AS `friend`,
		          `LHS`.`year` AS `year`,
		          `RHS`.`age` AS `age`,
		          `RHS`.`city` AS `city`,
		          `RHS`.`gender` AS `gender`,
		          `RHS`.`job` AS `job`
		   FROM
		     (SELECT *
		      FROM `personfriend`
		      WHERE (`friend` = 'Dan'
		             OR `friend` = 'Alice')) AS LHS
		   INNER JOIN person AS RHS ON (LHS.name = RHS.name))
		ORDER BY name

	         name  age
	0    Y8nq4Dan   24
	1  Z6gm7Alice   24
	2  AliceMbehq   25
	3    Ofqe3Dan   26
	4  9KCz(Alice   27
	5    DanwHVqK   27
Wrong output for fuzzied solution in instance spider/network_2/0013 (1344)
	EXPECTED OUTPUT ====

		SELECT avg(age),
		       job
		FROM Person
		GROUP BY job

	   avg(age)            job
	0      25.0          docto
	1      25.0  engineerEun2W
	2      25.0        student
	3      26.0         doctor
	4      27.0  kJl4lengineer
	5      27.0          octor
	6      33.0       engineer
	ACTUAL OUTPUT ====

		
		SELECT meanage AS avg_age_,
		       job
		FROM
		  (SELECT gender,
		          job,
		          AVG(age) AS meanage
		   FROM person
		   GROUP BY gender,
		            job)
		ORDER BY avg_age_

	   avg_age_            job
	0      24.0        student
	1      25.0          docto
	2      25.0  engineerEun2W
	3      26.0         doctor
	4      26.0        student
	5      27.0  kJl4lengineer
	6      27.0          octor
	7      33.0       engineer
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for fuzzied solution in instance spider/network_2/0004 (1346)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT city)
		FROM Person

	   count(distinct city)
	0                     5
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count_distinct_city_
		FROM person
		ORDER BY count_distinct_city_

	   count_distinct_city_
	0                     6
No solution for instance spider/network_2/0026 (1348)
Wrong output for fuzzied solution in instance spider/network_2/0016 (1351)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       gender
		FROM Person
		WHERE age < 40
		GROUP BY gender

	   count(*)       gender
	0         1          ale
	1         1    eOAwMmale
	2         1        emale
	3         1       female
	4         1  femaleT(7tm
	5         1          mal
	6         1    maleMFQml
	7         3         male
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n_distinct AS count___,
		                gender
		FROM
		  (SELECT gender,
		          job,
		          COUNT(DISTINCT age) AS n_distinct
		   FROM person
		   GROUP BY gender,
		            job)
		WHERE (n_distinct <= 40)
		ORDER BY count___

	   count___       gender
	0         1          ale
	1         1    eOAwMmale
	2         1        emale
	3         1       female
	4         1  femaleT(7tm
	5         1          mal
	6         1         male
	7         1    maleMFQml
Error while executing solution for instance spider/network_2/0018 (1352)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT COUNT(DISTINCT `age`) OVER () AS `count___`
FROM
  (SELECT `name`,
          `age`,
          `city`,
          `gender`,
          `job`,
          MAX(`job`) OVER () AS `maxjob`
   FROM
     (SELECT *
      FROM `person`
      WHERE (`job` = 'engineer')))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
No solution for instance spider/network_2/0041 (1353)
No solution for instance spider/network_2/0035 (1354)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
No solution for instance spider/network_2/0034 (1358)
No solution for instance spider/network_2/0001 (1361)
Wrong output for fuzzied solution in instance spider/network_2/0043 (1362)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T4.name
		FROM PersonFriend AS T1
		JOIN Person AS T2 ON T1.name = T2.name
		JOIN PersonFriend AS T3 ON T1.friend = T3.name
		JOIN PersonFriend AS T4 ON T3.friend = T4.name
		WHERE T2.name = 'Alice'
		  AND T4.name != 'Alice'

	           name
	0          RDdx
	1          pcx)
	2      1ciRQcbB
	3          Alic
	4    Alice0y()8
	5    AlicesdV2R
	6      AtMUaBob
	7           Bob
	8           Dan
	9   GDxAliceAYh
	10        J1bNl
	11   f55TDAlice
	12  gAkAliceQpi
	13         lice
	ACTUAL OUTPUT ====

		
		SELECT `name_other` AS `name`
		FROM
		  (SELECT `name`,
		          `age`,
		          `city`,
		          `gender`,
		          `job`,
		          `name_other`,
		          `year`,
		          `name` AS `friend`
		   FROM
		     (SELECT `LHS`.`name` AS `name`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`city` AS `city`,
		             `LHS`.`gender` AS `gender`,
		             `LHS`.`job` AS `job`,
		             `RHS`.`name` AS `name_other`,
		             `RHS`.`year` AS `year`
		      FROM `person` AS `LHS`
		      INNER JOIN `personfriend` AS `RHS` ON (`LHS`.`name` = `RHS`.`friend`)))
		WHERE (`name` = 'Alice')
		ORDER BY name

	         name
	0        Alic
	1  Alice0y()8
	2         Bob
	3  f55TDAlice
Wrong output for fuzzied solution in instance spider/network_2/0025 (1365)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM Person AS T1
		JOIN PersonFriend AS T2 ON T1.name = T2.name
		WHERE T2.friend IN
		    (SELECT name
		     FROM Person
		     WHERE age > 40)
		EXCEPT
		SELECT T1.name
		FROM Person AS T1
		JOIN PersonFriend AS T2 ON T1.name = T2.name
		WHERE T2.friend IN
		    (SELECT name
		     FROM Person
		     WHERE age < 30)

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT friend AS name
		FROM
		  (SELECT LHS.name AS name,
		          LHS.friend AS friend,
		          LHS.year AS YEAR,
		          RHS.age AS age,
		          RHS.city AS city,
		          RHS.gender AS gender,
		          RHS.job AS job
		   FROM personfriend AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM person
		      WHERE (age < 40
		             AND age <= 30)) AS RHS ON (LHS.name = RHS.name))
		ORDER BY name

	           name
	0   3qYAlice4dI
	1   3qYAlice4dI
	2   3qYAlice4dI
	3   3qYAlice4dI
	4      9KCz(Bob
	..          ...
	57     p9IqtBob
	58     rox gBob
	59    wS1BobhT 
	60    wS1BobhT 
	61    wS1BobhT 
	
	[62 rows x 1 columns]
Wrong output for fuzzied solution in instance spider/network_2/0011 (1366)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Person
		WHERE age > 30
		  AND job = 'engineer'

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT `age`,
		          `job`,
		          COUNT(DISTINCT `age`) AS `n_distinct`
		   FROM `person`
		   GROUP BY `age`,
		            `job`)
		WHERE (`job` = 'engineer'
		       OR age = 30)
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
	3         1
	4         1
Wrong output for fuzzied solution in instance spider/network_2/0010 (1368)
	EXPECTED OUTPUT ====

		SELECT name
		FROM Person
		WHERE age < 30

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM person
		WHERE (age <= 30)
		ORDER BY name

	  name
	0  ach
Wrong output for fuzzied solution in instance spider/mountain_photos/0013 (1375)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT T2.camera_lens_id)
		FROM mountain AS T1
		JOIN photos AS T2 ON T1.id = T2.mountain_id
		WHERE T1.country = 'Ethiopia'

	   count(distinct t2.camera_lens_id)
	0                                  0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n_distinct` AS `count_distinct_t2_camera_lens_id_`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`camera_lens_id` AS `camera_lens_id`,
		          `LHS`.`mountain_id` AS `mountain_id`,
		          `LHS`.`color` AS `color`,
		          `LHS`.`name` AS `name`,
		          `RHS`.`country` AS `country`,
		          `RHS`.`n_distinct` AS `n_distinct`
		   FROM `photos` AS `LHS`
		   INNER JOIN
		     (SELECT `country`,
		             `id`,
		             COUNT(DISTINCT `country`) AS `n_distinct`
		      FROM `mountain`
		      WHERE (`country` = 'Ethiopia')
		      GROUP BY country,
		               id) AS RHS ON (LHS.id = RHS.id))
		ORDER BY count_distinct_t2_camera_lens_id_

	Empty DataFrame
	Columns: [count_distinct_t2_camera_lens_id_]
	Index: []
Wrong output for fuzzied solution in instance spider/mountain_photos/0006 (1376)
	EXPECTED OUTPUT ====

		SELECT name,
		       height,
		       prominence
		FROM mountain
		WHERE RANGE != 'Aberdare Range'

	                       name        height    prominence
	0              Jbel Toubkal -2.953829e+09  4.200200e+02
	1         Jbel ToubkaltG8Yr  3.995990e+03  4.200100e+02
	2         Jbel ToubkalBWkdU  3.996000e+03  4.200200e+02
	3   O7POldoinyo LesatimawNf  3.996000e+03  4.200200e+02
	4   qwXOldoinyo LesatimaX)t  3.996000e+03  7.336614e+09
	5              v8D7iPhaw5e2  3.996000e+03  4.199900e+02
	6             )YYv8D7iPhodv  3.996010e+03  4.200000e+02
	7              Jbel Toubkal  3.996020e+03  1.540010e+03
	8         Oldoinyo Lesatima  4.087980e+03  4.200000e+02
	9                    Cimbia  4.087990e+03  4.500200e+02
	10                      Gun  4.087990e+03  1.752600e+09
	11          4FJxv43yYiy1x3g  4.088000e+03  4.500200e+02
	12                     Bada  4.088000e+03  1.462917e+09
	13                   Cimbia  4.088000e+03  1.540000e+03
	14                   Cimbia  4.088000e+03  1.540000e+03
	15                    Pq)sg  4.088000e+03  9.724784e+09
	16                XcWj2LaMp  4.088010e+03  4.200200e+02
	17                    aPq)s  4.088020e+03  3.408527e+09
	18                   Cimbia  4.099980e+03  4.200000e+02
	19             Jbel Toubkal  4.099990e+03  4.499900e+02
	20   6AGI9Oldoinyo Lesatima  4.100000e+03  4.200000e+02
	21                     Bada  4.100000e+03  4.199800e+02
	22                     Bada  4.100000e+03  4.499900e+02
	23                      ada  4.100010e+03  4.500200e+02
	24                      una  4.119980e+03  4.200200e+02
	25                    Cimbi  4.120000e+03  3.332826e+09
	26             hB2BzUXm7ZPD  4.120010e+03  4.200100e+02
	27              rfITAR(rKLc  4.120010e+03  4.678822e+09
	28             Jbel Toubkal  4.120020e+03  1.540000e+03
	29                   Cimbia  4.259980e+03  4.500000e+02
	30                     Bada  4.260010e+03  4.199800e+02
	31                BadafECzd  4.260020e+03  1.539980e+03
	32        cbpwgJbel Toubkal  1.244231e+09  4.200200e+02
	33                Gunap9GzW  2.570657e+09  4.894439e+09
	34                      una  2.599078e+09  1.540000e+03
	35             Jbel Toubkal  3.272173e+09  4.200000e+02
	36        Oldoinyo Lesatima  4.262251e+09  2.497747e+09
	37                BadaLx9Li  5.728526e+09  1.540000e+03
	38                     Guna  6.015729e+09  4.070865e+09
	ACTUAL OUTPUT ====

		
		SELECT name,
		       height,
		       prominence
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM mountain
		      ORDER BY RANGE DESC)
		   LIMIT 21)

	                       name        height    prominence
	0              Jbel Toubkal -2.953829e+09  4.200200e+02
	1         Jbel ToubkalBWkdU  3.996000e+03  4.200200e+02
	2   qwXOldoinyo LesatimaX)t  3.996000e+03  7.336614e+09
	3              Jbel Toubkal  3.996020e+03  1.540010e+03
	4                       Gun  4.087990e+03  1.752600e+09
	5                    Cimbia  4.088000e+03  1.540000e+03
	6                     Pq)sg  4.088000e+03  9.724784e+09
	7                 XcWj2LaMp  4.088010e+03  4.200200e+02
	8                     aPq)s  4.088020e+03  3.408527e+09
	9              Jbel Toubkal  4.099990e+03  4.499900e+02
	10                     Bada  4.100000e+03  4.199800e+02
	11   6AGI9Oldoinyo Lesatima  4.100000e+03  4.200000e+02
	12                     Bada  4.100000e+03  4.499900e+02
	13                      una  4.119980e+03  4.200200e+02
	14              rfITAR(rKLc  4.120010e+03  4.678822e+09
	15                   Cimbia  4.259980e+03  4.500000e+02
	16                     Bada  4.260010e+03  4.199800e+02
	17                BadafECzd  4.260020e+03  1.539980e+03
	18                      una  2.599078e+09  1.540000e+03
	19        Oldoinyo Lesatima  4.262251e+09  2.497747e+09
	20                BadaLx9Li  5.728526e+09  1.540000e+03
No solution for instance spider/mountain_photos/0012 (1378)
No solution for instance spider/mountain_photos/0015 (1379)
Wrong output for fuzzied solution in instance spider/mountain_photos/0005 (1380)
	EXPECTED OUTPUT ====

		SELECT avg(prominence)
		FROM mountain
		WHERE country = 'Morocco'

	  avg(prominence)
	0            None
	ACTUAL OUTPUT ====

		
		SELECT `meanprominence` AS `avg_prominence_`
		FROM
		  (SELECT `country`,
		          AVG(`prominence`) AS `meanprominence`
		   FROM
		     (SELECT *
		      FROM `mountain`
		      WHERE (`country` = 'Morocco'))
		   GROUP BY country)
		ORDER BY avg_prominence_

	Empty DataFrame
	Columns: [avg_prominence_]
	Index: []
No solution for instance spider/mountain_photos/0016 (1381)
Wrong output for fuzzied solution in instance spider/mountain_photos/0007 (1382)
	EXPECTED OUTPUT ====

		SELECT T1.id,
		       T1.name
		FROM mountain AS T1
		JOIN photos AS T2 ON T1.id = T2.mountain_id
		WHERE T1.height > 4000

	    id                                        name
	0    3                            Vv6kpIghil Mgoun
	1    3                            Vv6kpIghil Mgoun
	2    5       Jebel n'Tarourt / Tifnout / Iferouane
	3   14  Jebel n'Tarourt / Tifnout / IferouaneFZjIj
	4   19                                  Ighil Mgou
	5   19                                  Ighil Mgou
	6   19                                  Ighil Mgou
	7   21                           NzFIghil MgounUkJ
	8   22                             Ouanoukrim9awO)
	9   22                             Ouanoukrim9awO)
	10  22                             Ouanoukrim9awO)
	ACTUAL OUTPUT ====

		
		SELECT id,
		       name
		FROM
		  (SELECT id,
		          name,
		          height,
		          prominence,
		          RANGE,
		          country,
		          id_other,
		          camera_lens_id,
		          color,
		          name_other,
		          id AS mountain_id
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.name AS name,
		             LHS.height AS height,
		             LHS.prominence AS prominence,
		             LHS.range AS RANGE,
		             LHS.country AS country,
		             RHS.id AS id_other,
		             RHS.camera_lens_id AS camera_lens_id,
		             RHS.color AS color,
		             RHS.name AS name_other
		      FROM mountain AS LHS
		      INNER JOIN photos AS RHS ON (LHS.id = RHS.mountain_id)))
		WHERE (height >= 4000.0)
		ORDER BY id

	    id                                        name
	0    3                            Vv6kpIghil Mgoun
	1    3                            Vv6kpIghil Mgoun
	2    5       Jebel n'Tarourt / Tifnout / Iferouane
	3   14  Jebel n'Tarourt / Tifnout / IferouaneFZjIj
	4   18                        Kaka / Kecha / Chiqe
	5   18                        Kaka / Kecha / Chiqe
	6   19                                  Ighil Mgou
	7   19                                  Ighil Mgou
	8   19                                  Ighil Mgou
	9   21                           NzFIghil MgounUkJ
	10  22                             Ouanoukrim9awO)
	11  22                             Ouanoukrim9awO)
	12  22                             Ouanoukrim9awO)
No solution for instance spider/mountain_photos/0014 (1384)
Wrong output for fuzzied solution in instance spider/mountain_photos/0009 (1385)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM photos AS T1
		JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id
		GROUP BY T2.id
		ORDER BY count(*) DESC
		LIMIT 1

	                             name
	0  Panasonic Lumix G 150mm f /2.8
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT id,
		          name,
		          n,
		          id_other,
		          color,
		          name_other,
		          id AS mountain_id
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.name AS name,
		             LHS.n AS n,
		             RHS.id AS id_other,
		             RHS.color AS color,
		             RHS.name AS name_other
		      FROM
		        (SELECT id,
		                name,
		                COUNT() AS n
		         FROM camera_lens
		         GROUP BY id,
		                  name) AS LHS
		      INNER JOIN photos AS RHS ON (LHS.id = RHS.mountain_id
		                                      AND LHS.n = RHS.camera_lens_id)))
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance spider/company_employee/0008 (1389)
	EXPECTED OUTPUT ====

		SELECT Headquarters
		FROM company
		GROUP BY Headquarters
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  headquarters
	0           UK
	ACTUAL OUTPUT ====

		
		SELECT headquarters
		FROM
		  (SELECT headquarters,
		          COUNT() AS n
		   FROM
		     (SELECT profits_in_billion AS company_id,
		             name,
		             headquarters,
		             industry,
		             sales_in_billion,
		             profits_in_billion,
		             assets_in_billion,
		             market_value_in_billion,
		             name_other,
		             headquarters_other,
		             sales_in_billion_other,
		             profits_in_billion_other,
		             assets_in_billion_other,
		             market_value_in_billion_other
		      FROM
		        (SELECT LHS.company_id AS company_id,
		                LHS.name AS name,
		                LHS.headquarters AS headquarters,
		                LHS.industry AS industry,
		                LHS.sales_in_billion AS sales_in_billion,
		                LHS.profits_in_billion AS profits_in_billion,
		                LHS.assets_in_billion AS assets_in_billion,
		                LHS.market_value_in_billion AS market_value_in_billion,
		                RHS.name AS name_other,
		                RHS.headquarters AS headquarters_other,
		                RHS.sales_in_billion AS sales_in_billion_other,
		                RHS.profits_in_billion AS profits_in_billion_other,
		                RHS.assets_in_billion AS assets_in_billion_other,
		                RHS.market_value_in_billion AS market_value_in_billion_other
		         FROM company AS LHS
		         INNER JOIN company AS RHS ON (LHS.industry = RHS.industry
		                                          AND LHS.profits_in_billion = RHS.company_id)))
		   GROUP BY headquarters)
		ORDER BY headquarters

	Empty DataFrame
	Columns: [headquarters]
	Index: []
Wrong output for fuzzied solution in instance spider/company_employee/0013 (1391)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM employment AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		JOIN company AS T3 ON T1.Company_ID = T3.Company_ID
		WHERE T3.Sales_in_Billion > 200

	                 name
	0       Darryl Kenned
	1       Darryl Kenned
	2      Darryl Kennedy
	3      Darryl Kennedy
	4      Darryl Kennedy
	5      Darryl Kennedy
	6   David Butlerjx5W)
	7   David Butlerjx5W)
	8        Reggie Lewis
	9        Reggie Lewis
	10        Tim Naegeli
	11        Tim Naegeli
	12        Tim Naegeli
	13        Tim Naegeli
	14      arryl Kennedy
	15         im Naegeli
	16         im Naegeli
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.people_id AS people_id,
		          LHS.age AS age,
		          LHS.name AS name,
		          LHS.nationality AS nationality,
		          LHS.graduation_college AS graduation_college,
		          RHS.company_id AS company_id,
		          RHS.year_working AS year_working
		   FROM people AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM employment AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM company
		              WHERE (sales_in_billion < 200.0)) AS RHS
		           WHERE (LHS.company_id = RHS.company_id) )) AS RHS ON (LHS.people_id = RHS.people_id))
		ORDER BY name

	                 name
	0       Darryl Kenned
	1       Darryl Kenned
	2       Darryl Kenned
	3      Darryl Kennedy
	4      Darryl Kennedy
	5      Darryl Kennedy
	6      Darryl Kennedy
	7      Darryl Kennedy
	8      Darryl Kennedy
	9   David Butlerjx5W)
	10  David Butlerjx5W)
	11  David Butlerjx5W)
	12       Reggie Lewis
	13       Reggie Lewis
	14       Reggie Lewis
	15       Reggie Lewis
	16       Reggie Lewis
	17        Tim Naegeli
	18        Tim Naegeli
	19        Tim Naegeli
	20        Tim Naegeli
	21        Tim Naegeli
	22        Tim Naegeli
	23      arryl Kennedy
	24      arryl Kennedy
	25      arryl Kennedy
	26      arryl Kennedy
	27         im Naegeli
	28         im Naegeli
	29         im Naegeli
	30         im Naegeli
Error while executing solution for instance spider/company_employee/0012 (1394)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/company_employee/0012 (1394)
Wrong output for fuzzied solution in instance spider/company_employee/0016 (1397)
	EXPECTED OUTPUT ====

		SELECT name
		FROM company
		WHERE Sales_in_Billion > 200
		ORDER BY Sales_in_Billion,
		         Profits_in_Billion DESC

	                      name
	0                   Chevro
	1                  Chevron
	2  China Construction Bank
	3                   hevron
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM company
		WHERE (sales_in_billion >= 200.0)
		ORDER BY name

	                      name
	0                   Chevro
	1                   Chevro
	2                  Chevron
	3  China Construction Bank
	4  China Construction Bank
	5               Wells Farg
	6                   hevron
Error while executing solution for instance spider/company_employee/0001 (1399)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT `n_distinct` AS `count___`
FROM
  (SELECT `company_id`,
          `name`,
          `headquarters`,
          `industry`,
          `sales_in_billion`,
          `profits_in_billion`,
          `assets_in_billion`,
          `market_value_in_billion`,
          COUNT(DISTINCT `headquarters`) OVER () AS `n_distinct`
   FROM `company`)
WHERE (`headquarters` = 'USA')
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/company_employee/0014 (1400)
	EXPECTED OUTPUT ====

		SELECT T3.Name,
		       COUNT(*)
		FROM employment AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		JOIN company AS T3 ON T1.Company_ID = T3.Company_ID
		GROUP BY T3.Name

	                       name  count(*)
	0              WalmartYyYT0         2
	1              UUl5aWalmart         3
	2                ells Fargo         3
	3         pM)Wells Fargoxjo         3
	4                   Chevron         4
	5    China Construction Ban         4
	6                   Walmart         4
	7              ChevronDPAeh         5
	8          WBOYLWells Fargo         5
	9                    Chevro         8
	10                   hevron        10
	11              Wells Fargo        11
	12  China Construction Bank        18
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name,
		                n AS count___
		FROM
		  (SELECT LHS.company_id AS company_id,
		          LHS.name AS name,
		          LHS.headquarters AS headquarters,
		          LHS.industry AS industry,
		          LHS.sales_in_billion AS sales_in_billion,
		          LHS.profits_in_billion AS profits_in_billion,
		          LHS.assets_in_billion AS assets_in_billion,
		          LHS.market_value_in_billion AS market_value_in_billion,
		          LHS.people_id AS people_id,
		          LHS.year_working AS year_working,
		          RHS.age AS age,
		          RHS.nationality AS nationality,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.company_id AS company_id,
		             LHS.name AS name,
		             LHS.headquarters AS headquarters,
		             LHS.industry AS industry,
		             LHS.sales_in_billion AS sales_in_billion,
		             LHS.profits_in_billion AS profits_in_billion,
		             LHS.assets_in_billion AS assets_in_billion,
		             LHS.market_value_in_billion AS market_value_in_billion,
		             RHS.people_id AS people_id,
		             RHS.year_working AS year_working
		      FROM company AS LHS
		      INNER JOIN employment AS RHS ON (LHS.company_id = RHS.company_id)) AS LHS
		   CROSS JOIN
		     (SELECT age,
		             nationality,
		             COUNT() AS n
		      FROM people
		      GROUP BY age,
		               nationality) AS RHS)
		ORDER BY name

	                       name  count___
	0                    Chevro         1
	1                   Chevron         1
	2              ChevronDPAeh         1
	3    China Construction Ban         1
	4   China Construction Bank         1
	5              UUl5aWalmart         1
	6          WBOYLWells Fargo         1
	7                   Walmart         1
	8              WalmartYyYT0         1
	9               Wells Fargo         1
	10               ells Fargo         1
	11                   hevron         1
	12        pM)Wells Fargoxjo         1
Error while executing solution for instance spider/company_employee/0011 (1402)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/company_employee/0011 (1402)
Wrong output for fuzzied solution in instance spider/company_employee/0010 (1403)
	EXPECTED OUTPUT ====

		SELECT Headquarters
		FROM company
		WHERE Industry = "Banking" INTERSECT
		  SELECT Headquarters
		  FROM company WHERE Industry = "Oil and gas"

	Empty DataFrame
	Columns: [headquarters]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `headquarters`
		FROM `company`
		WHERE (`industry` = 'Banking'
		       AND `industry` != 'Oil and gas')
		ORDER BY headquarters

	  headquarters
	0     QIijVUSA
Wrong output for fuzzied solution in instance spider/roller_coaster/0017 (1405)
	EXPECTED OUTPUT ====

		SELECT T1.name,
		       T1.area,
		       T1.population
		FROM country AS T1
		JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID
		WHERE T2.speed > 60 INTERSECT
		  SELECT T1.name,
		         T1.area,
		         T1.population
		  FROM country AS T1
		  JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T2.speed < 55

	           name    area  population
	0  F sqGAustria  338143     5261006
	1       Austria  449964     9047750
	ACTUAL OUTPUT ====

		
		SELECT name,
		       area,
		       population
		FROM
		  (SELECT LHS.country_id AS country_id,
		          LHS.name AS name,
		          LHS.population AS population,
		          LHS.area AS area,
		          LHS.languages AS languages,
		          RHS.roller_coaster_id AS roller_coaster_id,
		          RHS.name AS name_other,
		          RHS.park AS park,
		          RHS.length AS LENGTH,
		          RHS.height AS height,
		          RHS.speed AS speed,
		          RHS.opened AS opened,
		          RHS.status AS status
		   FROM country AS LHS
		   INNER JOIN roller_coaster AS RHS ON (LHS.country_id = RHS.country_id))
		WHERE (speed = 55)
		ORDER BY name

	Empty DataFrame
	Columns: [name, area, population]
	Index: []
Wrong output for fuzzied solution in instance spider/roller_coaster/0013 (1408)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM country AS T1
		JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID
		GROUP BY T1.Name
		HAVING COUNT(*) > 1

	            name
	0   122IxAustria
	1   WiOwsFinland
	2  oROAustriaWXL
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM country AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT country_id,
		                     status,
		                     COUNT() AS n
		              FROM roller_coaster
		              GROUP BY country_id,
		                       status)
		           WHERE (n = 1)) AS RHS
		        WHERE (LHS.country_id = RHS.country_id) ))
		ORDER BY name

	            name
	0  oROAustriaWXL
Wrong output for fuzzied solution in instance spider/roller_coaster/0006 (1409)
	EXPECTED OUTPUT ====

		SELECT Speed
		FROM roller_coaster
		ORDER BY LENGTH DESC
		LIMIT 1

	  speed
	0     4
	ACTUAL OUTPUT ====

		
		SELECT speed
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM roller_coaster
		      ORDER BY country_id DESC)
		   LIMIT 1)

	  speed
	0    54
Error while executing solution for instance spider/roller_coaster/0012 (1411)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/roller_coaster/0012 (1411)
Wrong output for base solution in instance spider/roller_coaster/0015 (1412)
	EXPECTED OUTPUT ====

	      name  avg_t2_speed_
	0  Finland      47.450000
	1  Austria      58.666667
	2   Sweden      67.000000
	ACTUAL OUTPUT ====

		SELECT T1.Name,
		       avg(T2.Speed)
		FROM country AS T1
		JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID
		GROUP BY T1.Name

	      name  avg(t2.speed)
	0  Austria      58.666667
	1  Finland      47.450000
	2   Sweden      67.000000
Wrong output for ground truth in instance spider/roller_coaster/0015 (1412)
Wrong output for fuzzied solution in instance spider/roller_coaster/0005 (1413)
	EXPECTED OUTPUT ====

		SELECT Status
		FROM roller_coaster
		WHERE LENGTH > 3300
		  OR Height > 100

	             status
	0    6zZZ2Operating
	1          Operatin
	2          Operatin
	3         Operating
	4         Operating
	5         Operating
	6         Operating
	7         Operating
	8    Operating)voPW
	9    OperatingX(H4c
	10         X3Tc89hF
	11   XjZqGOperating
	12   YX4bFOperating
	13       cf90qwy)WK
	14  jKeOperatingYq9
	15        mMloP3K3K
	16       nMDfEoAwYZ
	17         perating
	ACTUAL OUTPUT ====

		
		SELECT status
		FROM roller_coaster
		WHERE (LENGTH != 3300.0
		       AND height >= 100.0)
		ORDER BY status

	             status
	0    6zZZ2Operating
	1          Operatin
	2          Operatin
	3         Operating
	4         Operating
	5         Operating
	6    Operating)voPW
	7    OperatingX(H4c
	8          X3Tc89hF
	9    XjZqGOperating
	10   YX4bFOperating
	11       cf90qwy)WK
	12  jKeOperatingYq9
	13        mMloP3K3K
	14         perating
Wrong output for fuzzied solution in instance spider/roller_coaster/0016 (1414)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM country
		WHERE country_id NOT IN
		    (SELECT country_id
		     FROM roller_coaster
		     WHERE LENGTH > 3000 )

	   count(*)
	0         3
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n_distinct AS count___
		FROM
		  (SELECT LHS.country_id AS country_id,
		          LHS.name AS name,
		          LHS.population AS population,
		          LHS.area AS area,
		          LHS.languages AS languages,
		          RHS.country_id AS country_id_other,
		          RHS.n_distinct AS n_distinct
		   FROM country AS LHS
		   CROSS JOIN
		     (SELECT *
		      FROM
		        (SELECT country_id,
		                COUNT(DISTINCT country_id) AS n_distinct
		         FROM roller_coaster
		         GROUP BY country_id)
		      WHERE (country_id = 3000
		             OR n_distinct <= 3000)) AS RHS)
		WHERE (country_id != country_id_other)
		ORDER BY count___

	   count___
	0         1
No solution for instance spider/roller_coaster/0007 (1415)
No solution for instance spider/roller_coaster/0014 (1417)
No solution for instance spider/roller_coaster/0009 (1418)
Wrong output for fuzzied solution in instance spider/roller_coaster/0010 (1420)
	EXPECTED OUTPUT ====

		SELECT Status
		FROM roller_coaster
		GROUP BY Status
		HAVING COUNT(*) > 2

	      status
	0  Operating
	1   perating
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT status
		FROM
		  (SELECT roller_coaster_id,
		          name,
		          park,
		          country_id,
		          LENGTH,
		          height,
		          speed,
		          opened,
		          status,
		          COUNT(*) OVER () AS n
		   FROM roller_coaster)
		WHERE (n > 2)
		ORDER BY status

	           status
	0       Operating
	1  OperatingwpUgN
	2  TR60EOperating
	3  fe84kOperating
	4        perating
Wrong output for fuzzied solution in instance spider/tracking_software_problems/0002 (1421)
	EXPECTED OUTPUT ====

		SELECT problem_log_id,
		       problem_id
		FROM problem_log
		ORDER BY log_entry_date
		LIMIT 1

	   problem_log_id  problem_id
	0              11          10
	ACTUAL OUTPUT ====

		
		SELECT problem_log_id,
		       problem_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM problem_log
		      ORDER BY assigned_to_staff_id)
		   LIMIT 1)

	   problem_log_id  problem_id
	0               7          10
No solution for instance spider/tracking_software_problems/0017 (1422)
Wrong output for fuzzied solution in instance spider/tracking_software_problems/0008 (1423)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.product_name
		FROM product AS T1
		JOIN problems AS T2 ON T1.product_id = T2.product_id
		GROUP BY T1.product_name
		ORDER BY count(*) DESC
		LIMIT 1

	   count(*) product_name
	0         4       wechat
	ACTUAL OUTPUT ====

		
		SELECT product_id_other AS count___,
		       product_name
		FROM
		  (SELECT product_id,
		          product_name,
		          product_details,
		          product_id_other,
		          product_id AS n
		   FROM
		     (SELECT LHS.product_id AS product_id,
		             LHS.product_name AS product_name,
		             LHS.product_details AS product_details,
		             RHS.product_id AS product_id_other
		      FROM product AS LHS
		      INNER JOIN
		        (SELECT other_problem_details,
		                product_id,
		                COUNT() AS n
		         FROM problems
		         GROUP BY other_problem_details,
		                  product_id) AS RHS ON (LHS.product_id = RHS.n
		                                         AND LHS.product_details = RHS.other_problem_details)))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___, product_name]
	Index: []
Wrong output for fuzzied solution in instance spider/tracking_software_problems/0006 (1426)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.problem_id,
		                T2.problem_log_id
		FROM staff AS T1
		JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id
		WHERE T1.staff_first_name = "Rylan"
		  AND T1.staff_last_name = "Homenick"

	Empty DataFrame
	Columns: [problem_id, problem_log_id]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `problem_id`,
		       `problem_log_id`
		FROM
		  (SELECT `problem_log_id`,
		          `assigned_to_staff_id`,
		          `problem_id`,
		          `problem_category_code`,
		          `problem_status_code`,
		          `log_entry_date`,
		          `log_entry_description`,
		          `log_entry_fix`,
		          `other_log_details`,
		          `staff_first_name`,
		          `staff_last_name`,
		          `other_staff_details`,
		          `assigned_to_staff_id` AS `staff_id`
		   FROM
		     (SELECT `LHS`.`problem_log_id` AS `problem_log_id`,
		             `LHS`.`assigned_to_staff_id` AS `assigned_to_staff_id`,
		             `LHS`.`problem_id` AS `problem_id`,
		             `LHS`.`problem_category_code` AS `problem_category_code`,
		             `LHS`.`problem_status_code` AS `problem_status_code`,
		             `LHS`.`log_entry_date` AS `log_entry_date`,
		             `LHS`.`log_entry_description` AS `log_entry_description`,
		             `LHS`.`log_entry_fix` AS `log_entry_fix`,
		             `LHS`.`other_log_details` AS `other_log_details`,
		             `RHS`.`staff_first_name` AS `staff_first_name`,
		             `RHS`.`staff_last_name` AS `staff_last_name`,
		             `RHS`.`other_staff_details` AS `other_staff_details`
		      FROM `problem_log` AS `LHS`
		      INNER JOIN `staff` AS `RHS` ON (`LHS`.`assigned_to_staff_id` = `RHS`.`staff_id`)))
		WHERE (`staff_first_name` = 'Rylan'
		       OR `staff_last_name` = 'Homenick')
		ORDER BY problem_id

	   problem_id  problem_log_id
	0           9               4
Error while executing solution for instance spider/tracking_software_problems/0012 (1428)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `problem_id`
FROM `problems`
WHERE (`date_problem_reported` <= parse_datetime('1978-06-26'))
ORDER BY problem_id]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/tracking_software_problems/0015 (1429)
	EXPECTED OUTPUT ====

		SELECT DISTINCT product_name
		FROM product
		ORDER BY product_name

	   product_name
	0          chat
	1          earn
	2         echat
	3           hat
	4          lear
	5  twitterdWLsK
	6        wechat
	ACTUAL OUTPUT ====

		
		SELECT product_name
		FROM product
		ORDER BY product_name

	   product_name
	0          chat
	1          earn
	2         echat
	3           hat
	4          lear
	5  twitterdWLsK
	6        wechat
	7        wechat
Wrong output for fuzzied solution in instance spider/tracking_software_problems/0005 (1430)
	EXPECTED OUTPUT ====

		SELECT DISTINCT staff_first_name,
		                staff_last_name
		FROM staff AS T1
		JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id
		WHERE T2.problem_id = 1

	Empty DataFrame
	Columns: [staff_first_name, staff_last_name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT staff_first_name,
		       staff_last_name
		FROM
		  (SELECT LHS.problem_log_id AS problem_log_id,
		          LHS.assigned_to_staff_id AS assigned_to_staff_id,
		          LHS.problem_id AS problem_id,
		          LHS.problem_category_code AS problem_category_code,
		          LHS.problem_status_code AS problem_status_code,
		          LHS.log_entry_date AS log_entry_date,
		          LHS.log_entry_description AS log_entry_description,
		          LHS.log_entry_fix AS log_entry_fix,
		          LHS.other_log_details AS other_log_details,
		          RHS.staff_first_name AS staff_first_name,
		          RHS.staff_last_name AS staff_last_name,
		          RHS.other_staff_details AS other_staff_details
		   FROM
		     (SELECT *
		      FROM problem_log
		      WHERE (problem_id <= 1)) AS LHS
		   INNER JOIN staff AS RHS ON (LHS.assigned_to_staff_id = RHS.staff_id))
		ORDER BY staff_first_name

	  staff_first_name staff_last_name
	0           Ashley      aX5wWFrami
	1           Junius           Frami
	2             ayla     uwwBosco6oB
Wrong output for fuzzied solution in instance spider/tracking_software_problems/0016 (1431)
	EXPECTED OUTPUT ====

		SELECT DISTINCT product_name
		FROM product
		ORDER BY product_id

	   product_name
	0          chat
	1          earn
	2         echat
	3           hat
	4          lear
	5  twitterdWLsK
	6        wechat
	ACTUAL OUTPUT ====

		
		SELECT product_name
		FROM product
		ORDER BY product_name

	   product_name
	0          chat
	1          earn
	2         echat
	3           hat
	4          lear
	5  twitterdWLsK
	6        wechat
	7        wechat
Wrong output for fuzzied solution in instance spider/tracking_software_problems/0018 (1432)
	EXPECTED OUTPUT ====

		SELECT product_id
		FROM problems AS T1
		JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id
		WHERE T2.staff_first_name = "Christop"
		  AND T2.staff_last_name = "Berge" INTERSECT
		  SELECT product_id
		  FROM problems AS T1
		  JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Ashley"
		  AND T2.staff_last_name = "Medhurst"

	Empty DataFrame
	Columns: [product_id]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `product_id`
		FROM
		  (SELECT *
		   FROM
		     (SELECT `staff_id`,
		             `staff_first_name`,
		             `staff_last_name`,
		             `other_staff_details`,
		             `problem_id`,
		             `product_id`,
		             `reported_by_staff_id`,
		             `date_problem_reported`,
		             `date_problem_closed`,
		             `other_problem_details`,
		             `closure_authorised_by_staff_id`,
		             `other_staff_details` AS `problem_description`
		      FROM
		        (SELECT `staff_id`,
		                `staff_first_name`,
		                `staff_last_name`,
		                `other_staff_details`,
		                `problem_id`,
		                `product_id`,
		                `reported_by_staff_id`,
		                `date_problem_reported`,
		                `date_problem_closed`,
		                `other_problem_details`,
		                `staff_id` AS `closure_authorised_by_staff_id`
		         FROM
		           (SELECT `LHS`.`staff_id` AS `staff_id`,
		                   `LHS`.`staff_first_name` AS `staff_first_name`,
		                   `LHS`.`staff_last_name` AS `staff_last_name`,
		                   `LHS`.`other_staff_details` AS `other_staff_details`,
		                   `RHS`.`problem_id` AS `problem_id`,
		                   `RHS`.`product_id` AS `product_id`,
		                   `RHS`.`reported_by_staff_id` AS `reported_by_staff_id`,
		                   `RHS`.`date_problem_reported` AS `date_problem_reported`,
		                   `RHS`.`date_problem_closed` AS `date_problem_closed`,
		                   `RHS`.`other_problem_details` AS `other_problem_details`
		            FROM `staff` AS `LHS`
		            INNER JOIN `problems` AS `RHS` ON (`LHS`.`staff_id` = `RHS`.`closure_authorised_by_staff_id`
		                                                  AND `LHS`.`other_staff_details` = `RHS`.`problem_description`))))
		   WHERE (`staff_last_name` != 'Berge'
		          OR `staff_last_name` != 'Medhurst'))
		WHERE (`staff_first_name` != 'Christop'
		       AND `staff_first_name` = 'Ashley')
		ORDER BY product_id

	   product_id
	0  9097906748
No solution for instance spider/tracking_software_problems/0020 (1433)
No solution for instance spider/tracking_software_problems/0019 (1434)
Wrong output for fuzzied solution in instance spider/tracking_software_problems/0007 (1435)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM product AS T1
		JOIN problems AS T2 ON T1.product_id = T2.product_id
		WHERE T1.product_name = "voluptatem"

	   count(*)
	0         5
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT product_name) AS n_distinct
		   FROM
		     (SELECT product_id,
		             product_name,
		             product_details,
		             product_id_other,
		             closure_authorised_by_staff_id,
		             reported_by_staff_id,
		             date_problem_reported,
		             date_problem_closed,
		             problem_description,
		             problem_id,
		             product_details AS other_problem_details
		      FROM
		        (SELECT product_id,
		                product_name,
		                product_details,
		                product_id_other,
		                closure_authorised_by_staff_id,
		                reported_by_staff_id,
		                date_problem_reported,
		                date_problem_closed,
		                problem_description,
		                product_id AS problem_id
		         FROM
		           (SELECT LHS.product_id AS product_id,
		                   LHS.product_name AS product_name,
		                   LHS.product_details AS product_details,
		                   RHS.product_id AS product_id_other,
		                   RHS.closure_authorised_by_staff_id AS closure_authorised_by_staff_id,
		                   RHS.reported_by_staff_id AS reported_by_staff_id,
		                   RHS.date_problem_reported AS date_problem_reported,
		                   RHS.date_problem_closed AS date_problem_closed,
		                   RHS.problem_description AS problem_description
		            FROM product AS LHS
		            INNER JOIN problems AS RHS ON (LHS.product_id = RHS.problem_id
		                                              AND LHS.product_details = RHS.other_problem_details)))))
		ORDER BY count___

	   count___
	0         1
No solution for instance spider/tracking_software_problems/0024 (1436)
Wrong output for fuzzied solution in instance spider/tracking_software_problems/0021 (1437)
	EXPECTED OUTPUT ====

		SELECT T2.product_name
		FROM problems AS T1
		JOIN product AS T2 ON T1.product_id = T2.product_id
		GROUP BY T2.product_name
		ORDER BY count(*) DESC
		LIMIT 3

	   product_name
	0          chat
	1  twitterdWLsK
	2        wechat
	ACTUAL OUTPUT ====

		
		SELECT product_name
		FROM
		  (SELECT LHS.closure_authorised_by_staff_id AS closure_authorised_by_staff_id,
		          LHS.product_id AS product_id,
		          LHS.n AS n,
		          RHS.product_id AS product_id_other,
		          RHS.product_name AS product_name,
		          RHS.product_details AS product_details,
		          RHS.problem_id AS problem_id,
		          RHS.date_problem_reported AS date_problem_reported,
		          RHS.date_problem_closed AS date_problem_closed,
		          RHS.problem_description AS problem_description,
		          RHS.other_problem_details AS other_problem_details
		   FROM
		     (SELECT closure_authorised_by_staff_id,
		             product_id,
		             COUNT() AS n
		      FROM problems
		      GROUP BY closure_authorised_by_staff_id,
		               product_id) AS LHS
		   INNER JOIN
		     (SELECT LHS.product_id AS product_id,
		             LHS.product_name AS product_name,
		             LHS.product_details AS product_details,
		             RHS.problem_id AS problem_id,
		             RHS.closure_authorised_by_staff_id AS closure_authorised_by_staff_id,
		             RHS.reported_by_staff_id AS reported_by_staff_id,
		             RHS.date_problem_reported AS date_problem_reported,
		             RHS.date_problem_closed AS date_problem_closed,
		             RHS.problem_description AS problem_description,
		             RHS.other_problem_details AS other_problem_details
		      FROM product AS LHS
		      INNER JOIN problems AS RHS ON (LHS.product_id = RHS.product_id)) AS RHS ON (LHS.product_id = RHS.reported_by_staff_id
		                                                                                     AND LHS.closure_authorised_by_staff_id = RHS.closure_authorised_by_staff_id))
		ORDER BY product_name

	   product_name
	0  twitterdWLsK
No solution for instance spider/tracking_software_problems/0014 (1439)
Error while executing solution for instance spider/tracking_software_problems/0011 (1441)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `problem_id`
FROM `problems`
WHERE (`date_problem_reported` > parse_datetime('1978-06-26'))
ORDER BY problem_id]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/apartment_rentals/0033 (1443)
No solution for instance spider/apartment_rentals/0036 (1446)
Wrong output for fuzzied solution in instance spider/apartment_rentals/0017 (1447)
	EXPECTED OUTPUT ====

		SELECT T1.booking_status_code
		FROM Apartment_Bookings AS T1
		JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id
		WHERE T2.apt_number = "Suite 634"

	  booking_status_code
	0          Provisiona
	1         Provisional
	2         Provisional
	3         Provisional
	4    ProvisionalDjx)T
	5    WzUT4Provisional
	ACTUAL OUTPUT ====

		
		SELECT `booking_status_code`
		FROM
		  (SELECT `apt_id`,
		          `building_id`,
		          `apt_type_code`,
		          `apt_number`,
		          `bathroom_count`,
		          `bedroom_count`,
		          `room_count`,
		          `apt_booking_id`,
		          `apt_id_other`,
		          `booking_status_code`,
		          `booking_start_date`,
		          `booking_end_date`,
		          `apt_id` AS `guest_id`
		   FROM
		     (SELECT `LHS`.`apt_id` AS `apt_id`,
		             `LHS`.`building_id` AS `building_id`,
		             `LHS`.`apt_type_code` AS `apt_type_code`,
		             `LHS`.`apt_number` AS `apt_number`,
		             `LHS`.`bathroom_count` AS `bathroom_count`,
		             `LHS`.`bedroom_count` AS `bedroom_count`,
		             `LHS`.`room_count` AS `room_count`,
		             `RHS`.`apt_booking_id` AS `apt_booking_id`,
		             `RHS`.`apt_id` AS `apt_id_other`,
		             `RHS`.`booking_status_code` AS `booking_status_code`,
		             `RHS`.`booking_start_date` AS `booking_start_date`,
		             `RHS`.`booking_end_date` AS `booking_end_date`
		      FROM `apartments` AS `LHS`
		      INNER JOIN `apartment_bookings` AS `RHS` ON (`LHS`.`apt_id` = `RHS`.`guest_id`)))
		WHERE (`apt_number` = 'Suite 634')
		ORDER BY booking_status_code

	  booking_status_code
	0         Provisional
	1         Provisional
No solution for instance spider/apartment_rentals/0039 (1449)
No solution for instance spider/apartment_rentals/0038 (1450)
No solution for instance spider/apartment_rentals/0006 (1456)
No solution for instance spider/apartment_rentals/0026 (1459)
Error while executing solution for instance spider/apartment_rentals/0015 (1460)

The column label 'booking_start_date' is not unique.
Error while checking ground truth in instance spider/apartment_rentals/0015 (1460)
Error while executing solution for instance spider/apartment_rentals/0016 (1462)

The column label 'booking_start_date' is not unique.
Error while checking ground truth in instance spider/apartment_rentals/0016 (1462)
Wrong output for fuzzied solution in instance spider/apartment_rentals/0032 (1463)
	EXPECTED OUTPUT ====

		SELECT apt_type_code
		FROM Apartments
		GROUP BY apt_type_code
		ORDER BY avg(room_count) DESC
		LIMIT 3

	  apt_type_code
	0          Flat
	1  WFcDuplexF 0
	2     qERi7Flat
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT apt_type_code_other_other AS apt_type_code
		FROM
		  (SELECT apt_id,
		          building_id,
		          apt_type_code,
		          apt_number,
		          bathroom_count,
		          apt_id AS bedroom_count,
		          room_count,
		          building_id_other,
		          apt_type_code_other,
		          apt_number_other,
		          bathroom_count_other,
		          room_count_other,
		          apt_id_other,
		          building_id_other_other,
		          apt_type_code_other_other,
		          apt_number_other_other,
		          bedroom_count_other,
		          room_count_other_other
		   FROM
		     (SELECT LHS.apt_id AS apt_id,
		             LHS.building_id AS building_id,
		             LHS.apt_type_code AS apt_type_code,
		             LHS.apt_number AS apt_number,
		             LHS.bathroom_count AS bathroom_count,
		             LHS.bedroom_count AS bedroom_count,
		             LHS.room_count AS room_count,
		             RHS.building_id AS building_id_other,
		             RHS.apt_type_code AS apt_type_code_other,
		             RHS.apt_number AS apt_number_other,
		             RHS.bathroom_count AS bathroom_count_other,
		             RHS.room_count AS room_count_other,
		             RHS.apt_id_other AS apt_id_other,
		             RHS.building_id_other AS building_id_other_other,
		             RHS.apt_type_code_other AS apt_type_code_other_other,
		             RHS.apt_number_other AS apt_number_other_other,
		             RHS.bedroom_count_other AS bedroom_count_other,
		             RHS.room_count_other AS room_count_other_other
		      FROM apartments AS LHS
		      INNER JOIN
		        (SELECT apt_id,
		                building_id,
		                apt_type_code,
		                apt_number,
		                apt_id AS bathroom_count,
		                bedroom_count,
		                room_count,
		                apt_id_other,
		                building_id_other,
		                apt_type_code_other,
		                apt_number_other,
		                bedroom_count_other,
		                room_count_other
		         FROM
		           (SELECT LHS.apt_id AS apt_id,
		                   LHS.building_id AS building_id,
		                   LHS.apt_type_code AS apt_type_code,
		                   LHS.apt_number AS apt_number,
		                   LHS.bathroom_count AS bathroom_count,
		                   LHS.bedroom_count AS bedroom_count,
		                   LHS.room_count AS room_count,
		                   RHS.apt_id AS apt_id_other,
		                   RHS.building_id AS building_id_other,
		                   RHS.apt_type_code AS apt_type_code_other,
		                   RHS.apt_number AS apt_number_other,
		                   RHS.bedroom_count AS bedroom_count_other,
		                   RHS.room_count AS room_count_other
		            FROM apartments AS LHS
		            INNER JOIN apartments AS RHS ON (LHS.apt_id = RHS.bathroom_count))) AS RHS ON (LHS.apt_id = RHS.bedroom_count
		                                                                                              AND LHS.bathroom_count = RHS.apt_id)))
		ORDER BY apt_type_code

	Empty DataFrame
	Columns: [apt_type_code]
	Index: []
Wrong output for fuzzied solution in instance spider/apartment_rentals/0035 (1465)
	EXPECTED OUTPUT ====

		SELECT apt_type_code
		FROM Apartments
		WHERE bathroom_count > 1
		GROUP BY apt_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  apt_type_code
	0        Duplex
	ACTUAL OUTPUT ====

		
		SELECT apt_type_code
		FROM
		  (SELECT LHS.apt_number AS apt_number,
		          LHS.n_distinct AS n_distinct,
		          RHS.building_id AS building_id,
		          RHS.apt_type_code AS apt_type_code,
		          RHS.bathroom_count AS bathroom_count,
		          RHS.bedroom_count AS bedroom_count,
		          RHS.room_count AS room_count
		   FROM
		     (SELECT apt_number,
		             COUNT(DISTINCT bathroom_count) AS n_distinct
		      FROM apartments
		      GROUP BY apt_number) AS LHS
		   INNER JOIN apartments AS RHS ON (LHS.n_distinct = RHS.apt_id
		                                       AND LHS.apt_number = RHS.apt_number))
		ORDER BY apt_type_code

	  apt_type_code
	0         Studi
Error while executing solution for instance spider/apartment_rentals/0020 (1466)

The column label 'booking_start_date' is not unique.
Error while checking ground truth in instance spider/apartment_rentals/0020 (1466)
No solution for instance spider/apartment_rentals/0019 (1467)
Wrong output for fuzzied solution in instance spider/apartment_rentals/0034 (1469)
	EXPECTED OUTPUT ====

		SELECT apt_type_code
		FROM Apartments
		GROUP BY apt_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  apt_type_code
	0        Duplex
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT apt_type_code
		FROM
		  (SELECT apt_id,
		          apt_type_code,
		          COUNT() AS n
		   FROM
		     (SELECT apt_id,
		             building_id,
		             apt_type_code,
		             apt_number,
		             apt_id AS bathroom_count,
		             bedroom_count,
		             room_count,
		             apt_id_other,
		             apt_type_code_other,
		             apt_number_other,
		             bedroom_count_other,
		             room_count_other
		      FROM
		        (SELECT LHS.apt_id AS apt_id,
		                LHS.building_id AS building_id,
		                LHS.apt_type_code AS apt_type_code,
		                LHS.apt_number AS apt_number,
		                LHS.bathroom_count AS bathroom_count,
		                LHS.bedroom_count AS bedroom_count,
		                LHS.room_count AS room_count,
		                RHS.apt_id AS apt_id_other,
		                RHS.apt_type_code AS apt_type_code_other,
		                RHS.apt_number AS apt_number_other,
		                RHS.bedroom_count AS bedroom_count_other,
		                RHS.room_count AS room_count_other
		         FROM apartments AS LHS
		         INNER JOIN apartments AS RHS ON (LHS.apt_id = RHS.bathroom_count
		                                             AND LHS.building_id = RHS.building_id)))
		   GROUP BY apt_id,
		            apt_type_code)
		ORDER BY apt_type_code

	  apt_type_code
	0        Studio
Wrong output for base solution in instance spider/apartment_rentals/0024 (1470)
	EXPECTED OUTPUT ====

	  sum_t2_room_count_
	0                 15
	ACTUAL OUTPUT ====

		SELECT sum(T2.room_count)
		FROM Apartment_Facilities AS T1
		JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id
		WHERE T1.facility_code = "Gym"

	   sum(t2.room_count)
	0                  15
Wrong output for ground truth in instance spider/apartment_rentals/0024 (1470)
Error while executing solution for instance spider/apartment_rentals/0021 (1471)

The column label 'booking_start_date' is not unique.
Error while checking ground truth in instance spider/apartment_rentals/0021 (1471)
Error while executing solution for instance spider/apartment_rentals/0014 (1474)

The column label 'booking_start_date' is not unique.
Error while checking ground truth in instance spider/apartment_rentals/0014 (1474)
Wrong output for base solution in instance spider/apartment_rentals/0025 (1476)
	EXPECTED OUTPUT ====

	  sum_t2_room_count_
	0                 29
	ACTUAL OUTPUT ====

		SELECT sum(T2.room_count)
		FROM Apartment_Buildings AS T1
		JOIN Apartments AS T2 ON T1.building_id = T2.building_id
		WHERE T1.building_short_name = "Columbus Square"

	   sum(t2.room_count)
	0                  29
Wrong output for ground truth in instance spider/apartment_rentals/0025 (1476)
No solution for instance spider/apartment_rentals/0010 (1479)
Wrong output for fuzzied solution in instance spider/apartment_rentals/0040 (1480)
	EXPECTED OUTPUT ====

		SELECT T1.apt_number
		FROM Apartments AS T1
		JOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id
		WHERE T2.available_yn = 0 INTERSECT
		  SELECT T1.apt_number
		  FROM Apartments AS T1
		  JOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id WHERE T2.available_yn = 1

	       apt_number
	0   Apt. 411tr5wt
	1         Apt. 94
	2        Apt. 940
	3  Suite 645Gogwp
	4        uite 693
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT apt_number
		FROM
		  (SELECT LHS.apt_id AS apt_id,
		          LHS.apt_booking_id AS apt_booking_id,
		          LHS.status_date AS status_date,
		          LHS.available_yn AS available_yn,
		          RHS.building_id AS building_id,
		          RHS.apt_type_code AS apt_type_code,
		          RHS.apt_number AS apt_number,
		          RHS.bathroom_count AS bathroom_count,
		          RHS.bedroom_count AS bedroom_count,
		          RHS.room_count AS room_count
		   FROM view_unit_status AS LHS
		   LEFT JOIN apartments AS RHS ON (LHS.apt_id = RHS.apt_id))
		WHERE (available_yn != 1)
		ORDER BY apt_number

	       apt_number
	0  83zYsSuite 088
	1        Apt. 411
	2   Apt. 411tr5wt
	3         Apt. 94
	4        Apt. 940
	5       Suite 088
	6  Suite 645Gogwp
	7       Suite 693
	8        uite 693
Wrong output for fuzzied solution in instance spider/party_people/0017 (1484)
	EXPECTED OUTPUT ====

		SELECT T2.party_name,
		       count(*)
		FROM party_events AS T1
		JOIN party AS T2 ON T1.party_id = T2.party_id
		GROUP BY T1.party_id

	                       party_name  count(*)
	0         Convention Peoples Part         5
	1                            8lq2         6
	2             g3eQcJBZI2OozikhCo)         6
	3                                         8
	4                          M9jTn4         8
	5                               3         9
	6                          3PYwyX         9
	7        SzYxyndvG5 Y5L4mOnqfV6x4        10
	8          FBUcJq3QmtuCs26j7n of)        10
	9              3X6F8tPVtPNcJA3aV7        11
	10       Convention Peoples Party        11
	11  dRys6MEG34rP)AAihEAuM7d7BGwk4        11
	12                                       12
	13       Convention Peoples Party        12
	14  Convention Peoples PartyIR)TU        12
	15                         dGM K3        12
	16                              2        13
	17               wwCg6D4ISwr(ig7k        14
	18                         2)DlGa        14
	19        onvention Peoples Party        14
	20                  pAi6qKbh71q64        14
	21                              2        15
	22                              3        15
	23       Convention Peoples Party        15
	24       Convention Peoples Party        15
	25                       NtB Cx9G        15
	26                         vWVLt2        15
	27                              i        25
	ACTUAL OUTPUT ====

		
		SELECT party_name,
		       n AS count___
		FROM
		  (SELECT left_office,
		          party_name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.event_id AS event_id,
		             LHS.event_name AS event_name,
		             LHS.party_id AS party_id,
		             LHS.member_in_charge_id AS member_in_charge_id,
		             RHS.minister AS minister,
		             RHS.took_office AS took_office,
		             RHS.left_office AS left_office,
		             RHS.region_id AS region_id,
		             RHS.party_name AS party_name
		      FROM party_events AS LHS
		      INNER JOIN party AS RHS ON (LHS.party_id = RHS.party_id))
		   GROUP BY left_office,
		            party_name)
		ORDER BY party_name

	                       party_name  count___
	0         Convention Peoples Part         5
	1                            8lq2         6
	2             g3eQcJBZI2OozikhCo)         6
	3                                         8
	4                          M9jTn4         8
	5                               3         9
	6                          3PYwyX         9
	7        SzYxyndvG5 Y5L4mOnqfV6x4        10
	8          FBUcJq3QmtuCs26j7n of)        10
	9              3X6F8tPVtPNcJA3aV7        11
	10  dRys6MEG34rP)AAihEAuM7d7BGwk4        11
	11                                       12
	12  Convention Peoples PartyIR)TU        12
	13                         dGM K3        12
	14               wwCg6D4ISwr(ig7k        14
	15                         2)DlGa        14
	16        onvention Peoples Party        14
	17                  pAi6qKbh71q64        14
	18                              3        15
	19       Convention Peoples Party        15
	20       Convention Peoples Party        15
	21                       NtB Cx9G        15
	22                         vWVLt2        15
	23       Convention Peoples Party        23
	24                              i        25
	25                              2        28
Wrong output for fuzzied solution in instance spider/party_people/0008 (1485)
	EXPECTED OUTPUT ====

		SELECT minister
		FROM party
		ORDER BY left_office DESC
		LIMIT 1

	                       minister
	0  kxG42Ebenezer Ako-Adjei (MP)
	ACTUAL OUTPUT ====

		
		SELECT minister
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM party
		      ORDER BY took_office DESC)
		   LIMIT 1)

	                 minister
	0  Ebenezer Ako-Adjei (MP
Wrong output for fuzzied solution in instance spider/party_people/0003 (1486)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT party_name)
		FROM party

	   count(distinct party_name)
	0                           7
	ACTUAL OUTPUT ====

		
		SELECT n AS count_distinct_party_name_
		FROM
		  (SELECT COUNT() AS n
		   FROM party)
		ORDER BY count_distinct_party_name_

	   count_distinct_party_name_
	0                           9
Wrong output for fuzzied solution in instance spider/party_people/0022 (1487)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM region AS t1
		JOIN party AS t2 ON t1.region_id = t2.region_id
		JOIN party_events AS t3 ON t2.party_id = t3.party_id
		WHERE t1.region_name = "United Kingdom"
		  AND t3.Event_Name = "Annaual Meeting"

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`party_id` AS `party_id`,
		          `LHS`.`minister` AS `minister`,
		          `LHS`.`took_office` AS `took_office`,
		          `LHS`.`left_office` AS `left_office`,
		          `LHS`.`region_id` AS `region_id`,
		          `LHS`.`party_name` AS `party_name`,
		          `LHS`.`event_id` AS `event_id`,
		          `LHS`.`event_name` AS `event_name`,
		          `LHS`.`member_in_charge_id` AS `member_in_charge_id`,
		          `RHS`.`label` AS `label`,
		          `RHS`.`region_name` AS `region_name`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`party_id` AS `party_id`,
		             `LHS`.`minister` AS `minister`,
		             `LHS`.`took_office` AS `took_office`,
		             `LHS`.`left_office` AS `left_office`,
		             `LHS`.`region_id` AS `region_id`,
		             `LHS`.`party_name` AS `party_name`,
		             `RHS`.`event_id` AS `event_id`,
		             `RHS`.`event_name` AS `event_name`,
		             `RHS`.`member_in_charge_id` AS `member_in_charge_id`
		      FROM `party` AS `LHS`
		      INNER JOIN `party_events` AS `RHS` ON (`LHS`.`party_id` = `RHS`.`party_id`)) AS `LHS`
		   CROSS JOIN
		     (SELECT `label`,
		             `region_name`,
		             COUNT() AS `n`
		      FROM `region`
		      GROUP BY `label`,
		               `region_name`) AS `RHS`)
		WHERE (`region_name` = 'United Kingdom'
		       AND `event_name` != 'Annaual Meeting')
		ORDER BY count___

	   count___
	0         1
	1         2
Wrong output for fuzzied solution in instance spider/party_people/0013 (1488)
	EXPECTED OUTPUT ====

		SELECT party_name
		FROM party
		WHERE party_id NOT IN
		    (SELECT party_id
		     FROM Member)

	                      party_name
	0  Convention Peoples PartynpOO(
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT party_name_other AS party_name
		FROM
		  (SELECT LHS.party_id AS party_id,
		          LHS.minister AS minister,
		          LHS.took_office AS took_office,
		          LHS.left_office AS left_office,
		          LHS.region_id AS region_id,
		          LHS.party_name AS party_name,
		          LHS.member_id AS member_id,
		          LHS.member_name AS member_name,
		          LHS.in_office AS in_office,
		          RHS.party_id AS party_id_other,
		          RHS.minister AS minister_other,
		          RHS.took_office AS took_office_other,
		          RHS.left_office AS left_office_other,
		          RHS.region_id AS region_id_other,
		          RHS.party_name AS party_name_other
		   FROM
		     (SELECT party_name AS party_id,
		             minister,
		             took_office,
		             left_office,
		             region_id,
		             party_name,
		             member_id,
		             member_name,
		             in_office
		      FROM
		        (SELECT LHS.party_id AS party_id,
		                LHS.minister AS minister,
		                LHS.took_office AS took_office,
		                LHS.left_office AS left_office,
		                LHS.region_id AS region_id,
		                LHS.party_name AS party_name,
		                RHS.member_id AS member_id,
		                RHS.member_name AS member_name,
		                RHS.in_office AS in_office
		         FROM party AS LHS
		         INNER JOIN member AS RHS ON (LHS.party_name = RHS.party_id))) AS LHS
		   CROSS JOIN party AS RHS)
		WHERE (party_id <= party_id_other
		       AND party_id != party_id_other)
		ORDER BY party_name

	Empty DataFrame
	Columns: [party_name]
	Index: []
No solution for instance spider/party_people/0015 (1492)
Wrong output for fuzzied solution in instance spider/party_people/0005 (1493)
	EXPECTED OUTPUT ====

		SELECT minister
		FROM party
		WHERE took_office > 1961
		  OR took_office < 1959

	                  minister
	0  Ebenezer Ako-Adjei (MP)
	1         Imoru Egala (MP)
	2         Imoru Egala (MP)
	3    Kojo Botsio (MP)dnNc0
	4          ojo Botsio (MP)
	ACTUAL OUTPUT ====

		
		SELECT minister
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM party
		         WHERE (took_office != 1961
		                OR took_office != 1959))
		      ORDER BY party_id)
		   LIMIT 2)

	                minister
	0  Kojo Botsio (MP)dnNc0
	1        ojo Botsio (MP)
No solution for instance spider/party_people/0018 (1495)
Wrong output for fuzzied solution in instance spider/party_people/0020 (1496)
	EXPECTED OUTPUT ====

		SELECT T1.member_name
		FROM member AS T1
		JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id
		GROUP BY T2.member_in_charge_id
		ORDER BY count(*) DESC
		LIMIT 1

	            member_name
	0  FMf14Hon Bob Baldwin
	ACTUAL OUTPUT ====

		
		SELECT member_name
		FROM
		  (SELECT event_id,
		          event_name,
		          party_id,
		          member_in_charge_id,
		          member_name,
		          event_id AS n
		   FROM
		     (SELECT LHS.event_id AS event_id,
		             LHS.event_name AS event_name,
		             LHS.party_id AS party_id,
		             LHS.member_in_charge_id AS member_in_charge_id,
		             RHS.member_name AS member_name
		      FROM party_events AS LHS
		      INNER JOIN
		        (SELECT member_id,
		                member_name,
		                COUNT() AS n
		         FROM member
		         GROUP BY member_id,
		                  member_name) AS RHS ON (LHS.event_id = RHS.n
		                                          AND LHS.member_in_charge_id = RHS.member_id)))
		ORDER BY member_name

	       member_name
	0  Hon Tony Abbott
Wrong output for fuzzied solution in instance spider/party_people/0019 (1497)
	EXPECTED OUTPUT ====

		SELECT T2.party_name
		FROM party_events AS T1
		JOIN party AS T2 ON T1.party_id = T2.party_id
		GROUP BY T1.party_id
		HAVING count(*) >= 2

	                      party_name
	0       Convention Peoples Party
	1  Convention Peoples PartynpOO(
	2   FgPConvention Union PartyhQ0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT party_name
		FROM
		  (SELECT event_id,
		          event_name,
		          party_id,
		          member_in_charge_id,
		          party_name,
		          n,
		          party_id AS region_id
		   FROM
		     (SELECT LHS.event_id AS event_id,
		             LHS.event_name AS event_name,
		             LHS.party_id AS party_id,
		             LHS.member_in_charge_id AS member_in_charge_id,
		             RHS.party_name AS party_name,
		             RHS.n AS n
		      FROM party_events AS LHS
		      INNER JOIN
		        (SELECT party_name,
		                region_id,
		                COUNT() AS n
		         FROM party
		         GROUP BY party_name,
		                  region_id) AS RHS ON (LHS.party_id = RHS.region_id)))
		WHERE (n < 2)
		ORDER BY party_name

	                      party_name
	0        Convention Peoples Part
	1  Convention Peoples PartynpOO(
	2          Convention Union Part
	3   FgPConvention Union PartyhQ0
	4        onvention Peoples Party
No solution for instance spider/party_people/0009 (1501)
Wrong output for fuzzied solution in instance spider/party_people/0011 (1502)
	EXPECTED OUTPUT ====

		SELECT T2.party_name
		FROM Member AS T1
		JOIN party AS T2 ON T1.party_id = T2.party_id
		GROUP BY T1.party_id
		ORDER BY count(*) DESC
		LIMIT 1

	             party_name
	0  VPJSinefine PartyYbX
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT party_name
		FROM
		  (SELECT member_name,
		          party_name,
		          COUNT() AS n
		   FROM
		     (SELECT party_name AS party_id,
		             minister,
		             took_office,
		             left_office,
		             region_id,
		             party_name,
		             member_id,
		             member_name,
		             in_office
		      FROM
		        (SELECT LHS.party_id AS party_id,
		                LHS.minister AS minister,
		                LHS.took_office AS took_office,
		                LHS.left_office AS left_office,
		                LHS.region_id AS region_id,
		                LHS.party_name AS party_name,
		                RHS.member_id AS member_id,
		                RHS.member_name AS member_name,
		                RHS.in_office AS in_office
		         FROM party AS LHS
		         INNER JOIN member AS RHS ON (LHS.party_name = RHS.party_id)))
		   GROUP BY member_name,
		            party_name)
		ORDER BY party_name

	Empty DataFrame
	Columns: [party_name]
	Index: []
No solution for instance spider/party_people/0010 (1503)
Wrong output for fuzzied solution in instance spider/county_public_safety/0008 (1505)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM county_public_safety
		ORDER BY Population DESC
		LIMIT 1

	              name
	0  Central Saanich
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM county_public_safety
		      ORDER BY residents_per_officer DESC)
		   LIMIT 1)

	         name
	0  Abbotsford
No solution for instance spider/county_public_safety/0013 (1507)
No solution for instance spider/county_public_safety/0012 (1510)
Wrong output for fuzzied solution in instance spider/county_public_safety/0016 (1513)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM county_public_safety
		GROUP BY LOCATION
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  location
	0     East
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT LOCATION
		FROM
		  (SELECT LHS.county_id AS county_id,
		          LHS.name AS name,
		          LHS.population AS population,
		          LHS.police_officers AS police_officers,
		          LHS.residents_per_officer AS residents_per_officer,
		          LHS.case_burden AS case_burden,
		          LHS.crime_rate AS crime_rate,
		          LHS.police_force AS police_force,
		          LHS.location AS LOCATION,
		          RHS.case_burden AS case_burden_other,
		          RHS.police_force AS police_force_other
		   FROM county_public_safety AS LHS
		   INNER JOIN
		     (SELECT case_burden,
		             police_force,
		             COUNT() AS n
		      FROM county_public_safety
		      GROUP BY case_burden,
		               police_force) AS RHS ON (LHS.county_id = RHS.n))
		ORDER BY LOCATION

	    location
	0  EastBIQ)G
Wrong output for fuzzied solution in instance spider/county_public_safety/0018 (1514)
	EXPECTED OUTPUT ====

		SELECT Police_force
		FROM county_public_safety
		WHERE LOCATION = "East" INTERSECT
		  SELECT Police_force
		  FROM county_public_safety WHERE LOCATION = "West"

	  police_force
	0         RCMP
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `police_force`
		FROM `county_public_safety`
		WHERE (`location` != 'East'
		       AND `location` = 'West')
		ORDER BY police_force

	                   police_force
	0  Abbotsford Police Department
	1                 Mlc)l2SdYqXSW
	2      MvwKdOdQPNWlzO69XpczBzPi
	3                          RCMP
Wrong output for fuzzied solution in instance spider/county_public_safety/0019 (1516)
	EXPECTED OUTPUT ====

		SELECT name
		FROM city
		WHERE county_id IN
		    (SELECT county_id
		     FROM county_public_safety
		     WHERE Crime_rate < 100)

	             name
	0         546nya5
	1   6MHBayamón7FQ
	2    9ik4UBayamón
	3           Arroy
	4          Arroyo
	5          Arroyo
	6          Arroyo
	7    BayamónCDeBJ
	8    Bayamóna2Nf2
	9          Huf92 
	10        o2ZYS8V
	11    q X(zdrkAzE
	ACTUAL OUTPUT ====

		
		SELECT name_other AS name
		FROM
		  (SELECT LHS.county_id AS county_id,
		          LHS.name AS name,
		          LHS.population AS population,
		          LHS.police_officers AS police_officers,
		          LHS.residents_per_officer AS residents_per_officer,
		          LHS.case_burden AS case_burden,
		          LHS.crime_rate AS crime_rate,
		          LHS.police_force AS police_force,
		          LHS.location AS LOCATION,
		          RHS.city_id AS city_id,
		          RHS.name AS name_other,
		          RHS.white AS white,
		          RHS.black AS black,
		          RHS.amerindian AS amerindian,
		          RHS.asian AS asian,
		          RHS.multiracial AS multiracial,
		          RHS.hispanic AS hispanic
		   FROM
		     (SELECT *
		      FROM county_public_safety
		      WHERE (county_id > 100
		             OR crime_rate <= 100.0)) AS LHS
		   INNER JOIN city AS RHS ON (LHS.county_id = RHS.county_id))
		ORDER BY name

	             name
	0     3ajqdg59XT0
	1         546nya5
	2   6MHBayamón7FQ
	3    9ik4UBayamón
	4           Arroy
	5          Arroyo
	6          Arroyo
	7          Arroyo
	8          Arroyo
	9     Arroyo(2iOT
	10        Bayamón
	11        Bayamón
	12        Bayamón
	13   BayamónCDeBJ
	14   Bayamóna2Nf2
	15         Huf92 
	16   UmSSwBayamón
	17         ayamón
	18   gd)jEBayamón
	19        o2ZYS8V
	20    q X(zdrkAzE
	21         zQWI5t
Wrong output for fuzzied solution in instance spider/county_public_safety/0007 (1517)
	EXPECTED OUTPUT ====

		SELECT Hispanic
		FROM city
		WHERE Black > 10

	   hispanic
	0     99.01
	1     99.39
	2     99.39
	ACTUAL OUTPUT ====

		
		SELECT hispanic
		FROM city
		WHERE (black >= 10.0)
		ORDER BY hispanic

	   hispanic
	0     99.01
	1     99.39
	2     99.39
	3     99.49
	4     99.50
	5     99.51
Wrong output for fuzzied solution in instance spider/county_public_safety/0014 (1519)
	EXPECTED OUTPUT ====

		SELECT T2.Crime_rate
		FROM city AS T1
		JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID
		WHERE T1.White > 90

	Empty DataFrame
	Columns: [crime_rate]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT crime_rate
		FROM
		  (SELECT LHS.county_id AS county_id,
		          LHS.name AS name,
		          LHS.population AS population,
		          LHS.police_officers AS police_officers,
		          LHS.residents_per_officer AS residents_per_officer,
		          LHS.case_burden AS case_burden,
		          LHS.crime_rate AS crime_rate,
		          LHS.police_force AS police_force,
		          LHS.location AS LOCATION,
		          RHS.city_id AS city_id,
		          RHS.name AS name_other,
		          RHS.white AS white,
		          RHS.black AS black,
		          RHS.amerindian AS amerindian,
		          RHS.asian AS asian,
		          RHS.multiracial AS multiracial,
		          RHS.hispanic AS hispanic
		   FROM county_public_safety AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM city
		      WHERE (white >= 90.0)) AS RHS ON (LHS.county_id = RHS.county_id))
		ORDER BY crime_rate

	   crime_rate
	0      118.01
	1      177.99
Error while executing solution for instance spider/county_public_safety/0010 (1522)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/county_public_safety/0010 (1522)
No solution for instance spider/device/0013 (1527)
Wrong output for fuzzied solution in instance spider/device/0012 (1530)
	EXPECTED OUTPUT ====

		SELECT T2.Shop_Name
		FROM stock AS T1
		JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID
		GROUP BY T1.Shop_ID
		ORDER BY COUNT(*) DESC
		LIMIT 1

	      shop_name
	0  Naval's shop
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT shop_name
		FROM
		  (SELECT LHS.shop_id AS shop_id,
		          LHS.shop_name AS shop_name,
		          LHS.location AS LOCATION,
		          LHS.open_date AS open_date,
		          LHS.open_year AS open_year,
		          RHS.device_id AS device_id,
		          RHS.shop_id AS shop_id_other
		   FROM shop AS LHS
		   INNER JOIN
		     (SELECT device_id,
		             shop_id,
		             COUNT() AS n
		      FROM stock
		      GROUP BY device_id,
		               shop_id) AS RHS ON (LHS.shop_id = RHS.n))
		ORDER BY shop_name

	Empty DataFrame
	Columns: [shop_name]
	Index: []
Wrong output for fuzzied solution in instance spider/device/0016 (1533)
	EXPECTED OUTPUT ====

		SELECT Software_Platform
		FROM device
		GROUP BY Software_Platform
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  software_platform
	0           Android
	ACTUAL OUTPUT ====

		
		SELECT software_platform
		FROM
		  (SELECT package_version,
		          software_platform,
		          COUNT() AS n
		   FROM device
		   GROUP BY package_version,
		            software_platform)
		WHERE (n != 1)
		ORDER BY software_platform

	Empty DataFrame
	Columns: [software_platform]
	Index: []
Wrong output for fuzzied solution in instance spider/device/0020 (1534)
	EXPECTED OUTPUT ====

		SELECT T2.Carrier
		FROM stock AS T1
		JOIN device AS T2 ON T1.Device_ID = T2.Device_ID
		GROUP BY T1.Device_ID
		HAVING COUNT(*) > 1

	                carrier
	0   683Bell MobilityZke
	1          Bell Mobilit
	2         Bell Mobility
	3         Bell Mobility
	4         Bell Mobility
	5         Bell Mobility
	6         Bell Mobility
	7    Bell MobilitySFAgW
	8    Bell MobilityWBR5J
	9    Bell MobilityrpAQr
	10  VefBell Mobilitypki
	11          b OFEz643Zb
	12         ell Mobility
	13  kS2Bell MobilityvSn
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT carrier
		FROM
		  (SELECT carrier,
		          shop_id,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.device_id AS device_id,
		             LHS.device AS device,
		             LHS.carrier AS carrier,
		             LHS.package_version AS package_version,
		             LHS.applications AS applications,
		             LHS.software_platform AS software_platform,
		             RHS.shop_id AS shop_id,
		             RHS.quantity AS quantity
		      FROM device AS LHS
		      INNER JOIN stock AS RHS ON (LHS.device_id = RHS.device_id))
		   GROUP BY carrier,
		            shop_id)
		WHERE (n >= 1)
		ORDER BY carrier

	               carrier
	0  683Bell MobilityZke
	1         Bell Mobilit
	2        Bell Mobility
	3   Bell MobilitySFAgW
	4   Bell MobilityWBR5J
	5   Bell MobilityrpAQr
	6  VefBell Mobilitypki
	7          b OFEz643Zb
	8         ell Mobility
	9  kS2Bell MobilityvSn
Wrong output for fuzzied solution in instance spider/device/0011 (1540)
	EXPECTED OUTPUT ====

		SELECT T2.Shop_Name
		FROM stock AS T1
		JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID
		GROUP BY T1.Shop_ID
		HAVING COUNT(*) > 1

	            shop_name
	0         Dinas Devic
	1        Dinas Device
	2        Dinas Device
	3        Dinas Device
	4        Dinas Device
	5   Dinas DeviceMO0MO
	6        Gelli repair
	7        Gelli repair
	8        Naval's shop
	9  lGPNaval's shopkMe
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT shop_name
		FROM
		  (SELECT LHS.shop_id AS shop_id,
		          LHS.shop_name AS shop_name,
		          LHS.location AS LOCATION,
		          LHS.open_date AS open_date,
		          LHS.open_year AS open_year,
		          LHS.device_id AS device_id,
		          LHS.quantity AS quantity,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.shop_id AS shop_id,
		             LHS.shop_name AS shop_name,
		             LHS.location AS LOCATION,
		             LHS.open_date AS open_date,
		             LHS.open_year AS open_year,
		             RHS.device_id AS device_id,
		             RHS.quantity AS quantity
		      FROM shop AS LHS
		      INNER JOIN stock AS RHS ON (LHS.shop_id = RHS.shop_id)) AS LHS
		   INNER JOIN
		     (SELECT shop_id,
		             COUNT() AS n
		      FROM stock
		      GROUP BY shop_id) AS RHS ON (LHS.shop_id = RHS.shop_id))
		WHERE (n != 1)
		ORDER BY shop_name

	            shop_name
	0         Dinas Devic
	1        Dinas Device
	2   Dinas DeviceMO0MO
	3        Gelli repair
	4        Naval's shop
	5  lGPNaval's shopkMe
No solution for instance spider/university_basketball/0017 (1543)
No solution for instance spider/university_basketball/0008 (1544)
Error while checking ground truth in instance spider/university_basketball/0022 (1546)

cannot safely cast non-equivalent float64 to int32
No solution for instance spider/university_basketball/0006 (1548)
Wrong output for fuzzied solution in instance spider/university_basketball/0004 (1549)
	EXPECTED OUTPUT ====

		SELECT founded
		FROM university
		WHERE affiliation != 'Public'
		ORDER BY founded DESC
		LIMIT 1

	        founded
	0  7.336614e+09
	ACTUAL OUTPUT ====

		
		SELECT `founded`
		FROM `university`
		WHERE (`affiliation` != 'Public')
		ORDER BY founded

	         founded
	0  -2.953829e+09
	1   1.891980e+03
	2   1.892000e+03
	3   1.956980e+03
	4   1.957000e+03
	5   1.957000e+03
	6   1.957010e+03
	7   1.957020e+03
	8   1.957020e+03
	9   1.244229e+09
	10  7.336614e+09
Wrong output for fuzzied solution in instance spider/university_basketball/0015 (1551)
	EXPECTED OUTPUT ====

		SELECT school
		FROM university
		WHERE founded > 1850
		  OR affiliation = 'Public'

	                       school
	0  University of Rhode Island
	1  University of Rhode Island
	ACTUAL OUTPUT ====

		
		SELECT `school`
		FROM `university`
		WHERE (`affiliation` = 'Public'
		       OR founded >= 1850.0)
		ORDER BY school

	                       school
	0  University of Rhode Island
	1  University of Rhode Island
	2  University of Rhode Island
No solution for instance spider/university_basketball/0005 (1552)
No solution for instance spider/university_basketball/0018 (1554)
Wrong output for fuzzied solution in instance spider/university_basketball/0020 (1555)
	EXPECTED OUTPUT ====

		SELECT sum(Enrollment),
		       affiliation
		FROM university
		WHERE founded > 1850
		GROUP BY affiliation

	    sum(enrollment)             affiliation
	0      6.533742e+08        3HhIZ0OaD9weLGEy
	1      6.427676e+09        Ibfk4mgpseLMmamY
	2      2.100000e+03         M7H0c8B0Xb3JOpm
	3      2.099980e+03   MwCVvVNEJCpxZKm4KlXoj
	4      2.099980e+03              OQcC5C4jBs
	5      5.686800e+04        Private/Methodis
	6      2.119498e+04       Private/Methodist
	7      5.686802e+04  Private/Methodistu2Epx
	8      4.309198e+04                   Publi
	9      1.835337e+10                  Public
	10     1.909499e+04             Public4 d3y
	11     2.100000e+03             Publicjf5F5
	12     5.686800e+04  QZYzjFYz3bgg p9v5(Q6Cp
	13     8.474952e+09             ZXFwhPublic
	14     6.533742e+08             ahuO)Pgqj6F
	15     1.909498e+04           bIIjl)lugUBcW
	16     2.100010e+03            cq1Public0 j
	17     2.100000e+03            pmMPublict(7
	18     2.099980e+03        rivate/Methodist
	19     4.309202e+04                   ublic
	20     5.686799e+04            v7aPubliczSt
	21     8.474952e+09             vU(nDPublic
	ACTUAL OUTPUT ====

		
		SELECT sumenrollment AS sum_enrollment_,
		       affiliation
		FROM
		  (SELECT affiliation,
		          SUM(enrollment) AS sumenrollment
		   FROM
		     (SELECT *
		      FROM university
		      WHERE (founded > 1850.0
		             AND enrollment >= founded))
		   GROUP BY affiliation)
		ORDER BY sum_enrollment_

	    sum_enrollment_             affiliation
	0      6.427676e+09        Ibfk4mgpseLMmamY
	1      2.100000e+03         M7H0c8B0Xb3JOpm
	2      2.099980e+03   MwCVvVNEJCpxZKm4KlXoj
	3      2.099980e+03              OQcC5C4jBs
	4      2.119498e+04       Private/Methodist
	5      5.686802e+04  Private/Methodistu2Epx
	6      1.835334e+10                  Public
	7      2.100000e+03             Publicjf5F5
	8      5.686800e+04  QZYzjFYz3bgg p9v5(Q6Cp
	9      8.474952e+09             ZXFwhPublic
	10     6.533742e+08             ahuO)Pgqj6F
	11     1.909498e+04           bIIjl)lugUBcW
	12     2.100000e+03            pmMPublict(7
	13     2.099980e+03        rivate/Methodist
	14     4.309202e+04                   ublic
	15     5.686799e+04            v7aPubliczSt
	16     8.474952e+09             vU(nDPublic
Error while executing solution for instance spider/university_basketball/0019 (1556)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT enrollment) OVER () AS count___,
                                                affiliation
FROM university
WHERE (enrollment >= 20000.0)
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/university_basketball/0007 (1557)
No solution for instance spider/university_basketball/0023 (1559)
No solution for instance spider/university_basketball/0014 (1561)
No solution for instance spider/university_basketball/0009 (1562)
Wrong output for fuzzied solution in instance spider/university_basketball/0011 (1563)
	EXPECTED OUTPUT ====

		SELECT enrollment,
		       primary_conference
		FROM university
		ORDER BY founded
		LIMIT 1

	   enrollment                    primary_conference
	0    19094.98  American Athletic Conference ( D-I )
	ACTUAL OUTPUT ====

		
		SELECT enrollment,
		       primary_conference
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM university
		      ORDER BY school_id)
		   LIMIT 1)

	   enrollment                     primary_conference
	0    19095.01  Colonial Athletic Association ( D-I )
Wrong output for fuzzied solution in instance spider/university_basketball/0010 (1564)
	EXPECTED OUTPUT ====

		SELECT avg(enrollment)
		FROM university
		WHERE founded < 1850

	  avg(enrollment)
	0            None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(enrollment) OVER () AS avg_enrollment_
		FROM university
		WHERE (founded <= 1850.0
		       AND enrollment > 1850.0)
		ORDER BY avg_enrollment_

	Empty DataFrame
	Columns: [avg_enrollment_]
	Index: []
Wrong output for base solution in instance spider/wine_1/0033 (1565)
	EXPECTED OUTPUT ====

	             county
	0           Alameda
	1            Amador
	2            Amador
	3         Calaveras
	4              Lake
	5              Lake
	6         Mendocino
	7         Mendocino
	8          Monterey
	9          Monterey
	10             Napa
	11             Napa
	12             Napa
	13             Napa
	14             Napa
	15             Napa
	16       San Benito
	17      San Joaquin
	18  San Luis Obispo
	19  San Luis Obispo
	20  San Luis Obispo
	21    Santa Barbara
	22           Solano
	23           Sonoma
	24           Sonoma
	25           Sonoma
	26             Yolo
	27              NaN
	28              NaN
	29              NaN
	30              NaN
	31              NaN
	32              NaN
	33              NaN
	ACTUAL OUTPUT ====

		SELECT T1.County
		FROM APPELLATIONS AS T1
		JOIN WINE AS T2 ON T1.Appelation = T2.Appelation
		GROUP BY T2.Appelation
		HAVING count(*) <= 3

	             county
	0           Alameda
	1            Amador
	2            Amador
	3         Calaveras
	4              Lake
	5              Lake
	6         Mendocino
	7         Mendocino
	8          Monterey
	9          Monterey
	10              N/A
	11              N/A
	12              N/A
	13              N/A
	14              N/A
	15              N/A
	16              N/A
	17             Napa
	18             Napa
	19             Napa
	20             Napa
	21             Napa
	22             Napa
	23       San Benito
	24      San Joaquin
	25  San Luis Obispo
	26  San Luis Obispo
	27  San Luis Obispo
	28    Santa Barbara
	29           Solano
	30           Sonoma
	31           Sonoma
	32           Sonoma
	33             Yolo
Wrong output for ground truth in instance spider/wine_1/0033 (1565)
No solution for instance spider/wine_1/0036 (1568)
Wrong output for fuzzied solution in instance spider/wine_1/0039 (1571)
	EXPECTED OUTPUT ====

		SELECT Appelation
		FROM WINE
		WHERE YEAR > 2008
		EXCEPT
		SELECT Appelation
		FROM APPELLATIONS
		WHERE Area = "Central Coast"

	         appelation
	0  Edna ValleyMFQml
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `appelation`
		FROM
		  (SELECT `LHS`.`no` AS `no`,
		          `LHS`.`appelation` AS `appelation`,
		          `LHS`.`county` AS `county`,
		          `LHS`.`state` AS `state`,
		          `LHS`.`area` AS `area`,
		          `LHS`.`isava` AS `isava`,
		          `RHS`.`no` AS `no_other`,
		          `RHS`.`grape` AS `grape`,
		          `RHS`.`winery` AS `winery`,
		          `RHS`.`name` AS `name`,
		          `RHS`.`year` AS `year`,
		          `RHS`.`price` AS `price`,
		          `RHS`.`score` AS `score`,
		          `RHS`.`cases` AS `cases`,
		          `RHS`.`drink` AS `drink`
		   FROM `appellations` AS `LHS`
		   INNER JOIN `wine` AS `RHS` ON (`LHS`.`appelation` = `RHS`.`appelation`
		                                     AND `LHS`.`state` = `RHS`.`state`))
		WHERE (`area` != 'Central Coast'
		       AND YEAR > 2008)
		ORDER BY appelation

	Empty DataFrame
	Columns: [appelation]
	Index: []
No solution for instance spider/wine_1/0030 (1576)
No solution for instance spider/wine_1/0013 (1577)
Wrong output for base solution in instance spider/wine_1/0006 (1578)
	EXPECTED OUTPUT ====

	                    area           county
	0             California              NaN
	1          Central Coast         Monterey
	2          Central Coast         Monterey
	3          Central Coast         Monterey
	4          Central Coast       San Benito
	5          Central Coast  San Luis Obispo
	6          Central Coast  San Luis Obispo
	7          Central Coast  San Luis Obispo
	8          Central Coast  San Luis Obispo
	9          Central Coast    Santa Barbara
	10         Central Coast    Santa Barbara
	11         Central Coast    Santa Barbara
	12         Central Coast    Santa Barbara
	13         Central Coast    Santa Barbara
	14         Central Coast              NaN
	15        Central Valley      San Joaquin
	16        Central Valley             Yolo
	17           North Coast             Lake
	18           North Coast             Lake
	19           North Coast             Lake
	20           North Coast        Mendocino
	21           North Coast        Mendocino
	22           North Coast             Napa
	23           North Coast             Napa
	24           North Coast             Napa
	25           North Coast             Napa
	26           North Coast             Napa
	27           North Coast             Napa
	28           North Coast             Napa
	29           North Coast             Napa
	30           North Coast             Napa
	31           North Coast             Napa
	32           North Coast             Napa
	33           North Coast           Solano
	34           North Coast           Sonoma
	35           North Coast           Sonoma
	36           North Coast           Sonoma
	37           North Coast           Sonoma
	38           North Coast           Sonoma
	39           North Coast           Sonoma
	40           North Coast           Sonoma
	41           North Coast           Sonoma
	42           North Coast           Sonoma
	43           North Coast           Sonoma
	44           North Coast           Sonoma
	45           North Coast              NaN
	46           North Coast              NaN
	47           North Coast              NaN
	48  Santa Cruz Mountains          Alameda
	49  Santa Cruz Mountains     Contra Costa
	50  Santa Cruz Mountains              NaN
	51      Sierra Foothills           Amador
	52      Sierra Foothills           Amador
	53      Sierra Foothills           Amador
	54      Sierra Foothills        Calaveras
	55      Sierra Foothills              NaN
	56                   NaN              NaN
	ACTUAL OUTPUT ====

		SELECT Area,
		       County
		FROM APPELLATIONS

	                    area           county
	0             California              N/A
	1          Central Coast         Monterey
	2          Central Coast         Monterey
	3          Central Coast         Monterey
	4          Central Coast              N/A
	5          Central Coast       San Benito
	6          Central Coast  San Luis Obispo
	7          Central Coast  San Luis Obispo
	8          Central Coast  San Luis Obispo
	9          Central Coast  San Luis Obispo
	10         Central Coast    Santa Barbara
	11         Central Coast    Santa Barbara
	12         Central Coast    Santa Barbara
	13         Central Coast    Santa Barbara
	14         Central Coast    Santa Barbara
	15        Central Valley      San Joaquin
	16        Central Valley             Yolo
	17                   N/A              N/A
	18           North Coast             Lake
	19           North Coast             Lake
	20           North Coast             Lake
	21           North Coast        Mendocino
	22           North Coast        Mendocino
	23           North Coast              N/A
	24           North Coast              N/A
	25           North Coast              N/A
	26           North Coast             Napa
	27           North Coast             Napa
	28           North Coast             Napa
	29           North Coast             Napa
	30           North Coast             Napa
	31           North Coast             Napa
	32           North Coast             Napa
	33           North Coast             Napa
	34           North Coast             Napa
	35           North Coast             Napa
	36           North Coast             Napa
	37           North Coast           Solano
	38           North Coast           Sonoma
	39           North Coast           Sonoma
	40           North Coast           Sonoma
	41           North Coast           Sonoma
	42           North Coast           Sonoma
	43           North Coast           Sonoma
	44           North Coast           Sonoma
	45           North Coast           Sonoma
	46           North Coast           Sonoma
	47           North Coast           Sonoma
	48           North Coast           Sonoma
	49  Santa Cruz Mountains          Alameda
	50  Santa Cruz Mountains     Contra Costa
	51  Santa Cruz Mountains              N/A
	52      Sierra Foothills           Amador
	53      Sierra Foothills           Amador
	54      Sierra Foothills           Amador
	55      Sierra Foothills        Calaveras
	56      Sierra Foothills              N/A
Wrong output for ground truth in instance spider/wine_1/0006 (1578)
Wrong output for fuzzied solution in instance spider/wine_1/0012 (1580)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM APPELLATIONS
		WHERE County = "Napa"

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `state`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `appellations`
		      WHERE (`county` = 'Napa'))
		   GROUP BY state)
		ORDER BY count___

	   count___
	0         1
	1         1
Wrong output for fuzzied solution in instance spider/wine_1/0026 (1581)
	EXPECTED OUTPUT ====

		SELECT DISTINCT Name
		FROM WINE
		WHERE YEAR < 2000
		  OR YEAR > 2010

	                                        name
	0                  RM8Stagecoach Vineyard)EB
	1       Rocky Terrace Los Chamizal Vineyards
	2                        Stagecoach Vineyard
	3                                   Zinfande
	4                                  Zinfandel
	5  nv)gWRocky Terrace Los Chamizal Vineyards
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM wine
		WHERE (YEAR != 2000
		       AND YEAR >= 2010)
		ORDER BY name

	                                         name
	0                              1BM(hZinfandel
	1   8KAqCRocky Terrace Los Chamizal Vineyards
	2        Rocky Terrace Los Chamizal Vineyards
	3                         Stagecoach Vineyard
	4                         Stagecoach Vineyard
	5                    Stagecoach VineyardFqpJb
	6                                    Zinfande
	7                                    Zinfande
	8                                   Zinfandel
	9                                   Zinfandel
	10                                  Zinfandel
No solution for instance spider/wine_1/0015 (1582)
Wrong output for fuzzied solution in instance spider/wine_1/0016 (1584)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.Grape
		FROM GRAPES AS T1
		JOIN WINE AS T2 ON T1.Grape = T2.Grape
		WHERE T1.Color = "White"
		  AND T2.score > 90

	             grape
	0      Petite Sira
	1        Sangioves
	2  x1EIuSangiovese
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `grape`
		FROM
		  (SELECT `LHS`.`no` AS `no`,
		          `LHS`.`grape` AS `grape`,
		          `LHS`.`winery` AS `winery`,
		          `LHS`.`appelation` AS `appelation`,
		          `LHS`.`state` AS `state`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`year` AS `year`,
		          `LHS`.`price` AS `price`,
		          `LHS`.`score` AS `score`,
		          `LHS`.`cases` AS `cases`,
		          `LHS`.`drink` AS `drink`,
		          `RHS`.`id` AS `id`,
		          `RHS`.`color` AS `color`
		   FROM `wine` AS `LHS`
		   INNER JOIN `grapes` AS `RHS` ON (`LHS`.`grape` = `RHS`.`grape`))
		WHERE (`color` = 'White'
		       AND score != 90)
		ORDER BY grape

	             grape
	0      Petite Sira
	1        Sangioves
	2      etite Sirah
	3  x1EIuSangiovese
Wrong output for fuzzied solution in instance spider/wine_1/0018 (1586)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM APPELLATIONS AS T1
		JOIN WINE AS T2 ON T1.Appelation = T2.Appelation
		WHERE T1.County = "Monterey"
		  AND T2.price < 50

	                    name
	0             6FiNuhWsqT
	1        Carols Vineyard
	2  VRyCarols VineyardfIo
	3         ZinfandelHP2Hy
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`no` AS `no`,
		          `LHS`.`grape` AS `grape`,
		          `LHS`.`winery` AS `winery`,
		          `LHS`.`appelation` AS `appelation`,
		          `LHS`.`state` AS `state`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`year` AS `year`,
		          `LHS`.`price` AS `price`,
		          `LHS`.`score` AS `score`,
		          `LHS`.`cases` AS `cases`,
		          `LHS`.`drink` AS `drink`,
		          `RHS`.`no` AS `no_other`,
		          `RHS`.`county` AS `county`,
		          `RHS`.`area` AS `area`,
		          `RHS`.`isava` AS `isava`
		   FROM `wine` AS `LHS`
		   INNER JOIN `appellations` AS `RHS` ON (`LHS`.`appelation` = `RHS`.`appelation`
		                                             AND `LHS`.`state` = `RHS`.`state`))
		WHERE (`county` = 'Monterey'
		       AND price < 50)
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
No solution for instance spider/wine_1/0041 (1587)
No solution for instance spider/wine_1/0035 (1588)
Wrong output for base solution in instance spider/wine_1/0020 (1589)
	EXPECTED OUTPUT ====

	   avg_price_  year
	0   30.953846  2009
	1   32.000000  2066
	2   39.707692  2008
	3   49.418478  2007
	4   52.821429  2005
	5   52.941176  2006
	6   60.714286  2004
	ACTUAL OUTPUT ====

		SELECT avg(Price),
		       YEAR
		FROM WINE
		GROUP BY YEAR

	   avg(price)  year
	0   60.714286  2004
	1   52.821429  2005
	2   52.941176  2006
	3   49.418478  2007
	4   39.707692  2008
	5   30.953846  2009
	6   32.000000  2066
Wrong output for ground truth in instance spider/wine_1/0020 (1589)
Wrong output for fuzzied solution in instance spider/wine_1/0019 (1590)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       Grape
		FROM WINE
		GROUP BY Grape

	   count(*)        grape
	0         6  MalbecfyE0u
	1         8        Syrah
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       grape
		FROM
		  (SELECT grape,
		          state,
		          COUNT() AS n
		   FROM wine
		   GROUP BY grape,
		            state)
		ORDER BY count___

	   count___        grape
	0         1  MalbecfyE0u
	1         1  MalbecfyE0u
	2         1  MalbecfyE0u
	3         1        Syrah
	4         1        Syrah
	5         3  MalbecfyE0u
	6         6        Syrah
No solution for instance spider/wine_1/0034 (1592)
Wrong output for fuzzied solution in instance spider/wine_1/0024 (1593)
	EXPECTED OUTPUT ====

		SELECT T1.Area
		FROM APPELLATIONS AS T1
		JOIN WINE AS T2 ON T1.Appelation = T2.Appelation
		GROUP BY T2.Appelation
		HAVING T2.year < 2010
		ORDER BY count(*) DESC
		LIMIT 1

	          area
	0  North Coast
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT area
		FROM
		  (SELECT LHS.appelation AS appelation,
		          LHS.area AS area,
		          LHS.n AS n,
		          RHS.no AS NO,
		          RHS.grape AS grape,
		          RHS.winery AS winery,
		          RHS.appelation AS appelation_other,
		          RHS.state AS state,
		          RHS.year AS YEAR,
		          RHS.price AS price,
		          RHS.score AS score,
		          RHS.cases AS cases,
		          RHS.drink AS drink
		   FROM
		     (SELECT *
		      FROM
		        (SELECT appelation,
		                area,
		                COUNT() AS n
		         FROM appellations
		         GROUP BY appelation,
		                  area)
		      WHERE (n != 2010
		             OR n > 1)) AS LHS
		   INNER JOIN wine AS RHS ON (LHS.appelation = RHS.name))
		ORDER BY area

	Empty DataFrame
	Columns: [area]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for fuzzied solution in instance spider/wine_1/0001 (1596)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM WINE
		ORDER BY Score
		LIMIT 1

	        name
	0  Zinfandel
	ACTUAL OUTPUT ====

		
		SELECT grape AS name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM wine
		      ORDER BY NO)
		   LIMIT 1)

	    name
	0  Syrah
Wrong output for fuzzied solution in instance spider/wine_1/0025 (1599)
	EXPECTED OUTPUT ====

		SELECT T1.Color
		FROM GRAPES AS T1
		JOIN WINE AS T2 ON T1.Grape = T2.Grape
		GROUP BY T2.Grape
		ORDER BY AVG(Price) DESC
		LIMIT 1

	      color
	0  LE9rnRed
	ACTUAL OUTPUT ====

		
		SELECT color
		FROM
		  (SELECT appelation,
		          color,
		          AVG(price) AS meanprice
		   FROM
		     (SELECT id,
		             grape,
		             color,
		             winery,
		             appelation,
		             state,
		             name,
		             YEAR,
		             price,
		             score,
		             cases,
		             drink,
		             id AS NO
		      FROM
		        (SELECT LHS.id AS id,
		                LHS.grape AS grape,
		                LHS.color AS color,
		                RHS.winery AS winery,
		                RHS.appelation AS appelation,
		                RHS.state AS state,
		                RHS.name AS name,
		                RHS.year AS YEAR,
		                RHS.price AS price,
		                RHS.score AS score,
		                RHS.cases AS cases,
		                RHS.drink AS drink
		         FROM grapes AS LHS
		         INNER JOIN wine AS RHS ON (LHS.id = RHS.no
		                                       AND LHS.grape = RHS.grape)))
		   GROUP BY appelation,
		            color)
		ORDER BY color

	Empty DataFrame
	Columns: [color]
	Index: []
Wrong output for fuzzied solution in instance spider/wine_1/0011 (1600)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM WINE
		WHERE Winery = "Robert Biale"

	   count(*)
	0         3
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `grape`,
		          `year`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `wine`
		      WHERE (`winery` = 'Robert Biale'))
		   GROUP BY grape,
		            YEAR)
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
No solution for instance spider/wine_1/0029 (1601)
Wrong output for fuzzied solution in instance spider/wine_1/0010 (1602)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.Name
		FROM APPELLATIONs AS T1
		JOIN WINE AS T2 ON T1.Appelation = T2.Appelation
		WHERE T1.Area = "North Coast"

	                                   name
	0    e3Beckstoffer To Kalon VineyarduCC
	1               4yazKCabernet Sauvignon
	2                         8bgYLOld Vine
	3              8kFCabernet SauvignonF6j
	4         Beckstoffer To Kalon Vineyard
	5    Beckstoffer To Kalon VineyardXNFVs
	6                     Cabernet Sauvigno
	7                    Cabernet Sauvignon
	8               Cabernet Sauvignon7hQ1S
	9               Cabernet SauvignonMfX1r
	10             GyICabernet Sauvignonx)z
	11                              Old Vin
	12                             Old Vine
	13                        Old VineiegzS
	14                      Sauvignon Blanc
	15                 Sauvignon BlancZG0uq
	16                    abernet Sauvignon
	17              d)KoPCabernet Sauvignon
	18                 j4xXHSauvignon Blanc
	19             oUFCabernet Sauvignonph8
	20                       tkKOld VineKJ(
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `name`
		FROM
		  (SELECT `LHS`.`no` AS `no`,
		          `LHS`.`appelation` AS `appelation`,
		          `LHS`.`county` AS `county`,
		          `LHS`.`state` AS `state`,
		          `LHS`.`area` AS `area`,
		          `LHS`.`isava` AS `isava`,
		          `RHS`.`no` AS `no_other`,
		          `RHS`.`grape` AS `grape`,
		          `RHS`.`winery` AS `winery`,
		          `RHS`.`name` AS `name`,
		          `RHS`.`year` AS `year`,
		          `RHS`.`price` AS `price`,
		          `RHS`.`score` AS `score`,
		          `RHS`.`cases` AS `cases`,
		          `RHS`.`drink` AS `drink`
		   FROM
		     (SELECT *
		      FROM `appellations`
		      WHERE (`area` = 'North Coast')) AS LHS
		   INNER JOIN wine AS RHS ON (LHS.appelation = RHS.appelation
		                                 AND LHS.state = RHS.state))
		ORDER BY name

	                            name
	0  Beckstoffer To Kalon Vineyard
	1             Cabernet Sauvignon
	2                Sauvignon Blanc
	3              abernet Sauvignon
	4                 tkKOld VineKJ(
No solution for instance spider/wine_1/0028 (1604)
Wrong output for base solution in instance spider/wine_1/0031 (1605)
	EXPECTED OUTPUT ====

	    avg_price_  avg_score_                            appelation
	0    29.142857   88.142857                      Alexander Valley
	1    31.500000   90.000000                         Amador County
	2    18.000000   87.000000      Amador-Mendocino-Sonoma Counties
	3    53.333333   92.333333                       Anderson Valley
	4    31.000000   92.000000                  Arroyo Grande Valley
	5   125.000000   88.000000                            Atlas Peak
	6    46.500000   91.000000                        Bennett Valley
	7    20.000000   84.000000                      Calaveras County
	8    39.482759   87.827586                            California
	9    36.166667   90.000000                              Carneros
	10   13.000000   87.000000                         Central Coast
	11   52.500000   92.000000                            Chalk Hill
	12   25.000000   92.000000                               Chalone
	13   27.800000   87.200000                   Contra Costa County
	14   27.653846   89.307692                      Dry Creek Valley
	15   29.500000   89.000000                           Edna Valley
	16   25.000000   78.000000                            Fiddletown
	17   40.000000   91.000000  Green Valley of Russian River Valley
	18   20.000000   87.000000                         Guenoc Valley
	19   21.000000   88.000000         Happy Canyon of Santa Barbara
	20   29.000000   93.000000                       Howell Mountain
	21   37.500000   89.500000                        Knights Valley
	22   26.000000   87.000000                           Lake County
	23   40.000000   89.000000                      Livermore Valley
	24   21.500000   87.500000                                  Lodi
	25   15.333333   86.333333                      Mendocino County
	26   22.500000   89.000000                       Monterey County
	27   38.333333   90.666667                          Mount Harlan
	28   53.333333   90.666667                          Mount Vedeer
	29   59.135417   90.479167                           Napa Valley
	30   18.000000   86.000000                  Napa-Sonoma counties
	31   12.000000   85.000000                           North Coast
	32   95.000000   90.500000                              Oakville
	33   32.285714   88.428571                           Paso Robles
	34   49.000000   90.500000                 Red Hills Lake County
	35   38.000000   90.000000                              Rockpile
	36   49.603774   91.792453                  Russian River Valley
	37   45.714286   89.428571                            Rutherford
	38   31.500000   89.500000                San Luis Obispo County
	39   28.000000   89.416667                  Santa Barbara County
	40   40.000000   93.000000                  Santa Cruz Mountains
	41   46.285714   91.238095                 Santa Lucia Highlands
	42   41.500000   91.250000                    Santa Maria Valley
	43   29.333333   88.733333                     Santa Ynez Valley
	44   25.000000   86.000000                     Shenandoah Valley
	45   10.000000   82.000000                      Sierra Foothills
	46   35.000000   89.000000                         Solano County
	47   49.025641   90.820513                          Sonoma Coast
	48   43.481481   90.407407                         Sonoma County
	49   42.684211   89.789474                         Sonoma Valley
	50   15.000000   86.000000                  Sonoma-Lake Counties
	51   70.666667   89.333333              Spring Mountain District
	52   77.500000   91.500000                            St. Helena
	53   60.352941   90.882353                       Sta. Rita Hills
	54   84.500000   92.250000                   Stags Leap District
	55   25.000000   91.000000                           Yolo County
	56   90.000000   90.000000                            Yountville
	ACTUAL OUTPUT ====

		SELECT avg(Price),
		       avg(Score),
		       Appelation
		FROM WINE
		GROUP BY Appelation

	    avg(price)  avg(score)                            appelation
	0    29.142857   88.142857                      Alexander Valley
	1    31.500000   90.000000                         Amador County
	2    18.000000   87.000000      Amador-Mendocino-Sonoma Counties
	3    53.333333   92.333333                       Anderson Valley
	4    31.000000   92.000000                  Arroyo Grande Valley
	5   125.000000   88.000000                            Atlas Peak
	6    46.500000   91.000000                        Bennett Valley
	7    20.000000   84.000000                      Calaveras County
	8    39.482759   87.827586                            California
	9    36.166667   90.000000                              Carneros
	10   13.000000   87.000000                         Central Coast
	11   52.500000   92.000000                            Chalk Hill
	12   25.000000   92.000000                               Chalone
	13   27.800000   87.200000                   Contra Costa County
	14   27.653846   89.307692                      Dry Creek Valley
	15   29.500000   89.000000                           Edna Valley
	16   25.000000   78.000000                            Fiddletown
	17   40.000000   91.000000  Green Valley of Russian River Valley
	18   20.000000   87.000000                         Guenoc Valley
	19   21.000000   88.000000         Happy Canyon of Santa Barbara
	20   29.000000   93.000000                       Howell Mountain
	21   37.500000   89.500000                        Knights Valley
	22   26.000000   87.000000                           Lake County
	23   40.000000   89.000000                      Livermore Valley
	24   21.500000   87.500000                                  Lodi
	25   15.333333   86.333333                      Mendocino County
	26   22.500000   89.000000                       Monterey County
	27   38.333333   90.666667                          Mount Harlan
	28   53.333333   90.666667                          Mount Vedeer
	29   59.135417   90.479167                           Napa Valley
	30   18.000000   86.000000                  Napa-Sonoma counties
	31   12.000000   85.000000                           North Coast
	32   95.000000   90.500000                              Oakville
	33   32.285714   88.428571                           Paso Robles
	34   49.000000   90.500000                 Red Hills Lake County
	35   38.000000   90.000000                              Rockpile
	36   49.603774   91.792453                  Russian River Valley
	37   45.714286   89.428571                            Rutherford
	38   31.500000   89.500000                San Luis Obispo County
	39   28.000000   89.416667                  Santa Barbara County
	40   40.000000   93.000000                  Santa Cruz Mountains
	41   46.285714   91.238095                 Santa Lucia Highlands
	42   41.500000   91.250000                    Santa Maria Valley
	43   29.333333   88.733333                     Santa Ynez Valley
	44   25.000000   86.000000                     Shenandoah Valley
	45   10.000000   82.000000                      Sierra Foothills
	46   35.000000   89.000000                         Solano County
	47   49.025641   90.820513                          Sonoma Coast
	48   43.481481   90.407407                         Sonoma County
	49   42.684211   89.789474                         Sonoma Valley
	50   15.000000   86.000000                  Sonoma-Lake Counties
	51   70.666667   89.333333              Spring Mountain District
	52   77.500000   91.500000                            St. Helena
	53   60.352941   90.882353                       Sta. Rita Hills
	54   84.500000   92.250000                   Stags Leap District
	55   25.000000   91.000000                           Yolo County
	56   90.000000   90.000000                            Yountville
Wrong output for ground truth in instance spider/wine_1/0031 (1605)
No solution for instance spider/wrestler/0017 (1607)
No solution for instance spider/wrestler/0008 (1608)
Wrong output for fuzzied solution in instance spider/wrestler/0015 (1614)
	EXPECTED OUTPUT ====

		SELECT Reign
		FROM wrestler
		GROUP BY Reign
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  reign
	0      
	ACTUAL OUTPUT ====

		
		SELECT reign
		FROM
		  (SELECT LHS.wrestler_id AS wrestler_id,
		          LHS.name AS name,
		          LHS.reign AS reign,
		          LHS.days_held AS days_held,
		          LHS.location AS LOCATION,
		          LHS.event AS event,
		          LHS.n AS n,
		          RHS.wrestler_id AS wrestler_id_other,
		          RHS.reign AS reign_other,
		          RHS.location AS location_other,
		          RHS.event AS event_other
		   FROM
		     (SELECT wrestler_id,
		             name,
		             reign,
		             days_held,
		             LOCATION,
		             event,
		             COUNT(*) OVER () AS n
		      FROM wrestler) AS LHS
		   INNER JOIN wrestler AS RHS ON (LHS.name = RHS.name
		                                     AND LHS.reign = RHS.days_held))
		ORDER BY reign

	Empty DataFrame
	Columns: [reign]
	Index: []
Wrong output for fuzzied solution in instance spider/wrestler/0016 (1616)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM wrestler
		GROUP BY LOCATION
		HAVING COUNT(*) > 2

	        location
	0  Tokyo , Japan
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT LHS.event AS event,
		          LHS.reign AS reign,
		          LHS.n AS n,
		          RHS.name AS name,
		          RHS.days_held AS days_held,
		          RHS.location AS LOCATION,
		          RHS.event AS event_other
		   FROM
		     (SELECT event,
		             reign,
		             COUNT() AS n
		      FROM wrestler
		      GROUP BY event,
		               reign) AS LHS
		   INNER JOIN wrestler AS RHS ON (LHS.n = RHS.wrestler_id
		                                     AND LHS.reign = RHS.reign))
		ORDER BY LOCATION

	Empty DataFrame
	Columns: [location]
	Index: []
Wrong output for fuzzied solution in instance spider/wrestler/0018 (1617)
	EXPECTED OUTPUT ====

		SELECT Team
		FROM Elimination
		WHERE Eliminated_By = "Orton" INTERSECT
		  SELECT Team
		  FROM Elimination WHERE Eliminated_By = "Benjamin"

	Empty DataFrame
	Columns: [team]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `team`
		FROM `elimination`
		WHERE (`eliminated_by` != 'Orton'
		       AND `eliminated_by` = 'Benjamin')
		ORDER BY team

	                team
	0  Team BatistagJNG5
No solution for instance spider/wrestler/0007 (1620)
Wrong output for fuzzied solution in instance spider/wrestler/0014 (1622)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM wrestler
		WHERE Days_held < 100

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM wrestler
		      ORDER BY days_held)
		   LIMIT 1)

	      name
	0  Fishman
No solution for instance spider/wrestler/0009 (1623)
No solution for instance spider/wrestler/0010 (1625)
Wrong output for fuzzied solution in instance spider/tracking_orders/0002 (1626)
	EXPECTED OUTPUT ====

		SELECT order_id,
		       customer_id
		FROM orders
		ORDER BY date_order_placed
		LIMIT 1

	   order_id  customer_id
	0        12            2
	ACTUAL OUTPUT ====

		
		SELECT order_id,
		       customer_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM orders
		      ORDER BY order_id DESC)
		   LIMIT 1)

	   order_id  customer_id
	0        13            9
Wrong output for fuzzied solution in instance spider/tracking_orders/0008 (1628)
	EXPECTED OUTPUT ====

		SELECT T1.customer_id
		FROM customers AS T1
		JOIN orders AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T1.customer_id
		ORDER BY count(*) DESC
		LIMIT 1

	   customer_id
	0           11
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT customer_id
		FROM
		  (SELECT LHS.order_id AS order_id,
		          LHS.customer_id AS customer_id,
		          LHS.order_status AS order_status,
		          LHS.date_order_placed AS date_order_placed,
		          LHS.order_details AS order_details
		   FROM orders AS LHS
		   INNER JOIN
		     (SELECT COUNT() AS n
		      FROM customers) AS RHS ON (LHS.customer_id = RHS.n))
		ORDER BY customer_id

	Empty DataFrame
	Columns: [customer_id]
	Index: []
Wrong output for fuzzied solution in instance spider/tracking_orders/0027 (1630)
	EXPECTED OUTPUT ====

		SELECT T2.customer_name,
		       count(*)
		FROM orders AS T1
		JOIN customers AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T2.customer_id
		HAVING count(*) >= 2

	  customer_name  count(*)
	0       Jeramie         2
	1       Mabelle         3
	ACTUAL OUTPUT ====

		
		SELECT customer_name,
		       n AS count___
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.order_details AS order_details,
		          LHS.n AS n,
		          RHS.customer_name AS customer_name,
		          RHS.customer_details AS customer_details
		   FROM
		     (SELECT *
		      FROM
		        (SELECT customer_id,
		                order_details,
		                COUNT() AS n
		         FROM orders
		         GROUP BY customer_id,
		                  order_details)
		      WHERE (n >= 2)) AS LHS
		   INNER JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))
		ORDER BY customer_name

	Empty DataFrame
	Columns: [customer_name, count___]
	Index: []
Wrong output for fuzzied solution in instance spider/tracking_orders/0030 (1632)
	EXPECTED OUTPUT ====

		SELECT T1.customer_name
		FROM customers AS T1
		JOIN orders AS T2
		JOIN order_items AS T3
		JOIN products AS T4 ON T1.customer_id = T2.customer_id
		AND T2.order_id = T3.order_id
		AND T3.product_id = T4.product_id
		WHERE T3.order_item_status = "Cancel"
		  AND T4.product_name = "food"
		GROUP BY T1.customer_id
		HAVING count(*) >= 1

	  customer_name
	0       Hershel
	ACTUAL OUTPUT ====

		
		SELECT `customer_name`
		FROM
		  (SELECT `LHS`.`order_id` AS `order_id`,
		          `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`order_status` AS `order_status`,
		          `LHS`.`date_order_placed` AS `date_order_placed`,
		          `LHS`.`order_details` AS `order_details`,
		          `LHS`.`order_item_id` AS `order_item_id`,
		          `LHS`.`product_id` AS `product_id`,
		          `LHS`.`order_item_status` AS `order_item_status`,
		          `LHS`.`order_item_details` AS `order_item_details`,
		          `LHS`.`product_name` AS `product_name`,
		          `LHS`.`product_details` AS `product_details`,
		          `RHS`.`customer_name` AS `customer_name`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`order_id` AS `order_id`,
		             `LHS`.`customer_id` AS `customer_id`,
		             `LHS`.`order_status` AS `order_status`,
		             `LHS`.`date_order_placed` AS `date_order_placed`,
		             `LHS`.`order_details` AS `order_details`,
		             `LHS`.`order_item_id` AS `order_item_id`,
		             `LHS`.`product_id` AS `product_id`,
		             `LHS`.`order_item_status` AS `order_item_status`,
		             `LHS`.`order_item_details` AS `order_item_details`,
		             `RHS`.`product_name` AS `product_name`,
		             `RHS`.`product_details` AS `product_details`
		      FROM
		        (SELECT `LHS`.`order_id` AS `order_id`,
		                `LHS`.`customer_id` AS `customer_id`,
		                `LHS`.`order_status` AS `order_status`,
		                `LHS`.`date_order_placed` AS `date_order_placed`,
		                `LHS`.`order_details` AS `order_details`,
		                `RHS`.`order_item_id` AS `order_item_id`,
		                `RHS`.`product_id` AS `product_id`,
		                `RHS`.`order_item_status` AS `order_item_status`,
		                `RHS`.`order_item_details` AS `order_item_details`
		         FROM `orders` AS `LHS`
		         INNER JOIN `order_items` AS `RHS` ON (`LHS`.`order_id` = `RHS`.`order_id`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `products`
		         WHERE (`product_name` = 'food')) AS `RHS` ON (`LHS`.`product_id` = `RHS`.`product_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT `customer_id`,
		             `customer_name`,
		             COUNT() AS `n`
		      FROM `customers`
		      GROUP BY `customer_id`,
		               `customer_name`) AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))
		WHERE (`order_item_status` = 'Cancel'
		       AND n >= 1)
		ORDER BY customer_name

	  customer_name
	0       Hershel
	1       Hershel
Wrong output for fuzzied solution in instance spider/tracking_orders/0013 (1633)
	EXPECTED OUTPUT ====

		SELECT T1.customer_name
		FROM customers AS T1
		JOIN orders AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.order_status = "On Road" INTERSECT
		  SELECT T1.customer_name
		  FROM customers AS T1
		  JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "Shipped"

	  customer_name
	0       Mabelle
	ACTUAL OUTPUT ====

		
		SELECT `customer_name_other` AS `customer_name`
		FROM
		  (SELECT `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`customer_name` AS `customer_name`,
		          `LHS`.`customer_details` AS `customer_details`,
		          `LHS`.`order_id` AS `order_id`,
		          `LHS`.`order_status` AS `order_status`,
		          `LHS`.`date_order_placed` AS `date_order_placed`,
		          `LHS`.`order_details` AS `order_details`,
		          `RHS`.`customer_name` AS `customer_name_other`,
		          `RHS`.`customer_details` AS `customer_details_other`,
		          `RHS`.`order_id` AS `order_id_other`,
		          `RHS`.`date_order_placed` AS `date_order_placed_other`,
		          `RHS`.`order_details` AS `order_details_other`
		   FROM
		     (SELECT `LHS`.`customer_id` AS `customer_id`,
		             `LHS`.`customer_name` AS `customer_name`,
		             `LHS`.`customer_details` AS `customer_details`,
		             `RHS`.`order_id` AS `order_id`,
		             `RHS`.`order_status` AS `order_status`,
		             `RHS`.`date_order_placed` AS `date_order_placed`,
		             `RHS`.`order_details` AS `order_details`
		      FROM `customers` AS `LHS`
		      LEFT JOIN `orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`customer_id` AS `customer_id`,
		                `LHS`.`customer_name` AS `customer_name`,
		                `LHS`.`customer_details` AS `customer_details`,
		                `RHS`.`order_id` AS `order_id`,
		                `RHS`.`order_status` AS `order_status`,
		                `RHS`.`date_order_placed` AS `date_order_placed`,
		                `RHS`.`order_details` AS `order_details`
		         FROM `customers` AS `LHS`
		         LEFT JOIN `orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))
		      WHERE (`order_status` != 'On Road'
		             AND `order_status` = 'Shipped')) AS RHS ON (LHS.order_id = RHS.customer_id
		                                                         AND LHS.order_status = RHS.order_status))
		ORDER BY customer_name

	Empty DataFrame
	Columns: [customer_name]
	Index: []
Error while executing solution for instance spider/tracking_orders/0012 (1636)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `product_id`
FROM
  (SELECT `LHS`.`order_item_id` AS `order_item_id`,
          `LHS`.`product_id` AS `product_id`,
          `LHS`.`order_id` AS `order_id`,
          `LHS`.`order_item_status` AS `order_item_status`,
          `LHS`.`order_item_details` AS `order_item_details`,
          `RHS`.`customer_id` AS `customer_id`,
          `RHS`.`order_status` AS `order_status`,
          `RHS`.`date_order_placed` AS `date_order_placed`,
          `RHS`.`order_details` AS `order_details`
   FROM `order_items` AS `LHS`
   INNER JOIN `orders` AS `RHS` ON (`LHS`.`order_id` = `RHS`.`order_id`))
WHERE (`date_order_placed` > parse_datetime('1975-01-01')
       AND `date_order_placed` < parse_datetime('1976-01-01'))
ORDER BY product_id]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/tracking_orders/0026 (1637)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT DISTINCT `invoice_details`
FROM `invoices`
WHERE (`invoice_date` < parse_datetime('1989-09-03')
       OR `invoice_date` >= parse_datetime('2007-12-25'))
ORDER BY invoice_details]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/tracking_orders/0015 (1638)
	EXPECTED OUTPUT ====

		SELECT T1.date_order_placed
		FROM orders AS T1
		JOIN shipments AS T2 ON T1.order_id = T2.order_id
		WHERE T2.shipment_tracking_number = 3452

	     date_order_placed
	0  1974-08-10 08:15:16
	1  1976-11-21 12:24:03
	ACTUAL OUTPUT ====

		
		SELECT date_order_placed
		FROM
		  (SELECT LHS.shipment_id AS shipment_id,
		          LHS.order_id AS order_id,
		          LHS.invoice_number AS invoice_number,
		          LHS.shipment_tracking_number AS shipment_tracking_number,
		          LHS.shipment_date AS shipment_date,
		          LHS.other_shipment_details AS other_shipment_details,
		          RHS.order_id AS order_id_other,
		          RHS.order_status AS order_status,
		          RHS.date_order_placed AS date_order_placed,
		          RHS.order_details AS order_details
		   FROM
		     (SELECT *
		      FROM shipments
		      WHERE (shipment_tracking_number = 3452)) AS LHS
		   INNER JOIN orders AS RHS ON (LHS.order_id = RHS.customer_id))
		ORDER BY date_order_placed

	Empty DataFrame
	Columns: [date_order_placed]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Error while executing solution for instance spider/tracking_orders/0019 (1643)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `order_id`
FROM `shipments`
WHERE (`shipment_date` >= parse_datetime('2000-01-01'))
ORDER BY order_id]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/tracking_orders/0007 (1644)
	EXPECTED OUTPUT ====

		SELECT T1.customer_name
		FROM customers AS T1
		JOIN orders AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T1.customer_id
		ORDER BY count(*) DESC
		LIMIT 1

	  customer_name
	0       Mabelle
	ACTUAL OUTPUT ====

		
		SELECT customer_name
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.customer_name AS customer_name,
		          LHS.customer_details AS customer_details
		   FROM customers AS LHS
		   INNER JOIN
		     (SELECT COUNT() AS n
		      FROM orders) AS RHS ON (LHS.customer_id = RHS.n))
		ORDER BY customer_name

	  customer_name
	0        Hadley
Wrong output for fuzzied solution in instance spider/tracking_orders/0024 (1645)
	EXPECTED OUTPUT ====

		SELECT T1.customer_name
		FROM customers AS T1
		JOIN orders AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T1.customer_id
		ORDER BY count(*) DESC
		LIMIT 1

	  customer_name
	0       Mabelle
	ACTUAL OUTPUT ====

		
		SELECT customer_name
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.customer_name AS customer_name,
		          LHS.customer_details AS customer_details
		   FROM customers AS LHS
		   INNER JOIN
		     (SELECT COUNT() AS n
		      FROM orders) AS RHS ON (LHS.customer_id = RHS.n))
		ORDER BY customer_name

	  customer_name
	0        Hadley
Wrong output for fuzzied solution in instance spider/tracking_orders/0023 (1647)
	EXPECTED OUTPUT ====

		SELECT T1.order_id
		FROM orders AS T1
		JOIN order_items AS T2 ON T1.order_id = T2.order_id
		GROUP BY T1.order_id
		ORDER BY count(*) DESC
		LIMIT 1

	   order_id
	0        13
	ACTUAL OUTPUT ====

		
		SELECT product_id AS order_id
		FROM
		  (SELECT order_item_id,
		          product_id,
		          n,
		          order_status,
		          date_order_placed,
		          order_details,
		          order_item_id AS customer_id
		   FROM
		     (SELECT LHS.order_item_id AS order_item_id,
		             LHS.product_id AS product_id,
		             LHS.n AS n,
		             RHS.order_status AS order_status,
		             RHS.date_order_placed AS date_order_placed,
		             RHS.order_details AS order_details
		      FROM
		        (SELECT order_item_id,
		                product_id,
		                COUNT() AS n
		         FROM order_items
		         GROUP BY order_item_id,
		                  product_id) AS LHS
		      INNER JOIN orders AS RHS ON (LHS.order_item_id = RHS.customer_id
		                                      AND LHS.n = RHS.order_id)))
		ORDER BY order_id

	Empty DataFrame
	Columns: [order_id]
	Index: []
Wrong output for fuzzied solution in instance spider/tracking_orders/0014 (1649)
	EXPECTED OUTPUT ====

		SELECT T1.customer_id
		FROM customers AS T1
		JOIN orders AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.order_status = "On Road" INTERSECT
		  SELECT T1.customer_id
		  FROM customers AS T1
		  JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "Shipped"

	   customer_id
	0            7
	ACTUAL OUTPUT ====

		
		SELECT `order_id` AS `customer_id`
		FROM
		  (SELECT `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`customer_name` AS `customer_name`,
		          `LHS`.`customer_details` AS `customer_details`,
		          `LHS`.`order_id` AS `order_id`,
		          `LHS`.`order_status` AS `order_status`,
		          `LHS`.`date_order_placed` AS `date_order_placed`,
		          `LHS`.`order_details` AS `order_details`,
		          `RHS`.`order_id` AS `order_id_other`,
		          `RHS`.`date_order_placed` AS `date_order_placed_other`,
		          `RHS`.`order_details` AS `order_details_other`
		   FROM
		     (SELECT `LHS`.`customer_id` AS `customer_id`,
		             `LHS`.`customer_name` AS `customer_name`,
		             `LHS`.`customer_details` AS `customer_details`,
		             `RHS`.`order_id` AS `order_id`,
		             `RHS`.`order_status` AS `order_status`,
		             `RHS`.`date_order_placed` AS `date_order_placed`,
		             `RHS`.`order_details` AS `order_details`
		      FROM `customers` AS `LHS`
		      LEFT JOIN `orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `orders`
		      WHERE (`order_status` != 'On Road'
		             AND `order_status` = 'Shipped')) AS RHS ON (LHS.order_id = RHS.customer_id
		                                                         AND LHS.order_status = RHS.order_status))
		ORDER BY customer_id

	Empty DataFrame
	Columns: [customer_id]
	Index: []
Error while executing solution for instance spider/tracking_orders/0025 (1651)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `invoice_number`
FROM `invoices`
WHERE (`invoice_date` < parse_datetime('1989-09-03')
       OR `invoice_date` >= parse_datetime('2007-12-25'))
ORDER BY invoice_number]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/tracking_orders/0011 (1652)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `customer_name`
FROM
  (SELECT `LHS`.`order_id` AS `order_id`,
          `LHS`.`customer_id` AS `customer_id`,
          `LHS`.`order_status` AS `order_status`,
          `LHS`.`date_order_placed` AS `date_order_placed`,
          `LHS`.`order_details` AS `order_details`,
          `RHS`.`customer_name` AS `customer_name`,
          `RHS`.`customer_details` AS `customer_details`
   FROM `orders` AS `LHS`
   INNER JOIN `customers` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))
WHERE (`date_order_placed` > parse_datetime('2009-01-01')
       AND `date_order_placed` <= parse_datetime('2010-01-01'))
ORDER BY customer_name]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/tracking_orders/0029 (1653)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT `customer_name`
FROM
  (SELECT `LHS`.`customer_id` AS `customer_id`,
          `LHS`.`customer_name` AS `customer_name`,
          `LHS`.`customer_details` AS `customer_details`,
          `LHS`.`order_id` AS `order_id`,
          `LHS`.`order_status` AS `order_status`,
          `LHS`.`date_order_placed` AS `date_order_placed`,
          `LHS`.`order_details` AS `order_details`,
          `LHS`.`order_item_id` AS `order_item_id`,
          `LHS`.`product_id` AS `product_id`,
          `LHS`.`order_item_status` AS `order_item_status`,
          `LHS`.`order_item_details` AS `order_item_details`,
          `RHS`.`product_name` AS `product_name`,
          `RHS`.`product_details` AS `product_details`,
          `RHS`.`n_distinct` AS `n_distinct`
   FROM
     (SELECT `LHS`.`customer_id` AS `customer_id`,
             `LHS`.`customer_name` AS `customer_name`,
             `LHS`.`customer_details` AS `customer_details`,
             `LHS`.`order_id` AS `order_id`,
             `LHS`.`order_status` AS `order_status`,
             `LHS`.`date_order_placed` AS `date_order_placed`,
             `LHS`.`order_details` AS `order_details`,
             `RHS`.`order_item_id` AS `order_item_id`,
             `RHS`.`product_id` AS `product_id`,
             `RHS`.`order_item_status` AS `order_item_status`,
             `RHS`.`order_item_details` AS `order_item_details`
      FROM
        (SELECT `LHS`.`customer_id` AS `customer_id`,
                `LHS`.`customer_name` AS `customer_name`,
                `LHS`.`customer_details` AS `customer_details`,
                `RHS`.`order_id` AS `order_id`,
                `RHS`.`order_status` AS `order_status`,
                `RHS`.`date_order_placed` AS `date_order_placed`,
                `RHS`.`order_details` AS `order_details`
         FROM `customers` AS `LHS`
         INNER JOIN `orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`
      INNER JOIN `order_items` AS `RHS` ON (`LHS`.`order_id` = `RHS`.`order_id`)) AS `LHS`
   INNER JOIN
     (SELECT *
      FROM
        (SELECT `product_id`,
                `product_name`,
                `product_details`,
                COUNT(DISTINCT `product_name`) OVER () AS `n_distinct`
         FROM `products`)
      WHERE (`product_name` = 'food'
             AND n_distinct != 1)) AS RHS ON (LHS.product_id = RHS.product_id))
ORDER BY customer_name]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/tracking_orders/0028 (1655)
	EXPECTED OUTPUT ====

		SELECT T2.customer_name
		FROM orders AS T1
		JOIN customers AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T2.customer_id
		HAVING count(*) <= 2

	  customer_name
	0        Hadley
	1        Hadley
	2       Jeramie
	3       Jeramie
	4  JeramieOsOiA
	5       Mabelle
	6        abelle
	7        eramie
	8  kuaHadleyTh5
	ACTUAL OUTPUT ====

		
		SELECT customer_name
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.order_details AS order_details,
		          LHS.n AS n,
		          RHS.customer_name AS customer_name,
		          RHS.customer_details AS customer_details
		   FROM
		     (SELECT *
		      FROM
		        (SELECT customer_id,
		                order_details,
		                COUNT() AS n
		         FROM orders
		         GROUP BY customer_id,
		                  order_details)
		      WHERE (n <= 2)) AS LHS
		   INNER JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))
		ORDER BY customer_name

	   customer_name
	0         Hadley
	1         Hadley
	2        Jeramie
	3        Jeramie
	4        Jeramie
	5   JeramieOsOiA
	6        Mabelle
	7        Mabelle
	8        Mabelle
	9        Mabelle
	10        abelle
	11        eramie
	12  kuaHadleyTh5
Wrong output for fuzzied solution in instance spider/candidate_poll/0002 (1656)
	EXPECTED OUTPUT ====

		SELECT poll_source
		FROM candidate
		GROUP BY poll_source
		ORDER BY count(*) DESC
		LIMIT 1

	                      poll_source
	0  FOX News/Opinion Dynamics Poll
	ACTUAL OUTPUT ====

		
		SELECT poll_source
		FROM
		  (SELECT LHS.candidate_id AS candidate_id,
		          LHS.people_id AS people_id,
		          LHS.poll_source AS poll_source,
		          LHS.date AS date,
		          LHS.support_rate AS support_rate,
		          LHS.consider_rate AS consider_rate,
		          LHS.oppose_rate AS oppose_rate,
		          LHS.unsure_rate AS unsure_rate,
		          RHS.candidate_id AS candidate_id_other,
		          RHS.people_id AS people_id_other,
		          RHS.poll_source AS poll_source_other,
		          RHS.date AS date_other,
		          RHS.support_rate AS support_rate_other,
		          RHS.oppose_rate AS oppose_rate_other,
		          RHS.unsure_rate AS unsure_rate_other
		   FROM candidate AS LHS
		   INNER JOIN
		     (SELECT candidate_id,
		             people_id,
		             poll_source, date, support_rate,
		                                consider_rate,
		                                oppose_rate,
		                                unsure_rate,
		                                COUNT(*) OVER () AS n
		      FROM candidate) AS RHS ON (LHS.people_id = RHS.n
		                                    AND LHS.consider_rate = RHS.consider_rate))
		ORDER BY poll_source

	Empty DataFrame
	Columns: [poll_source]
	Index: []
No solution for instance spider/candidate_poll/0017 (1657)
Wrong output for base solution in instance spider/candidate_poll/0008 (1658)
	EXPECTED OUTPUT ====

	   avg_height_  avg_weight_
	0   195.142857    86.714286
	ACTUAL OUTPUT ====

		SELECT avg(height),
		       avg(weight)
		FROM people
		WHERE sex = 'M'

	   avg(height)  avg(weight)
	0   195.142857    86.714286
Wrong output for ground truth in instance spider/candidate_poll/0008 (1658)
Wrong output for fuzzied solution in instance spider/candidate_poll/0003 (1659)
	EXPECTED OUTPUT ====

		SELECT support_rate
		FROM candidate
		ORDER BY support_rate DESC
		LIMIT 3

	   support_rate
	0          0.31
	1          0.32
	2          0.32
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT support_rate
		FROM
		  (SELECT LHS.candidate_id AS candidate_id,
		          LHS.people_id AS people_id,
		          LHS.poll_source AS poll_source,
		          LHS.date AS date,
		          LHS.support_rate AS support_rate,
		          LHS.consider_rate AS consider_rate,
		          LHS.oppose_rate AS oppose_rate,
		          LHS.unsure_rate AS unsure_rate,
		          RHS.candidate_id AS candidate_id_other,
		          RHS.people_id AS people_id_other,
		          RHS.poll_source AS poll_source_other,
		          RHS.date AS date_other,
		          RHS.support_rate AS support_rate_other,
		          RHS.consider_rate AS consider_rate_other,
		          RHS.oppose_rate AS oppose_rate_other
		   FROM candidate AS LHS
		   INNER JOIN candidate AS RHS ON (LHS.consider_rate = RHS.unsure_rate))
		ORDER BY support_rate

	Empty DataFrame
	Columns: [support_rate]
	Index: []
No solution for instance spider/candidate_poll/0013 (1660)
Wrong output for fuzzied solution in instance spider/candidate_poll/0006 (1661)
	EXPECTED OUTPUT ====

		SELECT poll_source
		FROM candidate
		ORDER BY oppose_rate DESC
		LIMIT 1

	                     poll_source
	0  FOX News/Opinion Dynamics Pol
	ACTUAL OUTPUT ====

		
		SELECT poll_source
		FROM
		  (SELECT LHS.candidate_id AS candidate_id,
		          LHS.people_id AS people_id,
		          LHS.poll_source AS poll_source,
		          LHS.date AS date,
		          LHS.support_rate AS support_rate,
		          LHS.consider_rate AS consider_rate,
		          LHS.oppose_rate AS oppose_rate,
		          LHS.unsure_rate AS unsure_rate,
		          RHS.candidate_id AS candidate_id_other,
		          RHS.people_id AS people_id_other,
		          RHS.poll_source AS poll_source_other,
		          RHS.date AS date_other,
		          RHS.support_rate AS support_rate_other,
		          RHS.consider_rate AS consider_rate_other
		   FROM candidate AS LHS
		   INNER JOIN candidate AS RHS ON (LHS.consider_rate = RHS.unsure_rate
		                                      AND LHS.oppose_rate = RHS.oppose_rate))
		ORDER BY poll_source

	Empty DataFrame
	Columns: [poll_source]
	Index: []
No solution for instance spider/candidate_poll/0012 (1663)
Wrong output for fuzzied solution in instance spider/candidate_poll/0015 (1664)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM people AS t1
		JOIN candidate AS t2 ON t1.people_id = t2.people_id
		WHERE t2.support_rate < t2.oppose_rate

	                   name
	0         Laurent Capet
	1         Laurent Capet
	2         Laurent Capet
	3       Loïc De Kergret
	4       Loïc De Kergret
	5       Loïc De Kergret
	6       Loïc De Kergret
	7       Loïc De Kergret
	8       Loïc De Kergret
	9  z6 NvLoïc De Kergret
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM candidate AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY name

	                   name
	0         Laurent Capet
	1       Loïc De Kergret
	2       Loïc De Kergret
	3       Loïc De Kergret
	4  z6 NvLoïc De Kergret
Wrong output for fuzzied solution in instance spider/candidate_poll/0016 (1666)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       sex
		FROM people
		WHERE weight > 85
		GROUP BY sex

	   count(*)     sex
	0         1  Fzk2jW
	1         1  NVkpUF
	2         2       F
	3         5       M
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___,
		       sex
		FROM
		  (SELECT sex,
		          COUNT(DISTINCT weight) AS n_distinct
		   FROM
		     (SELECT *
		      FROM people
		      WHERE (weight >= 85.0))
		   GROUP BY sex)
		ORDER BY count___

	   count___     sex
	0         1  Fzk2jW
	1         1  NVkpUF
	2         2       F
	3         3       M
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for fuzzied solution in instance spider/candidate_poll/0009 (1673)
	EXPECTED OUTPUT ====

		SELECT name
		FROM people
		WHERE height > 200
		  OR height < 190

	                          name
	0  GyKVjPhilippe Barça-Cysique
	1                Laurent Capet
	2                Laurent Capet
	3                Laurent Capet
	4              Loïc De Kergret
	5  UvmS1rVa52sHh7viJsBtas5W(ec
	6             VVWF3suVqRAYVE3j
	7          oi1Laurent CapetwOV
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM people
		WHERE (height > 200.0
		       OR height <= 190.0)
		ORDER BY name

	                           name
	0         5fPLoïc De KergrethYx
	1   GyKVjPhilippe Barça-Cysique
	2                 Laurent Capet
	3                 Laurent Capet
	4                 Laurent Capet
	5                 Laurent Capet
	6               Loïc De Kergret
	7   UvmS1rVa52sHh7viJsBtas5W(ec
	8              VVWF3suVqRAYVE3j
	9         hilippe Barça-Cysique
	10          oi1Laurent CapetwOV
Wrong output for fuzzied solution in instance spider/candidate_poll/0011 (1674)
	EXPECTED OUTPUT ====

		SELECT t1.name,
		       t1.sex
		FROM people AS t1
		JOIN candidate AS t2 ON t1.people_id = t2.people_id
		ORDER BY t2.support_rate DESC
		LIMIT 1

	            name     sex
	0  Laurent Capet  FFhwSF
	ACTUAL OUTPUT ====

		
		SELECT name,
		       sex
		FROM
		  (SELECT LHS.candidate_id AS candidate_id,
		          LHS.people_id AS people_id,
		          LHS.poll_source AS poll_source,
		          LHS.date AS date,
		          LHS.support_rate AS support_rate,
		          LHS.consider_rate AS consider_rate,
		          LHS.oppose_rate AS oppose_rate,
		          LHS.unsure_rate AS unsure_rate,
		          LHS.sex AS sex,
		          LHS.name AS name,
		          LHS.date_of_birth AS date_of_birth,
		          LHS.height AS height,
		          LHS.weight AS weight,
		          RHS.candidate_id_other AS candidate_id_other,
		          RHS.poll_source_other AS poll_source_other,
		          RHS.date_other AS date_other,
		          RHS.support_rate_other AS support_rate_other,
		          RHS.consider_rate_other AS consider_rate_other,
		          RHS.oppose_rate_other AS oppose_rate_other
		   FROM
		     (SELECT LHS.candidate_id AS candidate_id,
		             LHS.people_id AS people_id,
		             LHS.poll_source AS poll_source,
		             LHS.date AS date,
		             LHS.support_rate AS support_rate,
		             LHS.consider_rate AS consider_rate,
		             LHS.oppose_rate AS oppose_rate,
		             LHS.unsure_rate AS unsure_rate,
		             RHS.sex AS sex,
		             RHS.name AS name,
		             RHS.date_of_birth AS date_of_birth,
		             RHS.height AS height,
		             RHS.weight AS weight
		      FROM candidate AS LHS
		      INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id)) AS LHS
		   INNER JOIN
		     (SELECT candidate_id,
		             people_id,
		             poll_source, date, support_rate,
		                                consider_rate,
		                                oppose_rate,
		                                consider_rate AS unsure_rate,
		                                candidate_id_other,
		                                poll_source_other,
		                                date_other,
		                                support_rate_other,
		                                consider_rate_other,
		                                oppose_rate_other
		      FROM
		        (SELECT LHS.candidate_id AS candidate_id,
		                LHS.people_id AS people_id,
		                LHS.poll_source AS poll_source,
		                LHS.date AS date,
		                LHS.support_rate AS support_rate,
		                LHS.consider_rate AS consider_rate,
		                LHS.oppose_rate AS oppose_rate,
		                LHS.unsure_rate AS unsure_rate,
		                RHS.candidate_id AS candidate_id_other,
		                RHS.poll_source AS poll_source_other,
		                RHS.date AS date_other,
		                RHS.support_rate AS support_rate_other,
		                RHS.consider_rate AS consider_rate_other,
		                RHS.oppose_rate AS oppose_rate_other
		         FROM candidate AS LHS
		         INNER JOIN candidate AS RHS ON (LHS.people_id = RHS.people_id
		                                            AND LHS.consider_rate = RHS.unsure_rate))) AS RHS ON (LHS.candidate_id = RHS.candidate_id
		                                                                                                  AND LHS.people_id = RHS.people_id
		                                                                                                  AND LHS.poll_source = RHS.poll_source
		                                                                                                  AND LHS.date = RHS.date
		                                                                                                  AND LHS.support_rate = RHS.support_rate
		                                                                                                  AND LHS.consider_rate = RHS.consider_rate
		                                                                                                  AND LHS.oppose_rate = RHS.oppose_rate
		                                                                                                  AND LHS.unsure_rate = RHS.unsure_rate))
		ORDER BY name

	Empty DataFrame
	Columns: [name, sex]
	Index: []
Wrong output for base solution in instance spider/candidate_poll/0010 (1675)
	EXPECTED OUTPUT ====

	   avg_weight_  min_weight_ sex
	0    86.714286         82.0   M
	1    92.000000         90.0   F
	ACTUAL OUTPUT ====

		SELECT avg(weight),
		       min(weight),
		       sex
		FROM people
		GROUP BY sex

	   avg(weight)  min(weight) sex
	0    92.000000         90.0   F
	1    86.714286         82.0   M
Wrong output for ground truth in instance spider/candidate_poll/0010 (1675)
Wrong output for fuzzied solution in instance spider/performance_attendance/0008 (1677)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM performance
		GROUP BY LOCATION
		ORDER BY COUNT(*) DESC
		LIMIT 1

	         location
	0  Verizon Center
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT location_other AS LOCATION
		FROM
		  (SELECT LHS.location AS LOCATION,
		          LHS.n AS n,
		          RHS.location AS location_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT LOCATION,
		             COUNT() AS n
		      FROM performance
		      GROUP BY LOCATION) AS LHS
		   CROSS JOIN
		     (SELECT LOCATION,
		             COUNT() AS n
		      FROM performance
		      GROUP BY LOCATION) AS RHS)
		WHERE (n < n_other)
		ORDER BY LOCATION

	         location
	0   Verizon Cente
	1  Verizon Center
No solution for instance spider/performance_attendance/0013 (1679)
Wrong output for fuzzied solution in instance spider/performance_attendance/0006 (1680)
	EXPECTED OUTPUT ====

		SELECT Date
		FROM performance
		ORDER BY Attendance DESC
		LIMIT 1

	          date
	0  February 11
	ACTUAL OUTPUT ====

		
		SELECT date
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM performance
		      ORDER BY LOCATION)
		   LIMIT 1)

	        date
	0  February 
No solution for instance spider/performance_attendance/0012 (1682)
Wrong output for fuzzied solution in instance spider/performance_attendance/0015 (1683)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM member
		WHERE Member_ID NOT IN
		    (SELECT Member_ID
		     FROM member_attendance)

	                   name
	0           Andrew Mote
	1           Andrew Mote
	2          Andrew Moten
	3          Charlie Burk
	4         Charlie Burke
	5        Héctor Campana
	6        Héctor Campana
	7        Joshua Pittman
	8        Joshua Pittman
	9   QF67VHéctor Campana
	10    RHVeiAndrew Moten
	11   TITAndrew Moten7FE
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM member AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT LHS.member_id AS member_id,
		                     LHS.performance_id AS performance_id,
		                     LHS.num_of_pieces AS num_of_pieces,
		                     RHS.member_id AS member_id_other,
		                     RHS.name AS name,
		                     RHS.nationality AS nationality,
		                     RHS.role AS ROLE
		              FROM member_attendance AS LHS
		              CROSS JOIN member AS RHS)
		           WHERE (member_id >= member_id_other
		                  AND member_id = member_id_other)) AS RHS
		        WHERE (LHS.name = RHS.name
		               AND LHS.role = RHS.role) ))
		ORDER BY name

	                   name
	0           Andrew Mote
	1           Andrew Mote
	2          Andrew Moten
	3         Charlie Burke
	4        Héctor Campana
	5        Héctor Campana
	6        Joshua Pittman
	7        Joshua Pittman
	8   QF67VHéctor Campana
	9     RHVeiAndrew Moten
	10   TITAndrew Moten7FE
Wrong output for base solution in instance spider/performance_attendance/0005 (1684)
	EXPECTED OUTPUT ====

	   avg_attendance_
	0      1649.166667
	ACTUAL OUTPUT ====

		SELECT avg(Attendance)
		FROM performance

	   avg(attendance)
	0      1649.166667
Wrong output for ground truth in instance spider/performance_attendance/0005 (1684)
No solution for instance spider/performance_attendance/0014 (1687)
No solution for instance spider/performance_attendance/0011 (1689)
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0033 (1690)
	EXPECTED OUTPUT ====

		SELECT transaction_type_code
		FROM TRANSACTIONS
		GROUP BY transaction_type_code
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  transaction_type_code
	0                   SAL
	ACTUAL OUTPUT ====

		
		SELECT transaction_type_code
		FROM
		  (SELECT transaction_type_code,
		          COUNT() AS n
		   FROM
		     (SELECT investor_id AS transaction_id,
		             investor_id,
		             transaction_type_code,
		             date_of_transaction,
		             amount_of_transaction,
		             share_count,
		             other_details,
		             transaction_type_code_other,
		             date_of_transaction_other,
		             amount_of_transaction_other,
		             share_count_other,
		             other_details_other
		      FROM
		        (SELECT transaction_id,
		                transaction_id AS investor_id,
		                transaction_type_code,
		                date_of_transaction,
		                amount_of_transaction,
		                share_count,
		                other_details,
		                transaction_type_code_other,
		                date_of_transaction_other,
		                amount_of_transaction_other,
		                share_count_other,
		                other_details_other
		         FROM
		           (SELECT LHS.transaction_id AS transaction_id,
		                   LHS.investor_id AS investor_id,
		                   LHS.transaction_type_code AS transaction_type_code,
		                   LHS.date_of_transaction AS date_of_transaction,
		                   LHS.amount_of_transaction AS amount_of_transaction,
		                   LHS.share_count AS share_count,
		                   LHS.other_details AS other_details,
		                   RHS.transaction_type_code AS transaction_type_code_other,
		                   RHS.date_of_transaction AS date_of_transaction_other,
		                   RHS.amount_of_transaction AS amount_of_transaction_other,
		                   RHS.share_count AS share_count_other,
		                   RHS.other_details AS other_details_other
		            FROM transactions AS LHS
		            INNER JOIN transactions AS RHS ON (LHS.transaction_id = RHS.investor_id
		                                                  AND LHS.investor_id = RHS.transaction_id))))
		   GROUP BY transaction_type_code)
		ORDER BY transaction_type_code

	Empty DataFrame
	Columns: [transaction_type_code]
	Index: []
No solution for instance spider/tracking_share_transactions/0036 (1693)
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0039 (1696)
	EXPECTED OUTPUT ====

		SELECT date_of_transaction
		FROM TRANSACTIONS
		WHERE share_count >= 100
		  OR amount_of_transaction >= 100

	    date_of_transaction
	0   1981-01-28 08:07:03
	1   1985-04-01 06:24:17
	2   1985-04-01 06:24:17
	3   1985-04-01 06:24:17
	4   1985-04-01 06:24:17
	5   1985-04-01 06:24:17
	6   1985-04-01 06:24:17
	7   1985-10-08 13:13:39
	8   1985-10-08 13:13:39
	9   1990-03-20 10:15:42
	10  1990-03-20 10:15:42
	11  1990-03-20 10:15:42
	12  1997-12-30 05:05:40
	13  1997-12-30 05:05:40
	14  1997-12-30 05:05:40
	15  1997-12-30 05:05:40
	16  2000-07-08 02:22:37
	17  2000-07-08 02:22:37
	18  2000-07-08 02:22:37
	19  2000-07-08 02:22:37
	20  2000-07-08 02:22:37
	21  2000-07-08 02:22:37
	22  2000-07-08 02:22:37
	23  2002-09-12 15:51:51
	24  2002-09-12 15:51:51
	25  2002-09-12 15:51:51
	26  2002-09-12 15:51:51
	27  2002-09-12 15:51:51
	28  2002-09-12 15:51:51
	29  2004-01-18 20:37:50
	30  2004-01-18 20:37:50
	31  2004-01-18 20:37:50
	32  2004-08-26 04:44:02
	33  2004-08-26 04:44:02
	34  2004-08-26 04:44:02
	35  2068-02-25 01:03:26
	36  2068-02-25 01:03:26
	37  2068-02-25 01:03:26
	ACTUAL OUTPUT ====

		
		SELECT date_of_transaction
		FROM transactions
		WHERE (amount_of_transaction != 100.0)
		ORDER BY date_of_transaction

	    date_of_transaction
	0   1981-01-28 08:07:03
	1   1985-04-01 06:24:17
	2   1985-04-01 06:24:17
	3   1985-04-01 06:24:17
	4   1985-04-01 06:24:17
	5   1985-04-01 06:24:17
	6   1985-04-01 06:24:17
	7   1985-10-08 13:13:39
	8   1985-10-08 13:13:39
	9   1990-03-20 10:15:42
	10  1990-03-20 10:15:42
	11  1990-03-20 10:15:42
	12  1997-12-30 05:05:40
	13  1997-12-30 05:05:40
	14  1997-12-30 05:05:40
	15  2000-07-08 02:22:37
	16  2000-07-08 02:22:37
	17  2000-07-08 02:22:37
	18  2000-07-08 02:22:37
	19  2000-07-08 02:22:37
	20  2000-07-08 02:22:37
	21  2000-07-08 02:22:37
	22  2002-09-12 15:51:51
	23  2002-09-12 15:51:51
	24  2002-09-12 15:51:51
	25  2002-09-12 15:51:51
	26  2002-09-12 15:51:51
	27  2002-09-12 15:51:51
	28  2004-01-18 20:37:50
	29  2004-01-18 20:37:50
	30  2004-08-26 04:44:02
	31  2004-08-26 04:44:02
	32  2004-08-26 04:44:02
	33  2004-08-26 04:44:02
	34  2004-08-26 04:44:02
	35  2068-02-25 01:03:26
	36  2068-02-25 01:03:26
	37  2068-02-25 01:03:26
No solution for instance spider/tracking_share_transactions/0038 (1697)
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0027 (1699)
	EXPECTED OUTPUT ====

		SELECT investor_id,
		       avg(amount_of_transaction)
		FROM TRANSACTIONS
		GROUP BY investor_id

	   investor_id  avg(amount_of_transaction)
	0            5                4.877797e+04
	1           13                6.541759e+04
	2           18                3.905886e+07
	3           11                1.037831e+08
	ACTUAL OUTPUT ====

		
		SELECT investor_id,
		       meanamount_of_transaction AS avg_amount_of_transaction_
		FROM
		  (SELECT investor_id,
		          other_details,
		          AVG(amount_of_transaction) AS meanamount_of_transaction
		   FROM transactions
		   GROUP BY investor_id,
		            other_details)
		ORDER BY investor_id

	   investor_id  avg_amount_of_transaction_
	0            5                4.877797e+04
	1           13                4.877797e+04
	2           18                8.205719e+04
	3           11                8.205721e+04
	4           13                8.205722e+04
	5           18                7.803567e+07
	6           11                2.074841e+08
Wrong output for base solution in instance spider/tracking_share_transactions/0013 (1702)
	EXPECTED OUTPUT ====

		SELECT date_of_transaction
		FROM TRANSACTIONS
		WHERE share_count > 100
		  OR amount_of_transaction > 1000

	    date_of_transaction
	0   1977-08-13 02:18:47
	1   1977-08-17 13:13:30
	2   1979-04-27 06:03:59
	3   1981-01-28 08:07:03
	4   1982-06-06 17:19:00
	5   1983-11-01 17:57:27
	6   1985-10-08 13:13:39
	7   1988-09-16 19:02:51
	8   1990-12-02 09:03:38
	9   1997-12-30 05:05:40
	10  2000-04-03 20:55:43
	11  2001-11-28 15:06:25
	12  2002-09-13 03:04:56
	13  2004-01-18 20:37:50
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT date_of_transaction_other AS date_of_transaction
		FROM
		  (SELECT *
		   FROM
		     (SELECT LHS.transaction_id AS transaction_id,
		             LHS.investor_id AS investor_id,
		             LHS.transaction_type_code AS transaction_type_code,
		             LHS.date_of_transaction AS date_of_transaction,
		             LHS.amount_of_transaction AS amount_of_transaction,
		             LHS.share_count AS share_count,
		             LHS.other_details AS other_details,
		             RHS.transaction_id AS transaction_id_other,
		             RHS.investor_id AS investor_id_other,
		             RHS.transaction_type_code AS transaction_type_code_other,
		             RHS.date_of_transaction AS date_of_transaction_other,
		             RHS.amount_of_transaction AS amount_of_transaction_other,
		             RHS.share_count AS share_count_other,
		             RHS.other_details AS other_details_other
		      FROM transactions AS LHS
		      CROSS JOIN transactions AS RHS)
		   WHERE (share_count != share_count_other
		          OR amount_of_transaction < amount_of_transaction_other))
		WHERE (amount_of_transaction = 100.0
		       OR amount_of_transaction >= 1000.0)
		ORDER BY date_of_transaction

	    date_of_transaction
	0   1977-08-13 02:18:47
	1   1977-08-17 13:13:30
	2   1979-04-27 06:03:59
	3   1981-01-28 08:07:03
	4   1982-06-06 17:19:00
	5   1983-11-01 17:57:27
	6   1985-10-08 13:13:39
	7   1988-09-16 19:02:51
	8   1990-12-02 09:03:38
	9   1997-12-30 05:05:40
	10  2000-04-03 20:55:43
	11  2001-11-28 15:06:25
	12  2002-04-07 20:28:37
	13  2002-09-13 03:04:56
	14  2004-01-18 20:37:50
Wrong output for base solution in instance spider/tracking_share_transactions/0006 (1703)
	EXPECTED OUTPUT ====

	  sum_share_count_
	0      685745029.0
	ACTUAL OUTPUT ====

		SELECT sum(share_count)
		FROM TRANSACTIONS

	   sum(share_count)
	0       685745029.0
Wrong output for ground truth in instance spider/tracking_share_transactions/0006 (1703)
No solution for instance spider/tracking_share_transactions/0012 (1705)
Wrong output for base solution in instance spider/tracking_share_transactions/0026 (1706)
	EXPECTED OUTPUT ====

	   investor_id  avg_share_count_
	0           20      0.000000e+00
	1           18      2.980000e+02
	2            8      9.300000e+02
	3            7      1.522000e+03
	4           14      8.040000e+03
	5           19      4.797100e+04
	6           17      9.617800e+04
	7            2      8.316680e+05
	8            6      8.718572e+06
	9            3      2.250533e+08
	ACTUAL OUTPUT ====

		SELECT investor_id,
		       avg(share_count)
		FROM TRANSACTIONS
		GROUP BY investor_id
		ORDER BY avg(share_count)

	   investor_id  avg(share_count)
	0           20      0.000000e+00
	1           18      2.980000e+02
	2            8      9.300000e+02
	3            7      1.522000e+03
	4           14      8.040000e+03
	5           19      4.797100e+04
	6           17      9.617800e+04
	7            2      8.316680e+05
	8            6      8.718572e+06
	9            3      2.250533e+08
Wrong output for ground truth in instance spider/tracking_share_transactions/0026 (1706)
Wrong output for base solution in instance spider/tracking_share_transactions/0015 (1707)
	EXPECTED OUTPUT ====

		SELECT T1.Investor_details
		FROM INVESTORS AS T1
		JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id
		WHERE T2.share_count > 100

	   investor_details
	0                 d
	1                 d
	2                 k
	3                 k
	4                 l
	5                 l
	6                 l
	7                 t
	8                 w
	9                 w
	10                w
	11                z
	12                z
	ACTUAL OUTPUT ====

		
		SELECT investor_details
		FROM
		  (SELECT LHS.transaction_id AS transaction_id,
		          LHS.investor_id AS investor_id,
		          LHS.transaction_type_code AS transaction_type_code,
		          LHS.date_of_transaction AS date_of_transaction,
		          LHS.amount_of_transaction AS amount_of_transaction,
		          LHS.share_count AS share_count,
		          LHS.other_details AS other_details,
		          RHS.investor_id AS investor_id_other,
		          RHS.investor_details AS investor_details,
		          RHS.transaction_id AS transaction_id_other,
		          RHS.transaction_type_code AS transaction_type_code_other,
		          RHS.date_of_transaction AS date_of_transaction_other,
		          RHS.amount_of_transaction AS amount_of_transaction_other,
		          RHS.share_count AS share_count_other,
		          RHS.other_details AS other_details_other
		   FROM transactions AS LHS
		   CROSS JOIN
		     (SELECT LHS.investor_id AS investor_id,
		             LHS.investor_details AS investor_details,
		             RHS.transaction_id AS transaction_id,
		             RHS.transaction_type_code AS transaction_type_code,
		             RHS.date_of_transaction AS date_of_transaction,
		             RHS.amount_of_transaction AS amount_of_transaction,
		             RHS.share_count AS share_count,
		             RHS.other_details AS other_details
		      FROM investors AS LHS
		      INNER JOIN transactions AS RHS ON (LHS.investor_id = RHS.investor_id)) AS RHS)
		WHERE (share_count = share_count_other)
		ORDER BY investor_details

	   investor_details
	0                 d
	1                 d
	2                 d
	3                 d
	4                 j
	5                 j
	6                 k
	7                 k
	8                 l
	9                 l
	10                l
	11                t
	12                w
	13                w
	14                w
	15                z
	16                z
Wrong output for base solution in instance spider/tracking_share_transactions/0005 (1708)
	EXPECTED OUTPUT ====

	   date_of_transaction share_count
	0  1977-08-13 02:18:47         NaN
	1  1977-08-17 13:13:30         930
	2  1979-04-27 06:03:59        8580
	3  1981-01-28 08:07:03     1654756
	4  1982-06-06 17:19:00           9
	5  1983-11-01 17:57:27         587
	6  1985-10-08 13:13:39        2751
	7  1988-09-16 19:02:51     8718572
	8  1990-12-02 09:03:38        1522
	9  1997-12-30 05:05:40       93191
	10 2000-04-03 20:55:43   674529892
	11 2001-11-28 15:06:25        8040
	12 2002-04-07 20:28:37         NaN
	13 2002-09-13 03:04:56      630021
	14 2004-01-18 20:37:50       96178
	ACTUAL OUTPUT ====

		SELECT date_of_transaction,
		       share_count
		FROM TRANSACTIONS

	    date_of_transaction share_count
	0   1977-08-13 02:18:47            
	1   1977-08-17 13:13:30         930
	2   1979-04-27 06:03:59        8580
	3   1981-01-28 08:07:03     1654756
	4   1982-06-06 17:19:00           9
	5   1983-11-01 17:57:27         587
	6   1985-10-08 13:13:39        2751
	7   1988-09-16 19:02:51     8718572
	8   1990-12-02 09:03:38        1522
	9   1997-12-30 05:05:40       93191
	10  2000-04-03 20:55:43   674529892
	11  2001-11-28 15:06:25        8040
	12  2002-04-07 20:28:37            
	13  2002-09-13 03:04:56      630021
	14  2004-01-18 20:37:50       96178
Wrong output for ground truth in instance spider/tracking_share_transactions/0005 (1708)
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0016 (1709)
	EXPECTED OUTPUT ====

		SELECT COUNT(DISTINCT transaction_type_code)
		FROM TRANSACTIONS

	   count(distinct transaction_type_code)
	0                                      3
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count_distinct_transaction_type_code_
		FROM
		  (SELECT other_details,
		          COUNT(DISTINCT transaction_type_code) AS n_distinct
		   FROM transactions
		   GROUP BY other_details)
		ORDER BY count_distinct_transaction_type_code_

	   count_distinct_transaction_type_code_
	0                                      1
	1                                      1
	2                                      1
	3                                      1
	4                                      1
	5                                      2
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0032 (1710)
	EXPECTED OUTPUT ====

		SELECT transaction_type_code
		FROM TRANSACTIONS
		GROUP BY transaction_type_code
		ORDER BY COUNT(*) ASC
		LIMIT 1

	  transaction_type_code
	0             gNjjNSALE
	ACTUAL OUTPUT ====

		
		SELECT transaction_type_code
		FROM
		  (SELECT LHS.transaction_id AS transaction_id,
		          LHS.investor_id AS investor_id,
		          LHS.transaction_type_code AS transaction_type_code,
		          LHS.date_of_transaction AS date_of_transaction,
		          LHS.amount_of_transaction AS amount_of_transaction,
		          LHS.share_count AS share_count,
		          LHS.other_details AS other_details,
		          RHS.date_of_transaction AS date_of_transaction_other
		   FROM transactions AS LHS
		   INNER JOIN
		     (SELECT date_of_transaction,
		             investor_id,
		             COUNT() AS n
		      FROM transactions
		      GROUP BY date_of_transaction,
		               investor_id) AS RHS ON (LHS.transaction_id = RHS.n
		                                       AND LHS.investor_id = RHS.investor_id))
		ORDER BY transaction_type_code

	  transaction_type_code
	0             gNjjNSALE
	1             gNjjNSALE
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0041 (1712)
	EXPECTED OUTPUT ====

		SELECT lot_details
		FROM Lots
		EXCEPT
		SELECT T1.lot_details
		FROM Lots AS T1
		JOIN transactions_lots AS T2 ON T1.lot_id = T2.lot_id

	Empty DataFrame
	Columns: [lot_details]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT lot_details
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM lots AS LHS
		         WHERE NOT EXISTS
		             (SELECT 1
		              FROM transactions_lots AS RHS
		              WHERE (LHS.lot_id = RHS.lot_id) ))
		      ORDER BY investor_id)
		   LIMIT 2)

	  lot_details
	0           s
No solution for instance spider/tracking_share_transactions/0035 (1713)
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0020 (1714)
	EXPECTED OUTPUT ====

		SELECT T1.sales_details,
		       T2.date_of_transaction
		FROM SALES AS T1
		JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id
		WHERE T2.amount_of_transaction < 3000

	  sales_details  date_of_transaction
	0                1992-09-01 14:00:17
	1        prPypQ  1999-12-07 16:58:59
	ACTUAL OUTPUT ====

		
		SELECT sales_details,
		       date_of_transaction
		FROM
		  (SELECT transaction_id,
		          investor_id,
		          transaction_type_code,
		          date_of_transaction,
		          amount_of_transaction,
		          share_count,
		          other_details,
		          sales_details,
		          transaction_id AS sales_transaction_id
		   FROM
		     (SELECT LHS.transaction_id AS transaction_id,
		             LHS.investor_id AS investor_id,
		             LHS.transaction_type_code AS transaction_type_code,
		             LHS.date_of_transaction AS date_of_transaction,
		             LHS.amount_of_transaction AS amount_of_transaction,
		             LHS.share_count AS share_count,
		             LHS.other_details AS other_details,
		             RHS.sales_details AS sales_details
		      FROM transactions AS LHS
		      INNER JOIN sales AS RHS ON (LHS.transaction_id = RHS.sales_transaction_id)))
		WHERE (amount_of_transaction <= 3000.0)
		ORDER BY sales_details

	  sales_details  date_of_transaction
	0             p  1991-05-04 06:36:26
	1             p  1992-01-11 03:03:10
	2                1992-09-01 14:00:17
	3        prPypQ  1999-12-07 16:58:59
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0034 (1717)
	EXPECTED OUTPUT ====

		SELECT T1.transaction_type_description
		FROM Ref_Transaction_Types AS T1
		JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code
		GROUP BY T1.transaction_type_code
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  transaction_type_description
	0                          Sal
	ACTUAL OUTPUT ====

		
		SELECT transaction_type_description
		FROM
		  (SELECT LHS.transaction_type_code AS transaction_type_code,
		          LHS.transaction_type_description AS transaction_type_description,
		          LHS.n AS n,
		          RHS.investor_id AS investor_id,
		          RHS.date_of_transaction AS date_of_transaction,
		          RHS.amount_of_transaction AS amount_of_transaction,
		          RHS.share_count AS share_count,
		          RHS.other_details AS other_details
		   FROM
		     (SELECT transaction_type_code,
		             transaction_type_description,
		             COUNT(*) OVER () AS n
		      FROM ref_transaction_types) AS LHS
		   INNER JOIN transactions AS RHS ON (LHS.n = RHS.transaction_id
		                                         AND LHS.transaction_type_code = RHS.transaction_type_code))
		ORDER BY transaction_type_description

	Empty DataFrame
	Columns: [transaction_type_description]
	Index: []
Wrong output for base solution in instance spider/tracking_share_transactions/0024 (1718)
	EXPECTED OUTPUT ====

	  transaction_type_code max_share_count_ min_share_count_
	0                   PUR            93191              NaN
	1                  SALE            96178              NaN
	ACTUAL OUTPUT ====

		SELECT transaction_type_code,
		       max(share_count),
		       min(share_count)
		FROM TRANSACTIONS
		GROUP BY transaction_type_code

	  transaction_type_code max(share_count) min(share_count)
	0                   PUR            93191                 
	1                  SALE            96178                 
Wrong output for ground truth in instance spider/tracking_share_transactions/0024 (1718)
No solution for instance spider/tracking_share_transactions/0021 (1719)
No solution for instance spider/tracking_share_transactions/0014 (1722)
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0009 (1723)
	EXPECTED OUTPUT ====

		SELECT avg(amount_of_transaction)
		FROM TRANSACTIONS
		WHERE transaction_type_code = "SALE"

	  avg(amount_of_transaction)
	0                       None
	ACTUAL OUTPUT ====

		
		SELECT `meanamount_of_transaction` AS `avg_amount_of_transaction_`
		FROM
		  (SELECT `transaction_type_code`,
		          AVG(`amount_of_transaction`) AS `meanamount_of_transaction`
		   FROM
		     (SELECT *
		      FROM `transactions`
		      WHERE (`transaction_type_code` = 'SALE'))
		   GROUP BY transaction_type_code)
		ORDER BY avg_amount_of_transaction_

	Empty DataFrame
	Columns: [avg_amount_of_transaction_]
	Index: []
Wrong output for base solution in instance spider/tracking_share_transactions/0025 (1724)
	EXPECTED OUTPUT ====

	   investor_id  avg_share_count_
	0           20      0.000000e+00
	1           18      2.980000e+02
	2            8      9.300000e+02
	3            7      1.522000e+03
	4           14      8.040000e+03
	5           19      4.797100e+04
	6           17      9.617800e+04
	7            2      8.316680e+05
	8            6      8.718572e+06
	9            3      2.250533e+08
	ACTUAL OUTPUT ====

		SELECT investor_id,
		       avg(share_count)
		FROM TRANSACTIONS
		GROUP BY investor_id

	   investor_id  avg(share_count)
	0           20      0.000000e+00
	1           18      2.980000e+02
	2            8      9.300000e+02
	3            7      1.522000e+03
	4           14      8.040000e+03
	5           19      4.797100e+04
	6           17      9.617800e+04
	7            2      8.316680e+05
	8            6      8.718572e+06
	9            3      2.250533e+08
Wrong output for ground truth in instance spider/tracking_share_transactions/0025 (1724)
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0011 (1725)
	EXPECTED OUTPUT ====

		SELECT min(amount_of_transaction)
		FROM TRANSACTIONS
		WHERE transaction_type_code = "PUR"
		  AND share_count > 50

	  min(amount_of_transaction)
	0                       None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT MIN(`amount_of_transaction`) OVER () AS `min_amount_of_transaction_`
		FROM `transactions`
		WHERE (`transaction_type_code` = 'PUR'
		       OR amount_of_transaction >= 50.0)
		ORDER BY min_amount_of_transaction_

	   min_amount_of_transaction_
	0                   48777.979
Wrong output for base solution in instance spider/tracking_share_transactions/0029 (1726)
	EXPECTED OUTPUT ====

	   lot_id  avg_amount_of_transaction_
	0       9                0.000000e+00
	1      15                1.000000e+00
	2      10                1.308447e+01
	3      11                2.440261e+04
	4       4                4.877797e+04
	5       8                4.877797e+04
	6       1                1.011193e+05
	7      14                1.756428e+05
	8       3                2.074841e+08
	ACTUAL OUTPUT ====

		SELECT T2.lot_id,
		       avg(amount_of_transaction)
		FROM TRANSACTIONS AS T1
		JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id
		GROUP BY T2.lot_id
		ORDER BY avg(amount_of_transaction)

	   lot_id  avg(amount_of_transaction)
	0       9                0.000000e+00
	1      15                1.000000e+00
	2      10                1.308447e+01
	3      11                2.440261e+04
	4       4                4.877797e+04
	5       8                4.877797e+04
	6       1                1.011193e+05
	7      14                1.756428e+05
	8       3                2.074841e+08
Wrong output for ground truth in instance spider/tracking_share_transactions/0029 (1726)
No solution for instance spider/tracking_share_transactions/0040 (1728)
Wrong output for base solution in instance spider/tracking_share_transactions/0028 (1729)
	EXPECTED OUTPUT ====

	   lot_id  avg_amount_of_transaction_
	0       9                0.000000e+00
	1      15                1.000000e+00
	2      10                1.308447e+01
	3      11                2.440261e+04
	4       4                4.877797e+04
	5       8                4.877797e+04
	6       1                1.011193e+05
	7      14                1.756428e+05
	8       3                2.074841e+08
	ACTUAL OUTPUT ====

		SELECT T2.lot_id,
		       avg(amount_of_transaction)
		FROM TRANSACTIONS AS T1
		JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id
		GROUP BY T2.lot_id

	   lot_id  avg(amount_of_transaction)
	0       9                0.000000e+00
	1      15                1.000000e+00
	2      10                1.308447e+01
	3      11                2.440261e+04
	4       4                4.877797e+04
	5       8                4.877797e+04
	6       1                1.011193e+05
	7      14                1.756428e+05
	8       3                2.074841e+08
Wrong output for ground truth in instance spider/tracking_share_transactions/0028 (1729)
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0031 (1730)
	EXPECTED OUTPUT ====

		SELECT investor_id,
		       COUNT(*)
		FROM TRANSACTIONS
		GROUP BY investor_id

	   investor_id  count(*)
	0            5         1
	1           11         2
	2           13         2
	3           18         2
	ACTUAL OUTPUT ====

		
		SELECT investor_id,
		       n AS count___
		FROM
		  (SELECT investor_id,
		          other_details,
		          COUNT() AS n
		   FROM transactions
		   GROUP BY investor_id,
		            other_details)
		ORDER BY investor_id

	   investor_id  count___
	0            5         1
	1           11         1
	2           11         1
	3           13         1
	4           13         1
	5           18         1
	6           18         1
No solution for instance spider/medicine_enzyme_interaction/0008 (1733)
Wrong output for fuzzied solution in instance spider/medicine_enzyme_interaction/0022 (1735)
	EXPECTED OUTPUT ====

		SELECT trade_name,
		       count(*)
		FROM medicine
		GROUP BY trade_name

	       trade_name  count(*)
	0         Buronil         1
	1    BuronilX3hSC         1
	2           Solia         1
	3   dOdsGPrazinil         1
	4    tArF5Buronil         1
	5          uronil         1
	6         Lonasen         2
	7         Prazini         2
	8          Solian         2
	9          Invega         4
	10       Prazinil         4
	ACTUAL OUTPUT ====

		
		SELECT trade_name,
		       n AS count___
		FROM
		  (SELECT fda_approved,
		          trade_name,
		          COUNT() AS n
		   FROM medicine
		   GROUP BY fda_approved,
		            trade_name)
		ORDER BY trade_name

	       trade_name  count___
	0         Buronil         1
	1    BuronilX3hSC         1
	2         Lonasen         1
	3         Lonasen         1
	4         Prazini         1
	5         Prazini         1
	6        Prazinil         1
	7        Prazinil         1
	8           Solia         1
	9   dOdsGPrazinil         1
	10   tArF5Buronil         1
	11         uronil         1
	12       Prazinil         2
	13         Solian         2
	14         Invega         4
Wrong output for fuzzied solution in instance spider/medicine_enzyme_interaction/0013 (1736)
	EXPECTED OUTPUT ====

		SELECT interaction_type,
		       count(*)
		FROM medicine_enzyme_interaction
		GROUP BY interaction_type
		ORDER BY count(*) DESC
		LIMIT 1

	  interaction_type  count(*)
	0        inhibitor        23
	ACTUAL OUTPUT ====

		
		SELECT interaction_type_other AS interaction_type,
		       n_other AS count___
		FROM
		  (SELECT LHS.interaction_type AS interaction_type,
		          LHS.n AS n,
		          RHS.interaction_type AS interaction_type_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT interaction_type,
		             COUNT() AS n
		      FROM medicine_enzyme_interaction
		      GROUP BY interaction_type) AS LHS
		   CROSS JOIN
		     (SELECT interaction_type,
		             COUNT() AS n
		      FROM medicine_enzyme_interaction
		      GROUP BY interaction_type) AS RHS)
		WHERE (n < n_other)
		ORDER BY interaction_type

	    interaction_type  count___
	0           inhibito         2
	1           inhibito         2
	2           inhibito         2
	3           inhibito         2
	4           inhibito         2
	..               ...       ...
	177        inhibitor        23
	178        inhibitor        23
	179        inhibitor        23
	180        inhibitor        23
	181        inhibitor        23
	
	[182 rows x 2 columns]
No solution for instance spider/medicine_enzyme_interaction/0012 (1739)
No solution for instance spider/medicine_enzyme_interaction/0015 (1740)
No solution for instance spider/medicine_enzyme_interaction/0018 (1743)
No solution for instance spider/medicine_enzyme_interaction/0019 (1745)
No solution for instance spider/medicine_enzyme_interaction/0021 (1747)
No solution for instance spider/medicine_enzyme_interaction/0011 (1751)
Wrong output for fuzzied solution in instance spider/wedding/0008 (1755)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM people
		WHERE is_male = 'F'
		  AND age > 30

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `age`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM `people`
		      WHERE (`is_male` = 'F'
		             AND age > 30)))
		ORDER BY count___

	   count___
	0         3
No solution for instance spider/wedding/0013 (1757)
Wrong output for fuzzied solution in instance spider/wedding/0006 (1758)
	EXPECTED OUTPUT ====

		SELECT open_date,
		       count(*)
		FROM church
		GROUP BY open_date

	   open_date  count(*)
	0       1830         1
	1       1836         1
	2       1840         1
	3       1841         1
	4       1842         1
	5       1831         3
	ACTUAL OUTPUT ====

		
		SELECT open_date,
		       n AS count___
		FROM
		  (SELECT church_id,
		          open_date,
		          COUNT() AS n
		   FROM church
		   GROUP BY church_id,
		            open_date)
		ORDER BY open_date

	   open_date  count___
	0       1830         1
	1       1831         1
	2       1831         1
	3       1831         1
	4       1836         1
	5       1840         1
	6       1841         1
	7       1842         1
Error while executing solution for instance spider/wedding/0012 (1759)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/wedding/0012 (1759)
No solution for instance spider/wedding/0018 (1761)
No solution for instance spider/wedding/0020 (1762)
Wrong output for fuzzied solution in instance spider/wedding/0007 (1764)
	EXPECTED OUTPUT ====

		SELECT name,
		       open_date
		FROM church
		ORDER BY open_date DESC
		LIMIT 3

	                                                name  open_date
	0                 Church of Christ (Parrishite)qfJp2       1841
	1  Church of Jesus Christ, the Bride, the Lamb's ...       1840
	2                                 Y8nq4Alston Church       1842
	ACTUAL OUTPUT ====

		
		SELECT name,
		       open_date
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM church
		      ORDER BY church_id DESC)
		   LIMIT 3)

	                                 name  open_date
	0       Church of Christ (Parrishite)       1831
	1  Church of Christ (Parrishite)qfJp2       1841
	2               Pure Church of Christ       1831
No solution for instance spider/wedding/0014 (1766)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for base solution in instance spider/wedding/0010 (1768)
	EXPECTED OUTPUT ====

	   min_age_  max_age_   avg_age_
	0        25        36  30.166667
	ACTUAL OUTPUT ====

		SELECT min(age),
		       max(age),
		       avg(age)
		FROM people

	   min(age)  max(age)   avg(age)
	0        25        36  30.166667
Wrong output for ground truth in instance spider/wedding/0010 (1768)
Wrong output for fuzzied solution in instance spider/debate/0008 (1770)
	EXPECTED OUTPUT ====

		SELECT Party
		FROM people
		GROUP BY Party
		ORDER BY COUNT(*) DESC
		LIMIT 1

	        party
	0  Republican
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT party
		FROM
		  (SELECT LHS.people_id AS people_id,
		          LHS.district AS district,
		          LHS.name AS name,
		          LHS.party AS party,
		          LHS.age AS age,
		          RHS.people_id AS people_id_other
		   FROM people AS LHS
		   INNER JOIN
		     (SELECT people_id,
		             COUNT() AS n
		      FROM people
		      GROUP BY people_id) AS RHS ON (LHS.people_id = RHS.n))
		ORDER BY party

	Empty DataFrame
	Columns: [party]
	Index: []
Wrong output for fuzzied solution in instance spider/debate/0013 (1772)
	EXPECTED OUTPUT ====

		SELECT T2.Name,
		       COUNT(*)
		FROM debate_people AS T1
		JOIN people AS T2 ON T1.Affirmative = T2.People_ID
		GROUP BY T2.Name

	                   name  count(*)
	0   XIfJohn CochraneByM         2
	1  FBNNPHorace F. Clark         3
	2       Horace F. Clark         3
	3   Thomas J. Barr4MoFo         3
	4  ukHZzHorace F. Clark         3
	5        Thomas J. Barr         5
	6         John Cochrane         7
	ACTUAL OUTPUT ====

		
		SELECT name,
		       n AS count___
		FROM
		  (SELECT LHS.people_id AS people_id,
		          LHS.district AS district,
		          LHS.name AS name,
		          LHS.party AS party,
		          LHS.age AS age,
		          RHS.n AS n
		   FROM people AS LHS
		   INNER JOIN
		     (SELECT affirmative,
		             COUNT() AS n
		      FROM debate_people
		      GROUP BY affirmative) AS RHS ON (LHS.people_id = RHS.affirmative))
		ORDER BY name

	                   name  count___
	0        Thomas J. Barr         2
	1   XIfJohn CochraneByM         2
	2  FBNNPHorace F. Clark         3
	3       Horace F. Clark         3
	4         John Cochrane         3
	5        Thomas J. Barr         3
	6   Thomas J. Barr4MoFo         3
	7  ukHZzHorace F. Clark         3
	8         John Cochrane         4
Wrong output for fuzzied solution in instance spider/debate/0012 (1775)
	EXPECTED OUTPUT ====

		SELECT T3.Name
		FROM debate_people AS T1
		JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID
		JOIN people AS T3 ON T1.Affirmative = T3.People_ID
		WHERE T2.Num_of_Audience > 200

	                   name
	0        Horace F. Clar
	1        Horace F. Clar
	2        Horace F. Clar
	3        Horace F. Clar
	4        Horace F. Clar
	..                  ...
	68  fEoAwJames Humphrey
	69  fEoAwJames Humphrey
	70  fEoAwJames Humphrey
	71  fEoAwJames Humphrey
	72  fEoAwJames Humphrey
	
	[73 rows x 1 columns]
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.people_id AS people_id,
		          LHS.district AS district,
		          LHS.name AS name,
		          LHS.party AS party,
		          LHS.age AS age,
		          LHS.debate_id AS debate_id,
		          LHS.date AS date,
		          LHS.venue AS venue,
		          LHS.num_of_audience AS num_of_audience,
		          LHS.affirmative AS affirmative,
		          LHS.negative AS negative,
		          LHS.if_affirmative_win AS if_affirmative_win,
		          RHS.people_id AS people_id_other,
		          RHS.district AS district_other,
		          RHS.name AS name_other,
		          RHS.party AS party_other,
		          RHS.age AS age_other,
		          RHS.date AS date_other,
		          RHS.venue AS venue_other,
		          RHS.num_of_audience AS num_of_audience_other,
		          RHS.negative AS negative_other,
		          RHS.if_affirmative_win AS if_affirmative_win_other
		   FROM
		     (SELECT LHS.people_id AS people_id,
		             LHS.district AS district,
		             LHS.name AS name,
		             LHS.party AS party,
		             LHS.age AS age,
		             LHS.debate_id AS debate_id,
		             LHS.date AS date,
		             LHS.venue AS venue,
		             LHS.num_of_audience AS num_of_audience,
		             RHS.affirmative AS affirmative,
		             RHS.negative AS negative,
		             RHS.if_affirmative_win AS if_affirmative_win
		      FROM
		        (SELECT LHS.people_id AS people_id,
		                LHS.district AS district,
		                LHS.name AS name,
		                LHS.party AS party,
		                LHS.age AS age,
		                RHS.debate_id AS debate_id,
		                RHS.date AS date,
		                RHS.venue AS venue,
		                RHS.num_of_audience AS num_of_audience
		         FROM people AS LHS
		         CROSS JOIN debate AS RHS) AS LHS
		      INNER JOIN debate_people AS RHS ON (LHS.debate_id = RHS.debate_id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT LHS.people_id AS people_id,
		                LHS.district AS district,
		                LHS.name AS name,
		                LHS.party AS party,
		                LHS.age AS age,
		                LHS.debate_id AS debate_id,
		                LHS.date AS date,
		                LHS.venue AS venue,
		                LHS.num_of_audience AS num_of_audience,
		                RHS.affirmative AS affirmative,
		                RHS.negative AS negative,
		                RHS.if_affirmative_win AS if_affirmative_win
		         FROM
		           (SELECT LHS.people_id AS people_id,
		                   LHS.district AS district,
		                   LHS.name AS name,
		                   LHS.party AS party,
		                   LHS.age AS age,
		                   RHS.debate_id AS debate_id,
		                   RHS.date AS date,
		                   RHS.venue AS venue,
		                   RHS.num_of_audience AS num_of_audience
		            FROM people AS LHS
		            CROSS JOIN debate AS RHS) AS LHS
		         INNER JOIN debate_people AS RHS ON (LHS.debate_id = RHS.debate_id))
		      WHERE (num_of_audience >= 200)) AS RHS ON (LHS.people_id = RHS.affirmative
		                                                 AND LHS.debate_id = RHS.debate_id))
		ORDER BY name

	                  name
	0       Horace F. Clar
	1      Horace F. Clark
	2        James Humphre
	3       James Humphrey
	4    William B. Maclay
	5   c89hFGeorge Briggs
	6  fEoAwJames Humphrey
No solution for instance spider/debate/0015 (1776)
Wrong output for fuzzied solution in instance spider/debate/0005 (1777)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM people
		WHERE Age = 35
		  OR Age = 36

	             name
	0  Horace F. Clar
	1  Thomas J. Barr
	2   homas J. Barr
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM people
		WHERE (age < 35
		       OR age <= 36)
		ORDER BY name

	                  name
	0  9KCz(Thomas J. Barr
	1       Horace F. Clar
	2       Thomas J. Barr
	3        homas J. Barr
Wrong output for fuzzied solution in instance spider/debate/0014 (1780)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM debate_people AS T1
		JOIN people AS T2 ON T1.Negative = T2.People_ID
		GROUP BY T2.Name
		HAVING COUNT(*) >= 2

	                  name
	0        John Cochrane
	1       Thomas J. Barr
	2  Thomas J. Barr4MoFo
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT people_id,
		          district,
		          name,
		          party,
		          age,
		          n,
		          people_id AS negative
		   FROM
		     (SELECT LHS.people_id AS people_id,
		             LHS.district AS district,
		             LHS.name AS name,
		             LHS.party AS party,
		             LHS.age AS age,
		             RHS.n AS n
		      FROM people AS LHS
		      INNER JOIN
		        (SELECT negative,
		                COUNT() AS n
		         FROM debate_people
		         GROUP BY negative) AS RHS ON (LHS.people_id = RHS.negative)))
		WHERE (n >= 2)
		ORDER BY name

	                  name
	0        John Cochrane
	1        John Cochrane
	2       Thomas J. Barr
	3       Thomas J. Barr
	4  Thomas J. Barr4MoFo
No solution for instance spider/debate/0011 (1782)
No solution for instance spider/debate/0010 (1783)
No solution for instance spider/activity_1/0042 (1784)
No solution for instance spider/activity_1/0036 (1788)
No solution for instance spider/activity_1/0039 (1791)
Wrong output for fuzzied solution in instance spider/activity_1/0012 (1800)
	EXPECTED OUTPUT ====

		SELECT building
		FROM Faculty
		GROUP BY building
		ORDER BY count(*) DESC
		LIMIT 1

	  building
	0      NEB
	ACTUAL OUTPUT ====

		
		SELECT building
		FROM
		  (SELECT building,
		          room,
		          COUNT() AS n
		   FROM
		     (SELECT facid,
		             lname,
		             lname AS fname,
		             rank,
		             sex,
		             phone,
		             room,
		             building,
		             facid_other,
		             lname_other,
		             rank_other,
		             sex_other,
		             phone_other,
		             room_other,
		             building_other
		      FROM
		        (SELECT LHS.facid AS facid,
		                LHS.lname AS lname,
		                LHS.fname AS fname,
		                LHS.rank AS rank,
		                LHS.sex AS sex,
		                LHS.phone AS phone,
		                LHS.room AS room,
		                LHS.building AS building,
		                RHS.facid AS facid_other,
		                RHS.lname AS lname_other,
		                RHS.rank AS rank_other,
		                RHS.sex AS sex_other,
		                RHS.phone AS phone_other,
		                RHS.room AS room_other,
		                RHS.building AS building_other
		         FROM faculty AS LHS
		         INNER JOIN faculty AS RHS ON (LHS.lname = RHS.fname)))
		   GROUP BY building,
		            room)
		ORDER BY building

	Empty DataFrame
	Columns: [building]
	Index: []
No solution for instance spider/activity_1/0016 (1804)
Wrong output for fuzzied solution in instance spider/activity_1/0032 (1805)
	EXPECTED OUTPUT ====

		SELECT T3.activity_name
		FROM Faculty AS T1
		JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID
		JOIN Activity AS T3 ON T3.actid = T2.actid
		WHERE T1.fname = "Mark"
		  AND T1.lname = "Giuliano"

	Empty DataFrame
	Columns: [activity_name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `activity_name`
		FROM
		  (SELECT `LHS`.`actid` AS `actid`,
		          `LHS`.`activity_name` AS `activity_name`,
		          `LHS`.`facid` AS `facid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`rank` AS `rank`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`phone` AS `phone`,
		          `LHS`.`room` AS `room`,
		          `LHS`.`building` AS `building`
		   FROM
		     (SELECT `LHS`.`actid` AS `actid`,
		             `LHS`.`activity_name` AS `activity_name`,
		             `LHS`.`facid` AS `facid`,
		             `RHS`.`lname` AS `lname`,
		             `RHS`.`fname` AS `fname`,
		             `RHS`.`rank` AS `rank`,
		             `RHS`.`sex` AS `sex`,
		             `RHS`.`phone` AS `phone`,
		             `RHS`.`room` AS `room`,
		             `RHS`.`building` AS `building`
		      FROM
		        (SELECT `LHS`.`actid` AS `actid`,
		                `LHS`.`activity_name` AS `activity_name`,
		                `RHS`.`facid` AS `facid`
		         FROM `activity` AS `LHS`
		         INNER JOIN `faculty_participates_in` AS `RHS` ON (`LHS`.`actid` = `RHS`.`actid`)) AS `LHS`
		      INNER JOIN `faculty` AS `RHS` ON (`LHS`.`facid` = `RHS`.`facid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `faculty`
		      WHERE (`fname` = 'Mark'
		             OR `lname` = 'Giuliano')) AS RHS ON (LHS.facid = RHS.facid
		                                                  AND LHS.lname = RHS.lname
		                                                  AND LHS.fname = RHS.fname
		                                                  AND LHS.rank = RHS.rank
		                                                  AND LHS.sex = RHS.sex
		                                                  AND LHS.phone = RHS.phone
		                                                  AND LHS.room = RHS.room
		                                                  AND LHS.building = RHS.building))
		ORDER BY activity_name

	               activity_name
	0        6dhProselytizingIg7
	1         Accordion Ensemble
	2         Accordion Ensemble
	3         Accordion Ensemble
	4         Accordion Ensemble
	5    Accordion Ensemble8oCto
	6    Accordion Ensemble8oCto
	7   IHXAccordion EnsemblenY6
	8              Proselytizing
	9              Proselytizing
	10             Proselytizing
	11             Proselytizing
	12             Proselytizing
	13             Proselytizing
	14        ProselytizingEEfCk
	15        WiOwsProselytizing
	16        WiOwsProselytizing
	17  Yg4Accordion Ensemblem1Z
	18         ccordion Ensemble
Wrong output for fuzzied solution in instance spider/activity_1/0041 (1807)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.lname
		FROM Faculty AS T1
		JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID
		JOIN activity AS T3 ON T2.actid = T2.actid
		WHERE T3.activity_name = 'Canoeing'
		  OR T3.activity_name = 'Kayaking'

	              lname
	0     5Py8kHKVR1erZ
	1   6kuSmolenskyouX
	2             Jones
	3        JonesYEev4
	4           Kosaraj
	5          Kosaraju
	6     KosarajuGZPyL
	7             NQXjT
	8          Smolensk
	9         Smolensky
	10   SmolenskyPxdbt
	11         VOV(tftF
	12          abPNRF 
	13       gkt1xIKmLA
	14  hy SmolenskyDrh
	15  k8NSmolenskygf4
	16      lU9JonesTy(
	17             ones
	18          osaraju
	19    weKOfKosaraju
	20   xiFiNbYuftIYCn
	21          yY748xD
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `lname`
		FROM
		  (SELECT `LHS`.`facid` AS `facid`,
		          `LHS`.`actid` AS `actid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`rank` AS `rank`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`phone` AS `phone`,
		          `LHS`.`room` AS `room`,
		          `LHS`.`building` AS `building`,
		          `RHS`.`activity_name` AS `activity_name`
		   FROM
		     (SELECT `LHS`.`facid` AS `facid`,
		             `LHS`.`actid` AS `actid`,
		             `RHS`.`lname` AS `lname`,
		             `RHS`.`fname` AS `fname`,
		             `RHS`.`rank` AS `rank`,
		             `RHS`.`sex` AS `sex`,
		             `RHS`.`phone` AS `phone`,
		             `RHS`.`room` AS `room`,
		             `RHS`.`building` AS `building`
		      FROM `faculty_participates_in` AS `LHS`
		      INNER JOIN `faculty` AS `RHS` ON (`LHS`.`facid` = `RHS`.`facid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `activity`
		      WHERE (`activity_name` != 'Canoeing'
		             OR `activity_name` = 'Kayaking')) AS RHS ON (LHS.actid = RHS.actid))
		ORDER BY lname

	              lname
	0     5Py8kHKVR1erZ
	1   6kuSmolenskyouX
	2             Jones
	3        JonesYEev4
	4           Kosaraj
	5          Kosaraju
	6     KosarajuGZPyL
	7             NQXjT
	8          Smolensk
	9         Smolensky
	10   SmolenskyPxdbt
	11         VOV(tftF
	12          abPNRF 
	13       gkt1xIKmLA
	14  k8NSmolenskygf4
	15      lU9JonesTy(
	16             ones
	17          osaraju
	18    weKOfKosaraju
	19   xiFiNbYuftIYCn
	20          yY748xD
No solution for instance spider/activity_1/0035 (1808)
No solution for instance spider/activity_1/0020 (1809)
Wrong output for fuzzied solution in instance spider/activity_1/0007 (1811)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Faculty
		WHERE Sex = 'F'
		  AND Rank = "Professor"

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `rank`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM `faculty`
		      WHERE (`sex` = 'F'
		             AND `rank` = 'Professor')))
		ORDER BY count___

	   count___
	0         1
No solution for instance spider/activity_1/0024 (1813)
Wrong output for fuzzied solution in instance spider/activity_1/0021 (1814)
	EXPECTED OUTPUT ====

		SELECT T1.FacID,
		       count(*)
		FROM Faculty AS T1
		JOIN Student AS T2 ON T1.FacID = T2.advisor
		GROUP BY T1.FacID

	Empty DataFrame
	Columns: [facid, count(*)]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT advisor AS facid,
		       n AS count___
		FROM
		  (SELECT advisor,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM student AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM faculty AS RHS
		           WHERE (LHS.lname = RHS.lname
		                  AND LHS.fname = RHS.fname
		                  AND LHS.sex = RHS.sex) ))
		   GROUP BY advisor)
		ORDER BY facid

	   facid  count___
	0   2192         1
	1   2310         1
	2   2311         1
	3   9170         1
	4   1121         2
No solution for instance spider/activity_1/0023 (1815)
Wrong output for fuzzied solution in instance spider/activity_1/0043 (1817)
	EXPECTED OUTPUT ====

		SELECT T1.lname
		FROM Faculty AS T1
		JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID
		JOIN activity AS T3 ON T2.actid = T2.actid
		WHERE T3.activity_name = 'Canoeing' INTERSECT
		  SELECT T1.lname
		  FROM Faculty AS T1
		  JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID
		  JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Kayaking'

	Empty DataFrame
	Columns: [lname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `lname`
		FROM
		  (SELECT `LHS`.`facid` AS `facid`,
		          `LHS`.`actid` AS `actid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`rank` AS `rank`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`phone` AS `phone`,
		          `LHS`.`room` AS `room`,
		          `LHS`.`building` AS `building`,
		          `RHS`.`activity_name` AS `activity_name`
		   FROM
		     (SELECT `LHS`.`facid` AS `facid`,
		             `LHS`.`actid` AS `actid`,
		             `RHS`.`lname` AS `lname`,
		             `RHS`.`fname` AS `fname`,
		             `RHS`.`rank` AS `rank`,
		             `RHS`.`sex` AS `sex`,
		             `RHS`.`phone` AS `phone`,
		             `RHS`.`room` AS `room`,
		             `RHS`.`building` AS `building`
		      FROM `faculty_participates_in` AS `LHS`
		      INNER JOIN `faculty` AS `RHS` ON (`LHS`.`facid` = `RHS`.`facid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `activity`
		      WHERE (`activity_name` != 'Canoeing'
		             OR `activity_name` = 'Kayaking')) AS RHS ON (LHS.actid = RHS.actid))
		ORDER BY lname

	          lname
	0          Amir
	1         Smith
	2    SmithB6nZC
	3  XIfNaimanByM
	4           mir
	5    uDlAmirA8v
Wrong output for fuzzied solution in instance spider/activity_1/0009 (1819)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Faculty
		WHERE Rank = "Professor"
		  AND building = "NEB"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `building`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `faculty`
		      WHERE (`rank` = 'Professor'
		             AND `building` = 'NEB'))
		   GROUP BY building)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/activity_1/0025 (1820)
Wrong output for fuzzied solution in instance spider/activity_1/0044 (1824)
	EXPECTED OUTPUT ====

		SELECT T1.stuid
		FROM participates_in AS T1
		JOIN activity AS T2 ON T2.actid = T2.actid
		WHERE T2.activity_name = 'Canoeing' INTERSECT
		  SELECT T1.stuid
		  FROM participates_in AS T1
		  JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Kayaking'

	Empty DataFrame
	Columns: [stuid]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `stuid`
		FROM
		  (SELECT *
		   FROM `participates_in` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `activity`
		           WHERE (`activity_name` = 'Canoeing'
		                  AND `activity_name` = 'Kayaking')) AS RHS
		        WHERE (LHS.actid = RHS.actid) ))
		ORDER BY stuid

	    stuid
	0    1011
	1    1012
	2    1013
	3    1014
	4    1016
	5    1017
	6    1018
	7    1019
	8    1020
	9    1023
	10   1024
	11   1025
	12   1026
	13   1027
	14   1032
	15   1033
	16   1034
	17   1035
No solution for instance spider/activity_1/0040 (1825)
Error while executing solution for instance spider/activity_1/0028 (1826)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT facid) OVER () AS count_distinct_facid_
FROM faculty_participates_in
ORDER BY count_distinct_facid_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/activity_1/0031 (1827)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Faculty AS T1
		JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID
		WHERE T1.fname = "Mark"
		  AND T1.lname = "Giuliano"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT *
		   FROM
		     (SELECT `facid`,
		             COUNT() AS `n`
		      FROM `faculty_participates_in`
		      GROUP BY `facid`) AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `faculty`
		           WHERE (`fname` != 'Mark'
		                  OR `lname` != 'Giuliano')) AS RHS
		        WHERE (LHS.facid = RHS.facid) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for base solution in instance spider/gymnast/0002 (1828)
	EXPECTED OUTPUT ====

	   total_points
	0        57.374
	1        57.398
	2        57.424
	3        57.436
	4        57.649
	5        57.924
	6        58.061
	ACTUAL OUTPUT ====

		SELECT Total_Points
		FROM gymnast
		ORDER BY Total_Points DESC

	   total_points
	0        57.374
	1        57.398
	2        57.424
	3        57.436
	4        57.649
	5        57.924
	6        58.061
Wrong output for ground truth in instance spider/gymnast/0002 (1828)
No solution for instance spider/gymnast/0017 (1829)
Wrong output for base solution in instance spider/gymnast/0003 (1831)
	EXPECTED OUTPUT ====

	   total_points
	0        57.374
	1        57.398
	2        57.424
	3        57.436
	4        57.649
	5        57.924
	6        58.061
	ACTUAL OUTPUT ====

		SELECT Total_Points
		FROM gymnast
		ORDER BY Floor_Exercise_Points DESC

	   total_points
	0        57.374
	1        57.398
	2        57.424
	3        57.436
	4        57.649
	5        57.924
	6        58.061
Wrong output for ground truth in instance spider/gymnast/0003 (1831)
No solution for instance spider/gymnast/0013 (1832)
Wrong output for fuzzied solution in instance spider/gymnast/0012 (1835)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.Hometown
		FROM gymnast AS T1
		JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID
		WHERE T1.Total_Points > 57.5

	        hometown
	0  Santo Domingo
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `hometown`
		FROM
		  (SELECT `gymnast_id`,
		          `floor_exercise_points`,
		          `pommel_horse_points`,
		          `rings_points`,
		          `vault_points`,
		          `parallel_bars_points`,
		          `horizontal_bar_points`,
		          `total_points`,
		          `name`,
		          `age`,
		          `height`,
		          `hometown`,
		          `gymnast_id` AS `people_id`
		   FROM
		     (SELECT `LHS`.`gymnast_id` AS `gymnast_id`,
		             `LHS`.`floor_exercise_points` AS `floor_exercise_points`,
		             `LHS`.`pommel_horse_points` AS `pommel_horse_points`,
		             `LHS`.`rings_points` AS `rings_points`,
		             `LHS`.`vault_points` AS `vault_points`,
		             `LHS`.`parallel_bars_points` AS `parallel_bars_points`,
		             `LHS`.`horizontal_bar_points` AS `horizontal_bar_points`,
		             `LHS`.`total_points` AS `total_points`,
		             `RHS`.`name` AS `name`,
		             `RHS`.`age` AS `age`,
		             `RHS`.`height` AS `height`,
		             `RHS`.`hometown` AS `hometown`
		      FROM `gymnast` AS `LHS`
		      INNER JOIN `people` AS `RHS` ON (`LHS`.`gymnast_id` = `RHS`.`people_id`)))
		WHERE (`total_points` >= '57.5')
		ORDER BY hometown

	        hometown
	0   Santo Doming
	1  Santo Domingo
Wrong output for fuzzied solution in instance spider/gymnast/0015 (1836)
	EXPECTED OUTPUT ====

		SELECT T2.Hometown
		FROM gymnast AS T1
		JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID
		GROUP BY T2.Hometown
		HAVING COUNT(*) >= 2

	        hometown
	0  Santo Domingo
	1   anto Domingo
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT hometown
		FROM
		  (SELECT people_id,
		          name,
		          age,
		          height,
		          hometown,
		          horizontal_bar_points,
		          pommel_horse_points,
		          people_id AS n
		   FROM
		     (SELECT LHS.people_id AS people_id,
		             LHS.name AS name,
		             LHS.age AS age,
		             LHS.height AS height,
		             LHS.hometown AS hometown,
		             RHS.horizontal_bar_points AS horizontal_bar_points,
		             RHS.pommel_horse_points AS pommel_horse_points
		      FROM people AS LHS
		      INNER JOIN
		        (SELECT horizontal_bar_points,
		                pommel_horse_points,
		                COUNT() AS n
		         FROM gymnast
		         GROUP BY horizontal_bar_points,
		                  pommel_horse_points) AS RHS ON (LHS.people_id = RHS.n)))
		WHERE (n != 2)
		ORDER BY hometown

	Empty DataFrame
	Columns: [hometown]
	Index: []
Wrong output for fuzzied solution in instance spider/gymnast/0018 (1839)
	EXPECTED OUTPUT ====

		SELECT Hometown
		FROM people
		WHERE Age > 23 INTERSECT
		  SELECT Hometown
		  FROM people WHERE Age < 20

	        hometown
	0  Santo Domingo
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT hometown
		FROM people
		WHERE (age != 23.0
		       AND age = 20.0)
		ORDER BY hometown

	  hometown
	0  HiP rw7
Wrong output for fuzzied solution in instance spider/gymnast/0014 (1844)
	EXPECTED OUTPUT ====

		SELECT T2.Hometown
		FROM gymnast AS T1
		JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID
		GROUP BY T2.Hometown
		ORDER BY COUNT(*) DESC
		LIMIT 1

	        hometown
	0  Santo Domingo
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT hometown
		FROM
		  (SELECT LHS.people_id AS people_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.height AS height,
		          LHS.hometown AS hometown,
		          RHS.gymnast_id AS gymnast_id,
		          RHS.pommel_horse_points AS pommel_horse_points
		   FROM people AS LHS
		   INNER JOIN
		     (SELECT gymnast_id,
		             pommel_horse_points,
		             COUNT() AS n
		      FROM gymnast
		      GROUP BY gymnast_id,
		               pommel_horse_points) AS RHS ON (LHS.people_id = RHS.n))
		ORDER BY hometown

	Empty DataFrame
	Columns: [hometown]
	Index: []
Wrong output for fuzzied solution in instance spider/gymnast/0011 (1846)
	EXPECTED OUTPUT ====

		SELECT avg(T2.Age)
		FROM gymnast AS T1
		JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID

	   avg(t2.age)
	0    21.733636
	ACTUAL OUTPUT ====

		
		SELECT meanage AS avg_t2_age_
		FROM
		  (SELECT AVG(age) AS meanage
		   FROM
		     (SELECT gymnast_id,
		             floor_exercise_points,
		             pommel_horse_points,
		             rings_points,
		             vault_points,
		             parallel_bars_points,
		             horizontal_bar_points,
		             total_points,
		             name,
		             age,
		             height,
		             hometown,
		             gymnast_id AS people_id
		      FROM
		        (SELECT LHS.gymnast_id AS gymnast_id,
		                LHS.floor_exercise_points AS floor_exercise_points,
		                LHS.pommel_horse_points AS pommel_horse_points,
		                LHS.rings_points AS rings_points,
		                LHS.vault_points AS vault_points,
		                LHS.parallel_bars_points AS parallel_bars_points,
		                LHS.horizontal_bar_points AS horizontal_bar_points,
		                LHS.total_points AS total_points,
		                RHS.name AS name,
		                RHS.age AS age,
		                RHS.height AS height,
		                RHS.hometown AS hometown
		         FROM gymnast AS LHS
		         INNER JOIN people AS RHS ON (LHS.gymnast_id = RHS.people_id))))
		ORDER BY avg_t2_age_

	   avg_t2_age_
	0    21.733636
Wrong output for base solution in instance spider/gymnast/0010 (1847)
	EXPECTED OUTPUT ====

	   total_points
	0        57.649
	ACTUAL OUTPUT ====

		SELECT T1.Total_Points
		FROM gymnast AS T1
		JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID
		ORDER BY T2.Age ASC
		LIMIT 1

	   total_points
	0        57.649
Wrong output for ground truth in instance spider/gymnast/0010 (1847)
Error while executing solution for instance spider/cre_Theme_park/0002 (1851)

'<' not supported between instances of 'str' and 'float'
Error while checking ground truth in instance spider/cre_Theme_park/0002 (1851)
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0003 (1857)
	EXPECTED OUTPUT ====

		SELECT DISTINCT Location_Name
		FROM LOCATIONS

	             location_name
	0      70YFilm FestivalMCM
	1         African Adventur
	2        African Adventure
	3   African AdventureZVEmQ
	4   African AdventurenMOFI
	5            Film Festival
	6      TITFilm Festival7FE
	7        cGIShark WorldH7q
	8         frican Adventure
	9             ilm Festival
	10  tW3ZpAfrican Adventure
	ACTUAL OUTPUT ====

		
		SELECT location_name
		FROM locations
		ORDER BY location_name

	             location_name
	0      70YFilm FestivalMCM
	1         African Adventur
	2         African Adventur
	3         African Adventur
	4        African Adventure
	5        African Adventure
	6   African AdventureZVEmQ
	7   African AdventurenMOFI
	8            Film Festival
	9      TITFilm Festival7FE
	10       cGIShark WorldH7q
	11        frican Adventure
	12            ilm Festival
	13  tW3ZpAfrican Adventure
Wrong output for base solution in instance spider/cre_Theme_park/0027 (1858)
	EXPECTED OUTPUT ====

	  pets_allowed_yn  avg_price_range_
	0             NaN      9.892957e+05
	1               1      8.142665e+07
	ACTUAL OUTPUT ====

		SELECT pets_allowed_yn,
		       avg(price_range)
		FROM HOTELS
		GROUP BY pets_allowed_yn

	  pets_allowed_yn  avg(price_range)
	0                      9.892957e+05
	1               1      8.142665e+07
Wrong output for ground truth in instance spider/cre_Theme_park/0027 (1858)
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0022 (1859)
	EXPECTED OUTPUT ====

		SELECT T1.Market_Details
		FROM Street_Markets AS T1
		JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID = T2.Tourist_Attraction_ID
		WHERE T2.How_to_Get_There = "walk"
		  OR T2.How_to_Get_There = "bus"

	     market_details
	0   Fish Farm Marke
	1  Fish Farm Market
	2  Fish Farm Market
	ACTUAL OUTPUT ====

		
		SELECT `market_details`
		FROM
		  (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,
		          `LHS`.`attraction_type_code` AS `attraction_type_code`,
		          `LHS`.`location_id` AS `location_id`,
		          `LHS`.`how_to_get_there` AS `how_to_get_there`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`description` AS `description`,
		          `LHS`.`opening_hours` AS `opening_hours`,
		          `LHS`.`other_details` AS `other_details`,
		          `RHS`.`market_details` AS `market_details`
		   FROM
		     (SELECT *
		      FROM `tourist_attractions`
		      WHERE (`how_to_get_there` != 'walk'
		             OR `how_to_get_there` != 'bus')) AS LHS
		   INNER JOIN street_markets AS RHS ON (LHS.tourist_attraction_id = RHS.market_id))
		ORDER BY market_details

	            market_details
	0          Fish Farm Marke
	1          Fish Farm Marke
	2         Fish Farm Market
	3         Fish Farm Market
	4         Fish Farm Market
	5         Fish Farm Market
	6         Fish Farm Market
	7         Fish Farm Market
	8         Fish Farm Market
	9   OcUFish Farm Marketqne
	10  Tz4Fish Farm Market5Fh
	11   XlY)rFish Farm Market
	12         ish Farm Market
	13   uuplpFish Farm Market
	14   ypv87Fish Farm Market
Error while executing solution for instance spider/cre_Theme_park/0006 (1862)

'<' not supported between instances of 'str' and 'float'
Error while checking ground truth in instance spider/cre_Theme_park/0006 (1862)
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0012 (1864)
	EXPECTED OUTPUT ====

		SELECT DISTINCT Visit_Date
		FROM VISITS

	            visit_date
	0  1980-11-18 06:59:01
	1  1982-11-30 09:06:18
	2  1989-11-10 03:35:58
	3  1996-12-04 13:57:40
	4  1997-04-10 02:11:11
	5  2002-03-15 10:59:19
	6  2005-01-07 18:25:06
	7  2006-07-26 21:53:22
	ACTUAL OUTPUT ====

		
		SELECT visit_date
		FROM visits
		ORDER BY visit_date

	             visit_date
	0   1980-11-18 06:59:01
	1   1980-11-18 06:59:01
	2   1980-11-18 06:59:01
	3   1982-11-30 09:06:18
	4   1982-11-30 09:06:18
	5   1989-11-10 03:35:58
	6   1989-11-10 03:35:58
	7   1989-11-10 03:35:58
	8   1989-11-10 03:35:58
	9   1996-12-04 13:57:40
	10  1996-12-04 13:57:40
	11  1996-12-04 13:57:40
	12  1997-04-10 02:11:11
	13  1997-04-10 02:11:11
	14  1997-04-10 02:11:11
	15  2002-03-15 10:59:19
	16  2002-03-15 10:59:19
	17  2002-03-15 10:59:19
	18  2002-03-15 10:59:19
	19  2005-01-07 18:25:06
	20  2005-01-07 18:25:06
	21  2005-01-07 18:25:06
	22  2005-01-07 18:25:06
	23  2006-07-26 21:53:22
	24  2006-07-26 21:53:22
Wrong output for base solution in instance spider/cre_Theme_park/0026 (1865)
	EXPECTED OUTPUT ====

	  star_rating_code  avg_price_range_
	0                1      1.272506e+04
	1                2      9.660649e+04
	2                3      2.763278e+06
	3                4      1.900749e+07
	4                5      1.135099e+08
	ACTUAL OUTPUT ====

		SELECT star_rating_code,
		       avg(price_range)
		FROM HOTELS
		GROUP BY star_rating_code

	  star_rating_code  avg(price_range)
	0                1      1.272506e+04
	1                2      9.660649e+04
	2                3      2.763278e+06
	3                4      1.900749e+07
	4                5      1.135099e+08
Wrong output for ground truth in instance spider/cre_Theme_park/0026 (1865)
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0015 (1866)
	EXPECTED OUTPUT ====

		SELECT T2.star_rating_description
		FROM HOTELS AS T1
		JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code = T2.star_rating_code
		WHERE T1.price_range > 10000

	   star_rating_description
	0                     star
	1                     star
	2                     star
	3                     star
	4                     star
	5                     star
	6                     star
	7                     star
	8                     star
	9                star1iIjG
	10               star1iIjG
	11               star1iIjG
	ACTUAL OUTPUT ====

		
		SELECT star_rating_description
		FROM
		  (SELECT LHS.star_rating_code AS star_rating_code,
		          LHS.star_rating_description AS star_rating_description,
		          LHS.hotel_id AS hotel_id,
		          LHS.pets_allowed_yn AS pets_allowed_yn,
		          LHS.price_range AS price_range,
		          LHS.other_hotel_details AS other_hotel_details,
		          RHS.star_rating_code AS star_rating_code_other,
		          RHS.star_rating_description AS star_rating_description_other,
		          RHS.hotel_id AS hotel_id_other,
		          RHS.pets_allowed_yn AS pets_allowed_yn_other,
		          RHS.price_range AS price_range_other,
		          RHS.other_hotel_details AS other_hotel_details_other
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.star_rating_code AS star_rating_code,
		                LHS.star_rating_description AS star_rating_description,
		                RHS.hotel_id AS hotel_id,
		                RHS.pets_allowed_yn AS pets_allowed_yn,
		                RHS.price_range AS price_range,
		                RHS.other_hotel_details AS other_hotel_details
		         FROM ref_hotel_star_ratings AS LHS
		         LEFT JOIN hotels AS RHS ON (LHS.star_rating_code = RHS.star_rating_code))
		      WHERE (price_range < 10000.0)) AS LHS
		   CROSS JOIN
		     (SELECT LHS.star_rating_code AS star_rating_code,
		             LHS.star_rating_description AS star_rating_description,
		             RHS.hotel_id AS hotel_id,
		             RHS.pets_allowed_yn AS pets_allowed_yn,
		             RHS.price_range AS price_range,
		             RHS.other_hotel_details AS other_hotel_details
		      FROM ref_hotel_star_ratings AS LHS
		      LEFT JOIN hotels AS RHS ON (LHS.star_rating_code = RHS.star_rating_code)) AS RHS)
		WHERE (price_range >= price_range_other)
		ORDER BY star_rating_description

	   star_rating_description
	0                      sta
	1                      sta
	2                      sta
	3                      sta
	4                      sta
	5                     star
	6                     star
	7                     star
	8                     star
	9                     star
	10                    star
	11                    star
	12                    star
	13                    star
	14                    star
	15                    star
	16               star1iIjG
	17               star1iIjG
	18               star1iIjG
	19               star1iIjG
	20               star1iIjG
	21               star1iIjG
	22               star1iIjG
	23               star1iIjG
	24               star1iIjG
	25               star1iIjG
	26               star1iIjG
	27               starqfJp2
	28               starqfJp2
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0016 (1868)
	EXPECTED OUTPUT ====

		SELECT T1.Museum_Details,
		       T2.Opening_Hours
		FROM MUSEUMS AS T1
		JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID

	   museum_details             opening_hours
	0             MoM                 4BygAWPTX
	1             MoM          MqhOks)qwdahiU8g
	2             MoM  VGFiH5u29rid8qEfM 6GSQUe
	3             MoM                  sKrxdvMD
	4            MoMA          7VnWLVOw0FyjDkG0
	5            MoMA               FiUNfTbXmaa
	6            MoMA                   Kw)7iOl
	7            MoMA                       OiA
	8            MoMA                       QDT
	9            MoMA       vusz0WfvaAmhLsYU(l4
	10           MoMA                    w()0gR
	11      MoMAXNrrU                 IS3FfDBIE
	12      XNJSPMoMA           6TSSBrE0iEGM6Q3
	13     gsuMoMAk L              k2WcSLDY(ZVg
	14            oMA      6BorWoXF68kuaTh5r(Xz
	ACTUAL OUTPUT ====

		
		SELECT museum_details,
		       description AS opening_hours
		FROM
		  (SELECT LHS.tourist_attraction_id AS tourist_attraction_id,
		          LHS.attraction_type_code AS attraction_type_code,
		          LHS.location_id AS location_id,
		          LHS.how_to_get_there AS how_to_get_there,
		          LHS.name AS name,
		          LHS.description AS description,
		          LHS.opening_hours AS opening_hours,
		          LHS.other_details AS other_details,
		          RHS.museum_details AS museum_details
		   FROM tourist_attractions AS LHS
		   INNER JOIN museums AS RHS ON (LHS.tourist_attraction_id = RHS.museum_id))
		ORDER BY museum_details

	   museum_details           opening_hours
	0             MoM  FCN 8cL83zYswwiOBRdOFq
	1             MoM             JeEGhWBR5JW
	2             MoM          e2bpxkffR84I8m
	3             MoM            kL8XEL82UL9i
	4            MoMA            0PSeUQ4euurn
	5            MoMA             SCieDV OQMh
	6            MoMA           T2ezd4F1DsTbC
	7            MoMA              XcWj2LaMpz
	8            MoMA     e)hZn1mSX2nsMXCW4W7
	9            MoMA               f3p9GzWv2
	10           MoMA        fKyXj5gtgtrtwrOE
	11      MoMAXNrrU     vbXWfutG8YrmU4FJxv4
	12      XNJSPMoMA      sJwHFC6AGI9OvVNabW
	13     gsuMoMAk L                 osDb85g
	14            oMA            B7JvVLnaZYoq
No solution for instance spider/cre_Theme_park/0032 (1869)
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0041 (1871)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM Tourist_Attractions AS T1
		JOIN VISITORS AS T2
		JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID
		AND T2.Tourist_ID = T3.Tourist_ID
		WHERE T2.Tourist_Details = "Alison"
		EXCEPT
		SELECT T1.Name
		FROM Tourist_Attractions AS T1
		JOIN VISITORS AS T2
		JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID
		AND T2.Tourist_ID = T3.Tourist_ID
		WHERE T2.Tourist_Details = "Rosalind"

	              name
	0  SCKfun gameskrW
	1             cafe
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,
		          `LHS`.`attraction_type_code` AS `attraction_type_code`,
		          `LHS`.`location_id` AS `location_id`,
		          `LHS`.`how_to_get_there` AS `how_to_get_there`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`description` AS `description`,
		          `LHS`.`opening_hours` AS `opening_hours`,
		          `LHS`.`other_details` AS `other_details`,
		          `LHS`.`visit_id` AS `visit_id`,
		          `LHS`.`tourist_id` AS `tourist_id`,
		          `LHS`.`visit_date` AS `visit_date`,
		          `LHS`.`visit_details` AS `visit_details`,
		          `RHS`.`tourist_details` AS `tourist_details`
		   FROM
		     (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,
		             `LHS`.`attraction_type_code` AS `attraction_type_code`,
		             `LHS`.`location_id` AS `location_id`,
		             `LHS`.`how_to_get_there` AS `how_to_get_there`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`description` AS `description`,
		             `LHS`.`opening_hours` AS `opening_hours`,
		             `LHS`.`other_details` AS `other_details`,
		             `RHS`.`visit_id` AS `visit_id`,
		             `RHS`.`tourist_id` AS `tourist_id`,
		             `RHS`.`visit_date` AS `visit_date`,
		             `RHS`.`visit_details` AS `visit_details`
		      FROM `tourist_attractions` AS `LHS`
		      INNER JOIN `visits` AS `RHS` ON (`LHS`.`tourist_attraction_id` = `RHS`.`tourist_attraction_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `visitors`
		      WHERE (`tourist_details` = 'Alison'
		             AND `tourist_details` != 'Rosalind')) AS RHS ON (LHS.tourist_id = RHS.tourist_id))
		ORDER BY name

	                name
	0    SCKfun gameskrW
	1          UK galler
	2         UK gallery
	3               cafe
	4  exploration trial
	5     foTnMfun games
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0019 (1874)
	EXPECTED OUTPUT ====

		SELECT T1.Royal_Family_Details,
		       T2.How_to_Get_There
		FROM ROYAL_FAMILY AS T1
		JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID = T2.Tourist_Attraction_ID

	          royal_family_details how_to_get_there
	0         Aoh9CYSLlCVdmHJLNx29       Cd0walkjR6
	1         Aoh9CYSLlCVdmHJLNx29         NlAsGbus
	2   KamAoh9CYSLlCVdmHJLNx29rKn       YKewalkde 
	3    ZhCMRAoh9CYSLlCVdmHJLNx29        Z96Hcwalk
	4         Aoh9CYSLlCVdmHJLNx29              bus
	5          oh9CYSLlCVdmHJLNx29              bus
	6    dKqoPAoh9CYSLlCVdmHJLNx29           huttle
	7    ZA0SjAoh9CYSLlCVdmHJLNx29        i(xBxwalk
	8         Aoh9CYSLlCVdmHJLNx29          shuttle
	9         Aoh9CYSLlCVdmHJLNx29          shuttle
	10        Aoh9CYSLlCVdmHJLNx29          shuttle
	11   yvwg(Aoh9CYSLlCVdmHJLNx29          shuttle
	12        Aoh9CYSLlCVdmHJLNx29               us
	13         Aoh9CYSLlCVdmHJLNx2             walk
	14   Aoh9CYSLlCVdmHJLNx29Egleg             walk
	ACTUAL OUTPUT ====

		
		SELECT description AS royal_family_details,
		       how_to_get_there
		FROM
		  (SELECT LHS.tourist_attraction_id AS tourist_attraction_id,
		          LHS.attraction_type_code AS attraction_type_code,
		          LHS.location_id AS location_id,
		          LHS.how_to_get_there AS how_to_get_there,
		          LHS.name AS name,
		          LHS.description AS description,
		          LHS.opening_hours AS opening_hours,
		          LHS.other_details AS other_details,
		          RHS.royal_family_details AS royal_family_details
		   FROM tourist_attractions AS LHS
		   INNER JOIN royal_family AS RHS ON (LHS.tourist_attraction_id = RHS.royal_family_id))
		ORDER BY royal_family_details

	      royal_family_details how_to_get_there
	0   FCN 8cL83zYswwiOBRdOFq       Cd0walkjR6
	1             kL8XEL82UL9i         NlAsGbus
	2                  osDb85g       YKewalkde 
	3              SCieDV OQMh        Z96Hcwalk
	4             0PSeUQ4euurn              bus
	5             B7JvVLnaZYoq              bus
	6                f3p9GzWv2           huttle
	7               XcWj2LaMpz        i(xBxwalk
	8              JeEGhWBR5JW          shuttle
	9         fKyXj5gtgtrtwrOE          shuttle
	10      sJwHFC6AGI9OvVNabW          shuttle
	11     vbXWfutG8YrmU4FJxv4          shuttle
	12     e)hZn1mSX2nsMXCW4W7               us
	13           T2ezd4F1DsTbC             walk
	14          e2bpxkffR84I8m             walk
No solution for instance spider/cre_Theme_park/0007 (1875)
Wrong output for base solution in instance spider/cre_Theme_park/0023 (1879)
	EXPECTED OUTPUT ====

	           visit_date visit_details
	0 2007-09-17 10:12:45           NaN
	1 2013-08-06 05:35:51           NaN
	ACTUAL OUTPUT ====

		SELECT T2.Visit_Date,
		       T2.Visit_Details
		FROM VISITORS AS T1
		JOIN VISITS AS T2 ON T1.Tourist_ID = T2.Tourist_ID
		WHERE T1.Tourist_Details = "Vincent"

	            visit_date visit_details
	0  2007-09-17 10:12:45              
	1  2013-08-06 05:35:51              
Wrong output for ground truth in instance spider/cre_Theme_park/0023 (1879)
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0001 (1880)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM HOTELS

	   count(*)
	0        20
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT other_hotel_details,
		          COUNT() AS n
		   FROM hotels
		   GROUP BY other_hotel_details)
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
	3         1
	4         1
	5        15
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0014 (1881)
	EXPECTED OUTPUT ====

		SELECT Name,
		       Opening_Hours
		FROM TOURIST_ATTRACTIONS
		WHERE How_to_Get_There = "bus"
		  OR How_to_Get_There = "walk"

	              name  opening_hours
	0       art museum  KWyZdM6Q3c99q
	1       art museum      loP3K3K)3
	2  flying elephant         hRz8Jw
	ACTUAL OUTPUT ====

		
		SELECT `name`,
		       `description` AS `opening_hours`
		FROM `tourist_attractions`
		WHERE (`how_to_get_there` = 'bus'
		       OR `how_to_get_there` = 'walk')
		ORDER BY name

	              name opening_hours
	0       art museum       5gtr5wt
	1       art museum           wTE
	2  flying elephant       Ps9R1f3
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0011 (1884)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT Name)
		FROM PHOTOS

	   count(distinct name)
	0                    16
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count_distinct_name_
		FROM
		  (SELECT other_details,
		          COUNT(DISTINCT name) AS n_distinct
		   FROM photos
		   GROUP BY other_details)
		ORDER BY count_distinct_name_

	    count_distinct_name_
	0                      1
	1                      1
	2                      1
	3                      1
	4                      1
	5                      1
	6                      1
	7                      1
	8                      1
	9                      1
	10                     1
	11                     1
	12                     1
	13                     1
	14                     1
	15                     1
	16                     1
	17                     3
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0029 (1885)
	EXPECTED OUTPUT ====

		SELECT other_hotel_details
		FROM HOTELS
		ORDER BY price_range DESC
		LIMIT 3

	  other_hotel_details
	0                    
	1                    
	2                    
	ACTUAL OUTPUT ====

		
		SELECT other_hotel_details
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM hotels
		      ORDER BY price_range)
		   LIMIT 3)

	  other_hotel_details
	0                    
	1                    
	2               fet(2
No solution for instance spider/cre_Theme_park/0010 (1886)
No solution for instance spider/cre_Theme_park/0040 (1887)
No solution for instance spider/cre_Theme_park/0031 (1889)
Wrong output for base solution in instance spider/driving_school/0042 (1890)
	EXPECTED OUTPUT ====

	  sum_lesson_time_
	0                9
	ACTUAL OUTPUT ====

		SELECT sum(lesson_time)
		FROM Lessons AS T1
		JOIN Staff AS T2 ON T1.staff_id = T2.staff_id
		WHERE T2.first_name = "Janessa"
		  AND T2.last_name = "Sawayn";

	   sum(lesson_time)
	0                 9
Wrong output for ground truth in instance spider/driving_school/0042 (1890)
Wrong output for fuzzied solution in instance spider/driving_school/0037 (1892)
	EXPECTED OUTPUT ====

		SELECT T2.first_name,
		       T2.last_name
		FROM Customer_Payments AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T1.customer_id
		HAVING count(*) > 2;

	     first_name   last_name
	0   E0iJordyEGM       Grant
	1          Omer       Grant
	2     OmerNxf86  GrantBBuaU
	3           Ray       Bruen
	4           Ray       Grant
	5           Ray       Grant
	6           Ray  MCKkjBruen
	7           Ray        ruen
	8      RaydWLsK    Bernhard
	9     WyZRaydF8       Bruen
	10           ay       Bruen
	11   w()Omer0gt    Bernhard
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT first_name,
		                last_name
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.customer_address_id AS customer_address_id,
		          LHS.customer_status_code AS customer_status_code,
		          LHS.date_became_customer AS date_became_customer,
		          LHS.date_of_birth AS date_of_birth,
		          LHS.first_name AS first_name,
		          LHS.last_name AS last_name,
		          LHS.amount_outstanding AS amount_outstanding,
		          LHS.email_address AS email_address,
		          LHS.phone_number AS phone_number,
		          LHS.cell_mobile_phone_number AS cell_mobile_phone_number,
		          LHS.datetime_payment AS datetime_payment,
		          LHS.payment_method_code AS payment_method_code,
		          LHS.amount_payment AS amount_payment,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.customer_id AS customer_id,
		             LHS.customer_address_id AS customer_address_id,
		             LHS.customer_status_code AS customer_status_code,
		             LHS.date_became_customer AS date_became_customer,
		             LHS.date_of_birth AS date_of_birth,
		             LHS.first_name AS first_name,
		             LHS.last_name AS last_name,
		             LHS.amount_outstanding AS amount_outstanding,
		             LHS.email_address AS email_address,
		             LHS.phone_number AS phone_number,
		             LHS.cell_mobile_phone_number AS cell_mobile_phone_number,
		             LHS.datetime_payment AS datetime_payment,
		             LHS.payment_method_code AS payment_method_code,
		             LHS.amount_payment AS amount_payment,
		             RHS.n AS n
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.customer_address_id AS customer_address_id,
		                LHS.customer_status_code AS customer_status_code,
		                LHS.date_became_customer AS date_became_customer,
		                LHS.date_of_birth AS date_of_birth,
		                LHS.first_name AS first_name,
		                LHS.last_name AS last_name,
		                LHS.amount_outstanding AS amount_outstanding,
		                LHS.email_address AS email_address,
		                LHS.phone_number AS phone_number,
		                LHS.cell_mobile_phone_number AS cell_mobile_phone_number,
		                RHS.datetime_payment AS datetime_payment,
		                RHS.payment_method_code AS payment_method_code,
		                RHS.amount_payment AS amount_payment
		         FROM customers AS LHS
		         INNER JOIN customer_payments AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS
		      INNER JOIN
		        (SELECT customer_id,
		                COUNT() AS n
		         FROM customer_payments
		         GROUP BY customer_id) AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT customer_id,
		                COUNT() AS n
		         FROM customer_payments
		         GROUP BY customer_id)
		      WHERE (n > 2)) AS RHS ON (LHS.customer_id = RHS.customer_id
		                                AND LHS.n = RHS.n))
		ORDER BY first_name

	     first_name   last_name
	0   E0iJordyEGM       Grant
	1          Omer       Grant
	2     OmerNxf86  GrantBBuaU
	3           Ray       Bruen
	4           Ray       Grant
	5           Ray  MCKkjBruen
	6           Ray        ruen
	7      RaydWLsK    Bernhard
	8     WyZRaydF8       Bruen
	9            ay       Bruen
	10   w()Omer0gt    Bernhard
Wrong output for fuzzied solution in instance spider/driving_school/0036 (1894)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Customers
		WHERE customer_id NOT IN
		    (SELECT customer_id
		     FROM Customer_Payments);

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT customer_id AS count___
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.customer_address_id AS customer_address_id,
		          LHS.customer_status_code AS customer_status_code,
		          LHS.date_became_customer AS date_became_customer,
		          LHS.date_of_birth AS date_of_birth,
		          LHS.first_name AS first_name,
		          LHS.last_name AS last_name,
		          LHS.amount_outstanding AS amount_outstanding,
		          LHS.email_address AS email_address,
		          LHS.phone_number AS phone_number,
		          LHS.cell_mobile_phone_number AS cell_mobile_phone_number,
		          RHS.payment_method_code AS payment_method_code
		   FROM customers AS LHS
		   INNER JOIN
		     (SELECT payment_method_code,
		             COUNT(DISTINCT customer_id) AS n_distinct
		      FROM customer_payments
		      GROUP BY payment_method_code) AS RHS ON (LHS.customer_address_id = RHS.n_distinct))
		ORDER BY count___

	   count___
	0         3
	1         3
No solution for instance spider/driving_school/0017 (1895)
Wrong output for fuzzied solution in instance spider/driving_school/0008 (1896)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Staff
		WHERE first_name = "Ludie";

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `date_joined_staff`,
		          `first_name`,
		          COUNT() AS `n`
		   FROM `staff`
		   GROUP BY `date_joined_staff`,
		            `first_name`)
		WHERE (`first_name` != 'Ludie')
		ORDER BY count___

	   count___
	0         1
Wrong output for fuzzied solution in instance spider/driving_school/0003 (1899)
	EXPECTED OUTPUT ====

		SELECT vehicle_details
		FROM Vehicles
		WHERE vehicle_id = 1;

	  vehicle_details
	0           Truck
	ACTUAL OUTPUT ====

		
		SELECT vehicle_details
		FROM vehicles
		WHERE (vehicle_id <= 1)
		ORDER BY vehicle_details

	  vehicle_details
	0        OqKrrVan
	1           Truck
	2      Truck6VGpl
Wrong output for fuzzied solution in instance spider/driving_school/0027 (1900)
	EXPECTED OUTPUT ====

		SELECT customer_status_code
		FROM Customers
		GROUP BY customer_status_code
		ORDER BY count(*) ASC
		LIMIT 1;

	  customer_status_code
	0          Bad Custome
	ACTUAL OUTPUT ====

		
		SELECT customer_status_code
		FROM
		  (SELECT LHS.customer_status_code AS customer_status_code,
		          LHS.n AS n,
		          RHS.customer_status_code AS customer_status_code_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT customer_status_code,
		             COUNT() AS n
		      FROM customers
		      GROUP BY customer_status_code) AS LHS
		   CROSS JOIN
		     (SELECT customer_status_code,
		             COUNT() AS n
		      FROM customers
		      GROUP BY customer_status_code) AS RHS)
		WHERE (n < n_other)
		ORDER BY customer_status_code

	  customer_status_code
	0          Bad Custome
	1          Bad Custome
	2        Good Customer
	3          ad Customer
	4          ad Customer
	5    iNmO9Bad Customer
	6    iNmO9Bad Customer
	7    qKPY8Bad Customer
	8    qKPY8Bad Customer
Wrong output for base solution in instance spider/driving_school/0013 (1903)
	EXPECTED OUTPUT ====

	  sum_t1_lesson_time_
	0                  11
	ACTUAL OUTPUT ====

		SELECT sum(T1.lesson_time)
		FROM Lessons AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.first_name = "Rylan"
		  AND T2.last_name = "Goodwin";

	   sum(t1.lesson_time)
	0                   11
Wrong output for ground truth in instance spider/driving_school/0013 (1903)
Wrong output for fuzzied solution in instance spider/driving_school/0006 (1904)
	EXPECTED OUTPUT ====

		SELECT date_joined_staff
		FROM Staff
		WHERE first_name = "Janessa"
		  AND last_name = "Sawayn";

	Empty DataFrame
	Columns: [date_joined_staff]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `date_joined_staff`
		FROM `staff`
		WHERE (`first_name` = 'Janessa'
		       OR `last_name` = 'Sawayn')
		ORDER BY date_joined_staff

	     date_joined_staff
	0  2017-09-08 14:29:56
Wrong output for fuzzied solution in instance spider/driving_school/0012 (1906)
	EXPECTED OUTPUT ====

		SELECT T1.country,
		       T1.state_province_county
		FROM Addresses AS T1
		JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id
		WHERE T2.first_name = "Janessa"
		  AND T2.last_name = "Sawayn";

	Empty DataFrame
	Columns: [country, state_province_county]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `country`,
		       `state_province_county`
		FROM
		  (SELECT `address_id`,
		          `line_1_number_building`,
		          `city`,
		          `zip_postcode`,
		          `state_province_county`,
		          `country`,
		          `staff_id`,
		          `nickname`,
		          `first_name`,
		          `middle_name`,
		          `last_name`,
		          `date_of_birth`,
		          `date_joined_staff`,
		          `date_left_staff`,
		          `address_id` AS `staff_address_id`
		   FROM
		     (SELECT `LHS`.`address_id` AS `address_id`,
		             `LHS`.`line_1_number_building` AS `line_1_number_building`,
		             `LHS`.`city` AS `city`,
		             `LHS`.`zip_postcode` AS `zip_postcode`,
		             `LHS`.`state_province_county` AS `state_province_county`,
		             `LHS`.`country` AS `country`,
		             `RHS`.`staff_id` AS `staff_id`,
		             `RHS`.`nickname` AS `nickname`,
		             `RHS`.`first_name` AS `first_name`,
		             `RHS`.`middle_name` AS `middle_name`,
		             `RHS`.`last_name` AS `last_name`,
		             `RHS`.`date_of_birth` AS `date_of_birth`,
		             `RHS`.`date_joined_staff` AS `date_joined_staff`,
		             `RHS`.`date_left_staff` AS `date_left_staff`
		      FROM `addresses` AS `LHS`
		      INNER JOIN `staff` AS `RHS` ON (`LHS`.`address_id` = `RHS`.`staff_address_id`)))
		WHERE (`first_name` = 'Janessa'
		       OR `last_name` = 'Sawayn')
		ORDER BY country

	  country state_province_county
	0     USA            Washington
Wrong output for fuzzied solution in instance spider/driving_school/0015 (1908)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Addresses
		WHERE state_province_county = "Georgia";

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `state_province_county`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `addresses`
		      WHERE (`state_province_county` = 'Georgia'))
		   GROUP BY state_province_county)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/driving_school/0005 (1909)
	EXPECTED OUTPUT ====

		SELECT date_of_birth
		FROM Staff
		WHERE first_name = "Janessa"
		  AND last_name = "Sawayn";

	Empty DataFrame
	Columns: [date_of_birth]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `date_of_birth`
		FROM `staff`
		WHERE (`first_name` = 'Janessa'
		       OR `last_name` = 'Sawayn')
		ORDER BY date_of_birth

	         date_of_birth
	0  2000-04-22 05:51:16
Wrong output for fuzzied solution in instance spider/driving_school/0032 (1911)
	EXPECTED OUTPUT ====

		SELECT T2.country
		FROM Customers AS T1
		JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id
		WHERE T1.first_name = "Carole"
		  AND T1.last_name = "Bernhard"

	  country
	0     USA
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `country`
		FROM
		  (SELECT `LHS`.`address_id` AS `address_id`,
		          `LHS`.`line_1_number_building` AS `line_1_number_building`,
		          `LHS`.`city` AS `city`,
		          `LHS`.`zip_postcode` AS `zip_postcode`,
		          `LHS`.`state_province_county` AS `state_province_county`,
		          `LHS`.`country` AS `country`,
		          `RHS`.`customer_id` AS `customer_id`,
		          `RHS`.`customer_status_code` AS `customer_status_code`,
		          `RHS`.`date_became_customer` AS `date_became_customer`,
		          `RHS`.`date_of_birth` AS `date_of_birth`,
		          `RHS`.`first_name` AS `first_name`,
		          `RHS`.`last_name` AS `last_name`,
		          `RHS`.`amount_outstanding` AS `amount_outstanding`,
		          `RHS`.`email_address` AS `email_address`,
		          `RHS`.`phone_number` AS `phone_number`,
		          `RHS`.`cell_mobile_phone_number` AS `cell_mobile_phone_number`
		   FROM `addresses` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `customers`
		      WHERE (`first_name` = 'Carole'
		             OR `last_name` != 'Bernhard')) AS RHS ON (LHS.address_id = RHS.customer_address_id))
		ORDER BY country

	     country
	0  HQCUSAHFd
	1         SA
	2   SXvflUSA
	3         US
	4        USA
	5   q9Bp2USA
Wrong output for fuzzied solution in instance spider/driving_school/0045 (1912)
	EXPECTED OUTPUT ====

		SELECT last_name
		FROM Customers INTERSECT
		SELECT last_name
		FROM Staff

	  last_name
	0     Mertz
	ACTUAL OUTPUT ====

		
		SELECT last_name
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.customer_address_id AS customer_address_id,
		          LHS.customer_status_code AS customer_status_code,
		          LHS.date_became_customer AS date_became_customer,
		          LHS.date_of_birth AS date_of_birth,
		          LHS.first_name AS first_name,
		          LHS.last_name AS last_name,
		          LHS.amount_outstanding AS amount_outstanding,
		          LHS.email_address AS email_address,
		          LHS.phone_number AS phone_number,
		          LHS.cell_mobile_phone_number AS cell_mobile_phone_number,
		          RHS.staff_id AS staff_id,
		          RHS.staff_address_id AS staff_address_id,
		          RHS.nickname AS nickname,
		          RHS.first_name AS first_name_other,
		          RHS.middle_name AS middle_name,
		          RHS.date_of_birth AS date_of_birth_other,
		          RHS.date_joined_staff AS date_joined_staff,
		          RHS.date_left_staff AS date_left_staff
		   FROM customers AS LHS
		   INNER JOIN staff AS RHS ON (LHS.last_name = RHS.last_name))
		ORDER BY last_name

	  last_name
	0     Mertz
	1     Mertz
	2     Mertz
No solution for instance spider/driving_school/0018 (1913)
No solution for instance spider/driving_school/0041 (1914)
Wrong output for fuzzied solution in instance spider/driving_school/0035 (1915)
	EXPECTED OUTPUT ====

		SELECT sum(T1.amount_payment)
		FROM Customer_Payments AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.first_name = "Carole"
		  AND T2.last_name = "Bernhard"

	   sum(t1.amount_payment)
	0                93430.83
	ACTUAL OUTPUT ====

		
		SELECT `sumamount_payment` AS `sum_t1_amount_payment_`
		FROM
		  (SELECT `first_name`,
		          `last_name`,
		          SUM(`amount_payment`) AS `sumamount_payment`
		   FROM
		     (SELECT `LHS`.`customer_id` AS `customer_id`,
		             `LHS`.`datetime_payment` AS `datetime_payment`,
		             `LHS`.`payment_method_code` AS `payment_method_code`,
		             `LHS`.`amount_payment` AS `amount_payment`,
		             `RHS`.`customer_address_id` AS `customer_address_id`,
		             `RHS`.`customer_status_code` AS `customer_status_code`,
		             `RHS`.`date_became_customer` AS `date_became_customer`,
		             `RHS`.`date_of_birth` AS `date_of_birth`,
		             `RHS`.`first_name` AS `first_name`,
		             `RHS`.`last_name` AS `last_name`,
		             `RHS`.`amount_outstanding` AS `amount_outstanding`,
		             `RHS`.`email_address` AS `email_address`,
		             `RHS`.`phone_number` AS `phone_number`,
		             `RHS`.`cell_mobile_phone_number` AS `cell_mobile_phone_number`
		      FROM `customer_payments` AS `LHS`
		      INNER JOIN `customers` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))
		   GROUP BY `first_name`,
		            `last_name`)
		WHERE (`first_name` = 'Carole'
		       OR `last_name` = 'Bernhard')
		ORDER BY sum_t1_amount_payment_

	   sum_t1_amount_payment_
	0                56602.05
	1                71620.66
	2                85763.15
	3                88499.19
	4                93430.83
	5                94130.00
Wrong output for fuzzied solution in instance spider/driving_school/0007 (1918)
	EXPECTED OUTPUT ====

		SELECT date_left_staff
		FROM Staff
		WHERE first_name = "Janessa"
		  AND last_name = "Sawayn";

	Empty DataFrame
	Columns: [date_left_staff]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `date_left_staff`
		FROM `staff`
		WHERE (`first_name` = 'Janessa'
		       OR `last_name` = 'Sawayn')
		ORDER BY date_left_staff

	       date_left_staff
	0  2018-03-10 02:30:19
No solution for instance spider/driving_school/0034 (1919)
Wrong output for fuzzied solution in instance spider/driving_school/0024 (1920)
	EXPECTED OUTPUT ====

		SELECT date_became_customer
		FROM Customers
		WHERE first_name = "Carole"
		  AND last_name = "Bernhard";

	  date_became_customer
	0  2015-12-05 18:33:13
	ACTUAL OUTPUT ====

		
		SELECT `date_became_customer`
		FROM `customers`
		WHERE (`first_name` = 'Carole'
		       OR `last_name` = 'Bernhard')
		ORDER BY date_became_customer

	  date_became_customer
	0  2015-12-05 18:33:13
	1  2015-12-22 03:13:40
	2  2016-01-22 18:48:16
	3  2016-04-16 05:56:39
	4  2016-05-06 05:41:12
	5  2016-07-11 04:09:16
Wrong output for fuzzied solution in instance spider/driving_school/0043 (1924)
	EXPECTED OUTPUT ====

		SELECT avg(price)
		FROM Lessons AS T1
		JOIN Staff AS T2 ON T1.staff_id = T2.staff_id
		WHERE T2.first_name = "Janessa"
		  AND T2.last_name = "Sawayn";

	  avg(price)
	0       None
	ACTUAL OUTPUT ====

		
		SELECT `meanprice` AS `avg_price_`
		FROM
		  (SELECT `LHS`.`staff_id` AS `staff_id`,
		          `LHS`.`staff_address_id` AS `staff_address_id`,
		          `LHS`.`nickname` AS `nickname`,
		          `LHS`.`first_name` AS `first_name`,
		          `LHS`.`middle_name` AS `middle_name`,
		          `LHS`.`last_name` AS `last_name`,
		          `LHS`.`date_of_birth` AS `date_of_birth`,
		          `LHS`.`date_joined_staff` AS `date_joined_staff`,
		          `LHS`.`date_left_staff` AS `date_left_staff`,
		          `RHS`.`lesson_time` AS `lesson_time`,
		          `RHS`.`meanprice` AS `meanprice`
		   FROM `staff` AS `LHS`
		   INNER JOIN
		     (SELECT `lesson_time`,
		             `staff_id`,
		             AVG(`price`) AS `meanprice`
		      FROM `lessons`
		      GROUP BY `lesson_time`,
		               `staff_id`) AS `RHS` ON (`LHS`.`staff_id` = `RHS`.`staff_id`))
		WHERE (`first_name` = 'Janessa'
		       AND `last_name` = 'Sawayn')
		ORDER BY avg_price_

	Empty DataFrame
	Columns: [avg_price_]
	Index: []
Wrong output for fuzzied solution in instance spider/driving_school/0046 (1925)
	EXPECTED OUTPUT ====

		SELECT first_name
		FROM Staff
		EXCEPT
		SELECT T2.first_name
		FROM Lessons AS T1
		JOIN Staff AS T2 ON T1.staff_id = T2.staff_id

	     first_name
	0  2iAQERebekah
	1      Jedidiah
	2        Margie
	3       Rebekah
	ACTUAL OUTPUT ====

		
		SELECT first_name
		FROM
		  (SELECT *
		   FROM staff AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM lessons AS RHS
		        WHERE (LHS.staff_id = RHS.staff_id) ))
		ORDER BY first_name

	     first_name
	0  2iAQERebekah
	1      Jedidiah
	2        Margie
	3       Rebekah
	4       Rebekah
Wrong output for fuzzied solution in instance spider/driving_school/0047 (1926)
	EXPECTED OUTPUT ====

		SELECT T1.vehicle_id,
		       T1.vehicle_details
		FROM Vehicles AS T1
		JOIN Lessons AS T2 ON T1.vehicle_id = T2.vehicle_id
		GROUP BY T1.vehicle_id
		ORDER BY count(*) DESC
		LIMIT 1

	   vehicle_id vehicle_details
	0           4           Truck
	ACTUAL OUTPUT ====

		
		SELECT vehicle_id,
		       vehicle_details
		FROM
		  (SELECT LHS.lesson_id AS lesson_id,
		          LHS.customer_id AS customer_id,
		          LHS.lesson_status_code AS lesson_status_code,
		          LHS.staff_id AS staff_id,
		          LHS.vehicle_id AS vehicle_id,
		          LHS.lesson_date AS lesson_date,
		          LHS.lesson_time AS lesson_time,
		          LHS.price AS price,
		          RHS.vehicle_details AS vehicle_details
		   FROM lessons AS LHS
		   INNER JOIN
		     (SELECT vehicle_id,
		             vehicle_details,
		             COUNT(*) OVER () AS n
		      FROM vehicles) AS RHS ON (LHS.vehicle_id = RHS.vehicle_id
		                                   AND LHS.lesson_id = RHS.n))
		ORDER BY vehicle_id

	   vehicle_id vehicle_details
	0          -1            Truc
Wrong output for fuzzied solution in instance spider/driving_school/0014 (1927)
	EXPECTED OUTPUT ====

		SELECT T1.zip_postcode
		FROM Addresses AS T1
		JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id
		WHERE T2.first_name = "Janessa"
		  AND T2.last_name = "Sawayn";

	Empty DataFrame
	Columns: [zip_postcode]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `zip_postcode`
		FROM
		  (SELECT `address_id`,
		          `line_1_number_building`,
		          `city`,
		          `zip_postcode`,
		          `state_province_county`,
		          `country`,
		          `staff_id`,
		          `nickname`,
		          `first_name`,
		          `middle_name`,
		          `last_name`,
		          `date_of_birth`,
		          `date_joined_staff`,
		          `date_left_staff`,
		          `address_id` AS `staff_address_id`
		   FROM
		     (SELECT `LHS`.`address_id` AS `address_id`,
		             `LHS`.`line_1_number_building` AS `line_1_number_building`,
		             `LHS`.`city` AS `city`,
		             `LHS`.`zip_postcode` AS `zip_postcode`,
		             `LHS`.`state_province_county` AS `state_province_county`,
		             `LHS`.`country` AS `country`,
		             `RHS`.`staff_id` AS `staff_id`,
		             `RHS`.`nickname` AS `nickname`,
		             `RHS`.`first_name` AS `first_name`,
		             `RHS`.`middle_name` AS `middle_name`,
		             `RHS`.`last_name` AS `last_name`,
		             `RHS`.`date_of_birth` AS `date_of_birth`,
		             `RHS`.`date_joined_staff` AS `date_joined_staff`,
		             `RHS`.`date_left_staff` AS `date_left_staff`
		      FROM `addresses` AS `LHS`
		      INNER JOIN `staff` AS `RHS` ON (`LHS`.`address_id` = `RHS`.`staff_address_id`)))
		WHERE (`first_name` = 'Janessa'
		       OR `last_name` = 'Sawayn')
		ORDER BY zip_postcode

	  zip_postcode
	0         5098
Wrong output for fuzzied solution in instance spider/driving_school/0009 (1928)
	EXPECTED OUTPUT ====

		SELECT nickname
		FROM Staff
		WHERE first_name = "Janessa"
		  AND last_name = "Sawayn";

	Empty DataFrame
	Columns: [nickname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `nickname`
		FROM `staff`
		WHERE (`first_name` = 'Janessa'
		       OR `last_name` = 'Sawayn')
		ORDER BY nickname

	            nickname
	0  tCyklweldon.kling
Wrong output for fuzzied solution in instance spider/driving_school/0011 (1930)
	EXPECTED OUTPUT ====

		SELECT T1.city
		FROM Addresses AS T1
		JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id
		WHERE T2.first_name = "Janessa"
		  AND T2.last_name = "Sawayn";

	Empty DataFrame
	Columns: [city]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `city`
		FROM
		  (SELECT `address_id`,
		          `line_1_number_building`,
		          `city`,
		          `zip_postcode`,
		          `state_province_county`,
		          `country`,
		          `staff_id`,
		          `nickname`,
		          `first_name`,
		          `middle_name`,
		          `last_name`,
		          `date_of_birth`,
		          `date_joined_staff`,
		          `date_left_staff`,
		          `address_id` AS `staff_address_id`
		   FROM
		     (SELECT `LHS`.`address_id` AS `address_id`,
		             `LHS`.`line_1_number_building` AS `line_1_number_building`,
		             `LHS`.`city` AS `city`,
		             `LHS`.`zip_postcode` AS `zip_postcode`,
		             `LHS`.`state_province_county` AS `state_province_county`,
		             `LHS`.`country` AS `country`,
		             `RHS`.`staff_id` AS `staff_id`,
		             `RHS`.`nickname` AS `nickname`,
		             `RHS`.`first_name` AS `first_name`,
		             `RHS`.`middle_name` AS `middle_name`,
		             `RHS`.`last_name` AS `last_name`,
		             `RHS`.`date_of_birth` AS `date_of_birth`,
		             `RHS`.`date_joined_staff` AS `date_joined_staff`,
		             `RHS`.`date_left_staff` AS `date_left_staff`
		      FROM `addresses` AS `LHS`
		      INNER JOIN `staff` AS `RHS` ON (`LHS`.`address_id` = `RHS`.`staff_address_id`)))
		WHERE (`first_name` = 'Janessa'
		       OR `last_name` = 'Sawayn')
		ORDER BY city

	         city
	0  Damianfort
No solution for instance spider/driving_school/0029 (1931)
Wrong output for fuzzied solution in instance spider/driving_school/0044 (1933)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Lessons AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.first_name = "Ray"

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT `vehicle_id` AS `count___`
		FROM
		  (SELECT `LHS`.`lesson_id` AS `lesson_id`,
		          `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`lesson_status_code` AS `lesson_status_code`,
		          `LHS`.`staff_id` AS `staff_id`,
		          `LHS`.`vehicle_id` AS `vehicle_id`,
		          `LHS`.`lesson_date` AS `lesson_date`,
		          `LHS`.`lesson_time` AS `lesson_time`,
		          `LHS`.`price` AS `price`,
		          `RHS`.`first_name` AS `first_name`,
		          `RHS`.`last_name` AS `last_name`
		   FROM `lessons` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT `first_name`,
		                `last_name`,
		                COUNT(DISTINCT `first_name`) AS `n_distinct`
		         FROM `customers`
		         GROUP BY `first_name`,
		                  `last_name`)
		      WHERE (`first_name` = 'Ray')) AS RHS ON (LHS.staff_id = RHS.n_distinct))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/driving_school/0040 (1934)
Wrong output for fuzzied solution in instance spider/driving_school/0028 (1935)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Lessons AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.first_name = "Rylan"
		  AND T2.last_name = "Goodwin"
		  AND T1.lesson_status_code = "Completed";

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT `first_name`,
		          `price`,
		          COUNT(DISTINCT `first_name`) AS `n_distinct`
		   FROM
		     (SELECT `customer_address_id` AS `customer_id`,
		             `customer_address_id`,
		             `customer_status_code`,
		             `date_became_customer`,
		             `date_of_birth`,
		             `first_name`,
		             `last_name`,
		             `amount_outstanding`,
		             `email_address`,
		             `phone_number`,
		             `cell_mobile_phone_number`,
		             `lesson_id`,
		             `lesson_status_code`,
		             `vehicle_id`,
		             `lesson_date`,
		             `lesson_time`,
		             `price`,
		             `staff_id`
		      FROM
		        (SELECT `customer_id`,
		                `customer_address_id`,
		                `customer_status_code`,
		                `date_became_customer`,
		                `date_of_birth`,
		                `first_name`,
		                `last_name`,
		                `amount_outstanding`,
		                `email_address`,
		                `phone_number`,
		                `cell_mobile_phone_number`,
		                `lesson_id`,
		                `lesson_status_code`,
		                `vehicle_id`,
		                `lesson_date`,
		                `lesson_time`,
		                `price`,
		                `customer_id` AS `staff_id`
		         FROM
		           (SELECT `LHS`.`customer_id` AS `customer_id`,
		                   `LHS`.`customer_address_id` AS `customer_address_id`,
		                   `LHS`.`customer_status_code` AS `customer_status_code`,
		                   `LHS`.`date_became_customer` AS `date_became_customer`,
		                   `LHS`.`date_of_birth` AS `date_of_birth`,
		                   `LHS`.`first_name` AS `first_name`,
		                   `LHS`.`last_name` AS `last_name`,
		                   `LHS`.`amount_outstanding` AS `amount_outstanding`,
		                   `LHS`.`email_address` AS `email_address`,
		                   `LHS`.`phone_number` AS `phone_number`,
		                   `LHS`.`cell_mobile_phone_number` AS `cell_mobile_phone_number`,
		                   `RHS`.`lesson_id` AS `lesson_id`,
		                   `RHS`.`lesson_status_code` AS `lesson_status_code`,
		                   `RHS`.`vehicle_id` AS `vehicle_id`,
		                   `RHS`.`lesson_date` AS `lesson_date`,
		                   `RHS`.`lesson_time` AS `lesson_time`,
		                   `RHS`.`price` AS `price`
		            FROM
		              (SELECT *
		               FROM `customers`
		               WHERE (`first_name` != 'Rylan'
		                      OR `last_name` != 'Goodwin')) AS `LHS`
		            INNER JOIN
		              (SELECT *
		               FROM `lessons`
		               WHERE (`lesson_status_code` != 'Completed')) AS RHS ON (LHS.customer_id = RHS.staff_id
		                                                                       AND LHS.customer_address_id = RHS.customer_id))))
		   GROUP BY first_name,
		            price)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/sakila_1/0002 (1938)
	EXPECTED OUTPUT ====

		SELECT first_name
		FROM actor
		GROUP BY first_name
		ORDER BY count(*) DESC
		LIMIT 1

	  first_name
	0    KENNETH
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT first_name
		FROM
		  (SELECT LHS.actor_id AS actor_id,
		          LHS.first_name AS first_name,
		          LHS.last_name AS last_name,
		          LHS.last_update AS last_update,
		          RHS.first_name AS first_name_other
		   FROM actor AS LHS
		   INNER JOIN
		     (SELECT first_name,
		             last_name,
		             COUNT() AS n
		      FROM actor
		      GROUP BY first_name,
		               last_name) AS RHS ON (LHS.actor_id = RHS.n
		                                     AND LHS.last_name = RHS.last_name))
		ORDER BY first_name

	Empty DataFrame
	Columns: [first_name]
	Index: []
Wrong output for fuzzied solution in instance spider/sakila_1/0036 (1939)
	EXPECTED OUTPUT ====

		SELECT T1.first_name,
		       T1.last_name
		FROM customer AS T1
		JOIN rental AS T2 ON T1.customer_id = T2.customer_id
		ORDER BY T2.rental_date ASC
		LIMIT 1

	  first_name    last_name
	0    STANLEY  MNWFwVARNEY
	ACTUAL OUTPUT ====

		
		SELECT first_name,
		       last_name
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.store_id AS store_id,
		          LHS.first_name AS first_name,
		          LHS.last_name AS last_name,
		          LHS.email AS email,
		          LHS.address_id AS address_id,
		          LHS.active AS active,
		          LHS.create_date AS create_date,
		          LHS.last_update AS last_update,
		          RHS.rental_date AS rental_date,
		          RHS.inventory_id AS inventory_id,
		          RHS.return_date AS return_date,
		          RHS.staff_id AS staff_id,
		          RHS.last_update AS last_update_other
		   FROM customer AS LHS
		   INNER JOIN rental AS RHS ON (LHS.customer_id = RHS.customer_id
		                                   AND LHS.store_id = RHS.rental_id))
		ORDER BY first_name

	Empty DataFrame
	Columns: [first_name, last_name]
	Index: []
Wrong output for fuzzied solution in instance spider/sakila_1/0017 (1940)
	EXPECTED OUTPUT ====

		SELECT store_id
		FROM inventory
		GROUP BY store_id
		ORDER BY count(*) DESC
		LIMIT 1

	      store_id
	0  18106902765
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT store_id
		FROM
		  (SELECT LHS.inventory_id AS inventory_id,
		          LHS.film_id AS film_id,
		          LHS.store_id AS store_id,
		          LHS.last_update AS last_update,
		          LHS.n AS n,
		          RHS.film_id AS film_id_other,
		          RHS.last_update AS last_update_other
		   FROM
		     (SELECT inventory_id,
		             film_id,
		             store_id,
		             last_update,
		             COUNT(*) OVER () AS n
		      FROM inventory) AS LHS
		   INNER JOIN inventory AS RHS ON (LHS.store_id = RHS.store_id
		                                      AND LHS.n = RHS.inventory_id))
		ORDER BY store_id

	Empty DataFrame
	Columns: [store_id]
	Index: []
No solution for instance spider/sakila_1/0008 (1941)
Wrong output for fuzzied solution in instance spider/sakila_1/0038 (1943)
	EXPECTED OUTPUT ====

		SELECT store_id
		FROM customer
		GROUP BY store_id
		ORDER BY count(*) DESC
		LIMIT 1

	      store_id
	0  19273082420
	ACTUAL OUTPUT ====

		
		SELECT customer_id AS store_id
		FROM
		  (SELECT customer_id,
		          email,
		          COUNT() AS n
		   FROM
		     (SELECT store_id AS customer_id,
		             store_id,
		             first_name,
		             last_name,
		             email,
		             address_id,
		             active,
		             create_date,
		             last_update,
		             first_name_other,
		             last_name_other,
		             email_other,
		             address_id_other,
		             active_other,
		             create_date_other,
		             last_update_other
		      FROM
		        (SELECT customer_id,
		                customer_id AS store_id,
		                first_name,
		                last_name,
		                email,
		                address_id,
		                active,
		                create_date,
		                last_update,
		                first_name_other,
		                last_name_other,
		                email_other,
		                address_id_other,
		                active_other,
		                create_date_other,
		                last_update_other
		         FROM
		           (SELECT LHS.customer_id AS customer_id,
		                   LHS.store_id AS store_id,
		                   LHS.first_name AS first_name,
		                   LHS.last_name AS last_name,
		                   LHS.email AS email,
		                   LHS.address_id AS address_id,
		                   LHS.active AS active,
		                   LHS.create_date AS create_date,
		                   LHS.last_update AS last_update,
		                   RHS.first_name AS first_name_other,
		                   RHS.last_name AS last_name_other,
		                   RHS.email AS email_other,
		                   RHS.address_id AS address_id_other,
		                   RHS.active AS active_other,
		                   RHS.create_date AS create_date_other,
		                   RHS.last_update AS last_update_other
		            FROM customer AS LHS
		            INNER JOIN customer AS RHS ON (LHS.customer_id = RHS.store_id
		                                              AND LHS.store_id = RHS.customer_id))))
		   GROUP BY customer_id,
		            email)
		ORDER BY store_id

	Empty DataFrame
	Columns: [store_id]
	Index: []
Wrong output for fuzzied solution in instance spider/sakila_1/0003 (1944)
	EXPECTED OUTPUT ====

		SELECT first_name,
		       last_name
		FROM actor
		GROUP BY first_name,
		         last_name
		ORDER BY count(*) DESC
		LIMIT 1

	  first_name  last_name
	0     DUSTIN  DEANaRp1W
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT first_name_other AS first_name,
		                last_name_other AS last_name
		FROM
		  (SELECT LHS.first_name AS first_name,
		          LHS.last_name AS last_name,
		          LHS.n AS n,
		          RHS.first_name AS first_name_other,
		          RHS.last_name AS last_name_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT first_name,
		             last_name,
		             COUNT() AS n
		      FROM actor
		      GROUP BY first_name,
		               last_name) AS LHS
		   CROSS JOIN
		     (SELECT first_name,
		             last_name,
		             COUNT() AS n
		      FROM actor
		      GROUP BY first_name,
		               last_name) AS RHS)
		WHERE (n < n_other)
		ORDER BY first_name

	Empty DataFrame
	Columns: [first_name, last_name]
	Index: []
No solution for instance spider/sakila_1/0022 (1945)
Wrong output for fuzzied solution in instance spider/sakila_1/0030 (1946)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT rating)
		FROM film

	   count(distinct rating)
	0                      11
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n_distinct AS count_distinct_rating_
		FROM
		  (SELECT last_update,
		          rental_rate,
		          COUNT(DISTINCT rating) AS n_distinct
		   FROM film
		   GROUP BY last_update,
		            rental_rate)
		ORDER BY count_distinct_rating_

	   count_distinct_rating_
	0                       1
Wrong output for fuzzied solution in instance spider/sakila_1/0013 (1947)
	EXPECTED OUTPUT ====

		SELECT title,
		       rental_rate
		FROM film
		ORDER BY rental_rate DESC
		LIMIT 1

	          title  rental_rate
	0  MINDS TRUMAN            5
	ACTUAL OUTPUT ====

		
		SELECT title,
		       rental_rate
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM film
		      ORDER BY rental_duration)
		   LIMIT 1)

	                   title  rental_rate
	0  TOMATOES HELLFIGHTERS         4.99
No solution for instance spider/sakila_1/0006 (1948)
Wrong output for base solution in instance spider/sakila_1/0004 (1949)
	EXPECTED OUTPUT ====

	           district
	0         Abu Dhabi
	1             Adana
	2           Alberta
	3    Andhra Pradesh
	4             Bihar
	..              ...
	100       Yamaguchi
	101        Zhejiang
	102    al-Qalyubiya
	103     al-Sharqiya
	104             NaN
	
	[105 rows x 1 columns]
	ACTUAL OUTPUT ====

		SELECT district
		FROM address
		GROUP BY district
		HAVING count(*) >= 2

	           district
	0                  
	1         Abu Dhabi
	2             Adana
	3           Alberta
	4    Andhra Pradesh
	..              ...
	100        Xinxiang
	101       Yamaguchi
	102        Zhejiang
	103    al-Qalyubiya
	104     al-Sharqiya
	
	[105 rows x 1 columns]
Wrong output for ground truth in instance spider/sakila_1/0004 (1949)
Wrong output for fuzzied solution in instance spider/sakila_1/0012 (1950)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM customer
		WHERE active = '1'

	   count(*)
	0        20
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT customer_id,
		          customer_id AS store_id,
		          first_name,
		          last_name,
		          email,
		          address_id,
		          active,
		          create_date,
		          last_update,
		          customer_id_other,
		          first_name_other,
		          last_name_other,
		          email_other,
		          address_id_other,
		          create_date_other,
		          last_update_other
		   FROM
		     (SELECT LHS.customer_id AS customer_id,
		             LHS.store_id AS store_id,
		             LHS.first_name AS first_name,
		             LHS.last_name AS last_name,
		             LHS.email AS email,
		             LHS.address_id AS address_id,
		             LHS.active AS active,
		             LHS.create_date AS create_date,
		             LHS.last_update AS last_update,
		             RHS.customer_id AS customer_id_other,
		             RHS.first_name AS first_name_other,
		             RHS.last_name AS last_name_other,
		             RHS.email AS email_other,
		             RHS.address_id AS address_id_other,
		             RHS.create_date AS create_date_other,
		             RHS.last_update AS last_update_other
		      FROM customer AS LHS
		      INNER JOIN customer AS RHS ON (LHS.customer_id = RHS.store_id
		                                        AND LHS.active = RHS.active)))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/sakila_1/0015 (1951)
Wrong output for fuzzied solution in instance spider/sakila_1/0032 (1954)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM inventory
		WHERE store_id = 1

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT last_update,
		          store_id,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM inventory
		      WHERE (store_id <= 1))
		   GROUP BY last_update,
		            store_id)
		ORDER BY count___

	    count___
	0          1
	1          1
	2          1
	3          1
	4          1
	5          1
	6          1
	7          1
	8          1
	9          1
	10         1
	11         1
	12         1
	13         1
	14         1
	15         1
Wrong output for base solution in instance spider/sakila_1/0018 (1955)
	EXPECTED OUTPUT ====

	   sum_amount_
	0     67416.51
	ACTUAL OUTPUT ====

		SELECT sum(amount)
		FROM payment

	   sum(amount)
	0     67416.51
Wrong output for ground truth in instance spider/sakila_1/0018 (1955)
Error while executing solution for instance spider/sakila_1/0041 (1956)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `first_name`
FROM
  (SELECT *
   FROM `customer` AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM `rental`
           WHERE (`rental_date` > parse_datetime('2005-08-23 02:06:01'))) AS RHS
        WHERE (LHS.customer_id = RHS.customer_id) ))
ORDER BY first_name]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/sakila_1/0035 (1957)
	EXPECTED OUTPUT ====

		SELECT title
		FROM film
		WHERE LENGTH > 100
		  OR rating = 'PG'
		EXCEPT
		SELECT title
		FROM film
		WHERE replacement_cost > 200

	                      title
	0         22)i0BENEATH RUSH
	1       49YZLmsr(SjpAM8LQ)B
	2          7xGz(ee60qbiku8S
	3           ANGER PINOCCHIO
	4         BENEATH RUSH7neEy
	5         BENEATH RUSHayVDR
	6         BENEATH RUSHxuoJb
	7    D NBANGER PINOCCHIOdCs
	8   DNpDFLQLBZ9pom4MShSvvkG
	9               ENEATH RUSH
	10      LEAGUE HELLFIGHTERS
	11       LQLBZ9pom4MShSvvkG
	12         XLsgrP0CPYaFmayO
	13     bjWSTAR OPERATIONnSU
	14        bvaZgg2YrF2HnN Ii
	15       fGdQDm9igtPlJ5Vw0g
	16       j85OLC7IxRxy5xctxz
	17             k2aMxGA8M)Fg
	18   nx3XLsgrP0CPYaFmayOOhq
	19        oTIybBENEATH RUSH
	20      ogQtqr5Zjdjnpa7JUuD
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT *
		   FROM `film`
		   WHERE (`length` < 100
		          OR `length` <= 200))
		WHERE (`rating` = 'PG'
		       OR LENGTH > 100)
		ORDER BY title

	                     title
	0        22)i0BENEATH RUSH
	1      49YZLmsr(SjpAM8LQ)B
	2         7xGz(ee60qbiku8S
	3          ANGER PINOCCHIO
	4         BANGER PINOCCHIO
	5         BANGER PINOCCHIO
	6         BANGER PINOCCHIO
	7         BANGER PINOCCHIO
	8             BENEATH RUSH
	9             BENEATH RUSH
	10            BENEATH RUSH
	11       BENEATH RUSH7neEy
	12       BENEATH RUSHayVDR
	13       BENEATH RUSHxuoJb
	14     LEAGUE HELLFIGHTERS
	15     LEAGUE HELLFIGHTERS
	16     LEAGUE HELLFIGHTERS
	17      LQLBZ9pom4MShSvvkG
	18             MAIDEN HOME
	19             MAIDEN HOME
	20    N8e35oEeCPCMC1x zfPl
	21          STAR OPERATION
	22          STAR OPERATION
	23          STAR OPERATION
	24        XLsgrP0CPYaFmayO
	25       ause6QhxNY3xLi7KF
	26    bjWSTAR OPERATIONnSU
	27       bvaZgg2YrF2HnN Ii
	28      fGdQDm9igtPlJ5Vw0g
	29      j85OLC7IxRxy5xctxz
	30            k2aMxGA8M)Fg
	31  nx3XLsgrP0CPYaFmayOOhq
	32       oTIybBENEATH RUSH
	33     ogQtqr5Zjdjnpa7JUuD
No solution for instance spider/sakila_1/0020 (1958)
No solution for instance spider/sakila_1/0019 (1959)
Wrong output for fuzzied solution in instance spider/sakila_1/0007 (1960)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM address
		WHERE district = 'California'

	   count(*)
	0         3
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `district`,
		          `last_update`,
		          COUNT() AS `n`
		   FROM `address`
		   GROUP BY `district`,
		            `last_update`)
		WHERE (`district` = 'California')
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
Wrong output for fuzzied solution in instance spider/sakila_1/0024 (1962)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT language_id)
		FROM film

	   count(distinct language_id)
	0                           13
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count_distinct_language_id_
		FROM
		  (SELECT original_language_id,
		          title,
		          COUNT() AS n
		   FROM film
		   GROUP BY original_language_id,
		            title)
		ORDER BY count_distinct_language_id_

	   count_distinct_language_id_
	0                            1
	1                            2
No solution for instance spider/sakila_1/0023 (1964)
No solution for instance spider/sakila_1/0014 (1966)
Wrong output for fuzzied solution in instance spider/sakila_1/0009 (1967)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM city AS T1
		JOIN country AS T2 ON T1.country_id = T2.country_id
		WHERE T2.country = 'Australia'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`country_id` AS `country_id`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`last_update` AS `last_update`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`country_id` AS `country_id`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`last_update` AS `last_update`
		      FROM `country` AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `country`
		         WHERE (`country` = 'Australia')) AS RHS ON (LHS.country_id = RHS.country_id
		                                                     AND LHS.country = RHS.country
		                                                     AND LHS.last_update = RHS.last_update)) AS LHS
		   INNER JOIN
		     (SELECT country_id,
		             COUNT() AS n
		      FROM city
		      GROUP BY country_id) AS RHS ON (LHS.country_id = RHS.country_id))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/sakila_1/0031 (1970)
No solution for instance spider/manufactory_1/0037 (1972)
Wrong output for fuzzied solution in instance spider/manufactory_1/0036 (1974)
	EXPECTED OUTPUT ====

		SELECT avg(T1.Price),
		       T2.name
		FROM products AS T1
		JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code
		GROUP BY T2.name

	   avg(t1.price)            name
	0   1.499800e+02    Fujitsu0FD2H
	1   1.499900e+02   OgNFujitsuf0n
	2   1.500000e+02      (SpSony4Qb
	3   1.500000e+02  cnBJvPCueCXHGB
	4   1.599933e+02   AJfFujitsuN)L
	5   7.711228e+08            Sony
	6   1.500446e+09         Fujitsu
	7   1.579171e+09   Creative Labs
	8   3.155315e+09          Fujits
	9   6.191201e+09   oWKFujitsu2gD
	ACTUAL OUTPUT ====

		
		SELECT meanprice AS avg_t1_price_,
		       name
		FROM
		  (SELECT code,
		          name,
		          AVG(price) AS meanprice
		   FROM
		     (SELECT code,
		             name,
		             headquarter,
		             founder,
		             revenue,
		             code_other,
		             name_other,
		             price,
		             code AS manufacturer
		      FROM
		        (SELECT LHS.code AS code,
		                LHS.name AS name,
		                LHS.headquarter AS headquarter,
		                LHS.founder AS founder,
		                LHS.revenue AS revenue,
		                RHS.code AS code_other,
		                RHS.name AS name_other,
		                RHS.price AS price
		         FROM manufacturers AS LHS
		         INNER JOIN products AS RHS ON (LHS.code = RHS.manufacturer)))
		   GROUP BY code,
		            name)
		ORDER BY avg_t1_price_

	    avg_t1_price_            name
	0    4.980000e+00   Creative Labs
	1    4.980000e+00         Fujitsu
	2    5.000000e+00         Fujitsu
	3    5.005000e+00            Sony
	4    5.005000e+00            Sony
	5    1.499800e+02         Fujitsu
	6    1.499800e+02    Fujitsu0FD2H
	7    1.499900e+02   OgNFujitsuf0n
	8    1.500000e+02      (SpSony4Qb
	9    1.500000e+02   Creative Labs
	10   1.500000e+02  cnBJvPCueCXHGB
	11   1.500200e+02            Sony
	12   1.599933e+02   AJfFujitsuN)L
	13   1.799900e+02            Sony
	14   1.800100e+02          Fujits
	15   2.301389e+09   Creative Labs
	16   3.000892e+09         Fujitsu
	17   3.470052e+09            Sony
	18   4.015293e+09   Creative Labs
	19   5.258858e+09          Fujits
	20   6.191201e+09   oWKFujitsu2gD
No solution for instance spider/manufactory_1/0017 (1975)
Wrong output for fuzzied solution in instance spider/manufactory_1/0008 (1976)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM manufacturers
		WHERE headquarter = 'Tokyo'
		  OR headquarter = 'Beijing'

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `headquarter`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM `manufacturers`
		      WHERE (`headquarter` = 'Tokyo'
		             OR `headquarter` = 'Beijing')))
		ORDER BY count___

	   count___
	0         2
Error while executing solution for instance spider/manufactory_1/0039 (1977)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/manufactory_1/0039 (1977)
Wrong output for fuzzied solution in instance spider/manufactory_1/0022 (1981)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT T1.name),
		       T2.Headquarter
		FROM products AS T1
		JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code
		GROUP BY T2.Headquarter

	   count(distinct t1.name)  headquarter
	0                        1      Beijing
	1                        2  SXvflAustin
	2                        5        ustin
	ACTUAL OUTPUT ====

		
		SELECT n AS count_distinct_t1_name_,
		       headquarter
		FROM
		  (SELECT LHS.code AS code,
		          LHS.name AS name,
		          LHS.headquarter AS headquarter,
		          LHS.founder AS founder,
		          LHS.revenue AS revenue,
		          RHS.n AS n
		   FROM manufacturers AS LHS
		   INNER JOIN
		     (SELECT manufacturer,
		             COUNT() AS n
		      FROM products
		      GROUP BY manufacturer) AS RHS ON (LHS.code = RHS.manufacturer))
		ORDER BY count_distinct_t1_name_

	   count_distinct_t1_name_  headquarter
	0                        1      Beijing
	1                        1        ustin
	2                        3  SXvflAustin
	3                        4        ustin
Wrong output for fuzzied solution in instance spider/manufactory_1/0006 (1984)
	EXPECTED OUTPUT ====

		SELECT sum(revenue)
		FROM manufacturers
		WHERE headquarter = 'Austin'

	  sum(revenue)
	0         None
	ACTUAL OUTPUT ====

		
		SELECT `sumrevenue` AS `sum_revenue_`
		FROM
		  (SELECT `code`,
		          `name`,
		          SUM(`revenue`) AS `sumrevenue`
		   FROM
		     (SELECT *
		      FROM `manufacturers`
		      WHERE (`headquarter` = 'Austin'))
		   GROUP BY code,
		            name)
		ORDER BY sum_revenue_

	Empty DataFrame
	Columns: [sum_revenue_]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for fuzzied solution in instance spider/manufactory_1/0005 (1988)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM manufacturers
		WHERE founder = 'Andy'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `code` AS `count___`
		FROM `manufacturers`
		WHERE (`founder` = 'Andy')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Error while executing solution for instance spider/manufactory_1/0032 (1990)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT price) OVER () AS count___
FROM products
WHERE (price < 180.0)
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/manufactory_1/0018 (1991)
	EXPECTED OUTPUT ====

		SELECT sum(revenue),
		       founder
		FROM manufacturers
		GROUP BY founder

	    sum(revenue)        founder
	0   2.998000e+01           10TT
	1   2.000100e+02         2IrKFi
	2   3.041855e+09      4l(RfMary
	3   2.000200e+02          CDhUi
	4   2.000000e+02           Jame
	5   1.999800e+02          James
	6   1.999900e+02     Jamess(oUH
	7   1.190622e+09           Mary
	8   2.000100e+02      Mary8oCto
	9   2.000100e+02      MaryjfNTN
	10  5.000000e+01      P83hIMary
	11  1.300100e+02         Robert
	12  2.999000e+01  ZoNzrvjOXBCL4
	13  1.000339e+10            ary
	14  8.104009e+09    h1Mola2EYfd
	15  3.001000e+01           ofpN
	16  2.000200e+02     xPYMary Y8
	17  3.002000e+01          yuDlA
	ACTUAL OUTPUT ====

		
		SELECT revenue AS sum_revenue_,
		       founder
		FROM manufacturers
		ORDER BY sum_revenue_

	    sum_revenue_        founder
	0   2.998000e+01           10TT
	1   2.000100e+02         2IrKFi
	2   3.041855e+09      4l(RfMary
	3   2.000200e+02          CDhUi
	4   2.000000e+02           Jame
	5   1.999800e+02          James
	6   1.999900e+02     Jamess(oUH
	7   2.998000e+01           Mary
	8   5.002000e+01           Mary
	9   2.000000e+02           Mary
	10  2.000000e+02           Mary
	11  2.000200e+02           Mary
	12  1.190622e+09           Mary
	13  2.000100e+02      Mary8oCto
	14  2.000100e+02      MaryjfNTN
	15  5.000000e+01      P83hIMary
	16  3.001000e+01         Robert
	17  5.000000e+01         Robert
	18  5.000000e+01         Robert
	19  2.999000e+01  ZoNzrvjOXBCL4
	20  5.000000e+01            ary
	21  8.742344e+08            ary
	22  2.278080e+09            ary
	23  6.851074e+09            ary
	24  8.104009e+09    h1Mola2EYfd
	25  3.001000e+01           ofpN
	26  2.000200e+02     xPYMary Y8
	27  3.002000e+01          yuDlA
Wrong output for fuzzied solution in instance spider/manufactory_1/0020 (1993)
	EXPECTED OUTPUT ====

		SELECT sum(revenue),
		       name
		FROM manufacturers
		GROUP BY name

	   sum(revenue)                  name
	0          50.0       Hewlett-Packard
	1          50.0  Hewlett-PackardEun2W
	2          30.0                   Son
	3          80.0                  Sony
	ACTUAL OUTPUT ====

		
		SELECT revenue AS sum_revenue_,
		       name
		FROM manufacturers
		ORDER BY sum_revenue_

	   sum_revenue_                  name
	0          50.0       Hewlett-Packard
	1          50.0  Hewlett-PackardEun2W
	2          30.0                   Son
	3          30.0                  Sony
	4          50.0                  Sony
Wrong output for fuzzied solution in instance spider/manufactory_1/0019 (1994)
	EXPECTED OUTPUT ====

		SELECT name,
		       max(revenue),
		       Headquarter
		FROM manufacturers
		GROUP BY Headquarter

	                   name  max(revenue)  headquarter
	0                  Sony          50.0      Beijing
	1       Hewlett-Packard          50.0  SXvflAustin
	2  Hewlett-PackardEun2W          50.0        ustin
	ACTUAL OUTPUT ====

		
		SELECT name,
		       revenue AS max_revenue_,
		       headquarter
		FROM
		  (SELECT headquarter,
		          name,
		          MAX(revenue) AS revenue
		   FROM manufacturers
		   GROUP BY headquarter,
		            name)
		ORDER BY name

	                   name  max_revenue_  headquarter
	0                  Sony          50.0      Beijing
	1       Hewlett-Packard          50.0  SXvflAustin
	2                   Son          30.0        ustin
	3  Hewlett-PackardEun2W          50.0        ustin
Wrong output for fuzzied solution in instance spider/manufactory_1/0007 (1995)
	EXPECTED OUTPUT ====

		SELECT DISTINCT headquarter
		FROM manufacturers

	   headquarter
	0      Beijing
	1  SXvflAustin
	2        ustin
	ACTUAL OUTPUT ====

		
		SELECT headquarter
		FROM manufacturers
		ORDER BY headquarter

	   headquarter
	0      Beijing
	1      Beijing
	2  SXvflAustin
	3        ustin
	4        ustin
Error while executing solution for instance spider/manufactory_1/0034 (1996)

The column label 'Code' is not unique.
Error while checking ground truth in instance spider/manufactory_1/0034 (1996)
No solution for instance spider/manufactory_1/0024 (1997)
Wrong output for fuzzied solution in instance spider/manufactory_1/0021 (1998)
	EXPECTED OUTPUT ====

		SELECT avg(T1.price),
		       T2.name
		FROM products AS T1
		JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code
		GROUP BY T2.name

	   avg(t1.price)            name
	0   1.499800e+02    Fujitsu0FD2H
	1   1.499900e+02   OgNFujitsuf0n
	2   1.500000e+02      (SpSony4Qb
	3   1.500000e+02  cnBJvPCueCXHGB
	4   1.599933e+02   AJfFujitsuN)L
	5   7.711228e+08            Sony
	6   1.500446e+09         Fujitsu
	7   1.579171e+09   Creative Labs
	8   3.155315e+09          Fujits
	9   6.191201e+09   oWKFujitsu2gD
	ACTUAL OUTPUT ====

		
		SELECT meanprice AS avg_t1_price_,
		       name
		FROM
		  (SELECT code,
		          name,
		          AVG(price) AS meanprice
		   FROM
		     (SELECT code,
		             name,
		             headquarter,
		             founder,
		             revenue,
		             code_other,
		             name_other,
		             price,
		             code AS manufacturer
		      FROM
		        (SELECT LHS.code AS code,
		                LHS.name AS name,
		                LHS.headquarter AS headquarter,
		                LHS.founder AS founder,
		                LHS.revenue AS revenue,
		                RHS.code AS code_other,
		                RHS.name AS name_other,
		                RHS.price AS price
		         FROM manufacturers AS LHS
		         INNER JOIN products AS RHS ON (LHS.code = RHS.manufacturer)))
		   GROUP BY code,
		            name)
		ORDER BY avg_t1_price_

	    avg_t1_price_            name
	0    4.980000e+00   Creative Labs
	1    4.980000e+00         Fujitsu
	2    5.000000e+00         Fujitsu
	3    5.005000e+00            Sony
	4    5.005000e+00            Sony
	5    1.499800e+02         Fujitsu
	6    1.499800e+02    Fujitsu0FD2H
	7    1.499900e+02   OgNFujitsuf0n
	8    1.500000e+02      (SpSony4Qb
	9    1.500000e+02   Creative Labs
	10   1.500000e+02  cnBJvPCueCXHGB
	11   1.500200e+02            Sony
	12   1.599933e+02   AJfFujitsuN)L
	13   1.799900e+02            Sony
	14   1.800100e+02          Fujits
	15   2.301389e+09   Creative Labs
	16   3.000892e+09         Fujitsu
	17   3.470052e+09            Sony
	18   4.015293e+09   Creative Labs
	19   5.258858e+09          Fujits
	20   6.191201e+09   oWKFujitsu2gD
No solution for instance spider/manufactory_1/0023 (1999)
No solution for instance spider/manufactory_1/0009 (2002)
Wrong output for fuzzied solution in instance spider/manufactory_1/0025 (2003)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T2.name
		FROM products AS T1
		JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code
		GROUP BY T2.name

	   count(*)            name
	0         1      (SpSony4Qb
	1         1    Fujitsu0FD2H
	2         1   OgNFujitsuf0n
	3         1  cnBJvPCueCXHGB
	4         2   oWKFujitsu2gD
	5         3   AJfFujitsuN)L
	6         4   Creative Labs
	7         5          Fujits
	8         6         Fujitsu
	9         9            Sony
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       name
		FROM
		  (SELECT LHS.code AS code,
		          LHS.name AS name,
		          LHS.headquarter AS headquarter,
		          LHS.founder AS founder,
		          LHS.revenue AS revenue,
		          RHS.n AS n
		   FROM manufacturers AS LHS
		   INNER JOIN
		     (SELECT manufacturer,
		             COUNT() AS n
		      FROM products
		      GROUP BY manufacturer) AS RHS ON (LHS.code = RHS.manufacturer))
		ORDER BY count___

	    count___            name
	0          1      (SpSony4Qb
	1          1   Creative Labs
	2          1   Creative Labs
	3          1   Creative Labs
	4          1   Creative Labs
	5          1         Fujitsu
	6          1         Fujitsu
	7          1         Fujitsu
	8          1    Fujitsu0FD2H
	9          1   OgNFujitsuf0n
	10         1            Sony
	11         1  cnBJvPCueCXHGB
	12         2          Fujits
	13         2            Sony
	14         2            Sony
	15         2            Sony
	16         2            Sony
	17         2   oWKFujitsu2gD
	18         3   AJfFujitsuN)L
	19         3          Fujits
	20         3         Fujitsu
No solution for instance spider/manufactory_1/0040 (2007)
No solution for instance spider/loan_1/0033 (2010)
No solution for instance spider/loan_1/0037 (2011)
No solution for instance spider/loan_1/0036 (2013)
Wrong output for fuzzied solution in instance spider/loan_1/0017 (2014)
	EXPECTED OUTPUT ====

		SELECT cust_name
		FROM customer
		EXCEPT
		SELECT cust_name
		FROM customer
		WHERE acc_type = 'saving'

	     cust_name
	0   1 dJackHhL
	1   2YNMaryrY1
	2   6)(JackfXn
	3   7wsMaryawN
	4    JackobStX
	5    Jx51cMary
	6    Lpbn1Mary
	7   M0hMarytmv
	8    MaryM ryJ
	9    f1G9tMary
	10   g(hakMary
	ACTUAL OUTPUT ====

		
		SELECT `cust_name`
		FROM `customer`
		WHERE (`acc_type` != 'saving')
		ORDER BY cust_name

	     cust_name
	0   1 dJackHhL
	1   2YNMaryrY1
	2   6)(JackfXn
	3   7wsMaryawN
	4          Jac
	5         Jack
	6    JackobStX
	7    Jx51cMary
	8    Lpbn1Mary
	9   M0hMarytmv
	10        Mary
	11        Mary
	12        Mary
	13        Mary
	14        Mary
	15        Mary
	16        Mary
	17   MaryM ryJ
	18         ack
	19         ary
	20   f1G9tMary
	21   g(hakMary
No solution for instance spider/loan_1/0039 (2016)
No solution for instance spider/loan_1/0038 (2017)
Wrong output for fuzzied solution in instance spider/loan_1/0027 (2019)
	EXPECTED OUTPUT ====

		SELECT sum(acc_bal),
		       state
		FROM customer
		WHERE credit_score > 100
		GROUP BY state

	    sum(acc_bal)          state
	0         800000  )0CykNew York
	1           2001     BxmUtah1UC
	2           1999        New Yor
	3           6001       New York
	4           2001     Tt5Utah)DO
	5         800000            Uta
	6        2410001           Utah
	7         800000     obJUtahABE
	8           1999      rQEHQUtah
	9           2001            tah
	10        800001     zBPUtah83a
	ACTUAL OUTPUT ====

		
		SELECT sumacc_bal AS sum_acc_bal_,
		       state
		FROM
		  (SELECT cust_id,
		          state,
		          SUM(acc_bal) AS sumacc_bal
		   FROM
		     (SELECT *
		      FROM customer
		      WHERE (acc_bal < 100
		             OR credit_score >= 100))
		   GROUP BY cust_id,
		            state)
		ORDER BY sum_acc_bal_

	    sum_acc_bal_          state
	0         800000  )0CykNew York
	1           2001     BxmUtah1UC
	2           1999        New Yor
	3           1999        New Yor
	4           2000        New Yor
	5           2000       New York
	6           2000       New York
	7           2001       New York
	8           2001  New YorkT74yp
	9           2001     Tt5Utah)DO
	10        800000            Uta
	11          1998           Utah
	12          1998           Utah
	13          2000           Utah
	14          2000           Utah
	15          2002           Utah
	16        799999           Utah
	17        800002           Utah
	18        800002           Utah
	19        800000     obJUtahABE
	20          1999      rQEHQUtah
	21          2001            tah
	22        800001     zBPUtah83a
Wrong output for fuzzied solution in instance spider/loan_1/0022 (2020)
	EXPECTED OUTPUT ====

		SELECT cust_name
		FROM customer
		ORDER BY credit_score
		LIMIT 1

	  cust_name
	0      Mary
	ACTUAL OUTPUT ====

		
		SELECT cust_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM customer
		      ORDER BY cust_name)
		   LIMIT 1)

	    cust_name
	0  1 dJackHhL
No solution for instance spider/loan_1/0030 (2021)
Wrong output for fuzzied solution in instance spider/loan_1/0004 (2024)
	EXPECTED OUTPUT ====

		SELECT avg(no_of_customers)
		FROM bank
		WHERE state = 'Utah'

	  avg(no_of_customers)
	0                 None
	ACTUAL OUTPUT ====

		
		SELECT `no_of_customers` AS `avg_no_of_customers_`
		FROM `bank`
		WHERE (`state` = 'Utah')
		ORDER BY avg_no_of_customers_

	Empty DataFrame
	Columns: [avg_no_of_customers_]
	Index: []
Error while executing solution for instance spider/loan_1/0012 (2025)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT state) OVER () AS count_distinct_state_
FROM bank
ORDER BY count_distinct_state_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/loan_1/0026 (2026)
	EXPECTED OUTPUT ====

		SELECT avg(acc_bal),
		       acc_type
		FROM customer
		WHERE credit_score < 50
		GROUP BY acc_type

	     avg(acc_bal)      acc_type
	0     2000.000000  5dwsavingpes
	1   799999.000000  E0isavingEGM
	2     2002.000000  Esnsaving0XC
	3     1999.750000         aving
	4     2002.000000  kuasavingTh5
	5   800002.000000  ol7savingGMc
	6   370308.153846        saving
	7     1999.000000   saving0qwy)
	8     2002.000000   saving6)CaO
	9     2001.000000   savingMwT7(
	10    1999.000000   savingdWLsK
	ACTUAL OUTPUT ====

		
		SELECT meanacc_bal AS avg_acc_bal_,
		       acc_type
		FROM
		  (SELECT acc_type,
		          credit_score,
		          AVG(acc_bal) AS meanacc_bal
		   FROM customer
		   GROUP BY acc_type,
		            credit_score)
		WHERE (credit_score < 50
		       OR meanacc_bal <= 50.0)
		ORDER BY avg_acc_bal_

	    avg_acc_bal_      acc_type
	0         2000.0  5dwsavingpes
	1       799999.0  E0isavingEGM
	2         2002.0  Esnsaving0XC
	3         1999.0         aving
	4         2000.0         aving
	5         2000.0         aving
	6         2002.0  kuasavingTh5
	7       800002.0  ol7savingGMc
	8         2000.0        saving
	9         2000.0        saving
	10        2001.0        saving
	11        2001.0        saving
	12      401000.0        saving
	13      480801.0        saving
	14      799999.0        saving
	15      800000.0        saving
	16        1999.0   saving0qwy)
	17        2002.0   saving6)CaO
	18        2001.0   savingMwT7(
	19        1999.0   savingdWLsK
Wrong output for fuzzied solution in instance spider/loan_1/0032 (2029)
	EXPECTED OUTPUT ====

		SELECT T2.bname
		FROM loan AS T1
		JOIN bank AS T2 ON T1.branch_id = T2.branch_id
		JOIN customer AS T3 ON T1.cust_id = T3.cust_id
		WHERE T3.credit_score < 100
		GROUP BY T2.bname
		ORDER BY sum(T1.amount) DESC
		LIMIT 1

	      bname
	0  downtown
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT bname
		FROM
		  (SELECT LHS.branch_id AS branch_id,
		          LHS.bname AS bname,
		          LHS.no_of_customers AS no_of_customers,
		          LHS.city AS city,
		          LHS.state AS state,
		          LHS.cust_id AS cust_id,
		          LHS.cust_name AS cust_name,
		          LHS.acc_type AS acc_type,
		          LHS.acc_bal AS acc_bal,
		          LHS.no_of_loans AS no_of_loans,
		          LHS.credit_score AS credit_score,
		          RHS.loan_id AS loan_id,
		          RHS.sumamount AS sumamount
		   FROM
		     (SELECT LHS.branch_id AS branch_id,
		             LHS.bname AS bname,
		             LHS.no_of_customers AS no_of_customers,
		             LHS.city AS city,
		             LHS.state AS state,
		             RHS.cust_id AS cust_id,
		             RHS.cust_name AS cust_name,
		             RHS.acc_type AS acc_type,
		             RHS.acc_bal AS acc_bal,
		             RHS.no_of_loans AS no_of_loans,
		             RHS.credit_score AS credit_score
		      FROM bank AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM customer
		         WHERE (credit_score < 100
		                AND credit_score > 1)) AS RHS ON (LHS.branch_id = RHS.branch_id
		                                                  AND LHS.state = RHS.state)) AS LHS
		   CROSS JOIN
		     (SELECT loan_id,
		             SUM(amount) AS sumamount
		      FROM loan
		      GROUP BY loan_id) AS RHS)
		ORDER BY bname

	           bname
	0       downtown
	1  gNjjNdowntown
Wrong output for fuzzied solution in instance spider/loan_1/0018 (2030)
	EXPECTED OUTPUT ====

		SELECT cust_name
		FROM customer
		EXCEPT
		SELECT T1.cust_name
		FROM customer AS T1
		JOIN loan AS T2 ON T1.cust_id = T2.cust_id
		WHERE T2.loan_type = 'Mortgages'

	     cust_name
	0   1 dJackHhL
	1   2YNMaryrY1
	2    4k2TvJack
	3   5naJackzUv
	4   7wsMaryawN
	5   BOmJackuM 
	6   FtqMaryZrQ
	7    JackEE 0v
	8   LI7Mary(To
	9    MaryM ryJ
	10   MaryTNGUV
	11   MrMrMMary
	12  P tMaryq8G
	13   QmAOuMary
	14  U)LMaryWl2
	15   g(hakMary
	16   hwX1VJack
	ACTUAL OUTPUT ====

		
		SELECT `cust_name`
		FROM
		  (SELECT `LHS`.`cust_id` AS `cust_id`,
		          `LHS`.`cust_name` AS `cust_name`,
		          `LHS`.`acc_type` AS `acc_type`,
		          `LHS`.`acc_bal` AS `acc_bal`,
		          `LHS`.`no_of_loans` AS `no_of_loans`,
		          `LHS`.`credit_score` AS `credit_score`,
		          `LHS`.`branch_id` AS `branch_id`,
		          `LHS`.`state` AS `state`,
		          `RHS`.`loan_type` AS `loan_type`,
		          `RHS`.`cust_id` AS `cust_id_other`,
		          `RHS`.`branch_id` AS `branch_id_other`,
		          `RHS`.`amount` AS `amount`
		   FROM `customer` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `loan`
		      WHERE (`loan_type` != 'Mortgages')) AS RHS ON (LHS.cust_id = RHS.loan_id))
		ORDER BY cust_name

	   cust_name
	0       Mary
	1        ary
	2  g(hakMary
Wrong output for fuzzied solution in instance spider/loan_1/0035 (2031)
	EXPECTED OUTPUT ====

		SELECT T1.cust_name
		FROM customer AS T1
		JOIN loan AS T2 ON T1.cust_id = T2.cust_id
		WHERE amount > 3000

	   cust_name
	0       Jack
	1       Jack
	2       Mary
	3  Marypj01W
	ACTUAL OUTPUT ====

		
		SELECT cust_name
		FROM
		  (SELECT cust_id,
		          cust_name,
		          acc_type,
		          acc_bal,
		          no_of_loans,
		          credit_score,
		          cust_id AS branch_id,
		          state,
		          loan_id,
		          loan_type,
		          cust_id_other,
		          amount
		   FROM
		     (SELECT LHS.cust_id AS cust_id,
		             LHS.cust_name AS cust_name,
		             LHS.acc_type AS acc_type,
		             LHS.acc_bal AS acc_bal,
		             LHS.no_of_loans AS no_of_loans,
		             LHS.credit_score AS credit_score,
		             LHS.branch_id AS branch_id,
		             LHS.state AS state,
		             RHS.loan_id AS loan_id,
		             RHS.loan_type AS loan_type,
		             RHS.cust_id AS cust_id_other,
		             RHS.amount AS amount
		      FROM customer AS LHS
		      INNER JOIN loan AS RHS ON (LHS.cust_id = RHS.branch_id)))
		WHERE (amount > 3000)
		ORDER BY cust_name

	   cust_name
	0       Jack
	1  Jack9DOoN
	2        Mar
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for fuzzied solution in instance spider/loan_1/0019 (2033)
	EXPECTED OUTPUT ====

		SELECT T1.cust_name
		FROM customer AS T1
		JOIN loan AS T2 ON T1.cust_id = T2.cust_id
		WHERE loan_type = 'Mortgages' INTERSECT
		  SELECT T1.cust_name
		  FROM customer AS T1
		  JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Auto'

	  cust_name
	0      Mary
	ACTUAL OUTPUT ====

		
		SELECT `cust_name`
		FROM
		  (SELECT `LHS`.`cust_id` AS `cust_id`,
		          `LHS`.`cust_name` AS `cust_name`,
		          `LHS`.`acc_type` AS `acc_type`,
		          `LHS`.`acc_bal` AS `acc_bal`,
		          `LHS`.`no_of_loans` AS `no_of_loans`,
		          `LHS`.`credit_score` AS `credit_score`,
		          `LHS`.`branch_id` AS `branch_id`,
		          `LHS`.`state` AS `state`,
		          `RHS`.`loan_id` AS `loan_id`,
		          `RHS`.`loan_type` AS `loan_type`,
		          `RHS`.`branch_id` AS `branch_id_other`,
		          `RHS`.`amount` AS `amount`
		   FROM `customer` AS `LHS`
		   INNER JOIN `loan` AS `RHS` ON (`LHS`.`cust_id` = `RHS`.`cust_id`))
		WHERE (`loan_type` = 'Mortgages'
		       AND `loan_type` != 'Auto')
		ORDER BY cust_name

	    cust_name
	0        Jack
	1        Mary
	2        Mary
	3        Mary
	4  vflJackGmI
	5  vflJackGmI
No solution for instance spider/loan_1/0024 (2036)
Wrong output for fuzzied solution in instance spider/loan_1/0021 (2037)
	EXPECTED OUTPUT ====

		SELECT bname
		FROM bank
		ORDER BY no_of_customers DESC
		LIMIT 1

	      bname
	0  downtown
	ACTUAL OUTPUT ====

		
		SELECT bname
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM bank
		      ORDER BY bname)
		   LIMIT 1)

	     bname
	0  downtow
Wrong output for fuzzied solution in instance spider/loan_1/0023 (2038)
	EXPECTED OUTPUT ====

		SELECT cust_name,
		       acc_type,
		       acc_bal
		FROM customer
		ORDER BY credit_score DESC
		LIMIT 1

	   cust_name      acc_type  acc_bal
	0  MaryM ryJ  w()saving0gt     1002
	ACTUAL OUTPUT ====

		
		SELECT cust_name,
		       acc_type,
		       acc_bal
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM customer
		      ORDER BY state)
		   LIMIT 1)

	  cust_name acc_type  acc_bal
	0      Mary   saving     2000
No solution for instance spider/loan_1/0014 (2040)
Wrong output for fuzzied solution in instance spider/loan_1/0009 (2041)
	EXPECTED OUTPUT ====

		SELECT T1.cust_name
		FROM customer AS T1
		JOIN loan AS T2 ON T1.cust_id = T2.cust_id
		GROUP BY T1.cust_name
		ORDER BY sum(T2.amount)

	     cust_name
	0   1 dJackHhL
	1    4k2TvJack
	2   7wsMaryawN
	3   BOmJackuM 
	4   FtqMaryZrQ
	5         Jack
	6    JackEE 0v
	7         Mary
	8    MaryM ryJ
	9    MaryTNGUV
	10   MrMrMMary
	11   QmAOuMary
	12  U)LMaryWl2
	13         ack
	14         ary
	15   f1G9tMary
	16   g(hakMary
	ACTUAL OUTPUT ====

		
		SELECT cust_name
		FROM
		  (SELECT LHS.cust_id AS cust_id,
		          LHS.sumamount AS sumamount,
		          RHS.cust_name AS cust_name,
		          RHS.acc_type AS acc_type,
		          RHS.acc_bal AS acc_bal,
		          RHS.no_of_loans AS no_of_loans,
		          RHS.credit_score AS credit_score,
		          RHS.branch_id AS branch_id,
		          RHS.state AS state
		   FROM
		     (SELECT cust_id,
		             SUM(amount) AS sumamount
		      FROM loan
		      GROUP BY cust_id) AS LHS
		   INNER JOIN customer AS RHS ON (LHS.cust_id = RHS.cust_id))
		ORDER BY cust_name

	     cust_name
	0   1 dJackHhL
	1    4k2TvJack
	2   7wsMaryawN
	3   BOmJackuM 
	4   FtqMaryZrQ
	5         Jack
	6         Jack
	7    JackEE 0v
	8         Mary
	9         Mary
	10        Mary
	11        Mary
	12        Mary
	13        Mary
	14        Mary
	15   MaryM ryJ
	16   MaryTNGUV
	17   MrMrMMary
	18   QmAOuMary
	19  U)LMaryWl2
	20         ack
	21         ary
	22         ary
	23   f1G9tMary
	24   g(hakMary
Wrong output for fuzzied solution in instance spider/loan_1/0025 (2042)
	EXPECTED OUTPUT ====

		SELECT state
		FROM bank
		GROUP BY state
		ORDER BY sum(no_of_customers) DESC
		LIMIT 1

	  state
	0  Utah
	ACTUAL OUTPUT ====

		
		SELECT state
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT bname,
		                state,
		                SUM(no_of_customers) AS sumno_of_customers
		         FROM bank
		         GROUP BY bname,
		                  state)
		      ORDER BY state)
		   LIMIT 1)

	      state
	0  New York
Error while executing solution for instance spider/loan_1/0011 (2043)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT city) OVER () AS count_distinct_city_
FROM bank
ORDER BY count_distinct_city_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/loan_1/0029 (2044)
	EXPECTED OUTPUT ====

		SELECT T1.cust_name
		FROM customer AS T1
		JOIN loan AS T2 ON T1.cust_id = T2.cust_id
		GROUP BY T1.cust_name
		HAVING count(*) > 1

	    cust_name
	0  BOmJackuM 
	1        Jack
	2   JackEE 0v
	3        Mary
	4   MrMrMMary
	5         ary
	6   f1G9tMary
	ACTUAL OUTPUT ====

		
		SELECT cust_name
		FROM
		  (SELECT LHS.cust_id AS cust_id,
		          LHS.cust_name AS cust_name,
		          LHS.acc_type AS acc_type,
		          LHS.acc_bal AS acc_bal,
		          LHS.no_of_loans AS no_of_loans,
		          LHS.credit_score AS credit_score,
		          LHS.branch_id AS branch_id,
		          LHS.state AS state
		   FROM customer AS LHS
		   INNER JOIN
		     (SELECT cust_id,
		             COUNT() AS n
		      FROM loan
		      GROUP BY cust_id) AS RHS ON (LHS.branch_id = RHS.n
		                                   AND LHS.cust_id = RHS.cust_id))
		ORDER BY cust_name

	    cust_name
	0  7wsMaryawN
	1   JackEE 0v
	2        Mary
	3   MrMrMMary
	4   QmAOuMary
	5   f1G9tMary
Wrong output for fuzzied solution in instance spider/loan_1/0010 (2045)
	EXPECTED OUTPUT ====

		SELECT state,
		       acc_type,
		       credit_score
		FROM customer
		WHERE no_of_loans = 0

	           state acc_type  credit_score
	0           Utah    savin            20
	1            tah   saving            19
	2        New Yor   saving            20
	3  a6T8RNew York   saving            21
	4       New York   saving            22
	5       New York   saving            22
	6           Utah   saving            22
	7        ew York   saving            30
	8           Utah   saving            32
	ACTUAL OUTPUT ====

		
		SELECT state,
		       acc_type,
		       credit_score
		FROM customer
		WHERE (no_of_loans <= 0)
		ORDER BY state

	            state      acc_type  credit_score
	0            Utah  Fm(savingp4)            20
	1        New York  ZiOsavingRrH            21
	2        New York         aving            20
	3         ew York         aving            20
	4        New York         aving            30
	5            Utah         savin            20
	6   PUejBNew York         savin            28
	7            Utah        saving            19
	8             tah        saving            19
	9         New Yor        saving            20
	10  a6T8RNew York        saving            21
	11       New York        saving            22
	12       New York        saving            22
	13           Utah        saving            22
	14       New York        saving            30
	15            Uta        saving            30
	16        ew York        saving            30
	17           Utah        saving            32
Wrong output for fuzzied solution in instance spider/loan_1/0040 (2046)
	EXPECTED OUTPUT ====

		SELECT avg(credit_score)
		FROM customer
		WHERE cust_id NOT IN
		    (SELECT cust_id
		     FROM loan)

	   avg(credit_score)
	0         109.458333
	ACTUAL OUTPUT ====

		
		SELECT credit_score AS avg_credit_score_
		FROM
		  (SELECT credit_score,
		          AVG(credit_score) AS meancredit_score
		   FROM
		     (SELECT *
		      FROM customer AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM loan AS RHS
		           WHERE (LHS.cust_id = RHS.cust_id) ))
		   GROUP BY credit_score)
		ORDER BY avg_credit_score_

	    avg_credit_score_
	0                  18
	1                  19
	2                  20
	3                  21
	4                  30
	5                  31
	6                 208
	7                 209
	8                 210
	9                 211
	10                212
No solution for instance spider/loan_1/0028 (2047)
No solution for instance spider/loan_1/0031 (2048)
Wrong output for fuzzied solution in instance spider/phone_market/0008 (2050)
	EXPECTED OUTPUT ====

		SELECT Carrier
		FROM phone
		GROUP BY Carrier
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  carrier
	0   print
	ACTUAL OUTPUT ====

		
		SELECT carrier
		FROM
		  (SELECT LHS.carrier AS carrier,
		          LHS.n AS n,
		          RHS.name AS name,
		          RHS.memory_in_g AS memory_in_g,
		          RHS.price AS price
		   FROM
		     (SELECT carrier,
		             COUNT() AS n
		      FROM phone
		      GROUP BY carrier) AS LHS
		   INNER JOIN phone AS RHS ON (LHS.n = RHS.phone_id
		                                  AND LHS.carrier = RHS.carrier))
		ORDER BY carrier

	       carrier
	0       Mobile
	1  SprintEcEY5
No solution for instance spider/phone_market/0013 (2052)
Wrong output for fuzzied solution in instance spider/phone_market/0006 (2053)
	EXPECTED OUTPUT ====

		SELECT Carrier
		FROM phone
		ORDER BY Price DESC
		LIMIT 1

	        carrier
	0  dOdsGTMobile
	ACTUAL OUTPUT ====

		
		SELECT carrier
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM phone
		      ORDER BY carrier DESC)
		   LIMIT 1)

	        carrier
	0  zCr2zTMobile
Wrong output for fuzzied solution in instance spider/phone_market/0004 (2054)
	EXPECTED OUTPUT ====

		SELECT DISTINCT Carrier
		FROM phone
		WHERE Memory_in_G > 32

	       carrier
	0       Sprint
	1      TMobile
	2  lfmtNSprint
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT carrier
		FROM phone
		WHERE (memory_in_g != 32)
		ORDER BY carrier

	       carrier
	0       Sprint
	1  Sprint9P6 k
	2      TMobile
	3  lfmtNSprint
No solution for instance spider/phone_market/0012 (2055)
Wrong output for fuzzied solution in instance spider/phone_market/0005 (2057)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM phone
		WHERE Carrier = "Sprint"
		  OR Carrier = "TMobile"

	             name
	0  IPhone 5sdWLsK
	1       IPhone 6s
	2        IPhone 7
	3        Phone 6s
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM `phone`
		WHERE (`carrier` != 'Sprint'
		       OR `carrier` != 'TMobile')
		ORDER BY name

	             name
	0       IPhone 5s
	1  IPhone 5sdWLsK
	2       IPhone 6s
	3        IPhone 7
	4        IPhone 7
	5        IPhone 7
	6        Phone 6s
No solution for instance spider/phone_market/0014 (2060)
Wrong output for fuzzied solution in instance spider/phone_market/0009 (2061)
	EXPECTED OUTPUT ====

		SELECT Carrier
		FROM phone
		WHERE Memory_in_G < 32 INTERSECT
		  SELECT Carrier
		  FROM phone WHERE Memory_in_G > 64

	Empty DataFrame
	Columns: [carrier]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT carrier
		FROM phone
		WHERE (memory_in_g != 32
		       AND memory_in_g < 64)
		ORDER BY carrier

	   carrier
	0   TMobil
	1  TMobile
No solution for instance spider/phone_market/0011 (2062)
No solution for instance spider/phone_market/0010 (2063)
Wrong output for fuzzied solution in instance spider/coffee_shop/0017 (2065)
	EXPECTED OUTPUT ====

		SELECT MONTH
		FROM happy_hour
		GROUP BY MONTH
		ORDER BY count(*) DESC
		LIMIT 1

	  month
	0   May
	ACTUAL OUTPUT ====

		
		SELECT MONTH
		FROM
		  (SELECT hh_id,
		          MONTH,
		          COUNT() AS n
		   FROM
		     (SELECT shop_id AS hh_id,
		             shop_id,
		             MONTH,
		             num_of_shaff_in_charge,
		             shop_id_other,
		             num_of_shaff_in_charge_other
		      FROM
		        (SELECT LHS.hh_id AS hh_id,
		                LHS.shop_id AS shop_id,
		                LHS.month AS MONTH,
		                LHS.num_of_shaff_in_charge AS num_of_shaff_in_charge,
		                RHS.shop_id AS shop_id_other,
		                RHS.num_of_shaff_in_charge AS num_of_shaff_in_charge_other
		         FROM happy_hour AS LHS
		         INNER JOIN happy_hour AS RHS ON (LHS.shop_id = RHS.hh_id
		                                             AND LHS.month = RHS.month)))
		   GROUP BY hh_id,
		            MONTH)
		ORDER BY MONTH

	        month
	0         Jun
	1        June
	2        June
	3        June
	4        June
	5        June
	6        June
	7        June
	8          Ma
	9          Ma
	10         Ma
	11         Ma
	12         Ma
	13        May
	14        May
	15        May
	16        May
	17        May
	18        May
	19        May
	20        May
	21        May
	22        May
	23         ay
	24         ay
	25         ay
	26         ay
	27         ay
	28         ay
	29         ay
	30  lZYmnJune
	31        une
	32        une
	33        une
	34        une
Wrong output for fuzzied solution in instance spider/coffee_shop/0008 (2066)
	EXPECTED OUTPUT ====

		SELECT membership_card
		FROM member
		WHERE address = 'Hartford' INTERSECT
		  SELECT membership_card
		  FROM member WHERE address = 'Waterbury'

	Empty DataFrame
	Columns: [membership_card]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `membership_card`
		FROM `member`
		WHERE (`address` = 'Hartford'
		       AND `address` != 'Waterbury')
		ORDER BY membership_card

	  membership_card
	0           White
Wrong output for fuzzied solution in instance spider/coffee_shop/0003 (2067)
	EXPECTED OUTPUT ====

		SELECT name
		FROM member
		WHERE address = 'Harford'
		  OR address = 'Waterbury'

	               name
	0  Rizzo, ToddEun2W
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM `member`
		WHERE (`address` = 'Waterbury')
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for fuzzied solution in instance spider/coffee_shop/0006 (2069)
	EXPECTED OUTPUT ====

		SELECT Membership_card
		FROM member
		GROUP BY Membership_card
		HAVING count(*) > 5

	Empty DataFrame
	Columns: [membership_card]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT membership_card
		FROM
		  (SELECT membership_card,
		          COUNT() AS n
		   FROM member
		   GROUP BY membership_card)
		WHERE (n >= 5)
		ORDER BY membership_card

	  membership_card
	0           Black
Wrong output for fuzzied solution in instance spider/coffee_shop/0004 (2070)
	EXPECTED OUTPUT ====

		SELECT name,
		       member_id
		FROM member
		WHERE Membership_card = 'Black'
		  OR age < 30

	                  name  member_id
	0  kIUHayes, StevenLo5          6
	1        Hayes, Steven          7
	2   9rnPfHayes, Steven          9
	ACTUAL OUTPUT ====

		
		SELECT `name`,
		       `member_id`
		FROM `member`
		WHERE (`membership_card` = 'Black'
		       OR age = 30)
		ORDER BY name

	                  name  member_id
	0        Hayes, Steven          5
	1  kIUHayes, StevenLo5          6
	2        Hayes, Steven          7
	3   9rnPfHayes, Steven          9
	4          Rizzo, Todd         10
No solution for instance spider/coffee_shop/0012 (2071)
Wrong output for fuzzied solution in instance spider/coffee_shop/0016 (2074)
	EXPECTED OUTPUT ====

		SELECT shop_id,
		       count(*)
		FROM happy_hour
		GROUP BY shop_id
		ORDER BY count(*) DESC
		LIMIT 1

	   shop_id  count(*)
	0        2        21
	ACTUAL OUTPUT ====

		
		SELECT n AS shop_id,
		       num_of_shaff_in_charge_other AS count___
		FROM
		  (SELECT hh_id,
		          num_of_shaff_in_charge,
		          hh_id AS n,
		          num_of_shaff_in_charge_other
		   FROM
		     (SELECT LHS.hh_id AS hh_id,
		             LHS.num_of_shaff_in_charge AS num_of_shaff_in_charge,
		             LHS.n AS n,
		             RHS.num_of_shaff_in_charge AS num_of_shaff_in_charge_other
		      FROM
		        (SELECT hh_id,
		                num_of_shaff_in_charge,
		                COUNT() AS n
		         FROM happy_hour
		         GROUP BY hh_id,
		                  num_of_shaff_in_charge) AS LHS
		      INNER JOIN
		        (SELECT hh_id,
		                num_of_shaff_in_charge,
		                COUNT() AS n
		         FROM happy_hour
		         GROUP BY hh_id,
		                  num_of_shaff_in_charge) AS RHS ON (LHS.hh_id = RHS.n
		                                                     AND LHS.num_of_shaff_in_charge = RHS.hh_id)))
		ORDER BY shop_id

	    shop_id  count___
	0         1         1
	1         2         1
	2         2         1
	3         2         1
	4         1         2
	5         1         2
	6         1         2
	7         2         2
	8         3         2
	9         3         3
	10        4         3
	11        5         3
	12        6         3
	13        7         3
	14        1         4
	15        1         4
	16        2         4
	17        2         4
	18        4         4
	19        1         5
	20        1         5
	21        2         5
	22        3         5
	23        3         5
	24        3         5
	25        1         6
	26        1         6
	27        2         6
	28        2         6
	29        3         6
	30        2        13
	31        2        13
	32        2        13
	33        3        13
	34        1        14
	35        1        14
	36        2        14
	37        4        14
	38        1        15
	39        1        15
	40        2        15
	41        2        15
	42        5        15
	43        1        16
	44        1        16
	45        2        16
	46        1        17
	47        2        17
	48        3        17
Wrong output for fuzzied solution in instance spider/coffee_shop/0018 (2075)
	EXPECTED OUTPUT ====

		SELECT MONTH
		FROM happy_hour
		GROUP BY MONTH
		HAVING count(*) > 2

	  month
	0   Jun
	1  June
	2    Ma
	3   May
	4    ay
	5   une
	ACTUAL OUTPUT ====

		
		SELECT MONTH
		FROM
		  (SELECT LHS.hh_id AS hh_id,
		          LHS.shop_id AS shop_id,
		          LHS.month AS MONTH,
		          LHS.num_of_shaff_in_charge AS num_of_shaff_in_charge,
		          RHS.shop_id AS shop_id_other
		   FROM happy_hour AS LHS
		   INNER JOIN
		     (SELECT MONTH,
		             shop_id,
		             COUNT() AS n
		      FROM happy_hour
		      GROUP BY MONTH,
		               shop_id) AS RHS ON (LHS.hh_id = RHS.n
		                                   AND LHS.month = RHS.month))
		ORDER BY MONTH

	         month
	0    4oeMayaCE
	1         June
	2         June
	3         June
	4         June
	..         ...
	118        une
	119        une
	120        une
	121        une
	122        une
	
	[123 rows x 1 columns]
Wrong output for fuzzied solution in instance spider/coffee_shop/0007 (2076)
	EXPECTED OUTPUT ====

		SELECT address
		FROM member
		WHERE age < 30 INTERSECT
		  SELECT address
		  FROM member WHERE age > 40

	Empty DataFrame
	Columns: [address]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT address
		FROM member
		WHERE (age <= 30
		       AND age != 40)
		ORDER BY address

	   address
	0  heshire
Wrong output for fuzzied solution in instance spider/coffee_shop/0010 (2081)
	EXPECTED OUTPUT ====

		SELECT address
		FROM member
		EXCEPT
		SELECT address
		FROM member
		WHERE Membership_card = 'Black'

	         address
	0        Cheshir
	1       Cheshire
	2  CheshireTs0sc
	3       Hartford
	4  HartfordK HK0
	5        heshire
	ACTUAL OUTPUT ====

		
		SELECT `address_other` AS `address`
		FROM
		  (SELECT `level_of_membership` AS `member_id`,
		          `name`,
		          `membership_card`,
		          `age`,
		          `time_of_purchase`,
		          `level_of_membership`,
		          `address`,
		          `name_other`,
		          `membership_card_other`,
		          `age_other`,
		          `level_of_membership_other`,
		          `address_other`
		   FROM
		     (SELECT `LHS`.`member_id` AS `member_id`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`membership_card` AS `membership_card`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`time_of_purchase` AS `time_of_purchase`,
		             `LHS`.`level_of_membership` AS `level_of_membership`,
		             `LHS`.`address` AS `address`,
		             `RHS`.`name` AS `name_other`,
		             `RHS`.`membership_card` AS `membership_card_other`,
		             `RHS`.`age` AS `age_other`,
		             `RHS`.`level_of_membership` AS `level_of_membership_other`,
		             `RHS`.`address` AS `address_other`
		      FROM `member` AS `LHS`
		      INNER JOIN `member` AS `RHS` ON (`LHS`.`time_of_purchase` = `RHS`.`time_of_purchase`
		                                          AND `LHS`.`level_of_membership` = `RHS`.`member_id`)))
		WHERE (`membership_card` = 'Black')
		ORDER BY address

	Empty DataFrame
	Columns: [address]
	Index: []
No solution for instance spider/hospital_1/0042 (2082)
Wrong output for fuzzied solution in instance spider/hospital_1/0033 (2083)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.name
		FROM affiliated_with AS T1
		JOIN department AS T2 ON T1.department = T2.departmentid
		WHERE PrimaryAffiliation = 1

	                name
	0        )9IpdRGJGgo
	1    Bk29TPsychiatry
	2         Dt1i8lN9nN
	3    NHP6zPsychiatry
	4          Psychiatr
	5         Psychiatry
	6   QUsPsychiatrycYX
	7    U0TnQPsychiatry
	8    k 7cYPsychiatry
	9    osyatPsychiatry
	10  qkTPsychiatryWo 
	11         sychiatry
	12   zgisKPsychiatry
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.departmentid AS departmentid,
		          LHS.name AS name,
		          LHS.head AS head,
		          LHS.physician AS physician,
		          LHS.department AS department,
		          LHS.primaryaffiliation AS primaryaffiliation
		   FROM
		     (SELECT LHS.departmentid AS departmentid,
		             LHS.name AS name,
		             LHS.head AS head,
		             RHS.physician AS physician,
		             RHS.department AS department,
		             RHS.primaryaffiliation AS primaryaffiliation
		      FROM department AS LHS
		      CROSS JOIN affiliated_with AS RHS) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM affiliated_with
		      WHERE (primaryaffiliation = 1)) AS RHS ON (LHS.physician = RHS.physician
		                                                 AND LHS.department = RHS.department
		                                                 AND LHS.primaryaffiliation = RHS.primaryaffiliation))
		ORDER BY name

	                name
	0        )9IpdRGJGgo
	1          7RZycQaF6
	2    Bk29TPsychiatry
	3         Dt1i8lN9nN
	4    NHP6zPsychiatry
	5          Psychiatr
	6         Psychiatry
	7   QUsPsychiatrycYX
	8    U0TnQPsychiatry
	9    k 7cYPsychiatry
	10   osyatPsychiatry
	11  qkTPsychiatryWo 
	12         sychiatry
	13   zgisKPsychiatry
Wrong output for fuzzied solution in instance spider/hospital_1/0002 (2085)
	EXPECTED OUTPUT ====

		SELECT head
		FROM department
		GROUP BY departmentID
		ORDER BY count(departmentID)
		LIMIT 1;

	   head
	0    10
	ACTUAL OUTPUT ====

		
		SELECT head
		FROM department
		WHERE (departmentid = 1)
		ORDER BY head

	   head
	0     0
No solution for instance spider/hospital_1/0017 (2087)
No solution for instance spider/hospital_1/0008 (2088)
No solution for instance spider/hospital_1/0039 (2089)
No solution for instance spider/hospital_1/0003 (2091)
No solution for instance spider/hospital_1/0027 (2092)
Wrong output for base solution in instance spider/hospital_1/0048 (2093)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM patient
		WHERE SSN NOT IN
		    (SELECT T1.patient
		     FROM Prescribes AS T1
		     JOIN Medication AS T2 ON T1.Medication = T2.Code
		     WHERE T2.name = 'Procrastin-X' )

	   count(*)
	0         3
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`ssn` AS `ssn`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`address` AS `address`,
		          `LHS`.`phone` AS `phone`,
		          `LHS`.`insuranceid` AS `insuranceid`,
		          `LHS`.`pcp` AS `pcp`,
		          `LHS`.`code` AS `code`,
		          `LHS`.`brand` AS `brand`,
		          `LHS`.`description` AS `description`,
		          `RHS`.`physician` AS `physician`,
		          `RHS`.`patient` AS `patient`,
		          `RHS`.`medication` AS `medication`,
		          `RHS`.`date` AS `date`,
		          `RHS`.`appointment` AS `appointment`,
		          `RHS`.`dose` AS `dose`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`ssn` AS `ssn`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`address` AS `address`,
		             `LHS`.`phone` AS `phone`,
		             `LHS`.`insuranceid` AS `insuranceid`,
		             `LHS`.`pcp` AS `pcp`,
		             `RHS`.`code` AS `code`,
		             `RHS`.`brand` AS `brand`,
		             `RHS`.`description` AS `description`
		      FROM `patient` AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `medication`
		         WHERE (`name` = 'Procrastin-X')) AS RHS ON (LHS.name = RHS.name)) AS LHS
		   CROSS JOIN
		     (SELECT physician,
		             patient,
		             medication, date, appointment,
		                               dose,
		                               COUNT(*) OVER () AS n
		      FROM prescribes) AS RHS)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/hospital_1/0030 (2095)
	EXPECTED OUTPUT ====

		SELECT DISTINCT name
		FROM medication
		ORDER BY name

	                 name
	0  ))wProcrastin-XI 8
	1        Procrastin-X
	2   Procrastin-XN3F9X
	3            Thesisin
	4      h5oThesisinD5S
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM medication
		ORDER BY name

	                 name
	0  ))wProcrastin-XI 8
	1        Procrastin-X
	2   Procrastin-XN3F9X
	3            Thesisin
	4            Thesisin
	5            Thesisin
	6            Thesisin
	7      h5oThesisinD5S
Wrong output for fuzzied solution in instance spider/hospital_1/0013 (2096)
	EXPECTED OUTPUT ====

		SELECT T4.name
		FROM stay AS T1
		JOIN patient AS T2 ON T1.Patient = T2.SSN
		JOIN Prescribes AS T3 ON T3.Patient = T2.SSN
		JOIN Medication AS T4 ON T3.Medication = T4.Code
		WHERE room = 111

	            name
	0    10rQyFDu0if
	1    10rQyFDu0if
	2    10rQyFDu0if
	3    10rQyFDu0if
	4    10rQyFDu0if
	..           ...
	141   rescavitin
	142   rescavitin
	143   rescavitin
	144   rescavitin
	145   rescavitin
	
	[146 rows x 1 columns]
	ACTUAL OUTPUT ====

		
		SELECT name_other AS name
		FROM
		  (SELECT ssn,
		          name,
		          address,
		          phone,
		          insuranceid,
		          pcp,
		          name_other,
		          brand,
		          description,
		          physician,
		          medication, date, appointment,
		                            dose,
		                            stayid,
		                            room,
		                            staystart,
		                            stayend,
		                            ssn AS patient
		   FROM
		     (SELECT LHS.ssn AS ssn,
		             LHS.name AS name,
		             LHS.address AS address,
		             LHS.phone AS phone,
		             LHS.insuranceid AS insuranceid,
		             LHS.pcp AS pcp,
		             RHS.name AS name_other,
		             RHS.brand AS brand,
		             RHS.description AS description,
		             RHS.physician AS physician,
		             RHS.medication AS medication,
		             RHS.date AS date,
		             RHS.appointment AS appointment,
		             RHS.dose AS dose,
		             RHS.stayid AS stayid,
		             RHS.room AS room,
		             RHS.staystart AS staystart,
		             RHS.stayend AS stayend
		      FROM patient AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM
		           (SELECT LHS.code AS code,
		                   LHS.name AS name,
		                   LHS.brand AS brand,
		                   LHS.description AS description,
		                   LHS.physician AS physician,
		                   LHS.patient AS patient,
		                   LHS.medication AS medication,
		                   LHS.date AS date,
		                   LHS.appointment AS appointment,
		                   LHS.dose AS dose,
		                   RHS.stayid AS stayid,
		                   RHS.room AS room,
		                   RHS.staystart AS staystart,
		                   RHS.stayend AS stayend
		            FROM
		              (SELECT LHS.code AS code,
		                      LHS.name AS name,
		                      LHS.brand AS brand,
		                      LHS.description AS description,
		                      RHS.physician AS physician,
		                      RHS.patient AS patient,
		                      RHS.medication AS medication,
		                      RHS.date AS date,
		                      RHS.appointment AS appointment,
		                      RHS.dose AS dose
		               FROM medication AS LHS
		               CROSS JOIN prescribes AS RHS) AS LHS
		            INNER JOIN stay AS RHS ON (LHS.patient = RHS.patient))
		         WHERE (room <= 111)) AS RHS ON (LHS.ssn = RHS.patient
		                                         AND LHS.pcp = RHS.code)))
		ORDER BY name

	          name
	0   rescavitin
	1   rescavitin
	2   rescavitin
	3   rescavitin
	4   rescavitin
	..         ...
	68  rescavitin
	69  rescavitin
	70  rescavitin
	71  rescavitin
	72  rescavitin
	
	[73 rows x 1 columns]
Wrong output for fuzzied solution in instance spider/hospital_1/0006 (2097)
	EXPECTED OUTPUT ====

		SELECT appointmentid
		FROM appointment
		ORDER BY
		START DESC
		LIMIT 1

	   appointmentid
	0       59871321
	ACTUAL OUTPUT ====

		
		SELECT appointmentid
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM appointment
		      ORDER BY END)
		   LIMIT 1)

	   appointmentid
	0       59871322
Wrong output for base solution in instance spider/hospital_1/0012 (2099)
	EXPECTED OUTPUT ====

		SELECT count(T1.SSN)
		FROM patient AS T1
		JOIN prescribes AS T2 ON T1.SSN = T2.patient
		JOIN physician AS T3 ON T2.physician = T3.employeeid
		WHERE T3.name = "John Dorian"

	   count(t1.ssn)
	0              1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count_t1_ssn_`
		FROM
		  (SELECT `LHS`.`employeeid` AS `employeeid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`position` AS `position`,
		          `LHS`.`ssn` AS `ssn`,
		          `LHS`.`address` AS `address`,
		          `LHS`.`phone` AS `phone`,
		          `LHS`.`insuranceid` AS `insuranceid`,
		          `LHS`.`pcp` AS `pcp`,
		          `LHS`.`physician` AS `physician`,
		          `LHS`.`patient` AS `patient`,
		          `LHS`.`medication` AS `medication`,
		          `LHS`.`date` AS `date`,
		          `LHS`.`appointment` AS `appointment`,
		          `LHS`.`dose` AS `dose`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`employeeid` AS `employeeid`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`position` AS `position`,
		             `LHS`.`ssn` AS `ssn`,
		             `LHS`.`address` AS `address`,
		             `LHS`.`phone` AS `phone`,
		             `LHS`.`insuranceid` AS `insuranceid`,
		             `LHS`.`pcp` AS `pcp`,
		             `RHS`.`physician` AS `physician`,
		             `RHS`.`patient` AS `patient`,
		             `RHS`.`medication` AS `medication`,
		             `RHS`.`date` AS `date`,
		             `RHS`.`appointment` AS `appointment`,
		             `RHS`.`dose` AS `dose`
		      FROM
		        (SELECT `LHS`.`employeeid` AS `employeeid`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`position` AS `position`,
		                `LHS`.`ssn` AS `ssn`,
		                `RHS`.`address` AS `address`,
		                `RHS`.`phone` AS `phone`,
		                `RHS`.`insuranceid` AS `insuranceid`,
		                `RHS`.`pcp` AS `pcp`
		         FROM `physician` AS `LHS`
		         INNER JOIN `patient` AS `RHS` ON (`LHS`.`name` = `RHS`.`name`
		                                              AND `LHS`.`ssn` = `RHS`.`ssn`)) AS `LHS`
		      CROSS JOIN `prescribes` AS `RHS`) AS `LHS`
		   CROSS JOIN
		     (SELECT COUNT() AS `n`
		      FROM `physician`
		      WHERE (`name` = 'John Dorian')) AS RHS)
		ORDER BY count_t1_ssn_

	Empty DataFrame
	Columns: [count_t1_ssn_]
	Index: []
No solution for instance spider/hospital_1/0026 (2100)
No solution for instance spider/hospital_1/0015 (2101)
Wrong output for fuzzied solution in instance spider/hospital_1/0005 (2102)
	EXPECTED OUTPUT ====

		SELECT name,
		       phone
		FROM appointment AS T1
		JOIN patient AS T2 ON T1.patient = T2.ssn
		GROUP BY T1.patient
		HAVING count(*) > 1

	                      name           phone
	0        Random J. Patient         555-051
	1        Random J. Patient         555-120
	2  XmPRandom J. PatientaAM  A8N555-0512RUS
	ACTUAL OUTPUT ====

		
		SELECT name,
		       phone
		FROM
		  (SELECT LHS.ssn AS ssn,
		          LHS.name AS name,
		          LHS.address AS address,
		          LHS.phone AS phone,
		          LHS.insuranceid AS insuranceid,
		          LHS.pcp AS pcp,
		          RHS.physician AS physician,
		          RHS.n AS n
		   FROM patient AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT patient,
		                physician,
		                COUNT() AS n
		         FROM appointment
		         GROUP BY patient,
		                  physician)
		      WHERE (n != 1)) AS RHS ON (LHS.ssn = RHS.patient))
		ORDER BY name

	                name    phone
	0  Random J. Patient  555-051
Wrong output for fuzzied solution in instance spider/hospital_1/0050 (2104)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.name
		FROM nurse AS T1
		JOIN on_call AS T2 ON T1.EmployeeID = T2.nurse

	                   name
	0       Laverne Roberts
	1  Laverne Roberts4iHLw
	2     O9iebPaul Flowers
	3           Paul Flower
	4  qKPY8Laverne Roberts
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM nurse
		ORDER BY name

	                   name
	0       Laverne Roberts
	1       Laverne Roberts
	2       Laverne Roberts
	3  Laverne Roberts4iHLw
	4     O9iebPaul Flowers
	5           Paul Flower
	6  qKPY8Laverne Roberts
Wrong output for base solution in instance spider/hospital_1/0032 (2105)
	EXPECTED OUTPUT ====

		SELECT physician,
		       department
		FROM affiliated_with
		WHERE primaryaffiliation = 1

	   physician  department
	0          1           1
	1          2           1
	2          4           1
	3          5           1
	4          8           1
	5          3           2
	6          6           2
	7          7           2
	8          9           3
	ACTUAL OUTPUT ====

		
		SELECT physician,
		       department
		FROM
		  (SELECT LHS.employeeid AS employeeid,
		          LHS.name AS name,
		          LHS.position AS POSITION,
		          LHS.ssn AS ssn,
		          LHS.departmentid AS departmentid,
		          LHS.head AS head,
		          RHS.physician AS physician,
		          RHS.department AS department,
		          RHS.primaryaffiliation AS primaryaffiliation
		   FROM
		     (SELECT LHS.employeeid AS employeeid,
		             LHS.name AS name,
		             LHS.position AS POSITION,
		             LHS.ssn AS ssn,
		             RHS.departmentid AS departmentid,
		             RHS.head AS head
		      FROM physician AS LHS
		      INNER JOIN department AS RHS ON (LHS.name = RHS.name)) AS LHS
		   CROSS JOIN affiliated_with AS RHS)
		WHERE (primaryaffiliation = 1)
		ORDER BY physician

	Empty DataFrame
	Columns: [physician, department]
	Index: []
Wrong output for fuzzied solution in instance spider/hospital_1/0041 (2107)
	EXPECTED OUTPUT ====

		SELECT T3.name
		FROM physician AS T1
		JOIN trained_in AS T2 ON T1.employeeid = T2.physician
		JOIN procedures AS T3 ON T3.code = T2.treatment
		WHERE T1.name = "John Wen"

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM `procedures` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT `LHS`.`employeeid` AS `employeeid`,
		                     `LHS`.`name` AS `name`,
		                     `LHS`.`position` AS `position`,
		                     `LHS`.`ssn` AS `ssn`,
		                     `LHS`.`code` AS `code`,
		                     `LHS`.`cost` AS `cost`,
		                     `RHS`.`physician` AS `physician`,
		                     `RHS`.`treatment` AS `treatment`,
		                     `RHS`.`certificationdate` AS `certificationdate`,
		                     `RHS`.`certificationexpires` AS `certificationexpires`
		              FROM
		                (SELECT `LHS`.`employeeid` AS `employeeid`,
		                        `LHS`.`name` AS `name`,
		                        `LHS`.`position` AS `position`,
		                        `LHS`.`ssn` AS `ssn`,
		                        `RHS`.`code` AS `code`,
		                        `RHS`.`cost` AS `cost`
		                 FROM `physician` AS `LHS`
		                 INNER JOIN `procedures` AS `RHS` ON (`LHS`.`name` = `RHS`.`name`)) AS `LHS`
		              CROSS JOIN `trained_in` AS `RHS`)
		           WHERE (`name` != 'John Wen')) AS RHS
		        WHERE (LHS.code = RHS.code
		               AND LHS.name = RHS.name
		               AND LHS.cost = RHS.cost) ))
		ORDER BY name

	                               name
	0          Folded Demiophtalmectomy
	1          Folded Demiophtalmectomy
	2          Folded Demiophtalmectomy
	3          Folded Demiophtalmectomy
	4         Obfuscated Dermogastrotom
	5        Obfuscated Dermogastrotomy
	6        Obfuscated Dermogastrotomy
	7        Obfuscated Dermogastrotomy
	8  o52Obfuscated DermogastrotomyGa6
Wrong output for fuzzied solution in instance spider/hospital_1/0019 (2110)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.blockcode
		FROM BLOCK AS T1
		JOIN room AS T2 ON T1.blockfloor = T2.blockfloor
		AND T1.blockcode = T2.blockcode
		GROUP BY T1.blockcode

	   count(*)  blockcode
	0         4          1
	1         2          2
	2         1          3
	3         3          4
	4         6          5
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___,
		                blockcode
		FROM
		  (SELECT LHS.roomnumber AS roomnumber,
		          LHS.roomtype AS roomtype,
		          LHS.blockfloor AS blockfloor,
		          LHS.blockcode AS blockcode,
		          LHS.unavailable AS unavailable,
		          RHS.n AS n
		   FROM room AS LHS
		   LEFT JOIN
		     (SELECT blockfloor,
		             blockcode,
		             COUNT(*) OVER () AS n
		      FROM block) AS RHS ON (LHS.blockfloor = RHS.blockfloor
		                                AND LHS.blockcode = RHS.blockcode))
		ORDER BY count___

	   count___  blockcode
	0      33.0          1
	1      33.0          2
	2      33.0          3
	3      33.0          4
	4       NaN          4
	5      33.0          5
Wrong output for fuzzied solution in instance spider/hospital_1/0024 (2113)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.name
		FROM medication AS T1
		JOIN prescribes AS T2 ON T1.code = T2.medication
		GROUP BY T1.brand

	   count(*)                name
	0        18  ))wProcrastin-XI 8
	1        18            Thesisin
	2        24      h5oThesisinD5S
	3        26            Thesisin
	4        28        Procrastin-X
	5        28            Thesisin
	6        43   Procrastin-XN3F9X
	ACTUAL OUTPUT ====

		
		SELECT code AS count___,
		       name
		FROM
		  (SELECT LHS.code AS code,
		          LHS.name AS name,
		          LHS.brand AS brand,
		          LHS.description AS description,
		          RHS.medication AS medication
		   FROM medication AS LHS
		   INNER JOIN
		     (SELECT medication,
		             COUNT() AS n
		      FROM prescribes
		      GROUP BY medication) AS RHS ON (LHS.code = RHS.n))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___, name]
	Index: []
Error while executing solution for instance spider/hospital_1/0021 (2114)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT roomtype) OVER () AS count_distinct_roomtype_
FROM room
ORDER BY count_distinct_roomtype_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/hospital_1/0023 (2115)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.name,
		                T1.position
		FROM physician AS T1
		JOIN prescribes AS T2 ON T1.employeeid = T2.physician
		JOIN medication AS T3 ON T3.code = T2.medication
		WHERE T3.Brand = "X"

	                  name                           position
	0          Elliot Reid                        MD Resident
	1          Elliot Reid                    Staff Internist
	2     Elliot ReidF0z0W  a6T8RSurgical Attending Physician
	3     Elliot ReidWaxcH                  o6tMD ResidentXWA
	4          John Dorian                    Staff Internist
	5          John Dorian        Surgical Attending Physicia
	6    QEzukPercival Cox                 ttending Physician
	7    QS1VAPercival Cox               OAODHStaff Internist
	8   b(4Percival CoxssO                 ttending Physician
	9           lliot Reid        Surgical Attending Physicia
	10    nWLVOElliot Reid       Surgical Attending Physician
	ACTUAL OUTPUT ====

		
		SELECT `name`,
		       `position`
		FROM
		  (SELECT `employeeid`,
		          `name`,
		          `position`,
		          `ssn`,
		          `name_other`,
		          `brand`,
		          `description`,
		          `code`,
		          `patient`,
		          `date`,
		          `appointment`,
		          `dose`,
		          `employeeid` AS `physician`
		   FROM
		     (SELECT `LHS`.`employeeid` AS `employeeid`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`position` AS `position`,
		             `LHS`.`ssn` AS `ssn`,
		             `LHS`.`name_other` AS `name_other`,
		             `LHS`.`brand` AS `brand`,
		             `LHS`.`description` AS `description`,
		             `LHS`.`code` AS `code`,
		             `RHS`.`patient` AS `patient`,
		             `RHS`.`date` AS `date`,
		             `RHS`.`appointment` AS `appointment`,
		             `RHS`.`dose` AS `dose`
		      FROM
		        (SELECT `employeeid`,
		                `name`,
		                `position`,
		                `ssn`,
		                `name_other`,
		                `brand`,
		                `description`,
		                `employeeid` AS `code`
		         FROM
		           (SELECT `LHS`.`employeeid` AS `employeeid`,
		                   `LHS`.`name` AS `name`,
		                   `LHS`.`position` AS `position`,
		                   `LHS`.`ssn` AS `ssn`,
		                   `RHS`.`name` AS `name_other`,
		                   `RHS`.`brand` AS `brand`,
		                   `RHS`.`description` AS `description`
		            FROM `physician` AS `LHS`
		            INNER JOIN
		              (SELECT *
		               FROM `medication`
		               WHERE (`brand` = 'X')) AS RHS ON (LHS.employeeid = RHS.code))) AS LHS
		      INNER JOIN prescribes AS RHS ON (LHS.employeeid = RHS.physician
		                                          AND LHS.code = RHS.medication)))
		ORDER BY name

	                name                     position
	0  QS1VAPercival Cox         OAODHStaff Internist
	1         lliot Reid  Surgical Attending Physicia
	2         lliot Reid  Surgical Attending Physicia
Wrong output for fuzzied solution in instance spider/hospital_1/0001 (2116)
	EXPECTED OUTPUT ====

		SELECT name
		FROM department
		GROUP BY departmentID
		ORDER BY count(departmentID) DESC
		LIMIT 1;

	         name
	0  Psychiatry
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM department
		WHERE (departmentid = 1)
		ORDER BY name

	              name
	0  dyzTbPsychiatry
No solution for instance spider/hospital_1/0046 (2117)
No solution for instance spider/hospital_1/0047 (2118)
Wrong output for fuzzied solution in instance spider/hospital_1/0014 (2119)
	EXPECTED OUTPUT ====

		SELECT patient
		FROM stay
		WHERE room = 111
		ORDER BY staystart DESC
		LIMIT 1

	      patient
	0  4614228531
	ACTUAL OUTPUT ====

		
		SELECT ssn AS patient
		FROM
		  (SELECT LHS.ssn AS ssn,
		          LHS.name AS name,
		          LHS.address AS address,
		          LHS.phone AS phone,
		          LHS.insuranceid AS insuranceid,
		          LHS.pcp AS pcp,
		          RHS.stayid AS stayid,
		          RHS.room AS room,
		          RHS.staystart AS staystart,
		          RHS.stayend AS stayend
		   FROM patient AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM stay
		      WHERE (room = 111)) AS RHS ON (LHS.ssn = RHS.patient))
		ORDER BY patient

	      patient
	0 -3161332843
	1  4614228531
Error while executing solution for instance spider/hospital_1/0009 (2120)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/hospital_1/0009 (2120)
No solution for instance spider/hospital_1/0025 (2121)
Wrong output for fuzzied solution in instance spider/hospital_1/0011 (2122)
	EXPECTED OUTPUT ====

		SELECT count(patient)
		FROM stay
		WHERE room = 112

	   count(patient)
	0               0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n_distinct AS count_patient_
		FROM
		  (SELECT patient,
		          stayid,
		          COUNT(DISTINCT room) AS n_distinct
		   FROM
		     (SELECT *
		      FROM stay
		      WHERE (patient < 112
		             OR room <= patient))
		   GROUP BY patient,
		            stayid)
		ORDER BY count_patient_

	   count_patient_
	0               1
Wrong output for fuzzied solution in instance spider/hospital_1/0029 (2123)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.name
		FROM undergoes AS T1
		JOIN nurse AS T2 ON T1.AssistingNurse = T2.EmployeeID

	                   name
	0       Laverne Roberts
	1  Laverne Roberts4iHLw
	2     O9iebPaul Flowers
	3           Paul Flower
	4  qKPY8Laverne Roberts
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM nurse
		ORDER BY name

	                   name
	0       Laverne Roberts
	1       Laverne Roberts
	2       Laverne Roberts
	3  Laverne Roberts4iHLw
	4     O9iebPaul Flowers
	5           Paul Flower
	6  qKPY8Laverne Roberts
No solution for instance spider/hospital_1/0010 (2124)
No solution for instance spider/hospital_1/0044 (2125)
Wrong output for base solution in instance spider/hospital_1/0040 (2126)
	EXPECTED OUTPUT ====

		SELECT avg(T3.cost)
		FROM physician AS T1
		JOIN trained_in AS T2 ON T1.employeeid = T2.physician
		JOIN procedures AS T3 ON T3.code = T2.treatment
		WHERE T1.name = "John Wen"

	   avg(t3.cost)
	0   4324.857143
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `meancost` AS `avg_t3_cost_`
		FROM
		  (SELECT `LHS`.`employeeid` AS `employeeid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`position` AS `position`,
		          `LHS`.`ssn` AS `ssn`,
		          `LHS`.`code` AS `code`,
		          `LHS`.`cost` AS `cost`,
		          `LHS`.`physician` AS `physician`,
		          `LHS`.`treatment` AS `treatment`,
		          `LHS`.`certificationdate` AS `certificationdate`,
		          `LHS`.`certificationexpires` AS `certificationexpires`,
		          `RHS`.`meancost` AS `meancost`
		   FROM
		     (SELECT `LHS`.`employeeid` AS `employeeid`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`position` AS `position`,
		             `LHS`.`ssn` AS `ssn`,
		             `LHS`.`code` AS `code`,
		             `LHS`.`cost` AS `cost`,
		             `RHS`.`physician` AS `physician`,
		             `RHS`.`treatment` AS `treatment`,
		             `RHS`.`certificationdate` AS `certificationdate`,
		             `RHS`.`certificationexpires` AS `certificationexpires`
		      FROM
		        (SELECT `LHS`.`employeeid` AS `employeeid`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`position` AS `position`,
		                `LHS`.`ssn` AS `ssn`,
		                `RHS`.`code` AS `code`,
		                `RHS`.`cost` AS `cost`
		         FROM `physician` AS `LHS`
		         INNER JOIN `procedures` AS `RHS` ON (`LHS`.`name` = `RHS`.`name`)) AS `LHS`
		      CROSS JOIN `trained_in` AS `RHS`) AS `LHS`
		   CROSS JOIN
		     (SELECT AVG(`cost`) AS `meancost`
		      FROM `procedures`
		      WHERE (`name` != 'John Wen')) AS RHS)
		ORDER BY avg_t3_cost_

	Empty DataFrame
	Columns: [avg_t3_cost_]
	Index: []
Wrong output for fuzzied solution in instance spider/hospital_1/0028 (2127)
	EXPECTED OUTPUT ====

		SELECT DISTINCT name
		FROM nurse
		ORDER BY name

	                   name
	0       Laverne Roberts
	1  Laverne Roberts4iHLw
	2     O9iebPaul Flowers
	3           Paul Flower
	4  qKPY8Laverne Roberts
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM nurse
		ORDER BY name

	                   name
	0       Laverne Roberts
	1       Laverne Roberts
	2       Laverne Roberts
	3  Laverne Roberts4iHLw
	4     O9iebPaul Flowers
	5           Paul Flower
	6  qKPY8Laverne Roberts
Wrong output for fuzzied solution in instance spider/hospital_1/0031 (2129)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM physician AS T1
		JOIN prescribes AS T2 ON T1.employeeid = T2.physician
		ORDER BY T2.dose DESC
		LIMIT 1

	               name
	0  lFi04John Dorian
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.employeeid AS employeeid,
		          LHS.name AS name,
		          LHS.position AS POSITION,
		          LHS.ssn AS ssn,
		          LHS.patient AS patient,
		          LHS.medication AS medication,
		          LHS.date AS date,
		          LHS.appointment AS appointment,
		          LHS.dose AS dose,
		          LHS.physician AS physician,
		          RHS.employeeid AS employeeid_other,
		          RHS.position AS position_other,
		          RHS.ssn AS ssn_other,
		          RHS.patient AS patient_other,
		          RHS.medication AS medication_other,
		          RHS.date AS date_other,
		          RHS.appointment AS appointment_other,
		          RHS.dose AS dose_other
		   FROM
		     (SELECT employeeid,
		             name,
		             POSITION,
		             ssn,
		             patient,
		             medication, date, appointment,
		                               dose,
		                               employeeid AS physician
		      FROM
		        (SELECT LHS.employeeid AS employeeid,
		                LHS.name AS name,
		                LHS.position AS POSITION,
		                LHS.ssn AS ssn,
		                RHS.patient AS patient,
		                RHS.medication AS medication,
		                RHS.date AS date,
		                RHS.appointment AS appointment,
		                RHS.dose AS dose
		         FROM physician AS LHS
		         INNER JOIN prescribes AS RHS ON (LHS.employeeid = RHS.physician))) AS LHS
		   INNER JOIN
		     (SELECT employeeid,
		             name,
		             POSITION,
		             ssn,
		             patient,
		             medication, date, appointment,
		                               dose,
		                               employeeid AS physician
		      FROM
		        (SELECT LHS.employeeid AS employeeid,
		                LHS.name AS name,
		                LHS.position AS POSITION,
		                LHS.ssn AS ssn,
		                RHS.patient AS patient,
		                RHS.medication AS medication,
		                RHS.date AS date,
		                RHS.appointment AS appointment,
		                RHS.dose AS dose
		         FROM physician AS LHS
		         INNER JOIN prescribes AS RHS ON (LHS.employeeid = RHS.physician))) AS RHS ON (LHS.medication = RHS.physician
		                                                                                          AND LHS.name = RHS.name))
		ORDER BY name

	                 name
	0         Elliot Reid
	1         Elliot Reid
	2         Elliot Reid
	3         Elliot Reid
	4         Elliot Reid
	..                ...
	466  lFi04John Dorian
	467  lFi04John Dorian
	468  lFi04John Dorian
	469  lFi04John Dorian
	470  lFi04John Dorian
	
	[471 rows x 1 columns]
No solution for instance spider/department_store/0042 (2130)
No solution for instance spider/department_store/0033 (2131)
Wrong output for fuzzied solution in instance spider/department_store/0036 (2134)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.supplier_name,
		                T1.supplier_phone
		FROM suppliers AS T1
		JOIN product_suppliers AS T2 ON T1.supplier_id = T2.supplier_id
		JOIN products AS T3 ON T2.product_id = T3.product_id
		WHERE T3.product_name = "red jeans"

	  supplier_name             supplier_phone
	0          Audi             1-483-283-4742
	1         Tesco        1-432-960-2402x1734
	2         Tesco             1-483-283-4742
	3         Tesco     zXu287-071-1153x254itI
	4         YKq1J        1-432-960-2402x1734
	5          esco        1-432-960-2402x1734
	6          esco  zZX1-432-960-2402x1734Fwh
	ACTUAL OUTPUT ====

		
		SELECT `supplier_name`,
		       `supplier_phone`
		FROM
		  (SELECT `LHS`.`supplier_id` AS `supplier_id`,
		          `LHS`.`supplier_name` AS `supplier_name`,
		          `LHS`.`supplier_phone` AS `supplier_phone`,
		          `LHS`.`product_id` AS `product_id`,
		          `LHS`.`date_supplied_from` AS `date_supplied_from`,
		          `LHS`.`date_supplied_to` AS `date_supplied_to`,
		          `LHS`.`total_amount_purchased` AS `total_amount_purchased`,
		          `LHS`.`total_value_purchased` AS `total_value_purchased`,
		          `RHS`.`product_type_code` AS `product_type_code`,
		          `RHS`.`product_name` AS `product_name`,
		          `RHS`.`product_price` AS `product_price`
		   FROM
		     (SELECT `LHS`.`supplier_id` AS `supplier_id`,
		             `LHS`.`supplier_name` AS `supplier_name`,
		             `LHS`.`supplier_phone` AS `supplier_phone`,
		             `RHS`.`product_id` AS `product_id`,
		             `RHS`.`date_supplied_from` AS `date_supplied_from`,
		             `RHS`.`date_supplied_to` AS `date_supplied_to`,
		             `RHS`.`total_amount_purchased` AS `total_amount_purchased`,
		             `RHS`.`total_value_purchased` AS `total_value_purchased`
		      FROM `suppliers` AS `LHS`
		      INNER JOIN `product_suppliers` AS `RHS` ON (`LHS`.`supplier_id` = `RHS`.`supplier_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `products`
		      WHERE (`product_name` = 'red jeans')) AS RHS ON (LHS.product_id = RHS.product_id))
		ORDER BY supplier_name

	  supplier_name             supplier_phone
	0          Audi             1-483-283-4742
	1         Tesco        1-432-960-2402x1734
	2         Tesco             1-483-283-4742
	3         Tesco     zXu287-071-1153x254itI
	4         YKq1J        1-432-960-2402x1734
	5         YKq1J        1-432-960-2402x1734
	6          esco        1-432-960-2402x1734
	7          esco        1-432-960-2402x1734
	8          esco  zZX1-432-960-2402x1734Fwh
	9          esco  zZX1-432-960-2402x1734Fwh
Wrong output for fuzzied solution in instance spider/department_store/0017 (2135)
	EXPECTED OUTPUT ====

		SELECT dept_store_chain_id
		FROM department_stores
		GROUP BY dept_store_chain_id
		ORDER BY count(*) DESC
		LIMIT 2

	   dept_store_chain_id
	0                    0
	1                    4
	ACTUAL OUTPUT ====

		
		SELECT n AS dept_store_chain_id
		FROM
		  (SELECT dept_store_chain_id,
		          n,
		          store_name,
		          store_address,
		          store_phone,
		          store_email,
		          dept_store_chain_id AS dept_store_id
		   FROM
		     (SELECT LHS.dept_store_chain_id AS dept_store_chain_id,
		             LHS.n AS n,
		             RHS.store_name AS store_name,
		             RHS.store_address AS store_address,
		             RHS.store_phone AS store_phone,
		             RHS.store_email AS store_email
		      FROM
		        (SELECT dept_store_chain_id,
		                COUNT() AS n
		         FROM department_stores
		         GROUP BY dept_store_chain_id) AS LHS
		      INNER JOIN department_stores AS RHS ON (LHS.dept_store_chain_id = RHS.dept_store_id
		                                                 AND LHS.n = RHS.dept_store_chain_id)))
		ORDER BY dept_store_chain_id

	Empty DataFrame
	Columns: [dept_store_chain_id]
	Index: []
No solution for instance spider/department_store/0008 (2136)
No solution for instance spider/department_store/0039 (2137)
Error while executing solution for instance spider/department_store/0003 (2139)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT product_type_code) OVER () AS count_distinct_product_type_code_
FROM products
ORDER BY count_distinct_product_type_code_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/department_store/0030 (2142)
Wrong output for fuzzied solution in instance spider/department_store/0013 (2143)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.customer_name
		FROM customers AS T1
		JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.order_status_code = "Pending"
		ORDER BY T2.customer_id

	  customer_name
	0          3JXx
	1     Cristobal
	2  JjXKarsonTLw
	3        Karson
	4    zDKAdahui)
	ACTUAL OUTPUT ====

		
		SELECT `customer_name`
		FROM
		  (SELECT `LHS`.`order_id` AS `order_id`,
		          `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`order_status_code` AS `order_status_code`,
		          `LHS`.`order_date` AS `order_date`,
		          `RHS`.`payment_method_code` AS `payment_method_code`,
		          `RHS`.`customer_code` AS `customer_code`,
		          `RHS`.`customer_name` AS `customer_name`,
		          `RHS`.`customer_address` AS `customer_address`,
		          `RHS`.`customer_phone` AS `customer_phone`,
		          `RHS`.`customer_email` AS `customer_email`
		   FROM
		     (SELECT *
		      FROM `customer_orders`
		      WHERE (`order_status_code` = 'Pending')) AS LHS
		   LEFT JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))
		ORDER BY customer_name

	  customer_name
	0          3JXx
	1     Cristobal
	2  JjXKarsonTLw
	3        Karson
	4    zDKAdahui)
	5    zDKAdahui)
No solution for instance spider/department_store/0012 (2146)
Wrong output for base solution in instance spider/department_store/0026 (2147)
	EXPECTED OUTPUT ====

		SELECT T1.staff_name,
		       T1.staff_gender
		FROM staff AS T1
		JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id
		WHERE T2.date_assigned_from LIKE "2016%"

	  staff_name staff_gender
	0   Katelynn            1
	1     Malika            1
	2     Melody            1
	3      Tyson            1
	4    Yolanda            1
	5     Zakary            1
	ACTUAL OUTPUT ====

		
		SELECT staff_name,
		       staff_gender
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.staff_id AS staff_id,
		                LHS.staff_gender AS staff_gender,
		                LHS.staff_name AS staff_name,
		                RHS.department_id AS department_id,
		                RHS.date_assigned_from AS date_assigned_from,
		                RHS.job_title_code AS job_title_code,
		                RHS.date_assigned_to AS date_assigned_to
		         FROM staff AS LHS
		         LEFT JOIN staff_department_assignments AS RHS ON (LHS.staff_id = RHS.staff_id))
		      ORDER BY date_assigned_from)
		   LIMIT 6)

	  staff_name staff_gender
	0   Adrienne            1
	1  Archibald            1
	2     Dannie            1
	3     Malika            1
	4    Vanessa            1
	5    Yolanda            1
No solution for instance spider/department_store/0015 (2148)
Wrong output for fuzzied solution in instance spider/department_store/0016 (2150)
	EXPECTED OUTPUT ====

		SELECT T2.dept_store_id,
		       T2.store_name
		FROM departments AS T1
		JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id
		WHERE T1.department_name = "marketing" INTERSECT
		  SELECT T2.dept_store_id,
		         T2.store_name
		  FROM departments AS T1
		  JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id WHERE T1.department_name = "managing"

	Empty DataFrame
	Columns: [dept_store_id, store_name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `dept_store_id`,
		       `store_name`
		FROM
		  (SELECT `LHS`.`department_id` AS `department_id`,
		          `LHS`.`dept_store_id` AS `dept_store_id`,
		          `LHS`.`department_name` AS `department_name`,
		          `RHS`.`dept_store_chain_id` AS `dept_store_chain_id`,
		          `RHS`.`store_name` AS `store_name`,
		          `RHS`.`store_address` AS `store_address`,
		          `RHS`.`store_phone` AS `store_phone`,
		          `RHS`.`store_email` AS `store_email`
		   FROM `departments` AS `LHS`
		   LEFT JOIN `department_stores` AS `RHS` ON (`LHS`.`dept_store_id` = `RHS`.`dept_store_id`))
		WHERE (`department_name` != 'marketing'
		       AND `department_name` = 'managing')
		ORDER BY dept_store_id

	   dept_store_id  store_name
	0     1569233977   store_nam
	1     3677482259  store_name
Wrong output for fuzzied solution in instance spider/department_store/0032 (2151)
	EXPECTED OUTPUT ====

		SELECT supplier_id
		FROM Product_Suppliers
		GROUP BY supplier_id
		HAVING avg(total_amount_purchased) > 50000
		OR avg(total_amount_purchased) < 30000

	   supplier_id
	0            1
	1            2
	2            4
	3            6
	4    982659487
	5   8604685596
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT supplier_id
		FROM
		  (SELECT *
		   FROM product_suppliers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT supplier_id AS product_id,
		                  supplier_id,
		                  date_supplied_from,
		                  date_supplied_to,
		                  total_amount_purchased,
		                  total_value_purchased,
		                  date_supplied_from_other,
		                  date_supplied_to_other,
		                  total_amount_purchased_other,
		                  total_value_purchased_other
		           FROM
		             (SELECT product_id,
		                     product_id AS supplier_id,
		                     date_supplied_from,
		                     date_supplied_to,
		                     total_amount_purchased,
		                     total_value_purchased,
		                     date_supplied_from_other,
		                     date_supplied_to_other,
		                     total_amount_purchased_other,
		                     total_value_purchased_other
		              FROM
		                (SELECT LHS.product_id AS product_id,
		                        LHS.supplier_id AS supplier_id,
		                        LHS.date_supplied_from AS date_supplied_from,
		                        LHS.date_supplied_to AS date_supplied_to,
		                        LHS.total_amount_purchased AS total_amount_purchased,
		                        LHS.total_value_purchased AS total_value_purchased,
		                        RHS.date_supplied_from AS date_supplied_from_other,
		                        RHS.date_supplied_to AS date_supplied_to_other,
		                        RHS.total_amount_purchased AS total_amount_purchased_other,
		                        RHS.total_value_purchased AS total_value_purchased_other
		                 FROM product_suppliers AS LHS
		                 INNER JOIN product_suppliers AS RHS ON (LHS.product_id = RHS.supplier_id
		                                                            AND LHS.supplier_id = RHS.product_id)))) AS RHS
		        WHERE (LHS.supplier_id = RHS.supplier_id) ))
		ORDER BY supplier_id

	   supplier_id
	0            3
	1            4
	2            5
	3    982659487
	4   2200084752
	5   2919711029
	6   6088067453
	7   8604685596
Wrong output for fuzzied solution in instance spider/department_store/0018 (2152)
	EXPECTED OUTPUT ====

		SELECT department_id
		FROM staff_department_assignments
		GROUP BY department_id
		ORDER BY count(*)
		LIMIT 1

	   department_id
	0              0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS department_id
		FROM
		  (SELECT date_assigned_to,
		          COUNT() AS n
		   FROM staff_department_assignments
		   GROUP BY date_assigned_to)
		WHERE (n = 1)
		ORDER BY department_id

	Empty DataFrame
	Columns: [department_id]
	Index: []
Wrong output for fuzzied solution in instance spider/department_store/0041 (2153)
	EXPECTED OUTPUT ====

		SELECT T1.staff_name,
		       T1.staff_gender
		FROM staff AS T1
		JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id
		WHERE T2.job_title_code = "Sales Person"
		EXCEPT
		SELECT T1.staff_name,
		       T1.staff_gender
		FROM staff AS T1
		JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id
		WHERE T2.job_title_code = "Clerical Staff"

	    staff_name staff_gender
	0  w78vjKristy            1
	1        Malik            2
	2        Krist       UlO0S1
	ACTUAL OUTPUT ====

		
		SELECT `staff_name`,
		       `staff_gender`
		FROM
		  (SELECT `LHS`.`staff_id` AS `staff_id`,
		          `LHS`.`staff_gender` AS `staff_gender`,
		          `LHS`.`staff_name` AS `staff_name`,
		          `LHS`.`department_id` AS `department_id`,
		          `LHS`.`date_assigned_from` AS `date_assigned_from`,
		          `LHS`.`job_title_code` AS `job_title_code`,
		          `LHS`.`date_assigned_to` AS `date_assigned_to`
		   FROM
		     (SELECT `LHS`.`staff_id` AS `staff_id`,
		             `LHS`.`staff_gender` AS `staff_gender`,
		             `LHS`.`staff_name` AS `staff_name`,
		             `RHS`.`department_id` AS `department_id`,
		             `RHS`.`date_assigned_from` AS `date_assigned_from`,
		             `RHS`.`job_title_code` AS `job_title_code`,
		             `RHS`.`date_assigned_to` AS `date_assigned_to`
		      FROM `staff` AS `LHS`
		      INNER JOIN `staff_department_assignments` AS `RHS` ON (`LHS`.`staff_id` = `RHS`.`staff_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `staff_department_assignments`
		      WHERE (`job_title_code` = 'Sales Person'
		             AND `job_title_code` != 'Clerical Staff')) AS RHS ON (LHS.staff_id = RHS.staff_id
		                                                                   AND LHS.department_id = RHS.department_id
		                                                                   AND LHS.date_assigned_from = RHS.date_assigned_from
		                                                                   AND LHS.job_title_code = RHS.job_title_code
		                                                                   AND LHS.date_assigned_to = RHS.date_assigned_to))
		ORDER BY staff_name

	      staff_name staff_gender
	0  MvwKdAdrienne            1
	1  MvwKdAdrienne            1
	2        Vanessa            1
	3    w78vjKristy            1
	4          Malik            2
	5         Kristy      5D61MLq
	6       Adrienne       OtYR(2
	7       Adrienne       OtYR(2
	8       Adrienne       OtYR(2
	9          Krist       UlO0S1
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for fuzzied solution in instance spider/department_store/0007 (2157)
	EXPECTED OUTPUT ====

		SELECT product_id
		FROM order_items
		GROUP BY product_id
		ORDER BY count(*) DESC
		LIMIT 1

	   product_id
	0          15
	ACTUAL OUTPUT ====

		
		SELECT order_item_id_other AS product_id
		FROM
		  (SELECT order_item_id,
		          order_id,
		          order_id AS product_id,
		          order_item_id_other
		   FROM
		     (SELECT order_item_id,
		             order_item_id AS order_id,
		             product_id,
		             order_item_id_other
		      FROM
		        (SELECT LHS.order_item_id AS order_item_id,
		                LHS.order_id AS order_id,
		                LHS.product_id AS product_id,
		                RHS.order_item_id AS order_item_id_other
		         FROM order_items AS LHS
		         INNER JOIN order_items AS RHS ON (LHS.order_item_id = RHS.order_id
		                                              AND LHS.order_id = RHS.product_id))))
		ORDER BY product_id

	Empty DataFrame
	Columns: [product_id]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
No solution for instance spider/department_store/0021 (2160)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for base solution in instance spider/department_store/0043 (2163)
	EXPECTED OUTPUT ====

	   avg_product_price_
	0          715.536667
	ACTUAL OUTPUT ====

		SELECT avg(product_price)
		FROM products
		WHERE product_type_code = 'Clothes'

	   avg(product_price)
	0          715.536667
Wrong output for ground truth in instance spider/department_store/0043 (2163)
Wrong output for fuzzied solution in instance spider/department_store/0014 (2164)
	EXPECTED OUTPUT ====

		SELECT T1.customer_name,
		       T1.customer_address
		FROM customers AS T1
		JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.order_status_code = "New" INTERSECT
		  SELECT T1.customer_name,
		         T1.customer_address
		  FROM customers AS T1
		  JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = "Pending"

	Empty DataFrame
	Columns: [customer_name, customer_address]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `customer_name`,
		                `customer_address`
		FROM
		  (SELECT `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`payment_method_code` AS `payment_method_code`,
		          `LHS`.`customer_code` AS `customer_code`,
		          `LHS`.`customer_name` AS `customer_name`,
		          `LHS`.`customer_address` AS `customer_address`,
		          `LHS`.`customer_phone` AS `customer_phone`,
		          `LHS`.`customer_email` AS `customer_email`,
		          `LHS`.`order_id` AS `order_id`,
		          `LHS`.`order_status_code` AS `order_status_code`,
		          `LHS`.`order_date` AS `order_date`
		   FROM
		     (SELECT `LHS`.`customer_id` AS `customer_id`,
		             `LHS`.`payment_method_code` AS `payment_method_code`,
		             `LHS`.`customer_code` AS `customer_code`,
		             `LHS`.`customer_name` AS `customer_name`,
		             `LHS`.`customer_address` AS `customer_address`,
		             `LHS`.`customer_phone` AS `customer_phone`,
		             `LHS`.`customer_email` AS `customer_email`,
		             `RHS`.`order_id` AS `order_id`,
		             `RHS`.`order_status_code` AS `order_status_code`,
		             `RHS`.`order_date` AS `order_date`
		      FROM `customers` AS `LHS`
		      INNER JOIN `customer_orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `customer_orders`
		      WHERE (`order_status_code` = 'New'
		             AND `order_status_code` != 'Pending')) AS RHS ON (LHS.customer_id = RHS.customer_id
		                                                               AND LHS.order_id = RHS.order_id
		                                                               AND LHS.order_status_code = RHS.order_status_code
		                                                               AND LHS.order_date = RHS.order_date))
		ORDER BY customer_name

	  customer_name                                   customer_address
	0    Kenyazola2  983 Elinore Passage\nDarrionborough, SC 53915-...
Wrong output for base solution in instance spider/department_store/0009 (2165)
	EXPECTED OUTPUT ====

	  product_type_code  avg_product_price_
	0           Clothes          715.536667
	1          Hardware          796.041667
	ACTUAL OUTPUT ====

		SELECT product_type_code,
		       avg(product_price)
		FROM products
		GROUP BY product_type_code

	  product_type_code  avg(product_price)
	0           Clothes          715.536667
	1          Hardware          796.041667
Wrong output for ground truth in instance spider/department_store/0009 (2165)
No solution for instance spider/department_store/0025 (2166)
No solution for instance spider/department_store/0011 (2167)
No solution for instance spider/department_store/0029 (2168)
Error while executing solution for instance spider/department_store/0010 (2169)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `dept_store_chain_name`) OVER () AS `count___`
FROM
  (SELECT `LHS`.`dept_store_id` AS `dept_store_id`,
          `LHS`.`dept_store_chain_id` AS `dept_store_chain_id`,
          `LHS`.`store_name` AS `store_name`,
          `LHS`.`store_address` AS `store_address`,
          `LHS`.`store_phone` AS `store_phone`,
          `LHS`.`store_email` AS `store_email`,
          `RHS`.`dept_store_chain_name` AS `dept_store_chain_name`
   FROM `department_stores` AS `LHS`
   LEFT JOIN
     (SELECT *
      FROM `department_store_chain`
      WHERE (`dept_store_chain_name` = 'South')) AS RHS ON (LHS.dept_store_chain_id = RHS.dept_store_chain_id))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/department_store/0040 (2171)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.customer_name
		FROM customers AS T1
		JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id
		JOIN order_items AS T3 ON T2.order_id = T3.order_id
		GROUP BY T1.customer_id
		HAVING COUNT (DISTINCT T3.product_id) >= 3

	   customer_name
	0  ChaunceyInAHi
	ACTUAL OUTPUT ====

		
		SELECT customer_name
		FROM
		  (SELECT customer_name,
		          payment_method_code,
		          COUNT(DISTINCT product_id) AS n_distinct
		   FROM
		     (SELECT LHS.customer_id AS customer_id,
		             LHS.payment_method_code AS payment_method_code,
		             LHS.customer_code AS customer_code,
		             LHS.customer_name AS customer_name,
		             LHS.customer_address AS customer_address,
		             LHS.customer_phone AS customer_phone,
		             LHS.customer_email AS customer_email,
		             LHS.order_id AS order_id,
		             LHS.order_status_code AS order_status_code,
		             LHS.order_date AS order_date,
		             RHS.order_item_id AS order_item_id,
		             RHS.product_id AS product_id
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.payment_method_code AS payment_method_code,
		                LHS.customer_code AS customer_code,
		                LHS.customer_name AS customer_name,
		                LHS.customer_address AS customer_address,
		                LHS.customer_phone AS customer_phone,
		                LHS.customer_email AS customer_email,
		                RHS.order_id AS order_id,
		                RHS.order_status_code AS order_status_code,
		                RHS.order_date AS order_date
		         FROM customers AS LHS
		         INNER JOIN customer_orders AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS
		      INNER JOIN order_items AS RHS ON (LHS.order_id = RHS.order_id))
		   GROUP BY customer_name,
		            payment_method_code)
		WHERE (n_distinct = 3)
		ORDER BY customer_name

	Empty DataFrame
	Columns: [customer_name]
	Index: []
Wrong output for fuzzied solution in instance spider/department_store/0031 (2173)
	EXPECTED OUTPUT ====

		SELECT product_id,
		       product_name
		FROM products
		WHERE product_price < 600
		  OR product_price > 900

	   product_id    product_name
	0           0   dPv0FQMtkr06p
	1           2       red jeans
	2           3       (1dmic0mz
	3           4       red jeans
	4           7   ellow topping
	5          10        keyboard
	6          13  yellow topping
	7          14        5)oTQSI0
	8  5984765971       xqpmicZXh
	ACTUAL OUTPUT ====

		
		SELECT product_id,
		       product_name
		FROM products
		WHERE (product_price <= 600.0
		       OR product_price >= 900.0)
		ORDER BY product_id

	    product_id    product_name
	0            0   dPv0FQMtkr06p
	1            1  red jeans xeOM
	2            2       red jeans
	3            3       (1dmic0mz
	4            4       red jeans
	5            7   ellow topping
	6           10        keyboard
	7           11       n7DmicFFG
	8           13  yellow topping
	9           14        5)oTQSI0
	10  5984765971       xqpmicZXh
No solution for instance spider/music_4/0017 (2175)
Wrong output for base solution in instance spider/music_4/0003 (2177)
	EXPECTED OUTPUT ====

	    avg_age_
	0  31.428571
	ACTUAL OUTPUT ====

		SELECT avg(Age)
		FROM artist

	    avg(age)
	0  31.428571
Wrong output for ground truth in instance spider/music_4/0003 (2177)
Wrong output for fuzzied solution in instance spider/music_4/0022 (2179)
	EXPECTED OUTPUT ====

		SELECT Category
		FROM music_festival
		GROUP BY Category
		HAVING COUNT(*) > 1

	      category
	0  Best Lyrics
	1    Best Song
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT category
		FROM
		  (SELECT category,
		          RESULT,
		          COUNT() AS n
		   FROM music_festival
		   GROUP BY category,
		            RESULT)
		WHERE (n > 1)
		ORDER BY category

	    category
	0  Best Song
Wrong output for fuzzied solution in instance spider/music_4/0013 (2180)
	EXPECTED OUTPUT ====

		SELECT T2.Song
		FROM music_festival AS T1
		JOIN volume AS T2 ON T1.Volume = T2.Volume_ID
		WHERE T1.Result = "Nominated"

	                                song
	0        (I Just) Died in Your Arms 
	1        (I Just) Died in Your Arms 
	2                            The Way
	3              Looking for a New Lov
	4              Looking for a New Lov
	5         ZTHYG With or Without You 
	6         ZTHYG With or Without You 
	7                          jIWYzpbaX
	8                          jIWYzpbaX
	9  ypv87 (I Just) Died in Your Arms 
	ACTUAL OUTPUT ====

		
		SELECT `song`
		FROM
		  (SELECT `volume_id`,
		          `volume_issue`,
		          `issue_date`,
		          `weeks_on_top`,
		          `song`,
		          `artist_id`,
		          `music_festival`,
		          `date_of_ceremony`,
		          `category`,
		          `volume`,
		          `result`,
		          `volume_id` AS `id`
		   FROM
		     (SELECT `LHS`.`volume_id` AS `volume_id`,
		             `LHS`.`volume_issue` AS `volume_issue`,
		             `LHS`.`issue_date` AS `issue_date`,
		             `LHS`.`weeks_on_top` AS `weeks_on_top`,
		             `LHS`.`song` AS `song`,
		             `LHS`.`artist_id` AS `artist_id`,
		             `RHS`.`music_festival` AS `music_festival`,
		             `RHS`.`date_of_ceremony` AS `date_of_ceremony`,
		             `RHS`.`category` AS `category`,
		             `RHS`.`volume` AS `volume`,
		             `RHS`.`result` AS `result`
		      FROM `volume` AS `LHS`
		      INNER JOIN `music_festival` AS `RHS` ON (`LHS`.`volume_id` = `RHS`.`id`)))
		WHERE (`result` = 'Nominated')
		ORDER BY song

	                    song
	0           The WayPPOuw
	1        7NLQNC9VQrhx10(
	2  Looking for a New Lov
Wrong output for fuzzied solution in instance spider/music_4/0012 (2183)
	EXPECTED OUTPUT ====

		SELECT T1.Date_of_ceremony
		FROM music_festival AS T1
		JOIN volume AS T2 ON T1.Volume = T2.Volume_ID
		WHERE T2.Weeks_on_Top > 2

	         date_of_ceremony
	0        18 February 2011
	1        18 February 2011
	2        18 February 2011
	3  AQu18 February 201103v
	ACTUAL OUTPUT ====

		
		SELECT date_of_ceremony
		FROM
		  (SELECT id,
		          music_festival,
		          date_of_ceremony,
		          category,
		          volume,
		          RESULT,
		          volume_issue,
		          issue_date,
		          weeks_on_top,
		          song,
		          id AS artist_id
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.music_festival AS music_festival,
		             LHS.date_of_ceremony AS date_of_ceremony,
		             LHS.category AS category,
		             LHS.volume AS volume,
		             LHS.result AS RESULT,
		             RHS.volume_issue AS volume_issue,
		             RHS.issue_date AS issue_date,
		             RHS.weeks_on_top AS weeks_on_top,
		             RHS.song AS song
		      FROM music_festival AS LHS
		      INNER JOIN volume AS RHS ON (LHS.id = RHS.artist_id
		                                      AND LHS.volume = RHS.volume_id)))
		ORDER BY date_of_ceremony

	Empty DataFrame
	Columns: [date_of_ceremony]
	Index: []
Wrong output for fuzzied solution in instance spider/music_4/0016 (2187)
	EXPECTED OUTPUT ====

		SELECT avg(T2.Weeks_on_Top)
		FROM artist AS T1
		JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID
		WHERE T1.age <= 25

	   avg(t2.weeks_on_top)
	0                1.7425
	ACTUAL OUTPUT ====

		
		SELECT weeks_on_top AS avg_t2_weeks_on_top_
		FROM
		  (SELECT LHS.artist_id AS artist_id,
		          LHS.artist AS artist,
		          LHS.age AS age,
		          LHS.famous_title AS famous_title,
		          LHS.famous_release_date AS famous_release_date,
		          LHS.volume_id AS volume_id,
		          LHS.volume_issue AS volume_issue,
		          LHS.issue_date AS issue_date,
		          LHS.weeks_on_top AS weeks_on_top,
		          LHS.song AS song,
		          RHS.meanage AS meanage
		   FROM
		     (SELECT LHS.artist_id AS artist_id,
		             LHS.artist AS artist,
		             LHS.age AS age,
		             LHS.famous_title AS famous_title,
		             LHS.famous_release_date AS famous_release_date,
		             LHS.volume_id AS volume_id,
		             LHS.volume_issue AS volume_issue,
		             LHS.issue_date AS issue_date,
		             LHS.weeks_on_top AS weeks_on_top,
		             LHS.song AS song
		      FROM
		        (SELECT LHS.artist_id AS artist_id,
		                LHS.artist AS artist,
		                LHS.age AS age,
		                LHS.famous_title AS famous_title,
		                LHS.famous_release_date AS famous_release_date,
		                RHS.volume_id AS volume_id,
		                RHS.volume_issue AS volume_issue,
		                RHS.issue_date AS issue_date,
		                RHS.weeks_on_top AS weeks_on_top,
		                RHS.song AS song
		         FROM artist AS LHS
		         INNER JOIN volume AS RHS ON (LHS.artist_id = RHS.artist_id)) AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM artist
		         WHERE (age <= 25)) AS RHS ON (LHS.artist_id = RHS.artist_id
		                                       AND LHS.artist = RHS.artist
		                                       AND LHS.age = RHS.age
		                                       AND LHS.famous_title = RHS.famous_title
		                                       AND LHS.famous_release_date = RHS.famous_release_date)) AS LHS
		   INNER JOIN
		     (SELECT artist,
		             artist_id,
		             AVG(age) AS meanage
		      FROM artist
		      GROUP BY artist,
		               artist_id) AS RHS ON (LHS.artist_id = RHS.artist_id
		                                     AND LHS.artist = RHS.artist))
		ORDER BY avg_t2_weeks_on_top_

	   avg_t2_weeks_on_top_
	0                  1.00
	1                  1.98
	2                  1.99
	3                  2.00
Wrong output for fuzzied solution in instance spider/music_4/0019 (2190)
	EXPECTED OUTPUT ====

		SELECT Famous_Release_date
		FROM artist
		ORDER BY Age DESC
		LIMIT 1

	  famous_release_date
	0    January 21, 2008
	ACTUAL OUTPUT ====

		
		SELECT famous_release_date
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM artist
		      ORDER BY artist_id DESC)
		   LIMIT 1)

	  famous_release_date
	0       June 23, 2008
Wrong output for fuzzied solution in instance spider/music_4/0021 (2193)
	EXPECTED OUTPUT ====

		SELECT RESULT
		FROM music_festival
		GROUP BY RESULT
		ORDER BY COUNT(*) DESC
		LIMIT 1

	      result
	0  Nominated
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT RESULT
		FROM
		  (SELECT LHS.result AS RESULT,
		          LHS.volume AS volume,
		          LHS.n AS n,
		          RHS.music_festival AS music_festival,
		          RHS.date_of_ceremony AS date_of_ceremony,
		          RHS.category AS category,
		          RHS.volume AS volume_other
		   FROM
		     (SELECT RESULT,
		             volume,
		             COUNT() AS n
		      FROM music_festival
		      GROUP BY RESULT,
		               volume) AS LHS
		   INNER JOIN music_festival AS RHS ON (LHS.n = RHS.id
		                                           AND LHS.result = RHS.result))
		ORDER BY RESULT

	            result
	0  uDlNominatedA8v
Wrong output for fuzzied solution in instance spider/music_4/0009 (2197)
	EXPECTED OUTPUT ====

		SELECT Song
		FROM volume
		WHERE Weeks_on_Top > 1

	                                song
	0   (I Just) Died in Your Arms Ouqno
	1                       The WayfwsK7
	2       Touch Me (I Want Your Body) 
	3                       Head to Toe 
	4  YTwCM (I Just) Died in Your Arms 
	ACTUAL OUTPUT ====

		
		SELECT song
		FROM volume
		WHERE (weeks_on_top != 1.0)
		ORDER BY song

	                                song
	0   (I Just) Died in Your Arms Ouqno
	1                            The Way
	2                       The WayfwsK7
	3        Touch Me (I Want Your Body)
	4       Touch Me (I Want Your Body) 
	5       Touch Me (I Want Your Body) 
	6                       Head to Toe 
	7                  MA6cLHead to Toe 
	8  YTwCM (I Just) Died in Your Arms 
Wrong output for fuzzied solution in instance spider/music_4/0025 (2198)
	EXPECTED OUTPUT ====

		SELECT T1.Famous_Title
		FROM artist AS T1
		JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID
		WHERE T2.Weeks_on_Top > 2 INTERSECT
		  SELECT T1.Famous_Title
		  FROM artist AS T1
		  JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top < 2

	     famous_title
	0  0chImperivmTrq
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT famous_title
		FROM
		  (SELECT LHS.artist_id AS artist_id,
		          LHS.artist AS artist,
		          LHS.age AS age,
		          LHS.famous_title AS famous_title,
		          LHS.famous_release_date AS famous_release_date,
		          RHS.volume_id AS volume_id,
		          RHS.volume_issue AS volume_issue,
		          RHS.issue_date AS issue_date,
		          RHS.weeks_on_top AS weeks_on_top,
		          RHS.song AS song
		   FROM artist AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM volume
		      WHERE (weeks_on_top > 2.0)) AS RHS ON (LHS.artist_id = RHS.artist_id))
		ORDER BY famous_title

	     famous_title
	0  0chImperivmTrq
	1  lD9ImperivmawO
Wrong output for fuzzied solution in instance spider/music_4/0029 (2200)
	EXPECTED OUTPUT ====

		SELECT Issue_Date
		FROM artist AS T1
		JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID
		WHERE T1.age <= 23

	                issue_date
	0         1 July - 18 July
	1         11 July - 18 Jul
	2        11 July - 18 July
	3        11 July - 18 July
	4        11 July - 18 July
	5        11 July - 18 July
	6        11 July - 18 July
	7   11 July - 18 JulyXNrrU
	8               17 January
	9   MiPOs11 July - 18 July
	10        U0Y17 January3b5
	ACTUAL OUTPUT ====

		
		SELECT issue_date
		FROM
		  (SELECT LHS.artist_id AS artist_id,
		          LHS.artist AS artist,
		          LHS.age AS age,
		          LHS.famous_title AS famous_title,
		          LHS.famous_release_date AS famous_release_date,
		          RHS.volume_id AS volume_id,
		          RHS.volume_issue AS volume_issue,
		          RHS.issue_date AS issue_date,
		          RHS.weeks_on_top AS weeks_on_top,
		          RHS.song AS song
		   FROM artist AS LHS
		   INNER JOIN volume AS RHS ON (LHS.artist_id = RHS.artist_id))
		WHERE (age < 23)
		ORDER BY issue_date

	               issue_date
	0        1 July - 18 July
	1        11 July - 18 Jul
	2       11 July - 18 July
	3       11 July - 18 July
	4       11 July - 18 July
	5  11 July - 18 JulyXNrrU
	6              17 January
	7  MiPOs11 July - 18 July
	8        U0Y17 January3b5
Wrong output for fuzzied solution in instance spider/music_4/0028 (2202)
	EXPECTED OUTPUT ====

		SELECT RESULT,
		       COUNT(*)
		FROM music_festival
		GROUP BY RESULT
		ORDER BY COUNT(*) DESC

	            result  count(*)
	0   HXZ6JNominated         1
	1         Nominate         1
	2   NominatedDp65b         1
	3  uDlNominatedA8v         1
	4     vjOXBAwarded         1
	5          Awarded         2
	6        Nominated         4
	ACTUAL OUTPUT ====

		
		SELECT RESULT,
		       n AS count___
		FROM
		  (SELECT date_of_ceremony,
		          RESULT,
		          COUNT() AS n
		   FROM music_festival
		   GROUP BY date_of_ceremony,
		            RESULT)
		ORDER BY RESULT

	            result  count___
	0          Awarded         1
	1          Awarded         1
	2   HXZ6JNominated         1
	3         Nominate         1
	4        Nominated         1
	5        Nominated         3
	6   NominatedDp65b         1
	7  uDlNominatedA8v         1
	8     vjOXBAwarded         1
Wrong output for base solution in instance spider/hr_1/0056 (2203)
	EXPECTED OUTPUT ====

	         department_name                 city state_province
	0        Human Resources               London            NaN
	1       Public Relations               Munich        Bavaria
	2                  Sales              OX9 9ZB         Oxford
	3             Accounting              Seattle     Washington
	4         Administration              Seattle     Washington
	5               Benefits              Seattle     Washington
	6           Construction              Seattle     Washington
	7            Contracting              Seattle     Washington
	8     Control And Credit              Seattle     Washington
	9          Corporate Tax              Seattle     Washington
	10             Executive              Seattle     Washington
	11               Finance              Seattle     Washington
	12      Government Sales              Seattle     Washington
	13           IT Helpdesk              Seattle     Washington
	14            IT Support              Seattle     Washington
	15         Manufacturing              Seattle     Washington
	16                   NOC              Seattle     Washington
	17            Operations              Seattle     Washington
	18               Payroll              Seattle     Washington
	19            Purchasing              Seattle     Washington
	20            Recruiting              Seattle     Washington
	21          Retail Sales              Seattle     Washington
	22  Shareholder Services              Seattle     Washington
	23              Treasury              Seattle     Washington
	24              Shipping  South San Francisco     California
	25                    IT            Southlake          Texas
	26             Marketing              Toronto        Ontario
	ACTUAL OUTPUT ====

		SELECT T1.department_name,
		       T2.city,
		       T2.state_province
		FROM departments AS T1
		JOIN locations AS T2 ON T2.location_id = T1.location_id

	         department_name                 city state_province
	0        Human Resources               London               
	1       Public Relations               Munich        Bavaria
	2                  Sales              OX9 9ZB         Oxford
	3             Accounting              Seattle     Washington
	4         Administration              Seattle     Washington
	5               Benefits              Seattle     Washington
	6           Construction              Seattle     Washington
	7            Contracting              Seattle     Washington
	8     Control And Credit              Seattle     Washington
	9          Corporate Tax              Seattle     Washington
	10             Executive              Seattle     Washington
	11               Finance              Seattle     Washington
	12      Government Sales              Seattle     Washington
	13           IT Helpdesk              Seattle     Washington
	14            IT Support              Seattle     Washington
	15         Manufacturing              Seattle     Washington
	16                   NOC              Seattle     Washington
	17            Operations              Seattle     Washington
	18               Payroll              Seattle     Washington
	19            Purchasing              Seattle     Washington
	20            Recruiting              Seattle     Washington
	21          Retail Sales              Seattle     Washington
	22  Shareholder Services              Seattle     Washington
	23              Treasury              Seattle     Washington
	24              Shipping  South San Francisco     California
	25                    IT            Southlake          Texas
	26             Marketing              Toronto        Ontario
Wrong output for ground truth in instance spider/hr_1/0056 (2203)
No solution for instance spider/hr_1/0033 (2205)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
No solution for instance spider/hr_1/0057 (2209)
No solution for instance spider/hr_1/0017 (2210)
No solution for instance spider/hr_1/0052 (2211)
No solution for instance spider/hr_1/0008 (2212)
Error while executing solution for instance spider/hr_1/0039 (2213)

The column label 'DEPARTMENT_ID' is not unique.
Error while checking ground truth in instance spider/hr_1/0039 (2213)
Wrong output for fuzzied solution in instance spider/hr_1/0038 (2214)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.department_name
		FROM employees AS T1
		JOIN departments AS T2 ON T1.department_id = T2.department_id

	     department_name
	0           Benefits
	1        Contracting
	2        IT Helpdesk
	3         T Helpdesk
	4           Treasury
	5            enefits
	6         ontracting
	7  sNrIT Helpdesks e
	ACTUAL OUTPUT ====

		
		SELECT department_name
		FROM
		  (SELECT LHS.department_id AS department_id,
		          LHS.department_name AS department_name,
		          LHS.manager_id AS manager_id,
		          LHS.location_id AS location_id,
		          RHS.first_name AS first_name,
		          RHS.last_name AS last_name,
		          RHS.email AS email,
		          RHS.phone_number AS phone_number,
		          RHS.hire_date AS hire_date,
		          RHS.job_id AS job_id,
		          RHS.salary AS salary,
		          RHS.commission_pct AS commission_pct,
		          RHS.manager_id AS manager_id_other
		   FROM departments AS LHS
		   INNER JOIN employees AS RHS ON (LHS.department_id = RHS.department_id
		                                      AND LHS.manager_id = RHS.employee_id))
		ORDER BY department_name

	Empty DataFrame
	Columns: [department_name]
	Index: []
No solution for instance spider/hr_1/0048 (2216)
Wrong output for fuzzied solution in instance spider/hr_1/0022 (2217)
	EXPECTED OUTPUT ====

		SELECT employee_id,
		       MAX(end_date)
		FROM job_history
		GROUP BY employee_id

	    employee_id max(end_date)
	0        104.00    1999-02-19
	1        104.01    1999-06-04
	2        104.02    1999-11-11
	3        141.99    1998-12-08
	4        142.00    1999-11-22
	5        142.01    1998-11-17
	6        162.98    1999-11-27
	7        163.00    1999-03-30
	8        163.01    1999-07-18
	9        163.02    1999-08-08
	10       174.98    1999-01-07
	11       175.00    1999-06-29
	12       175.01    1999-01-31
	13       175.02    1999-10-30
	14       204.98    1998-12-15
	15       205.00    1999-06-21
	16       205.01    1999-12-17
	ACTUAL OUTPUT ====

		
		SELECT employee_id,
		       maxend_date AS max_end_date_
		FROM
		  (SELECT department_id,
		          employee_id,
		          MAX(end_date) AS maxend_date
		   FROM job_history
		   GROUP BY department_id,
		            employee_id)
		ORDER BY employee_id

	     employee_id max_end_date_
	0         104.00    1993-08-09
	1         104.00    1994-07-25
	2         104.00    1994-08-13
	3         104.00    1995-04-13
	4         104.00    1995-04-24
	..           ...           ...
	145       205.01    1994-12-02
	146       205.01    1996-01-08
	147       205.01    1997-10-28
	148       205.01    1998-11-22
	149       205.01    1999-12-17
	
	[150 rows x 2 columns]
No solution for instance spider/hr_1/0053 (2218)
Wrong output for fuzzied solution in instance spider/hr_1/0030 (2219)
	EXPECTED OUTPUT ====

		SELECT T2.department_name,
		       COUNT(*)
		FROM employees AS T1
		JOIN departments AS T2 ON T1.department_id = T2.department_id
		GROUP BY T2.department_name

	     department_name  count(*)
	0           Treasury         1
	1           Benefits         2
	2        IT Helpdesk         2
	3         T Helpdesk         2
	4            enefits         2
	5  sNrIT Helpdesks e         2
	6        Contracting         3
	7         ontracting         3
	ACTUAL OUTPUT ====

		
		SELECT department_name,
		       n AS count___
		FROM
		  (SELECT LHS.department_id AS department_id,
		          LHS.n AS n,
		          RHS.department_name AS department_name,
		          RHS.manager_id AS manager_id,
		          RHS.location_id AS location_id
		   FROM
		     (SELECT department_id,
		             COUNT() AS n
		      FROM employees
		      GROUP BY department_id) AS LHS
		   INNER JOIN departments AS RHS ON (LHS.department_id = RHS.department_id))
		ORDER BY department_name

	      department_name  count___
	0            Benefits         1
	1            Benefits         1
	2         Contracting         1
	3         Contracting         1
	4         Contracting         1
	5            Treasury         1
	6         IT Helpdesk         2
	7          T Helpdesk         2
	8             enefits         2
	9   sNrIT Helpdesks e         2
	10         ontracting         3
No solution for instance spider/hr_1/0006 (2220)
No solution for instance spider/hr_1/0012 (2221)
Error while executing solution for instance spider/hr_1/0016 (2225)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `employee_id`,
       `first_name`,
       `last_name`,
       `email`,
       `phone_number`,
       `hire_date`,
       `job_id`,
       `salary`,
       `commission_pct`,
       `manager_id`,
       `department_id`
FROM `employees`
WHERE (`hire_date` < parse_datetime('2002-06-21'))
ORDER BY employee_id]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/hr_1/0050 (2226)
No solution for instance spider/hr_1/0059 (2227)
Wrong output for fuzzied solution in instance spider/hr_1/0032 (2228)
	EXPECTED OUTPUT ====

		SELECT job_title,
		       AVG(salary)
		FROM employees AS T1
		JOIN jobs AS T2 ON T1.job_id = T2.job_id
		GROUP BY T2.job_title

	                  job_title  avg(salary)
	0    Marketing ManagerjOXBu     2500.010
	1         Marketing Manager     2680.004
	2     h1MFinance ManagerYfd     2799.980
	3             Stock Manager     3574.990
	4           Finance Manager     4499.990
	5            Finance Manage     6799.990
	6                 President     6800.000
	7   WiOwsPurchasing Manager     6800.000
	8  gvCPurchasing Manager3L1     7000.010
	ACTUAL OUTPUT ====

		
		SELECT job_title,
		       meansalary AS avg_salary_
		FROM
		  (SELECT LHS.job_id AS job_id,
		          LHS.meansalary AS meansalary,
		          RHS.job_title AS job_title,
		          RHS.min_salary AS min_salary,
		          RHS.max_salary AS max_salary
		   FROM
		     (SELECT job_id,
		             AVG(salary) AS meansalary
		      FROM employees
		      GROUP BY job_id) AS LHS
		   INNER JOIN jobs AS RHS ON (LHS.job_id = RHS.job_id))
		ORDER BY job_title

	                   job_title  avg_salary_
	0            Finance Manager     2199.990
	1              Stock Manager     2499.980
	2          Marketing Manager     2500.005
	3     Marketing ManagerjOXBu     2500.010
	4              Stock Manager     2799.980
	5      h1MFinance ManagerYfd     2799.980
	6          Marketing Manager     2799.995
	7          Marketing Manager     2800.020
	8              Stock Manager     4500.000
	9             Finance Manage     6799.990
	10           Finance Manager     6799.990
	11                 President     6800.000
	12   WiOwsPurchasing Manager     6800.000
	13  gvCPurchasing Manager3L1     7000.010
No solution for instance spider/hr_1/0045 (2229)
Error while executing solution for instance spider/hr_1/0018 (2230)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `employee_id`,
       `first_name`,
       `last_name`,
       `email`,
       `phone_number`,
       `hire_date`,
       `job_id`,
       `salary`,
       `commission_pct`,
       `manager_id`,
       `department_id`
FROM `employees`
WHERE (`hire_date` > parse_datetime('1987-09-07'))
ORDER BY employee_id]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/hr_1/0051 (2232)
No solution for instance spider/hr_1/0035 (2233)
No solution for instance spider/hr_1/0020 (2234)
No solution for instance spider/hr_1/0007 (2236)
No solution for instance spider/hr_1/0043 (2241)
No solution for instance spider/hr_1/0046 (2242)
Wrong output for base solution in instance spider/hr_1/0054 (2243)
	EXPECTED OUTPUT ====

	    first_name  last_name   department_name       city state_province
	0        Susan     Mavris   Human Resources     London            NaN
	1      Hermann       Baer  Public Relations     Munich        Bavaria
	2      Alberto  Errazuriz             Sales    OX9 9ZB         Oxford
	3        Allan     McEwen             Sales    OX9 9ZB         Oxford
	4       Alyssa     Hutton             Sales    OX9 9ZB         Oxford
	..         ...        ...               ...        ...            ...
	101      David     Austin                IT  Southlake          Texas
	102      Diana    Lorentz                IT  Southlake          Texas
	103      Valli  Pataballa                IT  Southlake          Texas
	104    Michael  Hartstein         Marketing    Toronto        Ontario
	105        Pat        Fay         Marketing    Toronto        Ontario
	
	[106 rows x 5 columns]
	ACTUAL OUTPUT ====

		SELECT T1.first_name,
		       T1.last_name,
		       T2.department_name,
		       T3.city,
		       T3.state_province
		FROM employees AS T1
		JOIN departments AS T2 ON T1.department_id = T2.department_id
		JOIN locations AS T3 ON T2.location_id = T3.location_id

	    first_name  last_name   department_name       city state_province
	0        Susan     Mavris   Human Resources     London               
	1      Hermann       Baer  Public Relations     Munich        Bavaria
	2      Alberto  Errazuriz             Sales    OX9 9ZB         Oxford
	3        Allan     McEwen             Sales    OX9 9ZB         Oxford
	4       Alyssa     Hutton             Sales    OX9 9ZB         Oxford
	..         ...        ...               ...        ...            ...
	101      David     Austin                IT  Southlake          Texas
	102      Diana    Lorentz                IT  Southlake          Texas
	103      Valli  Pataballa                IT  Southlake          Texas
	104    Michael  Hartstein         Marketing    Toronto        Ontario
	105        Pat        Fay         Marketing    Toronto        Ontario
	
	[106 rows x 5 columns]
Wrong output for ground truth in instance spider/hr_1/0054 (2243)
No solution for instance spider/hr_1/0047 (2244)
Wrong output for base solution in instance spider/hr_1/0025 (2247)
	EXPECTED OUTPUT ====

	    department_id   avg_salary_
	0            50.0   3475.555556
	1            30.0   4150.000000
	2            10.0   4400.000000
	3            60.0   5760.000000
	4            40.0   6500.000000
	5             0.0   7000.000000
	6           100.0   8600.000000
	7            80.0   8955.882353
	8            20.0   9500.000000
	9            70.0  10000.000000
	10          110.0  10150.000000
	11           90.0  19333.333333
	ACTUAL OUTPUT ====

		SELECT department_id,
		       AVG(salary)
		FROM employees
		WHERE commission_pct != "null"
		GROUP BY department_id

	    department_id   avg(salary)
	0              50   3475.555556
	1              30   4150.000000
	2              10   4400.000000
	3              60   5760.000000
	4              40   6500.000000
	5               0   7000.000000
	6             100   8600.000000
	7              80   8955.882353
	8              20   9500.000000
	9              70  10000.000000
	10            110  10150.000000
	11             90  19333.333333
Wrong output for ground truth in instance spider/hr_1/0025 (2247)
No solution for instance spider/hr_1/0010 (2249)
No solution for instance spider/hr_1/0044 (2250)
Wrong output for fuzzied solution in instance spider/hr_1/0040 (2251)
	EXPECTED OUTPUT ====

		SELECT job_id
		FROM employees
		GROUP BY job_id
		HAVING AVG(salary) > 8000

	Empty DataFrame
	Columns: [job_id]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT job_id
		FROM
		  (SELECT commission_pct,
		          job_id,
		          AVG(salary) AS meansalary
		   FROM employees
		   GROUP BY commission_pct,
		            job_id)
		WHERE (meansalary > 8000.0)
		ORDER BY job_id

	        job_id
	0  AC_MGRZKm4K
No solution for instance spider/hr_1/0049 (2253)
Error while executing solution for instance spider/hr_1/0031 (2254)

The column label 'DEPARTMENT_ID' is not unique.
Error while checking ground truth in instance spider/hr_1/0031 (2254)
No solution for instance spider/hr_1/0055 (2255)
Wrong output for fuzzied solution in instance spider/hr_1/0058 (2256)
	EXPECTED OUTPUT ====

		SELECT department_name,
		       COUNT(*)
		FROM employees AS T1
		JOIN departments AS T2 ON T1.department_id = T2.department_id
		GROUP BY department_name

	     department_name  count(*)
	0           Treasury         1
	1           Benefits         2
	2        IT Helpdesk         2
	3         T Helpdesk         2
	4            enefits         2
	5  sNrIT Helpdesks e         2
	6        Contracting         3
	7         ontracting         3
	ACTUAL OUTPUT ====

		
		SELECT department_name,
		       n AS count___
		FROM
		  (SELECT LHS.department_id AS department_id,
		          LHS.n AS n,
		          RHS.department_name AS department_name,
		          RHS.manager_id AS manager_id,
		          RHS.location_id AS location_id
		   FROM
		     (SELECT department_id,
		             COUNT() AS n
		      FROM employees
		      GROUP BY department_id) AS LHS
		   INNER JOIN departments AS RHS ON (LHS.department_id = RHS.department_id))
		ORDER BY department_name

	      department_name  count___
	0            Benefits         1
	1            Benefits         1
	2         Contracting         1
	3         Contracting         1
	4         Contracting         1
	5            Treasury         1
	6         IT Helpdesk         2
	7          T Helpdesk         2
	8             enefits         2
	9   sNrIT Helpdesks e         2
	10         ontracting         3
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0042 (2257)
	EXPECTED OUTPUT ====

		SELECT t3.characteristic_name
		FROM products AS t1
		JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id
		JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id
		GROUP BY t3.characteristic_name
		HAVING count(*) >= 2

	  characteristic_name
	0          E0islowEGM
	1           U2yuaslow
	2                cool
	3                 hot
	4            hothOurg
	5                 ool
	6                slow
	7                warm
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT characteristic_name
		FROM
		  (SELECT LHS.characteristic_id AS characteristic_id,
		          LHS.characteristic_type_code AS characteristic_type_code,
		          LHS.characteristic_data_type AS characteristic_data_type,
		          LHS.characteristic_name AS characteristic_name,
		          LHS.other_characteristic_details AS other_characteristic_details,
		          LHS.product_id AS product_id,
		          LHS.color_code AS color_code,
		          LHS.product_category_code AS product_category_code,
		          LHS.product_name AS product_name,
		          LHS.typical_buying_price AS typical_buying_price,
		          LHS.typical_selling_price AS typical_selling_price,
		          LHS.product_description AS product_description,
		          LHS.other_product_details AS other_product_details,
		          LHS.product_characteristic_value AS product_characteristic_value,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.characteristic_id AS characteristic_id,
		             LHS.characteristic_type_code AS characteristic_type_code,
		             LHS.characteristic_data_type AS characteristic_data_type,
		             LHS.characteristic_name AS characteristic_name,
		             LHS.other_characteristic_details AS other_characteristic_details,
		             LHS.product_id AS product_id,
		             LHS.color_code AS color_code,
		             LHS.product_category_code AS product_category_code,
		             LHS.product_name AS product_name,
		             LHS.typical_buying_price AS typical_buying_price,
		             LHS.typical_selling_price AS typical_selling_price,
		             LHS.product_description AS product_description,
		             LHS.other_product_details AS other_product_details,
		             RHS.product_characteristic_value AS product_characteristic_value
		      FROM
		        (SELECT LHS.characteristic_id AS characteristic_id,
		                LHS.characteristic_type_code AS characteristic_type_code,
		                LHS.characteristic_data_type AS characteristic_data_type,
		                LHS.characteristic_name AS characteristic_name,
		                LHS.other_characteristic_details AS other_characteristic_details,
		                RHS.product_id AS product_id,
		                RHS.color_code AS color_code,
		                RHS.product_category_code AS product_category_code,
		                RHS.product_name AS product_name,
		                RHS.typical_buying_price AS typical_buying_price,
		                RHS.typical_selling_price AS typical_selling_price,
		                RHS.product_description AS product_description,
		                RHS.other_product_details AS other_product_details
		         FROM characteristics AS LHS
		         CROSS JOIN products AS RHS) AS LHS
		      INNER JOIN product_characteristics AS RHS ON (LHS.characteristic_id = RHS.characteristic_id
		                                                       AND LHS.product_id = RHS.product_id)) AS LHS
		   INNER JOIN
		     (SELECT characteristic_name,
		             characteristic_type_code,
		             COUNT() AS n
		      FROM characteristics
		      GROUP BY characteristic_name,
		               characteristic_type_code) AS RHS ON (LHS.characteristic_type_code = RHS.characteristic_type_code
		                                                    AND LHS.characteristic_name = RHS.characteristic_name))
		WHERE (n >= 2)
		ORDER BY characteristic_name

	Empty DataFrame
	Columns: [characteristic_name]
	Index: []
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0033 (2258)
	EXPECTED OUTPUT ====

		SELECT product_category_description
		FROM ref_product_categories
		WHERE product_category_code = "Spices"

	  product_category_description
	0                         eeds
	ACTUAL OUTPUT ====

		
		SELECT `product_category_code` AS `product_category_description`
		FROM `ref_product_categories`
		WHERE (`product_category_code` = 'Spices')
		ORDER BY product_category_description

	  product_category_description
	0                       Spices
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0037 (2259)
	EXPECTED OUTPUT ====

		SELECT t1.product_name
		FROM products AS t1
		JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code
		JOIN ref_colors AS t3 ON t1.color_code = t3.color_code
		WHERE t3.color_description = "white"
		  AND t2.unit_of_measure != "Handful"

	  product_name
	0        atnip
	1        cinna
	2        peper
	ACTUAL OUTPUT ====

		
		SELECT `product_name`
		FROM
		  (SELECT `LHS`.`color_code` AS `color_code`,
		          `LHS`.`color_description` AS `color_description`,
		          `LHS`.`product_category_code` AS `product_category_code`,
		          `LHS`.`product_category_description` AS `product_category_description`,
		          `LHS`.`unit_of_measure` AS `unit_of_measure`,
		          `RHS`.`product_id` AS `product_id`,
		          `RHS`.`product_name` AS `product_name`,
		          `RHS`.`typical_buying_price` AS `typical_buying_price`,
		          `RHS`.`typical_selling_price` AS `typical_selling_price`,
		          `RHS`.`product_description` AS `product_description`,
		          `RHS`.`other_product_details` AS `other_product_details`
		   FROM
		     (SELECT `LHS`.`color_code` AS `color_code`,
		             `LHS`.`color_description` AS `color_description`,
		             `RHS`.`product_category_code` AS `product_category_code`,
		             `RHS`.`product_category_description` AS `product_category_description`,
		             `RHS`.`unit_of_measure` AS `unit_of_measure`
		      FROM `ref_colors` AS `LHS`
		      CROSS JOIN `ref_product_categories` AS `RHS`) AS `LHS`
		   INNER JOIN `products` AS `RHS` ON (`LHS`.`color_code` = `RHS`.`color_code`
		                                         AND `LHS`.`product_category_code` = `RHS`.`product_category_code`))
		WHERE (`color_description` = 'white')
		ORDER BY product_name

	  product_name
	0  1FCOYcinnam
	1        atnip
	2        cinna
	3        peper
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0036 (2261)
	EXPECTED OUTPUT ====

		SELECT t2.unit_of_measure,
		       t2.product_category_code
		FROM products AS t1
		JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code
		WHERE t1.product_name = "chervil"

	        unit_of_measure product_category_code
	0  Weight - pound,kilo.            HerbsXhHOq
	1  Weight - pound,kilo.            HerbsXhHOq
	ACTUAL OUTPUT ====

		
		SELECT `unit_of_measure`,
		       `product_category_code`
		FROM
		  (SELECT `product_id`,
		          `color_code`,
		          `product_category_code`,
		          `product_name`,
		          `typical_buying_price`,
		          `typical_selling_price`,
		          `product_description`,
		          `other_product_details`,
		          `product_category_code_other`,
		          `unit_of_measure`,
		          `product_category_code` AS `product_category_description`
		   FROM
		     (SELECT `LHS`.`product_id` AS `product_id`,
		             `LHS`.`color_code` AS `color_code`,
		             `LHS`.`product_category_code` AS `product_category_code`,
		             `LHS`.`product_name` AS `product_name`,
		             `LHS`.`typical_buying_price` AS `typical_buying_price`,
		             `LHS`.`typical_selling_price` AS `typical_selling_price`,
		             `LHS`.`product_description` AS `product_description`,
		             `LHS`.`other_product_details` AS `other_product_details`,
		             `RHS`.`product_category_code` AS `product_category_code_other`,
		             `RHS`.`unit_of_measure` AS `unit_of_measure`
		      FROM `products` AS `LHS`
		      INNER JOIN `ref_product_categories` AS `RHS` ON (`LHS`.`product_category_code` = `RHS`.`product_category_description`)))
		WHERE (`product_name` = 'chervil')
		ORDER BY unit_of_measure

	Empty DataFrame
	Columns: [unit_of_measure, product_category_code]
	Index: []
No solution for instance spider/products_gen_characteristics/0039 (2264)
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0038 (2265)
	EXPECTED OUTPUT ====

		SELECT t2.color_description
		FROM products AS t1
		JOIN ref_colors AS t2 ON t1.color_code = t2.color_code
		GROUP BY t2.color_description
		ORDER BY count(*) DESC
		LIMIT 1

	  color_description
	0            purple
	ACTUAL OUTPUT ====

		
		SELECT color_description
		FROM
		  (SELECT LHS.product_id AS product_id,
		          LHS.color_code AS color_code,
		          LHS.product_category_code AS product_category_code,
		          LHS.product_name AS product_name,
		          LHS.typical_buying_price AS typical_buying_price,
		          LHS.typical_selling_price AS typical_selling_price,
		          LHS.product_description AS product_description,
		          LHS.other_product_details AS other_product_details,
		          RHS.color_description AS color_description
		   FROM products AS LHS
		   INNER JOIN
		     (SELECT color_code,
		             color_description,
		             COUNT() AS n
		      FROM ref_colors
		      GROUP BY color_code,
		               color_description) AS RHS ON (LHS.product_id = RHS.n
		                                             AND LHS.color_code = RHS.color_code))
		ORDER BY color_description

	Empty DataFrame
	Columns: [color_description]
	Index: []
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0030 (2269)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM products AS t1
		JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id
		JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id
		JOIN ref_colors AS t4 ON t1.color_code = t4.color_code
		WHERE t4.color_description = "red"
		  AND t3.characteristic_name = "slow"

	   count(*)
	0        14
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `color_description`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`color_code` AS `color_code`,
		                `LHS`.`color_description` AS `color_description`,
		                `LHS`.`characteristic_id` AS `characteristic_id`,
		                `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		                `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		                `LHS`.`characteristic_name` AS `characteristic_name`,
		                `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		                `LHS`.`product_id` AS `product_id`,
		                `LHS`.`product_category_code` AS `product_category_code`,
		                `LHS`.`product_name` AS `product_name`,
		                `LHS`.`typical_buying_price` AS `typical_buying_price`,
		                `LHS`.`typical_selling_price` AS `typical_selling_price`,
		                `LHS`.`product_description` AS `product_description`,
		                `LHS`.`other_product_details` AS `other_product_details`,
		                `RHS`.`product_characteristic_value` AS `product_characteristic_value`
		         FROM
		           (SELECT `LHS`.`color_code` AS `color_code`,
		                   `LHS`.`color_description` AS `color_description`,
		                   `LHS`.`characteristic_id` AS `characteristic_id`,
		                   `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		                   `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		                   `LHS`.`characteristic_name` AS `characteristic_name`,
		                   `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		                   `RHS`.`product_id` AS `product_id`,
		                   `RHS`.`product_category_code` AS `product_category_code`,
		                   `RHS`.`product_name` AS `product_name`,
		                   `RHS`.`typical_buying_price` AS `typical_buying_price`,
		                   `RHS`.`typical_selling_price` AS `typical_selling_price`,
		                   `RHS`.`product_description` AS `product_description`,
		                   `RHS`.`other_product_details` AS `other_product_details`
		            FROM
		              (SELECT `LHS`.`color_code` AS `color_code`,
		                      `LHS`.`color_description` AS `color_description`,
		                      `RHS`.`characteristic_id` AS `characteristic_id`,
		                      `RHS`.`characteristic_type_code` AS `characteristic_type_code`,
		                      `RHS`.`characteristic_data_type` AS `characteristic_data_type`,
		                      `RHS`.`characteristic_name` AS `characteristic_name`,
		                      `RHS`.`other_characteristic_details` AS `other_characteristic_details`
		               FROM `ref_colors` AS `LHS`
		               CROSS JOIN `characteristics` AS `RHS`) AS `LHS`
		            INNER JOIN `products` AS `RHS` ON (`LHS`.`color_code` = `RHS`.`color_code`)) AS `LHS`
		         INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`
		                                                              AND `LHS`.`product_id` = `RHS`.`product_id`))
		      WHERE (`color_description` = 'red'
		             AND `characteristic_name` = 'slow')))
		ORDER BY count___

	   count___
	0         1
Wrong output for base solution in instance spider/products_gen_characteristics/0004 (2272)
	EXPECTED OUTPUT ====

	   product_name typical_buying_price
	0         basil          503.8431967
	1        borage                  NaN
	2       caraway                24493
	3        catnip         12008702.623
	4       chervil                  NaN
	5         chili                  NaN
	6        cinnam            1686539.4
	7         cumin                  NaN
	8          flax          339404395.7
	9        ginger                5.578
	10       laurel                  NaN
	11        lotus      43221310.465574
	12        peper       352447.2874677
	13       sesame         1284268.0659
	14   voluptatem                  162
	ACTUAL OUTPUT ====

		SELECT product_name,
		       typical_buying_price
		FROM products

	   product_name typical_buying_price
	0         basil          503.8431967
	1        borage                     
	2       caraway                24493
	3        catnip         12008702.623
	4       chervil                     
	5         chili                     
	6        cinnam            1686539.4
	7         cumin                     
	8          flax          339404395.7
	9        ginger                5.578
	10       laurel                     
	11        lotus      43221310.465574
	12        peper       352447.2874677
	13       sesame         1284268.0659
	14   voluptatem                  162
Wrong output for ground truth in instance spider/products_gen_characteristics/0004 (2272)
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0026 (2274)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM products AS t1
		JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id
		JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id
		WHERE t1.product_name = "flax"

	   count(*)
	0        79
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `product_name`) AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,
		             `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		             `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		             `LHS`.`characteristic_name` AS `characteristic_name`,
		             `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		             `LHS`.`product_id` AS `product_id`,
		             `LHS`.`color_code` AS `color_code`,
		             `LHS`.`product_category_code` AS `product_category_code`,
		             `LHS`.`product_name` AS `product_name`,
		             `LHS`.`typical_buying_price` AS `typical_buying_price`,
		             `LHS`.`typical_selling_price` AS `typical_selling_price`,
		             `LHS`.`product_description` AS `product_description`,
		             `LHS`.`other_product_details` AS `other_product_details`,
		             `LHS`.`product_characteristic_value` AS `product_characteristic_value`
		      FROM
		        (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,
		                `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		                `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		                `LHS`.`characteristic_name` AS `characteristic_name`,
		                `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		                `LHS`.`product_id` AS `product_id`,
		                `LHS`.`color_code` AS `color_code`,
		                `LHS`.`product_category_code` AS `product_category_code`,
		                `LHS`.`product_name` AS `product_name`,
		                `LHS`.`typical_buying_price` AS `typical_buying_price`,
		                `LHS`.`typical_selling_price` AS `typical_selling_price`,
		                `LHS`.`product_description` AS `product_description`,
		                `LHS`.`other_product_details` AS `other_product_details`,
		                `RHS`.`product_characteristic_value` AS `product_characteristic_value`
		         FROM
		           (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,
		                   `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		                   `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		                   `LHS`.`characteristic_name` AS `characteristic_name`,
		                   `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		                   `RHS`.`product_id` AS `product_id`,
		                   `RHS`.`color_code` AS `color_code`,
		                   `RHS`.`product_category_code` AS `product_category_code`,
		                   `RHS`.`product_name` AS `product_name`,
		                   `RHS`.`typical_buying_price` AS `typical_buying_price`,
		                   `RHS`.`typical_selling_price` AS `typical_selling_price`,
		                   `RHS`.`product_description` AS `product_description`,
		                   `RHS`.`other_product_details` AS `other_product_details`
		            FROM `characteristics` AS `LHS`
		            CROSS JOIN `products` AS `RHS`) AS `LHS`
		         INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`
		                                                              AND `LHS`.`product_id` = `RHS`.`product_id`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `products`
		         WHERE (`product_name` != 'flax')) AS RHS ON (LHS.product_id = RHS.product_id
		                                                      AND LHS.color_code = RHS.color_code
		                                                      AND LHS.product_category_code = RHS.product_category_code
		                                                      AND LHS.product_name = RHS.product_name
		                                                      AND LHS.typical_buying_price = RHS.typical_buying_price
		                                                      AND LHS.typical_selling_price = RHS.typical_selling_price
		                                                      AND LHS.product_description = RHS.product_description
		                                                      AND LHS.other_product_details = RHS.other_product_details)))
		ORDER BY count___

	   count___
	0         7
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0035 (2281)
	EXPECTED OUTPUT ====

		SELECT t2.unit_of_measure
		FROM products AS t1
		JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code
		WHERE t1.product_name = "cumin"

	        unit_of_measure
	0  Weight - pound,kilo.
	1  Weight - pound,kilo.
	ACTUAL OUTPUT ====

		
		SELECT `unit_of_measure`
		FROM
		  (SELECT `product_id`,
		          `color_code`,
		          `product_category_code`,
		          `product_name`,
		          `typical_buying_price`,
		          `typical_selling_price`,
		          `product_description`,
		          `other_product_details`,
		          `product_category_code_other`,
		          `unit_of_measure`,
		          `product_category_code` AS `product_category_description`
		   FROM
		     (SELECT `LHS`.`product_id` AS `product_id`,
		             `LHS`.`color_code` AS `color_code`,
		             `LHS`.`product_category_code` AS `product_category_code`,
		             `LHS`.`product_name` AS `product_name`,
		             `LHS`.`typical_buying_price` AS `typical_buying_price`,
		             `LHS`.`typical_selling_price` AS `typical_selling_price`,
		             `LHS`.`product_description` AS `product_description`,
		             `LHS`.`other_product_details` AS `other_product_details`,
		             `RHS`.`product_category_code` AS `product_category_code_other`,
		             `RHS`.`unit_of_measure` AS `unit_of_measure`
		      FROM `products` AS `LHS`
		      INNER JOIN `ref_product_categories` AS `RHS` ON (`LHS`.`product_category_code` = `RHS`.`product_category_description`)))
		WHERE (`product_name` = 'cumin')
		ORDER BY unit_of_measure

	Empty DataFrame
	Columns: [unit_of_measure]
	Index: []
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0020 (2282)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM products AS t1
		JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id
		WHERE t1.product_name = "sesame"

	   count(*)
	0       131
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`product_id` AS `product_id`,
		          `LHS`.`n` AS `n`,
		          `RHS`.`color_code` AS `color_code`,
		          `RHS`.`product_category_code` AS `product_category_code`,
		          `RHS`.`product_name` AS `product_name`,
		          `RHS`.`typical_buying_price` AS `typical_buying_price`,
		          `RHS`.`typical_selling_price` AS `typical_selling_price`,
		          `RHS`.`product_description` AS `product_description`,
		          `RHS`.`other_product_details` AS `other_product_details`
		   FROM
		     (SELECT `product_id`,
		             COUNT() AS `n`
		      FROM `product_characteristics`
		      GROUP BY `product_id`) AS `LHS`
		   INNER JOIN `products` AS `RHS` ON (`LHS`.`product_id` = `RHS`.`product_id`))
		WHERE (`product_name` = 'sesame')
		ORDER BY count___

	   count___
	0        36
	1        43
	2        52
Wrong output for base solution in instance spider/products_gen_characteristics/0019 (2283)
	EXPECTED OUTPUT ====

	  product_name typical_buying_price typical_selling_price
	0       borage                  NaN       10377614.847385
	ACTUAL OUTPUT ====

		SELECT t1.product_name,
		       t1.typical_buying_price,
		       t1.typical_selling_price
		FROM products AS t1
		JOIN ref_colors AS t2 ON t1.color_code = t2.color_code
		WHERE t2.color_description = "yellow"

	  product_name typical_buying_price typical_selling_price
	0       borage                            10377614.847385
Wrong output for ground truth in instance spider/products_gen_characteristics/0019 (2283)
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0034 (2285)
	EXPECTED OUTPUT ====

		SELECT product_category_description,
		       unit_of_measure
		FROM ref_product_categories
		WHERE product_category_code = "Herbs"

	  product_category_description       unit_of_measure
	0                        Seeds  Handful             
	ACTUAL OUTPUT ====

		
		SELECT `product_category_code` AS `product_category_description`,
		       `unit_of_measure`
		FROM `ref_product_categories`
		WHERE (`product_category_code` = 'Herbs')
		ORDER BY product_category_description

	  product_category_description       unit_of_measure
	0                        Herbs  Handful             
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0021 (2287)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT t3.characteristic_name)
		FROM products AS t1
		JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id
		JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id
		WHERE t1.product_name = "sesame"

	   count(distinct t3.characteristic_name)
	0                                       8
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count_distinct_t3_characteristic_name_`
		FROM
		  (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,
		          `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		          `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		          `LHS`.`characteristic_name` AS `characteristic_name`,
		          `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		          `LHS`.`product_id` AS `product_id`,
		          `LHS`.`color_code` AS `color_code`,
		          `LHS`.`product_category_code` AS `product_category_code`,
		          `LHS`.`product_name` AS `product_name`,
		          `LHS`.`typical_buying_price` AS `typical_buying_price`,
		          `LHS`.`typical_selling_price` AS `typical_selling_price`,
		          `LHS`.`product_description` AS `product_description`,
		          `LHS`.`other_product_details` AS `other_product_details`,
		          `LHS`.`product_characteristic_value` AS `product_characteristic_value`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,
		             `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		             `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		             `LHS`.`characteristic_name` AS `characteristic_name`,
		             `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		             `LHS`.`product_id` AS `product_id`,
		             `LHS`.`color_code` AS `color_code`,
		             `LHS`.`product_category_code` AS `product_category_code`,
		             `LHS`.`product_name` AS `product_name`,
		             `LHS`.`typical_buying_price` AS `typical_buying_price`,
		             `LHS`.`typical_selling_price` AS `typical_selling_price`,
		             `LHS`.`product_description` AS `product_description`,
		             `LHS`.`other_product_details` AS `other_product_details`,
		             `RHS`.`product_characteristic_value` AS `product_characteristic_value`
		      FROM
		        (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,
		                `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		                `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		                `LHS`.`characteristic_name` AS `characteristic_name`,
		                `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		                `RHS`.`product_id` AS `product_id`,
		                `RHS`.`color_code` AS `color_code`,
		                `RHS`.`product_category_code` AS `product_category_code`,
		                `RHS`.`product_name` AS `product_name`,
		                `RHS`.`typical_buying_price` AS `typical_buying_price`,
		                `RHS`.`typical_selling_price` AS `typical_selling_price`,
		                `RHS`.`product_description` AS `product_description`,
		                `RHS`.`other_product_details` AS `other_product_details`
		         FROM `characteristics` AS `LHS`
		         CROSS JOIN `products` AS `RHS`) AS `LHS`
		      INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`
		                                                           AND `LHS`.`product_id` = `RHS`.`product_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT `product_category_code`,
		             `product_description`,
		             COUNT() AS `n`
		      FROM `products`
		      GROUP BY `product_category_code`,
		               `product_description`) AS `RHS` ON (`LHS`.`product_category_code` = `RHS`.`product_category_code`
		                                                   AND `LHS`.`product_description` = `RHS`.`product_description`))
		WHERE (`product_name` = 'sesame')
		ORDER BY count_distinct_t3_characteristic_name_

	   count_distinct_t3_characteristic_name_
	0                                       1
No solution for instance spider/products_gen_characteristics/0014 (2291)
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0009 (2292)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM products
		WHERE product_category_code = "Seeds"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `products`
		WHERE (`product_category_code` = 'Seeds')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0025 (2293)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM products AS t1
		JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id
		JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id
		WHERE t1.product_name = "laurel"

	   count(*)
	0        79
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `product_name`) AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,
		             `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		             `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		             `LHS`.`characteristic_name` AS `characteristic_name`,
		             `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		             `LHS`.`product_id` AS `product_id`,
		             `LHS`.`color_code` AS `color_code`,
		             `LHS`.`product_category_code` AS `product_category_code`,
		             `LHS`.`product_name` AS `product_name`,
		             `LHS`.`typical_buying_price` AS `typical_buying_price`,
		             `LHS`.`typical_selling_price` AS `typical_selling_price`,
		             `LHS`.`product_description` AS `product_description`,
		             `LHS`.`other_product_details` AS `other_product_details`,
		             `LHS`.`product_characteristic_value` AS `product_characteristic_value`
		      FROM
		        (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,
		                `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		                `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		                `LHS`.`characteristic_name` AS `characteristic_name`,
		                `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		                `LHS`.`product_id` AS `product_id`,
		                `LHS`.`color_code` AS `color_code`,
		                `LHS`.`product_category_code` AS `product_category_code`,
		                `LHS`.`product_name` AS `product_name`,
		                `LHS`.`typical_buying_price` AS `typical_buying_price`,
		                `LHS`.`typical_selling_price` AS `typical_selling_price`,
		                `LHS`.`product_description` AS `product_description`,
		                `LHS`.`other_product_details` AS `other_product_details`,
		                `RHS`.`product_characteristic_value` AS `product_characteristic_value`
		         FROM
		           (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,
		                   `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		                   `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		                   `LHS`.`characteristic_name` AS `characteristic_name`,
		                   `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		                   `RHS`.`product_id` AS `product_id`,
		                   `RHS`.`color_code` AS `color_code`,
		                   `RHS`.`product_category_code` AS `product_category_code`,
		                   `RHS`.`product_name` AS `product_name`,
		                   `RHS`.`typical_buying_price` AS `typical_buying_price`,
		                   `RHS`.`typical_selling_price` AS `typical_selling_price`,
		                   `RHS`.`product_description` AS `product_description`,
		                   `RHS`.`other_product_details` AS `other_product_details`
		            FROM `characteristics` AS `LHS`
		            CROSS JOIN `products` AS `RHS`) AS `LHS`
		         INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`
		                                                              AND `LHS`.`product_id` = `RHS`.`product_id`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `products`
		         WHERE (`product_name` != 'laurel')) AS RHS ON (LHS.product_id = RHS.product_id
		                                                        AND LHS.color_code = RHS.color_code
		                                                        AND LHS.product_category_code = RHS.product_category_code
		                                                        AND LHS.product_name = RHS.product_name
		                                                        AND LHS.typical_buying_price = RHS.typical_buying_price
		                                                        AND LHS.typical_selling_price = RHS.typical_selling_price
		                                                        AND LHS.product_description = RHS.product_description
		                                                        AND LHS.other_product_details = RHS.other_product_details)))
		ORDER BY count___

	   count___
	0         7
Wrong output for base solution in instance spider/products_gen_characteristics/0011 (2294)
	EXPECTED OUTPUT ====

	  product_category_code typical_buying_price
	0                Spices                  NaN
	ACTUAL OUTPUT ====

		SELECT product_category_code,
		       typical_buying_price
		FROM products
		WHERE product_name = "cumin"

	  product_category_code typical_buying_price
	0                Spices                     
Wrong output for ground truth in instance spider/products_gen_characteristics/0011 (2294)
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0010 (2296)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM products
		WHERE product_category_code = "Spices"
		  AND typical_buying_price > 1000

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT *
		   FROM
		     (SELECT `LHS`.`product_category_code` AS `product_category_code`,
		             `LHS`.`typical_selling_price` AS `typical_selling_price`,
		             `LHS`.`n` AS `n`,
		             `RHS`.`product_category_code` AS `product_category_code_other`,
		             `RHS`.`typical_selling_price` AS `typical_selling_price_other`,
		             `RHS`.`n` AS `n_other`
		      FROM
		        (SELECT `product_category_code`,
		                `typical_selling_price`,
		                COUNT() AS `n`
		         FROM `products`
		         GROUP BY `product_category_code`,
		                  `typical_selling_price`) AS `LHS`
		      CROSS JOIN
		        (SELECT `product_category_code`,
		                `typical_selling_price`,
		                COUNT() AS `n`
		         FROM `products`
		         GROUP BY `product_category_code`,
		                  `typical_selling_price`) AS `RHS`)
		   WHERE (`n` > `n_other`
		          AND `product_category_code` != `product_category_code_other`))
		WHERE (`product_category_code` != 'Spices'
		       AND n <= 1000)
		ORDER BY count___

	   count___
	0         2
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0040 (2297)
	EXPECTED OUTPUT ====

		SELECT t3.characteristic_name
		FROM products AS t1
		JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id
		JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id
		GROUP BY t3.characteristic_name
		ORDER BY count(*) DESC
		LIMIT 1

	  characteristic_name
	0                 hot
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT characteristic_name
		FROM
		  (SELECT LHS.product_id AS product_id,
		          LHS.characteristic_id AS characteristic_id,
		          LHS.product_characteristic_value AS product_characteristic_value,
		          LHS.product_category_code AS product_category_code,
		          LHS.product_description AS product_description,
		          LHS.n AS n,
		          RHS.characteristic_type_code AS characteristic_type_code,
		          RHS.characteristic_data_type AS characteristic_data_type,
		          RHS.characteristic_name AS characteristic_name,
		          RHS.other_characteristic_details AS other_characteristic_details
		   FROM
		     (SELECT LHS.product_id AS product_id,
		             LHS.characteristic_id AS characteristic_id,
		             LHS.product_characteristic_value AS product_characteristic_value,
		             RHS.product_category_code AS product_category_code,
		             RHS.product_description AS product_description,
		             RHS.n AS n
		      FROM product_characteristics AS LHS
		      CROSS JOIN
		        (SELECT product_category_code,
		                product_description,
		                COUNT() AS n
		         FROM products
		         GROUP BY product_category_code,
		                  product_description) AS RHS) AS LHS
		   INNER JOIN
		     (SELECT characteristic_id,
		             characteristic_type_code,
		             characteristic_data_type,
		             characteristic_name,
		             other_characteristic_details,
		             product_category_code,
		             n,
		             characteristic_data_type AS product_description
		      FROM
		        (SELECT LHS.characteristic_id AS characteristic_id,
		                LHS.characteristic_type_code AS characteristic_type_code,
		                LHS.characteristic_data_type AS characteristic_data_type,
		                LHS.characteristic_name AS characteristic_name,
		                LHS.other_characteristic_details AS other_characteristic_details,
		                RHS.product_category_code AS product_category_code,
		                RHS.n AS n
		         FROM characteristics AS LHS
		         INNER JOIN
		           (SELECT product_category_code,
		                   product_description,
		                   COUNT() AS n
		            FROM products
		            GROUP BY product_category_code,
		                     product_description) AS RHS ON (LHS.characteristic_data_type = RHS.product_description))) AS RHS ON (LHS.characteristic_id = RHS.characteristic_id
		                                                                                                                          AND LHS.product_category_code = RHS.product_category_code
		                                                                                                                          AND LHS.product_description = RHS.product_description
		                                                                                                                          AND LHS.n = RHS.n))
		ORDER BY characteristic_name

	Empty DataFrame
	Columns: [characteristic_name]
	Index: []
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0028 (2298)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM products AS t1
		JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id
		JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id
		WHERE t3.characteristic_name = "hot"

	   count(*)
	0       129
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`product_id` AS `product_id`,
		          `LHS`.`color_code` AS `color_code`,
		          `LHS`.`product_category_code` AS `product_category_code`,
		          `LHS`.`product_name` AS `product_name`,
		          `LHS`.`typical_buying_price` AS `typical_buying_price`,
		          `LHS`.`typical_selling_price` AS `typical_selling_price`,
		          `LHS`.`product_description` AS `product_description`,
		          `LHS`.`other_product_details` AS `other_product_details`,
		          `LHS`.`characteristic_id` AS `characteristic_id`,
		          `LHS`.`product_characteristic_value` AS `product_characteristic_value`,
		          `RHS`.`characteristic_name` AS `characteristic_name`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`product_id` AS `product_id`,
		             `LHS`.`color_code` AS `color_code`,
		             `LHS`.`product_category_code` AS `product_category_code`,
		             `LHS`.`product_name` AS `product_name`,
		             `LHS`.`typical_buying_price` AS `typical_buying_price`,
		             `LHS`.`typical_selling_price` AS `typical_selling_price`,
		             `LHS`.`product_description` AS `product_description`,
		             `LHS`.`other_product_details` AS `other_product_details`,
		             `RHS`.`characteristic_id` AS `characteristic_id`,
		             `RHS`.`product_characteristic_value` AS `product_characteristic_value`
		      FROM `products` AS `LHS`
		      INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`product_id` = `RHS`.`product_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT `characteristic_id`,
		             `characteristic_name`,
		             COUNT() AS `n`
		      FROM `characteristics`
		      GROUP BY `characteristic_id`,
		               `characteristic_name`) AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`))
		WHERE (`characteristic_name` = 'hot')
		ORDER BY count___

	     count___
	0           1
	1           1
	2           1
	3           1
	4           1
	..        ...
	124         1
	125         1
	126         1
	127         1
	128         1
	
	[129 rows x 1 columns]
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0031 (2299)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM products AS t1
		JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id
		JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id
		JOIN ref_colors AS t4 ON t1.color_code = t4.color_code
		WHERE t4.color_description = "white"
		  OR t3.characteristic_name = "hot"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n_distinct` AS `count___`
		FROM
		  (SELECT `characteristic_name`,
		          `product_description`,
		          COUNT(DISTINCT `color_description`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`color_code` AS `color_code`,
		                `LHS`.`color_description` AS `color_description`,
		                `LHS`.`characteristic_id` AS `characteristic_id`,
		                `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		                `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		                `LHS`.`characteristic_name` AS `characteristic_name`,
		                `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		                `LHS`.`product_id` AS `product_id`,
		                `LHS`.`product_category_code` AS `product_category_code`,
		                `LHS`.`product_name` AS `product_name`,
		                `LHS`.`typical_buying_price` AS `typical_buying_price`,
		                `LHS`.`typical_selling_price` AS `typical_selling_price`,
		                `LHS`.`product_description` AS `product_description`,
		                `LHS`.`other_product_details` AS `other_product_details`,
		                `RHS`.`product_characteristic_value` AS `product_characteristic_value`
		         FROM
		           (SELECT `LHS`.`color_code` AS `color_code`,
		                   `LHS`.`color_description` AS `color_description`,
		                   `LHS`.`characteristic_id` AS `characteristic_id`,
		                   `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		                   `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		                   `LHS`.`characteristic_name` AS `characteristic_name`,
		                   `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		                   `RHS`.`product_id` AS `product_id`,
		                   `RHS`.`product_category_code` AS `product_category_code`,
		                   `RHS`.`product_name` AS `product_name`,
		                   `RHS`.`typical_buying_price` AS `typical_buying_price`,
		                   `RHS`.`typical_selling_price` AS `typical_selling_price`,
		                   `RHS`.`product_description` AS `product_description`,
		                   `RHS`.`other_product_details` AS `other_product_details`
		            FROM
		              (SELECT `LHS`.`color_code` AS `color_code`,
		                      `LHS`.`color_description` AS `color_description`,
		                      `RHS`.`characteristic_id` AS `characteristic_id`,
		                      `RHS`.`characteristic_type_code` AS `characteristic_type_code`,
		                      `RHS`.`characteristic_data_type` AS `characteristic_data_type`,
		                      `RHS`.`characteristic_name` AS `characteristic_name`,
		                      `RHS`.`other_characteristic_details` AS `other_characteristic_details`
		               FROM `ref_colors` AS `LHS`
		               CROSS JOIN `characteristics` AS `RHS`) AS `LHS`
		            INNER JOIN `products` AS `RHS` ON (`LHS`.`color_code` = `RHS`.`color_code`)) AS `LHS`
		         INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`
		                                                              AND `LHS`.`product_id` = `RHS`.`product_id`))
		      WHERE (`color_description` != 'white'
		             AND `characteristic_name` != 'hot'))
		   GROUP BY characteristic_name,
		            product_description)
		ORDER BY count___

	   count___
	0         1
	1         2
	2         4
Wrong output for fuzzied solution in instance spider/school_bus/0008 (2302)
	EXPECTED OUTPUT ====

		SELECT home_city
		FROM driver
		WHERE age > 40
		GROUP BY home_city
		HAVING count(*) >= 2

	Empty DataFrame
	Columns: [home_city]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT home_city
		FROM
		  (SELECT home_city,
		          party,
		          COUNT(DISTINCT age) AS n_distinct
		   FROM
		     (SELECT *
		      FROM driver
		      WHERE (age = 40
		             AND age >= 2))
		   GROUP BY home_city,
		            party)
		ORDER BY home_city

	        home_city
	0        Coventry
	1    East Hartfor
	2  nPfHartford jW
Wrong output for fuzzied solution in instance spider/school_bus/0006 (2305)
	EXPECTED OUTPUT ====

		SELECT home_city
		FROM driver
		GROUP BY home_city
		ORDER BY count(*) DESC
		LIMIT 1

	  home_city
	0  Coventry
	ACTUAL OUTPUT ====

		
		SELECT home_city
		FROM
		  (SELECT LHS.age AS age,
		          LHS.home_city AS home_city,
		          LHS.n AS n,
		          RHS.name AS name,
		          RHS.party AS party,
		          RHS.home_city AS home_city_other
		   FROM
		     (SELECT age,
		             home_city,
		             COUNT() AS n
		      FROM driver
		      GROUP BY age,
		               home_city) AS LHS
		   INNER JOIN driver AS RHS ON (LHS.age = RHS.age
		                                   AND LHS.n = RHS.driver_id))
		ORDER BY home_city

	            home_city
	0            Coventry
	1  East HartfordEun2W
	2        ast Hartford
Wrong output for fuzzied solution in instance spider/school_bus/0015 (2308)
	EXPECTED OUTPUT ====

		SELECT T2.type,
		       count(*)
		FROM school_bus AS T1
		JOIN school AS T2 ON T1.school_id = T2.school_id
		GROUP BY T2.type

	               type  count(*)
	0      PrivatewHVqK         4
	1  Private Catholic         5
	2   Private Catholi         6
	3      0J2PublicQ9B         7
	4             ublic         7
	5           Private        10
	ACTUAL OUTPUT ====

		
		SELECT TYPE,
		       n AS count___
		FROM
		  (SELECT TYPE,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM school AS LHS
		      WHERE EXISTS
		          (SELECT 1
		           FROM school_bus AS RHS
		           WHERE (LHS.school_id = RHS.school_id) ))
		   GROUP BY TYPE)
		ORDER BY TYPE

	               type  count___
	0      0J2PublicQ9B         1
	1           Private         2
	2   Private Catholi         1
	3  Private Catholic         1
	4      PrivatewHVqK         1
	5             ublic         1
Wrong output for fuzzied solution in instance spider/school_bus/0016 (2310)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM driver
		WHERE home_city = 'Hartford'
		  OR age < 40

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `driver`
		      WHERE (`home_city` = 'Hartford'
		             OR age <= 40)))
		ORDER BY count___

	   count___
	0         9
Wrong output for fuzzied solution in instance spider/school_bus/0018 (2311)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM driver AS t1
		JOIN school_bus AS t2 ON t1.driver_id = t2.driver_id
		ORDER BY years_working DESC
		LIMIT 1

	           name
	0  randon McGee
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.school_id AS school_id,
		                LHS.driver_id AS driver_id,
		                LHS.years_working AS years_working,
		                LHS.if_full_time AS if_full_time,
		                RHS.name AS name,
		                RHS.party AS party,
		                RHS.home_city AS home_city,
		                RHS.age AS age
		         FROM school_bus AS LHS
		         INNER JOIN driver AS RHS ON (LHS.driver_id = RHS.driver_id))
		      ORDER BY party DESC)
		   LIMIT 1)

	                  name
	0  Vv6kpTimothy Ackert
Wrong output for fuzzied solution in instance spider/school_bus/0009 (2315)
	EXPECTED OUTPUT ====

		SELECT home_city
		FROM driver
		EXCEPT
		SELECT home_city
		FROM driver
		WHERE age > 40

	              home_city
	0           5bv52oybFNB
	1   AJfEast HartfordN)L
	2          East Hartfor
	3    East HartfordTWiOw
	4               Hartfor
	5         HartfordW Z1I
	6         Hartfordw35Lx
	7        K v7LGeY sPv5Y
	8         LAqWeHartford
	9         QtHX3Hartford
	10         ast Hartford
	11   vgZKbEast Hartford
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT home_city
		FROM
		  (SELECT *
		   FROM driver AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM driver
		           WHERE (age > 40)) AS RHS
		        WHERE (LHS.home_city = RHS.home_city
		               AND LHS.party = RHS.party) ))
		ORDER BY home_city

	              home_city
	0          2ElN9h1MYfdJ
	1           5bv52oybFNB
	2   AJfEast HartfordN)L
	3          East Hartfor
	4         East Hartford
	5    East HartfordTWiOw
	6               Hartfor
	7              Hartford
	8         HartfordW Z1I
	9         Hartfordw35Lx
	10       K v7LGeY sPv5Y
	11        LAqWeHartford
	12        QtHX3Hartford
	13              artford
	14         ast Hartford
	15   vgZKbEast Hartford
No solution for instance spider/flight_4/0033 (2318)
No solution for instance spider/flight_4/0037 (2319)
No solution for instance spider/flight_4/0036 (2321)
No solution for instance spider/flight_4/0017 (2322)
No solution for instance spider/flight_4/0039 (2324)
No solution for instance spider/flight_4/0038 (2325)
Wrong output for base solution in instance spider/flight_4/0027 (2327)
	EXPECTED OUTPUT ====

	              city  count___
	0         Aberdeen         3
	1          Abilene         2
	2        Abu Dhabi         3
	3            Adana         2
	4      Addis Ababa         2
	..             ...       ...
	434        Yaounde         2
	435  Yekaterinburg         2
	436        Yerevan         2
	437       Zhytomyr         2
	438            NaN        44
	
	[439 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT city,
		       count(*)
		FROM airports
		GROUP BY city
		HAVING count(*) > 1

	              city  count(*)
	0                         44
	1         Aberdeen         3
	2          Abilene         2
	3        Abu Dhabi         3
	4            Adana         2
	..             ...       ...
	434        Yakutsk         2
	435        Yaounde         2
	436  Yekaterinburg         2
	437        Yerevan         2
	438       Zhytomyr         2
	
	[439 rows x 2 columns]
Wrong output for ground truth in instance spider/flight_4/0027 (2327)
Wrong output for base solution in instance spider/flight_4/0022 (2328)
	EXPECTED OUTPUT ====

	                   country  count___
	0     Boonville Stage Line         1
	1                     S.A.         1
	2                     ACOM         1
	3              ACTIVE AERO         1
	4               AEROCENTER         1
	..                     ...       ...
	273                 Russia       238
	274                 Canada       323
	275         United Kingdom       414
	276                 Mexico       440
	277          United States      1099
	
	[278 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT country,
		       count(*)
		FROM airlines
		GROUP BY country
		ORDER BY count(*) DESC

	                   country  count(*)
	0     Boonville Stage Line         1
	1                     S.A.         1
	2                     ACOM         1
	3              ACTIVE AERO         1
	4               AEROCENTER         1
	..                     ...       ...
	273                 Russia       238
	274                 Canada       323
	275         United Kingdom       414
	276                 Mexico       440
	277          United States      1099
	
	[278 rows x 2 columns]
Wrong output for ground truth in instance spider/flight_4/0022 (2328)
No solution for instance spider/flight_4/0030 (2329)
No solution for instance spider/flight_4/0013 (2330)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for fuzzied solution in instance spider/flight_4/0012 (2333)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM airlines AS T1
		JOIN routes AS T2 ON T1.alid = T2.alid
		WHERE T1.name = 'American Airlines'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT `LHS`.`rid` AS `rid`,
		          `LHS`.`dst_apid` AS `dst_apid`,
		          `LHS`.`dst_ap` AS `dst_ap`,
		          `LHS`.`src_apid` AS `src_apid`,
		          `LHS`.`src_ap` AS `src_ap`,
		          `LHS`.`alid` AS `alid`,
		          `LHS`.`airline` AS `airline`,
		          `LHS`.`codeshare` AS `codeshare`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`iata` AS `iata`,
		          `LHS`.`icao` AS `icao`,
		          `LHS`.`callsign` AS `callsign`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`active` AS `active`
		   FROM
		     (SELECT `LHS`.`rid` AS `rid`,
		             `LHS`.`dst_apid` AS `dst_apid`,
		             `LHS`.`dst_ap` AS `dst_ap`,
		             `LHS`.`src_apid` AS `src_apid`,
		             `LHS`.`src_ap` AS `src_ap`,
		             `LHS`.`alid` AS `alid`,
		             `LHS`.`airline` AS `airline`,
		             `LHS`.`codeshare` AS `codeshare`,
		             `RHS`.`name` AS `name`,
		             `RHS`.`iata` AS `iata`,
		             `RHS`.`icao` AS `icao`,
		             `RHS`.`callsign` AS `callsign`,
		             `RHS`.`country` AS `country`,
		             `RHS`.`active` AS `active`
		      FROM `routes` AS `LHS`
		      INNER JOIN `airlines` AS `RHS` ON (`LHS`.`alid` = `RHS`.`alid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `airlines`
		      WHERE (`name` = 'American Airlines')) AS RHS ON (LHS.alid = RHS.alid
		                                                       AND LHS.name = RHS.name
		                                                       AND LHS.iata = RHS.iata
		                                                       AND LHS.icao = RHS.icao
		                                                       AND LHS.callsign = RHS.callsign
		                                                       AND LHS.country = RHS.country
		                                                       AND LHS.active = RHS.active))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/flight_4/0026 (2334)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
No solution for instance spider/flight_4/0016 (2337)
No solution for instance spider/flight_4/0018 (2339)
No solution for instance spider/flight_4/0041 (2340)
No solution for instance spider/flight_4/0035 (2341)
Wrong output for base solution in instance spider/flight_4/0020 (2342)
	EXPECTED OUTPUT ====

		SELECT country
		FROM airlines
		GROUP BY country
		ORDER BY count(*) DESC
		LIMIT 1

	         country
	0  United States
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT country
		FROM
		  (SELECT LHS.alid AS alid,
		          LHS.name AS name,
		          LHS.iata AS iata,
		          LHS.icao AS icao,
		          LHS.callsign AS callsign,
		          LHS.country AS country,
		          LHS.active AS active,
		          RHS.callsign AS callsign_other
		   FROM airlines AS LHS
		   INNER JOIN
		     (SELECT callsign,
		             country,
		             COUNT() AS n
		      FROM airlines
		      GROUP BY callsign,
		               country) AS RHS ON (LHS.alid = RHS.n
		                                   AND LHS.country = RHS.country))
		ORDER BY country

	          country
	0                
	1  United Kingdom
	2   United States
Wrong output for fuzzied solution in instance spider/flight_4/0019 (2343)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT dst_apid)
		FROM airlines AS T1
		JOIN routes AS T2 ON T1.alid = T2.alid
		WHERE T1.name = 'American Airlines'

	   count(distinct dst_apid)
	0                         0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count_distinct_dst_apid_`
		FROM
		  (SELECT `LHS`.`alid` AS `alid`,
		          `LHS`.`n_distinct` AS `n_distinct`,
		          `RHS`.`name` AS `name`,
		          `RHS`.`iata` AS `iata`,
		          `RHS`.`icao` AS `icao`,
		          `RHS`.`callsign` AS `callsign`,
		          `RHS`.`country` AS `country`,
		          `RHS`.`active` AS `active`
		   FROM
		     (SELECT `alid`,
		             COUNT(DISTINCT `dst_apid`) AS `n_distinct`
		      FROM `routes`
		      GROUP BY `alid`) AS `LHS`
		   INNER JOIN `airlines` AS `RHS` ON (`LHS`.`alid` = `RHS`.`alid`))
		WHERE (`name` = 'American Airlines')
		ORDER BY count_distinct_dst_apid_

	Empty DataFrame
	Columns: [count_distinct_dst_apid_]
	Index: []
No solution for instance spider/flight_4/0007 (2344)
No solution for instance spider/flight_4/0034 (2345)
No solution for instance spider/flight_4/0024 (2346)
Wrong output for base solution in instance spider/flight_4/0021 (2347)
	EXPECTED OUTPUT ====

		SELECT country
		FROM airlines
		WHERE active = 'Y'
		GROUP BY country
		ORDER BY count(*) DESC
		LIMIT 1

	         country
	0  United States
	ACTUAL OUTPUT ====

		
		SELECT `country`
		FROM
		  (SELECT `active`,
		          `country`,
		          COUNT() AS `n`
		   FROM
		     (SELECT `alid`,
		             `name`,
		             `iata`,
		             `iata` AS `icao`,
		             `callsign`,
		             `country`,
		             `active`,
		             `alid_other`,
		             `name_other`,
		             `iata_other`,
		             `country_other`,
		             `active_other`
		      FROM
		        (SELECT `alid`,
		                `name`,
		                `iata`,
		                `icao`,
		                `name` AS `callsign`,
		                `country`,
		                `active`,
		                `alid_other`,
		                `name_other`,
		                `iata_other`,
		                `country_other`,
		                `active_other`
		         FROM
		           (SELECT `LHS`.`alid` AS `alid`,
		                   `LHS`.`name` AS `name`,
		                   `LHS`.`iata` AS `iata`,
		                   `LHS`.`icao` AS `icao`,
		                   `LHS`.`callsign` AS `callsign`,
		                   `LHS`.`country` AS `country`,
		                   `LHS`.`active` AS `active`,
		                   `RHS`.`alid` AS `alid_other`,
		                   `RHS`.`name` AS `name_other`,
		                   `RHS`.`iata` AS `iata_other`,
		                   `RHS`.`country` AS `country_other`,
		                   `RHS`.`active` AS `active_other`
		            FROM `airlines` AS `LHS`
		            INNER JOIN `airlines` AS `RHS` ON (`LHS`.`name` = `RHS`.`callsign`
		                                                  AND `LHS`.`iata` = `RHS`.`icao`))))
		   GROUP BY `active`,
		            `country`)
		WHERE (`active` != 'Y'
		       AND n >= 1)
		ORDER BY country

	Empty DataFrame
	Columns: [country]
	Index: []
No solution for instance spider/flight_4/0025 (2352)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
No solution for instance spider/flight_4/0029 (2354)
No solution for instance spider/flight_4/0010 (2355)
No solution for instance spider/flight_4/0040 (2356)
Wrong output for base solution in instance spider/flight_4/0028 (2357)
	EXPECTED OUTPUT ====

	           city
	0      Aberdeen
	1     Abu Dhabi
	2         Akron
	3        Albany
	4    Alexandria
	..          ...
	110      Warsaw
	111  Washington
	112     Wichita
	113  Wilmington
	114         NaN
	
	[115 rows x 1 columns]
	ACTUAL OUTPUT ====

		SELECT city
		FROM airports
		GROUP BY city
		HAVING count(*) > 2
		ORDER BY count(*)

	           city
	0              
	1      Aberdeen
	2     Abu Dhabi
	3         Akron
	4        Albany
	..          ...
	110    Victoria
	111      Warsaw
	112  Washington
	113     Wichita
	114  Wilmington
	
	[115 rows x 1 columns]
Wrong output for ground truth in instance spider/flight_4/0028 (2357)
Wrong output for base solution in instance spider/flight_4/0031 (2358)
	EXPECTED OUTPUT ====

	     avg_elevation_                         country
	0          4.611111                        Kiribati
	1          6.333333                  Cayman Islands
	2          7.000000                  Johnston Atoll
	3          9.000000  British Indian Ocean Territory
	4          9.000000                          Tuvalu
	..              ...                             ...
	232     4546.384615                        Mongolia
	233     5044.333333                          Rwanda
	234     5416.689655                        Ethiopia
	235     5599.000000                          Bhutan
	236     5851.000000                         Lesotho
	
	[237 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT avg(elevation),
		       country
		FROM airports
		GROUP BY country

	     avg(elevation)                         country
	0          4.611111                        Kiribati
	1          6.333333                  Cayman Islands
	2          7.000000                  Johnston Atoll
	3          9.000000  British Indian Ocean Territory
	4          9.000000                          Tuvalu
	..              ...                             ...
	232     4546.384615                        Mongolia
	233     5044.333333                          Rwanda
	234     5416.689655                        Ethiopia
	235     5599.000000                          Bhutan
	236     5851.000000                         Lesotho
	
	[237 rows x 2 columns]
Wrong output for ground truth in instance spider/flight_4/0031 (2358)
Wrong output for fuzzied solution in instance spider/city_record/0008 (2361)
	EXPECTED OUTPUT ====

		SELECT city
		FROM city
		ORDER BY regional_population DESC
		LIMIT 3

	                    city
	0  Hangzhou ( Zhejiang )
	1  Shaoxing ( Zhejiang )
	2    Taizhou ( Zhejiang 
	ACTUAL OUTPUT ====

		
		SELECT city
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM city
		      ORDER BY gdp DESC)
		   LIMIT 3)

	                          city
	0        Hangzhou ( Zhejiang )
	1          Taizhou ( Zhejiang 
	2  bJAHangzhou ( Zhejiang )BEz
No solution for instance spider/city_record/0003 (2362)
No solution for instance spider/city_record/0013 (2363)
No solution for instance spider/city_record/0006 (2364)
No solution for instance spider/city_record/0004 (2365)
No solution for instance spider/city_record/0012 (2366)
Wrong output for fuzzied solution in instance spider/city_record/0005 (2368)
	EXPECTED OUTPUT ====

		SELECT T3.venue
		FROM city AS T1
		JOIN hosting_city AS T2 ON T1.city_id = T2.host_city
		JOIN MATCH AS T3 ON T2.match_id = T3.match_id
		WHERE T1.city = "Nanjing ( Jiangsu )"
		  AND T3.competition = "1994 FIFA World Cup qualification"

	Empty DataFrame
	Columns: [venue]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `venue`
		FROM
		  (SELECT `LHS`.`city_id` AS `city_id`,
		          `LHS`.`city` AS `city`,
		          `LHS`.`hanzi` AS `hanzi`,
		          `LHS`.`hanyu_pinyin` AS `hanyu_pinyin`,
		          `LHS`.`regional_population` AS `regional_population`,
		          `LHS`.`gdp` AS `gdp`,
		          `LHS`.`match_id` AS `match_id`,
		          `LHS`.`date` AS `date`,
		          `LHS`.`venue` AS `venue`,
		          `LHS`.`score` AS `score`,
		          `LHS`.`result` AS `result`,
		          `LHS`.`competition` AS `competition`,
		          `RHS`.`year` AS `year`,
		          `RHS`.`host_city` AS `host_city`
		   FROM
		     (SELECT `LHS`.`city_id` AS `city_id`,
		             `LHS`.`city` AS `city`,
		             `LHS`.`hanzi` AS `hanzi`,
		             `LHS`.`hanyu_pinyin` AS `hanyu_pinyin`,
		             `LHS`.`regional_population` AS `regional_population`,
		             `LHS`.`gdp` AS `gdp`,
		             `RHS`.`match_id` AS `match_id`,
		             `RHS`.`date` AS `date`,
		             `RHS`.`venue` AS `venue`,
		             `RHS`.`score` AS `score`,
		             `RHS`.`result` AS `result`,
		             `RHS`.`competition` AS `competition`
		      FROM `city` AS `LHS`
		      CROSS JOIN `match` AS `RHS`) AS `LHS`
		   INNER JOIN `hosting_city` AS `RHS` ON (`LHS`.`match_id` = `RHS`.`match_id`))
		WHERE (`city` = 'Nanjing ( Jiangsu )'
		       OR `competition` != '1994 FIFA World Cup qualification')
		ORDER BY venue

	                                               venue
	0      Estadio Cuscatlán , San Salvador , El Salvado
	1     Estadio Cuscatlán , San Salvador , El Salvador
	2  Estadio Cuscatlán , San Salvador , El Salvador...
	3  uDlEstadio Cuscatlán , San Salvador , El Salva...
	4  yYbEstadio Cuscatlán , San Salvador , El Salva...
Wrong output for fuzzied solution in instance spider/city_record/0016 (2369)
	EXPECTED OUTPUT ====

		SELECT city
		FROM city
		WHERE regional_population > 10000000
		UNION
		SELECT city
		FROM city
		WHERE regional_population < 5000000

	                          city
	0        7jxqH3EZ)D(ddOFHjXmPA
	1         Changzhou ( Jiangsu 
	2        Changzhou ( Jiangsu )
	3           Nanjing ( Jiangsu 
	4          Nanjing ( Jiangsu )
	5     Nanjing ( Jiangsu )MGWZt
	6          Nantong ( Jiangsu )
	7         Taizhou ( Zhejiang )
	8         Yangzhou ( Jiangsu )
	9   gVNJl2IlqO4rCn11gK7rfNgPLU
	10        gdKBvphBxPT3rhcDpK8c
	ACTUAL OUTPUT ====

		
		SELECT city
		FROM city
		WHERE (regional_population > 10000000
		       OR regional_population < 5000000)
		ORDER BY city

	                          city
	0        7jxqH3EZ)D(ddOFHjXmPA
	1         Changzhou ( Jiangsu 
	2        Changzhou ( Jiangsu )
	3           Nanjing ( Jiangsu 
	4           Nanjing ( Jiangsu 
	5          Nanjing ( Jiangsu )
	6          Nanjing ( Jiangsu )
	7          Nanjing ( Jiangsu )
	8     Nanjing ( Jiangsu )MGWZt
	9          Nantong ( Jiangsu )
	10        Taizhou ( Zhejiang )
	11        Yangzhou ( Jiangsu )
	12  gVNJl2IlqO4rCn11gK7rfNgPLU
	13        gdKBvphBxPT3rhcDpK8c
No solution for instance spider/city_record/0020 (2371)
Wrong output for fuzzied solution in instance spider/city_record/0019 (2372)
	EXPECTED OUTPUT ====

		SELECT gdp
		FROM city
		ORDER BY Regional_Population DESC
		LIMIT 1

	      gdp
	0  408.02
	ACTUAL OUTPUT ====

		
		SELECT gdp
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM city
		      ORDER BY gdp DESC)
		   LIMIT 1)

	      gdp
	0  601.07
No solution for instance spider/city_record/0007 (2373)
Wrong output for fuzzied solution in instance spider/city_record/0001 (2374)
	EXPECTED OUTPUT ====

		SELECT host_city
		FROM hosting_city
		ORDER BY YEAR DESC
		LIMIT 1

	  host_city
	0        13
	ACTUAL OUTPUT ====

		
		SELECT host_city
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM hosting_city
		      ORDER BY match_id DESC)
		   LIMIT 1)

	  host_city
	0         8
No solution for instance spider/city_record/0014 (2375)
Wrong output for fuzzied solution in instance spider/city_record/0009 (2376)
	EXPECTED OUTPUT ====

		SELECT city,
		       GDP
		FROM city
		ORDER BY GDP
		LIMIT 1

	                    city     gdp
	0  LYL43Wuxi ( Jiangsu )  244.77
	ACTUAL OUTPUT ====

		
		SELECT city,
		       gdp
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM city
		      ORDER BY hanzi DESC)
		   LIMIT 1)

	              city     gdp
	0  Wuxi ( Jiangsu   263.01
No solution for instance spider/city_record/0011 (2377)
No solution for instance spider/city_record/0010 (2378)
Wrong output for fuzzied solution in instance spider/theme_gallery/0017 (2380)
	EXPECTED OUTPUT ====

		SELECT name
		FROM artist
		EXCEPT
		SELECT T2.name
		FROM exhibition AS T1
		JOIN artist AS T2 ON T1.artist_id = T2.artist_id
		WHERE T1.year = 2004

	                 name
	0   )dNMark Brooks4qt
	1   70YJeff SlumanMCM
	2           John Daly
	3          Nick Price
	4        Paul Azinger
	5  cGIPaul AzingerH7q
	6      tW3ZpJohn Daly
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM artist AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM exhibition
		           WHERE (YEAR <= 2004)) AS RHS
		        WHERE (LHS.artist_id = RHS.artist_id) ))
		ORDER BY name

	                 name
	0   )dNMark Brooks4qt
	1           John Daly
	2          Nick Price
	3          Nick Price
	4        Paul Azinger
	5  cGIPaul AzingerH7q
	6      tW3ZpJohn Daly
Wrong output for fuzzied solution in instance spider/theme_gallery/0008 (2381)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM exhibition
		WHERE YEAR >= 2005

	   count(*)
	0        14
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT YEAR) AS n_distinct
		   FROM
		     (SELECT *
		      FROM exhibition
		      WHERE (YEAR != 2005)))
		ORDER BY count___

	   count___
	0         6
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for fuzzied solution in instance spider/theme_gallery/0006 (2384)
	EXPECTED OUTPUT ====

		SELECT avg(age),
		       min(age)
		FROM artist
		WHERE country = 'United States'

	  avg(age) min(age)
	0     None     None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `meanage` AS `avg_age_`,
		                MIN(`age`) OVER () AS `min_age_`
		FROM
		  (SELECT `artist_id`,
		          `name`,
		          `country`,
		          `year_join`,
		          `age`,
		          AVG(`age`) OVER () AS `meanage`
		   FROM
		     (SELECT *
		      FROM `artist`
		      WHERE (`country` = 'United States')))
		ORDER BY avg_age_

	Empty DataFrame
	Columns: [avg_age_, min_age_]
	Index: []
No solution for instance spider/theme_gallery/0005 (2388)
Wrong output for fuzzied solution in instance spider/theme_gallery/0016 (2389)
	EXPECTED OUTPUT ====

		SELECT T2.theme,
		       T1.date,
		       T1.attendance
		FROM exhibition_record AS T1
		JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id
		WHERE T2.year = 2004

	    theme         date  attendance
	0  Summer   February 2        1233
	1  Summer  December 16        1235
	ACTUAL OUTPUT ====

		
		SELECT theme, date, attendance
		FROM
		  (SELECT exhibition_id, date, attendance,
		                               exhibition_id_other,
		                               YEAR,
		                               theme,
		                               ticket_price,
		                               exhibition_id AS artist_id
		   FROM
		     (SELECT LHS.exhibition_id AS exhibition_id,
		             LHS.date AS date,
		             LHS.attendance AS attendance,
		             RHS.exhibition_id AS exhibition_id_other,
		             RHS.year AS YEAR,
		             RHS.theme AS theme,
		             RHS.ticket_price AS ticket_price
		      FROM exhibition_record AS LHS
		      INNER JOIN exhibition AS RHS ON (LHS.exhibition_id = RHS.artist_id)))
		WHERE (YEAR <= 2004)
		ORDER BY theme

	                 theme         date  attendance
	0               Summer   December 2        1231
	1               Summer  December 16        1232
	2               Summer  February 28        1233
	3               Summer  February 23        1313
	4  Christmas Treerk Wd    ecember 2        1313
Wrong output for fuzzied solution in instance spider/theme_gallery/0020 (2390)
	EXPECTED OUTPUT ====

		SELECT T3.name
		FROM exhibition_record AS T1
		JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id
		JOIN artist AS T3 ON T3.artist_id = T2.artist_id
		GROUP BY T3.artist_id
		HAVING avg(T1.attendance) > 200

	                 name
	0           8OhS5xIQI
	1         97rQQNlz5iZ
	2      BzPANybDsEJppo
	3         Jeff Sluman
	4         Jeff Sluman
	5            John Dal
	6           John Daly
	7           John Daly
	8      L4HhqJohn Daly
	9          Mark Brook
	10        Mark Brooks
	11        Mark Brooks
	12        Mark Brooks
	13        Mark Brooks
	14        Mark Brooks
	15        Mark Brooks
	16        Mark Brooks
	17           Q8DM5y9a
	18   S8yugMark Brooks
	19       UgCCA0XtXiJY
	20       gxgK1N2kd7K 
	21  haxMark BrooksSIi
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT country,
		          name,
		          AVG(attendance) AS meanattendance
		   FROM
		     (SELECT LHS.artist_id AS artist_id,
		             LHS.name AS name,
		             LHS.country AS country,
		             LHS.year_join AS year_join,
		             LHS.age AS age,
		             LHS.exhibition_id AS exhibition_id,
		             LHS.year AS YEAR,
		             LHS.theme AS theme,
		             LHS.ticket_price AS ticket_price,
		             LHS.date AS date,
		             LHS.attendance AS attendance
		      FROM
		        (SELECT LHS.artist_id AS artist_id,
		                LHS.name AS name,
		                LHS.country AS country,
		                LHS.year_join AS year_join,
		                LHS.age AS age,
		                LHS.exhibition_id AS exhibition_id,
		                LHS.year AS YEAR,
		                LHS.theme AS theme,
		                LHS.ticket_price AS ticket_price,
		                RHS.date AS date,
		                RHS.attendance AS attendance
		         FROM
		           (SELECT LHS.artist_id AS artist_id,
		                   LHS.name AS name,
		                   LHS.country AS country,
		                   LHS.year_join AS year_join,
		                   LHS.age AS age,
		                   RHS.exhibition_id AS exhibition_id,
		                   RHS.year AS YEAR,
		                   RHS.theme AS theme,
		                   RHS.ticket_price AS ticket_price
		            FROM artist AS LHS
		            INNER JOIN exhibition AS RHS ON (LHS.artist_id = RHS.artist_id)) AS LHS
		         INNER JOIN exhibition_record AS RHS ON (LHS.exhibition_id = RHS.exhibition_id)) AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM exhibition_record
		         WHERE (attendance > 200)) AS RHS ON (LHS.exhibition_id = RHS.exhibition_id
		                                              AND LHS.date = RHS.date
		                                              AND LHS.attendance = RHS.attendance))
		   GROUP BY country,
		            name)
		ORDER BY name

	                 name
	0           8OhS5xIQI
	1         97rQQNlz5iZ
	2      BzPANybDsEJppo
	3         Jeff Sluman
	4         Jeff Sluman
	5            John Dal
	6           John Daly
	7           John Daly
	8      L4HhqJohn Daly
	9          Mark Brook
	10        Mark Brooks
	11        Mark Brooks
	12        Mark Brooks
	13        Mark Brooks
	14        Mark Brooks
	15   Mark BrooksAsa 0
	16           Q8DM5y9a
	17   S8yugMark Brooks
	18       UgCCA0XtXiJY
	19  abAMark BrooksBM0
	20       gxgK1N2kd7K 
	21  haxMark BrooksSIi
No solution for instance spider/theme_gallery/0019 (2391)
Wrong output for fuzzied solution in instance spider/theme_gallery/0007 (2392)
	EXPECTED OUTPUT ====

		SELECT name
		FROM artist
		ORDER BY year_join DESC
		LIMIT 1

	        name
	0  John Daly
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM artist
		      ORDER BY artist_id)
		   LIMIT 1)

	          name
	0  Jeff Sluman
No solution for instance spider/theme_gallery/0014 (2394)
Wrong output for fuzzied solution in instance spider/theme_gallery/0009 (2395)
	EXPECTED OUTPUT ====

		SELECT theme,
		       YEAR
		FROM exhibition
		WHERE ticket_price < 15

	                                                theme        year
	0   D8u1YSanta Claus and Rudolph the Red-Nosed Rei...  6813251180
	1                                        GfrSpring)NV        2006
	2                 MDdnAxKWyZdF8RU3NkhOurgU7Efeb8561FZ        2004
	3      Santa Claus and Rudolph the Red-Nosed Reindeer   112899772
	4      Santa Claus and Rudolph the Red-Nosed Reindeer  1307784256
	5      Santa Claus and Rudolph the Red-Nosed Reindeer  3793370046
	6                                              Spring        2006
	7                                              Spring        2008
	8   Y(ZVgSanta Claus and Rudolph the Red-Nosed Rei...        2003
	9       anta Claus and Rudolph the Red-Nosed Reindeer  4020064038
	10                xKWyZdF8RU3NkhOurgU7Efeb8561FZoAwYZ        2005
	ACTUAL OUTPUT ====

		
		SELECT theme,
		       YEAR
		FROM exhibition
		WHERE (ticket_price <= 15.0)
		ORDER BY theme

	                                                theme        year
	0   D8u1YSanta Claus and Rudolph the Red-Nosed Rei...  6813251180
	1                                        GfrSpring)NV        2006
	2                 MDdnAxKWyZdF8RU3NkhOurgU7Efeb8561FZ        2004
	3      Santa Claus and Rudolph the Red-Nosed Reindeer   112899772
	4      Santa Claus and Rudolph the Red-Nosed Reindeer  1307784256
	5      Santa Claus and Rudolph the Red-Nosed Reindeer  3793370046
	6                                              Spring        2006
	7                                              Spring        2008
	8   Y(ZVgSanta Claus and Rudolph the Red-Nosed Rei...        2003
	9       anta Claus and Rudolph the Red-Nosed Reindeer  4020064038
	10                     xKWyZdF8RU3NkhOurgU7Efeb8561FZ        2007
	11                xKWyZdF8RU3NkhOurgU7Efeb8561FZoAwYZ        2005
Wrong output for fuzzied solution in instance spider/theme_gallery/0011 (2396)
	EXPECTED OUTPUT ====

		SELECT T2.name,
		       T2.country
		FROM exhibition AS T1
		JOIN artist AS T2 ON T1.artist_id = T2.artist_id
		GROUP BY T1.artist_id
		ORDER BY count(*) DESC
		LIMIT 1

	           name              country
	0  Larry Nelson  bLHUnited StatesHjX
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name,
		                country
		FROM
		  (SELECT LHS.artist_id AS artist_id,
		          LHS.name AS name,
		          LHS.country AS country,
		          LHS.year_join AS year_join,
		          LHS.age AS age,
		          RHS.ticket_price AS ticket_price,
		          RHS.year AS YEAR
		   FROM artist AS LHS
		   INNER JOIN
		     (SELECT ticket_price,
		             YEAR,
		             COUNT() AS n
		      FROM exhibition
		      GROUP BY ticket_price,
		               YEAR) AS RHS ON (LHS.artist_id = RHS.n))
		ORDER BY name

	Empty DataFrame
	Columns: [name, country]
	Index: []
Wrong output for fuzzied solution in instance spider/culture_company/0002 (2398)
	EXPECTED OUTPUT ====

		SELECT book_title,
		       author_or_editor
		FROM book_club
		WHERE YEAR > 1989

	                       book_title author_or_editor
	0                Lessons In Murde    Joseph Hansen
	1             The Crystal Curtain    Joseph Hansen
	2   Walking Water / After All Thi     Thom Nickels
	3  Walking Water / After All This     Thom Nickels
	4               Lessons In Murder     oseph Hansen
	ACTUAL OUTPUT ====

		
		SELECT book_title,
		       author_or_editor
		FROM book_club
		WHERE (YEAR != 1989)
		ORDER BY book_title

	                       book_title    author_or_editor
	0                Unicorn Mountain  9KCz(Joseph Hansen
	1        The Crystal CurtainMO0MO        Joseph Hanse
	2                Lessons In Murde       Joseph Hansen
	3          Lessons In MurderMbehq       Joseph Hansen
	4             The Crystal Curtain       Joseph Hansen
	5   Walking Water / After All Thi        Thom Nickels
	6  Walking Water / After All This        Thom Nickels
	7               Lessons In Murder        oseph Hansen
No solution for instance spider/culture_company/0017 (2399)
Wrong output for fuzzied solution in instance spider/culture_company/0008 (2400)
	EXPECTED OUTPUT ====

		SELECT category
		FROM book_club
		WHERE YEAR > 1989
		GROUP BY category
		HAVING count(*) >= 2

	     category
	0  Lesb. M/SF
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT category
		FROM book_club
		WHERE (YEAR > 1989
		       AND YEAR > 2)
		ORDER BY category

	        category
	0     Lesb. M/SF
	1      esb. M/SF
	2  zING4Gay M/SF
No solution for instance spider/culture_company/0013 (2402)
Wrong output for fuzzied solution in instance spider/culture_company/0006 (2403)
	EXPECTED OUTPUT ====

		SELECT publisher
		FROM book_club
		GROUP BY publisher
		ORDER BY count(*) DESC
		LIMIT 1

	             publisher
	0  William MorrowtDdnG
	ACTUAL OUTPUT ====

		
		SELECT publisher
		FROM
		  (SELECT LHS.author_or_editor AS author_or_editor,
		          LHS.result AS RESULT,
		          LHS.n AS n,
		          RHS.year AS YEAR,
		          RHS.author_or_editor AS author_or_editor_other,
		          RHS.book_title AS book_title,
		          RHS.publisher AS publisher,
		          RHS.category AS category
		   FROM
		     (SELECT author_or_editor,
		             RESULT,
		             COUNT() AS n
		      FROM book_club
		      GROUP BY author_or_editor,
		               RESULT) AS LHS
		   INNER JOIN book_club AS RHS ON (LHS.n = RHS.book_club_id
		                                      AND LHS.result = RHS.result))
		ORDER BY publisher

	     publisher
	0  Banned Book
Error while executing solution for instance spider/culture_company/0012 (2405)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT director) OVER () AS count__distinct_director_
FROM movie
ORDER BY count__distinct_director_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/culture_company/0016 (2408)
No solution for instance spider/culture_company/0018 (2409)
No solution for instance spider/culture_company/0019 (2410)
Wrong output for fuzzied solution in instance spider/culture_company/0014 (2413)
	EXPECTED OUTPUT ====

		SELECT director
		FROM movie
		WHERE YEAR = 2000 INTERSECT
		  SELECT director
		  FROM movie WHERE YEAR = 1999

	Empty DataFrame
	Columns: [director]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT director
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM movie
		         WHERE (YEAR = 2000
		                AND YEAR != 1999))
		      ORDER BY YEAR)
		   LIMIT 1)

	    director
	0  Damian Le
Wrong output for fuzzied solution in instance spider/culture_company/0009 (2414)
	EXPECTED OUTPUT ====

		SELECT publisher
		FROM book_club
		WHERE YEAR = 1989 INTERSECT
		  SELECT publisher
		  FROM book_club WHERE YEAR = 1990

	  publisher
	0    Alyson
	ACTUAL OUTPUT ====

		
		SELECT publisher
		FROM book_club
		WHERE (YEAR != 1989
		       OR YEAR >= 1990)
		ORDER BY publisher

	             publisher
	0                Alyso
	1               Alyson
	2         Banned Books
	3          Naiad Press
	4          Naiad Press
	5  gUdkrWilliam Morrow
No solution for instance spider/race_track/0017 (2417)
Wrong output for fuzzied solution in instance spider/race_track/0013 (2420)
	EXPECTED OUTPUT ====

		SELECT CLASS
		FROM race
		GROUP BY CLASS
		HAVING count(*) >= 2

	   class
	0  DP/GT
	1   P/GT
	ACTUAL OUTPUT ====

		
		SELECT CLASS
		FROM
		  (SELECT CLASS
		   FROM race INTERSECT SELECT CLASS
		   FROM race)
		ORDER BY CLASS

	         class
	0         DP/G
	1        DP/GT
	2   DP/GT)yXUz
	3   DP/GTfwsK7
	4   DP/GTno2FA
	5         P/GT
	6  auPDP/GTUBs
No solution for instance spider/race_track/0006 (2421)
Wrong output for fuzzied solution in instance spider/race_track/0012 (2423)
	EXPECTED OUTPUT ====

		SELECT CLASS
		FROM race
		GROUP BY CLASS
		ORDER BY count(*) DESC
		LIMIT 1

	   class
	0  DP/GT
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT CLASS
		FROM
		  (SELECT LHS.race_id AS race_id,
		          LHS.name AS name,
		          LHS.class AS CLASS,
		          LHS.date AS date,
		          LHS.track_id AS track_id,
		          RHS.race_id AS race_id_other
		   FROM race AS LHS
		   INNER JOIN
		     (SELECT race_id,
		             COUNT() AS n
		      FROM race
		      GROUP BY race_id) AS RHS ON (LHS.race_id = RHS.n))
		ORDER BY CLASS

	        class
	0  DP/GT)yXUz
Wrong output for fuzzied solution in instance spider/race_track/0015 (2424)
	EXPECTED OUTPUT ====

		SELECT name
		FROM track
		WHERE track_id NOT IN
		    (SELECT track_id
		     FROM race)

	                                   name
	0            (sFz5Martinsville Speedway
	1         2HX7XHomestead-Miami Speedway
	2            8lvL1Martinsville Speedway
	3                     Darlington Racewa
	4              Homestead-Miami Speedway
	5              Homestead-Miami Speedway
	6         Homestead-Miami SpeedwayPzfur
	7                 Martinsville Speedway
	8                 Martinsville Speedway
	9                 Martinsville Speedway
	10                Martinsville Speedway
	11                Martinsville Speedway
	12        Phoenix International Raceway
	13        Phoenix International Raceway
	14           QBwKBlfdV0bOXVE5FiZTexv4T5
	15        bVisaHomestead-Miami Speedway
	16          dSkMartinsville SpeedwayVZ9
	17        eKUmmoBFedjaqDjIqJnVMbQ2P9TAG
	18  nunPhoenix International RacewayQha
	19             oXEDarlington Raceway3)N
	20          ro3Martinsville SpeedwayxgA
	21           u Cw6HscWk (Pz9)Te5Fo7ZCwV
	22          vEa)6de6gWLusMV6oevQ0U0aWU4
	23           w4fKTMartinsville Speedway
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM track AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT LHS.track_id AS track_id,
		                     LHS.name AS name,
		                     LHS.location AS LOCATION,
		                     LHS.seating AS seating,
		                     LHS.year_opened AS year_opened,
		                     RHS.race_id AS race_id,
		                     RHS.name AS name_other,
		                     RHS.class AS CLASS,
		                     RHS.date AS date,
		                     RHS.track_id AS track_id_other
		              FROM track AS LHS
		              CROSS JOIN race AS RHS)
		           WHERE (track_id = track_id_other
		                  AND track_id = track_id_other)) AS RHS
		        WHERE (LHS.seating = RHS.seating
		               AND LHS.year_opened = RHS.year_opened) ))
		ORDER BY name

	                                   name
	0            (sFz5Martinsville Speedway
	1            8lvL1Martinsville Speedway
	2                     Darlington Racewa
	3              Homestead-Miami Speedway
	4              Homestead-Miami Speedway
	5         Homestead-Miami SpeedwayPzfur
	6                 Martinsville Speedway
	7                 Martinsville Speedway
	8                 Martinsville Speedway
	9                 Martinsville Speedway
	10                Martinsville Speedway
	11        Phoenix International Raceway
	12        Phoenix International Raceway
	13           QBwKBlfdV0bOXVE5FiZTexv4T5
	14        bVisaHomestead-Miami Speedway
	15          dSkMartinsville SpeedwayVZ9
	16        eKUmmoBFedjaqDjIqJnVMbQ2P9TAG
	17  nunPhoenix International RacewayQha
	18             oXEDarlington Raceway3)N
	19          ro3Martinsville SpeedwayxgA
	20          vEa)6de6gWLusMV6oevQ0U0aWU4
	21           w4fKTMartinsville Speedway
Wrong output for base solution in instance spider/race_track/0005 (2425)
	EXPECTED OUTPUT ====

	   min_seating_  max_seating_  avg_seating_
	0       63000.0      168000.0  91526.888889
	ACTUAL OUTPUT ====

		SELECT min(seating),
		       max(seating),
		       avg(seating)
		FROM track

	   min(seating)  max(seating)  avg(seating)
	0       63000.0      168000.0  91526.888889
Wrong output for ground truth in instance spider/race_track/0005 (2425)
No solution for instance spider/race_track/0018 (2426)
No solution for instance spider/race_track/0020 (2427)
Error while executing solution for instance spider/race_track/0019 (2428)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/race_track/0019 (2428)
Wrong output for fuzzied solution in instance spider/race_track/0007 (2429)
	EXPECTED OUTPUT ====

		SELECT DISTINCT LOCATION
		FROM track

	              location
	0  8C Homestead, FLRJC
	1    Bg(YSRidgeway, VA
	2        Homestead, FL
	3           Joliet, IL
	4          Ridgeway, V
	5         Ridgeway, VA
	6    Vv6kpRidgeway, VA
	7   lD9Ridgeway, VAawO
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM track
		ORDER BY LOCATION

	              location
	0  8C Homestead, FLRJC
	1    Bg(YSRidgeway, VA
	2        Homestead, FL
	3           Joliet, IL
	4          Ridgeway, V
	5          Ridgeway, V
	6         Ridgeway, VA
	7         Ridgeway, VA
	8    Vv6kpRidgeway, VA
	9   lD9Ridgeway, VAawO
No solution for instance spider/race_track/0014 (2431)
Wrong output for fuzzied solution in instance spider/local_govt_mdm/0002 (2435)
	EXPECTED OUTPUT ====

		SELECT T1.cmi_cross_ref_id,
		       T1.source_system_code
		FROM CMI_Cross_References AS T1
		JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id
		GROUP BY T1.cmi_cross_ref_id
		HAVING count(*) >= 1

	   cmi_cross_ref_id source_system_code
	0                 8      o5JnfBenefits
	1                59      Vv6kpBenefits
	2                60           TaxFZjIj
	3               100                Tax
	4               103            enefits
	ACTUAL OUTPUT ====

		
		SELECT cmi_cross_ref_id,
		       source_system_code
		FROM
		  (SELECT LHS.cmi_cross_ref_id AS cmi_cross_ref_id,
		          LHS.master_customer_id AS master_customer_id,
		          LHS.source_system_code AS source_system_code,
		          RHS.council_tax_id AS council_tax_id,
		          RHS.n AS n
		   FROM cmi_cross_references AS LHS
		   LEFT JOIN
		     (SELECT council_tax_id,
		             cmi_cross_ref_id,
		             COUNT(*) OVER () AS n
		      FROM council_tax) AS RHS ON (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id))
		WHERE (n != 1)
		ORDER BY cmi_cross_ref_id

	   cmi_cross_ref_id source_system_code
	0                 8      o5JnfBenefits
	1                59      Vv6kpBenefits
	2                60           TaxFZjIj
	3               100                Tax
	4               100                Tax
	5               103            enefits
Wrong output for fuzzied solution in instance spider/local_govt_mdm/0003 (2437)
	EXPECTED OUTPUT ====

		SELECT T2.cmi_cross_ref_id,
		       T2.master_customer_id,
		       count(*)
		FROM Business_Rates AS T1
		JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id
		GROUP BY T2.cmi_cross_ref_id

	   cmi_cross_ref_id  master_customer_id  count(*)
	0                 7                   1         1
	1                 8                   7         1
	2               100                   6         2
	3               101                   8         1
	4               103                   3         1
	5               106                   1         2
	ACTUAL OUTPUT ====

		
		SELECT cmi_cross_ref_id,
		       master_customer_id,
		       n AS count___
		FROM
		  (SELECT LHS.business_rates_id AS business_rates_id,
		          LHS.cmi_cross_ref_id AS cmi_cross_ref_id,
		          RHS.master_customer_id AS master_customer_id,
		          RHS.n AS n
		   FROM business_rates AS LHS
		   LEFT JOIN
		     (SELECT cmi_cross_ref_id,
		             master_customer_id,
		             COUNT() AS n
		      FROM cmi_cross_references
		      GROUP BY cmi_cross_ref_id,
		               master_customer_id) AS RHS ON (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id))
		ORDER BY cmi_cross_ref_id

	   cmi_cross_ref_id  master_customer_id  count___
	0                 7                   1         1
	1                 8                   7         1
	2               100                   6         1
	3               100                   6         1
	4               101                   8         1
	5               103                   3         1
	6               106                   1         1
	7               106                   1         1
Wrong output for fuzzied solution in instance spider/local_govt_mdm/0006 (2439)
	EXPECTED OUTPUT ====

		SELECT T1.council_tax_id
		FROM Rent_Arrears AS T1
		JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id
		JOIN Customer_Master_Index AS T3 ON T3.master_customer_id = T2.master_customer_id
		WHERE T3.cmi_details != 'Schmidt ,  Kertzmann and Lubowitz'

	     council_tax_id
	0       -9976443900
	1       -9790230047
	2       -8851594596
	3       -8734621848
	4       -7456534081
	..              ...
	109      9210710380
	110      9595575985
	111      9738324386
	112      9893510462
	113      9988654868
	
	[114 rows x 1 columns]
	ACTUAL OUTPUT ====

		
		SELECT council_tax_id
		FROM
		  (SELECT LHS.master_customer_id AS master_customer_id,
		          LHS.cmi_details AS cmi_details,
		          LHS.cmi_cross_ref_id AS cmi_cross_ref_id,
		          LHS.source_system_code AS source_system_code,
		          RHS.council_tax_id AS council_tax_id
		   FROM
		     (SELECT LHS.master_customer_id AS master_customer_id,
		             LHS.cmi_details AS cmi_details,
		             RHS.cmi_cross_ref_id AS cmi_cross_ref_id,
		             RHS.source_system_code AS source_system_code
		      FROM customer_master_index AS LHS
		      INNER JOIN cmi_cross_references AS RHS ON (LHS.master_customer_id = RHS.master_customer_id)) AS LHS
		   INNER JOIN rent_arrears AS RHS ON (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id))
		ORDER BY council_tax_id

	     council_tax_id
	0       -9976443900
	1       -9790230047
	2       -8851594596
	3       -8734621848
	4       -7456534081
	..              ...
	113      9210710380
	114      9595575985
	115      9738324386
	116      9893510462
	117      9988654868
	
	[118 rows x 1 columns]
No solution for instance spider/local_govt_mdm/0014 (2444)
Wrong output for fuzzied solution in instance spider/company_1/0003 (2449)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM dependent
		WHERE sex = 'F'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `sex`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `dependent`
		      WHERE (`sex` = 'F'))
		   GROUP BY sex)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/company_1/0006 (2450)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       sex
		FROM employee
		WHERE salary < 50000
		GROUP BY sex

	   count(*)     sex
	0         1  )tHz)F
	1         1  3slRTM
	2         1  XUhADF
	3         3       F
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       sex
		FROM
		  (SELECT sex,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM employee
		      WHERE (salary <= 50000))
		   GROUP BY sex)
		ORDER BY count___

	   count___     sex
	0         1  )tHz)F
	1         1  3slRTM
	2         1  XUhADF
	3         4       F
Wrong output for fuzzied solution in instance spider/soccer_1/0002 (2455)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Country AS T1
		JOIN League AS T2 ON T1.id = T2.country_id
		WHERE T1.name = "England"

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `id` AS `count___`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`country_id` AS `country_id`,
		          `LHS`.`name` AS `name`,
		          `RHS`.`name` AS `name_other`
		   FROM
		     (SELECT *
		      FROM `league`
		      WHERE (`name` != 'England')) AS LHS
		   INNER JOIN
		     (SELECT name,
		             COUNT() AS n
		      FROM country
		      GROUP BY name) AS RHS ON (LHS.country_id = RHS.n))
		ORDER BY count___

	   count___
	0     10257
No solution for instance spider/soccer_1/0008 (2456)
No solution for instance spider/soccer_1/0003 (2457)
No solution for instance spider/soccer_1/0013 (2458)
No solution for instance spider/soccer_1/0006 (2459)
No solution for instance spider/soccer_1/0004 (2460)
No solution for instance spider/soccer_1/0012 (2461)
No solution for instance spider/soccer_1/0005 (2462)
No solution for instance spider/soccer_1/0007 (2463)
Error while executing solution for instance spider/soccer_1/0001 (2464)

The column label 'name' is not unique.
Error while checking ground truth in instance spider/soccer_1/0001 (2464)
No solution for instance spider/soccer_1/0014 (2465)
No solution for instance spider/soccer_1/0009 (2466)
No solution for instance spider/soccer_1/0011 (2467)
No solution for instance spider/soccer_1/0010 (2468)
No solution for instance spider/cre_Drama_Workshop_Groups/0033 (2469)
No solution for instance spider/cre_Drama_Workshop_Groups/0037 (2470)
Wrong output for fuzzied solution in instance spider/cre_Drama_Workshop_Groups/0036 (2472)
	EXPECTED OUTPUT ====

		SELECT Status_Code
		FROM BOOKINGS
		GROUP BY Status_Code
		ORDER BY count(*) DESC
		LIMIT 1

	  status_code
	0        good
	ACTUAL OUTPUT ====

		
		SELECT status_code
		FROM
		  (SELECT planned_delivery_date,
		          status_code,
		          COUNT() AS n
		   FROM
		     (SELECT booking_id,
		             customer_id,
		             workshop_group_id,
		             status_code,
		             booking_id AS store_id,
		             order_date,
		             planned_delivery_date,
		             actual_delivery_date,
		             other_order_details,
		             booking_id_other,
		             customer_id_other,
		             status_code_other,
		             order_date_other,
		             planned_delivery_date_other,
		             actual_delivery_date_other,
		             other_order_details_other
		      FROM
		        (SELECT LHS.booking_id AS booking_id,
		                LHS.customer_id AS customer_id,
		                LHS.workshop_group_id AS workshop_group_id,
		                LHS.status_code AS status_code,
		                LHS.store_id AS store_id,
		                LHS.order_date AS order_date,
		                LHS.planned_delivery_date AS planned_delivery_date,
		                LHS.actual_delivery_date AS actual_delivery_date,
		                LHS.other_order_details AS other_order_details,
		                RHS.booking_id AS booking_id_other,
		                RHS.customer_id AS customer_id_other,
		                RHS.status_code AS status_code_other,
		                RHS.order_date AS order_date_other,
		                RHS.planned_delivery_date AS planned_delivery_date_other,
		                RHS.actual_delivery_date AS actual_delivery_date_other,
		                RHS.other_order_details AS other_order_details_other
		         FROM bookings AS LHS
		         INNER JOIN bookings AS RHS ON (LHS.booking_id = RHS.store_id
		                                           AND LHS.workshop_group_id = RHS.workshop_group_id)))
		   GROUP BY planned_delivery_date,
		            status_code)
		ORDER BY status_code

	  status_code
	0         goo
No solution for instance spider/cre_Drama_Workshop_Groups/0017 (2473)
No solution for instance spider/cre_Drama_Workshop_Groups/0039 (2475)
No solution for instance spider/cre_Drama_Workshop_Groups/0038 (2476)
No solution for instance spider/cre_Drama_Workshop_Groups/0027 (2478)
No solution for instance spider/cre_Drama_Workshop_Groups/0026 (2485)
Wrong output for fuzzied solution in instance spider/cre_Drama_Workshop_Groups/0015 (2486)
	EXPECTED OUTPUT ====

		SELECT payment_method_code
		FROM INVOICES
		GROUP BY payment_method_code
		ORDER BY count(*) DESC
		LIMIT 1

	  payment_method_code
	0          MasterCard
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT payment_method_code
		FROM
		  (SELECT invoice_id,
		          order_item_id AS order_id,
		          payment_method_code,
		          product_id,
		          order_quantity,
		          other_item_details,
		          order_item_id,
		          invoice_id_other,
		          payment_method_code_other,
		          order_quantity_other,
		          other_item_details_other,
		          order_item_id_other
		   FROM
		     (SELECT invoice_id,
		             order_id,
		             payment_method_code,
		             order_id AS product_id,
		             order_quantity,
		             other_item_details,
		             order_item_id,
		             invoice_id_other,
		             payment_method_code_other,
		             order_quantity_other,
		             other_item_details_other,
		             order_item_id_other
		      FROM
		        (SELECT LHS.invoice_id AS invoice_id,
		                LHS.order_id AS order_id,
		                LHS.payment_method_code AS payment_method_code,
		                LHS.product_id AS product_id,
		                LHS.order_quantity AS order_quantity,
		                LHS.other_item_details AS other_item_details,
		                LHS.order_item_id AS order_item_id,
		                RHS.invoice_id AS invoice_id_other,
		                RHS.payment_method_code AS payment_method_code_other,
		                RHS.order_quantity AS order_quantity_other,
		                RHS.other_item_details AS other_item_details_other,
		                RHS.order_item_id AS order_item_id_other
		         FROM invoices AS LHS
		         INNER JOIN invoices AS RHS ON (LHS.order_id = RHS.product_id
		                                           AND LHS.order_item_id = RHS.order_id))))
		ORDER BY payment_method_code

	Empty DataFrame
	Columns: [payment_method_code]
	Index: []
No solution for instance spider/cre_Drama_Workshop_Groups/0016 (2488)
No solution for instance spider/cre_Drama_Workshop_Groups/0032 (2489)
No solution for instance spider/cre_Drama_Workshop_Groups/0041 (2491)
No solution for instance spider/cre_Drama_Workshop_Groups/0035 (2492)
Wrong output for fuzzied solution in instance spider/cre_Drama_Workshop_Groups/0019 (2494)
	EXPECTED OUTPUT ====

		SELECT T1.Service_Type_Description
		FROM Ref_Service_Types AS T1
		JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code
		WHERE T2.Product_Price > 100

	         service_type_description
	0          provide dinning servic
	1          provide dinning servic
	2         provide dinning service
	3         provide dinning service
	4         provide dinning service
	5         provide dinning service
	6         provide dinning service
	7         provide dinning service
	8           provide photo service
	9           provide photo service
	10          provide photo service
	11          provide photo service
	12          provide photo service
	13          provide photo service
	14          provide photo service
	15          provide photo service
	16  q)kprovide dinning serviceYHY
	17         rovide dinning service
	18         rovide dinning service
	19         rovide dinning service
	ACTUAL OUTPUT ====

		
		SELECT service_type_description
		FROM
		  (SELECT LHS.service_type_code AS service_type_code,
		          LHS.parent_service_type_code AS parent_service_type_code,
		          LHS.service_type_description AS service_type_description,
		          RHS.service_id AS service_id,
		          RHS.workshop_group_id AS workshop_group_id,
		          RHS.product_description AS product_description,
		          RHS.product_name AS product_name,
		          RHS.product_price AS product_price,
		          RHS.other_product_service_details AS other_product_service_details
		   FROM ref_service_types AS LHS
		   INNER JOIN services AS RHS ON (LHS.service_type_code = RHS.service_type_code))
		WHERE (product_price >= 100.0)
		ORDER BY service_type_description

	         service_type_description
	0          provide dinning servic
	1          provide dinning servic
	2          provide dinning servic
	3         provide dinning service
	4         provide dinning service
	5         provide dinning service
	6         provide dinning service
	7         provide dinning service
	8         provide dinning service
	9         provide dinning service
	10          provide photo service
	11          provide photo service
	12          provide photo service
	13          provide photo service
	14          provide photo service
	15          provide photo service
	16          provide photo service
	17          provide photo service
	18          provide photo service
	19          provide photo service
	20          provide photo service
	21  q)kprovide dinning serviceYHY
	22         rovide dinning service
	23         rovide dinning service
	24         rovide dinning service
No solution for instance spider/cre_Drama_Workshop_Groups/0007 (2495)
Wrong output for base solution in instance spider/cre_Drama_Workshop_Groups/0034 (2496)
	EXPECTED OUTPUT ====

		SELECT Marketing_Region_Code
		FROM Drama_Workshop_Groups
		GROUP BY Marketing_Region_Code
		ORDER BY count(*) DESC
		LIMIT 1

	  marketing_region_code
	0                    RU
	ACTUAL OUTPUT ====

		
		SELECT marketing_region_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT marketing_region_code,
		                other_details,
		                COUNT() AS n
		         FROM drama_workshop_groups
		         GROUP BY marketing_region_code,
		                  other_details)
		      ORDER BY other_details)
		   LIMIT 1)

	  marketing_region_code
	0                    DE
Wrong output for base solution in instance spider/cre_Drama_Workshop_Groups/0024 (2497)
	EXPECTED OUTPUT ====

	  product_name  avg_product_price_
	0      dinning        2.387043e+05
	1        photo        5.102692e+06
	2         film        1.138552e+07
	ACTUAL OUTPUT ====

		SELECT Product_Name,
		       avg(Product_Price)
		FROM PRODUCTS
		GROUP BY Product_Name

	  product_name  avg(product_price)
	0      dinning        2.387043e+05
	1         film        1.138552e+07
	2        photo        5.102692e+06
Wrong output for ground truth in instance spider/cre_Drama_Workshop_Groups/0024 (2497)
No solution for instance spider/cre_Drama_Workshop_Groups/0021 (2498)
No solution for instance spider/cre_Drama_Workshop_Groups/0029 (2505)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for fuzzied solution in instance spider/cre_Drama_Workshop_Groups/0040 (2507)
	EXPECTED OUTPUT ====

		SELECT Product_ID
		FROM INVOICES
		GROUP BY Product_ID
		ORDER BY COUNT(*) DESC
		LIMIT 1

	   product_id
	0           7
	ACTUAL OUTPUT ====

		
		SELECT product_id
		FROM
		  (SELECT LHS.invoice_id AS invoice_id,
		          LHS.order_id AS order_id,
		          LHS.payment_method_code AS payment_method_code,
		          LHS.product_id AS product_id,
		          LHS.order_quantity AS order_quantity,
		          LHS.other_item_details AS other_item_details,
		          LHS.order_item_id AS order_item_id,
		          RHS.order_quantity AS order_quantity_other
		   FROM invoices AS LHS
		   INNER JOIN
		     (SELECT invoice_id,
		             order_quantity,
		             COUNT() AS n
		      FROM invoices
		      GROUP BY invoice_id,
		               order_quantity) AS RHS ON (LHS.invoice_id = RHS.invoice_id
		                                          AND LHS.order_id = RHS.n))
		ORDER BY product_id

	   product_id
	0           1
	1           3
	2           4
No solution for instance spider/cre_Drama_Workshop_Groups/0031 (2509)
Wrong output for fuzzied solution in instance spider/assets_maintenance/0017 (2511)
	EXPECTED OUTPUT ====

		SELECT asset_acquired_date
		FROM Assets
		ORDER BY asset_acquired_date ASC
		LIMIT 1

	   asset_acquired_date
	0  1832-01-09 18:25:30
	ACTUAL OUTPUT ====

		
		SELECT asset_acquired_date
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM assets
		      ORDER BY asset_model)
		   LIMIT 1)

	   asset_acquired_date
	0  1882-11-30 08:35:27
Wrong output for fuzzied solution in instance spider/assets_maintenance/0003 (2513)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.company_id
		FROM Third_Party_Companies AS T1
		JOIN Assets AS T2 ON T1.company_id = T2.supplier_company_id
		GROUP BY T1.company_id

	   count(*)  company_id
	0        10           3
	1        11           8
	2         6          10
	3        10          12
	4         7          14
	ACTUAL OUTPUT ====

		
		SELECT company_id AS count___,
		       supplier_company_id AS company_id
		FROM
		  (SELECT LHS.company_id AS company_id,
		          LHS.company_type AS company_type,
		          LHS.company_name AS company_name,
		          LHS.company_address AS company_address,
		          LHS.other_company_details AS other_company_details,
		          RHS.supplier_company_id AS supplier_company_id
		   FROM third_party_companies AS LHS
		   INNER JOIN
		     (SELECT supplier_company_id,
		             COUNT() AS n
		      FROM assets
		      GROUP BY supplier_company_id) AS RHS ON (LHS.company_id = RHS.n))
		ORDER BY count___

	   count___  company_id
	0        10           3
	1        10          12
Wrong output for fuzzied solution in instance spider/assets_maintenance/0027 (2514)
	EXPECTED OUTPUT ====

		SELECT T1.company_name
		FROM Third_Party_Companies AS T1
		JOIN Maintenance_Contracts AS T2 ON T1.company_id = T2.maintenance_contract_company_id
		ORDER BY T2.contract_start_date ASC
		LIMIT 1

	        company_name
	0  Greenholt-D'Amore
	ACTUAL OUTPUT ====

		
		SELECT company_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT company_id,
		                company_type,
		                company_name,
		                company_address,
		                other_company_details,
		                maintenance_contract_id,
		                contract_start_date,
		                contract_end_date,
		                other_contract_details,
		                company_id AS maintenance_contract_company_id
		         FROM
		           (SELECT LHS.company_id AS company_id,
		                   LHS.company_type AS company_type,
		                   LHS.company_name AS company_name,
		                   LHS.company_address AS company_address,
		                   LHS.other_company_details AS other_company_details,
		                   RHS.maintenance_contract_id AS maintenance_contract_id,
		                   RHS.contract_start_date AS contract_start_date,
		                   RHS.contract_end_date AS contract_end_date,
		                   RHS.other_contract_details AS other_contract_details
		            FROM third_party_companies AS LHS
		            INNER JOIN maintenance_contracts AS RHS ON (LHS.company_id = RHS.maintenance_contract_company_id)))
		      ORDER BY maintenance_contract_id DESC)
		   LIMIT 1)

	      company_name
	0  Dooley and Sons
Wrong output for fuzzied solution in instance spider/assets_maintenance/0022 (2515)
	EXPECTED OUTPUT ====

		SELECT T1.fault_log_entry_id,
		       T1.fault_description,
		       T1.fault_log_entry_datetime
		FROM Fault_Log AS T1
		JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id
		GROUP BY T1.fault_log_entry_id
		ORDER BY count(*) DESC
		LIMIT 1

	   fault_log_entry_id fault_description fault_log_entry_datetime
	0                  14      system error      2018-03-06 18:13:24
	ACTUAL OUTPUT ====

		
		SELECT n AS fault_log_entry_id,
		       fault_description,
		       fault_log_entry_datetime
		FROM
		  (SELECT fault_log_entry_id,
		          asset_id,
		          recorded_by_staff_id,
		          fault_log_entry_datetime,
		          fault_description,
		          other_fault_details,
		          fault_status,
		          fault_log_entry_id AS n
		   FROM
		     (SELECT LHS.fault_log_entry_id AS fault_log_entry_id,
		             LHS.asset_id AS asset_id,
		             LHS.recorded_by_staff_id AS recorded_by_staff_id,
		             LHS.fault_log_entry_datetime AS fault_log_entry_datetime,
		             LHS.fault_description AS fault_description,
		             LHS.other_fault_details AS other_fault_details,
		             RHS.fault_status AS fault_status
		      FROM fault_log AS LHS
		      INNER JOIN
		        (SELECT fault_log_entry_id,
		                fault_status,
		                COUNT() AS n
		         FROM fault_log_parts
		         GROUP BY fault_log_entry_id,
		                  fault_status) AS RHS ON (LHS.fault_log_entry_id = RHS.n
		                                           AND LHS.recorded_by_staff_id = RHS.fault_log_entry_id)))
		ORDER BY fault_log_entry_id

	Empty DataFrame
	Columns: [fault_log_entry_id, fault_description, fault_log_entry_datetime]
	Index: []
Wrong output for fuzzied solution in instance spider/assets_maintenance/0030 (2516)
	EXPECTED OUTPUT ====

		SELECT T1.staff_name,
		       count(*)
		FROM Staff AS T1
		JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id
		GROUP BY T1.staff_name

	    staff_name  count(*)
	0       Rodger         2
	1        owell         2
	2  Howell)voPW         3
	3        Cyrus         6
	ACTUAL OUTPUT ====

		
		SELECT staff_name,
		       n AS count___
		FROM
		  (SELECT LHS.staff_id AS staff_id,
		          LHS.staff_name AS staff_name,
		          LHS.gender AS gender,
		          LHS.other_staff_details AS other_staff_details,
		          RHS.other_visit_details AS other_visit_details,
		          RHS.n AS n
		   FROM staff AS LHS
		   INNER JOIN
		     (SELECT contact_staff_id,
		             other_visit_details,
		             COUNT() AS n
		      FROM engineer_visits
		      GROUP BY contact_staff_id,
		               other_visit_details) AS RHS ON (LHS.staff_id = RHS.contact_staff_id))
		ORDER BY staff_name

	     staff_name  count___
	0         Cyrus         1
	1         Cyrus         1
	2         Cyrus         1
	3         Cyrus         1
	4         Cyrus         1
	5         Cyrus         1
	6   Howell)voPW         1
	7   Howell)voPW         1
	8   Howell)voPW         1
	9        Rodger         1
	10       Rodger         1
	11        owell         1
	12        owell         1
Wrong output for fuzzied solution in instance spider/assets_maintenance/0013 (2517)
	EXPECTED OUTPUT ====

		SELECT DISTINCT last_name
		FROM Maintenance_Engineers

	       last_name
	0     9hfR5Stamm
	1           Adam
	2          Adams
	3          Grady
	4       Orn3jbkx
	5       OrnTa0Dh
	6        Simonis
	7          Stamm
	8  r)KSimonisYcu
	ACTUAL OUTPUT ====

		
		SELECT last_name
		FROM maintenance_engineers
		ORDER BY last_name

	        last_name
	0      9hfR5Stamm
	1            Adam
	2           Adams
	3           Grady
	4           Grady
	5        Orn3jbkx
	6        OrnTa0Dh
	7         Simonis
	8         Simonis
	9           Stamm
	10          Stamm
	11  r)KSimonisYcu
No solution for instance spider/assets_maintenance/0006 (2518)
No solution for instance spider/assets_maintenance/0004 (2519)
Wrong output for fuzzied solution in instance spider/assets_maintenance/0012 (2520)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.fault_log_entry_id
		FROM Fault_Log AS T1
		JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id
		GROUP BY T1.fault_log_entry_id
		ORDER BY count(*) DESC
		LIMIT 1

	   count(*)  fault_log_entry_id
	0         3                   2
	ACTUAL OUTPUT ====

		
		SELECT asset_id AS count___,
		       recorded_by_staff_id AS fault_log_entry_id
		FROM
		  (SELECT fault_log_entry_id,
		          asset_id,
		          recorded_by_staff_id,
		          fault_log_entry_datetime,
		          fault_description,
		          other_fault_details,
		          asset_id AS n
		   FROM
		     (SELECT LHS.fault_log_entry_id AS fault_log_entry_id,
		             LHS.asset_id AS asset_id,
		             LHS.recorded_by_staff_id AS recorded_by_staff_id,
		             LHS.fault_log_entry_datetime AS fault_log_entry_datetime,
		             LHS.fault_description AS fault_description,
		             LHS.other_fault_details AS other_fault_details
		      FROM fault_log AS LHS
		      INNER JOIN
		        (SELECT fault_log_entry_id,
		                COUNT() AS n
		         FROM engineer_visits
		         GROUP BY fault_log_entry_id) AS RHS ON (LHS.asset_id = RHS.n
		                                                 AND LHS.recorded_by_staff_id = RHS.fault_log_entry_id)))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___, fault_log_entry_id]
	Index: []
Wrong output for fuzzied solution in instance spider/assets_maintenance/0026 (2521)
	EXPECTED OUTPUT ====

		SELECT part_id,
		       chargeable_amount
		FROM Parts
		ORDER BY chargeable_amount ASC
		LIMIT 1

	   part_id chargeable_amount
	0       -1                  
	ACTUAL OUTPUT ====

		
		SELECT part_id,
		       chargeable_amount
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM parts
		      ORDER BY chargeable_yn)
		   LIMIT 1)

	   part_id chargeable_amount
	0        0                 9
No solution for instance spider/assets_maintenance/0005 (2523)
Wrong output for fuzzied solution in instance spider/assets_maintenance/0018 (2525)
	EXPECTED OUTPUT ====

		SELECT T1.part_id,
		       T1.part_name
		FROM Parts AS T1
		JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id
		JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id = T3.part_fault_id
		GROUP BY T1.part_id
		ORDER BY count(*) DESC
		LIMIT 1

	   part_id part_name
	0        0    middle
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT part_id,
		                part_name
		FROM
		  (SELECT LHS.part_fault_id AS part_fault_id,
		          LHS.part_id AS part_id,
		          LHS.fault_short_name AS fault_short_name,
		          LHS.fault_description AS fault_description,
		          LHS.other_fault_details AS other_fault_details,
		          LHS.skill_id AS skill_id,
		          RHS.part_name AS part_name,
		          RHS.chargeable_yn AS chargeable_yn,
		          RHS.chargeable_amount AS chargeable_amount,
		          RHS.other_part_details AS other_part_details,
		          RHS.part_id_other AS part_id_other,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.part_fault_id AS part_fault_id,
		             LHS.part_id AS part_id,
		             LHS.fault_short_name AS fault_short_name,
		             LHS.fault_description AS fault_description,
		             LHS.other_fault_details AS other_fault_details,
		             RHS.skill_id AS skill_id
		      FROM part_faults AS LHS
		      INNER JOIN skills_required_to_fix AS RHS ON (LHS.part_fault_id = RHS.part_fault_id)) AS LHS
		   INNER JOIN
		     (SELECT part_id,
		             part_name,
		             chargeable_yn,
		             chargeable_amount,
		             other_part_details,
		             part_id_other,
		             part_id AS n
		      FROM
		        (SELECT LHS.part_id AS part_id,
		                LHS.part_name AS part_name,
		                LHS.chargeable_yn AS chargeable_yn,
		                LHS.chargeable_amount AS chargeable_amount,
		                LHS.other_part_details AS other_part_details,
		                RHS.part_id AS part_id_other
		         FROM parts AS LHS
		         INNER JOIN
		           (SELECT part_id,
		                   COUNT() AS n
		            FROM parts
		            GROUP BY part_id) AS RHS ON (LHS.part_id = RHS.n))) AS RHS ON (LHS.part_id = RHS.part_id))
		ORDER BY part_id

	   part_id     part_name
	0        1  )W4fZpackage
No solution for instance spider/assets_maintenance/0020 (2526)
Wrong output for fuzzied solution in instance spider/assets_maintenance/0019 (2527)
	EXPECTED OUTPUT ====

		SELECT T1.part_name
		FROM Parts AS T1
		JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id
		GROUP BY T1.part_name
		ORDER BY count(*) ASC
		LIMIT 1

	      part_name
	0  )W4fZpackage
	ACTUAL OUTPUT ====

		
		SELECT part_name
		FROM
		  (SELECT LHS.part_id AS part_id,
		          LHS.part_name AS part_name,
		          LHS.chargeable_yn AS chargeable_yn,
		          LHS.chargeable_amount AS chargeable_amount,
		          LHS.other_part_details AS other_part_details,
		          RHS.other_fault_details AS other_fault_details,
		          RHS.part_id AS part_id_other
		   FROM parts AS LHS
		   INNER JOIN
		     (SELECT other_fault_details,
		             part_id,
		             COUNT() AS n
		      FROM part_faults
		      GROUP BY other_fault_details,
		               part_id) AS RHS ON (LHS.part_id = RHS.n))
		ORDER BY part_name

	       part_name
	0   )W4fZpackage
	1   )W4fZpackage
	2   )W4fZpackage
	3   )W4fZpackage
	4   )W4fZpackage
	5   )W4fZpackage
	6   )W4fZpackage
	7   )W4fZpackage
	8   )W4fZpackage
	9   )W4fZpackage
	10  )W4fZpackage
	11  )W4fZpackage
	12  )W4fZpackage
	13  )W4fZpackage
No solution for instance spider/assets_maintenance/0007 (2528)
Wrong output for fuzzied solution in instance spider/assets_maintenance/0024 (2529)
	EXPECTED OUTPUT ====

		SELECT DISTINCT asset_model
		FROM Assets

	  asset_model
	0       08 yy
	1        1 wi
	2  11 witdQv1
	3  4exws07 yt
	4        6 xm
	5        66 x
	6       66 xm
	7        7 yt
	8  lQtTS08 yy
	ACTUAL OUTPUT ====

		
		SELECT asset_model
		FROM assets
		ORDER BY asset_model

	   asset_model
	0        08 yy
	1         1 wi
	2   11 witdQv1
	3   4exws07 yt
	4         6 xm
	5         66 x
	6         66 x
	7        66 xm
	8        66 xm
	9         7 yt
	10  lQtTS08 yy
No solution for instance spider/assets_maintenance/0021 (2530)
Wrong output for fuzzied solution in instance spider/assets_maintenance/0023 (2531)
	EXPECTED OUTPUT ====

		SELECT T1.skill_id,
		       T1.skill_description
		FROM Skills AS T1
		JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id = T2.skill_id
		GROUP BY T1.skill_id
		ORDER BY count(*) DESC
		LIMIT 1

	   skill_id skill_description
	0         0  3tjMechanicalBy0
	ACTUAL OUTPUT ====

		
		SELECT skill_id,
		       skill_description
		FROM
		  (SELECT LHS.skill_id AS skill_id,
		          LHS.skill_code AS skill_code,
		          LHS.skill_description AS skill_description,
		          RHS.skill_id AS skill_id_other
		   FROM skills AS LHS
		   INNER JOIN
		     (SELECT skill_id,
		             COUNT() AS n
		      FROM skills_required_to_fix
		      GROUP BY skill_id) AS RHS ON (LHS.skill_id = RHS.n))
		ORDER BY skill_id

	Empty DataFrame
	Columns: [skill_id, skill_description]
	Index: []
No solution for instance spider/assets_maintenance/0001 (2532)
Wrong output for fuzzied solution in instance spider/assets_maintenance/0029 (2537)
	EXPECTED OUTPUT ====

		SELECT gender
		FROM staff
		GROUP BY gender
		ORDER BY count(*) DESC
		LIMIT 1

	  gender
	0      2
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT gender
		FROM
		  (SELECT LHS.staff_id AS staff_id,
		          LHS.staff_name AS staff_name,
		          LHS.gender AS gender,
		          LHS.other_staff_details AS other_staff_details,
		          RHS.other_staff_details AS other_staff_details_other
		   FROM staff AS LHS
		   INNER JOIN
		     (SELECT gender,
		             other_staff_details,
		             COUNT() AS n
		      FROM staff
		      GROUP BY gender,
		               other_staff_details) AS RHS ON (LHS.staff_id = RHS.n
		                                               AND LHS.gender = RHS.gender))
		ORDER BY gender

	Empty DataFrame
	Columns: [gender]
	Index: []
Wrong output for fuzzied solution in instance spider/assets_maintenance/0010 (2538)
	EXPECTED OUTPUT ====

		SELECT T1.part_name,
		       count(*)
		FROM Parts AS T1
		JOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id
		GROUP BY T1.part_name

	      part_name  count(*)
	0       package        25
	1   middleWAprR        27
	2   dxa2Imiddle        29
	3  )W4fZpackage        30
	4        middle        81
	ACTUAL OUTPUT ====

		
		SELECT part_name,
		       n AS count___
		FROM
		  (SELECT LHS.part_id AS part_id,
		          LHS.n AS n,
		          RHS.part_name AS part_name,
		          RHS.chargeable_yn AS chargeable_yn,
		          RHS.chargeable_amount AS chargeable_amount,
		          RHS.other_part_details AS other_part_details
		   FROM
		     (SELECT part_id,
		             COUNT() AS n
		      FROM asset_parts
		      GROUP BY part_id) AS LHS
		   LEFT JOIN parts AS RHS ON (LHS.part_id = RHS.part_id))
		ORDER BY part_name

	      part_name  count___
	0       package        25
	1        middle        26
	2        middle        26
	3   middleWAprR        27
	4   dxa2Imiddle        29
	5        middle        29
	6  )W4fZpackage        30
No solution for instance spider/company_office/0017 (2541)
No solution for instance spider/company_office/0006 (2545)
No solution for instance spider/company_office/0012 (2547)
Wrong output for base solution in instance spider/company_office/0005 (2549)
	EXPECTED OUTPUT ====

	   avg_profits_billion_
	0             17.063158
	ACTUAL OUTPUT ====

		SELECT avg(Profits_billion)
		FROM Companies

	   avg(profits_billion)
	0             17.063158
Wrong output for ground truth in instance spider/company_office/0005 (2549)
Wrong output for fuzzied solution in instance spider/company_office/0016 (2550)
	EXPECTED OUTPUT ====

		SELECT Industry
		FROM Companies
		GROUP BY Industry
		ORDER BY COUNT(*) DESC
		LIMIT 1

	      industry
	0  Oil and gas
	ACTUAL OUTPUT ====

		
		SELECT industry
		FROM
		  (SELECT LHS.profits_billion AS profits_billion,
		          LHS.sales_billion AS sales_billion,
		          LHS.n AS n,
		          RHS.name AS name,
		          RHS.headquarters AS headquarters,
		          RHS.industry AS industry,
		          RHS.profits_billion AS profits_billion_other,
		          RHS.assets_billion AS assets_billion,
		          RHS.market_value_billion AS market_value_billion
		   FROM
		     (SELECT profits_billion,
		             sales_billion,
		             COUNT() AS n
		      FROM companies
		      GROUP BY profits_billion,
		               sales_billion) AS LHS
		   INNER JOIN companies AS RHS ON (LHS.n = RHS.id
		                                      AND LHS.sales_billion = RHS.sales_billion))
		ORDER BY industry

	Empty DataFrame
	Columns: [industry]
	Index: []
Wrong output for fuzzied solution in instance spider/company_office/0018 (2551)
	EXPECTED OUTPUT ====

		SELECT Industry
		FROM Companies
		WHERE Headquarters = "USA" INTERSECT
		  SELECT Industry
		  FROM Companies WHERE Headquarters = "China"

	Empty DataFrame
	Columns: [industry]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `industry`
		FROM `companies`
		WHERE (`headquarters` != 'USA'
		       AND `headquarters` = 'China')
		ORDER BY industry

	            industry
	0  elecommunications
	1  hKhlVTo)4JehIRSFJ
Error while executing solution for instance spider/company_office/0007 (2554)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT industry) OVER () AS count_distinct_industry_
FROM companies
ORDER BY count_distinct_industry_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/company_office/0009 (2557)
	EXPECTED OUTPUT ====

		SELECT Stories
		FROM buildings
		ORDER BY Height DESC
		LIMIT 1

	   stories
	0       61
	ACTUAL OUTPUT ====

		
		SELECT stories
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM buildings
		      ORDER BY name DESC)
		   LIMIT 1)

	   stories
	0       19
No solution for instance spider/company_office/0011 (2558)
Error while executing solution for instance spider/company_office/0010 (2559)

The column label 'name' is not unique.
Error while checking ground truth in instance spider/company_office/0010 (2559)
Wrong output for fuzzied solution in instance spider/college_1/0056 (2560)
	EXPECTED OUTPUT ====

		SELECT T1.crs_code
		FROM CLASS AS T1
		JOIN enroll AS T2 ON T1.class_code = T2.class_code
		JOIN student AS T3 ON T3.stu_num = T2.stu_num
		WHERE T3.stu_lname = 'Smithson'

	         crs_code
	0      MH5kQM-362
	1      MH5kQM-362
	2      MH5kQM-362
	3      MH5kQM-362
	4      MH5kQM-362
	..            ...
	505   z577eQM-362
	506  zFJQM-362l0Y
	507  zFJQM-362l0Y
	508  zFJQM-362l0Y
	509  zFJQM-362l0Y
	
	[510 rows x 1 columns]
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `crs_code`
		FROM
		  (SELECT `LHS`.`class_code` AS `class_code`,
		          `LHS`.`crs_code` AS `crs_code`,
		          `LHS`.`class_section` AS `class_section`,
		          `LHS`.`class_time` AS `class_time`,
		          `LHS`.`class_room` AS `class_room`,
		          `LHS`.`prof_num` AS `prof_num`,
		          `LHS`.`stu_num` AS `stu_num`,
		          `LHS`.`enroll_grade` AS `enroll_grade`,
		          `RHS`.`stu_lname` AS `stu_lname`
		   FROM
		     (SELECT `LHS`.`class_code` AS `class_code`,
		             `LHS`.`crs_code` AS `crs_code`,
		             `LHS`.`class_section` AS `class_section`,
		             `LHS`.`class_time` AS `class_time`,
		             `LHS`.`class_room` AS `class_room`,
		             `LHS`.`prof_num` AS `prof_num`,
		             `RHS`.`stu_num` AS `stu_num`,
		             `RHS`.`enroll_grade` AS `enroll_grade`
		      FROM `class` AS `LHS`
		      INNER JOIN `enroll` AS `RHS` ON (`LHS`.`class_code` = `RHS`.`class_code`)) AS `LHS`
		   CROSS JOIN
		     (SELECT *
		      FROM
		        (SELECT `stu_lname`
		         FROM `student` INTERSECT SELECT `stu_lname`
		         FROM `student`)
		      WHERE (`stu_lname` != 'Smithson')) AS RHS)
		ORDER BY crs_code

	          crs_code
	0       MH5kQM-362
	1     (ONQM-362JuT
	2    (uIEHACCT-211
	3      ))HvKQM-362
	4    1ogiiACCT-211
	..             ...
	137   xwEQM-3626sK
	138  yqhCIS-420Jb3
	139   yrMm9CIS-420
	140    z577eQM-362
	141   zFJQM-362l0Y
	
	[142 rows x 1 columns]
No solution for instance spider/college_1/0037 (2563)
Error while executing solution for instance spider/college_1/0002 (2564)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `prof_num`) OVER () AS `count_distinct_prof_num_`
FROM `class`
WHERE (`crs_code` = 'ACCT-211')
ORDER BY count_distinct_prof_num_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/college_1/0036 (2565)
No solution for instance spider/college_1/0075 (2566)
Wrong output for fuzzied solution in instance spider/college_1/0057 (2567)
	EXPECTED OUTPUT ====

		SELECT T4.crs_description,
		       T4.crs_credit
		FROM CLASS AS T1
		JOIN enroll AS T2 ON T1.class_code = T2.class_code
		JOIN student AS T3 ON T3.stu_num = T2.stu_num
		JOIN course AS T4 ON T4.crs_code = T1.crs_code
		WHERE T3.stu_lname = 'Smithson'

	                   crs_description  crs_credit
	0              8uwAccounting IIw6o        2.98
	1              8uwAccounting IIw6o        2.98
	2                    Accounting II        2.98
	3                    Accounting II        2.98
	4                    Accounting II        2.98
	..                             ...         ...
	505  qKPY8Intro. to Microcomputing        3.02
	506  qKPY8Intro. to Microcomputing        3.02
	507  qKPY8Intro. to Microcomputing        3.02
	508  qKPY8Intro. to Microcomputing        3.02
	509  qKPY8Intro. to Microcomputing        3.02
	
	[510 rows x 2 columns]
	ACTUAL OUTPUT ====

		
		SELECT `crs_description`,
		       `crs_credit`
		FROM
		  (SELECT `LHS`.`class_code` AS `class_code`,
		          `LHS`.`crs_code` AS `crs_code`,
		          `LHS`.`class_section` AS `class_section`,
		          `LHS`.`class_time` AS `class_time`,
		          `LHS`.`class_room` AS `class_room`,
		          `LHS`.`prof_num` AS `prof_num`,
		          `LHS`.`dept_code` AS `dept_code`,
		          `LHS`.`crs_description` AS `crs_description`,
		          `LHS`.`crs_credit` AS `crs_credit`,
		          `LHS`.`stu_num` AS `stu_num`,
		          `LHS`.`enroll_grade` AS `enroll_grade`
		   FROM
		     (SELECT `LHS`.`class_code` AS `class_code`,
		             `LHS`.`crs_code` AS `crs_code`,
		             `LHS`.`class_section` AS `class_section`,
		             `LHS`.`class_time` AS `class_time`,
		             `LHS`.`class_room` AS `class_room`,
		             `LHS`.`prof_num` AS `prof_num`,
		             `LHS`.`dept_code` AS `dept_code`,
		             `LHS`.`crs_description` AS `crs_description`,
		             `LHS`.`crs_credit` AS `crs_credit`,
		             `RHS`.`stu_num` AS `stu_num`,
		             `RHS`.`enroll_grade` AS `enroll_grade`
		      FROM
		        (SELECT `LHS`.`class_code` AS `class_code`,
		                `LHS`.`crs_code` AS `crs_code`,
		                `LHS`.`class_section` AS `class_section`,
		                `LHS`.`class_time` AS `class_time`,
		                `LHS`.`class_room` AS `class_room`,
		                `LHS`.`prof_num` AS `prof_num`,
		                `RHS`.`dept_code` AS `dept_code`,
		                `RHS`.`crs_description` AS `crs_description`,
		                `RHS`.`crs_credit` AS `crs_credit`
		         FROM `class` AS `LHS`
		         INNER JOIN `course` AS `RHS` ON (`LHS`.`crs_code` = `RHS`.`crs_code`)) AS `LHS`
		      INNER JOIN `enroll` AS `RHS` ON (`LHS`.`class_code` = `RHS`.`class_code`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `enroll` AS `LHS`
		      WHERE EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM `student`
		              WHERE (`stu_lname` = 'Smithson')) AS RHS
		           WHERE (LHS.stu_num = RHS.stu_num) )) AS RHS ON (LHS.class_code = RHS.class_code
		                                                           AND LHS.stu_num = RHS.stu_num
		                                                           AND LHS.enroll_grade = RHS.enroll_grade))
		ORDER BY crs_description

	                   crs_description  crs_credit
	0              8uwAccounting IIw6o        2.98
	1              8uwAccounting IIw6o        2.98
	2                    Accounting II        2.98
	3                    Accounting II        2.98
	4                    Accounting II        2.98
	..                             ...         ...
	535  qKPY8Intro. to Microcomputing        3.02
	536  qKPY8Intro. to Microcomputing        3.02
	537  qKPY8Intro. to Microcomputing        3.02
	538  qKPY8Intro. to Microcomputing        3.02
	539  qKPY8Intro. to Microcomputing        3.02
	
	[540 rows x 2 columns]
No solution for instance spider/college_1/0052 (2569)
No solution for instance spider/college_1/0076 (2573)
No solution for instance spider/college_1/0003 (2574)
No solution for instance spider/college_1/0053 (2579)
No solution for instance spider/college_1/0072 (2580)
Wrong output for fuzzied solution in instance spider/college_1/0030 (2581)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT dept_name)
		FROM department

	   count(distinct dept_name)
	0                         16
	ACTUAL OUTPUT ====

		
		SELECT n AS count_distinct_dept_name_
		FROM
		  (SELECT COUNT() AS n
		   FROM department)
		ORDER BY count_distinct_dept_name_

	   count_distinct_dept_name_
	0                         29
Wrong output for fuzzied solution in instance spider/college_1/0013 (2582)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT dept_name),
		       school_code
		FROM department
		GROUP BY school_code
		HAVING count(DISTINCT dept_name) < 5

	    count(distinct dept_name)  school_code
	0                           1    zbAlA&SCI
	1                           1   4P0PdA&SCI
	2                           1   6XPP6A&SCI
	3                           1   A&SCIELYVJ
	4                           1   AIqxOyIyPj
	5                           1  D3XyIyPjsGk
	6                           1   JaOQzA&SCI
	7                           1  JxoyIyPjTG2
	8                           1  YG6A&SCIy2O
	9                           1  eYQA&SCIpsC
	10                          1  vlKA&SCIwc1
	11                          1   yIyPj KH(k
	12                          1   yIyPjIRAIx
	13                          3         &SCI
	14                          3         A&SC
	15                          3        yIyPj
	ACTUAL OUTPUT ====

		
		SELECT n AS count_distinct_dept_name_,
		       school_code
		FROM
		  (SELECT school_code,
		          COUNT() AS n
		   FROM department
		   GROUP BY school_code)
		WHERE (n < 5)
		ORDER BY count_distinct_dept_name_

	    count_distinct_dept_name_  school_code
	0                           1    zbAlA&SCI
	1                           1   4P0PdA&SCI
	2                           1   6XPP6A&SCI
	3                           1   A&SCIELYVJ
	4                           1   AIqxOyIyPj
	5                           1  D3XyIyPjsGk
	6                           1   JaOQzA&SCI
	7                           1  JxoyIyPjTG2
	8                           1  YG6A&SCIy2O
	9                           1  eYQA&SCIpsC
	10                          1  vlKA&SCIwc1
	11                          1   yIyPj KH(k
	12                          1   yIyPjIRAIx
	13                          3        yIyPj
	14                          4         &SCI
	15                          4         A&SC
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Wrong output for fuzzied solution in instance spider/college_1/0064 (2585)
	EXPECTED OUTPUT ====

		SELECT T2.dept_name
		FROM student AS T1
		JOIN department AS T2 ON T1.dept_code = T2.dept_code
		ORDER BY stu_gpa
		LIMIT 1

	                dept_name
	0  Computer Info. Systems
	ACTUAL OUTPUT ====

		
		SELECT dept_name
		FROM
		  (SELECT LHS.dept_code AS dept_code,
		          LHS.dept_name AS dept_name,
		          LHS.school_code AS school_code,
		          LHS.emp_num AS emp_num,
		          LHS.dept_address AS dept_address,
		          LHS.dept_extension AS dept_extension,
		          RHS.stu_num AS stu_num,
		          RHS.stu_lname AS stu_lname,
		          RHS.stu_fname AS stu_fname,
		          RHS.stu_init AS stu_init,
		          RHS.stu_dob AS stu_dob,
		          RHS.stu_class AS stu_class,
		          RHS.stu_gpa AS stu_gpa,
		          RHS.stu_transfer AS stu_transfer,
		          RHS.stu_phone AS stu_phone,
		          RHS.prof_num AS prof_num
		   FROM department AS LHS
		   INNER JOIN student AS RHS ON (LHS.emp_num = RHS.stu_hrs
		                                    AND LHS.dept_code = RHS.dept_code))
		ORDER BY dept_name

	Empty DataFrame
	Columns: [dept_name]
	Index: []
No solution for instance spider/college_1/0078 (2588)
Wrong output for base solution in instance spider/college_1/0026 (2589)
	EXPECTED OUTPUT ====

	                dept_name  avg_t1_stu_gpa_
	0  Computer Info. Systems             3.18
	ACTUAL OUTPUT ====

		SELECT T2.dept_name,
		       avg(T1.stu_gpa)
		FROM student AS T1
		JOIN department AS T2 ON T1.dept_code = T2.dept_code
		GROUP BY T1.dept_code
		ORDER BY avg(T1.stu_gpa) DESC
		LIMIT 1

	                dept_name  avg(t1.stu_gpa)
	0  Computer Info. Systems             3.18
Wrong output for ground truth in instance spider/college_1/0026 (2589)
No solution for instance spider/college_1/0071 (2590)
Wrong output for fuzzied solution in instance spider/college_1/0005 (2592)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM employee AS T1
		JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM
		WHERE T1.EMP_LNAME = 'Graztevski'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`prof_num` AS `prof_num`,
		          `LHS`.`n` AS `n`,
		          `RHS`.`emp_lname` AS `emp_lname`,
		          `RHS`.`emp_fname` AS `emp_fname`,
		          `RHS`.`emp_initial` AS `emp_initial`,
		          `RHS`.`emp_jobcode` AS `emp_jobcode`,
		          `RHS`.`emp_hiredate` AS `emp_hiredate`,
		          `RHS`.`emp_dob` AS `emp_dob`
		   FROM
		     (SELECT `prof_num`,
		             COUNT() AS `n`
		      FROM `class`
		      GROUP BY `prof_num`) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `employee`
		      WHERE (`emp_lname` = 'Graztevski')) AS RHS ON (LHS.prof_num = RHS.emp_num))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/college_1/0066 (2594)
	EXPECTED OUTPUT ====

		SELECT T2.dept_name,
		       T2.dept_address
		FROM student AS T1
		JOIN department AS T2 ON T1.dept_code = T2.dept_code
		GROUP BY T1.dept_code
		ORDER BY count(*) DESC
		LIMIT 1

	         dept_name      dept_address
	0  QF67VPsychology  AAK 230, Box 415
	ACTUAL OUTPUT ====

		
		SELECT dept_name,
		       dept_address
		FROM
		  (SELECT LHS.stu_num AS stu_num,
		          LHS.stu_lname AS stu_lname,
		          LHS.stu_fname AS stu_fname,
		          LHS.stu_init AS stu_init,
		          LHS.stu_dob AS stu_dob,
		          LHS.stu_hrs AS stu_hrs,
		          LHS.stu_class AS stu_class,
		          LHS.stu_gpa AS stu_gpa,
		          LHS.stu_transfer AS stu_transfer,
		          LHS.dept_code AS dept_code,
		          LHS.stu_phone AS stu_phone,
		          LHS.prof_num AS prof_num,
		          RHS.dept_name AS dept_name,
		          RHS.school_code AS school_code,
		          RHS.dept_address AS dept_address,
		          RHS.dept_extension AS dept_extension,
		          RHS.n AS n
		   FROM student AS LHS
		   INNER JOIN
		     (SELECT dept_code,
		             dept_name,
		             school_code,
		             emp_num,
		             dept_address,
		             dept_extension,
		             COUNT(*) OVER () AS n
		      FROM department) AS RHS ON (LHS.stu_hrs = RHS.emp_num
		                                     AND LHS.dept_code = RHS.dept_code))
		ORDER BY dept_name

	Empty DataFrame
	Columns: [dept_name, dept_address]
	Index: []
Wrong output for base solution in instance spider/college_1/0062 (2595)
	EXPECTED OUTPUT ====

	   avg_t2_stu_gpa_
	0            3.055
	ACTUAL OUTPUT ====

		SELECT avg(T2.stu_gpa)
		FROM enroll AS T1
		JOIN student AS T2 ON T1.stu_num = T2.stu_num
		JOIN CLASS AS T3 ON T1.class_code = T3.class_code
		WHERE T3.crs_code = 'ACCT-211'

	   avg(t2.stu_gpa)
	0            3.055
Wrong output for ground truth in instance spider/college_1/0062 (2595)
No solution for instance spider/college_1/0050 (2596)
Wrong output for fuzzied solution in instance spider/college_1/0068 (2597)
	EXPECTED OUTPUT ====

		SELECT T1.emp_fname,
		       T2.prof_office
		FROM employee AS T1
		JOIN professor AS T2 ON T1.emp_num = T2.emp_num
		JOIN department AS T3 ON T3.dept_code = T2.dept_code
		WHERE T3.dept_name = 'History'
		  AND T2.prof_high_degree = 'Ph.D.'

	     emp_fname    prof_office
	0          Els        KLR 211
	1          Els         KLR 30
	2         Elsa        KLR 284
	3         Elsa        KLR 284
	4         Elsa       KLR 409B
	5       George        DRE 156
	6       George   KLR 284D97BX
	7         Jame        KLR 211
	8         Jame        KLR 300
	9   JamesMbehq   e3KLR 211uCC
	10  JamesMbehq         KLR 21
	11  JamesMbehq        KLR 211
	12  JamesMbehq        KLR 284
	13  JamesMbehq        KLR 300
	14  JamesMbehq        KLR 300
	15  JamesMbehq        KLR 300
	16  JamesMbehq        KLR 409
	17  JamesMbehq       KLR 409B
	18     Kathryn        KLR 284
	19  wS1ElsahT    DRE 1561nr(2
	20  wS1ElsahT         KLR 300
	21  wS1ElsahT         KLR 300
	22  wS1ElsahT        KLR 409B
	ACTUAL OUTPUT ====

		
		SELECT `emp_fname`,
		       `prof_office`
		FROM
		  (SELECT `LHS`.`dept_code` AS `dept_code`,
		          `LHS`.`dept_name` AS `dept_name`,
		          `LHS`.`school_code` AS `school_code`,
		          `LHS`.`emp_num` AS `emp_num`,
		          `LHS`.`dept_address` AS `dept_address`,
		          `LHS`.`dept_extension` AS `dept_extension`,
		          `LHS`.`emp_lname` AS `emp_lname`,
		          `LHS`.`emp_fname` AS `emp_fname`,
		          `LHS`.`emp_initial` AS `emp_initial`,
		          `LHS`.`emp_jobcode` AS `emp_jobcode`,
		          `LHS`.`emp_hiredate` AS `emp_hiredate`,
		          `LHS`.`emp_dob` AS `emp_dob`,
		          `RHS`.`prof_office` AS `prof_office`,
		          `RHS`.`prof_extension` AS `prof_extension`,
		          `RHS`.`prof_high_degree` AS `prof_high_degree`
		   FROM
		     (SELECT `LHS`.`dept_code` AS `dept_code`,
		             `LHS`.`dept_name` AS `dept_name`,
		             `LHS`.`school_code` AS `school_code`,
		             `LHS`.`emp_num` AS `emp_num`,
		             `LHS`.`dept_address` AS `dept_address`,
		             `LHS`.`dept_extension` AS `dept_extension`,
		             `RHS`.`emp_lname` AS `emp_lname`,
		             `RHS`.`emp_fname` AS `emp_fname`,
		             `RHS`.`emp_initial` AS `emp_initial`,
		             `RHS`.`emp_jobcode` AS `emp_jobcode`,
		             `RHS`.`emp_hiredate` AS `emp_hiredate`,
		             `RHS`.`emp_dob` AS `emp_dob`
		      FROM `department` AS `LHS`
		      INNER JOIN `employee` AS `RHS` ON (`LHS`.`emp_num` = `RHS`.`emp_num`)) AS `LHS`
		   INNER JOIN `professor` AS `RHS` ON (`LHS`.`dept_code` = `RHS`.`dept_code`
		                                          AND `LHS`.`emp_num` = `RHS`.`emp_num`))
		WHERE (`dept_name` = 'History'
		       OR `prof_high_degree` != 'Ph.D.')
		ORDER BY emp_fname

	     emp_fname   prof_office
	0          Els  DRE 156o1WXi
	1          Els       KLR 211
	2          Els       KLR 211
	3         Elsa       DRE 156
	4         Elsa        KLR 28
	5         Elsa       KLR 284
	6         Elsa       KLR 300
	7         Jame       KLR 211
	8      Kathryn       DRE 156
	9      Kathryn       KLR 211
	10     Kathryn  KLR 211sdHuf
	11     Kathryn  MvwKdKLR 211
	12  wS1ElsahT        KLR 300
	13  wS1ElsahT   ZDEBqKLR 211
Wrong output for fuzzied solution in instance spider/college_1/0059 (2598)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM professor AS T1
		JOIN department AS T2 ON T1.dept_code = T2.dept_code
		WHERE T2.dept_name = 'Accounting'
		  OR T2.dept_name = 'Biology'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `prof_high_degree`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `professor` AS `LHS`
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM `department`
		              WHERE (`dept_name` != 'Accounting'
		                     AND `dept_name` != 'Biology')) AS RHS
		           WHERE (LHS.dept_code = RHS.dept_code) ))
		   GROUP BY prof_high_degree)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Error while executing solution for instance spider/college_1/0032 (2599)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT `n_distinct` AS `count_distinct_class_section_`
FROM
  (SELECT `class_code`,
          `crs_code`,
          `class_section`,
          `class_time`,
          `class_room`,
          `prof_num`,
          COUNT(DISTINCT `class_section`) OVER () AS `n_distinct`
   FROM `class`)
WHERE (`crs_code` != 'ACCT-211')
ORDER BY count_distinct_class_section_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/college_1/0063 (2601)
Wrong output for fuzzied solution in instance spider/college_1/0018 (2602)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T3.school_code
		FROM CLASS AS T1
		JOIN course AS T2 ON T1.crs_code = T2.crs_code
		JOIN department AS T3 ON T2.dept_code = T3.dept_code
		GROUP BY T3.school_code

	    count(*)  school_code
	0          3  mFFA&SCI9ow
	1          4    QeJBUSQqv
	2          4    XIfBUSByM
	3          6    ROWBUSXLk
	4          8           US
	5          9  XDWA&SCInxS
	6         10     BUSNCL4R
	7         12     7(V2FBUS
	8         13     BUSX2mzI
	9         17         A&SC
	10        18  qY9A&SCIDdW
	11        20    YtwBUSDkY
	12        29         &SCI
	13        83          BUS
	14       136        A&SCI
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___,
		                school_code
		FROM
		  (SELECT LHS.class_code AS class_code,
		          LHS.crs_code AS crs_code,
		          LHS.class_section AS class_section,
		          LHS.class_time AS class_time,
		          LHS.class_room AS class_room,
		          LHS.prof_num AS prof_num,
		          LHS.dept_code AS dept_code,
		          LHS.crs_description AS crs_description,
		          LHS.crs_credit AS crs_credit,
		          LHS.dept_name AS dept_name,
		          LHS.school_code AS school_code,
		          LHS.emp_num AS emp_num,
		          LHS.dept_address AS dept_address,
		          LHS.dept_extension AS dept_extension,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.class_code AS class_code,
		             LHS.crs_code AS crs_code,
		             LHS.class_section AS class_section,
		             LHS.class_time AS class_time,
		             LHS.class_room AS class_room,
		             LHS.prof_num AS prof_num,
		             LHS.dept_code AS dept_code,
		             LHS.crs_description AS crs_description,
		             LHS.crs_credit AS crs_credit,
		             RHS.dept_name AS dept_name,
		             RHS.school_code AS school_code,
		             RHS.emp_num AS emp_num,
		             RHS.dept_address AS dept_address,
		             RHS.dept_extension AS dept_extension
		      FROM
		        (SELECT LHS.class_code AS class_code,
		                LHS.crs_code AS crs_code,
		                LHS.class_section AS class_section,
		                LHS.class_time AS class_time,
		                LHS.class_room AS class_room,
		                LHS.prof_num AS prof_num,
		                RHS.dept_code AS dept_code,
		                RHS.crs_description AS crs_description,
		                RHS.crs_credit AS crs_credit
		         FROM class AS LHS
		         INNER JOIN course AS RHS ON (LHS.crs_code = RHS.crs_code)) AS LHS
		      INNER JOIN department AS RHS ON (LHS.dept_code = RHS.dept_code)) AS LHS
		   CROSS JOIN
		     (SELECT COUNT() AS n
		      FROM class) AS RHS)
		ORDER BY count___

	    count___  school_code
	0        372         &SCI
	1        372     7(V2FBUS
	2        372         A&SC
	3        372        A&SCI
	4        372          BUS
	5        372     BUSNCL4R
	6        372     BUSX2mzI
	7        372    QeJBUSQqv
	8        372    ROWBUSXLk
	9        372           US
	10       372  XDWA&SCInxS
	11       372    XIfBUSByM
	12       372    YtwBUSDkY
	13       372  mFFA&SCI9ow
	14       372  qY9A&SCIDdW
Wrong output for fuzzied solution in instance spider/college_1/0041 (2603)
	EXPECTED OUTPUT ====

		SELECT T4.dept_name
		FROM CLASS AS T1
		JOIN enroll AS T2 ON T1.class_code = T2.class_code
		JOIN course AS T3 ON T1.crs_code = T3.crs_code
		JOIN department AS T4 ON T3.dept_code = T4.dept_code
		GROUP BY T3.dept_code
		ORDER BY count(*) DESC
		LIMIT 1

	                     dept_name
	0  Computer Info. SystemsO4)0v
	ACTUAL OUTPUT ====

		
		SELECT dept_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.class_code AS class_code,
		                LHS.crs_code AS crs_code,
		                LHS.class_section AS class_section,
		                LHS.class_time AS class_time,
		                LHS.class_room AS class_room,
		                LHS.prof_num AS prof_num,
		                LHS.dept_code AS dept_code,
		                LHS.crs_description AS crs_description,
		                LHS.crs_credit AS crs_credit,
		                LHS.dept_name AS dept_name,
		                LHS.school_code AS school_code,
		                LHS.emp_num AS emp_num,
		                LHS.dept_address AS dept_address,
		                LHS.dept_extension AS dept_extension,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.class_code AS class_code,
		                   LHS.crs_code AS crs_code,
		                   LHS.class_section AS class_section,
		                   LHS.class_time AS class_time,
		                   LHS.class_room AS class_room,
		                   LHS.prof_num AS prof_num,
		                   LHS.dept_code AS dept_code,
		                   LHS.crs_description AS crs_description,
		                   LHS.crs_credit AS crs_credit,
		                   RHS.dept_name AS dept_name,
		                   RHS.school_code AS school_code,
		                   RHS.emp_num AS emp_num,
		                   RHS.dept_address AS dept_address,
		                   RHS.dept_extension AS dept_extension
		            FROM
		              (SELECT LHS.class_code AS class_code,
		                      LHS.crs_code AS crs_code,
		                      LHS.class_section AS class_section,
		                      LHS.class_time AS class_time,
		                      LHS.class_room AS class_room,
		                      LHS.prof_num AS prof_num,
		                      RHS.dept_code AS dept_code,
		                      RHS.crs_description AS crs_description,
		                      RHS.crs_credit AS crs_credit
		               FROM class AS LHS
		               INNER JOIN course AS RHS ON (LHS.crs_code = RHS.crs_code)) AS LHS
		            INNER JOIN department AS RHS ON (LHS.dept_code = RHS.dept_code)) AS LHS
		         INNER JOIN
		           (SELECT class_code,
		                   COUNT() AS n
		            FROM enroll
		            GROUP BY class_code) AS RHS ON (LHS.class_code = RHS.class_code))
		      ORDER BY class_section)
		   LIMIT 1)

	   dept_name
	0  Sociology
No solution for instance spider/college_1/0051 (2604)
Wrong output for fuzzied solution in instance spider/college_1/0035 (2605)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM CLASS AS T1
		JOIN enroll AS T2 ON T1.class_code = T2.class_code
		WHERE T1.crs_code = 'ACCT-211'

	   count(*)
	0        25
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `crs_code`,
		          `prof_num`,
		          COUNT() AS `n`
		   FROM
		     (SELECT `LHS`.`class_code` AS `class_code`,
		             `LHS`.`stu_num` AS `stu_num`,
		             `LHS`.`enroll_grade` AS `enroll_grade`,
		             `RHS`.`crs_code` AS `crs_code`,
		             `RHS`.`class_section` AS `class_section`,
		             `RHS`.`class_time` AS `class_time`,
		             `RHS`.`class_room` AS `class_room`,
		             `RHS`.`prof_num` AS `prof_num`
		      FROM `enroll` AS `LHS`
		      INNER JOIN `class` AS `RHS` ON (`LHS`.`class_code` = `RHS`.`class_code`))
		   GROUP BY `crs_code`,
		            `prof_num`)
		WHERE (`crs_code` = 'ACCT-211')
		ORDER BY count___

	   count___
	0         6
	1        19
Wrong output for base solution in instance spider/college_1/0020 (2606)
	EXPECTED OUTPUT ====

		SELECT emp_jobcode,
		       count(*)
		FROM employee
		GROUP BY emp_jobcode
		ORDER BY count(*) DESC
		LIMIT 1

	  emp_jobcode  count(*)
	0        PROF        22
	ACTUAL OUTPUT ====

		
		SELECT emp_jobcode,
		       n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT emp_hiredate,
		                emp_jobcode,
		                COUNT() AS n
		         FROM employee
		         GROUP BY emp_hiredate,
		                  emp_jobcode)
		      ORDER BY n DESC)
		   LIMIT 1)

	  emp_jobcode  count___
	0        PROF         2
Wrong output for fuzzied solution in instance spider/college_1/0061 (2609)
	EXPECTED OUTPUT ====

		SELECT T1.stu_fname
		FROM student AS T1
		JOIN enroll AS T2 ON T1.stu_num = T2.stu_num
		JOIN CLASS AS T3 ON T2.class_code = T3.class_code
		JOIN course AS T4 ON T3.crs_code = T4.crs_code
		JOIN department AS T5 ON T5.dept_code = T4.dept_code
		WHERE T5.dept_name = 'Accounting' INTERSECT
		  SELECT T1.stu_fname
		  FROM student AS T1
		  JOIN enroll AS T2 ON T1.stu_num = T2.stu_num
		  JOIN CLASS AS T3 ON T2.class_code = T3.class_code
		  JOIN course AS T4 ON T3.crs_code = T4.crs_code
		  JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Computer Info. Systems'

	Empty DataFrame
	Columns: [stu_fname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `stu_fname`
		FROM
		  (SELECT `LHS`.`class_code` AS `class_code`,
		          `LHS`.`stu_num` AS `stu_num`,
		          `LHS`.`enroll_grade` AS `enroll_grade`,
		          `LHS`.`stu_lname` AS `stu_lname`,
		          `LHS`.`stu_fname` AS `stu_fname`,
		          `LHS`.`stu_init` AS `stu_init`,
		          `LHS`.`stu_dob` AS `stu_dob`,
		          `LHS`.`stu_hrs` AS `stu_hrs`,
		          `LHS`.`stu_class` AS `stu_class`,
		          `LHS`.`stu_gpa` AS `stu_gpa`,
		          `LHS`.`stu_transfer` AS `stu_transfer`,
		          `LHS`.`dept_code` AS `dept_code`,
		          `LHS`.`stu_phone` AS `stu_phone`,
		          `LHS`.`prof_num` AS `prof_num`,
		          `LHS`.`dept_name` AS `dept_name`,
		          `LHS`.`school_code` AS `school_code`,
		          `LHS`.`emp_num` AS `emp_num`,
		          `LHS`.`dept_address` AS `dept_address`,
		          `LHS`.`dept_extension` AS `dept_extension`,
		          `RHS`.`crs_code` AS `crs_code`
		   FROM
		     (SELECT `LHS`.`class_code` AS `class_code`,
		             `LHS`.`stu_num` AS `stu_num`,
		             `LHS`.`enroll_grade` AS `enroll_grade`,
		             `LHS`.`stu_lname` AS `stu_lname`,
		             `LHS`.`stu_fname` AS `stu_fname`,
		             `LHS`.`stu_init` AS `stu_init`,
		             `LHS`.`stu_dob` AS `stu_dob`,
		             `LHS`.`stu_hrs` AS `stu_hrs`,
		             `LHS`.`stu_class` AS `stu_class`,
		             `LHS`.`stu_gpa` AS `stu_gpa`,
		             `LHS`.`stu_transfer` AS `stu_transfer`,
		             `LHS`.`dept_code` AS `dept_code`,
		             `LHS`.`stu_phone` AS `stu_phone`,
		             `LHS`.`prof_num` AS `prof_num`,
		             `RHS`.`dept_name` AS `dept_name`,
		             `RHS`.`school_code` AS `school_code`,
		             `RHS`.`emp_num` AS `emp_num`,
		             `RHS`.`dept_address` AS `dept_address`,
		             `RHS`.`dept_extension` AS `dept_extension`
		      FROM
		        (SELECT `LHS`.`class_code` AS `class_code`,
		                `LHS`.`stu_num` AS `stu_num`,
		                `LHS`.`enroll_grade` AS `enroll_grade`,
		                `RHS`.`stu_lname` AS `stu_lname`,
		                `RHS`.`stu_fname` AS `stu_fname`,
		                `RHS`.`stu_init` AS `stu_init`,
		                `RHS`.`stu_dob` AS `stu_dob`,
		                `RHS`.`stu_hrs` AS `stu_hrs`,
		                `RHS`.`stu_class` AS `stu_class`,
		                `RHS`.`stu_gpa` AS `stu_gpa`,
		                `RHS`.`stu_transfer` AS `stu_transfer`,
		                `RHS`.`dept_code` AS `dept_code`,
		                `RHS`.`stu_phone` AS `stu_phone`,
		                `RHS`.`prof_num` AS `prof_num`
		         FROM `enroll` AS `LHS`
		         INNER JOIN `student` AS `RHS` ON (`LHS`.`stu_num` = `RHS`.`stu_num`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `department`
		         WHERE (`dept_name` != 'Accounting'
		                OR `dept_name` = 'Computer Info. Systems')) AS RHS ON (LHS.dept_code = RHS.dept_code)) AS LHS
		   CROSS JOIN
		     (SELECT crs_code
		      FROM course INTERSECT SELECT crs_code
		      FROM class) AS RHS)
		ORDER BY stu_fname

	      stu_fname
	0  2HX7XRaphael
	1           Ann
	2          Anne
	3          John
	4     JohnnokiD
	5       Raphael
	6    U8lJohnvL1
	7     nf5CIAnne
No solution for instance spider/college_1/0034 (2610)
No solution for instance spider/college_1/0021 (2612)
Wrong output for fuzzied solution in instance spider/college_1/0001 (2615)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM professor AS T1
		JOIN department AS T2 ON T1.dept_code = T2.dept_code
		WHERE DEPT_NAME = "Accounting"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `dept_name`,
		          `emp_num`,
		          COUNT() AS `n`
		   FROM
		     (SELECT `LHS`.`dept_code` AS `dept_code`,
		             `LHS`.`dept_name` AS `dept_name`,
		             `LHS`.`school_code` AS `school_code`,
		             `LHS`.`emp_num` AS `emp_num`,
		             `LHS`.`dept_address` AS `dept_address`,
		             `LHS`.`dept_extension` AS `dept_extension`,
		             `RHS`.`emp_num` AS `emp_num_other`,
		             `RHS`.`prof_office` AS `prof_office`,
		             `RHS`.`prof_extension` AS `prof_extension`,
		             `RHS`.`prof_high_degree` AS `prof_high_degree`
		      FROM `department` AS `LHS`
		      INNER JOIN `professor` AS `RHS` ON (`LHS`.`dept_code` = `RHS`.`dept_code`))
		   GROUP BY `dept_name`,
		            `emp_num`)
		WHERE (`dept_name` = 'Accounting')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/college_1/0054 (2618)
Wrong output for fuzzied solution in instance spider/college_1/0077 (2619)
	EXPECTED OUTPUT ====

		SELECT T1.stu_lname
		FROM student AS T1
		JOIN enroll AS T2 ON T1.stu_num = T2.stu_num
		WHERE T2.enroll_grade = 'A'
		  AND T2.class_code = 10018

	Empty DataFrame
	Columns: [stu_lname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `stu_lname`
		FROM
		  (SELECT `LHS`.`class_code` AS `class_code`,
		          `LHS`.`stu_num` AS `stu_num`,
		          `LHS`.`enroll_grade` AS `enroll_grade`,
		          `RHS`.`stu_lname` AS `stu_lname`,
		          `RHS`.`stu_fname` AS `stu_fname`,
		          `RHS`.`stu_dob` AS `stu_dob`,
		          `RHS`.`stu_hrs` AS `stu_hrs`,
		          `RHS`.`stu_class` AS `stu_class`,
		          `RHS`.`stu_gpa` AS `stu_gpa`,
		          `RHS`.`stu_transfer` AS `stu_transfer`,
		          `RHS`.`dept_code` AS `dept_code`,
		          `RHS`.`stu_phone` AS `stu_phone`,
		          `RHS`.`prof_num` AS `prof_num`
		   FROM
		     (SELECT *
		      FROM `enroll`
		      WHERE (`enroll_grade` != 'A'
		             AND class_code != 10018)) AS LHS
		   INNER JOIN student AS RHS ON (LHS.stu_num = RHS.stu_num
		                                    AND LHS.enroll_grade = RHS.stu_init))
		ORDER BY stu_lname

	     stu_lname
	0  0FHenBowser
	1  BowserQ8 CC
	2       Brewer
No solution for instance spider/college_1/0082 (2620)
No solution for instance spider/college_1/0047 (2621)
No solution for instance spider/college_1/0081 (2622)
Wrong output for fuzzied solution in instance spider/college_1/0009 (2624)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT dept_address)
		FROM department
		WHERE school_code = 'BUS'

	   count(distinct dept_address)
	0                            11
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count_distinct_dept_address_`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `department`
		      WHERE (`school_code` = 'BUS')))
		ORDER BY count_distinct_dept_address_

	   count_distinct_dept_address_
	0                            16
Wrong output for base solution in instance spider/college_1/0025 (2625)
	EXPECTED OUTPUT ====

	   max_stu_gpa_  avg_stu_gpa_  min_stu_gpa_ dept_code
	0          2.11      2.110000          2.11      ENGL
	1          3.15      2.776667          2.26      ACCT
	2          2.84      2.840000          2.84      BIOL
	3          3.27      3.180000          3.09       CIS
	4          3.87      3.870000          3.87       EDU
	ACTUAL OUTPUT ====

		SELECT max(stu_gpa),
		       avg(stu_gpa),
		       min(stu_gpa),
		       dept_code
		FROM student
		GROUP BY dept_code

	   max(stu_gpa)  avg(stu_gpa)  min(stu_gpa) dept_code
	0          3.15      2.776667          2.26      ACCT
	1          2.84      2.840000          2.84      BIOL
	2          3.27      3.180000          3.09       CIS
	3          3.87      3.870000          3.87       EDU
	4          2.11      2.110000          2.11      ENGL
Wrong output for ground truth in instance spider/college_1/0025 (2625)
Wrong output for fuzzied solution in instance spider/college_1/0060 (2627)
	EXPECTED OUTPUT ====

		SELECT T1.emp_fname
		FROM employee AS T1
		JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num
		WHERE crs_code = 'CIS-220' INTERSECT
		  SELECT T1.emp_fname
		  FROM employee AS T1
		  JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'QM-261'

	Empty DataFrame
	Columns: [emp_fname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `emp_fname`
		FROM
		  (SELECT `class_code`,
		          `crs_code`,
		          `class_section`,
		          `class_time`,
		          `class_room`,
		          `prof_num`,
		          `emp_lname`,
		          `emp_fname`,
		          `emp_initial`,
		          `emp_jobcode`,
		          `emp_hiredate`,
		          `emp_dob`,
		          `prof_num` AS `emp_num`
		   FROM
		     (SELECT `LHS`.`class_code` AS `class_code`,
		             `LHS`.`crs_code` AS `crs_code`,
		             `LHS`.`class_section` AS `class_section`,
		             `LHS`.`class_time` AS `class_time`,
		             `LHS`.`class_room` AS `class_room`,
		             `LHS`.`prof_num` AS `prof_num`,
		             `RHS`.`emp_lname` AS `emp_lname`,
		             `RHS`.`emp_fname` AS `emp_fname`,
		             `RHS`.`emp_initial` AS `emp_initial`,
		             `RHS`.`emp_jobcode` AS `emp_jobcode`,
		             `RHS`.`emp_hiredate` AS `emp_hiredate`,
		             `RHS`.`emp_dob` AS `emp_dob`
		      FROM `class` AS `LHS`
		      INNER JOIN `employee` AS `RHS` ON (`LHS`.`prof_num` = `RHS`.`emp_num`)))
		WHERE (`crs_code` != 'CIS-220'
		       AND `crs_code` = 'QM-261')
		ORDER BY emp_fname

	     emp_fname
	0       Elaine
	1  ElainewHVqK
	2          Tod
	3         Todd
Wrong output for fuzzied solution in instance spider/college_1/0079 (2628)
	EXPECTED OUTPUT ====

		SELECT T2.emp_fname
		FROM CLASS AS T1
		JOIN employee AS T2 ON T1.prof_num = T2.emp_num
		GROUP BY T1.prof_num
		HAVING count(*) > 1

	      emp_fname
	0        Carlos
	1        Carlos
	2   CarlosXhHOq
	3        Elaine
	4        Elaine
	5           Tod
	6          Todd
	7     ToddMbehq
	8         eorge
	9  wS1ElainehT 
	ACTUAL OUTPUT ====

		
		SELECT emp_fname
		FROM
		  (SELECT LHS.crs_code AS crs_code,
		          LHS.prof_num AS prof_num,
		          LHS.n AS n,
		          RHS.emp_lname AS emp_lname,
		          RHS.emp_fname AS emp_fname,
		          RHS.emp_initial AS emp_initial,
		          RHS.emp_jobcode AS emp_jobcode,
		          RHS.emp_hiredate AS emp_hiredate,
		          RHS.emp_dob AS emp_dob
		   FROM
		     (SELECT *
		      FROM
		        (SELECT crs_code,
		                prof_num,
		                COUNT() AS n
		         FROM class
		         GROUP BY crs_code,
		                  prof_num)
		      WHERE (n > 1)) AS LHS
		   INNER JOIN employee AS RHS ON (LHS.prof_num = RHS.emp_num))
		ORDER BY emp_fname

	       emp_fname
	0         Carlos
	1         Carlos
	2         Carlos
	3         Carlos
	4         Carlos
	5    CarlosXhHOq
	6    CarlosXhHOq
	7    CarlosXhHOq
	8    CarlosXhHOq
	9    CarlosXhHOq
	10   CarlosXhHOq
	11        Elaine
	12        Elaine
	13        Elaine
	14        Elaine
	15        Elaine
	16        Elaine
	17        Elaine
	18        Elaine
	19        Elaine
	20        Elaine
	21           Tod
	22           Tod
	23           Tod
	24          Todd
	25          Todd
	26          Todd
	27          Todd
	28          Todd
	29     ToddMbehq
	30     ToddMbehq
	31     ToddMbehq
	32     ToddMbehq
	33         eorge
	34         eorge
	35         eorge
	36         eorge
	37         eorge
	38         eorge
	39         eorge
	40         eorge
	41         eorge
	42         eorge
	43         eorge
	44  wS1ElainehT 
	45  wS1ElainehT 
	46  wS1ElainehT 
	47  wS1ElainehT 
	48  wS1ElainehT 
	49  wS1ElainehT 
Wrong output for fuzzied solution in instance spider/college_1/0067 (2629)
	EXPECTED OUTPUT ====

		SELECT T2.dept_name,
		       T2.dept_address,
		       count(*)
		FROM student AS T1
		JOIN department AS T2 ON T1.dept_code = T2.dept_code
		GROUP BY T1.dept_code
		ORDER BY count(*) DESC
		LIMIT 3

	         dept_name           dept_address  count(*)
	0  QF67VPsychology       AAK 230, Box 415         2
	1        Sociology  AAK 230, Box 415Ouqno         2
	2        Sociology         KLR 211, Box 5         2
	ACTUAL OUTPUT ====

		
		SELECT dept_name,
		       dept_address,
		       n AS count___
		FROM
		  (SELECT dept_address,
		          dept_name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.dept_code AS dept_code,
		             LHS.dept_name AS dept_name,
		             LHS.school_code AS school_code,
		             LHS.emp_num AS emp_num,
		             LHS.dept_address AS dept_address,
		             LHS.dept_extension AS dept_extension,
		             RHS.stu_num AS stu_num,
		             RHS.stu_lname AS stu_lname,
		             RHS.stu_fname AS stu_fname,
		             RHS.stu_init AS stu_init,
		             RHS.stu_dob AS stu_dob,
		             RHS.stu_hrs AS stu_hrs,
		             RHS.stu_class AS stu_class,
		             RHS.stu_gpa AS stu_gpa,
		             RHS.stu_transfer AS stu_transfer,
		             RHS.stu_phone AS stu_phone,
		             RHS.prof_num AS prof_num
		      FROM department AS LHS
		      INNER JOIN student AS RHS ON (LHS.dept_code = RHS.dept_code))
		   GROUP BY dept_address,
		            dept_name)
		ORDER BY dept_name

	                dept_name           dept_address  count___
	0              Psychology  A3KKLR 211, Box 52F9)         1
	1              Psychology       AAK 230, Box 415         1
	2               Sociology        AK 230, Box 415         1
	3  Computer Info. Systems        KLR 211, Box 52         1
	4         PsychologydnGt8        KLR 211, Box 52         1
	5         QF67VPsychology       AAK 230, Box 415         2
	6               Sociology  AAK 230, Box 415Ouqno         2
	7  Computer Info. Systems         KLR 211, Box 5         2
	8               Sociology         KLR 211, Box 5         2
	9              Psychology        KLR 211, Box 52         2
Wrong output for fuzzied solution in instance spider/college_1/0010 (2631)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT dept_address),
		       school_code
		FROM department
		GROUP BY school_code

	    count(distinct dept_address)  school_code
	0                              1         &SCI
	1                              1     7(V2FBUS
	2                              1         A&SC
	3                              1     BUSNCL4R
	4                              1     BUSX2mzI
	5                              1    QeJBUSQqv
	6                              1    ROWBUSXLk
	7                              1           US
	8                              1  XDWA&SCInxS
	9                              1    XIfBUSByM
	10                             1    YtwBUSDkY
	11                             1  mFFA&SCI9ow
	12                             1  qY9A&SCIDdW
	13                             6        A&SCI
	14                             6          BUS
	ACTUAL OUTPUT ====

		
		SELECT n AS count_distinct_dept_address_,
		       school_code
		FROM
		  (SELECT school_code,
		          COUNT() AS n
		   FROM department
		   GROUP BY school_code)
		ORDER BY count_distinct_dept_address_

	    count_distinct_dept_address_  school_code
	0                              1         &SCI
	1                              1     7(V2FBUS
	2                              1         A&SC
	3                              1     BUSNCL4R
	4                              1     BUSX2mzI
	5                              1    QeJBUSQqv
	6                              1    ROWBUSXLk
	7                              1           US
	8                              1  XDWA&SCInxS
	9                              1    XIfBUSByM
	10                             1    YtwBUSDkY
	11                             1  mFFA&SCI9ow
	12                             1  qY9A&SCIDdW
	13                             6          BUS
	14                            10        A&SCI
No solution for instance spider/college_1/0073 (2633)
Wrong output for fuzzied solution in instance spider/college_1/0040 (2634)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM CLASS AS T1
		JOIN enroll AS T2 ON T1.class_code = T2.class_code
		JOIN course AS T3 ON T1.crs_code = T3.crs_code
		JOIN department AS T4 ON T3.dept_code = T4.dept_code
		WHERE T4.dept_name = 'Accounting'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`class_code` AS `class_code`,
		          `LHS`.`crs_code` AS `crs_code`,
		          `LHS`.`class_section` AS `class_section`,
		          `LHS`.`class_time` AS `class_time`,
		          `LHS`.`class_room` AS `class_room`,
		          `LHS`.`prof_num` AS `prof_num`,
		          `LHS`.`stu_num` AS `stu_num`,
		          `LHS`.`enroll_grade` AS `enroll_grade`,
		          `LHS`.`crs_credit` AS `crs_credit`,
		          `LHS`.`dept_code` AS `dept_code`,
		          `LHS`.`n` AS `n`,
		          `RHS`.`dept_name` AS `dept_name`,
		          `RHS`.`school_code` AS `school_code`,
		          `RHS`.`emp_num` AS `emp_num`,
		          `RHS`.`dept_address` AS `dept_address`,
		          `RHS`.`dept_extension` AS `dept_extension`
		   FROM
		     (SELECT `LHS`.`class_code` AS `class_code`,
		             `LHS`.`crs_code` AS `crs_code`,
		             `LHS`.`class_section` AS `class_section`,
		             `LHS`.`class_time` AS `class_time`,
		             `LHS`.`class_room` AS `class_room`,
		             `LHS`.`prof_num` AS `prof_num`,
		             `LHS`.`stu_num` AS `stu_num`,
		             `LHS`.`enroll_grade` AS `enroll_grade`,
		             `RHS`.`crs_credit` AS `crs_credit`,
		             `RHS`.`dept_code` AS `dept_code`,
		             `RHS`.`n` AS `n`
		      FROM
		        (SELECT `LHS`.`class_code` AS `class_code`,
		                `LHS`.`crs_code` AS `crs_code`,
		                `LHS`.`class_section` AS `class_section`,
		                `LHS`.`class_time` AS `class_time`,
		                `LHS`.`class_room` AS `class_room`,
		                `LHS`.`prof_num` AS `prof_num`,
		                `RHS`.`stu_num` AS `stu_num`,
		                `RHS`.`enroll_grade` AS `enroll_grade`
		         FROM `class` AS `LHS`
		         INNER JOIN `enroll` AS `RHS` ON (`LHS`.`class_code` = `RHS`.`class_code`)) AS `LHS`
		      CROSS JOIN
		        (SELECT `crs_credit`,
		                `dept_code`,
		                COUNT() AS `n`
		         FROM `course`
		         GROUP BY `crs_credit`,
		                  `dept_code`) AS `RHS`) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `department`
		      WHERE (`dept_name` != 'Accounting')) AS RHS ON (LHS.dept_code = RHS.dept_code))
		ORDER BY count___

	   count___
	0         1
	1         2
	2         3
No solution for instance spider/college_1/0070 (2635)
Wrong output for fuzzied solution in instance spider/college_1/0049 (2637)
	EXPECTED OUTPUT ====

		SELECT T2.dept_name
		FROM professor AS T1
		JOIN department AS T2 ON T1.dept_code = T2.dept_code
		GROUP BY T1.dept_code
		ORDER BY count(*)
		LIMIT 1

	         dept_name
	0  PsychologydnGt8
	ACTUAL OUTPUT ====

		
		SELECT dept_name
		FROM
		  (SELECT LHS.emp_num AS emp_num,
		          LHS.prof_extension AS prof_extension,
		          LHS.n AS n,
		          RHS.dept_code AS dept_code,
		          RHS.dept_name AS dept_name,
		          RHS.school_code AS school_code,
		          RHS.dept_address AS dept_address
		   FROM
		     (SELECT emp_num,
		             prof_extension,
		             COUNT() AS n
		      FROM professor
		      GROUP BY emp_num,
		               prof_extension) AS LHS
		   INNER JOIN department AS RHS ON (LHS.emp_num = RHS.emp_num
		                                       AND LHS.prof_extension = RHS.dept_extension))
		ORDER BY dept_name

	Empty DataFrame
	Columns: [dept_name]
	Index: []
Wrong output for fuzzied solution in instance spider/college_1/0031 (2638)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM department AS T1
		JOIN course AS T2 ON T1.dept_code = T2.dept_code
		WHERE dept_name = "Computer Info. Systems"

	   count(*)
	0        53
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`crs_code` AS `crs_code`,
		          `LHS`.`dept_code` AS `dept_code`,
		          `LHS`.`crs_description` AS `crs_description`,
		          `LHS`.`crs_credit` AS `crs_credit`,
		          `LHS`.`school_code` AS `school_code`,
		          `LHS`.`n` AS `n`,
		          `RHS`.`dept_name` AS `dept_name`,
		          `RHS`.`emp_num` AS `emp_num`,
		          `RHS`.`dept_address` AS `dept_address`,
		          `RHS`.`dept_extension` AS `dept_extension`
		   FROM
		     (SELECT `LHS`.`crs_code` AS `crs_code`,
		             `LHS`.`dept_code` AS `dept_code`,
		             `LHS`.`crs_description` AS `crs_description`,
		             `LHS`.`crs_credit` AS `crs_credit`,
		             `RHS`.`school_code` AS `school_code`,
		             `RHS`.`n` AS `n`
		      FROM `course` AS `LHS`
		      CROSS JOIN
		        (SELECT `school_code`,
		                COUNT() AS `n`
		         FROM `department`
		         GROUP BY `school_code`) AS `RHS`) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `department`
		      WHERE (`dept_name` = 'Computer Info. Systems')) AS RHS ON (LHS.dept_code = RHS.dept_code
		                                                                 AND LHS.school_code = RHS.school_code))
		ORDER BY count___

	   count___
	0         1
	1         2
	2         5
	3        20
Wrong output for fuzzied solution in instance spider/college_1/0058 (2640)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM professor
		WHERE prof_high_degree = 'Ph.D.'
		  OR prof_high_degree = 'MA'

	   count(*)
	0       146
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `professor`
		      WHERE (`prof_high_degree` = 'Ph.D.'
		             OR `prof_high_degree` != 'MA')))
		ORDER BY count___

	   count___
	0       262
Wrong output for fuzzied solution in instance spider/phone_1/0002 (2641)
	EXPECTED OUTPUT ====

		SELECT Model_name,
		       RAM_MiB
		FROM chip_model
		ORDER BY RAM_MiB ASC
		LIMIT 1;

	    model_name  ram_mib
	0  X50 Standar    63.98
	ACTUAL OUTPUT ====

		
		SELECT model_name,
		       ram_mib
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM chip_model
		      ORDER BY slots)
		   LIMIT 1)

	      model_name  ram_mib
	0  q9Bp2X3 Basic    64.02
No solution for instance spider/phone_1/0017 (2642)
No solution for instance spider/phone_1/0027 (2645)
Wrong output for fuzzied solution in instance spider/phone_1/0006 (2648)
	EXPECTED OUTPUT ====

		SELECT avg(T1.ROM_MiB)
		FROM chip_model AS T1
		JOIN phone AS T2 ON T1.Model_name = T2.chip_model
		WHERE T2.Company_name = "Nokia Corporation";

	   avg(t1.rom_mib)
	0            95.99
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `ram_mib` AS `avg_t1_rom_mib_`
		FROM
		  (SELECT `LHS`.`model_name` AS `model_name`,
		          `LHS`.`ram_mib` AS `ram_mib`,
		          `LHS`.`meanrom_mib` AS `meanrom_mib`,
		          `RHS`.`company_name` AS `company_name`,
		          `RHS`.`hardware_model_name` AS `hardware_model_name`,
		          `RHS`.`accreditation_type` AS `accreditation_type`,
		          `RHS`.`accreditation_level` AS `accreditation_level`,
		          `RHS`.`date` AS `date`,
		          `RHS`.`screen_mode` AS `screen_mode`
		   FROM
		     (SELECT `model_name`,
		             `ram_mib`,
		             AVG(`rom_mib`) AS `meanrom_mib`
		      FROM `chip_model`
		      GROUP BY `model_name`,
		               `ram_mib`) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `phone`
		      WHERE (`company_name` = 'Nokia Corporation')) AS RHS ON (LHS.model_name = RHS.chip_model))
		ORDER BY avg_t1_rom_mib_

	   avg_t1_rom_mib_
	0            63.98
	1            64.02
No solution for instance spider/phone_1/0026 (2651)
No solution for instance spider/phone_1/0015 (2652)
No solution for instance spider/phone_1/0005 (2653)
No solution for instance spider/phone_1/0016 (2654)
Wrong output for fuzzied solution in instance spider/phone_1/0018 (2655)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.Hardware_Model_name
		FROM screen_mode AS T1
		JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode
		WHERE t2.Company_name = "Nokia Corporation"
		  AND T1.Type != "Text";

	       hardware_model_name
	0           40n3bNokia 700
	1            GT-I9300WBR5J
	2  XPERIA T, XPERIA Jb8v9K
	3               Z520ePj838
	4           sRhGT-I9300fA)
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `hardware_model_name`
		FROM
		  (SELECT `LHS`.`graphics_mode` AS `graphics_mode`,
		          `LHS`.`char_cells` AS `char_cells`,
		          `LHS`.`pixels` AS `pixels`,
		          `LHS`.`hardware_colours` AS `hardware_colours`,
		          `LHS`.`used_kb` AS `used_kb`,
		          `LHS`.`map` AS `map`,
		          `LHS`.`type` AS `type`,
		          `RHS`.`company_name` AS `company_name`,
		          `RHS`.`hardware_model_name` AS `hardware_model_name`,
		          `RHS`.`accreditation_type` AS `accreditation_type`,
		          `RHS`.`accreditation_level` AS `accreditation_level`,
		          `RHS`.`date` AS `date`,
		          `RHS`.`chip_model` AS `chip_model`,
		          `RHS`.`screen_mode` AS `screen_mode`
		   FROM `screen_mode` AS `LHS`
		   CROSS JOIN `phone` AS `RHS`)
		WHERE (`company_name` = 'Nokia Corporation'
		       AND `type` != 'Text')
		ORDER BY hardware_model_name

	       hardware_model_name
	0           40n3bNokia 700
	1            GT-I9300WBR5J
	2           QxKWLNokia 700
	3  XPERIA T, XPERIA Jb8v9K
	4               Z520ePj838
	5               Z520eVvD9h
	6           sRhGT-I9300fA)
No solution for instance spider/phone_1/0019 (2657)
Wrong output for fuzzied solution in instance spider/phone_1/0021 (2660)
	EXPECTED OUTPUT ====

		SELECT Accreditation_level
		FROM phone
		GROUP BY Accreditation_level
		HAVING count(*) > 3

	  accreditation_level
	0                joyn
	ACTUAL OUTPUT ====

		
		SELECT accreditation_level
		FROM
		  (SELECT accreditation_level,
		          accreditation_type,
		          COUNT() AS n
		   FROM phone
		   GROUP BY accreditation_level,
		            accreditation_type)
		WHERE (n < 3)
		ORDER BY accreditation_level

	    accreditation_level
	0            FIyjoynjv3
	1                   joy
	2                  joyn
	3                  joyn
	4                  joyn
	5                  joyn
	6                  joyn
	7        joyn Hot Fixes
	8   mxfhcjoyn Hot Fixes
	9                   oyn
	10           vDEjoynK6X
Wrong output for fuzzied solution in instance spider/phone_1/0023 (2661)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM chip_model
		WHERE wifi = 'No'

	   count(*)
	0        42
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `ram_mib`,
		          `wifi`,
		          COUNT() AS `n`
		   FROM `chip_model`
		   GROUP BY `ram_mib`,
		            `wifi`)
		WHERE (`wifi` != 'No')
		ORDER BY count___

	    count___
	0          1
	1          1
	2          1
	3          1
	4          1
	5          1
	6          1
	7          1
	8          1
	9          1
	10         1
	11         1
	12         1
	13         1
	14         1
	15         1
	16         1
	17         1
	18         1
	19         1
	20         1
	21         1
	22         1
	23         1
	24         2
	25         3
	26         3
	27         4
No solution for instance spider/phone_1/0014 (2663)
No solution for instance spider/phone_1/0009 (2664)
No solution for instance spider/phone_1/0025 (2665)
Wrong output for fuzzied solution in instance spider/phone_1/0011 (2666)
	EXPECTED OUTPUT ====

		SELECT Company_name,
		       count(*)
		FROM phone
		GROUP BY Company_name
		ORDER BY count(*) ASC
		LIMIT 1;

	             company_name  count(*)
	0  Nokia CorporationXhHOq         1
	ACTUAL OUTPUT ====

		
		SELECT company_name,
		       n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT company_name,
		                hardware_model_name,
		                COUNT() AS n
		         FROM phone
		         GROUP BY company_name,
		                  hardware_model_name)
		      ORDER BY hardware_model_name DESC)
		   LIMIT 1)

	                company_name  count___
	0  Samsung Electronics Co Lt         1
No solution for instance spider/phone_1/0010 (2667)
No solution for instance spider/chinook_1/0042 (2668)
No solution for instance spider/chinook_1/0033 (2669)
Wrong output for base solution in instance spider/chinook_1/0037 (2670)
	EXPECTED OUTPUT ====

	   avg_t2_unitprice_
	0               0.99
	ACTUAL OUTPUT ====

		SELECT AVG(T2.UnitPrice)
		FROM GENRE AS T1
		JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId
		WHERE T1.Name = "Rock"

	   avg(t2.unitprice)
	0               0.99
Wrong output for ground truth in instance spider/chinook_1/0037 (2670)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21960.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_23747.sqlite3'
Memout while getting results...


No solution for instance spider/chinook_1/0038 (2676)
No solution for instance spider/chinook_1/0003 (2677)
Error while getting results...

Abnormal termination
No solution for instance spider/chinook_1/0022 (2679)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_24018.sqlite3'
Memout while getting results...


No solution for instance spider/chinook_1/0006 (2682)
Error while getting results...

Abnormal termination
No solution for instance spider/chinook_1/0012 (2684)
No solution for instance spider/chinook_1/0026 (2685)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_24352.sqlite3'
Memout while getting results...


No solution for instance spider/chinook_1/0016 (2688)
No solution for instance spider/chinook_1/0032 (2689)
Error while getting results...

Abnormal termination
No solution for instance spider/chinook_1/0041 (2691)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_24639.sqlite3'
Memout while getting results...


No solution for instance spider/chinook_1/0019 (2694)
Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_24936.sqlite3'
Memout while getting results...


No solution for instance spider/chinook_1/0021 (2698)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_24936.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_24936.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25382.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
No solution for instance spider/chinook_1/0010 (2706)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25661.sqlite3'
Memout while getting results...


No solution for instance spider/chinook_1/0031 (2709)
No solution for instance spider/scientist_1/0008 (2711)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25661.sqlite3'
Wrong output for fuzzied solution in instance spider/scientist_1/0015 (2717)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.name
		FROM projects AS T1
		JOIN assignedto AS T2 ON T1.code = T2.project
		WHERE T1.hours > 300
		GROUP BY T1.name

	    count(*)                                               name
	0          1                 RDdx)UMLW06jz DfECFYWAtMUaN3(vsdV2
	1          1                (KGwPAerodynamics and Bridge Design
	2          1                         A Magnetic Primer Designer
	3          1                    A Magnetic Primer DesignerPCOHG
	4          1  Z6gm7Juicy: Extracting Apple Juice with Pectinase
	5          1                   cx)Aerodynamics of a FootballlxB
	6          1  d8iJuicy: Extracting Apple Juice with Pectinas...
	7          1               hgOAerodynamics and Bridge Designuqn
	8          2       4th)PrBO(8QpqrGClgwoCz)N1PacNCkCJRIWcpQSroGs
	9          2  Juicy: Extracting Apple Juice with PectinaseuLgo2
	10         2                f55TDAerodynamics and Bridge Design
	11         2              uofO1SGh20WTLR3EshRow9Rpc8AXwYDmFQQF6
	12         3                         Aerodynamics of a Football
	13         3  Juicy: Extracting Apple Juice with Pectinaseg5tVP
	14         3                        hdZW0rqjEWrKzYTwCMsS9LlMA6c
	15         3             ndjx5W)KttnGc6YDYaF1uwREjuwWcB1Efy)jFY
	16         3                    tW3ZpA Magnetic Primer Designer
	17         3        tv5trukGETOvJ7Nj1tT4ntOix8efyTU)T)VRpxWeIAh
	18         5                      erodynamics and Bridge Design
	19         6                    Aerodynamics of a FootballXr3Yx
	20         6        Juicy: Extracting Apple Juice with Pectinas
	21         7  p9IqtJuicy: Extracting Apple Juice with Pectinase
	22         8                          erodynamics of a Football
	23         9                     Aerodynamics and Bridge Design
	24        10       Juicy: Extracting Apple Juice with Pectinase
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       name
		FROM
		  (SELECT LHS.code AS code,
		          LHS.name AS name,
		          LHS.hours AS hours,
		          RHS.n AS n
		   FROM
		     (SELECT *
		      FROM projects
		      WHERE (hours >= 300)) AS LHS
		   INNER JOIN
		     (SELECT project,
		             COUNT() AS n
		      FROM assignedto
		      GROUP BY project) AS RHS ON (LHS.code = RHS.project))
		ORDER BY count___

	    count___                                               name
	0          1                 RDdx)UMLW06jz DfECFYWAtMUaN3(vsdV2
	1          1   towRJuicy: Extracting Apple Juice with Pectinase
	2          1                (KGwPAerodynamics and Bridge Design
	3          1                         A Magnetic Primer Designer
	4          1                    A Magnetic Primer DesignerPCOHG
	5          1  Z6gm7Juicy: Extracting Apple Juice with Pectinase
	6          1                   cx)Aerodynamics of a FootballlxB
	7          1  d8iJuicy: Extracting Apple Juice with Pectinas...
	8          1               hgOAerodynamics and Bridge Designuqn
	9          2                           Magnetic Primer Designer
	10         2       4th)PrBO(8QpqrGClgwoCz)N1PacNCkCJRIWcpQSroGs
	11         2                     Aerodynamics and Bridge Design
	12         2        Juicy: Extracting Apple Juice with Pectinas
	13         2       Juicy: Extracting Apple Juice with Pectinase
	14         2  Juicy: Extracting Apple Juice with PectinaseuLgo2
	15         2                f55TDAerodynamics and Bridge Design
	16         2                      oZQn48Js2VSX 2VAzisEEcEY53mgw
	17         2              uofO1SGh20WTLR3EshRow9Rpc8AXwYDmFQQF6
	18         3                     Aerodynamics and Bridge Design
	19         3                         Aerodynamics of a Football
	20         3  Juicy: Extracting Apple Juice with Pectinaseg5tVP
	21         3                        hdZW0rqjEWrKzYTwCMsS9LlMA6c
	22         3             ndjx5W)KttnGc6YDYaF1uwREjuwWcB1Efy)jFY
	23         3                    tW3ZpA Magnetic Primer Designer
	24         3        tv5trukGETOvJ7Nj1tT4ntOix8efyTU)T)VRpxWeIAh
	25         4                     Aerodynamics and Bridge Design
	26         4        Juicy: Extracting Apple Juice with Pectinas
	27         4       Juicy: Extracting Apple Juice with Pectinase
	28         4       Juicy: Extracting Apple Juice with Pectinase
	29         4                          erodynamics of a Football
	30         4                          erodynamics of a Football
	31         5                      erodynamics and Bridge Design
	32         6                    Aerodynamics of a FootballXr3Yx
	33         7  p9IqtJuicy: Extracting Apple Juice with Pectinase
Wrong output for fuzzied solution in instance spider/scientist_1/0016 (2719)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.name
		FROM scientists AS T1
		JOIN assignedto AS T2 ON T1.ssn = T2.scientist
		GROUP BY T1.name

	   count(*)                 name
	0         3          Carol Smith
	1         4          Zacary Efro
	2         5         Zacary Efron
	3         6  3CEO(Eric Goldsmith
	4         7     Carol SmithqrHJY
	5         7          acary Efron
	6        31       Eric Goldsmith
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___,
		                name
		FROM
		  (SELECT LHS.scientist AS scientist,
		          LHS.project AS project,
		          RHS.name AS name,
		          RHS.ssn AS ssn,
		          RHS.n AS n
		   FROM assignedto AS LHS
		   CROSS JOIN
		     (SELECT name,
		             ssn,
		             COUNT() AS n
		      FROM scientists
		      GROUP BY name,
		               ssn) AS RHS)
		ORDER BY count___

	   count___                 name
	0         1  3CEO(Eric Goldsmith
	1         1          Carol Smith
	2         1     Carol SmithqrHJY
	3         1       Eric Goldsmith
	4         1          Zacary Efro
	5         1         Zacary Efron
	6         1          acary Efron
Wrong output for fuzzied solution in instance spider/scientist_1/0018 (2720)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM assignedto AS T1
		JOIN scientists AS T2 ON T1.scientist = T2.ssn

	                   name
	0   3CEO(Eric Goldsmith
	1   3CEO(Eric Goldsmith
	2   3CEO(Eric Goldsmith
	3   3CEO(Eric Goldsmith
	4   3CEO(Eric Goldsmith
	..                  ...
	58          acary Efron
	59          acary Efron
	60          acary Efron
	61          acary Efron
	62          acary Efron
	
	[63 rows x 1 columns]
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM scientists
		ORDER BY name

	                  name
	0  3CEO(Eric Goldsmith
	1          Carol Smith
	2     Carol SmithqrHJY
	3       Eric Goldsmith
	4       Eric Goldsmith
	5       Eric Goldsmith
	6       Eric Goldsmith
	7          Zacary Efro
	8         Zacary Efron
	9          acary Efron
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25661.sqlite3'
Wrong output for fuzzied solution in instance spider/scientist_1/0021 (2723)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM scientists
		WHERE ssn NOT IN
		    (SELECT scientist
		     FROM AssignedTo)

	   count(*)
	0        26
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT scientist,
		             project,
		             ssn,
		             project AS name
		      FROM
		        (SELECT scientist,
		                project,
		                scientist AS ssn
		         FROM
		           (SELECT LHS.scientist AS scientist,
		                   LHS.project AS project
		            FROM assignedto AS LHS
		            INNER JOIN scientists AS RHS ON (LHS.scientist = RHS.ssn
		                                                AND LHS.project = RHS.name)))))
		ORDER BY count___

	   count___
	0         0
Error while executing solution for instance spider/scientist_1/0023 (2724)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/scientist_1/0023 (2724)
Wrong output for fuzzied solution in instance spider/scientist_1/0014 (2726)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.name
		FROM projects AS T1
		JOIN assignedto AS T2 ON T1.code = T2.project
		GROUP BY T1.name

	   count(*)                                        name
	0         4             Aerodynamics of Air HockeyEun2W
	1         5   PrR1BWinds: Studying Bernoullis Principle
	2         5  eB5Winds: Studying Bernoullis PrincipleveW
	3         6                  Aerodynamics of Air Hockey
	4         6            IQ)Aerodynamics of Air HockeyGVR
	5         6                   erodynamics of Air Hockey
	6         7                  erodynamics and Ice Hockey
	7         8                  Aerodynamics and Ice Hocke
	8         8                 Aerodynamics and Ice Hockey
	9         8        Winds: Studying Bernoullis Principle
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       name
		FROM
		  (SELECT name,
		          project,
		          COUNT() AS n
		   FROM
		     (SELECT code,
		             name,
		             hours,
		             scientist,
		             code AS project
		      FROM
		        (SELECT LHS.code AS code,
		                LHS.name AS name,
		                LHS.hours AS hours,
		                RHS.scientist AS scientist
		         FROM projects AS LHS
		         INNER JOIN assignedto AS RHS ON (LHS.code = RHS.project)))
		   GROUP BY name,
		            project)
		ORDER BY count___

	    count___                                        name
	0          2        Winds: Studying Bernoullis Principle
	1          3                  Aerodynamics and Ice Hocke
	2          3                 Aerodynamics and Ice Hockey
	3          4             Aerodynamics of Air HockeyEun2W
	4          5                  Aerodynamics and Ice Hocke
	5          5                 Aerodynamics and Ice Hockey
	6          5   PrR1BWinds: Studying Bernoullis Principle
	7          5  eB5Winds: Studying Bernoullis PrincipleveW
	8          6                  Aerodynamics of Air Hockey
	9          6            IQ)Aerodynamics of Air HockeyGVR
	10         6        Winds: Studying Bernoullis Principle
	11         6                   erodynamics of Air Hockey
	12         7                  erodynamics and Ice Hockey
No solution for instance spider/scientist_1/0009 (2727)
Wrong output for fuzzied solution in instance spider/scientist_1/0011 (2728)
	EXPECTED OUTPUT ====

		SELECT name
		FROM projects
		WHERE hours BETWEEN 100 AND 300

	                              name
	0         Magnetic Primer Designer
	1      Soluble Separation Solution
	2      Soluble Separation Solution
	3    2sahIPiCarmSzJ8w6sOuYAMGwu( P
	4   3ZbBuild Your Own TelescopegMA
	5       A Magnetic Primer Designer
	6       A Magnetic Primer Designer
	7       A Magnetic Primer Designer
	8       A Magnetic Primer Designer
	9       A Magnetic Primer Designer
	10   A Soluble Separation Solution
	11     Aerodynamics and Gas Mileag
	12    Aerodynamics and Gas Mileage
	13      Aerodynamics and Ice Hocke
	14     Aerodynamics and Ice Hockey
	15        Build Your Own Telescope
	16        Build Your Own Telescope
	17   EOVeAuPM5mbxVzuJuoyW2NAiK()6D
	18      erodynamics and Ice Hockey
	19   fLPiHkpbxIfhQuAcG 0Z0Av(C)cAD
	20  qTJBuild Your Own TelescopeUpf
	21   rqyEglegyT uyAVFDd0OXqRrm4KZZ
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM projects
		WHERE (hours >= 100
		       AND hours < 300)
		ORDER BY name

	                              name
	0         Magnetic Primer Designer
	1      Soluble Separation Solution
	2      Soluble Separation Solution
	3    2sahIPiCarmSzJ8w6sOuYAMGwu( P
	4   3ZbBuild Your Own TelescopegMA
	5       A Magnetic Primer Designer
	6       A Magnetic Primer Designer
	7       A Magnetic Primer Designer
	8    A Soluble Separation Solution
	9      Aerodynamics and Gas Mileag
	10    Aerodynamics and Gas Mileage
	11      Aerodynamics and Ice Hocke
	12     Aerodynamics and Ice Hockey
	13        Build Your Own Telescope
	14   EOVeAuPM5mbxVzuJuoyW2NAiK()6D
	15      erodynamics and Ice Hockey
	16   fLPiHkpbxIfhQuAcG 0Z0Av(C)cAD
	17  qTJBuild Your Own TelescopeUpf
	18   rqyEglegyT uyAVFDd0OXqRrm4KZZ
No solution for instance spider/scientist_1/0010 (2729)
Error while executing solution for instance spider/game_1/0033 (2730)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT stuid) OVER () AS count_distinct_stuid_
FROM plays_games
ORDER BY count_distinct_stuid_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/game_1/0017 (2734)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT stuid) OVER () AS count_distinct_stuid_
FROM sportsinfo
ORDER BY count_distinct_stuid_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/game_1/0008 (2735)
	EXPECTED OUTPUT ====

		SELECT gtype,
		       count(*)
		FROM Video_games
		GROUP BY gtype

	                              gtype  count(*)
	0            Walking SimulatorFZjIj         1
	1                 Walking Simulator         2
	2  assively multiplayer online game         3
	ACTUAL OUTPUT ====

		
		SELECT gtype,
		       n AS count___
		FROM
		  (SELECT gname,
		          gtype,
		          COUNT() AS n
		   FROM video_games
		   GROUP BY gname,
		            gtype)
		ORDER BY gtype

	                              gtype  count___
	0                 Walking Simulator         1
	1                 Walking Simulator         1
	2            Walking SimulatorFZjIj         1
	3  assively multiplayer online game         1
	4  assively multiplayer online game         1
	5  assively multiplayer online game         1
Wrong output for fuzzied solution in instance spider/game_1/0039 (2736)
	EXPECTED OUTPUT ====

		SELECT gname
		FROM Plays_games AS T1
		JOIN Video_games AS T2 ON T1.gameid = T2.gameid
		GROUP BY T1.gameid
		HAVING sum(hours_played) >= 1000

	                                gname
	0               (h5oD5SlQeJQqv2N3F9Xd
	1               ))wCall of DestinyI 8
	2                     Call of Destiny
	3                     Call of Destiny
	4   INw8RThe Vanishing of Eric Calder
	5  PxCThe Vanishing of Eric CalderLkv
	6   The Vanishing of Eric Calder8oCto
	ACTUAL OUTPUT ====

		
		SELECT gname
		FROM
		  (SELECT LHS.gameid AS gameid,
		          LHS.gname AS gname,
		          LHS.gtype AS gtype,
		          LHS.stuid AS stuid,
		          LHS.hours_played AS hours_played,
		          RHS.sumhours_played AS sumhours_played
		   FROM
		     (SELECT LHS.gameid AS gameid,
		             LHS.gname AS gname,
		             LHS.gtype AS gtype,
		             RHS.stuid AS stuid,
		             RHS.hours_played AS hours_played
		      FROM video_games AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM plays_games
		         WHERE (hours_played >= 1000)) AS RHS ON (LHS.gameid = RHS.gameid)) AS LHS
		   INNER JOIN
		     (SELECT hours_played,
		             SUM(hours_played) AS sumhours_played
		      FROM plays_games
		      WHERE (hours_played >= 1000)
		      GROUP BY hours_played) AS RHS ON (LHS.hours_played = RHS.hours_played))
		ORDER BY gname

	                                 gname
	0                (h5oD5SlQeJQqv2N3F9Xd
	1                (h5oD5SlQeJQqv2N3F9Xd
	2                (h5oD5SlQeJQqv2N3F9Xd
	3                (h5oD5SlQeJQqv2N3F9Xd
	4                ))wCall of DestinyI 8
	5                      Call of Destiny
	6                      Call of Destiny
	7                      Call of Destiny
	8                      Call of Destiny
	9                      Call of Destiny
	10   INw8RThe Vanishing of Eric Calder
	11  PxCThe Vanishing of Eric CalderLkv
	12  PxCThe Vanishing of Eric CalderLkv
	13   The Vanishing of Eric Calder8oCto
Wrong output for fuzzied solution in instance spider/game_1/0038 (2737)
	EXPECTED OUTPUT ====

		SELECT gname
		FROM Plays_games AS T1
		JOIN Video_games AS T2 ON T1.gameid = T2.gameid
		GROUP BY T1.gameid
		ORDER BY sum(hours_played) DESC
		LIMIT 1

	              gname
	0  orks of Widenius
	ACTUAL OUTPUT ====

		
		SELECT gname
		FROM
		  (SELECT *
		   FROM video_games AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT gameid,
		                  hours_played,
		                  SUM(hours_played) AS sumhours_played
		           FROM
		             (SELECT LHS.stuid AS stuid,
		                     LHS.gameid AS gameid,
		                     LHS.hours_played AS hours_played,
		                     RHS.stuid AS stuid_other,
		                     RHS.gameid AS gameid_other,
		                     RHS.hours_played AS hours_played_other
		              FROM plays_games AS LHS
		              CROSS JOIN plays_games AS RHS)
		           WHERE (hours_played < hours_played_other)
		           GROUP BY gameid,
		                    hours_played) AS RHS
		        WHERE (LHS.gameid = RHS.gameid) ))
		ORDER BY gname

	Empty DataFrame
	Columns: [gname]
	Index: []
Wrong output for fuzzied solution in instance spider/game_1/0003 (2738)
	EXPECTED OUTPUT ====

		SELECT DISTINCT gtype
		FROM Video_games

	                              gtype
	0                 Walking Simulator
	1            Walking SimulatorFZjIj
	2  assively multiplayer online game
	ACTUAL OUTPUT ====

		
		SELECT gtype
		FROM video_games
		ORDER BY gtype

	                              gtype
	0                 Walking Simulator
	1                 Walking Simulator
	2            Walking SimulatorFZjIj
	3  assively multiplayer online game
	4  assively multiplayer online game
	5  assively multiplayer online game
No solution for instance spider/game_1/0030 (2741)
Wrong output for fuzzied solution in instance spider/game_1/0026 (2746)
	EXPECTED OUTPUT ====

		SELECT sportname
		FROM Sportsinfo
		WHERE onscholarship = 'Y'
		GROUP BY sportname
		ORDER BY count(*) DESC
		LIMIT 1

	    sportname
	0  Basketball
	ACTUAL OUTPUT ====

		
		SELECT `sportname`
		FROM
		  (SELECT `onscholarship`,
		          `sportname`,
		          COUNT() AS `n`
		   FROM `sportsinfo`
		   GROUP BY `onscholarship`,
		            `sportname`)
		WHERE (`onscholarship` = 'Y'
		       AND n != 1)
		ORDER BY sportname

	    sportname
	0  Basketball
	1     Cricket
	2      ricket
Error while executing solution for instance spider/game_1/0016 (2749)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT sportname) OVER () AS count_distinct_sportname_
FROM sportsinfo
ORDER BY count_distinct_sportname_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/game_1/0032 (2750)
Wrong output for fuzzied solution in instance spider/game_1/0035 (2753)
	EXPECTED OUTPUT ====

		SELECT StuID
		FROM Sportsinfo INTERSECT
		SELECT StuID
		FROM Plays_games

	   stuid
	0   1006
	1   1027
	2   1028
	3   1029
	4   1030
	5   1031
	6   1034
	7   1036
	ACTUAL OUTPUT ====

		
		SELECT stuid
		FROM
		  (SELECT *
		   FROM sportsinfo AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM plays_games AS RHS
		        WHERE (LHS.stuid = RHS.stuid) ))
		ORDER BY stuid

	    stuid
	0    1006
	1    1006
	2    1006
	3    1006
	4    1006
	5    1006
	6    1027
	7    1027
	8    1027
	9    1027
	10   1027
	11   1027
	12   1027
	13   1027
	14   1027
	15   1027
	16   1027
	17   1028
	18   1028
	19   1028
	20   1028
	21   1028
	22   1028
	23   1029
	24   1029
	25   1029
	26   1029
	27   1029
	28   1029
	29   1029
	30   1030
	31   1030
	32   1030
	33   1030
	34   1030
	35   1030
	36   1031
	37   1031
	38   1031
	39   1031
	40   1031
	41   1031
	42   1031
	43   1031
	44   1031
	45   1034
	46   1034
	47   1034
	48   1034
	49   1036
	50   1036
	51   1036
	52   1036
	53   1036
	54   1036
Wrong output for fuzzied solution in instance spider/game_1/0007 (2756)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Video_games
		WHERE gtype = "Massively multiplayer online game"

	   count(*)
	0         3
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `gname`,
		          `gtype`,
		          COUNT() AS `n`
		   FROM `video_games`
		   GROUP BY `gname`,
		            `gtype`)
		WHERE (`gtype` != 'Massively multiplayer online game')
		ORDER BY count___

	   count___
	0         1
Wrong output for fuzzied solution in instance spider/game_1/0024 (2758)
	EXPECTED OUTPUT ====

		SELECT StuID
		FROM Sportsinfo
		GROUP BY StuID
		HAVING sum(hoursperweek) > 10

	   stuid
	0   1006
	1   1027
	2   1028
	3   1029
	4   1030
	5   1031
	6   1034
	7   1036
	ACTUAL OUTPUT ====

		
		SELECT stuid
		FROM sportsinfo
		WHERE (hoursperweek >= 10)
		ORDER BY stuid

	    stuid
	0    1006
	1    1006
	2    1006
	3    1006
	4    1006
	5    1006
	6    1027
	7    1027
	8    1027
	9    1027
	10   1027
	11   1027
	12   1027
	13   1027
	14   1027
	15   1027
	16   1027
	17   1028
	18   1028
	19   1028
	20   1028
	21   1028
	22   1028
	23   1029
	24   1029
	25   1029
	26   1029
	27   1029
	28   1029
	29   1029
	30   1030
	31   1030
	32   1030
	33   1030
	34   1030
	35   1030
	36   1031
	37   1031
	38   1031
	39   1031
	40   1031
	41   1031
	42   1031
	43   1031
	44   1031
	45   1034
	46   1034
	47   1034
	48   1034
	49   1036
	50   1036
	51   1036
	52   1036
	53   1036
	54   1036
Wrong output for fuzzied solution in instance spider/game_1/0021 (2759)
	EXPECTED OUTPUT ====

		SELECT sum(gamesplayed)
		FROM Sportsinfo
		WHERE sportname = "Football"
		  AND onscholarship = 'Y'

	  sum(gamesplayed)
	0             None
	ACTUAL OUTPUT ====

		
		SELECT `sumgamesplayed` AS `sum_gamesplayed_`
		FROM
		  (SELECT `onscholarship`,
		          SUM(`gamesplayed`) AS `sumgamesplayed`
		   FROM
		     (SELECT *
		      FROM `sportsinfo`
		      WHERE (`sportname` = 'Football'
		             AND `onscholarship` = 'Y'))
		   GROUP BY onscholarship)
		ORDER BY sum_gamesplayed_

	Empty DataFrame
	Columns: [sum_gamesplayed_]
	Index: []
No solution for instance spider/game_1/0023 (2760)
Wrong output for base solution in instance spider/game_1/0014 (2762)
	EXPECTED OUTPUT ====

	   major   avg_age_  min_age_  max_age_
	0    100  17.000000        17        17
	1    540  17.500000        17        18
	2    520  19.333333        18        22
	3    600  19.666667        16        27
	4    550  19.800000        18        21
	5     50  22.000000        18        26
	ACTUAL OUTPUT ====

		SELECT major,
		       avg(age),
		       min(age),
		       max(age)
		FROM Student
		GROUP BY major

	   major   avg(age)  min(age)  max(age)
	0     50  22.000000        18        26
	1    100  17.000000        17        17
	2    520  19.333333        18        22
	3    540  17.500000        17        18
	4    550  19.800000        18        21
	5    600  19.666667        16        27
Wrong output for ground truth in instance spider/game_1/0014 (2762)
Wrong output for fuzzied solution in instance spider/game_1/0009 (2763)
	EXPECTED OUTPUT ====

		SELECT gtype
		FROM Video_games
		GROUP BY gtype
		ORDER BY count(*) DESC
		LIMIT 1

	               gtype
	0  Walking Simulator
	ACTUAL OUTPUT ====

		
		SELECT gtype
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT gameid,
		                gname,
		                gtype,
		                COUNT(*) OVER () AS n
		         FROM video_games)
		      ORDER BY gtype DESC)
		   LIMIT 1)

	                        gtype
	0  vTYFrist-person shootervPj
No solution for instance spider/game_1/0025 (2764)
Wrong output for fuzzied solution in instance spider/game_1/0029 (2766)
	EXPECTED OUTPUT ====

		SELECT StuID
		FROM Student
		WHERE sex = 'F' INTERSECT
		  SELECT StuID
		  FROM Sportsinfo WHERE sportname = "Football"

	   stuid
	0   1005
	1   1034
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `stuid_other` AS `stuid`
		FROM
		  (SELECT `stuid`,
		          `lname`,
		          `fname`,
		          `age`,
		          `sex`,
		          `major`,
		          `advisor`,
		          `city_code`,
		          `stuid_other`,
		          `sportname`,
		          `hoursperweek`,
		          `onscholarship`,
		          `age` AS `gamesplayed`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `RHS`.`stuid` AS `stuid_other`,
		             `RHS`.`sportname` AS `sportname`,
		             `RHS`.`hoursperweek` AS `hoursperweek`,
		             `RHS`.`onscholarship` AS `onscholarship`
		      FROM `student` AS `LHS`
		      INNER JOIN `sportsinfo` AS `RHS` ON (`LHS`.`age` = `RHS`.`gamesplayed`)))
		WHERE (`sex` != 'F'
		       OR `sportname` = 'Football')
		ORDER BY stuid

	   stuid
	0   1006
	1   1021
	2   1029
	3   1031
	4   1033
	5   1034
	6   1035
Wrong output for fuzzied solution in instance spider/game_1/0010 (2767)
	EXPECTED OUTPUT ====

		SELECT gtype
		FROM Video_games
		GROUP BY gtype
		ORDER BY count(*)
		LIMIT 1

	                    gtype
	0  Walking SimulatorFZjIj
	ACTUAL OUTPUT ====

		
		SELECT gtype
		FROM
		  (SELECT LHS.gtype AS gtype,
		          LHS.n AS n,
		          RHS.gname AS gname
		   FROM
		     (SELECT gtype,
		             COUNT() AS n
		      FROM video_games
		      GROUP BY gtype) AS LHS
		   INNER JOIN video_games AS RHS ON (LHS.n = RHS.gameid
		                                        AND LHS.gtype = RHS.gtype))
		ORDER BY gtype

	                              gtype
	0                 Walking Simulator
	1            Walking SimulatorFZjIj
	2  assively multiplayer online game
Wrong output for fuzzied solution in instance spider/game_1/0040 (2768)
	EXPECTED OUTPUT ====

		SELECT Gname
		FROM Plays_games AS T1
		JOIN Video_games AS T2 ON T1.gameid = T2.gameid
		JOIN Student AS T3 ON T3.Stuid = T1.Stuid
		WHERE T3.Lname = "Smith"
		  AND T3.Fname = "Linda"

	Empty DataFrame
	Columns: [gname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `gname`
		FROM
		  (SELECT `LHS`.`gameid` AS `gameid`,
		          `LHS`.`gname` AS `gname`,
		          `LHS`.`gtype` AS `gtype`,
		          `LHS`.`stuid` AS `stuid`,
		          `LHS`.`hours_played` AS `hours_played`,
		          `RHS`.`lname` AS `lname`,
		          `RHS`.`fname` AS `fname`,
		          `RHS`.`age` AS `age`,
		          `RHS`.`sex` AS `sex`,
		          `RHS`.`major` AS `major`,
		          `RHS`.`advisor` AS `advisor`,
		          `RHS`.`city_code` AS `city_code`
		   FROM
		     (SELECT `LHS`.`gameid` AS `gameid`,
		             `LHS`.`gname` AS `gname`,
		             `LHS`.`gtype` AS `gtype`,
		             `RHS`.`stuid` AS `stuid`,
		             `RHS`.`hours_played` AS `hours_played`
		      FROM `video_games` AS `LHS`
		      INNER JOIN `plays_games` AS `RHS` ON (`LHS`.`gameid` = `RHS`.`gameid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `student`
		      WHERE (`lname` = 'Smith'
		             OR `fname` = 'Linda')) AS RHS ON (LHS.stuid = RHS.stuid))
		ORDER BY gname

	                          gname
	0        9rnPfWorks of Widenius
	1        9rnPfWorks of Widenius
	2               Call of Destiny
	3               Call of Destiny
	4               Call of Destiny
	5               Call of Destiny
	6   Europe is the UniverseEun2W
	7   Europe is the UniverseEun2W
	8   Europe is the UniverseEun2W
	9              Works of Wideniu
	10             Works of Wideniu
	11       iiO5oWorks of Widenius
	12       iiO5oWorks of Widenius
	13       iiO5oWorks of Widenius
	14       iiO5oWorks of Widenius
	15      kIUWorks of WideniusLo5
	16       mWS9EWorks of Widenius
Wrong output for fuzzied solution in instance spider/game_1/0028 (2769)
	EXPECTED OUTPUT ====

		SELECT StuID
		FROM Student
		WHERE major = 600 INTERSECT
		  SELECT StuID
		  FROM Sportsinfo WHERE onscholarship = 'Y'

	   stuid
	0   1030
	1   1031
	ACTUAL OUTPUT ====

		
		SELECT `stuid`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `RHS`.`sportname` AS `sportname`,
		          `RHS`.`hoursperweek` AS `hoursperweek`,
		          `RHS`.`gamesplayed` AS `gamesplayed`,
		          `RHS`.`onscholarship` AS `onscholarship`
		   FROM `student` AS `LHS`
		   INNER JOIN `sportsinfo` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`))
		WHERE (`onscholarship` = 'Y'
		       AND major = 600)
		ORDER BY stuid

	   stuid
	0   1030
	1   1030
	2   1030
	3   1030
	4   1031
No solution for instance spider/game_1/0031 (2770)
Wrong output for fuzzied solution in instance spider/election/0033 (2771)
	EXPECTED OUTPUT ====

		SELECT T2.Party
		FROM election AS T1
		JOIN party AS T2 ON T1.Party = T2.Party_ID
		WHERE T1.Committee = "Appropriations" INTERSECT
		  SELECT T2.Party
		  FROM election AS T1
		  JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = "Economic Matters"

	          party
	0     Democrati
	1  Independence
	ACTUAL OUTPUT ====

		
		SELECT `party`
		FROM
		  (SELECT `party_id`,
		          `year`,
		          `party`,
		          `governor`,
		          `lieutenant_governor`,
		          `comptroller`,
		          `attorney_general`,
		          `us_senate`,
		          `election_id`,
		          `counties_represented`,
		          `delegate`,
		          `party_other`,
		          `first_elected`,
		          `committee`,
		          `party_id` AS `district`
		   FROM
		     (SELECT `LHS`.`party_id` AS `party_id`,
		             `LHS`.`year` AS `year`,
		             `LHS`.`party` AS `party`,
		             `LHS`.`governor` AS `governor`,
		             `LHS`.`lieutenant_governor` AS `lieutenant_governor`,
		             `LHS`.`comptroller` AS `comptroller`,
		             `LHS`.`attorney_general` AS `attorney_general`,
		             `LHS`.`us_senate` AS `us_senate`,
		             `RHS`.`election_id` AS `election_id`,
		             `RHS`.`counties_represented` AS `counties_represented`,
		             `RHS`.`delegate` AS `delegate`,
		             `RHS`.`party` AS `party_other`,
		             `RHS`.`first_elected` AS `first_elected`,
		             `RHS`.`committee` AS `committee`
		      FROM `party` AS `LHS`
		      INNER JOIN `election` AS `RHS` ON (`LHS`.`party_id` = `RHS`.`district`)))
		WHERE (`committee` != 'Appropriations'
		       AND `committee` = 'Economic Matters')
		ORDER BY party

	               party
	0             Libera
	1  Sv9UmIndependence
	2  Sv9UmIndependence
No solution for instance spider/election/0017 (2773)
No solution for instance spider/election/0022 (2777)
Wrong output for fuzzied solution in instance spider/election/0030 (2778)
	EXPECTED OUTPUT ====

		SELECT Governor
		FROM party
		GROUP BY Governor
		ORDER BY COUNT(*) DESC
		LIMIT 1

	               governor
	0  Betsy McCaughey Ross
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT governor
		FROM
		  (SELECT comptroller,
		          governor,
		          COUNT() AS n
		   FROM
		     (SELECT party_id,
		             YEAR,
		             party,
		             attorney_general AS governor,
		             lieutenant_governor,
		             comptroller,
		             attorney_general,
		             us_senate,
		             party_id_other,
		             year_other,
		             lieutenant_governor_other,
		             comptroller_other,
		             attorney_general_other,
		             us_senate_other
		      FROM
		        (SELECT LHS.party_id AS party_id,
		                LHS.year AS YEAR,
		                LHS.party AS party,
		                LHS.governor AS governor,
		                LHS.lieutenant_governor AS lieutenant_governor,
		                LHS.comptroller AS comptroller,
		                LHS.attorney_general AS attorney_general,
		                LHS.us_senate AS us_senate,
		                RHS.party_id AS party_id_other,
		                RHS.year AS year_other,
		                RHS.lieutenant_governor AS lieutenant_governor_other,
		                RHS.comptroller AS comptroller_other,
		                RHS.attorney_general AS attorney_general_other,
		                RHS.us_senate AS us_senate_other
		         FROM party AS LHS
		         INNER JOIN party AS RHS ON (LHS.party = RHS.party
		                                        AND LHS.attorney_general = RHS.governor)))
		   GROUP BY comptroller,
		            governor)
		ORDER BY governor

	Empty DataFrame
	Columns: [governor]
	Index: []
Wrong output for fuzzied solution in instance spider/election/0015 (2784)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT T2.Delegate)
		FROM county AS T1
		JOIN election AS T2 ON T1.County_id = T2.District
		WHERE T1.Population > 50000

	   count(distinct t2.delegate)
	0                            4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n_distinct AS count_distinct_t2_delegate_
		FROM
		  (SELECT committee,
		          COUNT(DISTINCT population) AS n_distinct
		   FROM
		     (SELECT LHS.county_id AS county_id,
		             LHS.county_name AS county_name,
		             LHS.population AS population,
		             LHS.zip_code AS zip_code,
		             RHS.election_id AS election_id,
		             RHS.counties_represented AS counties_represented,
		             RHS.district AS district,
		             RHS.delegate AS delegate,
		             RHS.party AS party,
		             RHS.first_elected AS first_elected,
		             RHS.committee AS committee
		      FROM county AS LHS
		      CROSS JOIN election AS RHS)
		   GROUP BY committee)
		WHERE (n_distinct != 50000)
		ORDER BY count_distinct_t2_delegate_

	   count_distinct_t2_delegate_
	0                            6
No solution for instance spider/election/0032 (2787)
No solution for instance spider/election/0019 (2790)
Wrong output for fuzzied solution in instance spider/election/0007 (2791)
	EXPECTED OUTPUT ====

		SELECT Delegate
		FROM election
		WHERE District = 1

	                            delegate
	0  iller, Warren E. Warren E. Miller
	ACTUAL OUTPUT ====

		
		SELECT delegate
		FROM election
		WHERE (district <= 1)
		ORDER BY delegate

	                            delegate
	0   Turner, Frank S. Frank S. Turner
	1  iller, Warren E. Warren E. Miller
Wrong output for fuzzied solution in instance spider/election/0034 (2792)
	EXPECTED OUTPUT ====

		SELECT T1.Committee
		FROM election AS T1
		JOIN party AS T2 ON T1.Party = T2.Party_ID
		WHERE T2.Party = "Democratic" INTERSECT
		  SELECT T1.Committee
		  FROM election AS T1
		  JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = "Liberal"

	                          committee
	0  Health and Government Operations
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `committee`
		FROM
		  (SELECT `LHS`.`party_id` AS `party_id`,
		          `LHS`.`year` AS `year`,
		          `LHS`.`party` AS `party`,
		          `LHS`.`governor` AS `governor`,
		          `LHS`.`lieutenant_governor` AS `lieutenant_governor`,
		          `LHS`.`comptroller` AS `comptroller`,
		          `LHS`.`attorney_general` AS `attorney_general`,
		          `LHS`.`us_senate` AS `us_senate`,
		          `RHS`.`election_id` AS `election_id`,
		          `RHS`.`counties_represented` AS `counties_represented`,
		          `RHS`.`district` AS `district`,
		          `RHS`.`delegate` AS `delegate`,
		          `RHS`.`party` AS `party_other`,
		          `RHS`.`committee` AS `committee`
		   FROM
		     (SELECT *
		      FROM `party`
		      WHERE (`party` = 'Democratic'
		             OR `party` != 'Liberal')) AS LHS
		   INNER JOIN election AS RHS ON (LHS.year = RHS.first_elected))
		ORDER BY committee

	Empty DataFrame
	Columns: [committee]
	Index: []
Wrong output for fuzzied solution in instance spider/election/0029 (2801)
	EXPECTED OUTPUT ====

		SELECT T2.Party
		FROM election AS T1
		JOIN party AS T2 ON T1.Party = T2.Party_ID
		GROUP BY T1.Party
		ORDER BY COUNT(*) DESC
		LIMIT 1

	     party
	0  Liberal
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT party
		FROM
		  (SELECT LHS.party_id AS party_id,
		          LHS.year AS YEAR,
		          LHS.party AS party,
		          LHS.governor AS governor,
		          LHS.lieutenant_governor AS lieutenant_governor,
		          LHS.comptroller AS comptroller,
		          LHS.attorney_general AS attorney_general,
		          LHS.us_senate AS us_senate,
		          RHS.election_id AS election_id,
		          RHS.first_elected AS first_elected
		   FROM party AS LHS
		   INNER JOIN
		     (SELECT election_id,
		             first_elected,
		             COUNT() AS n
		      FROM election
		      GROUP BY election_id,
		               first_elected) AS RHS ON (LHS.party_id = RHS.n))
		ORDER BY party

	          party
	0  Independence
Wrong output for fuzzied solution in instance spider/election/0028 (2803)
	EXPECTED OUTPUT ====

		SELECT Party
		FROM party
		GROUP BY Party
		HAVING COUNT(*) >= 2

	              party
	0         Democrati
	1        Democratic
	2      Independence
	3  Working Families
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT party
		FROM
		  (SELECT party,
		          us_senate,
		          COUNT() AS n
		   FROM
		     (SELECT party_id,
		             YEAR,
		             party,
		             attorney_general AS governor,
		             lieutenant_governor,
		             comptroller,
		             attorney_general,
		             us_senate,
		             party_id_other,
		             year_other,
		             lieutenant_governor_other,
		             comptroller_other,
		             attorney_general_other,
		             us_senate_other
		      FROM
		        (SELECT LHS.party_id AS party_id,
		                LHS.year AS YEAR,
		                LHS.party AS party,
		                LHS.governor AS governor,
		                LHS.lieutenant_governor AS lieutenant_governor,
		                LHS.comptroller AS comptroller,
		                LHS.attorney_general AS attorney_general,
		                LHS.us_senate AS us_senate,
		                RHS.party_id AS party_id_other,
		                RHS.year AS year_other,
		                RHS.lieutenant_governor AS lieutenant_governor_other,
		                RHS.comptroller AS comptroller_other,
		                RHS.attorney_general AS attorney_general_other,
		                RHS.us_senate AS us_senate_other
		         FROM party AS LHS
		         INNER JOIN party AS RHS ON (LHS.party = RHS.party
		                                        AND LHS.attorney_general = RHS.governor)))
		   GROUP BY party,
		            us_senate)
		ORDER BY party

	Empty DataFrame
	Columns: [party]
	Index: []
Wrong output for fuzzied solution in instance spider/election/0031 (2804)
	EXPECTED OUTPUT ====

		SELECT Comptroller,
		       COUNT(*)
		FROM party
		GROUP BY Comptroller
		ORDER BY COUNT(*) DESC
		LIMIT 1

	   comptroller  count(*)
	0  Alan Hevesi         2
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT comptroller,
		                n AS count___
		FROM
		  (SELECT comptroller,
		          party_id,
		          COUNT() AS n
		   FROM
		     (SELECT party_id,
		             YEAR,
		             party,
		             governor,
		             lieutenant_governor,
		             comptroller,
		             governor AS attorney_general,
		             us_senate,
		             party_id_other,
		             year_other,
		             party_other,
		             governor_other,
		             lieutenant_governor_other,
		             comptroller_other,
		             us_senate_other
		      FROM
		        (SELECT LHS.party_id AS party_id,
		                LHS.year AS YEAR,
		                LHS.party AS party,
		                LHS.governor AS governor,
		                LHS.lieutenant_governor AS lieutenant_governor,
		                LHS.comptroller AS comptroller,
		                LHS.attorney_general AS attorney_general,
		                LHS.us_senate AS us_senate,
		                RHS.party_id AS party_id_other,
		                RHS.year AS year_other,
		                RHS.party AS party_other,
		                RHS.governor AS governor_other,
		                RHS.lieutenant_governor AS lieutenant_governor_other,
		                RHS.comptroller AS comptroller_other,
		                RHS.us_senate AS us_senate_other
		         FROM party AS LHS
		         INNER JOIN party AS RHS ON (LHS.governor = RHS.attorney_general)))
		   GROUP BY comptroller,
		            party_id)
		ORDER BY comptroller

	Empty DataFrame
	Columns: [comptroller, count___]
	Index: []
Wrong output for fuzzied solution in instance spider/body_builder/0008 (2807)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM body_builder AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		WHERE T1.Total > 300

	         name
	0  Mark Fayne
	1  Mark Fayne
	2  Mark Fayne
	3  Mark Fayne
	4  Mark Fayne
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.people_id AS people_id,
		          LHS.name AS name,
		          LHS.height AS height,
		          LHS.weight AS weight,
		          LHS.birth_date AS birth_date,
		          LHS.birth_place AS birth_place,
		          RHS.body_builder_id AS body_builder_id,
		          RHS.snatch AS snatch,
		          RHS.clean_jerk AS clean_jerk,
		          RHS.total AS total
		   FROM people AS LHS
		   INNER JOIN body_builder AS RHS ON (LHS.people_id = RHS.people_id))
		WHERE (total >= 300.0)
		ORDER BY name

	         name
	0  Mark Fayne
	1  Mark Fayne
	2  Mark Fayne
	3  Mark Fayne
	4  Mark Fayne
	5  Mark Fayne
	6  Mark Fayne
No solution for instance spider/body_builder/0012 (2813)
Wrong output for fuzzied solution in instance spider/body_builder/0015 (2814)
	EXPECTED OUTPUT ====

		SELECT Birth_Place
		FROM people
		GROUP BY Birth_Place
		ORDER BY COUNT(*) DESC
		LIMIT 1

	         birth_place
	0  Anchorage, Alaska
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT birth_place
		FROM
		  (SELECT LHS.people_id AS people_id,
		          LHS.name AS name,
		          LHS.height AS height,
		          LHS.weight AS weight,
		          LHS.birth_date AS birth_date,
		          LHS.birth_place AS birth_place,
		          RHS.birth_date AS birth_date_other,
		          RHS.people_id AS people_id_other
		   FROM people AS LHS
		   INNER JOIN
		     (SELECT birth_date,
		             people_id,
		             COUNT() AS n
		      FROM people
		      GROUP BY birth_date,
		               people_id) AS RHS ON (LHS.people_id = RHS.n))
		ORDER BY birth_place

	        birth_place
	0  ghXPBr1DKRaCBHZM
Wrong output for fuzzied solution in instance spider/body_builder/0005 (2815)
	EXPECTED OUTPUT ====

		SELECT Clean_Jerk
		FROM body_builder
		ORDER BY Total DESC
		LIMIT 1

	   clean_jerk
	0      174.99
	ACTUAL OUTPUT ====

		
		SELECT clean_jerk
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM body_builder
		      ORDER BY people_id)
		   LIMIT 1)

	   clean_jerk
	0       175.0
Wrong output for fuzzied solution in instance spider/body_builder/0020 (2817)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT Birth_Place)
		FROM people

	   count(distinct birth_place)
	0                            2
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count_distinct_birth_place_
		FROM people
		ORDER BY count_distinct_birth_place_

	   count_distinct_birth_place_
	0                            8
Wrong output for fuzzied solution in instance spider/body_builder/0019 (2818)
	EXPECTED OUTPUT ====

		SELECT Name,
		       birth_place
		FROM people
		EXCEPT
		SELECT T1.Name,
		       T1.birth_place
		FROM people AS T1
		JOIN body_builder AS T2 ON T1.people_id = T2.people_id

	                   name                birth_place
	0            Al Montoya    83zAnchorage, AlaskaYsw
	1         Jake Gardiner          Anchorage, Alaska
	2   RKiJack CampbellCvs          Anchorage, Alaska
	3           GfGERkHWnqE     Anchorage, Alaska9R1f3
	4      F68Al Montoyakua     OWHFkAnchorage, Alaska
	5             Al Montoy        Port Huron, Michiga
	6             l Montoya        Port Huron, Michiga
	7             mw q9)DEh        Port Huron, Michiga
	8         Jack Campbell       Port Huron, Michigan
	9        vus(l4xKIS3FfD       Port Huron, Michigan
	10  9nwJake Gardiner)Nm  Port Huron, MichigantG8Yr
	11     JONAl MontoyaReM   TXoxWpFZvLSqYoWUDbnBWrvB
	12   LeL88Jack Campbell     cU(dDAnchorage, Alaska
	13    B yF0QS1VAa(qwWax           ghXPBr1DKRaCBHZM
	14        Jake Gardiner    sUhAnchorage, AlaskaT2e
	ACTUAL OUTPUT ====

		
		SELECT name,
		       birth_place
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM body_builder AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY name

	                   name                birth_place
	0            Al Montoya    83zAnchorage, AlaskaYsw
	1            Al Montoya          Anchorage, Alaska
	2         Jake Gardiner          Anchorage, Alaska
	3   RKiJack CampbellCvs          Anchorage, Alaska
	4           GfGERkHWnqE     Anchorage, Alaska9R1f3
	5      F68Al Montoyakua     OWHFkAnchorage, Alaska
	6             Al Montoy        Port Huron, Michiga
	7             l Montoya        Port Huron, Michiga
	8             mw q9)DEh        Port Huron, Michiga
	9         Jack Campbell       Port Huron, Michigan
	10       vus(l4xKIS3FfD       Port Huron, Michigan
	11  9nwJake Gardiner)Nm  Port Huron, MichigantG8Yr
	12     JONAl MontoyaReM   TXoxWpFZvLSqYoWUDbnBWrvB
	13   LeL88Jack Campbell     cU(dDAnchorage, Alaska
	14    B yF0QS1VAa(qwWax           ghXPBr1DKRaCBHZM
	15        Jake Gardiner    sUhAnchorage, AlaskaT2e
Wrong output for fuzzied solution in instance spider/body_builder/0021 (2821)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM people
		WHERE people_id NOT IN
		    (SELECT People_ID
		     FROM body_builder)

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___
		FROM
		  (SELECT LHS.name AS name,
		          LHS.people_id AS people_id,
		          LHS.n AS n,
		          RHS.body_builder_id AS body_builder_id,
		          RHS.snatch AS snatch,
		          RHS.clean_jerk AS clean_jerk,
		          RHS.total AS total
		   FROM
		     (SELECT name,
		             people_id,
		             COUNT() AS n
		      FROM people
		      GROUP BY name,
		               people_id) AS LHS
		   LEFT JOIN body_builder AS RHS ON (LHS.people_id = RHS.people_id))
		ORDER BY count___

	   count___
	0         1
No solution for instance spider/body_builder/0023 (2822)
Wrong output for fuzzied solution in instance spider/body_builder/0014 (2824)
	EXPECTED OUTPUT ====

		SELECT Birth_Place,
		       COUNT(*)
		FROM people
		GROUP BY Birth_Place

	          birth_place  count(*)
	0   Anchorage, Alaska         3
	1  Glenview, Illinois         5
	ACTUAL OUTPUT ====

		
		SELECT birth_place,
		       n AS count___
		FROM
		  (SELECT birth_place,
		          people_id,
		          COUNT() AS n
		   FROM people
		   GROUP BY birth_place,
		            people_id)
		ORDER BY birth_place

	          birth_place  count___
	0   Anchorage, Alaska         1
	1   Anchorage, Alaska         1
	2   Anchorage, Alaska         1
	3  Glenview, Illinois         1
	4  Glenview, Illinois         1
	5  Glenview, Illinois         1
	6  Glenview, Illinois         1
	7  Glenview, Illinois         1
Wrong output for fuzzied solution in instance spider/body_builder/0009 (2825)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM body_builder AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T2.Weight DESC
		LIMIT 1

	            name
	0  Jack Campbell
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.people_id AS people_id,
		                LHS.name AS name,
		                LHS.height AS height,
		                LHS.weight AS weight,
		                LHS.birth_date AS birth_date,
		                LHS.birth_place AS birth_place,
		                RHS.body_builder_id AS body_builder_id,
		                RHS.snatch AS snatch,
		                RHS.clean_jerk AS clean_jerk,
		                RHS.total AS total
		         FROM people AS LHS
		         INNER JOIN body_builder AS RHS ON (LHS.people_id = RHS.people_id))
		      ORDER BY name)
		   LIMIT 1)

	               name
	0  0chMark FayneTrq
No solution for instance spider/body_builder/0010 (2827)
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0037 (2829)
	EXPECTED OUTPUT ====

		SELECT T2.card_type_code,
		       count(*)
		FROM Financial_transactions AS T1
		JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id
		GROUP BY T2.card_type_code

	  card_type_code  count(*)
	0          Credi         6
	1         Credit        40
	2           Debi         4
	3          Debit         6
	4     DebitET2Ek         3
	5     DebitZso3B         3
	6   Yg4Creditm1Z         5
	7           ebit         5
	ACTUAL OUTPUT ====

		
		SELECT card_type_code,
		       transaction_id AS count___
		FROM
		  (SELECT LHS.transaction_id AS transaction_id,
		          LHS.previous_transaction_id AS previous_transaction_id,
		          LHS.account_id AS account_id,
		          LHS.card_id AS card_id,
		          LHS.transaction_type AS transaction_type,
		          LHS.transaction_date AS transaction_date,
		          LHS.transaction_amount AS transaction_amount,
		          LHS.transaction_comment AS transaction_comment,
		          LHS.other_transaction_details AS other_transaction_details,
		          RHS.card_type_code AS card_type_code
		   FROM financial_transactions AS LHS
		   INNER JOIN
		     (SELECT card_type_code,
		             COUNT() AS n
		      FROM customers_cards
		      GROUP BY card_type_code) AS RHS ON (LHS.transaction_id = RHS.n))
		ORDER BY card_type_code

	  card_type_code  count___
	0          Debit         3
	1          Debit         3
	2          Debit         3
No solution for instance spider/customers_card_transactions/0008 (2833)
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0039 (2834)
	EXPECTED OUTPUT ====

		SELECT transaction_type
		FROM Financial_transactions
		GROUP BY transaction_type
		ORDER BY sum(transaction_amount) DESC
		LIMIT 1

	  transaction_type
	0          Payment
	ACTUAL OUTPUT ====

		
		SELECT transaction_type
		FROM
		  (SELECT other_transaction_details,
		          transaction_type,
		          SUM(transaction_amount) AS sumtransaction_amount
		   FROM
		     (SELECT card_id AS transaction_id,
		             previous_transaction_id,
		             account_id,
		             card_id,
		             transaction_type,
		             transaction_date,
		             transaction_amount,
		             transaction_comment,
		             other_transaction_details,
		             previous_transaction_id_other,
		             account_id_other,
		             transaction_type_other,
		             transaction_date_other,
		             transaction_amount_other,
		             transaction_comment_other,
		             other_transaction_details_other
		      FROM
		        (SELECT transaction_id,
		                previous_transaction_id,
		                account_id,
		                account_id AS card_id,
		                transaction_type,
		                transaction_date,
		                transaction_amount,
		                transaction_comment,
		                other_transaction_details,
		                previous_transaction_id_other,
		                account_id_other,
		                transaction_type_other,
		                transaction_date_other,
		                transaction_amount_other,
		                transaction_comment_other,
		                other_transaction_details_other
		         FROM
		           (SELECT LHS.transaction_id AS transaction_id,
		                   LHS.previous_transaction_id AS previous_transaction_id,
		                   LHS.account_id AS account_id,
		                   LHS.card_id AS card_id,
		                   LHS.transaction_type AS transaction_type,
		                   LHS.transaction_date AS transaction_date,
		                   LHS.transaction_amount AS transaction_amount,
		                   LHS.transaction_comment AS transaction_comment,
		                   LHS.other_transaction_details AS other_transaction_details,
		                   RHS.previous_transaction_id AS previous_transaction_id_other,
		                   RHS.account_id AS account_id_other,
		                   RHS.transaction_type AS transaction_type_other,
		                   RHS.transaction_date AS transaction_date_other,
		                   RHS.transaction_amount AS transaction_amount_other,
		                   RHS.transaction_comment AS transaction_comment_other,
		                   RHS.other_transaction_details AS other_transaction_details_other
		            FROM financial_transactions AS LHS
		            INNER JOIN financial_transactions AS RHS ON (LHS.account_id = RHS.card_id
		                                                            AND LHS.card_id = RHS.transaction_id))))
		   GROUP BY other_transaction_details,
		            transaction_type)
		ORDER BY transaction_type

	   transaction_type
	0     8H7PaymentN1M
	1      99TRefundz0z
	2     JqdPaymentGi6
	3           Payment
	4           Payment
	5           Payment
	6           Payment
	7           Payment
	8      PaymentsrttX
	9            Refund
	10           Refund
	11      Refund43jcB
	12     WB5j0Payment
	13           ayment
	14    xzJPaymentwvj
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0022 (2838)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Customers_cards AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.customer_first_name = "Blanche"
		  AND T2.customer_last_name = "Huels"
		  AND T1.card_type_code = "Credit"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `card_id` AS `count___`
		FROM
		  (SELECT `card_id`,
		          `customer_id`,
		          `card_type_code`,
		          `card_number`,
		          `date_valid_from`,
		          `date_valid_to`,
		          `other_card_details`,
		          `customer_first_name`,
		          `customer_last_name`,
		          `card_id` AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`card_id` AS `card_id`,
		             `LHS`.`customer_id` AS `customer_id`,
		             `LHS`.`card_type_code` AS `card_type_code`,
		             `LHS`.`card_number` AS `card_number`,
		             `LHS`.`date_valid_from` AS `date_valid_from`,
		             `LHS`.`date_valid_to` AS `date_valid_to`,
		             `LHS`.`other_card_details` AS `other_card_details`,
		             `RHS`.`customer_first_name` AS `customer_first_name`,
		             `RHS`.`customer_last_name` AS `customer_last_name`
		      FROM `customers_cards` AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM
		           (SELECT `customer_first_name`,
		                   `customer_last_name`,
		                   COUNT(DISTINCT `customer_first_name`) AS `n_distinct`
		            FROM `customers`
		            GROUP BY `customer_first_name`,
		                     `customer_last_name`)
		         WHERE (`customer_first_name` = 'Blanche')) AS `RHS` ON (`LHS`.`card_id` = `RHS`.`n_distinct`)))
		WHERE (`customer_last_name` = 'Huels'
		       OR `card_type_code` = 'Credit')
		ORDER BY count___

	   count___
	0         1
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0004 (2842)
	EXPECTED OUTPUT ====

		SELECT T2.customer_first_name,
		       T2.customer_last_name,
		       T2.customer_phone
		FROM Accounts AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE T1.account_name = "162"

	Empty DataFrame
	Columns: [customer_first_name, customer_last_name, customer_phone]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT customer_first_name,
		       customer_last_name,
		       customer_phone
		FROM
		  (SELECT LHS.account_id AS account_id,
		          LHS.customer_id AS customer_id,
		          LHS.account_name AS account_name,
		          LHS.other_account_details AS other_account_details,
		          RHS.customer_first_name AS customer_first_name,
		          RHS.customer_last_name AS customer_last_name,
		          RHS.customer_address AS customer_address,
		          RHS.customer_phone AS customer_phone,
		          RHS.customer_email AS customer_email,
		          RHS.other_customer_details AS other_customer_details
		   FROM
		     (SELECT *
		      FROM accounts
		      WHERE (account_name = 162)) AS LHS
		   LEFT JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))
		ORDER BY customer_first_name

	  customer_first_name customer_last_name customer_phone
	0                None               None           None
No solution for instance spider/customers_card_transactions/0026 (2844)
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0015 (2845)
	EXPECTED OUTPUT ====

		SELECT customer_phone,
		       customer_email
		FROM Customers
		WHERE customer_first_name = "Aniyah"
		  AND customer_last_name = "Feest"

	Empty DataFrame
	Columns: [customer_phone, customer_email]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `customer_phone`,
		       `customer_email`
		FROM `customers`
		WHERE (`customer_first_name` = 'Aniyah'
		       OR `customer_last_name` = 'Feest')
		ORDER BY customer_phone

	   customer_phone                     customer_email
	0  1-207-977-5182  O7Pschaden.katrina@example.netwNf
	1  1-564-044-3909               ahomenick@example.or
	2  1-207-977-5182           kyra.murazik@example.org
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0005 (2846)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Accounts AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.customer_first_name = "Art"
		  AND T2.customer_last_name = "Turcotte"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`customer_first_name` AS `customer_first_name`,
		          `LHS`.`customer_last_name` AS `customer_last_name`,
		          `LHS`.`customer_address` AS `customer_address`,
		          `LHS`.`customer_phone` AS `customer_phone`,
		          `LHS`.`customer_email` AS `customer_email`,
		          `LHS`.`other_customer_details` AS `other_customer_details`,
		          `RHS`.`n` AS `n`
		   FROM `customers` AS `LHS`
		   INNER JOIN
		     (SELECT `customer_id`,
		             COUNT() AS `n`
		      FROM `accounts`
		      GROUP BY `customer_id`) AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))
		WHERE (`customer_first_name` = 'Art'
		       OR `customer_last_name` = 'Turcotte')
		ORDER BY count___

	   count___
	0         1
	1         2
Wrong output for base solution in instance spider/customers_card_transactions/0018 (2849)
	EXPECTED OUTPUT ====

		SELECT date_valid_from,
		       date_valid_to
		FROM Customers_cards
		WHERE card_number = "4560596484842"

	       date_valid_from        date_valid_to
	0  2011-04-17 09:05:28  2018-03-07 17:06:19
	ACTUAL OUTPUT ====

		
		SELECT date_valid_from,
		       date_valid_to
		FROM customers_cards
		WHERE (card_number = 4560596484842.0)
		ORDER BY date_valid_from

	Empty DataFrame
	Columns: [date_valid_from, date_valid_to]
	Index: []
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0035 (2850)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT transaction_type)
		FROM Financial_Transactions

	   count(distinct transaction_type)
	0                                29
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count_distinct_transaction_type_
		FROM
		  (SELECT transaction_comment,
		          COUNT(DISTINCT transaction_type) AS n_distinct
		   FROM financial_transactions
		   GROUP BY transaction_comment)
		ORDER BY count_distinct_transaction_type_

	    count_distinct_transaction_type_
	0                                  1
	1                                  1
	2                                  1
	3                                  1
	4                                  1
	..                               ...
	64                                 1
	65                                 1
	66                                 1
	67                                 2
	68                                 2
	
	[69 rows x 1 columns]
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0020 (2851)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Customers_cards AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.customer_first_name = "Art"
		  AND T2.customer_last_name = "Turcotte"

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `customer_first_name`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `customer_id`,
		                `customer_first_name`,
		                `customer_last_name`,
		                `customer_address`,
		                `customer_phone`,
		                `customer_email`,
		                `other_customer_details`,
		                `card_id`,
		                `card_type_code`,
		                `card_number`,
		                `date_valid_from`,
		                `date_valid_to`,
		                `customer_last_name` AS `other_card_details`
		         FROM
		           (SELECT `LHS`.`customer_id` AS `customer_id`,
		                   `LHS`.`customer_first_name` AS `customer_first_name`,
		                   `LHS`.`customer_last_name` AS `customer_last_name`,
		                   `LHS`.`customer_address` AS `customer_address`,
		                   `LHS`.`customer_phone` AS `customer_phone`,
		                   `LHS`.`customer_email` AS `customer_email`,
		                   `LHS`.`other_customer_details` AS `other_customer_details`,
		                   `RHS`.`card_id` AS `card_id`,
		                   `RHS`.`card_type_code` AS `card_type_code`,
		                   `RHS`.`card_number` AS `card_number`,
		                   `RHS`.`date_valid_from` AS `date_valid_from`,
		                   `RHS`.`date_valid_to` AS `date_valid_to`
		            FROM `customers` AS `LHS`
		            INNER JOIN `customers_cards` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`
		                                                         AND `LHS`.`customer_last_name` = `RHS`.`other_card_details`)))
		      WHERE (`customer_first_name` != 'Art'
		             AND `customer_last_name` = 'Turcotte')))
		ORDER BY count___

	   count___
	0         0
Wrong output for base solution in instance spider/customers_card_transactions/0019 (2852)
	EXPECTED OUTPUT ====

		SELECT T2.customer_first_name,
		       T2.customer_last_name,
		       T2.customer_phone
		FROM Customers_cards AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE T1.card_number = "4560596484842"

	  customer_first_name customer_last_name      customer_phone
	0             Blanche              Huels  (703)950-4708x8972
	ACTUAL OUTPUT ====

		
		SELECT customer_first_name,
		       customer_last_name,
		       customer_phone
		FROM
		  (SELECT LHS.card_id AS card_id,
		          LHS.customer_id AS customer_id,
		          LHS.card_type_code AS card_type_code,
		          LHS.card_number AS card_number,
		          LHS.date_valid_from AS date_valid_from,
		          LHS.date_valid_to AS date_valid_to,
		          LHS.other_card_details AS other_card_details,
		          RHS.customer_first_name AS customer_first_name,
		          RHS.customer_last_name AS customer_last_name,
		          RHS.customer_address AS customer_address,
		          RHS.customer_phone AS customer_phone,
		          RHS.customer_email AS customer_email,
		          RHS.other_customer_details AS other_customer_details
		   FROM customers_cards AS LHS
		   INNER JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))
		WHERE (card_number = 4560596484842.0)
		ORDER BY customer_first_name

	Empty DataFrame
	Columns: [customer_first_name, customer_last_name, customer_phone]
	Index: []
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0007 (2853)
	EXPECTED OUTPUT ====

		SELECT customer_id,
		       count(*)
		FROM Accounts
		GROUP BY customer_id
		ORDER BY count(*) DESC
		LIMIT 1

	   customer_id  count(*)
	0   6530681282         1
	ACTUAL OUTPUT ====

		
		SELECT customer_id,
		       n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT customer_id,
		                COUNT() AS n
		         FROM accounts
		         GROUP BY customer_id)
		      ORDER BY n DESC)
		   LIMIT 1)

	   customer_id  count___
	0            4         1
No solution for instance spider/customers_card_transactions/0024 (2855)
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0021 (2856)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Customers_cards
		WHERE card_type_code = "Debit"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `card_type_code`,
		          COUNT() AS `n`
		   FROM `customers_cards`
		   GROUP BY `card_type_code`)
		WHERE (`card_type_code` = 'Debit')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Error while executing solution for instance spider/customers_card_transactions/0009 (2860)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT customer_id) OVER () AS count___
FROM
  (SELECT *
   FROM customers AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM accounts AS RHS
        WHERE (LHS.customer_id = RHS.customer_id) ))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/customers_card_transactions/0025 (2861)
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0029 (2863)
	EXPECTED OUTPUT ====

		SELECT card_type_code
		FROM Customers_cards
		GROUP BY card_type_code
		HAVING count(*) >= 5

	  card_type_code
	0         Credit
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT card_type_code
		FROM
		  (SELECT card_type_code,
		          customer_id,
		          COUNT() AS n
		   FROM customers_cards
		   GROUP BY card_type_code,
		            customer_id)
		WHERE (n != 5)
		ORDER BY card_type_code

	  card_type_code
	0          Credi
	1         Credit
	2           Debi
	3          Debit
	4     DebitET2Ek
	5     DebitZso3B
	6   Yg4Creditm1Z
	7           ebit
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0010 (2864)
	EXPECTED OUTPUT ====

		SELECT customer_first_name,
		       customer_last_name
		FROM Customers
		EXCEPT
		SELECT T1.customer_first_name,
		       T1.customer_last_name
		FROM Customers AS T1
		JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id

	   customer_first_name customer_last_name
	0             32TiX6Yy              Feest
	1          3s8Susie)Bi        rwLFeestDK3
	2                AVRaT              Feest
	3              Faustin               uels
	4             Faustino         C0rFBFeest
	5             Faustino              Feest
	6             Faustino              Huels
	7             Faustino         cXl6KFeest
	8             Faustino               eest
	9          HnXSusieg7I            Effertz
	10             Izabell      (wNEffertzJG6
	11             Izabell               wift
	12            Izabella            Effertz
	13            Izabella               eest
	14       IzabellaKbw9Z       )qeEeEffertz
	15           KE(NatrTH              Swift
	16                 Nat              Feest
	17                 Nat               Huel
	18                 Nat              Swift
	19               PFw4H               uels
	20            SfH6wLQA            Effertz
	21                Susi      X1TEffertzAJa
	22               Susie              Feest
	23                  at            0FKWnoa
	24             austino              Huels
	25      cOsFaustino an              Huels
	26         jvsnOkWqiuP               Huel
	27         lSJSusiebkM               wift
	28              lnsn1G            Effertz
	29                nrvR              Huels
	30            qSg MWgS         QV1(CSwift
	31             zabella         FeestoRcfF
	ACTUAL OUTPUT ====

		
		SELECT customer_first_name,
		       customer_last_name
		FROM
		  (SELECT *
		   FROM customers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM accounts AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY customer_first_name

	   customer_first_name customer_last_name
	0             32TiX6Yy              Feest
	1          3s8Susie)Bi        rwLFeestDK3
	2                AVRaT              Feest
	3              Faustin               uels
	4             Faustino         C0rFBFeest
	5             Faustino              Feest
	6             Faustino              Huels
	7             Faustino         cXl6KFeest
	8             Faustino               eest
	9          HnXSusieg7I            Effertz
	10             Izabell      (wNEffertzJG6
	11             Izabell               wift
	12            Izabella            Effertz
	13            Izabella               eest
	14       IzabellaKbw9Z       )qeEeEffertz
	15           KE(NatrTH              Swift
	16                 Nat              Feest
	17                 Nat               Huel
	18                 Nat              Swift
	19               PFw4H               uels
	20            SfH6wLQA            Effertz
	21                Susi      X1TEffertzAJa
	22               Susie              Feest
	23               Susie              Feest
	24                  at            0FKWnoa
	25             austino              Huels
	26      cOsFaustino an              Huels
	27         jvsnOkWqiuP               Huel
	28         lSJSusiebkM               wift
	29              lnsn1G            Effertz
	30                nrvR              Huels
	31            qSg MWgS         QV1(CSwift
	32             zabella         FeestoRcfF
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0028 (2866)
	EXPECTED OUTPUT ====

		SELECT card_type_code
		FROM Customers_cards
		GROUP BY card_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  card_type_code
	0         Credit
	ACTUAL OUTPUT ====

		
		SELECT card_type_code
		FROM
		  (SELECT LHS.card_id AS card_id,
		          LHS.customer_id AS customer_id,
		          LHS.card_type_code AS card_type_code,
		          LHS.card_number AS card_number,
		          LHS.date_valid_from AS date_valid_from,
		          LHS.date_valid_to AS date_valid_to,
		          LHS.other_card_details AS other_card_details,
		          RHS.n AS n
		   FROM customers_cards AS LHS
		   INNER JOIN
		     (SELECT customer_id,
		             date_valid_from,
		             COUNT() AS n
		      FROM customers_cards
		      GROUP BY customer_id,
		               date_valid_from) AS RHS ON (LHS.card_id = RHS.customer_id
		                                           AND LHS.date_valid_from = RHS.date_valid_from))
		ORDER BY card_type_code

	  card_type_code
	0         Credit
	1          Debit
	2     DebitZso3B
No solution for instance spider/products_for_hire/0002 (2868)
Wrong output for fuzzied solution in instance spider/products_for_hire/0017 (2869)
	EXPECTED OUTPUT ====

		SELECT payment_date
		FROM payments
		WHERE amount_paid > 300
		  OR payment_type_code = 'Check'

	          payment_date
	0  2018-03-01 11:04:21
	1  2018-03-01 11:42:19
	2  2018-03-02 03:46:18
	3  2018-03-04 05:11:42
	4  2018-03-05 19:54:03
	5  2018-03-10 17:37:19
	6  2018-03-14 19:29:07
	7  2018-03-20 03:05:28
	8  2018-03-21 06:04:21
	9  2018-03-21 11:55:32
	ACTUAL OUTPUT ====

		
		SELECT `payment_date`
		FROM `payments`
		WHERE (`payment_type_code` = 'Check'
		       OR amount_paid >= 300.0)
		ORDER BY payment_date

	           payment_date
	0   2018-03-01 11:04:21
	1   2018-03-01 11:42:19
	2   2018-03-02 03:46:18
	3   2018-03-04 05:11:42
	4   2018-03-05 19:54:03
	5   2018-03-10 17:37:19
	6   2018-03-14 19:29:07
	7   2018-03-20 03:05:28
	8   2018-03-20 16:41:52
	9   2018-03-21 06:04:21
	10  2018-03-21 11:55:32
Wrong output for base solution in instance spider/products_for_hire/0003 (2871)
	EXPECTED OUTPUT ====

	   customer_id  sum_amount_paid_
	0           12           1000.65
	ACTUAL OUTPUT ====

		SELECT customer_id,
		       sum(amount_paid)
		FROM Payments
		GROUP BY customer_id
		ORDER BY sum(amount_paid) DESC
		LIMIT 1

	   customer_id  sum(amount_paid)
	0           12           1000.65
Wrong output for ground truth in instance spider/products_for_hire/0003 (2871)
Wrong output for fuzzied solution in instance spider/products_for_hire/0004 (2874)
	EXPECTED OUTPUT ====

		SELECT T1.booking_id,
		       T1.amount_of_refund
		FROM Bookings AS T1
		JOIN Payments AS T2 ON T1.booking_id = T2.booking_id
		GROUP BY T1.booking_id
		ORDER BY count(*) DESC
		LIMIT 1

	   booking_id  amount_of_refund
	0          14            135.94
	ACTUAL OUTPUT ====

		
		SELECT booking_id,
		       amount_of_refund
		FROM
		  (SELECT LHS.booking_id AS booking_id,
		          LHS.customer_id AS customer_id,
		          LHS.booking_status_code AS booking_status_code,
		          LHS.returned_damaged_yn AS returned_damaged_yn,
		          LHS.booking_start_date AS booking_start_date,
		          LHS.booking_end_date AS booking_end_date,
		          LHS.count_hired AS count_hired,
		          LHS.amount_payable AS amount_payable,
		          LHS.amount_of_discount AS amount_of_discount,
		          LHS.amount_outstanding AS amount_outstanding,
		          LHS.amount_of_refund AS amount_of_refund,
		          RHS.payment_id AS payment_id,
		          RHS.booking_id AS booking_id_other,
		          RHS.payment_type_code AS payment_type_code,
		          RHS.amount_paid_in_full_yn AS amount_paid_in_full_yn,
		          RHS.payment_date AS payment_date,
		          RHS.amount_due AS amount_due,
		          RHS.amount_paid AS amount_paid
		   FROM bookings AS LHS
		   INNER JOIN
		     (SELECT payment_id,
		             booking_id,
		             customer_id,
		             payment_type_code,
		             amount_paid_in_full_yn,
		             payment_date,
		             amount_due,
		             amount_paid,
		             COUNT(*) OVER () AS n
		      FROM payments) AS RHS ON (LHS.booking_id = RHS.n
		                                   AND LHS.customer_id = RHS.customer_id))
		ORDER BY booking_id

	   booking_id  amount_of_refund
	0          11            181.19
Wrong output for fuzzied solution in instance spider/products_for_hire/0015 (2876)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Products_for_hire
		WHERE product_id NOT IN
		    (SELECT product_id
		     FROM products_booked
		     WHERE booked_amount > 200 )

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n_distinct AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT LHS.product_id AS product_id,
		             LHS.product_type_code AS product_type_code,
		             LHS.daily_hire_cost AS daily_hire_cost,
		             LHS.product_name AS product_name,
		             LHS.product_description AS product_description,
		             RHS.booked_amount AS booked_amount,
		             RHS.product_id AS product_id_other,
		             RHS.n_distinct AS n_distinct
		      FROM products_for_hire AS LHS
		      CROSS JOIN
		        (SELECT booked_amount,
		                product_id,
		                COUNT(DISTINCT booked_amount) AS n_distinct
		         FROM products_booked
		         GROUP BY booked_amount,
		                  product_id) AS RHS)
		   WHERE (product_id <= product_id_other))
		WHERE (n_distinct < 200
		       OR booked_amount = n_distinct)
		ORDER BY count___

	   count___
	0         1
Wrong output for fuzzied solution in instance spider/products_for_hire/0005 (2877)
	EXPECTED OUTPUT ====

		SELECT product_id
		FROM products_booked
		GROUP BY product_id
		HAVING count(*) = 3

	Empty DataFrame
	Columns: [product_id]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT product_id
		FROM
		  (SELECT product_id,
		          returned_late_yn,
		          COUNT() AS n
		   FROM products_booked
		   GROUP BY product_id,
		            returned_late_yn)
		WHERE (n = 3)
		ORDER BY product_id

	   product_id
	0           2
	1           3
	2           3
	3           4
	4           5
No solution for instance spider/products_for_hire/0016 (2878)
No solution for instance spider/products_for_hire/0014 (2882)
Wrong output for base solution in instance spider/products_for_hire/0011 (2884)
	EXPECTED OUTPUT ====

	   avg_amount_due_
	0          564.386
	ACTUAL OUTPUT ====

		SELECT avg(amount_due)
		FROM payments

	   avg(amount_due)
	0          564.386
Wrong output for ground truth in instance spider/products_for_hire/0011 (2884)
No solution for instance spider/protein_institute/0017 (2887)
Wrong output for fuzzied solution in instance spider/protein_institute/0003 (2889)
	EXPECTED OUTPUT ====

		SELECT name
		FROM building
		ORDER BY height_feet DESC
		LIMIT 1

	                         name
	0  Franklin Exchange Building
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM building
		      ORDER BY years_as_tallest DESC)
		   LIMIT 1)

	                    name
	0  Citizens Bank Buildin
Wrong output for fuzzied solution in instance spider/protein_institute/0006 (2891)
	EXPECTED OUTPUT ====

		SELECT name
		FROM building
		WHERE height_feet >= 200
		  AND floors >= 20

	                          name
	0        Bank of America Tower
	1           EI0uIEMRXlY)rSLoDY
	2                Floridan Hote
	3               Floridan Hotel
	4               Floridan Hotel
	5               Floridan Hotel
	6          Floridan HotelU1C6F
	7        GoihHP2HylZUwOcUqnd O
	8         One Tampa City Cente
	9        One Tampa City Center
	10       One Tampa City Center
	11             ScPBu)S )FL1YdH
	12             TFsnachuohnVioF
	13        ank of America Tower
	14  jAYIVBank of America Tower
	15       kpdV(1ZOTQ3dlCKGXxumR
	16             lpuJQG7wXaZc6mn
	17              x10(XwnZCVjXcM
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM building
		WHERE (floors = 200
		       OR floors >= 20)
		ORDER BY name

	                            name
	0          Bank of America Tower
	1          Bank of America Tower
	2          Bank of America Tower
	3             EI0uIEMRXlY)rSLoDY
	4                  Floridan Hote
	5                 Floridan Hotel
	6                 Floridan Hotel
	7                 Floridan Hotel
	8                 Floridan Hotel
	9            Floridan HotelU1C6F
	10         GoihHP2HylZUwOcUqnd O
	11    N9ypvOne Tampa City Center
	12          One Tampa City Cente
	13         One Tampa City Center
	14         One Tampa City Center
	15               ScPBu)S )FL1YdH
	16               TFsnachuohnVioF
	17          ank of America Tower
	18  cDkifjIWYzpbaXlKzUvsPPOuw8S6
	19    jAYIVBank of America Tower
	20         kpdV(1ZOTQ3dlCKGXxumR
	21           kyFAZFloridan Hotel
	22               lpuJQG7wXaZc6mn
	23    tN9GkqUQlNaN(nwj5DFNdDWfg3
	24                x10(XwnZCVjXcM
No solution for instance spider/protein_institute/0004 (2892)
Wrong output for fuzzied solution in instance spider/protein_institute/0012 (2893)
	EXPECTED OUTPUT ====

		SELECT name
		FROM building
		EXCEPT
		SELECT T1.name
		FROM building AS T1
		JOIN institution AS T2 ON T1.building_id = T2.building_id
		WHERE T2.founded = 2003

	                              name
	0                    Floridan Hote
	1       Franklin Exchange Building
	2       SXvflOne Tampa City Center
	3  q9Bp2Franklin Exchange Building
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM building AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM institution
		           WHERE (founded >= 2003.0)) AS RHS
		        WHERE (LHS.building_id = RHS.building_id) ))
		ORDER BY name

	                         name
	0               Floridan Hote
	1  Franklin Exchange Building
	2  SXvflOne Tampa City Center
	3        ne Tampa City Center
No solution for instance spider/protein_institute/0005 (2895)
No solution for instance spider/protein_institute/0016 (2896)
No solution for instance spider/protein_institute/0020 (2898)
Wrong output for fuzzied solution in instance spider/protein_institute/0019 (2899)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM institution AS T1
		JOIN protein AS T2 ON T1.institution_id = T2.institution_id
		JOIN building AS T3 ON T3.building_id = T1.building_id
		WHERE T3.floors >= 20

	   count(*)
	0        15
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___
		FROM
		  (SELECT LHS.institution_id AS institution_id,
		          LHS.institution AS institution,
		          LHS.location AS LOCATION,
		          LHS.founded AS founded,
		          LHS.type AS TYPE,
		          LHS.enrollment AS enrollment,
		          LHS.team AS team,
		          LHS.primary_conference AS primary_conference,
		          LHS.building_id AS building_id,
		          LHS.common_name AS common_name,
		          LHS.protein_name AS protein_name,
		          LHS.divergence_from_human_lineage AS divergence_from_human_lineage,
		          LHS.accession_number AS accession_number,
		          LHS.sequence_length AS sequence_length,
		          LHS.sequence_identity_to_human_protein AS sequence_identity_to_human_protein,
		          LHS.name AS name,
		          LHS.street_address AS street_address,
		          LHS.years_as_tallest AS years_as_tallest,
		          LHS.height_feet AS height_feet,
		          LHS.floors AS floors,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.institution_id AS institution_id,
		             LHS.institution AS institution,
		             LHS.location AS LOCATION,
		             LHS.founded AS founded,
		             LHS.type AS TYPE,
		             LHS.enrollment AS enrollment,
		             LHS.team AS team,
		             LHS.primary_conference AS primary_conference,
		             LHS.building_id AS building_id,
		             LHS.common_name AS common_name,
		             LHS.protein_name AS protein_name,
		             LHS.divergence_from_human_lineage AS divergence_from_human_lineage,
		             LHS.accession_number AS accession_number,
		             LHS.sequence_length AS sequence_length,
		             LHS.sequence_identity_to_human_protein AS sequence_identity_to_human_protein,
		             RHS.name AS name,
		             RHS.street_address AS street_address,
		             RHS.years_as_tallest AS years_as_tallest,
		             RHS.height_feet AS height_feet,
		             RHS.floors AS floors
		      FROM
		        (SELECT LHS.institution_id AS institution_id,
		                LHS.institution AS institution,
		                LHS.location AS LOCATION,
		                LHS.founded AS founded,
		                LHS.type AS TYPE,
		                LHS.enrollment AS enrollment,
		                LHS.team AS team,
		                LHS.primary_conference AS primary_conference,
		                LHS.building_id AS building_id,
		                RHS.common_name AS common_name,
		                RHS.protein_name AS protein_name,
		                RHS.divergence_from_human_lineage AS divergence_from_human_lineage,
		                RHS.accession_number AS accession_number,
		                RHS.sequence_length AS sequence_length,
		                RHS.sequence_identity_to_human_protein AS sequence_identity_to_human_protein
		         FROM institution AS LHS
		         INNER JOIN protein AS RHS ON (LHS.institution_id = RHS.institution_id)) AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM building
		         WHERE (floors != 20)) AS RHS ON (LHS.building_id = RHS.building_id)) AS LHS
		   INNER JOIN
		     (SELECT building_id,
		             COUNT() AS n
		      FROM institution
		      GROUP BY building_id) AS RHS ON (LHS.building_id = RHS.building_id))
		ORDER BY count___

	   count___
	0         1
	1         2
	2         4
	3         5
	4         6
	5         8
Wrong output for fuzzied solution in instance spider/protein_institute/0007 (2900)
	EXPECTED OUTPUT ====

		SELECT institution,
		       LOCATION
		FROM institution
		WHERE founded > 1990
		  AND TYPE = 'Private'

	                      institution                         location
	0     Ml0DChzpVlraoc)0cQs5FLcITwz  1d0Valley City, North Dakotamzz
	1            Edward Waters Colleg             Belleville, Illinois
	2  Webber International Universit         alley City, North Dakota
	ACTUAL OUTPUT ====

		
		SELECT `institution`,
		       `location`
		FROM `institution`
		WHERE (`type` = 'Private'
		       AND founded >= 1990.0)
		ORDER BY institution

	                       institution                         location
	0      Ml0DChzpVlraoc)0cQs5FLcITwz  1d0Valley City, North Dakotamzz
	1             Edward Waters Colleg             Belleville, Illinois
	2   Webber International Universit         alley City, North Dakota
	3  Webber International University             Belleville, Illinois
No solution for instance spider/protein_institute/0014 (2902)
Wrong output for fuzzied solution in instance spider/protein_institute/0009 (2903)
	EXPECTED OUTPUT ====

		SELECT TYPE
		FROM institution
		GROUP BY TYPE
		ORDER BY count(*) DESC
		LIMIT 1

	     type
	0  Public
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT type_other AS TYPE
		FROM
		  (SELECT LHS.founded AS founded,
		          LHS.type AS TYPE,
		          LHS.n AS n,
		          RHS.founded AS founded_other,
		          RHS.type AS type_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT founded,
		             TYPE,
		             COUNT() AS n
		      FROM institution
		      GROUP BY founded,
		               TYPE) AS LHS
		   CROSS JOIN
		     (SELECT founded,
		             TYPE,
		             COUNT() AS n
		      FROM institution
		      GROUP BY founded,
		               TYPE) AS RHS)
		WHERE (n < n_other)
		ORDER BY TYPE

	      type
	0  Private
	1   Public
	2    ublic
Wrong output for fuzzied solution in instance spider/protein_institute/0010 (2905)
	EXPECTED OUTPUT ====

		SELECT TYPE
		FROM institution
		WHERE founded > 1990
		  AND enrollment >= 1000

	            type
	0   (KGwPPrivate
	1  237PrivatexTz
	2        Private
	3        Private
	4    h3uAZPublic
	5          ublic
	ACTUAL OUTPUT ====

		
		SELECT TYPE
		FROM institution
		WHERE (founded >= 1990.0
		       AND enrollment > 1000)
		ORDER BY TYPE

	            type
	0   (KGwPPrivate
	1  237PrivatexTz
	2        Private
	3        Private
	4        Private
	5          Publi
	6    h3uAZPublic
	7   zEAPublicaMf
Wrong output for fuzzied solution in instance spider/restaurant_1/0017 (2907)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Restaurant
		JOIN Type_Of_Restaurant ON Restaurant.ResID = Type_Of_Restaurant.ResID
		JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID
		GROUP BY Type_Of_Restaurant.ResTypeID
		HAVING Restaurant_Type.ResTypeName = 'Sandwich'

	   count(*)
	0        36
	1        37
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___
		FROM
		  (SELECT resid,
		          restypedescription,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.resid AS resid,
		             LHS.resname AS resname,
		             LHS.address AS address,
		             LHS.rating AS rating,
		             LHS.restypeid AS restypeid,
		             RHS.restypename AS restypename,
		             RHS.restypedescription AS restypedescription
		      FROM
		        (SELECT LHS.resid AS resid,
		                LHS.resname AS resname,
		                LHS.address AS address,
		                LHS.rating AS rating,
		                RHS.restypeid AS restypeid
		         FROM restaurant AS LHS
		         INNER JOIN type_of_restaurant AS RHS ON (LHS.resid = RHS.resid)) AS LHS
		      INNER JOIN restaurant_type AS RHS ON (LHS.restypeid = RHS.restypeid))
		   GROUP BY resid,
		            restypedescription)
		ORDER BY count___

	   count___
	0         5
	1         6
	2         7
	3         8
	4        11
	5        27
	6        30
	7        31
	8        37
	9        39
Wrong output for fuzzied solution in instance spider/restaurant_1/0008 (2908)
	EXPECTED OUTPUT ====

		SELECT Sex
		FROM Student
		WHERE Fname = "Linda"
		  AND Lname = "Smith";

	  sex
	0  gm
	ACTUAL OUTPUT ====

		
		SELECT `sex`
		FROM `student`
		WHERE (`fname` != 'Linda'
		       AND `lname` = 'Smith')
		ORDER BY sex

	  sex
	0   M
No solution for instance spider/restaurant_1/0022 (2910)
No solution for instance spider/restaurant_1/0013 (2911)
Wrong output for fuzzied solution in instance spider/restaurant_1/0006 (2912)
	EXPECTED OUTPUT ====

		SELECT ResName,
		       Rating
		FROM Restaurant
		ORDER BY Rating DESC
		LIMIT 1;

	           resname  rating
	0  v)uHoneygrowlZJ       5
	ACTUAL OUTPUT ====

		
		SELECT resname,
		       rating
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM restaurant
		      ORDER BY resname)
		   LIMIT 1)

	    resname  rating
	0  Honeygro       4
No solution for instance spider/restaurant_1/0012 (2914)
Wrong output for fuzzied solution in instance spider/restaurant_1/0015 (2915)
	EXPECTED OUTPUT ====

		SELECT Fname,
		       Lname
		FROM Student
		WHERE Age > 18
		  AND Major = 600;

	       fname          lname
	0        Ian            Lee
	1  IogIan)Kv        Schultz
	2      LsjGD           JKYy
	3     YObqYf  FiZAndreouTex
	ACTUAL OUTPUT ====

		
		SELECT fname,
		       lname
		FROM student
		WHERE (age > 18
		       AND major >= 600)
		ORDER BY fname

	       fname          lname
	0        Ian            Lee
	1        Ian        Schultz
	2        Ian        Schultz
	3  IogIan)Kv        Schultz
	4      LsjGD           JKYy
	5       XPCh         ndreou
	6     YObqYf  FiZAndreouTex
	7   k4gon(5P  ro3SchultzxgA
Wrong output for fuzzied solution in instance spider/restaurant_1/0016 (2917)
	EXPECTED OUTPUT ====

		SELECT Fname,
		       Lname
		FROM Student
		WHERE Age > 18
		  AND Major != 600
		  AND Sex = 'F';

	         fname          lname
	0        Susan       Leighton
	1   Susan(k52B  15CShiebervfZ
	2  cXlSusan(BT         Shiebe
	ACTUAL OUTPUT ====

		
		SELECT `fname`,
		       `lname`
		FROM
		  (SELECT *
		   FROM `student`
		   WHERE (`sex` = 'F'
		          OR age = 600))
		WHERE (age != 18
		       AND major < 600)
		ORDER BY fname

	         fname          lname
	0         Andy         Shiebe
	1   Susan(k52B  15CShiebervfZ
	2  cXlSusan(BT         Shiebe
Wrong output for fuzzied solution in instance spider/restaurant_1/0018 (2918)
	EXPECTED OUTPUT ====

		SELECT sum(Spent)
		FROM Student
		JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID
		WHERE Student.Fname = "Linda"
		  AND Student.Lname = "Smith";

	  sum(spent)
	0       None
	ACTUAL OUTPUT ====

		
		SELECT `sumspent` AS `sum_spent_`
		FROM
		  (SELECT `time`,
		          SUM(`spent`) AS `sumspent`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`resid` AS `resid`,
		             `LHS`.`time` AS `time`,
		             `LHS`.`spent` AS `spent`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`resid` AS `resid`,
		                `RHS`.`time` AS `time`,
		                `RHS`.`spent` AS `spent`
		         FROM `student` AS `LHS`
		         INNER JOIN `visits_restaurant` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `student`
		         WHERE (`fname` = 'Linda'
		                AND `lname` = 'Smith')) AS RHS ON (LHS.stuid = RHS.stuid
		                                                   AND LHS.lname = RHS.lname
		                                                   AND LHS.fname = RHS.fname
		                                                   AND LHS.age = RHS.age
		                                                   AND LHS.sex = RHS.sex
		                                                   AND LHS.major = RHS.major
		                                                   AND LHS.advisor = RHS.advisor
		                                                   AND LHS.city_code = RHS.city_code))
		   GROUP BY TIME)
		ORDER BY sum_spent_

	Empty DataFrame
	Columns: [sum_spent_]
	Index: []
Wrong output for fuzzied solution in instance spider/restaurant_1/0020 (2919)
	EXPECTED OUTPUT ====

		SELECT TIME
		FROM Student
		JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID
		JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID
		WHERE Student.Fname = "Linda"
		  AND Student.Lname = "Smith"
		  AND Restaurant.ResName = "Subway";

	Empty DataFrame
	Columns: [time]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `time`
		FROM
		  (SELECT `LHS`.`resid` AS `resid`,
		          `LHS`.`resname` AS `resname`,
		          `LHS`.`address` AS `address`,
		          `LHS`.`rating` AS `rating`,
		          `LHS`.`stuid` AS `stuid`,
		          `LHS`.`time` AS `time`,
		          `LHS`.`spent` AS `spent`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`
		   FROM
		     (SELECT `LHS`.`resid` AS `resid`,
		             `LHS`.`resname` AS `resname`,
		             `LHS`.`address` AS `address`,
		             `LHS`.`rating` AS `rating`,
		             `LHS`.`stuid` AS `stuid`,
		             `LHS`.`time` AS `time`,
		             `LHS`.`spent` AS `spent`,
		             `RHS`.`lname` AS `lname`,
		             `RHS`.`fname` AS `fname`,
		             `RHS`.`age` AS `age`,
		             `RHS`.`sex` AS `sex`,
		             `RHS`.`major` AS `major`,
		             `RHS`.`advisor` AS `advisor`,
		             `RHS`.`city_code` AS `city_code`
		      FROM
		        (SELECT `LHS`.`resid` AS `resid`,
		                `LHS`.`resname` AS `resname`,
		                `LHS`.`address` AS `address`,
		                `LHS`.`rating` AS `rating`,
		                `RHS`.`stuid` AS `stuid`,
		                `RHS`.`time` AS `time`,
		                `RHS`.`spent` AS `spent`
		         FROM `restaurant` AS `LHS`
		         INNER JOIN `visits_restaurant` AS `RHS` ON (`LHS`.`resid` = `RHS`.`resid`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `student`
		         WHERE (`fname` = 'Linda'
		                OR `lname` = 'Smith')) AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `restaurant`
		      WHERE (`resname` = 'Subway')) AS RHS ON (LHS.resid = RHS.resid
		                                               AND LHS.resname = RHS.resname
		                                               AND LHS.address = RHS.address
		                                               AND LHS.rating = RHS.rating))
		ORDER BY TIME

	                  time
	0  1999-07-16 06:13:37
Wrong output for fuzzied solution in instance spider/restaurant_1/0019 (2920)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Student
		JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID
		JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID
		WHERE Student.Fname = "Linda"
		  AND Student.Lname = "Smith"
		  AND Restaurant.ResName = "Subway";

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `resid` AS `count___`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`resid` AS `resid`,
		          `LHS`.`time` AS `time`,
		          `LHS`.`spent` AS `spent`,
		          `RHS`.`resname` AS `resname`,
		          `RHS`.`n_distinct` AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`resid` AS `resid`,
		             `LHS`.`time` AS `time`,
		             `LHS`.`spent` AS `spent`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`resid` AS `resid`,
		                `RHS`.`time` AS `time`,
		                `RHS`.`spent` AS `spent`
		         FROM `student` AS `LHS`
		         INNER JOIN `visits_restaurant` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `student`
		         WHERE (`fname` = 'Linda'
		                AND `lname` = 'Smith')) AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                                     AND `LHS`.`lname` = `RHS`.`lname`
		                                                     AND `LHS`.`fname` = `RHS`.`fname`
		                                                     AND `LHS`.`age` = `RHS`.`age`
		                                                     AND `LHS`.`sex` = `RHS`.`sex`
		                                                     AND `LHS`.`major` = `RHS`.`major`
		                                                     AND `LHS`.`advisor` = `RHS`.`advisor`
		                                                     AND `LHS`.`city_code` = `RHS`.`city_code`)) AS `LHS`
		   CROSS JOIN
		     (SELECT *
		      FROM
		        (SELECT `resname`,
		                COUNT(DISTINCT `resname`) AS `n_distinct`
		         FROM `restaurant`
		         GROUP BY `resname`)
		      WHERE (`resname` = 'Subway')) AS RHS)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/restaurant_1/0021 (2922)
	EXPECTED OUTPUT ====

		SELECT Restaurant.ResName,
		       sum(Visits_Restaurant.Spent)
		FROM Visits_Restaurant
		JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID
		GROUP BY Restaurant.ResID
		ORDER BY sum(Visits_Restaurant.Spent) ASC
		LIMIT 1;

	     resname  sum(visits_restaurant.spent)
	0  Honeygrow                         211.2
	ACTUAL OUTPUT ====

		
		SELECT resname,
		       spent_other AS sum_visits_restaurant_spent_
		FROM
		  (SELECT LHS.resid AS resid,
		          LHS.spent AS spent,
		          LHS.sumspent AS sumspent,
		          RHS.resid AS resid_other,
		          RHS.spent AS spent_other,
		          RHS.sumspent AS sumspent_other,
		          RHS.resname AS resname,
		          RHS.address AS address,
		          RHS.rating AS rating
		   FROM
		     (SELECT resid,
		             spent,
		             SUM(spent) AS sumspent
		      FROM visits_restaurant
		      GROUP BY resid,
		               spent) AS LHS
		   CROSS JOIN
		     (SELECT LHS.resid AS resid,
		             LHS.spent AS spent,
		             LHS.sumspent AS sumspent,
		             RHS.resname AS resname,
		             RHS.address AS address,
		             RHS.rating AS rating
		      FROM
		        (SELECT resid,
		                spent,
		                SUM(spent) AS sumspent
		         FROM visits_restaurant
		         GROUP BY resid,
		                  spent) AS LHS
		      LEFT JOIN restaurant AS RHS ON (LHS.resid = RHS.resid)) AS RHS)
		WHERE (spent != sumspent
		       OR spent > sumspent_other)
		ORDER BY resname

	             resname  sum_visits_restaurant_spent_
	0           Honeygro                         13.18
	1           Honeygro                         13.18
	2           Honeygro                         13.18
	3           Honeygro                         13.18
	4           Honeygro                         13.18
	..               ...                           ...
	595  v)uHoneygrowlZJ                         13.22
	596  v)uHoneygrowlZJ                         13.22
	597  v)uHoneygrowlZJ                         13.22
	598  v)uHoneygrowlZJ                         13.22
	599  v)uHoneygrowlZJ                         13.22
	
	[600 rows x 2 columns]
Wrong output for fuzzied solution in instance spider/restaurant_1/0011 (2926)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Student
		WHERE Advisor = 1121;

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT major,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM student
		      WHERE (advisor <= 1121))
		   GROUP BY major)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/insurance_fnol/0008 (2929)
	EXPECTED OUTPUT ====

		SELECT t1.Effective_Date
		FROM claims AS t1
		JOIN settlements AS t2 ON t1.claim_id = t2.claim_id
		GROUP BY t1.claim_id
		ORDER BY sum(t2.settlement_amount) DESC
		LIMIT 1

	  effective_date
	0     1995-07-29
	ACTUAL OUTPUT ====

		
		SELECT effective_date
		FROM
		  (SELECT effective_date,
		          settlement_amount,
		          SUM(settlement_amount) AS sumsettlement_amount
		   FROM
		     (SELECT claim_id,
		             fnol_id,
		             effective_date,
		             claim_id_other,
		             effective_date_other,
		             settlement_amount,
		             claim_id AS settlement_id
		      FROM
		        (SELECT LHS.claim_id AS claim_id,
		                LHS.fnol_id AS fnol_id,
		                LHS.effective_date AS effective_date,
		                RHS.claim_id AS claim_id_other,
		                RHS.effective_date AS effective_date_other,
		                RHS.settlement_amount AS settlement_amount
		         FROM claims AS LHS
		         INNER JOIN settlements AS RHS ON (LHS.claim_id = RHS.settlement_id)))
		   GROUP BY effective_date,
		            settlement_amount)
		ORDER BY effective_date

	Empty DataFrame
	Columns: [effective_date]
	Index: []
Wrong output for fuzzied solution in instance spider/insurance_fnol/0003 (2930)
	EXPECTED OUTPUT ====

		SELECT policy_type_code
		FROM available_policies
		GROUP BY policy_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	     policy_type_code
	0  Mortgage Insurance
	ACTUAL OUTPUT ====

		
		SELECT policy_type_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT policy_id,
		                policy_type_code,
		                customer_phone,
		                COUNT(*) OVER () AS n
		         FROM available_policies)
		      ORDER BY policy_id DESC)
		   LIMIT 1)

	        policy_type_code
	0  zING4Travel Insurance
No solution for instance spider/insurance_fnol/0004 (2933)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25661.sqlite3'
Wrong output for fuzzied solution in instance spider/insurance_fnol/0015 (2935)
	EXPECTED OUTPUT ====

		SELECT customer_name
		FROM customers
		EXCEPT
		SELECT t1.customer_name
		FROM customers AS t1
		JOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id

	     customer_name
	0  LE9rnDavid Ross
	ACTUAL OUTPUT ====

		
		SELECT customer_name
		FROM
		  (SELECT *
		   FROM customers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM first_notification_of_loss AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY customer_name

	      customer_name
	0   LE9rnDavid Ross
	1  merica Jaskolski
No solution for instance spider/insurance_fnol/0018 (2938)
Wrong output for fuzzied solution in instance spider/insurance_fnol/0007 (2941)
	EXPECTED OUTPUT ====

		SELECT t2.service_name
		FROM first_notification_of_loss AS t1
		JOIN services AS t2 ON t1.service_id = t2.service_id
		GROUP BY t1.service_id
		HAVING count(*) > 2

	            service_name
	0   1d1Close a policypbQ
	1        Change a policy
	2          Close a polic
	3         Close a policy
	4         Close a policy
	5    Close a policyE1GTA
	6    Close a policyoubxS
	7       Ct73XxmJ05jGQv(g
	8   ExNClose a policy3l5
	9          lose a policy
	10         vwczZVQheIUhC
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT service_name
		FROM
		  (SELECT LHS.service_id AS service_id,
		          LHS.service_name AS service_name,
		          LHS.fnol_id AS fnol_id,
		          LHS.customer_id AS customer_id,
		          LHS.policy_id AS policy_id,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.service_id AS service_id,
		             LHS.service_name AS service_name,
		             LHS.fnol_id AS fnol_id,
		             LHS.customer_id AS customer_id,
		             LHS.policy_id AS policy_id,
		             RHS.n AS n
		      FROM
		        (SELECT LHS.service_id AS service_id,
		                LHS.service_name AS service_name,
		                RHS.fnol_id AS fnol_id,
		                RHS.customer_id AS customer_id,
		                RHS.policy_id AS policy_id
		         FROM services AS LHS
		         INNER JOIN first_notification_of_loss AS RHS ON (LHS.service_id = RHS.service_id)) AS LHS
		      INNER JOIN
		        (SELECT service_id,
		                COUNT() AS n
		         FROM first_notification_of_loss
		         GROUP BY service_id) AS RHS ON (LHS.service_id = RHS.service_id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT service_id,
		                COUNT() AS n
		         FROM first_notification_of_loss
		         GROUP BY service_id)
		      WHERE (n > 2)) AS RHS ON (LHS.service_id = RHS.service_id
		                                AND LHS.n = RHS.n))
		ORDER BY service_name

	           service_name
	0  1d1Close a policypbQ
	1       Change a policy
	2         Close a polic
	3        Close a policy
	4   Close a policyE1GTA
	5   Close a policyoubxS
	6      Ct73XxmJ05jGQv(g
	7  ExNClose a policy3l5
	8         lose a policy
	9         vwczZVQheIUhC
No solution for instance spider/insurance_fnol/0021 (2942)
Wrong output for fuzzied solution in instance spider/insurance_fnol/0009 (2945)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM customers AS t1
		JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id
		WHERE t1.customer_name = "Dayana Robel"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`n` AS `n`,
		          `RHS`.`customer_name` AS `customer_name`
		   FROM
		     (SELECT `customer_id`,
		             COUNT() AS `n`
		      FROM `customers_policies`
		      GROUP BY `customer_id`) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `customers`
		      WHERE (`customer_name` = 'Dayana Robel')) AS RHS ON (LHS.customer_id = RHS.customer_id))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/insurance_fnol/0010 (2947)
	EXPECTED OUTPUT ====

		SELECT t1.customer_name
		FROM customers AS t1
		JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id
		GROUP BY t1.customer_name
		ORDER BY count(*) DESC
		LIMIT 1

	      customer_name
	0  merica Jaskolski
	ACTUAL OUTPUT ====

		
		SELECT customer_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.policy_id AS policy_id,
		                LHS.n AS n,
		                RHS.customer_name AS customer_name
		         FROM
		           (SELECT customer_id,
		                   policy_id,
		                   COUNT() AS n
		            FROM customers_policies
		            GROUP BY customer_id,
		                     policy_id) AS LHS
		         LEFT JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))
		      ORDER BY customer_id DESC)
		   LIMIT 1)

	           customer_name
	0  Mrs. Lilly Graham III
Wrong output for fuzzied solution in instance spider/icfp_1/0017 (2950)
	EXPECTED OUTPUT ====

		SELECT t3.title
		FROM authors AS t1
		JOIN authorship AS t2 ON t1.authid = t2.authid
		JOIN papers AS t3 ON t2.paperid = t3.paperid
		WHERE t1.fname = "Olin"
		  AND t1.lname = "Shivers"

	Empty DataFrame
	Columns: [title]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT `LHS`.`authid` AS `authid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`paperid` AS `paperid`,
		          `LHS`.`title` AS `title`,
		          `RHS`.`instid` AS `instid`,
		          `RHS`.`authorder` AS `authorder`
		   FROM
		     (SELECT `LHS`.`authid` AS `authid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `RHS`.`paperid` AS `paperid`,
		             `RHS`.`title` AS `title`
		      FROM `authors` AS `LHS`
		      CROSS JOIN `papers` AS `RHS`) AS `LHS`
		   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`
		                                           AND `LHS`.`paperid` = `RHS`.`paperid`))
		WHERE (`fname` = 'Olin'
		       OR `lname` = 'Shivers')
		ORDER BY title

	                                               title
	0  Making Standard ML a Practical Database Progra...
	1  Making Standard ML a Practical Database Progra...
	2                                 Nameless, Painless
	3  aking Standard ML a Practical Database Program...
	4  aking Standard ML a Practical Database Program...
	5  aking Standard ML a Practical Database Program...
Wrong output for fuzzied solution in instance spider/icfp_1/0008 (2951)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t3.name
		FROM authors AS t1
		JOIN authorship AS t2 ON t1.authid = t2.authid
		JOIN inst AS t3 ON t2.instid = t3.instid
		WHERE t1.fname = "Katsuhiro"
		  AND t1.lname = "Ueno"

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`instid` AS `instid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`authid` AS `authid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `RHS`.`paperid` AS `paperid`,
		          `RHS`.`authorder` AS `authorder`
		   FROM
		     (SELECT `LHS`.`instid` AS `instid`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`country` AS `country`,
		             `RHS`.`authid` AS `authid`,
		             `RHS`.`lname` AS `lname`,
		             `RHS`.`fname` AS `fname`
		      FROM `inst` AS `LHS`
		      CROSS JOIN `authors` AS `RHS`) AS `LHS`
		   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`
		                                           AND `LHS`.`authid` = `RHS`.`authid`))
		WHERE (`fname` = 'Katsuhiro'
		       OR `lname` = 'Ueno')
		ORDER BY name

	                      name
	0  7igs(q(28LbGplUeDtcWfqQ
	1  7igs(q(28LbGplUeDtcWfqQ
	2  7igs(q(28LbGplUeDtcWfqQ
	3  7igs(q(28LbGplUeDtcWfqQ
	4       Indiana University
	5       Indiana University
	6     University of Oxford
	7     University of Oxford
	8     University of Oxford
	9     University of Oxford
No solution for instance spider/icfp_1/0027 (2953)
No solution for instance spider/icfp_1/0022 (2954)
Wrong output for fuzzied solution in instance spider/icfp_1/0013 (2956)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t1.title
		FROM papers AS t1
		JOIN authorship AS t2 ON t1.paperid = t2.paperid
		JOIN inst AS t3 ON t2.instid = t3.instid
		WHERE t3.name = "Indiana University"

	                                               title
	0     Just do it: Simple Monadic Equational Reasonin
	1  Proving the Unique Fixed-Point Principle Corre...
	2  jjcbLFunctional Pearl: Modular Rollback throug...
	3     ust do it: Simple Monadic Equational Reasoning
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT `LHS`.`instid` AS `instid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`paperid` AS `paperid`,
		          `LHS`.`title` AS `title`,
		          `LHS`.`authid` AS `authid`,
		          `LHS`.`authorder` AS `authorder`
		   FROM
		     (SELECT `LHS`.`instid` AS `instid`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`paperid` AS `paperid`,
		             `LHS`.`title` AS `title`,
		             `RHS`.`authid` AS `authid`,
		             `RHS`.`authorder` AS `authorder`
		      FROM
		        (SELECT `LHS`.`instid` AS `instid`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`country` AS `country`,
		                `RHS`.`paperid` AS `paperid`,
		                `RHS`.`title` AS `title`
		         FROM `inst` AS `LHS`
		         CROSS JOIN `papers` AS `RHS`) AS `LHS`
		      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`
		                                              AND `LHS`.`paperid` = `RHS`.`paperid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `inst`
		      WHERE (`name` = 'Indiana University')) AS RHS ON (LHS.instid = RHS.instid
		                                                        AND LHS.name = RHS.name
		                                                        AND LHS.country = RHS.country))
		ORDER BY title

	                                               title
	0     Just do it: Simple Monadic Equational Reasonin
	1     Just do it: Simple Monadic Equational Reasonin
	2  Proving the Unique Fixed-Point Principle Corre...
	3  Proving the Unique Fixed-Point Principle Corre...
	4  jjcbLFunctional Pearl: Modular Rollback throug...
	5  jjcbLFunctional Pearl: Modular Rollback throug...
	6  jjcbLFunctional Pearl: Modular Rollback throug...
	7  jjcbLFunctional Pearl: Modular Rollback throug...
	8  jjcbLFunctional Pearl: Modular Rollback throug...
	9     ust do it: Simple Monadic Equational Reasoning
Wrong output for fuzzied solution in instance spider/icfp_1/0006 (2957)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM authors AS t1
		JOIN authorship AS t2 ON t1.authid = t2.authid
		JOIN papers AS t3 ON t2.paperid = t3.paperid
		WHERE t1.fname = "Atsushi"
		  AND t1.lname = "Ohori"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n_distinct` AS `count___`
		FROM
		  (SELECT `LHS`.`authid` AS `authid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`paperid` AS `paperid`,
		          `LHS`.`title` AS `title`,
		          `LHS`.`instid` AS `instid`,
		          `LHS`.`authorder` AS `authorder`,
		          `RHS`.`n_distinct` AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`authid` AS `authid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`paperid` AS `paperid`,
		             `LHS`.`title` AS `title`,
		             `RHS`.`instid` AS `instid`,
		             `RHS`.`authorder` AS `authorder`
		      FROM
		        (SELECT `LHS`.`authid` AS `authid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `RHS`.`paperid` AS `paperid`,
		                `RHS`.`title` AS `title`
		         FROM `authors` AS `LHS`
		         CROSS JOIN `papers` AS `RHS`) AS `LHS`
		      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`
		                                              AND `LHS`.`paperid` = `RHS`.`paperid`)) AS `LHS`
		   INNER JOIN
		     (SELECT `lname`,
		             COUNT(DISTINCT `lname`) AS `n_distinct`
		      FROM `authors`
		      GROUP BY `lname`) AS `RHS` ON (`LHS`.`lname` = `RHS`.`lname`))
		WHERE (`fname` != 'Atsushi'
		       AND `lname` != 'Ohori')
		ORDER BY count___

	   count___
	0         1
Wrong output for fuzzied solution in instance spider/icfp_1/0004 (2958)
	EXPECTED OUTPUT ====

		SELECT t3.title
		FROM authors AS t1
		JOIN authorship AS t2 ON t1.authid = t2.authid
		JOIN papers AS t3 ON t2.paperid = t3.paperid
		WHERE t1.fname = "Jeremy"
		  AND t1.lname = "Gibbons"

	Empty DataFrame
	Columns: [title]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT `LHS`.`authid` AS `authid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`paperid` AS `paperid`,
		          `LHS`.`title` AS `title`,
		          `RHS`.`instid` AS `instid`,
		          `RHS`.`authorder` AS `authorder`
		   FROM
		     (SELECT `LHS`.`authid` AS `authid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `RHS`.`paperid` AS `paperid`,
		             `RHS`.`title` AS `title`
		      FROM `authors` AS `LHS`
		      CROSS JOIN `papers` AS `RHS`) AS `LHS`
		   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`
		                                           AND `LHS`.`paperid` = `RHS`.`paperid`))
		WHERE (`fname` = 'Jeremy'
		       OR `lname` = 'Gibbons')
		ORDER BY title

	                                               title
	0  Making Standard ML a Practical Database Progra...
	1  Making Standard ML a Practical Database Progra...
	2                                 Nameless, Painless
	3  aking Standard ML a Practical Database Program...
	4  aking Standard ML a Practical Database Program...
	5  aking Standard ML a Practical Database Program...
No solution for instance spider/icfp_1/0026 (2959)
Wrong output for fuzzied solution in instance spider/icfp_1/0015 (2960)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT t1.title)
		FROM papers AS t1
		JOIN authorship AS t2 ON t1.paperid = t2.paperid
		JOIN inst AS t3 ON t2.instid = t3.instid
		WHERE t3.name = "Tokohu University"

	   count(distinct t1.title)
	0                         4
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count_distinct_t1_title_
		FROM
		  (SELECT COUNT(DISTINCT name) AS n_distinct
		   FROM
		     (SELECT instid,
		             name,
		             country,
		             title,
		             instid AS paperid
		      FROM
		        (SELECT LHS.instid AS instid,
		                LHS.name AS name,
		                LHS.country AS country,
		                RHS.title AS title
		         FROM inst AS LHS
		         INNER JOIN
		           (SELECT *
		            FROM papers AS LHS
		            WHERE NOT EXISTS
		                (SELECT 1
		                 FROM authorship AS RHS
		                 WHERE (LHS.paperid = RHS.paperid) )) AS RHS ON (LHS.instid = RHS.paperid))))
		ORDER BY count_distinct_t1_title_

	   count_distinct_t1_title_
	0                         0
Wrong output for fuzzied solution in instance spider/icfp_1/0005 (2961)
	EXPECTED OUTPUT ====

		SELECT t3.title
		FROM authors AS t1
		JOIN authorship AS t2 ON t1.authid = t2.authid
		JOIN papers AS t3 ON t2.paperid = t3.paperid
		WHERE t1.fname = "Aaron"
		  AND t1.lname = "Turon"

	Empty DataFrame
	Columns: [title]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT `LHS`.`authid` AS `authid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`paperid` AS `paperid`,
		          `LHS`.`title` AS `title`,
		          `RHS`.`instid` AS `instid`,
		          `RHS`.`authorder` AS `authorder`
		   FROM
		     (SELECT `LHS`.`authid` AS `authid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `RHS`.`paperid` AS `paperid`,
		             `RHS`.`title` AS `title`
		      FROM `authors` AS `LHS`
		      CROSS JOIN `papers` AS `RHS`) AS `LHS`
		   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`
		                                           AND `LHS`.`paperid` = `RHS`.`paperid`))
		WHERE (`fname` = 'Aaron'
		       OR `lname` = 'Turon')
		ORDER BY title

	                                               title
	0  Making Standard ML a Practical Database Progra...
	1  Making Standard ML a Practical Database Progra...
	2                                 Nameless, Painless
	3  aking Standard ML a Practical Database Program...
	4  aking Standard ML a Practical Database Program...
	5  aking Standard ML a Practical Database Program...
Wrong output for fuzzied solution in instance spider/icfp_1/0016 (2962)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT t1.title)
		FROM papers AS t1
		JOIN authorship AS t2 ON t1.paperid = t2.paperid
		JOIN inst AS t3 ON t2.instid = t3.instid
		WHERE t3.name = "University of Pennsylvania"

	   count(distinct t1.title)
	0                         4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count_distinct_t1_title_`
		FROM
		  (SELECT `LHS`.`paperid` AS `paperid`,
		          `LHS`.`title` AS `title`,
		          `LHS`.`authid` AS `authid`,
		          `LHS`.`instid` AS `instid`,
		          `LHS`.`authorder` AS `authorder`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`country` AS `country`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`paperid` AS `paperid`,
		             `LHS`.`title` AS `title`,
		             `LHS`.`authid` AS `authid`,
		             `LHS`.`instid` AS `instid`,
		             `LHS`.`authorder` AS `authorder`,
		             `RHS`.`name` AS `name`,
		             `RHS`.`country` AS `country`
		      FROM
		        (SELECT `LHS`.`paperid` AS `paperid`,
		                `LHS`.`title` AS `title`,
		                `RHS`.`authid` AS `authid`,
		                `RHS`.`instid` AS `instid`,
		                `RHS`.`authorder` AS `authorder`
		         FROM `papers` AS `LHS`
		         INNER JOIN `authorship` AS `RHS` ON (`LHS`.`paperid` = `RHS`.`paperid`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `inst`
		         WHERE (`name` != 'University of Pennsylvania')) AS RHS ON (LHS.instid = RHS.instid)) AS LHS
		   INNER JOIN
		     (SELECT country,
		             instid,
		             COUNT() AS n
		      FROM inst
		      GROUP BY country,
		               instid) AS RHS ON (LHS.instid = RHS.instid
		                                  AND LHS.country = RHS.country))
		ORDER BY count_distinct_t1_title_

	   count_distinct_t1_title_
	0                         1
Wrong output for fuzzied solution in instance spider/icfp_1/0018 (2964)
	EXPECTED OUTPUT ====

		SELECT t3.title
		FROM authors AS t1
		JOIN authorship AS t2 ON t1.authid = t2.authid
		JOIN papers AS t3 ON t2.paperid = t3.paperid
		WHERE t1.fname = "Stephanie"
		  AND t1.lname = "Weirich"

	Empty DataFrame
	Columns: [title]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT `LHS`.`authid` AS `authid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`paperid` AS `paperid`,
		          `LHS`.`title` AS `title`,
		          `RHS`.`instid` AS `instid`,
		          `RHS`.`authorder` AS `authorder`
		   FROM
		     (SELECT `LHS`.`authid` AS `authid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `RHS`.`paperid` AS `paperid`,
		             `RHS`.`title` AS `title`
		      FROM `authors` AS `LHS`
		      CROSS JOIN `papers` AS `RHS`) AS `LHS`
		   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`
		                                           AND `LHS`.`paperid` = `RHS`.`paperid`))
		WHERE (`fname` = 'Stephanie'
		       OR `lname` = 'Weirich')
		ORDER BY title

	                                               title
	0  Making Standard ML a Practical Database Progra...
	1  Making Standard ML a Practical Database Progra...
	2                                 Nameless, Painless
	3  aking Standard ML a Practical Database Program...
	4  aking Standard ML a Practical Database Program...
	5  aking Standard ML a Practical Database Program...
Wrong output for fuzzied solution in instance spider/icfp_1/0020 (2965)
	EXPECTED OUTPUT ====

		SELECT t3.title
		FROM authors AS t1
		JOIN authorship AS t2 ON t1.authid = t2.authid
		JOIN papers AS t3 ON t2.paperid = t3.paperid
		JOIN inst AS t4 ON t2.instid = t4.instid
		WHERE t4.country = "Japan"
		  AND t2.authorder = 1
		  AND t1.lname = "Ohori"

	                                               title
	0  cogVgJust do it: Simple Monadic Equational Rea...
	1                   vINGQ7sKhcm5WrtWnryd7wArlOut9od7
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT `LHS`.`instid` AS `instid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`authid` AS `authid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`paperid` AS `paperid`,
		          `LHS`.`title` AS `title`,
		          `RHS`.`authorder` AS `authorder`
		   FROM
		     (SELECT `LHS`.`instid` AS `instid`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`authid` AS `authid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `RHS`.`paperid` AS `paperid`,
		             `RHS`.`title` AS `title`
		      FROM
		        (SELECT `LHS`.`instid` AS `instid`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`country` AS `country`,
		                `RHS`.`authid` AS `authid`,
		                `RHS`.`lname` AS `lname`,
		                `RHS`.`fname` AS `fname`
		         FROM `inst` AS `LHS`
		         CROSS JOIN `authors` AS `RHS`) AS `LHS`
		      CROSS JOIN `papers` AS `RHS`) AS `LHS`
		   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`
		                                           AND `LHS`.`authid` = `RHS`.`authid`
		                                           AND `LHS`.`paperid` = `RHS`.`paperid`))
		WHERE (`country` = 'Japan'
		       AND `lname` = 'Ohori')
		ORDER BY title

	                                               title
	0  An Equivalence-Preserving CPS Translation via ...
	1  Functional Pearl: Modular Rollback through Con...
	2  cogVgJust do it: Simple Monadic Equational Rea...
	3                   vINGQ7sKhcm5WrtWnryd7wArlOut9od7
Wrong output for fuzzied solution in instance spider/icfp_1/0019 (2966)
	EXPECTED OUTPUT ====

		SELECT t3.title
		FROM authors AS t1
		JOIN authorship AS t2 ON t1.authid = t2.authid
		JOIN papers AS t3 ON t2.paperid = t3.paperid
		JOIN inst AS t4 ON t2.instid = t4.instid
		WHERE t4.country = "USA"
		  AND t2.authorder = 2
		  AND t1.lname = "Turon"

	Empty DataFrame
	Columns: [title]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT `LHS`.`instid` AS `instid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`paperid` AS `paperid`,
		          `LHS`.`title` AS `title`,
		          `LHS`.`authid` AS `authid`,
		          `LHS`.`authorder` AS `authorder`,
		          `RHS`.`lname` AS `lname`,
		          `RHS`.`fname` AS `fname`
		   FROM
		     (SELECT `LHS`.`instid` AS `instid`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`paperid` AS `paperid`,
		             `LHS`.`title` AS `title`,
		             `RHS`.`authid` AS `authid`,
		             `RHS`.`authorder` AS `authorder`
		      FROM
		        (SELECT `LHS`.`instid` AS `instid`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`country` AS `country`,
		                `RHS`.`paperid` AS `paperid`,
		                `RHS`.`title` AS `title`
		         FROM `inst` AS `LHS`
		         CROSS JOIN `papers` AS `RHS`) AS `LHS`
		      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`
		                                              AND `LHS`.`paperid` = `RHS`.`paperid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `authors`
		      WHERE (`lname` = 'Turon')) AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`))
		WHERE (`country` = 'USA'
		       OR authorder != 2)
		ORDER BY title

	                   title
	0  6MHBinders Unbound7FQ
	1        Binders Unbound
Wrong output for fuzzied solution in instance spider/icfp_1/0007 (2967)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t3.name
		FROM authors AS t1
		JOIN authorship AS t2 ON t1.authid = t2.authid
		JOIN inst AS t3 ON t2.instid = t3.instid
		WHERE t1.fname = "Matthias"
		  AND t1.lname = "Blume"

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`instid` AS `instid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`authid` AS `authid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `RHS`.`paperid` AS `paperid`,
		          `RHS`.`authorder` AS `authorder`
		   FROM
		     (SELECT `LHS`.`instid` AS `instid`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`country` AS `country`,
		             `RHS`.`authid` AS `authid`,
		             `RHS`.`lname` AS `lname`,
		             `RHS`.`fname` AS `fname`
		      FROM `inst` AS `LHS`
		      CROSS JOIN `authors` AS `RHS`) AS `LHS`
		   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`
		                                           AND `LHS`.`authid` = `RHS`.`authid`))
		WHERE (`fname` = 'Matthias'
		       OR `lname` = 'Blume')
		ORDER BY name

	                        name
	0    6)(Tohoku UniversityfXn
	1  Portland State University
No solution for instance spider/icfp_1/0024 (2968)
No solution for instance spider/icfp_1/0021 (2969)
No solution for instance spider/icfp_1/0023 (2970)
Wrong output for fuzzied solution in instance spider/icfp_1/0014 (2972)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t1.title
		FROM papers AS t1
		JOIN authorship AS t2 ON t1.paperid = t2.paperid
		JOIN inst AS t3 ON t2.instid = t3.instid
		WHERE t3.name = "Google"

	                                               title
	0     Just do it: Simple Monadic Equational Reasonin
	1  Proving the Unique Fixed-Point Principle Corre...
	2  jjcbLFunctional Pearl: Modular Rollback throug...
	3     ust do it: Simple Monadic Equational Reasoning
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT `LHS`.`instid` AS `instid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`paperid` AS `paperid`,
		          `LHS`.`title` AS `title`,
		          `LHS`.`authid` AS `authid`,
		          `LHS`.`authorder` AS `authorder`
		   FROM
		     (SELECT `LHS`.`instid` AS `instid`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`paperid` AS `paperid`,
		             `LHS`.`title` AS `title`,
		             `RHS`.`authid` AS `authid`,
		             `RHS`.`authorder` AS `authorder`
		      FROM
		        (SELECT `LHS`.`instid` AS `instid`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`country` AS `country`,
		                `RHS`.`paperid` AS `paperid`,
		                `RHS`.`title` AS `title`
		         FROM `inst` AS `LHS`
		         CROSS JOIN `papers` AS `RHS`) AS `LHS`
		      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`
		                                              AND `LHS`.`paperid` = `RHS`.`paperid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `inst`
		      WHERE (`name` = 'Google')) AS RHS ON (LHS.instid = RHS.instid
		                                            AND LHS.name = RHS.name
		                                            AND LHS.country = RHS.country))
		ORDER BY title

	                                               title
	0     Just do it: Simple Monadic Equational Reasonin
	1     Just do it: Simple Monadic Equational Reasonin
	2  Proving the Unique Fixed-Point Principle Corre...
	3  Proving the Unique Fixed-Point Principle Corre...
	4  jjcbLFunctional Pearl: Modular Rollback throug...
	5  jjcbLFunctional Pearl: Modular Rollback throug...
	6  jjcbLFunctional Pearl: Modular Rollback throug...
	7  jjcbLFunctional Pearl: Modular Rollback throug...
	8  jjcbLFunctional Pearl: Modular Rollback throug...
	9     ust do it: Simple Monadic Equational Reasoning
No solution for instance spider/icfp_1/0025 (2974)
Wrong output for fuzzied solution in instance spider/icfp_1/0010 (2977)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t1.fname,
		                t1.lname
		FROM authors AS t1
		JOIN authorship AS t2 ON t1.authid = t2.authid
		JOIN inst AS t3 ON t2.instid = t3.instid
		WHERE t3.name = "Google"

	        fname        lname
	0  0yHnGBrent  PZKBlumecuz
	1        Bren        Ohori
	2       Brent       Yorgey
	3       Brent         hori
	4     Matthia         lume
	5    Matthias   OhoriBIQ)G
	6  vIL5PBrent   A2y(nOhori
	ACTUAL OUTPUT ====

		
		SELECT `fname`,
		       `lname`
		FROM
		  (SELECT `LHS`.`instid` AS `instid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`authid` AS `authid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`paperid` AS `paperid`,
		          `LHS`.`authorder` AS `authorder`
		   FROM
		     (SELECT `LHS`.`instid` AS `instid`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`authid` AS `authid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `RHS`.`paperid` AS `paperid`,
		             `RHS`.`authorder` AS `authorder`
		      FROM
		        (SELECT `LHS`.`instid` AS `instid`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`country` AS `country`,
		                `RHS`.`authid` AS `authid`,
		                `RHS`.`lname` AS `lname`,
		                `RHS`.`fname` AS `fname`
		         FROM `inst` AS `LHS`
		         CROSS JOIN `authors` AS `RHS`) AS `LHS`
		      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`
		                                              AND `LHS`.`authid` = `RHS`.`authid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `inst`
		      WHERE (`name` = 'Google')) AS RHS ON (LHS.instid = RHS.instid
		                                            AND LHS.name = RHS.name
		                                            AND LHS.country = RHS.country))
		ORDER BY fname

	        fname        lname
	0  0yHnGBrent  PZKBlumecuz
	1  0yHnGBrent  PZKBlumecuz
	2  0yHnGBrent  PZKBlumecuz
	3        Bren        Ohori
	4       Brent       Yorgey
	5       Brent         hori
	6     Matthia         lume
	7    Matthias   OhoriBIQ)G
	8    Matthias   OhoriBIQ)G
	9  vIL5PBrent   A2y(nOhori
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25661.sqlite3'
Wrong output for fuzzied solution in instance spider/climbing/0004 (2986)
	EXPECTED OUTPUT ====

		SELECT max(Points)
		FROM climber
		WHERE Country = "United Kingdom"

	  max(points)
	0        None
	ACTUAL OUTPUT ====

		
		SELECT `maxpoints` AS `max_points_`
		FROM
		  (SELECT `country`,
		          MAX(`points`) AS `maxpoints`
		   FROM
		     (SELECT *
		      FROM `climber`
		      WHERE (`country` = 'United Kingdom'))
		   GROUP BY country)
		ORDER BY max_points_

	Empty DataFrame
	Columns: [max_points_]
	Index: []
Wrong output for fuzzied solution in instance spider/climbing/0012 (2987)
	EXPECTED OUTPUT ====

		SELECT T2.Height
		FROM climber AS T1
		JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID
		ORDER BY T1.Points DESC
		LIMIT 1

	    height
	0  4984.99
	ACTUAL OUTPUT ====

		
		SELECT height
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.climber_id AS climber_id,
		                LHS.name AS name,
		                LHS.country AS country,
		                LHS.time AS TIME,
		                LHS.points AS points,
		                LHS.mountain_id AS mountain_id,
		                RHS.name AS name_other,
		                RHS.height AS height,
		                RHS.prominence AS prominence,
		                RHS.range AS RANGE,
		                RHS.country AS country_other
		         FROM climber AS LHS
		         INNER JOIN mountain AS RHS ON (LHS.mountain_id = RHS.mountain_id))
		      ORDER BY prominence DESC)
		   LIMIT 1)

	   height
	0  4890.0
Wrong output for fuzzied solution in instance spider/climbing/0016 (2990)
	EXPECTED OUTPUT ====

		SELECT Country
		FROM mountain
		GROUP BY Country
		HAVING COUNT(*) > 1

	           country
	0  DR Congo Uganda
	1           Uganda
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM
		  (SELECT country,
		          RANGE,
		          COUNT() AS n
		   FROM mountain
		   GROUP BY country,
		            RANGE)
		WHERE (n > 1)
		ORDER BY country

	Empty DataFrame
	Columns: [country]
	Index: []
Wrong output for fuzzied solution in instance spider/climbing/0018 (2991)
	EXPECTED OUTPUT ====

		SELECT Country
		FROM mountain
		WHERE Height > 5600 INTERSECT
		  SELECT Country
		  FROM mountain WHERE Height < 5200

	  country
	0  Uganda
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM mountain
		WHERE (height > 5600.0
		       OR height > 5200.0)
		ORDER BY country

	       country
	0  A2cCcUganda
	1       Uganda
Wrong output for fuzzied solution in instance spider/climbing/0020 (2992)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM mountain
		WHERE Height > 5000
		  OR Prominence > 1000

	                                             name
	0                         Ih8Jg9O15CvfZGyOzov00Gq
	1                            Mount Kenya (Batian)
	2                            Mount Kenya (Batian)
	3                            Mount Kenya (Batian)
	4                galiema / Mt Stanley (Savoia Pk)
	5                 hBOmuM sk(i1Ut5ZPK(jrclAU8swq1f
	6  sNrDuwoni / Mt Speke (Vittorio Emanuele Pk)s e
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM mountain
		WHERE (height >= 5000.0
		       AND height != 1000.0)
		ORDER BY name

	                                             name
	0                         Ih8Jg9O15CvfZGyOzov00Gq
	1                            Mount Kenya (Batian)
	2                 hBOmuM sk(i1Ut5ZPK(jrclAU8swq1f
	3  sNrDuwoni / Mt Speke (Vittorio Emanuele Pk)s e
Wrong output for fuzzied solution in instance spider/climbing/0019 (2993)
	EXPECTED OUTPUT ====

		SELECT RANGE
		FROM mountain
		GROUP BY RANGE
		ORDER BY COUNT(*) DESC
		LIMIT 1

	        range
	0  Mount Keny
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT RANGE
		FROM
		  (SELECT LHS.mountain_id AS mountain_id,
		          LHS.name AS name,
		          LHS.height AS height,
		          LHS.prominence AS prominence,
		          LHS.range AS RANGE,
		          LHS.country AS country,
		          LHS.n AS n,
		          RHS.name AS name_other,
		          RHS.height AS height_other,
		          RHS.prominence AS prominence_other,
		          RHS.country AS country_other
		   FROM
		     (SELECT mountain_id,
		             name,
		             height,
		             prominence,
		             RANGE,
		             country,
		             COUNT(*) OVER () AS n
		      FROM mountain) AS LHS
		   INNER JOIN mountain AS RHS ON (LHS.n = RHS.mountain_id
		                                     AND LHS.range = RHS.range))
		ORDER BY RANGE

	Empty DataFrame
	Columns: [range]
	Index: []
Wrong output for fuzzied solution in instance spider/climbing/0007 (2994)
	EXPECTED OUTPUT ====

		SELECT Country
		FROM mountain
		WHERE Height > 5000

	           country
	0   DR Congo Ugand
	1  DR Congo Uganda
	2  DR Congo Uganda
	3           Uganda
	4           Uganda
	5      Ugandau4)1C
	6            ganda
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM mountain
		WHERE (height >= 5000.0)
		ORDER BY country

	           country
	0   DR Congo Ugand
	1  DR Congo Uganda
	2  DR Congo Uganda
	3  DR Congo Uganda
	4           Uganda
	5           Uganda
	6      Ugandau4)1C
	7            ganda
Wrong output for fuzzied solution in instance spider/climbing/0009 (2997)
	EXPECTED OUTPUT ====

		SELECT DISTINCT RANGE
		FROM mountain
		ORDER BY Prominence DESC
		LIMIT 3

	              range
	0        Mount Keny
	1    YMCRwenzoriMrg
	2  gUdkrMount Kenya
	ACTUAL OUTPUT ====

		
		SELECT RANGE
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM mountain
		      ORDER BY prominence DESC)
		   LIMIT 3)

	            range
	0      Mount Keny
	1      Mount Keny
	2  YMCRwenzoriMrg
Error while executing solution for instance spider/climbing/0010 (2999)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/climbing/0010 (2999)
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0042 (3000)
	EXPECTED OUTPUT ====

		SELECT customer_name
		FROM customers
		EXCEPT
		SELECT t1.customer_name
		FROM customers AS t1
		JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id
		JOIN order_items AS t3 ON t2.order_id = t3.order_id
		JOIN products AS t4 ON t3.product_id = t4.product_id
		WHERE t4.product_details = 'Latte'

	                customer_name
	0  KAqProf. Reyes Berge IICKn
	1      rof. Alexzander Hamill
	ACTUAL OUTPUT ====

		
		SELECT `customer_name`
		FROM
		  (SELECT *
		   FROM `customers` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT `LHS`.`product_id` AS `product_id`,
		                     `LHS`.`product_details` AS `product_details`,
		                     `LHS`.`customer_id` AS `customer_id`,
		                     `LHS`.`payment_method` AS `payment_method`,
		                     `LHS`.`customer_name` AS `customer_name`,
		                     `LHS`.`date_became_customer` AS `date_became_customer`,
		                     `LHS`.`other_customer_details` AS `other_customer_details`,
		                     `LHS`.`order_id` AS `order_id`,
		                     `LHS`.`order_status` AS `order_status`,
		                     `LHS`.`order_date` AS `order_date`,
		                     `LHS`.`order_details` AS `order_details`,
		                     `RHS`.`order_quantity` AS `order_quantity`
		              FROM
		                (SELECT `LHS`.`product_id` AS `product_id`,
		                        `LHS`.`product_details` AS `product_details`,
		                        `LHS`.`customer_id` AS `customer_id`,
		                        `LHS`.`payment_method` AS `payment_method`,
		                        `LHS`.`customer_name` AS `customer_name`,
		                        `LHS`.`date_became_customer` AS `date_became_customer`,
		                        `LHS`.`other_customer_details` AS `other_customer_details`,
		                        `RHS`.`order_id` AS `order_id`,
		                        `RHS`.`order_status` AS `order_status`,
		                        `RHS`.`order_date` AS `order_date`,
		                        `RHS`.`order_details` AS `order_details`
		                 FROM
		                   (SELECT `LHS`.`product_id` AS `product_id`,
		                           `LHS`.`product_details` AS `product_details`,
		                           `RHS`.`customer_id` AS `customer_id`,
		                           `RHS`.`payment_method` AS `payment_method`,
		                           `RHS`.`customer_name` AS `customer_name`,
		                           `RHS`.`date_became_customer` AS `date_became_customer`,
		                           `RHS`.`other_customer_details` AS `other_customer_details`
		                    FROM `products` AS `LHS`
		                    CROSS JOIN `customers` AS `RHS`) AS `LHS`
		                 INNER JOIN `customer_orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`
		              INNER JOIN `order_items` AS `RHS` ON (`LHS`.`product_id` = `RHS`.`product_id`
		                                                       AND `LHS`.`order_id` = `RHS`.`order_id`))
		           WHERE (`product_details` = 'Latte')) AS RHS
		        WHERE (LHS.customer_name = RHS.customer_name
		               AND LHS.date_became_customer = RHS.date_became_customer) ))
		ORDER BY customer_name

	                customer_name
	0                 Devin Mills
	1  KAqProf. Reyes Berge IICKn
	2           Kitty Padberg III
	3      rof. Alexzander Hamill
Wrong output for base solution in instance spider/customers_and_addresses/0036 (3004)
	EXPECTED OUTPUT ====

	  sum_t2_order_quantity_
	0                     45
	ACTUAL OUTPUT ====

		SELECT sum(t2.order_quantity)
		FROM customer_orders AS t1
		JOIN order_items AS t2 ON t1.order_id = t2.order_id
		WHERE t1.order_date < "2018-03-17 07:13:53"

	   sum(t2.order_quantity)
	0                      45
Wrong output for ground truth in instance spider/customers_and_addresses/0036 (3004)
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0017 (3005)
	EXPECTED OUTPUT ====

		SELECT DISTINCT city
		FROM addresses

	                    city
	0           Gleasonmouth
	1             Lake Ryann
	2         Lake Walterton
	3    Lake Waltertonpx(5l
	4             Lucasville
	5     TghGleasonmouthl2R
	6  pM)New Terrillportxjo
	ACTUAL OUTPUT ====

		
		SELECT city
		FROM addresses
		ORDER BY city

	                     city
	0            Gleasonmouth
	1            Gleasonmouth
	2            Gleasonmouth
	3              Lake Ryann
	4              Lake Ryann
	5          Lake Walterton
	6     Lake Waltertonpx(5l
	7              Lucasville
	8              Lucasville
	9      TghGleasonmouthl2R
	10  pM)New Terrillportxjo
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0039 (3007)
	EXPECTED OUTPUT ====

		SELECT t2.product_details,
		       t2.product_id
		FROM order_items AS t1
		JOIN products AS t2 ON t1.product_id = t2.product_id
		GROUP BY t1.product_id
		ORDER BY sum(t1.order_quantity)
		LIMIT 1

	  product_details  product_id
	0           Latte           4
	ACTUAL OUTPUT ====

		
		SELECT product_details,
		       product_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.order_id AS order_id,
		                LHS.product_id AS product_id,
		                LHS.order_quantity AS order_quantity,
		                RHS.product_details AS product_details
		         FROM order_items AS LHS
		         INNER JOIN products AS RHS ON (LHS.product_id = RHS.product_id))
		      ORDER BY product_details)
		   LIMIT 1)

	  product_details  product_id
	0  Dove Chocolate           3
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0038 (3008)
	EXPECTED OUTPUT ====

		SELECT t2.product_details
		FROM order_items AS t1
		JOIN products AS t2 ON t1.product_id = t2.product_id
		GROUP BY t1.product_id
		ORDER BY count(*) DESC
		LIMIT 1

	  product_details
	0  Dove Chocolate
	ACTUAL OUTPUT ====

		
		SELECT product_details
		FROM
		  (SELECT LHS.product_id AS product_id,
		          LHS.product_details AS product_details,
		          RHS.order_quantity AS order_quantity,
		          RHS.n AS n
		   FROM products AS LHS
		   INNER JOIN
		     (SELECT order_id,
		             order_quantity,
		             COUNT() AS n
		      FROM order_items
		      GROUP BY order_id,
		               order_quantity) AS RHS ON (LHS.product_id = RHS.order_id))
		ORDER BY product_details

	   product_details
	0   Dove Chocolate
	1   Dove Chocolate
	2   Dove Chocolate
	3   Dove Chocolate
	4   Dove Chocolate
	5   Dove Chocolate
	6   Dove Chocolate
	7   Dove Chocolate
	8   Dove Chocolate
	9   Dove Chocolate
	10  Dove Chocolate
	11  Dove Chocolate
	12  Dove Chocolate
	13  Dove Chocolate
	14  Dove Chocolate
	15  Dove Chocolate
	16  Dove Chocolate
	17  Dove Chocolate
	18  Dove Chocolate
	19           Latte
	20           Latte
	21           Latte
	22           Latte
	23           Latte
	24           Latte
	25           Latte
	26           Latte
	27           Latte
	28           Latte
	29           Latte
	30           Latte
	31           Latte
Wrong output for base solution in instance spider/customers_and_addresses/0003 (3009)
	EXPECTED OUTPUT ====

	   avg_order_quantity_
	0             6.333333
	ACTUAL OUTPUT ====

		SELECT avg(order_quantity)
		FROM order_items

	   avg(order_quantity)
	0             6.333333
Wrong output for ground truth in instance spider/customers_and_addresses/0003 (3009)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25661.sqlite3'
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0030 (3012)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT t3.product_id)
		FROM customers AS t1
		JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id
		JOIN order_items AS t3 ON t2.order_id = t3.order_id
		WHERE t1.customer_name = "Rodrick Heaney"

	   count(distinct t3.product_id)
	0                              5
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count_distinct_t3_product_id_`
		FROM
		  (SELECT `LHS`.`order_id` AS `order_id`,
		          `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`order_status` AS `order_status`,
		          `LHS`.`order_date` AS `order_date`,
		          `LHS`.`order_details` AS `order_details`,
		          `LHS`.`product_id` AS `product_id`,
		          `LHS`.`order_quantity` AS `order_quantity`,
		          `LHS`.`n` AS `n`,
		          `RHS`.`payment_method` AS `payment_method`,
		          `RHS`.`customer_name` AS `customer_name`,
		          `RHS`.`date_became_customer` AS `date_became_customer`,
		          `RHS`.`other_customer_details` AS `other_customer_details`
		   FROM
		     (SELECT `LHS`.`order_id` AS `order_id`,
		             `LHS`.`customer_id` AS `customer_id`,
		             `LHS`.`order_status` AS `order_status`,
		             `LHS`.`order_date` AS `order_date`,
		             `LHS`.`order_details` AS `order_details`,
		             `LHS`.`product_id` AS `product_id`,
		             `LHS`.`order_quantity` AS `order_quantity`,
		             `RHS`.`n` AS `n`
		      FROM
		        (SELECT `LHS`.`order_id` AS `order_id`,
		                `LHS`.`customer_id` AS `customer_id`,
		                `LHS`.`order_status` AS `order_status`,
		                `LHS`.`order_date` AS `order_date`,
		                `LHS`.`order_details` AS `order_details`,
		                `RHS`.`product_id` AS `product_id`,
		                `RHS`.`order_quantity` AS `order_quantity`
		         FROM `customer_orders` AS `LHS`
		         INNER JOIN `order_items` AS `RHS` ON (`LHS`.`order_id` = `RHS`.`order_id`)) AS `LHS`
		      INNER JOIN
		        (SELECT `customer_id`,
		                `order_status`,
		                COUNT() AS `n`
		         FROM `customer_orders`
		         GROUP BY `customer_id`,
		                  `order_status`) AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`
		                                               AND `LHS`.`order_status` = `RHS`.`order_status`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `customers`
		      WHERE (`customer_name` = 'Rodrick Heaney')) AS RHS ON (LHS.customer_id = RHS.customer_id))
		ORDER BY count_distinct_t3_product_id_

	   count_distinct_t3_product_id_
	0                              1
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0013 (3013)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM customers AS t1
		JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id
		JOIN addresses AS t3 ON t2.address_id = t3.address_id
		WHERE t3.city = "Lake Geovannyton"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`payment_method` AS `payment_method`,
		          `LHS`.`customer_name` AS `customer_name`,
		          `LHS`.`date_became_customer` AS `date_became_customer`,
		          `LHS`.`other_customer_details` AS `other_customer_details`,
		          `LHS`.`address_id` AS `address_id`,
		          `LHS`.`date_address_from` AS `date_address_from`,
		          `LHS`.`address_type` AS `address_type`,
		          `LHS`.`date_address_to` AS `date_address_to`,
		          `LHS`.`n` AS `n`,
		          `RHS`.`address_content` AS `address_content`,
		          `RHS`.`city` AS `city`,
		          `RHS`.`zip_postcode` AS `zip_postcode`,
		          `RHS`.`state_province_county` AS `state_province_county`,
		          `RHS`.`country` AS `country`,
		          `RHS`.`other_address_details` AS `other_address_details`
		   FROM
		     (SELECT `LHS`.`customer_id` AS `customer_id`,
		             `LHS`.`payment_method` AS `payment_method`,
		             `LHS`.`customer_name` AS `customer_name`,
		             `LHS`.`date_became_customer` AS `date_became_customer`,
		             `LHS`.`other_customer_details` AS `other_customer_details`,
		             `LHS`.`address_id` AS `address_id`,
		             `LHS`.`date_address_from` AS `date_address_from`,
		             `LHS`.`address_type` AS `address_type`,
		             `LHS`.`date_address_to` AS `date_address_to`,
		             `RHS`.`n` AS `n`
		      FROM
		        (SELECT `LHS`.`customer_id` AS `customer_id`,
		                `LHS`.`payment_method` AS `payment_method`,
		                `LHS`.`customer_name` AS `customer_name`,
		                `LHS`.`date_became_customer` AS `date_became_customer`,
		                `LHS`.`other_customer_details` AS `other_customer_details`,
		                `RHS`.`address_id` AS `address_id`,
		                `RHS`.`date_address_from` AS `date_address_from`,
		                `RHS`.`address_type` AS `address_type`,
		                `RHS`.`date_address_to` AS `date_address_to`
		         FROM `customers` AS `LHS`
		         INNER JOIN `customer_addresses` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`
		      INNER JOIN
		        (SELECT `address_id`,
		                COUNT() AS `n`
		         FROM `customer_addresses`
		         GROUP BY `address_id`) AS `RHS` ON (`LHS`.`address_id` = `RHS`.`address_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `addresses`
		      WHERE (`city` = 'Lake Geovannyton')) AS RHS ON (LHS.address_id = RHS.address_id))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0006 (3014)
	EXPECTED OUTPUT ====

		SELECT payment_method
		FROM customers
		GROUP BY payment_method
		ORDER BY count(*) DESC
		LIMIT 1

	  payment_method
	0    Credit Card
	ACTUAL OUTPUT ====

		
		SELECT payment_method
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT payment_method,
		                COUNT() AS n
		         FROM customers
		         GROUP BY payment_method)
		      ORDER BY n DESC)
		   LIMIT 1)

	  payment_method
	0    8S FACheque
No solution for instance spider/customers_and_addresses/0015 (3018)
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0005 (3019)
	EXPECTED OUTPUT ====

		SELECT date_became_customer
		FROM customers
		WHERE customer_id BETWEEN 10 AND 20

	  date_became_customer
	0  1984-11-14 22:44:46
	1  1984-11-14 22:44:46
	2  1984-11-14 22:44:46
	3  2018-03-16 04:31:18
	4  2018-03-16 04:31:18
	ACTUAL OUTPUT ====

		
		SELECT date_became_customer
		FROM customers
		WHERE (customer_id >= 10
		       OR customer_id = 20)
		ORDER BY date_became_customer

	   date_became_customer
	0   1984-11-14 22:44:46
	1   1984-11-14 22:44:46
	2   1984-11-14 22:44:46
	3   1984-11-14 22:44:46
	4   1984-11-14 22:44:46
	5   1984-11-14 22:44:46
	6   2018-03-01 23:20:10
	7   2018-03-01 23:20:10
	8   2018-03-05 07:19:45
	9   2018-03-05 07:19:45
	10  2018-03-05 07:19:45
	11  2018-03-09 15:00:31
	12  2018-03-09 15:00:31
	13  2018-03-09 15:00:31
	14  2018-03-09 15:00:31
	15  2018-03-09 15:00:31
	16  2018-03-12 03:10:01
	17  2018-03-12 03:10:01
	18  2018-03-12 15:18:56
	19  2018-03-12 15:18:56
	20  2018-03-12 15:18:56
	21  2018-03-12 15:18:56
	22  2018-03-12 22:38:50
	23  2018-03-12 22:38:50
	24  2018-03-12 22:38:50
	25  2018-03-12 22:38:50
	26  2018-03-13 00:30:17
	27  2018-03-13 00:30:17
	28  2018-03-13 00:30:17
	29  2018-03-13 00:30:17
	30  2018-03-15 02:54:27
	31  2018-03-16 04:31:18
	32  2018-03-16 04:31:18
	33  2018-03-16 04:31:18
	34  2018-03-16 04:31:18
	35  2018-03-16 04:31:18
	36  2018-03-16 04:31:18
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0016 (3020)
	EXPECTED OUTPUT ====

		SELECT t3.city
		FROM customers AS t1
		JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id
		JOIN addresses AS t3 ON t2.address_id = t3.address_id
		GROUP BY t3.city
		ORDER BY count(*) DESC
		LIMIT 1

	          city
	0  Port Lilyan
	ACTUAL OUTPUT ====

		
		SELECT city
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.address_id AS address_id,
		                LHS.address_content AS address_content,
		                LHS.city AS city,
		                LHS.zip_postcode AS zip_postcode,
		                LHS.state_province_county AS state_province_county,
		                LHS.country AS country,
		                LHS.other_address_details AS other_address_details,
		                LHS.customer_id AS customer_id,
		                LHS.payment_method AS payment_method,
		                LHS.customer_name AS customer_name,
		                LHS.date_became_customer AS date_became_customer,
		                LHS.other_customer_details AS other_customer_details,
		                LHS.date_address_from AS date_address_from,
		                LHS.address_type AS address_type,
		                LHS.date_address_to AS date_address_to,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.address_id AS address_id,
		                   LHS.address_content AS address_content,
		                   LHS.city AS city,
		                   LHS.zip_postcode AS zip_postcode,
		                   LHS.state_province_county AS state_province_county,
		                   LHS.country AS country,
		                   LHS.other_address_details AS other_address_details,
		                   LHS.customer_id AS customer_id,
		                   LHS.payment_method AS payment_method,
		                   LHS.customer_name AS customer_name,
		                   LHS.date_became_customer AS date_became_customer,
		                   LHS.other_customer_details AS other_customer_details,
		                   RHS.date_address_from AS date_address_from,
		                   RHS.address_type AS address_type,
		                   RHS.date_address_to AS date_address_to
		            FROM
		              (SELECT LHS.address_id AS address_id,
		                      LHS.address_content AS address_content,
		                      LHS.city AS city,
		                      LHS.zip_postcode AS zip_postcode,
		                      LHS.state_province_county AS state_province_county,
		                      LHS.country AS country,
		                      LHS.other_address_details AS other_address_details,
		                      RHS.customer_id AS customer_id,
		                      RHS.payment_method AS payment_method,
		                      RHS.customer_name AS customer_name,
		                      RHS.date_became_customer AS date_became_customer,
		                      RHS.other_customer_details AS other_customer_details
		               FROM addresses AS LHS
		               CROSS JOIN customers AS RHS) AS LHS
		            INNER JOIN customer_addresses AS RHS ON (LHS.address_id = RHS.address_id
		                                                        AND LHS.customer_id = RHS.customer_id)) AS LHS
		         INNER JOIN
		           (SELECT city,
		                   COUNT() AS n
		            FROM addresses
		            GROUP BY city) AS RHS ON (LHS.city = RHS.city))
		      ORDER BY customer_name DESC)
		   LIMIT 1)

	              city
	0  East Julianasid
Wrong output for base solution in instance spider/customers_and_addresses/0035 (3024)
	EXPECTED OUTPUT ====

	  sum_t2_order_quantity_
	0                     77
	ACTUAL OUTPUT ====

		SELECT sum(t2.order_quantity)
		FROM customer_orders AS t1
		JOIN order_items AS t2 ON t1.order_id = t2.order_id
		WHERE t1.order_status = "Cancelled"

	   sum(t2.order_quantity)
	0                      77
Wrong output for ground truth in instance spider/customers_and_addresses/0035 (3024)
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0020 (3025)
	EXPECTED OUTPUT ====

		SELECT country
		FROM addresses
		GROUP BY country
		HAVING count(address_id) > 4

	Empty DataFrame
	Columns: [country]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT country
		FROM
		  (SELECT address_content,
		          country,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM addresses
		      WHERE (address_id >= 4))
		   GROUP BY address_content,
		            country)
		ORDER BY country

	     country
	0  4i7USAG i
	1   6zZZ2USA
	2        USA
	3   USAX(H4c
	4   USAfMLeP
No solution for instance spider/customers_and_addresses/0019 (3026)
No solution for instance spider/customers_and_addresses/0007 (3027)
No solution for instance spider/customers_and_addresses/0024 (3029)
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0023 (3031)
	EXPECTED OUTPUT ====

		SELECT max(t2.active_to_date)
		FROM customers AS t1
		JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id
		WHERE t1.customer_name = "Tillman Ernser"

	  max(t2.active_to_date)
	0                   None
	ACTUAL OUTPUT ====

		
		SELECT `maxactive_to_date` AS `max_t2_active_to_date_`
		FROM
		  (SELECT `customer_name`,
		          MAX(`active_to_date`) AS `maxactive_to_date`
		   FROM
		     (SELECT `LHS`.`customer_id` AS `customer_id`,
		             `LHS`.`payment_method` AS `payment_method`,
		             `LHS`.`customer_name` AS `customer_name`,
		             `LHS`.`date_became_customer` AS `date_became_customer`,
		             `LHS`.`other_customer_details` AS `other_customer_details`,
		             `RHS`.`channel_code` AS `channel_code`,
		             `RHS`.`active_from_date` AS `active_from_date`,
		             `RHS`.`active_to_date` AS `active_to_date`,
		             `RHS`.`contact_number` AS `contact_number`
		      FROM `customers` AS `LHS`
		      LEFT JOIN `customer_contact_channels` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))
		   GROUP BY `customer_name`)
		WHERE (`customer_name` = 'Tillman Ernser')
		ORDER BY max_t2_active_to_date_

	Empty DataFrame
	Columns: [max_t2_active_to_date_]
	Index: []
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0043 (3033)
	EXPECTED OUTPUT ====

		SELECT customer_name
		FROM customers
		EXCEPT
		SELECT t1.customer_name
		FROM customers AS t1
		JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id

	                customer_name
	0  A6WProf. Reyes Berge IIkdj
	1   Lpbn1Prof. Reyes Berge II
	2      Prof. Alexzander Hamil
	3        Prof. Reyes Berge II
	4            rmG TDevin Mills
	ACTUAL OUTPUT ====

		
		SELECT customer_name
		FROM
		  (SELECT *
		   FROM customers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM customer_orders AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY customer_name

	                customer_name
	0  A6WProf. Reyes Berge IIkdj
	1                 Devin Mills
	2   Lpbn1Prof. Reyes Berge II
	3      Prof. Alexzander Hamil
	4        Prof. Reyes Berge II
	5            rmG TDevin Mills
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0009 (3035)
	EXPECTED OUTPUT ====

		SELECT DISTINCT product_details
		FROM products

	  product_details
	0  Dove Chocolate
	1           Latte
	ACTUAL OUTPUT ====

		
		SELECT product_details
		FROM products
		ORDER BY product_details

	  product_details
	0  Dove Chocolate
	1  Dove Chocolate
	2  Dove Chocolate
	3           Latte
	4           Latte
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25661.sqlite3'
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0011 (3037)
	EXPECTED OUTPUT ====

		SELECT product_details
		FROM products
		WHERE product_details LIKE "%Latte%"
		  OR product_details LIKE "%Americano%"

	  product_details
	0     %Americano%
	1         %Latte%
	2           Latte
	3           Latte
	ACTUAL OUTPUT ====

		
		SELECT `product_details`
		FROM `products`
		WHERE (`product_details` = 'Latte'
		       OR `product_details` = 'Americano')
		ORDER BY product_details

	  product_details
	0           Latte
	1           Latte
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0029 (3038)
	EXPECTED OUTPUT ====

		SELECT t1.payment_method
		FROM customers AS t1
		JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id
		JOIN order_items AS t3 ON t2.order_id = t3.order_id
		GROUP BY t1.customer_name
		ORDER BY sum(t3.order_quantity)
		LIMIT 1

	  payment_method
	0           Cash
	ACTUAL OUTPUT ====

		
		SELECT payment_method
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.payment_method AS payment_method,
		          LHS.customer_name AS customer_name,
		          LHS.date_became_customer AS date_became_customer,
		          LHS.other_customer_details AS other_customer_details,
		          LHS.order_id AS order_id,
		          LHS.order_status AS order_status,
		          LHS.order_date AS order_date,
		          LHS.order_details AS order_details,
		          LHS.product_id AS product_id,
		          LHS.order_quantity AS order_quantity
		   FROM
		     (SELECT LHS.customer_id AS customer_id,
		             LHS.payment_method AS payment_method,
		             LHS.customer_name AS customer_name,
		             LHS.date_became_customer AS date_became_customer,
		             LHS.other_customer_details AS other_customer_details,
		             LHS.order_id AS order_id,
		             LHS.order_status AS order_status,
		             LHS.order_date AS order_date,
		             LHS.order_details AS order_details,
		             RHS.product_id AS product_id,
		             RHS.order_quantity AS order_quantity
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.payment_method AS payment_method,
		                LHS.customer_name AS customer_name,
		                LHS.date_became_customer AS date_became_customer,
		                LHS.other_customer_details AS other_customer_details,
		                RHS.order_id AS order_id,
		                RHS.order_status AS order_status,
		                RHS.order_date AS order_date,
		                RHS.order_details AS order_details
		         FROM customers AS LHS
		         INNER JOIN customer_orders AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS
		      INNER JOIN order_items AS RHS ON (LHS.order_id = RHS.order_id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM order_items
		      WHERE (order_quantity = 1)) AS RHS ON (LHS.order_id = RHS.order_id
		                                             AND LHS.product_id = RHS.product_id
		                                             AND LHS.order_quantity = RHS.order_quantity))
		ORDER BY payment_method

	Empty DataFrame
	Columns: [payment_method]
	Index: []
No solution for instance spider/customers_and_addresses/0010 (3039)
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0044 (3040)
	EXPECTED OUTPUT ====

		SELECT t1.customer_name
		FROM customers AS t1
		JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id
		JOIN order_items AS t3 ON t2.order_id = t3.order_id
		JOIN products AS t4 ON t3.product_id = t4.product_id
		WHERE t4.product_details = 'Latte' INTERSECT
		  SELECT t1.customer_name
		  FROM customers AS t1
		  JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id
		  JOIN order_items AS t3 ON t2.order_id = t3.order_id
		  JOIN products AS t4 ON t3.product_id = t4.product_id WHERE t4.product_details = 'Americano'

	                customer_name
	0                 Devin Mills
	1  KAqProf. Reyes Berge IICKn
	2           Kitty Padberg III
	3     Prof. Alexzander Hamill
	4        Prof. Reyes Berge II
	5            TVam4Devin Mills
	6   nv)gWProf. Reyes Berge II
	ACTUAL OUTPUT ====

		
		SELECT `customer_name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`customer_id` AS `customer_id`,
		                `LHS`.`payment_method` AS `payment_method`,
		                `LHS`.`customer_name` AS `customer_name`,
		                `LHS`.`date_became_customer` AS `date_became_customer`,
		                `LHS`.`other_customer_details` AS `other_customer_details`,
		                `LHS`.`order_id` AS `order_id`,
		                `LHS`.`order_status` AS `order_status`,
		                `LHS`.`order_date` AS `order_date`,
		                `LHS`.`order_details` AS `order_details`,
		                `LHS`.`product_id` AS `product_id`,
		                `LHS`.`order_quantity` AS `order_quantity`,
		                `RHS`.`product_details` AS `product_details`
		         FROM
		           (SELECT `LHS`.`customer_id` AS `customer_id`,
		                   `LHS`.`payment_method` AS `payment_method`,
		                   `LHS`.`customer_name` AS `customer_name`,
		                   `LHS`.`date_became_customer` AS `date_became_customer`,
		                   `LHS`.`other_customer_details` AS `other_customer_details`,
		                   `LHS`.`order_id` AS `order_id`,
		                   `LHS`.`order_status` AS `order_status`,
		                   `LHS`.`order_date` AS `order_date`,
		                   `LHS`.`order_details` AS `order_details`,
		                   `RHS`.`product_id` AS `product_id`,
		                   `RHS`.`order_quantity` AS `order_quantity`
		            FROM
		              (SELECT `LHS`.`customer_id` AS `customer_id`,
		                      `LHS`.`payment_method` AS `payment_method`,
		                      `LHS`.`customer_name` AS `customer_name`,
		                      `LHS`.`date_became_customer` AS `date_became_customer`,
		                      `LHS`.`other_customer_details` AS `other_customer_details`,
		                      `RHS`.`order_id` AS `order_id`,
		                      `RHS`.`order_status` AS `order_status`,
		                      `RHS`.`order_date` AS `order_date`,
		                      `RHS`.`order_details` AS `order_details`
		               FROM `customers` AS `LHS`
		               INNER JOIN `customer_orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`
		            INNER JOIN `order_items` AS `RHS` ON (`LHS`.`order_id` = `RHS`.`order_id`)) AS `LHS`
		         INNER JOIN
		           (SELECT *
		            FROM `products`
		            WHERE (`product_details` = 'Latte'
		                   AND `product_details` != 'Americano')) AS RHS ON (LHS.product_id = RHS.product_id))
		      ORDER BY date_became_customer)
		   LIMIT 1)

	          customer_name
	0  Prof. Reyes Berge II
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0040 (3041)
	EXPECTED OUTPUT ====

		SELECT address_content
		FROM addresses
		WHERE city = "East Julianaside"
		  AND state_province_county = "Texas"
		UNION
		SELECT address_content
		FROM addresses
		WHERE city = "Gleasonmouth"
		  AND state_province_county = "Arizona"

	Empty DataFrame
	Columns: [address_content]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `address_content`
		FROM
		  (SELECT *
		   FROM `addresses`
		   WHERE (`city` = 'East Julianaside'
		          OR `state_province_county` = 'Arizona'))
		WHERE (`state_province_county` != 'Texas'
		       OR `city` != 'Gleasonmouth')
		ORDER BY address_content

	             address_content
	0       47831 Martin Islands
	1  47831 Martin IslandsP4l(R
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0028 (3042)
	EXPECTED OUTPUT ====

		SELECT t1.customer_name
		FROM customers AS t1
		JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id
		JOIN order_items AS t3 ON t2.order_id = t3.order_id
		GROUP BY t1.customer_name
		ORDER BY sum(t3.order_quantity) DESC
		LIMIT 1

	             customer_name
	0  Prof. Alexzander Hamill
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT customer_name
		FROM
		  (SELECT customer_id AS order_id,
		          customer_id,
		          order_status,
		          order_date,
		          order_details,
		          payment_method,
		          customer_name,
		          date_became_customer,
		          other_customer_details,
		          order_status_other,
		          order_date_other,
		          order_details_other,
		          product_id,
		          order_quantity
		   FROM
		     (SELECT LHS.order_id AS order_id,
		             LHS.customer_id AS customer_id,
		             LHS.order_status AS order_status,
		             LHS.order_date AS order_date,
		             LHS.order_details AS order_details,
		             RHS.payment_method AS payment_method,
		             RHS.customer_name AS customer_name,
		             RHS.date_became_customer AS date_became_customer,
		             RHS.other_customer_details AS other_customer_details,
		             RHS.order_status AS order_status_other,
		             RHS.order_date AS order_date_other,
		             RHS.order_details AS order_details_other,
		             RHS.product_id AS product_id,
		             RHS.order_quantity AS order_quantity
		      FROM customer_orders AS LHS
		      INNER JOIN
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.payment_method AS payment_method,
		                LHS.customer_name AS customer_name,
		                LHS.date_became_customer AS date_became_customer,
		                LHS.other_customer_details AS other_customer_details,
		                LHS.order_id AS order_id,
		                LHS.order_status AS order_status,
		                LHS.order_date AS order_date,
		                LHS.order_details AS order_details,
		                RHS.product_id AS product_id,
		                RHS.order_quantity AS order_quantity
		         FROM
		           (SELECT LHS.customer_id AS customer_id,
		                   LHS.payment_method AS payment_method,
		                   LHS.customer_name AS customer_name,
		                   LHS.date_became_customer AS date_became_customer,
		                   LHS.other_customer_details AS other_customer_details,
		                   RHS.order_id AS order_id,
		                   RHS.order_status AS order_status,
		                   RHS.order_date AS order_date,
		                   RHS.order_details AS order_details
		            FROM customers AS LHS
		            INNER JOIN customer_orders AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS
		         INNER JOIN order_items AS RHS ON (LHS.order_id = RHS.order_id)) AS RHS ON (LHS.customer_id = RHS.order_id
		                                                                                       AND LHS.order_id = RHS.customer_id)))
		ORDER BY customer_name

	Empty DataFrame
	Columns: [customer_name]
	Index: []
Wrong output for base solution in instance spider/customers_and_addresses/0031 (3043)
	EXPECTED OUTPUT ====

	  sum_t3_order_quantity_
	0                     21
	ACTUAL OUTPUT ====

		SELECT sum(t3.order_quantity)
		FROM customers AS t1
		JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id
		JOIN order_items AS t3 ON t2.order_id = t3.order_id
		WHERE t1.customer_name = "Rodrick Heaney"

	   sum(t3.order_quantity)
	0                      21
Wrong output for ground truth in instance spider/customers_and_addresses/0031 (3043)
Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_26191.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_26460.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_26710.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_26870.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27065.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27274.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
Memout while getting results...


No solution for instance spider/college_2/0042 (3065)
Wrong output for fuzzied solution in instance spider/college_2/0033 (3066)
	EXPECTED OUTPUT ====

		SELECT T1.title,
		       T3.name
		FROM course AS T1
		JOIN teaches AS T2 ON T1.course_id = T2.course_id
		JOIN instructor AS T3 ON T2.id = T3.id
		WHERE YEAR = 2008
		ORDER BY T1.title

	                 title         name
	0             Japanese  21UCholl9y2
	1    P83hIAerodynamics  21UCholl9y2
	2          erodynamics  21UCholl9y2
	3         Aerodynamics  2CqLileyp21
	4         Aerodynamics  2CqLileyp21
	..                 ...          ...
	131      JapaneseVnmTn    nv)gWTung
	132            apanese    nv)gWTung
	133           Japanese          ung
	134        erodynamics          ung
	135    mage Processing          ung
	
	[136 rows x 2 columns]
	ACTUAL OUTPUT ====

		
		SELECT title,
		       name
		FROM
		  (SELECT LHS.course_id AS course_id,
		          LHS.title AS title,
		          LHS.dept_name AS dept_name,
		          LHS.credits AS credits,
		          LHS.id AS id,
		          LHS.name AS name,
		          LHS.salary AS salary,
		          RHS.sec_id AS sec_id,
		          RHS.semester AS semester,
		          RHS.year AS YEAR
		   FROM
		     (SELECT LHS.course_id AS course_id,
		             LHS.title AS title,
		             LHS.dept_name AS dept_name,
		             LHS.credits AS credits,
		             RHS.id AS id,
		             RHS.name AS name,
		             RHS.salary AS salary
		      FROM course AS LHS
		      INNER JOIN instructor AS RHS ON (LHS.dept_name = RHS.dept_name)) AS LHS
		   INNER JOIN teaches AS RHS ON (LHS.course_id = RHS.course_id
		                                    AND LHS.id = RHS.id))
		WHERE (YEAR = 2008.0)
		ORDER BY title

	                 title         name
	0         Aerodynamics  2CqLileyp21
	1          erodynamics          Baw
	2             Japanese         Bawa
	3     Image Processing        Liley
	4  Electron Microscopy   LileysHiVk
	5             Japanese  RM8Liley)EB
	6  Electron Microscopy         Tung
	7          erodynamics         Tung
	8      mage Processing         Tung
	9              apanese    nv)gWTung
Wrong output for base solution in instance spider/college_2/0037 (3067)
	EXPECTED OUTPUT ====

	    max_capacity_  avg_capacity_   building
	0            10.0      10.000000  Lamberton
	1            11.0      10.500000   Chandler
	2            12.0      11.000000      Power
	3            12.0      12.000000   Bronfman
	4            18.0      18.000000      Drown
	5            30.0      26.000000       Main
	6            27.0      27.000000  Fairchild
	7            28.0      28.000000      Polya
	8            34.0      34.000000      Grace
	9            47.0      36.500000     Alumni
	10           65.0      37.500000      Gates
	11          109.0      49.333333     Saucon
	12           51.0      51.000000    Lambeau
	13           59.0      59.000000   Garfield
	14           60.0      60.000000   Rathbone
	15          120.0      76.000000    Whitman
	16           92.0      92.000000     Nassau
	17          115.0      93.000000     Taylor
	18           97.0      97.000000    Painter
	19          113.0     113.000000    Stabler
	ACTUAL OUTPUT ====

		SELECT max(capacity),
		       avg(capacity),
		       building
		FROM classroom
		GROUP BY building

	    max(capacity)  avg(capacity)   building
	0              10      10.000000  Lamberton
	1              11      10.500000   Chandler
	2              12      11.000000      Power
	3              12      12.000000   Bronfman
	4              18      18.000000      Drown
	5              30      26.000000       Main
	6              27      27.000000  Fairchild
	7              28      28.000000      Polya
	8              34      34.000000      Grace
	9              47      36.500000     Alumni
	10             65      37.500000      Gates
	11            109      49.333333     Saucon
	12             51      51.000000    Lambeau
	13             59      59.000000   Garfield
	14             60      60.000000   Rathbone
	15            120      76.000000    Whitman
	16             92      92.000000     Nassau
	17            115      93.000000     Taylor
	18             97      97.000000    Painter
	19            113     113.000000    Stabler
Wrong output for ground truth in instance spider/college_2/0037 (3067)
Wrong output for fuzzied solution in instance spider/college_2/0036 (3069)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       building
		FROM classroom
		WHERE capacity > 50
		GROUP BY building

	   count(*)      building
	0         1     Lamberton
	1         1          Main
	2         1  TITNassau7FE
	3         1           ain
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___,
		       building
		FROM
		  (SELECT building,
		          COUNT(DISTINCT capacity) AS n_distinct
		   FROM
		     (SELECT *
		      FROM classroom
		      WHERE (capacity >= 50.0))
		   GROUP BY building)
		ORDER BY count___

	   count___      building
	0         2     Lamberton
	1         1          Main
	2         1  TITNassau7FE
	3         1           ain
No solution for instance spider/college_2/0057 (3070)
No solution for instance spider/college_2/0017 (3071)
No solution for instance spider/college_2/0052 (3072)
Wrong output for fuzzied solution in instance spider/college_2/0076 (3076)
	EXPECTED OUTPUT ====

		SELECT DISTINCT name
		FROM instructor
		ORDER BY name

	           name
	0   21UCholl9y2
	1   2CqLileyp21
	2     9wi(FTung
	3           Baw
	4          Bawa
	5          Chol
	6         Choll
	7     GsIUJTung
	8    KAqTungCKn
	9          Lile
	10        Liley
	11   Liley4QGy)
	12   LileyTsXhj
	13   LileysHiVk
	14    PCueCBawa
	15  RM8Liley)EB
	16   TVam4Liley
	17          Tun
	18         Tung
	19   Wg2zoCholl
	20   ca0BawawgY
	21   fet(2Liley
	22         iley
	23   mGuzjLiley
	24    nv)gWTung
	25          ung
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM instructor
		ORDER BY name

	           name
	0   21UCholl9y2
	1   2CqLileyp21
	2     9wi(FTung
	3           Baw
	4          Bawa
	5          Bawa
	6          Bawa
	7          Bawa
	8          Bawa
	9          Chol
	10        Choll
	11        Choll
	12        Choll
	13        Choll
	14    GsIUJTung
	15   KAqTungCKn
	16         Lile
	17        Liley
	18        Liley
	19        Liley
	20        Liley
	21        Liley
	22        Liley
	23        Liley
	24        Liley
	25        Liley
	26        Liley
	27   Liley4QGy)
	28   LileyTsXhj
	29   LileysHiVk
	30    PCueCBawa
	31  RM8Liley)EB
	32   TVam4Liley
	33          Tun
	34         Tung
	35         Tung
	36         Tung
	37         Tung
	38   Wg2zoCholl
	39   ca0BawawgY
	40   fet(2Liley
	41         iley
	42   mGuzjLiley
	43    nv)gWTung
	44          ung
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
No solution for instance spider/college_2/0048 (3079)
Wrong output for fuzzied solution in instance spider/college_2/0022 (3080)
	EXPECTED OUTPUT ====

		SELECT title
		FROM course
		WHERE dept_name = 'Statistics'
		EXCEPT
		SELECT title
		FROM course
		WHERE dept_name = 'Psychology'

	                 title
	0         Aerodynamics
	1  Electron Microscopy
	2       r5eJapanese47P
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM `course`
		         WHERE (`dept_name` = 'Statistics'
		                AND `dept_name` != 'Psychology'))
		      ORDER BY course_id DESC)
		   LIMIT 4)

	                 title
	0         Aerodynamics
	1         Aerodynamics
	2         Aerodynamics
	3  Electron Microscopy
Wrong output for fuzzied solution in instance spider/college_2/0072 (3082)
	EXPECTED OUTPUT ====

		SELECT name
		FROM instructor
		WHERE dept_name = 'Comp. Sci.'
		  AND salary > 80000

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM `instructor`
		WHERE (`dept_name` = 'Comp. Sci.'
		       AND salary != 80000.0)
		ORDER BY name

	    name
	0  Liley
Wrong output for fuzzied solution in instance spider/college_2/0013 (3084)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM course
		WHERE course_id NOT IN
		    (SELECT course_id
		     FROM prereq)

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT *
		   FROM course AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM prereq AS RHS
		        WHERE (LHS.course_id = RHS.course_id) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/college_2/0065 (3086)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
Wrong output for fuzzied solution in instance spider/college_2/0026 (3090)
	EXPECTED OUTPUT ====

		SELECT dept_name
		FROM course
		GROUP BY dept_name
		ORDER BY sum(credits) DESC
		LIMIT 1

	       dept_name
	0  mBMGeologyTaE
	ACTUAL OUTPUT ====

		
		SELECT dept_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT dept_name,
		                SUM(credits) AS sumcredits
		         FROM course
		         GROUP BY dept_name)
		      ORDER BY sumcredits DESC)
		   LIMIT 1)

	      dept_name
	0  Geology3fqxX
No solution for instance spider/college_2/0066 (3095)
Wrong output for fuzzied solution in instance spider/college_2/0062 (3096)
	EXPECTED OUTPUT ====

		SELECT dept_name
		FROM instructor
		GROUP BY dept_name
		ORDER BY avg(salary) DESC
		LIMIT 1

	         dept_name
	0  V1GMarketing0qO
	ACTUAL OUTPUT ====

		
		SELECT dept_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT dept_name,
		                AVG(salary) AS meansalary
		         FROM instructor
		         GROUP BY dept_name)
		      ORDER BY meansalary DESC)
		   LIMIT 1)

	         dept_name
	0  PsychologypCVie
No solution for instance spider/college_2/0050 (3097)
No solution for instance spider/college_2/0068 (3098)
Wrong output for fuzzied solution in instance spider/college_2/0063 (3102)
	EXPECTED OUTPUT ====

		SELECT avg(T1.salary),
		       count(*)
		FROM instructor AS T1
		JOIN department AS T2 ON T1.dept_name = T2.dept_name
		ORDER BY T2.budget DESC
		LIMIT 1

	   avg(t1.salary)  count(*)
	0    64448.186444        45
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT meansalary AS avg_t1_salary_,
		                n_distinct AS count___
		FROM
		  (SELECT LHS.dept_name AS dept_name,
		          LHS.building AS building,
		          LHS.budget AS budget,
		          LHS.id AS id,
		          LHS.name AS name,
		          LHS.salary AS salary,
		          LHS.n_distinct AS n_distinct,
		          RHS.meansalary AS meansalary
		   FROM
		     (SELECT LHS.dept_name AS dept_name,
		             LHS.building AS building,
		             LHS.budget AS budget,
		             LHS.id AS id,
		             LHS.name AS name,
		             LHS.salary AS salary,
		             RHS.n_distinct AS n_distinct
		      FROM
		        (SELECT LHS.dept_name AS dept_name,
		                LHS.building AS building,
		                LHS.budget AS budget,
		                RHS.id AS id,
		                RHS.name AS name,
		                RHS.salary AS salary
		         FROM department AS LHS
		         INNER JOIN instructor AS RHS ON (LHS.dept_name = RHS.dept_name)) AS LHS
		      CROSS JOIN
		        (SELECT COUNT(DISTINCT salary) AS n_distinct
		         FROM instructor) AS RHS) AS LHS
		   INNER JOIN
		     (SELECT id,
		             name,
		             dept_name,
		             salary,
		             AVG(salary) OVER () AS meansalary
		      FROM instructor) AS RHS ON (LHS.dept_name = RHS.dept_name
		                                     AND LHS.id = RHS.id
		                                     AND LHS.name = RHS.name
		                                     AND LHS.salary = RHS.salary))
		ORDER BY avg_t1_salary_

	   avg_t1_salary_  count___
	0    64448.186444        20
Wrong output for fuzzied solution in instance spider/college_2/0018 (3103)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM classroom
		WHERE building = 'Lamberton'
		  AND capacity < 50

	   count(*)
	0         9
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `building`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `classroom`
		      WHERE (`building` = 'Lamberton'
		             OR capacity = 50.0))
		   GROUP BY building)
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
	3         1
	4         1
	5         1
	6         1
	7         2
	8        12
No solution for instance spider/college_2/0051 (3105)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
Wrong output for fuzzied solution in instance spider/college_2/0007 (3108)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM classroom
		WHERE building = 'Lamberton'

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `building`,
		          `capacity`,
		          COUNT() AS `n`
		   FROM `classroom`
		   GROUP BY `building`,
		            `capacity`)
		WHERE (`building` = 'Lamberton')
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
	3         1
	4         2
	5         2
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
Wrong output for fuzzied solution in instance spider/college_2/0034 (3111)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM instructor AS T1
		JOIN advisor AS T2 ON T1.id = T2.i_id
		GROUP BY T2.i_id
		HAVING count(*) > 1

	           name
	0   21UCholl9y2
	1           Baw
	2          Bawa
	3          Chol
	4         Choll
	5    KAqTungCKn
	6          Lile
	7         Liley
	8         Liley
	9         Liley
	10        Liley
	11   Liley4QGy)
	12         Tung
	13   Wg2zoCholl
	14   ca0BawawgY
	15   mGuzjLiley
	16    nv)gWTung
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT dept_name,
		          name,
		          COUNT() AS n
		   FROM
		     (SELECT id,
		             name,
		             dept_name,
		             salary,
		             s_id,
		             id AS i_id
		      FROM
		        (SELECT LHS.id AS id,
		                LHS.name AS name,
		                LHS.dept_name AS dept_name,
		                LHS.salary AS salary,
		                RHS.s_id AS s_id
		         FROM instructor AS LHS
		         INNER JOIN advisor AS RHS ON (LHS.id = RHS.i_id)))
		   GROUP BY dept_name,
		            name)
		WHERE (n > 1)
		ORDER BY name

	           name
	0   21UCholl9y2
	1           Baw
	2          Bawa
	3          Chol
	4         Choll
	5    KAqTungCKn
	6          Lile
	7         Liley
	8         Liley
	9         Liley
	10        Liley
	11   Liley4QGy)
	12         Tung
	13         Tung
	14   Wg2zoCholl
	15   ca0BawawgY
	16   mGuzjLiley
	17    nv)gWTung
Wrong output for fuzzied solution in instance spider/college_2/0024 (3112)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.name
		FROM student AS T1
		JOIN takes AS T2 ON T1.id = T2.id
		WHERE YEAR = 2009
		  OR YEAR = 2010

	             name
	0          2kwdLQ
	1    5u2zjQueiroz
	2           67Mz6
	3           BrtfL
	4    D))g3Harders
	5           Erdem
	6      Erdem0da44
	7      ErdemlWcoF
	8    HHO2pQueiroz
	9          Harder
	10        Harders
	11        IbY4BrC
	12          KpYsm
	13  KxNQueirozYu4
	14        Margett
	15       Margetts
	16  Margetts26s6x
	17  Margetts3WGNI
	18    Nh(ErdemkZf
	19        Queiroz
	20   QueirozSwDFc
	21   Queirozi7Qgp
	22   Queirozm4GMy
	23        TasZM6t
	24       Whv(D877
	25    X(zQ5DBKcfo
	26        aFa96J2
	27      aRCKauKRf
	28         arders
	29       i9vs853I
	30        qTaxNq)
	31           rdem
	32    sBxErdemfIK
	33       tNnjfe0E
	34  upyHardersrOb
	35        vAFoSpI
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.id AS id,
		          LHS.course_id AS course_id,
		          LHS.sec_id AS sec_id,
		          LHS.semester AS semester,
		          LHS.year AS YEAR,
		          LHS.grade AS grade,
		          RHS.name AS name,
		          RHS.dept_name AS dept_name,
		          RHS.tot_cred AS tot_cred
		   FROM takes AS LHS
		   INNER JOIN student AS RHS ON (LHS.id = RHS.id))
		WHERE (YEAR >= 2009.0
		       OR YEAR = 2010.0)
		ORDER BY name

	             name
	0          2kwdLQ
	1    5u2zjQueiroz
	2           67Mz6
	3           BrtfL
	4    D))g3Harders
	5           Erdem
	6      Erdem0da44
	7      ErdemlWcoF
	8    HHO2pQueiroz
	9          Harder
	10        Harders
	11        IbY4BrC
	12          KpYsm
	13  KxNQueirozYu4
	14        Margett
	15       Margetts
	16  Margetts26s6x
	17  Margetts3WGNI
	18    Nh(ErdemkZf
	19        Queiroz
	20   QueirozSwDFc
	21   Queirozi7Qgp
	22   Queirozm4GMy
	23        TasZM6t
	24       Whv(D877
	25    X(zQ5DBKcfo
	26        aFa96J2
	27      aRCKauKRf
	28         arders
	29        argetts
	30       i9vs853I
	31        qTaxNq)
	32           rdem
	33    sBxErdemfIK
	34       tNnjfe0E
	35  upyHardersrOb
	36        vAFoSpI
Wrong output for fuzzied solution in instance spider/college_2/0021 (3113)
	EXPECTED OUTPUT ====

		SELECT title
		FROM course
		WHERE dept_name = 'Statistics' INTERSECT
		  SELECT title
		  FROM course WHERE dept_name = 'Psychology'

	Empty DataFrame
	Columns: [title]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM `course`
		         WHERE (`dept_name` = 'Statistics'
		                OR `dept_name` = 'Psychology'))
		      ORDER BY dept_name)
		   LIMIT 1)

	             title
	0  mage Processing
No solution for instance spider/college_2/0023 (3115)
No solution for instance spider/college_2/0043 (3117)
No solution for instance spider/college_2/0046 (3118)
Wrong output for fuzzied solution in instance spider/college_2/0077 (3119)
	EXPECTED OUTPUT ====

		SELECT course_id
		FROM SECTION
		WHERE semester = 'Fall'
		  AND YEAR = 2009
		UNION
		SELECT course_id
		FROM SECTION
		WHERE semester = 'Spring'
		  AND YEAR = 2010

	   course_id
	0   134KShl3
	1   226wsK7f
	2   227HEAmJ
	3        378
	4   680M17Uc
	5   680RQcbB
	6   681x)lxB
	7  pI5973zhU
	ACTUAL OUTPUT ====

		
		SELECT `course_id`
		FROM
		  (SELECT *
		   FROM `section`
		   WHERE (`semester` = 'Spring'
		          OR `year` = 2009.0))
		WHERE (`semester` = 'Fall'
		       OR YEAR = 2010.0)
		ORDER BY course_id

	   course_id
	0   134KShl3
	1   226wsK7f
	2   227HEAmJ
	3        378
	4   680M17Uc
	5   680RQcbB
	6   681x)lxB
	7  pI5973zhU
	8  pI5973zhU
Wrong output for base solution in instance spider/college_2/0082 (3120)
	EXPECTED OUTPUT ====

	      dept_name   avg__salary_
	0    Accounting   48716.592500
	1     Languages   57421.856667
	2    Psychology   61143.050000
	3       Biology   61287.250000
	4    Statistics   67795.441667
	5       English   72089.050000
	6    Elec. Eng.   74162.740000
	7     Athletics   77098.198000
	8     Astronomy   79070.080000
	9    Mech. Eng.   79813.020000
	10    Marketing   84097.437500
	11  Cybernetics   96346.567500
	12   Comp. Sci.   98133.470000
	13      Geology   99382.590000
	14    Pol. Sci.  100053.073333
	15      Finance  105311.380000
	16      Physics  114576.900000
	ACTUAL OUTPUT ====

		SELECT dept_name,
		       AVG (salary)
		FROM instructor
		GROUP BY dept_name
		HAVING AVG (salary) > 42000

	      dept_name   avg (salary)
	0    Accounting   48716.592500
	1     Languages   57421.856667
	2    Psychology   61143.050000
	3       Biology   61287.250000
	4    Statistics   67795.441667
	5       English   72089.050000
	6    Elec. Eng.   74162.740000
	7     Athletics   77098.198000
	8     Astronomy   79070.080000
	9    Mech. Eng.   79813.020000
	10    Marketing   84097.437500
	11  Cybernetics   96346.567500
	12   Comp. Sci.   98133.470000
	13      Geology   99382.590000
	14    Pol. Sci.  100053.073333
	15      Finance  105311.380000
	16      Physics  114576.900000
Wrong output for ground truth in instance spider/college_2/0082 (3120)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
Wrong output for fuzzied solution in instance spider/college_2/0081 (3124)
	EXPECTED OUTPUT ====

		SELECT COUNT (DISTINCT ID)
		FROM teaches
		WHERE semester = 'Spring'
		  AND YEAR = 2010

	   count (distinct id)
	0                    0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count__distinct_id_`
		FROM
		  (SELECT `year`,
		          COUNT(DISTINCT `id`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM `teaches`
		      WHERE (`semester` = 'Spring'
		             AND YEAR = 2010.0))
		   GROUP BY YEAR)
		ORDER BY count__distinct_id_

	Empty DataFrame
	Columns: [count__distinct_id_]
	Index: []
Wrong output for fuzzied solution in instance spider/college_2/0009 (3126)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT dept_name)
		FROM course

	   count(distinct dept_name)
	0                         14
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n_distinct AS count_distinct_dept_name_
		FROM
		  (SELECT credits,
		          COUNT(DISTINCT dept_name) AS n_distinct
		   FROM course
		   GROUP BY credits)
		ORDER BY count_distinct_dept_name_

	   count_distinct_dept_name_
	0                          2
	1                          3
	2                          5
	3                          6
	4                          9
Wrong output for fuzzied solution in instance spider/college_2/0025 (3127)
	EXPECTED OUTPUT ====

		SELECT dept_name
		FROM course
		GROUP BY dept_name
		ORDER BY count(*) DESC
		LIMIT 3

	  dept_name
	0   Finance
	1  Marketin
	2       Mat
	ACTUAL OUTPUT ====

		
		SELECT dept_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT dept_name,
		                COUNT() AS n
		         FROM course
		         GROUP BY dept_name)
		      ORDER BY n DESC)
		   LIMIT 3)

	           dept_name
	0  (YoCybernetics8nt
	1            Finance
	2           Marketin
Wrong output for fuzzied solution in instance spider/college_2/0079 (3130)
	EXPECTED OUTPUT ====

		SELECT course_id
		FROM SECTION
		WHERE semester = 'Fall'
		  AND YEAR = 2009
		EXCEPT
		SELECT course_id
		FROM SECTION
		WHERE semester = 'Spring'
		  AND YEAR = 2010

	   course_id
	0        455
	1        456
	2         55
	3   807ob9Gn
	4   807pRTnF
	5  Ob3691Wi4
	ACTUAL OUTPUT ====

		
		SELECT `course_id`
		FROM
		  (SELECT *
		   FROM `section`
		   WHERE (`semester` != 'Spring'
		          AND `year` = 2009.0))
		WHERE (`semester` != 'Fall'
		       OR YEAR != 2010.0)
		ORDER BY course_id

	   course_id
	0        455
	1        455
	2        456
	3         55
	4   807ob9Gn
	5   807pRTnF
	6  Ob3691Wi4
Error while executing solution for instance spider/college_2/0010 (3132)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `course_id`) OVER () AS `count_distinct_course_id_`
FROM `course`
WHERE (`dept_name` = 'Physics')
ORDER BY count_distinct_course_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/college_2/0044 (3133)
	EXPECTED OUTPUT ====

		SELECT dept_name
		FROM student
		GROUP BY dept_name
		ORDER BY count(*) DESC
		LIMIT 1

	         dept_name
	0  Civil Eng.E FrK
	ACTUAL OUTPUT ====

		
		SELECT dept_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT dept_name,
		                tot_cred,
		                COUNT() AS n
		         FROM student
		         GROUP BY dept_name,
		                  tot_cred)
		      ORDER BY n DESC)
		   LIMIT 1)

	   dept_name
	0  Athletics
No solution for instance spider/college_2/0040 (3135)
No solution for instance spider/college_2/0055 (3140)
No solution for instance spider/college_2/0058 (3141)
Wrong output for fuzzied solution in instance spider/document_management/0017 (3143)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM users
		WHERE user_login = 1

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM users
		WHERE (user_login = 1)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/document_management/0022 (3145)
	EXPECTED OUTPUT ====

		SELECT document_type_code
		FROM documents
		GROUP BY document_type_code
		HAVING count(*) > 2

	  document_type_code
	0      Advertisement
	ACTUAL OUTPUT ====

		
		SELECT document_type_code
		FROM
		  (SELECT document_structure_code,
		          document_type_code,
		          COUNT() AS n
		   FROM documents
		   GROUP BY document_structure_code,
		            document_type_code)
		WHERE (n = 2)
		ORDER BY document_type_code

	Empty DataFrame
	Columns: [document_type_code]
	Index: []
Wrong output for base solution in instance spider/document_management/0013 (3146)
	EXPECTED OUTPUT ====

	   avg_t1_access_count_
	0           3671.833333
	ACTUAL OUTPUT ====

		SELECT avg(t1.access_count)
		FROM documents AS t1
		JOIN document_functional_areas AS t2 ON t1.document_code = t2.document_code
		JOIN functional_areas AS t3 ON t2.functional_area_code = t3.functional_area_code
		WHERE t3.functional_area_description = "Acknowledgement"

	   avg(t1.access_count)
	0           3671.833333
Wrong output for ground truth in instance spider/document_management/0013 (3146)
No solution for instance spider/document_management/0006 (3147)
No solution for instance spider/document_management/0004 (3148)
Wrong output for fuzzied solution in instance spider/document_management/0012 (3149)
	EXPECTED OUTPUT ====

		SELECT user_name,
		       password
		FROM users
		GROUP BY role_code
		ORDER BY count(*) DESC
		LIMIT 1

	              user_name                                       password
	0  tremblay.raheem7)VmO  QIijV3f6affa583bfdf7fac6faeb2ca418431909d4b39
	ACTUAL OUTPUT ====

		
		SELECT user_name,
		       password
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT user_id,
		                role_code,
		                user_name,
		                user_login,
		                password,
		                COUNT(*) OVER () AS n
		         FROM users)
		      ORDER BY user_login DESC)
		   LIMIT 1)

	      user_name                                  password
	0  larson.vesta  20241478f890508ac47870cfba472e1db04a71ca
No solution for instance spider/document_management/0015 (3150)
No solution for instance spider/document_management/0016 (3152)
Error while executing solution for instance spider/document_management/0018 (3153)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT role_description
FROM
  (SELECT LHS.user_id AS user_id,
          LHS.role_code AS role_code,
          LHS.user_name AS user_name,
          LHS.user_login AS user_login,
          LHS.password AS password,
          RHS.role_description AS role_description
   FROM users AS LHS
   INNER JOIN
     (SELECT role_code,
             role_description,
             COUNT(DISTINCT role_code) OVER () AS n_distinct
      FROM roles) AS RHS ON (LHS.user_id = RHS.n_distinct
                                AND LHS.role_code = RHS.role_code))
ORDER BY role_description]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
Error while executing solution for instance spider/document_management/0019 (3155)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT meanaccess_count AS avg_access_count_
FROM
  (SELECT *
   FROM
     (SELECT *
      FROM
        (SELECT document_structure_code,
                AVG(access_count) AS meanaccess_count
         FROM
           (SELECT document_code,
                   document_structure_code,
                   document_type_code,
                   access_count,
                   document_name,
                   COUNT(DISTINCT access_count) OVER () AS n_distinct
            FROM documents)
         GROUP BY document_structure_code)
      ORDER BY document_structure_code)
   LIMIT 1)]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/document_management/0014 (3159)
	EXPECTED OUTPUT ====

		SELECT document_name
		FROM documents
		EXCEPT
		SELECT t1.document_name
		FROM documents AS t1
		JOIN document_sections AS t2 ON t1.document_code = t2.document_code
		JOIN document_sections_images AS t3 ON t2.section_id = t3.section_id

	             document_name
	0                    Joe C
	1  NLKLearning Databasel7u
	2              Winter Sail
	3        Winter SailsBXtKw
	4  ka1Learning Database2Zf
	ACTUAL OUTPUT ====

		
		SELECT document_name
		FROM
		  (SELECT *
		   FROM documents AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT LHS.section_id AS section_id,
		                  LHS.document_code AS document_code,
		                  LHS.section_sequence AS section_sequence,
		                  LHS.section_code AS section_code,
		                  LHS.section_title AS section_title,
		                  RHS.image_id AS image_id
		           FROM document_sections AS LHS
		           INNER JOIN document_sections_images AS RHS ON (LHS.section_id = RHS.section_id)) AS RHS
		        WHERE (LHS.document_code = RHS.document_code) ))
		ORDER BY document_name

	             document_name
	0                    Joe C
	1        Learning Database
	2        Learning Database
	3  NLKLearning Databasel7u
	4              Winter Sail
	5             Winter Sails
	6        Winter SailsBXtKw
	7  ka1Learning Database2Zf
Wrong output for fuzzied solution in instance spider/document_management/0009 (3160)
	EXPECTED OUTPUT ====

		SELECT document_type_code
		FROM documents
		GROUP BY document_type_code
		HAVING sum(access_count) > 10000

	  document_type_code
	0      Advertisement
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT document_type_code
		FROM
		  (SELECT access_count,
		          document_type_code,
		          SUM(access_count) AS sumaccess_count
		   FROM documents
		   GROUP BY access_count,
		            document_type_code)
		WHERE (access_count != 10000
		       AND sumaccess_count <= 10000)
		ORDER BY document_type_code

	    document_type_code
	0            9KCz(Book
	1         Advertisemen
	2        Advertisement
	3   AdvertisementInAHi
	4                 Book
	5            BookW9jZ1
	6   Crox Advertisement
	7  GFRAdvertisementUVZ
	8                  ook
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0037 (3164)
	EXPECTED OUTPUT ====

		SELECT T2.email_address
		FROM Addresses AS T1
		JOIN Teachers AS T2 ON T1.address_id = T2.address_id
		WHERE T1.zip_postcode = "918"

	                 email_address
	0  D0Dmaribel21@example.orglJZ
	1     RiLlila58@example.comXXJ
	2            lila58@example.co
	ACTUAL OUTPUT ====

		
		SELECT email_address
		FROM
		  (SELECT LHS.address_id AS address_id,
		          LHS.line_1 AS line_1,
		          LHS.line_2 AS line_2,
		          LHS.line_3 AS line_3,
		          LHS.city AS city,
		          LHS.zip_postcode AS zip_postcode,
		          LHS.state_province_county AS state_province_county,
		          LHS.country AS country,
		          LHS.other_address_details AS other_address_details,
		          RHS.teacher_id AS teacher_id,
		          RHS.first_name AS first_name,
		          RHS.middle_name AS middle_name,
		          RHS.last_name AS last_name,
		          RHS.gender AS gender,
		          RHS.cell_mobile_number AS cell_mobile_number,
		          RHS.email_address AS email_address,
		          RHS.other_details AS other_details
		   FROM addresses AS LHS
		   LEFT JOIN teachers AS RHS ON (LHS.address_id = RHS.address_id))
		WHERE (zip_postcode = 918)
		ORDER BY email_address

	                 email_address
	0  D0Dmaribel21@example.orglJZ
	1     RiLlila58@example.comXXJ
	2            lila58@example.co
	3                         None
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0039 (3169)
	EXPECTED OUTPUT ====

		SELECT last_name
		FROM Teachers
		EXCEPT
		SELECT T1.last_name
		FROM Teachers AS T1
		JOIN Detention AS T2 ON T1.teacher_id = T2.teacher_id

	      last_name
	0          )kKj
	1        Goldne
	2   PzyFrBrakus
	3  Schultz3UPvu
	4  Schultzn3vZL
	5     krgr8Lang
	6     oV15oLang
	7        oldner
	8       ssFvx7K
	9      zeops8xm
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT last_name
		FROM
		  (SELECT *
		   FROM teachers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM detention AS RHS
		        WHERE (LHS.teacher_id = RHS.teacher_id) ))
		ORDER BY last_name

	       last_name
	0           )kKj
	1           Gkwd
	2         Goldne
	3           Lang
	4    PzyFrBrakus
	5        Schultz
	6   Schultz3UPvu
	7   Schultzn3vZL
	8      krgr8Lang
	9      oV15oLang
	10        oldner
	11       ssFvx7K
	12      zeops8xm
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0038 (3170)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM STUDENTS
		WHERE student_id NOT IN
		    (SELECT student_id
		     FROM Behavior_Incident)

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___
		FROM
		  (SELECT LHS.student_id AS student_id,
		          LHS.n AS n,
		          RHS.student_id AS student_id_other,
		          RHS.address_id AS address_id,
		          RHS.first_name AS first_name,
		          RHS.middle_name AS middle_name,
		          RHS.last_name AS last_name,
		          RHS.cell_mobile_number AS cell_mobile_number,
		          RHS.email_address AS email_address,
		          RHS.date_first_rental AS date_first_rental,
		          RHS.date_left_university AS date_left_university,
		          RHS.other_student_details AS other_student_details
		   FROM
		     (SELECT student_id,
		             COUNT() AS n
		      FROM behavior_incident
		      GROUP BY student_id) AS LHS
		   CROSS JOIN students AS RHS)
		WHERE (student_id <= student_id_other
		       AND n > student_id_other)
		ORDER BY count___

	   count___
	0         2
	1         4
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0003 (3171)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM ADDRESSES
		WHERE zip_postcode = "197"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT address_id AS count___
		FROM addresses
		WHERE (zip_postcode = 197)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/behavior_monitoring/0022 (3173)
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0004 (3177)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT incident_type_code)
		FROM Behavior_Incident

	   count(distinct incident_type_code)
	0                                   6
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count_distinct_incident_type_code_
		FROM
		  (SELECT other_details,
		          COUNT(DISTINCT incident_type_code) AS n_distinct
		   FROM behavior_incident
		   GROUP BY other_details)
		ORDER BY count_distinct_incident_type_code_

	    count_distinct_incident_type_code_
	0                                    1
	1                                    1
	2                                    1
	3                                    1
	4                                    1
	5                                    1
	6                                    1
	7                                    1
	8                                    1
	9                                    1
	10                                   1
	11                                   1
	12                                   1
	13                                   1
	14                                   1
	15                                   1
	16                                   1
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0026 (3179)
	EXPECTED OUTPUT ====

		SELECT T1.detention_type_code,
		       T2.detention_type_description
		FROM Detention AS T1
		JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code = T2.detention_type_code
		GROUP BY T1.detention_type_code
		ORDER BY count(*) ASC
		LIMIT 1

	  detention_type_code detention_type_description
	0        A3KBREAK F9)          During Break time
	ACTUAL OUTPUT ====

		
		SELECT detention_type_code,
		       detention_type_description
		FROM
		  (SELECT *
		   FROM ref_detention_type AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT detention_id,
		                  detention_type_code,
		                  teacher_id,
		                  datetime_detention_start,
		                  datetime_detention_end,
		                  detention_summary,
		                  other_details,
		                  detention_id_other,
		                  detention_type_code_other,
		                  datetime_detention_start_other,
		                  datetime_detention_end_other,
		                  detention_summary_other,
		                  other_details_other,
		                  teacher_id AS n
		           FROM
		             (SELECT detention_id,
		                     detention_type_code,
		                     detention_id AS teacher_id,
		                     datetime_detention_start,
		                     datetime_detention_end,
		                     detention_summary,
		                     other_details,
		                     detention_id_other,
		                     detention_type_code_other,
		                     datetime_detention_start_other,
		                     datetime_detention_end_other,
		                     detention_summary_other,
		                     other_details_other
		              FROM
		                (SELECT LHS.detention_id AS detention_id,
		                        LHS.detention_type_code AS detention_type_code,
		                        LHS.teacher_id AS teacher_id,
		                        LHS.datetime_detention_start AS datetime_detention_start,
		                        LHS.datetime_detention_end AS datetime_detention_end,
		                        LHS.detention_summary AS detention_summary,
		                        LHS.other_details AS other_details,
		                        RHS.detention_id AS detention_id_other,
		                        RHS.detention_type_code AS detention_type_code_other,
		                        RHS.datetime_detention_start AS datetime_detention_start_other,
		                        RHS.datetime_detention_end AS datetime_detention_end_other,
		                        RHS.detention_summary AS detention_summary_other,
		                        RHS.other_details AS other_details_other
		                 FROM detention AS LHS
		                 INNER JOIN
		                   (SELECT detention_id,
		                           detention_type_code,
		                           teacher_id,
		                           datetime_detention_start,
		                           datetime_detention_end,
		                           detention_summary,
		                           other_details,
		                           COUNT(*) OVER () AS n
		                    FROM detention) AS RHS ON (LHS.detention_id = RHS.teacher_id
		                                                  AND LHS.teacher_id = RHS.n)))) AS RHS
		        WHERE (LHS.detention_type_code = RHS.detention_type_code) ))
		ORDER BY detention_type_code

	  detention_type_code detention_type_description
	0        A3KBREAK F9)          During Break time
	1              BREAK           During Break time
	2         BREAK f1xzD           During Break tim
	3          LUNCHhU5QT          During Break time
	4                UNCH          During Break time
	5         c9cLUNCHn2R          During Break time
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0032 (3183)
	EXPECTED OUTPUT ====

		SELECT T2.cell_mobile_number
		FROM Student_Addresses AS T1
		JOIN Students AS T2 ON T1.student_id = T2.student_id
		ORDER BY T1.monthly_rental ASC
		LIMIT 1

	  cell_mobile_number
	0    2kBdO8605192840
	ACTUAL OUTPUT ====

		
		SELECT cell_mobile_number
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM students AS LHS
		         WHERE NOT EXISTS
		             (SELECT 1
		              FROM student_addresses AS RHS
		              WHERE (LHS.address_id = RHS.address_id
		                     AND LHS.student_id = RHS.student_id) ))
		      ORDER BY first_name)
		   LIMIT 1)

	   cell_mobile_number
	0  (874)070-9495AU8sw
No solution for instance spider/behavior_monitoring/0020 (3186)
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0019 (3187)
	EXPECTED OUTPUT ====

		SELECT T1.student_id,
		       T2.first_name
		FROM Assessment_Notes AS T1
		JOIN Students AS T2 ON T1.student_id = T2.student_id
		GROUP BY T1.student_id
		ORDER BY count(*) DESC
		LIMIT 1

	   student_id first_name
	0           5     Lucile
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT student_id,
		                first_name
		FROM
		  (SELECT LHS.student_id AS student_id,
		          LHS.address_id AS address_id,
		          LHS.first_name AS first_name,
		          LHS.middle_name AS middle_name,
		          LHS.last_name AS last_name,
		          LHS.cell_mobile_number AS cell_mobile_number,
		          LHS.email_address AS email_address,
		          LHS.date_first_rental AS date_first_rental,
		          LHS.date_left_university AS date_left_university,
		          LHS.other_student_details AS other_student_details,
		          RHS.notes_id AS notes_id
		   FROM students AS LHS
		   INNER JOIN
		     (SELECT notes_id,
		             COUNT() AS n
		      FROM assessment_notes
		      GROUP BY notes_id) AS RHS ON (LHS.address_id = RHS.n))
		ORDER BY student_id

	   student_id   first_name
	0           8      Christy
	1           0        Julia
	2           5       Lucile
	3           4  LuciledWLsK
No solution for instance spider/behavior_monitoring/0024 (3190)
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0021 (3191)
	EXPECTED OUTPUT ====

		SELECT T1.student_id,
		       T2.last_name
		FROM Behavior_Incident AS T1
		JOIN Students AS T2 ON T1.student_id = T2.student_id
		GROUP BY T1.student_id
		ORDER BY count(*) DESC
		LIMIT 1

	   student_id last_name
	0           0   Weimann
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT student_id,
		                last_name
		FROM
		  (SELECT LHS.student_id AS student_id,
		          LHS.address_id AS address_id,
		          LHS.first_name AS first_name,
		          LHS.middle_name AS middle_name,
		          LHS.last_name AS last_name,
		          LHS.cell_mobile_number AS cell_mobile_number,
		          LHS.email_address AS email_address,
		          LHS.date_first_rental AS date_first_rental,
		          LHS.date_left_university AS date_left_university,
		          LHS.other_student_details AS other_student_details,
		          RHS.incident_id AS incident_id,
		          RHS.incident_summary AS incident_summary
		   FROM students AS LHS
		   INNER JOIN
		     (SELECT incident_id,
		             incident_summary,
		             COUNT() AS n
		      FROM behavior_incident
		      GROUP BY incident_id,
		               incident_summary) AS RHS ON (LHS.student_id = RHS.n))
		ORDER BY student_id

	   student_id last_name
	0           1   Krajcik
No solution for instance spider/behavior_monitoring/0023 (3192)
No solution for instance spider/behavior_monitoring/0014 (3194)
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0009 (3195)
	EXPECTED OUTPUT ====

		SELECT email_address
		FROM Students
		WHERE first_name = "Emma"
		  AND last_name = "Rohan"

	Empty DataFrame
	Columns: [email_address]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `email_address`
		FROM `students`
		WHERE (`first_name` = 'Emma'
		       OR `last_name` = 'Rohan')
		ORDER BY email_address

	                email_address
	0  derrick.jenkins@example.co
	1  dicki.kathryne@example.org
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0025 (3196)
	EXPECTED OUTPUT ====

		SELECT T1.incident_type_code,
		       T2.incident_type_description
		FROM Behavior_Incident AS T1
		JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code = T2.incident_type_code
		GROUP BY T1.incident_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  incident_type_code incident_type_description
	0       JlA4LDISTURB                     Noise
	ACTUAL OUTPUT ====

		
		SELECT incident_type_code,
		       incident_type_description
		FROM
		  (SELECT LHS.incident_type_code AS incident_type_code,
		          LHS.incident_type_description AS incident_type_description,
		          LHS.n AS n,
		          RHS.student_id AS student_id,
		          RHS.date_incident_start AS date_incident_start,
		          RHS.date_incident_end AS date_incident_end,
		          RHS.incident_summary AS incident_summary,
		          RHS.recommendations AS recommendations,
		          RHS.other_details AS other_details
		   FROM
		     (SELECT incident_type_code,
		             incident_type_description,
		             COUNT(*) OVER () AS n
		      FROM ref_incident_type) AS LHS
		   INNER JOIN behavior_incident AS RHS ON (LHS.n = RHS.incident_id
		                                              AND LHS.incident_type_code = RHS.incident_type_code))
		ORDER BY incident_type_code

	Empty DataFrame
	Columns: [incident_type_code, incident_type_description]
	Index: []
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0029 (3198)
	EXPECTED OUTPUT ====

		SELECT T1.date_incident_start,
		       date_incident_end
		FROM Behavior_Incident AS T1
		JOIN Students AS T2 ON T1.student_id = T2.student_id
		WHERE T2.last_name = "Fahey"

	Empty DataFrame
	Columns: [date_incident_start, date_incident_end]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `date_incident_start`,
		       `date_incident_end`
		FROM
		  (SELECT `LHS`.`student_id` AS `student_id`,
		          `LHS`.`address_id` AS `address_id`,
		          `LHS`.`first_name` AS `first_name`,
		          `LHS`.`middle_name` AS `middle_name`,
		          `LHS`.`last_name` AS `last_name`,
		          `LHS`.`cell_mobile_number` AS `cell_mobile_number`,
		          `LHS`.`email_address` AS `email_address`,
		          `LHS`.`date_first_rental` AS `date_first_rental`,
		          `LHS`.`date_left_university` AS `date_left_university`,
		          `LHS`.`other_student_details` AS `other_student_details`,
		          `RHS`.`incident_id` AS `incident_id`,
		          `RHS`.`incident_type_code` AS `incident_type_code`,
		          `RHS`.`date_incident_start` AS `date_incident_start`,
		          `RHS`.`date_incident_end` AS `date_incident_end`,
		          `RHS`.`incident_summary` AS `incident_summary`,
		          `RHS`.`recommendations` AS `recommendations`,
		          `RHS`.`other_details` AS `other_details`
		   FROM `students` AS `LHS`
		   LEFT JOIN `behavior_incident` AS `RHS` ON (`LHS`.`student_id` = `RHS`.`student_id`))
		WHERE (`last_name` = 'Fahey')
		ORDER BY date_incident_start

	  date_incident_start date_incident_end
	0                None              None
	1                None              None
Error while executing solution for instance spider/behavior_monitoring/0010 (3199)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT student_id) OVER () AS count_distinct_student_id_
FROM students_in_detention
ORDER BY count_distinct_student_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0040 (3200)
	EXPECTED OUTPUT ====

		SELECT T1.line_1
		FROM Addresses AS T1
		JOIN Students AS T2 ON T1.address_id = T2.address_id INTERSECT
		SELECT T1.line_1
		FROM Addresses AS T1
		JOIN Teachers AS T2 ON T1.address_id = T2.address_id

	                            line_1
	0                   020 Orie Canyo
	1                   20 Orie Canyon
	2                 266 Kub Crossing
	3  719 Pfannerstill Ridge Suite 66
	4               920 Brayan Harbors
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT line_1
		FROM
		  (SELECT LHS.address_id AS address_id,
		          LHS.line_1 AS line_1,
		          LHS.line_2 AS line_2,
		          LHS.line_3 AS line_3,
		          LHS.city AS city,
		          LHS.zip_postcode AS zip_postcode,
		          LHS.state_province_county AS state_province_county,
		          LHS.country AS country,
		          LHS.other_address_details AS other_address_details,
		          LHS.teacher_id AS teacher_id,
		          LHS.first_name AS first_name,
		          LHS.middle_name AS middle_name,
		          LHS.last_name AS last_name,
		          LHS.gender AS gender,
		          LHS.cell_mobile_number AS cell_mobile_number,
		          LHS.email_address AS email_address,
		          LHS.other_details AS other_details
		   FROM
		     (SELECT LHS.address_id AS address_id,
		             LHS.line_1 AS line_1,
		             LHS.line_2 AS line_2,
		             LHS.line_3 AS line_3,
		             LHS.city AS city,
		             LHS.zip_postcode AS zip_postcode,
		             LHS.state_province_county AS state_province_county,
		             LHS.country AS country,
		             LHS.other_address_details AS other_address_details,
		             RHS.teacher_id AS teacher_id,
		             RHS.first_name AS first_name,
		             RHS.middle_name AS middle_name,
		             RHS.last_name AS last_name,
		             RHS.gender AS gender,
		             RHS.cell_mobile_number AS cell_mobile_number,
		             RHS.email_address AS email_address,
		             RHS.other_details AS other_details
		      FROM addresses AS LHS
		      INNER JOIN teachers AS RHS ON (LHS.address_id = RHS.address_id)) AS LHS
		   INNER JOIN
		     (SELECT address_id
		      FROM students INTERSECT SELECT address_id
		      FROM students) AS RHS ON (LHS.address_id = RHS.address_id))
		ORDER BY line_1

	                            line_1
	0                   020 Orie Canyo
	1                   20 Orie Canyon
	2  719 Pfannerstill Ridge Suite 66
	3               920 Brayan Harbors
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0031 (3202)
	EXPECTED OUTPUT ====

		SELECT T2.address_id,
		       T1.zip_postcode
		FROM Addresses AS T1
		JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id
		ORDER BY monthly_rental DESC
		LIMIT 1

	   address_id zip_postcode
	0  5692432864    1UU620GPc
	ACTUAL OUTPUT ====

		
		SELECT address_id,
		       zip_postcode
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.student_id AS student_id,
		                LHS.address_id AS address_id,
		                LHS.date_address_from AS date_address_from,
		                LHS.date_address_to AS date_address_to,
		                LHS.monthly_rental AS monthly_rental,
		                LHS.other_details AS other_details,
		                RHS.line_1 AS line_1,
		                RHS.line_2 AS line_2,
		                RHS.line_3 AS line_3,
		                RHS.city AS city,
		                RHS.zip_postcode AS zip_postcode,
		                RHS.state_province_county AS state_province_county,
		                RHS.country AS country,
		                RHS.other_address_details AS other_address_details
		         FROM student_addresses AS LHS
		         LEFT JOIN addresses AS RHS ON (LHS.address_id = RHS.address_id))
		      ORDER BY line_1)
		   LIMIT 1)

	   address_id zip_postcode
	0  3341898928     4 E8m612
No solution for instance spider/station_weather/0013 (3206)
Wrong output for fuzzied solution in instance spider/station_weather/0006 (3207)
	EXPECTED OUTPUT ====

		SELECT origin,
		       count(*)
		FROM train
		GROUP BY origin

	           origin  count(*)
	0  9rnPfGuruvayur         1
	1       Guruvayur         1
	2    MaduraiWS9Ei         1
	3  ZKcuzNagercoil         1
	4         Madurai         3
	ACTUAL OUTPUT ====

		
		SELECT origin,
		       n AS count___
		FROM
		  (SELECT interval, origin,
		                    COUNT() AS n
		   FROM train
		   GROUP BY interval, origin)
		ORDER BY origin

	           origin  count___
	0  9rnPfGuruvayur         1
	1       Guruvayur         1
	2         Madurai         1
	3         Madurai         1
	4         Madurai         1
	5    MaduraiWS9Ei         1
	6  ZKcuzNagercoil         1
No solution for instance spider/station_weather/0004 (3208)
Error while executing solution for instance spider/station_weather/0012 (3209)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT services) OVER () AS count_distinct_services_
FROM station
ORDER BY count_distinct_services_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/station_weather/0015 (3210)
Wrong output for fuzzied solution in instance spider/station_weather/0005 (3211)
	EXPECTED OUTPUT ====

		SELECT train_number,
		       TIME
		FROM train
		WHERE origin = 'Chennai'
		  AND destination = 'Guruvayur'

	Empty DataFrame
	Columns: [train_number, time]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `train_number`,
		       `time`
		FROM `train`
		WHERE (`destination` != 'Chennai'
		       AND `destination` = 'Guruvayur')
		ORDER BY train_number

	   train_number   time
	0         16527  04:55
Wrong output for fuzzied solution in instance spider/station_weather/0007 (3213)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM train AS t1
		JOIN route AS t2 ON t1.id = t2.train_id
		GROUP BY t2.train_id
		ORDER BY count(*) DESC
		LIMIT 1

	                          name
	0  Vv6kpMadurai Fast Passenger
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.id AS id,
		          LHS.train_number AS train_number,
		          LHS.name AS name,
		          LHS.origin AS origin,
		          LHS.destination AS destination,
		          LHS.time AS TIME,
		          LHS.interval AS interval,
		          RHS.station_id AS station_id,
		          RHS.train_id AS train_id
		   FROM train AS LHS
		   INNER JOIN
		     (SELECT station_id,
		             train_id,
		             COUNT() AS n
		      FROM route
		      GROUP BY station_id,
		               train_id) AS RHS ON (LHS.id = RHS.n))
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance spider/station_weather/0014 (3215)
	EXPECTED OUTPUT ====

		SELECT t2.id,
		       t2.local_authority
		FROM weekly_weather AS t1
		JOIN station AS t2 ON t1.station_id = t2.id
		GROUP BY t1.station_id
		HAVING max(t1.precipitation) > 50

	            id local_authority
	0  -8433395877         Chilter
	1            4        Chiltern
	2            5        Chiltern
	3            8        Brentwoo
	4           12   ChilterncZLpx
	5    598253439       Brentwood
	6   1897582361  gqbK Brentwood
	7   3541451352        Chiltern
	8   5385235612      DFLLRttGOc
	9   7616470124       DFLLRttGO
	10  7685997812         Chilter
	11  9353762148         Chilter
	12  9542225839        Chiltern
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT id,
		                local_authority
		FROM
		  (SELECT LHS.id AS id,
		          LHS.network_name AS network_name,
		          LHS.services AS services,
		          LHS.local_authority AS local_authority,
		          RHS.day_of_week AS day_of_week,
		          RHS.high_temperature AS high_temperature,
		          RHS.low_temperature AS low_temperature,
		          RHS.precipitation AS precipitation,
		          RHS.wind_speed_mph AS wind_speed_mph,
		          RHS.maxprecipitation AS maxprecipitation
		   FROM station AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT station_id,
		                day_of_week,
		                high_temperature,
		                low_temperature,
		                precipitation,
		                wind_speed_mph,
		                MAX(precipitation) OVER () AS maxprecipitation
		         FROM weekly_weather)
		      WHERE (precipitation >= 50.0
		             OR maxprecipitation != precipitation)) AS RHS ON (LHS.id = RHS.station_id))
		ORDER BY id

	            id local_authority
	0  -8433395877         Chilter
	1  -5635880289  BrentwoodmyS86
	2            3   BUlRxChiltern
	3            4        Chiltern
	4            5        Chiltern
	5            6        Chiltern
	6            8        Brentwoo
	7            9  SacChiltern5LW
	8           12   ChilterncZLpx
	9    296127404  YxbugBrentwood
	10   598253439       Brentwood
	11  1889193974      DFLLRttGOc
	12  1897582361  gqbK Brentwood
	13  2120614716        Chiltern
	14  2126994466       DFLLRttGO
	15  3226693444        Chiltern
	16  3541451352        Chiltern
	17  4070654551  L2FChilternLyX
	18  5246619139         Chilter
	19  5385235612      DFLLRttGOc
	20  6281989706  sHhChiltern7vi
	21  6811538307         hiltern
	22  7616470124       DFLLRttGO
	23  7685997812         Chilter
	24  9353762148         Chilter
	25  9542225839        Chiltern
No solution for instance spider/station_weather/0011 (3217)
No solution for instance spider/station_weather/0010 (3218)
Wrong output for fuzzied solution in instance spider/local_govt_and_lot/0002 (3219)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.service_type_code
		FROM services AS T1
		JOIN organizations AS T2 ON T1.organization_id = T2.organization_id
		WHERE T2.organization_details = 'Denesik and Sons Party'

	Empty DataFrame
	Columns: [service_type_code]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `service_type_code`
		FROM
		  (SELECT `LHS`.`service_id` AS `service_id`,
		          `LHS`.`organization_id` AS `organization_id`,
		          `LHS`.`service_type_code` AS `service_type_code`,
		          `LHS`.`service_details` AS `service_details`,
		          `RHS`.`organization_id` AS `organization_id_other`,
		          `RHS`.`organization_details` AS `organization_details`
		   FROM `services` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `organizations`
		      WHERE (`organization_details` != 'Denesik and Sons Party')) AS RHS ON (LHS.organization_id = RHS.parent_organization_id))
		ORDER BY service_type_code

	  service_type_code
	0             Check
	1        Guwv1Check
	2        Moving Out
	3   Moving OutVVdvx
	4          Pay bill
	5         Pay bills
	6   agMPay billsqXj
	7          ay bills
Wrong output for fuzzied solution in instance spider/local_govt_and_lot/0008 (3221)
	EXPECTED OUTPUT ====

		SELECT T1.Customer_Event_ID ,
		       T1.property_id
		FROM Customer_Events AS T1
		JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID = T2.Customer_Event_ID
		GROUP BY T1.customer_event_id
		HAVING count(*) BETWEEN 1 AND 3

	    customer_event_id  property_id
	0         -3314616006          372
	1                 165   3749609767
	2                 166   6597772531
	3                 167   1557358137
	4                 168          953
	5                 224          953
	6                 225   9310756823
	7                 226          953
	8                 258          375
	9                 589   8515854857
	10                592          955
	11                593          373
	12                816          607
	13                817          849
	14          278052127   8515854857
	15          804429767   8279995968
	16          828620503   3817398775
	17         1913347740  -3285266984
	18         2217650690   7744286523
	19         2480993311          850
	20         3024227126  -4957498147
	21         3537135104          847
	22         3577034401  -4957498147
	23         4126017020   7426703287
	24         4146869208          847
	25         4269545518          604
	26         4588417691   9699933509
	27         4833064282   9310756823
	28         4990485900          953
	29         5077864563  -3285266984
	30         5958306489          371
	31         6134821301          953
	32         7158220654   7426703287
	33         7622422381   9555504720
	34         7791696609   7744286523
	35         8755343290          372
	36         8941863309   3749609767
	37         9221802502    682106116
	38         9729590515          847
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT customer_event_id,
		                property_id
		FROM
		  (SELECT LHS.customer_event_id AS customer_event_id,
		          LHS.service_type_code AS service_type_code,
		          LHS.n AS n,
		          RHS.customer_id AS customer_id,
		          RHS.date_moved_in AS date_moved_in,
		          RHS.property_id AS property_id,
		          RHS.resident_id AS resident_id,
		          RHS.thing_id AS thing_id
		   FROM
		     (SELECT customer_event_id,
		             service_type_code,
		             COUNT() AS n
		      FROM customer_event_notes
		      GROUP BY customer_event_id,
		               service_type_code) AS LHS
		   LEFT JOIN customer_events AS RHS ON (LHS.customer_event_id = RHS.customer_event_id))
		WHERE (n != 1
		       OR n < 3)
		ORDER BY customer_event_id

	    customer_event_id  property_id
	0         -3314616006          372
	1                 165   3749609767
	2                 166   6597772531
	3                 167   1557358137
	4                 168          953
	5                 224          953
	6                 225   9310756823
	7                 226          953
	8                 258          375
	9                 589   8515854857
	10                592          955
	11                593          373
	12                816          607
	13                817          849
	14          278052127   8515854857
	15          804429767   8279995968
	16          828620503   3817398775
	17         1913347740  -3285266984
	18         2217650690   7744286523
	19         2480993311          850
	20         3024227126  -4957498147
	21         3537135104          847
	22         3577034401  -4957498147
	23         4126017020   7426703287
	24         4146869208          847
	25         4269545518          604
	26         4588417691   9699933509
	27         4833064282   9310756823
	28         4990485900          953
	29         5077864563  -3285266984
	30         5958306489          371
	31         6134821301          953
	32         6531010131   9699933509
	33         7158220654   7426703287
	34         7622422381   9555504720
	35         7791696609   7744286523
	36         8755343290          372
	37         8941863309   3749609767
	38         9221802502    682106116
	39         9729590515          847
Wrong output for fuzzied solution in instance spider/local_govt_and_lot/0003 (3222)
	EXPECTED OUTPUT ====

		SELECT T1.resident_id,
		       T1.other_details,
		       count(*)
		FROM Residents AS T1
		JOIN Residents_Services AS T2 ON T1.resident_id = T2.resident_id
		GROUP BY T1.resident_id
		ORDER BY count(*) DESC

	    resident_id             other_details  count(*)
	0            90   (YoTiffany Jaskolski8nt         2
	1            89  bPoTqMiss Alanis Lockman         3
	2            48          iffany Jaskolski         3
	3             8             Anderson Batz         5
	4            88             Anderson Batz         5
	5             4         Tiffany Jaskolski         6
	6            45     Mrs. Raphaelle Fisher        10
	7            87        F sqGAnderson Batz        14
	8            23                Jess Wyman        21
	9            44                 Jess Wyma        22
	10            6     Mrs. Raphaelle Fisher        24
	11           43       Miss Alanis Lockman        27
	12           47             Anderson Batz        44
	13           46                 Jess Wyma       105
	ACTUAL OUTPUT ====

		
		SELECT resident_id,
		       other_details,
		       n AS count___
		FROM
		  (SELECT LHS.resident_id AS resident_id,
		          LHS.property_id AS property_id,
		          LHS.date_moved_in AS date_moved_in,
		          LHS.date_moved_out AS date_moved_out,
		          LHS.other_details AS other_details,
		          RHS.service_id AS service_id,
		          RHS.n AS n
		   FROM residents AS LHS
		   INNER JOIN
		     (SELECT resident_id,
		             service_id,
		             COUNT() AS n
		      FROM residents_services
		      GROUP BY resident_id,
		               service_id) AS RHS ON (LHS.resident_id = RHS.resident_id))
		ORDER BY resident_id

	     resident_id            other_details  count___
	0             90  (YoTiffany Jaskolski8nt         1
	1             90  (YoTiffany Jaskolski8nt         1
	2             46             Anderson Bat         1
	3             46             Anderson Bat         1
	4             46             Anderson Bat         1
	..           ...                      ...       ...
	286           45             nderson Batz         1
	287           45             nderson Batz         1
	288           45             nderson Batz         1
	289           45             nderson Batz         1
	290           45             nderson Batz         1
	
	[291 rows x 3 columns]
Wrong output for fuzzied solution in instance spider/local_govt_and_lot/0006 (3224)
	EXPECTED OUTPUT ====

		SELECT T1.customer_id,
		       T1.customer_details
		FROM Customers AS T1
		JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T1.customer_id
		HAVING count(*) >= 3

	   customer_id             customer_details
	0           74  Bridgette Nitzsche PhD3UNZE
	1            4   FIyDr. Haylie Hilll IIIjv3
	2           16  QCHFdBridgette Nitzsche PhD
	3            6        mxfhcKyleigh Schuster
	4           78          r. Haylie Hilll III
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT customer_id,
		                customer_details
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.customer_details AS customer_details,
		          LHS.customer_event_id AS customer_event_id,
		          LHS.date_moved_in AS date_moved_in,
		          LHS.property_id AS property_id,
		          LHS.resident_id AS resident_id,
		          LHS.thing_id AS thing_id,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.customer_id AS customer_id,
		             LHS.customer_details AS customer_details,
		             LHS.customer_event_id AS customer_event_id,
		             LHS.date_moved_in AS date_moved_in,
		             LHS.property_id AS property_id,
		             LHS.resident_id AS resident_id,
		             LHS.thing_id AS thing_id,
		             RHS.n AS n
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.customer_details AS customer_details,
		                RHS.customer_event_id AS customer_event_id,
		                RHS.date_moved_in AS date_moved_in,
		                RHS.property_id AS property_id,
		                RHS.resident_id AS resident_id,
		                RHS.thing_id AS thing_id
		         FROM customers AS LHS
		         INNER JOIN customer_events AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS
		      INNER JOIN
		        (SELECT customer_id,
		                COUNT() AS n
		         FROM customer_events
		         GROUP BY customer_id) AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT customer_id,
		                COUNT() AS n
		         FROM customer_events
		         GROUP BY customer_id)
		      WHERE (n > 3)) AS RHS ON (LHS.customer_id = RHS.customer_id
		                                AND LHS.n = RHS.n))
		ORDER BY customer_id

	   customer_id             customer_details
	0           74  Bridgette Nitzsche PhD3UNZE
	1           16  QCHFdBridgette Nitzsche PhD
	2           78          r. Haylie Hilll III
No solution for instance spider/local_govt_and_lot/0004 (3225)
Wrong output for fuzzied solution in instance spider/local_govt_and_lot/0012 (3226)
	EXPECTED OUTPUT ====

		SELECT organization_id
		FROM organizations
		EXCEPT
		SELECT parent_organization_id
		FROM organizations

	   organization_id
	0                6
	1                8
	ACTUAL OUTPUT ====

		
		SELECT organization_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM organizations
		      ORDER BY parent_organization_id DESC)
		   LIMIT 1)

	   organization_id
	0                6
No solution for instance spider/local_govt_and_lot/0014 (3232)
Error while executing solution for instance spider/local_govt_and_lot/0009 (3233)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT DISTINCT `thing_id`,
                `type_of_thing_code`
FROM
  (SELECT `LHS`.`thing_id` AS `thing_id`,
          `LHS`.`organization_id` AS `organization_id`,
          `LHS`.`type_of_thing_code` AS `type_of_thing_code`,
          `LHS`.`service_type_code` AS `service_type_code`,
          `LHS`.`service_details` AS `service_details`,
          `RHS`.`date_and_date` AS `date_and_date`,
          `RHS`.`status_of_thing_code` AS `status_of_thing_code`
   FROM `things` AS `LHS`
   INNER JOIN
     (SELECT *
      FROM `timed_status_of_things`
      WHERE (`status_of_thing_code` = 'Close'
             OR `date_and_date` < parse_datetime('2017-06-19 02:59:21'))) AS RHS ON (LHS.thing_id = RHS.thing_id))
ORDER BY thing_id]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/local_govt_and_lot/0010 (3235)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `location_code`) OVER () AS `count_distinct_t2_location_code_`
FROM
  (SELECT *
   FROM `timed_locations_of_things` AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM `things`
           WHERE (`service_details` != 'Unsatisfied')) AS RHS
        WHERE (LHS.thing_id = RHS.thing_id) ))
ORDER BY count_distinct_t2_location_code_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/program_share/0008 (3238)
	EXPECTED OUTPUT ====

		SELECT sum(Share_in_percent)
		FROM channel
		WHERE OWNER = 'CCTV'

	   sum(share_in_percent)
	0                    1.8
	ACTUAL OUTPUT ====

		
		SELECT sumshare_in_percent AS sum_share_in_percent_
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT OWNER,
		                SUM(share_in_percent) AS sumshare_in_percent
		         FROM channel
		         GROUP BY OWNER)
		      ORDER BY sumshare_in_percent DESC)
		   LIMIT 1)

	   sum_share_in_percent_
	0           7.416755e+08
Wrong output for fuzzied solution in instance spider/program_share/0003 (3239)
	EXPECTED OUTPUT ====

		SELECT OWNER
		FROM channel
		ORDER BY rating_in_percent DESC
		LIMIT 1

	  owner
	0  CCTV
	ACTUAL OUTPUT ====

		
		SELECT OWNER
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM channel
		      ORDER BY channel_id)
		   LIMIT 1)

	  owner
	0   CTV
Wrong output for fuzzied solution in instance spider/program_share/0013 (3240)
	EXPECTED OUTPUT ====

		SELECT name
		FROM program
		EXCEPT
		SELECT t1.name
		FROM program AS t1
		JOIN broadcast AS t2 ON t1.program_id = t2.program_id
		WHERE t2.Time_of_day = "Morning"

	           name
	0       Toonmax
	1  ToonmaxMO0MO
	2  ToonmaxXhHOq
	3   Y8nq4Youman
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM `program` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `broadcast`
		           WHERE (`time_of_day` = 'Morning')) AS RHS
		        WHERE (LHS.program_id = RHS.program_id) ))
		ORDER BY name

	           name
	0       Toonmax
	1       Toonmax
	2       Toonmax
	3       Toonmax
	4  ToonmaxMO0MO
	5  ToonmaxXhHOq
	6   Y8nq4Youman
Error while executing solution for instance spider/program_share/0012 (3243)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT `n_distinct` AS `count_distinct_program_id_`
FROM
  (SELECT `channel_id`,
          `program_id`,
          `time_of_day`,
          COUNT(DISTINCT `time_of_day`) OVER () AS `n_distinct`
   FROM `broadcast`)
WHERE (`time_of_day` = 'Night')
ORDER BY count_distinct_program_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/program_share/0018 (3247)
	EXPECTED OUTPUT ====

		SELECT name
		FROM channel
		WHERE OWNER = 'CCTV'
		  OR OWNER = 'HBS'

	                 name
	0  Hunan Satellite TV
	1  Hunan Satellite TV
	2       nPfCCTV-13 jW
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM channel
		      ORDER BY channel_id)
		   LIMIT 8)

	                    name
	0                 CCTV-4
	1     Hunan Satellite TV
	2     Hunan Satellite TV
	3  Shandong Satellite TV
	4          nPfCCTV-13 jW
Wrong output for fuzzied solution in instance spider/program_share/0020 (3248)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM program AS t1
		JOIN broadcast AS t2 ON t1.program_id = t2.program_id
		GROUP BY t2.program_id
		ORDER BY count(*) DESC
		LIMIT 1

	           name
	0  FZjIjToonmax
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.program_id AS program_id,
		                LHS.name AS name,
		                LHS.origin AS origin,
		                LHS.launch AS launch,
		                LHS.owner AS OWNER,
		                RHS.n AS n
		         FROM program AS LHS
		         CROSS JOIN
		           (SELECT COUNT() AS n
		            FROM broadcast) AS RHS)
		      ORDER BY origin DESC)
		   LIMIT 1)

	     name
	0  Youman
Wrong output for base solution in instance spider/program_share/0019 (3249)
	EXPECTED OUTPUT ====

	   sum_rating_in_percent_                owner
	0                    0.20     Anhui Television
	1                    2.43                 CCTV
	2                    0.53                  HBS
	3                    0.19  Shandong Television
	ACTUAL OUTPUT ====

		SELECT sum(Rating_in_percent),
		       OWNER
		FROM channel
		GROUP BY OWNER

	   sum(rating_in_percent)                owner
	0                    0.20     Anhui Television
	1                    2.43                 CCTV
	2                    0.53                  HBS
	3                    0.19  Shandong Television
Wrong output for ground truth in instance spider/program_share/0019 (3249)
No solution for instance spider/program_share/0001 (3251)
Wrong output for fuzzied solution in instance spider/program_share/0014 (3252)
	EXPECTED OUTPUT ====

		SELECT t1.owner
		FROM program AS t1
		JOIN broadcast AS t2 ON t1.program_id = t2.program_id
		WHERE t2.Time_of_day = "Morning" INTERSECT
		  SELECT t1.owner
		  FROM program AS t1
		  JOIN broadcast AS t2 ON t1.program_id = t2.program_id WHERE t2.Time_of_day = "Night"

	Empty DataFrame
	Columns: [owner]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `owner`
		FROM
		  (SELECT `LHS`.`channel_id` AS `channel_id`,
		          `LHS`.`program_id` AS `program_id`,
		          `LHS`.`time_of_day` AS `time_of_day`,
		          `RHS`.`name` AS `name`,
		          `RHS`.`origin` AS `origin`,
		          `RHS`.`launch` AS `launch`,
		          `RHS`.`owner` AS `owner`
		   FROM
		     (SELECT *
		      FROM `broadcast`
		      WHERE (`time_of_day` != 'Morning'
		             AND `time_of_day` = 'Night')) AS LHS
		   INNER JOIN program AS RHS ON (LHS.program_id = RHS.program_id))
		ORDER BY OWNER

	                             owner
	0          Beijing Television (BTV
	1         Beijing Television (BTV)
	2  Hunan Broadcasting System (HBS)
	3   V8RBeijing Television (BTV)X5o
	4          eijing Television (BTV)
	5   ruGBeijing Television (BTV)b1e
Wrong output for fuzzied solution in instance spider/program_share/0010 (3255)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM channel AS t1
		JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id
		WHERE t2.time_of_day = 'Morning' INTERSECT
		  SELECT t1.name
		  FROM channel AS t1
		  JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Night'

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM
		           (SELECT `channel_id`,
		                   `name`,
		                   `owner`,
		                   `share_in_percent`,
		                   `rating_in_percent`,
		                   `channel_id_other`,
		                   `time_of_day`,
		                   `channel_id` AS `program_id`
		            FROM
		              (SELECT `LHS`.`channel_id` AS `channel_id`,
		                      `LHS`.`name` AS `name`,
		                      `LHS`.`owner` AS `owner`,
		                      `LHS`.`share_in_percent` AS `share_in_percent`,
		                      `LHS`.`rating_in_percent` AS `rating_in_percent`,
		                      `RHS`.`channel_id` AS `channel_id_other`,
		                      `RHS`.`time_of_day` AS `time_of_day`
		               FROM `channel` AS `LHS`
		               INNER JOIN `broadcast` AS `RHS` ON (`LHS`.`channel_id` = `RHS`.`program_id`)))
		         WHERE (`time_of_day` = 'Morning'
		                OR `time_of_day` = 'Night'))
		      ORDER BY share_in_percent DESC)
		   LIMIT 1)

	      name
	0  CCTV-13
Wrong output for fuzzied solution in instance spider/allergy_1/0033 (3257)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Has_allergy
		WHERE Allergy = "Cat"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `has_allergy`
		WHERE (`allergy` = 'Cat')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/allergy_1/0037 (3258)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Has_allergy AS T1
		JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy
		WHERE T2.allergytype = "food"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `allergytype`,
		          COUNT() AS `n`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`allergy` AS `allergy`,
		             `RHS`.`allergytype` AS `allergytype`
		      FROM `has_allergy` AS `LHS`
		      LEFT JOIN `allergy_type` AS `RHS` ON (`LHS`.`allergy` = `RHS`.`allergy`))
		   GROUP BY `allergytype`)
		WHERE (`allergytype` = 'food')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/allergy_1/0036 (3260)
Wrong output for fuzzied solution in instance spider/allergy_1/0038 (3264)
	EXPECTED OUTPUT ====

		SELECT Allergy
		FROM Has_allergy
		GROUP BY Allergy
		ORDER BY count(*) DESC
		LIMIT 1

	    allergy
	0  hellfish
	ACTUAL OUTPUT ====

		
		SELECT allergy
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT allergy,
		                COUNT() AS n
		         FROM has_allergy
		         GROUP BY allergy)
		      ORDER BY n DESC)
		   LIMIT 1)

	  allergy
	0      Ca
Wrong output for fuzzied solution in instance spider/allergy_1/0027 (3266)
	EXPECTED OUTPUT ====

		SELECT major
		FROM Student
		GROUP BY major
		ORDER BY count(*) DESC
		LIMIT 1

	   major
	0    550
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT major_other AS major
		FROM
		  (SELECT LHS.stuid AS stuid,
		          LHS.lname AS lname,
		          LHS.fname AS fname,
		          LHS.age AS age,
		          LHS.sex AS sex,
		          LHS.major AS major,
		          LHS.advisor AS advisor,
		          LHS.city_code AS city_code,
		          RHS.major AS major_other
		   FROM student AS LHS
		   INNER JOIN
		     (SELECT major,
		             COUNT() AS n
		      FROM student
		      GROUP BY major) AS RHS ON (LHS.age = RHS.n))
		ORDER BY major

	Empty DataFrame
	Columns: [major]
	Index: []
No solution for instance spider/allergy_1/0048 (3267)
No solution for instance spider/allergy_1/0032 (3278)
Wrong output for fuzzied solution in instance spider/allergy_1/0018 (3280)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Student
		WHERE age = 18

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM student
		WHERE (age = 18)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/allergy_1/0041 (3281)
Wrong output for fuzzied solution in instance spider/allergy_1/0007 (3285)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Allergy_type
		WHERE allergytype = "animal"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `allergy_type`
		WHERE (`allergytype` = 'animal')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
Wrong output for base solution in instance spider/allergy_1/0023 (3289)
	EXPECTED OUTPUT ====

	   min_age_   avg_age_  max_age_
	0        16  19.558824        27
	ACTUAL OUTPUT ====

		SELECT min(age),
		       avg(age),
		       max(age)
		FROM Student

	   min(age)   avg(age)  max(age)
	0        16  19.558824        27
Wrong output for ground truth in instance spider/allergy_1/0023 (3289)
No solution for instance spider/allergy_1/0043 (3291)
Wrong output for fuzzied solution in instance spider/allergy_1/0046 (3292)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Student
		WHERE sex = "M"
		  AND StuID IN
		    (SELECT StuID
		     FROM Has_allergy AS T1
		     JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy
		     WHERE T2.allergytype = "food")

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT `allergytype`,
		          `sex`,
		          COUNT(DISTINCT `stuid`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`allergy` AS `allergy`,
		                `LHS`.`allergytype` AS `allergytype`,
		                `LHS`.`stuid` AS `stuid`,
		                `RHS`.`lname` AS `lname`,
		                `RHS`.`fname` AS `fname`,
		                `RHS`.`age` AS `age`,
		                `RHS`.`sex` AS `sex`,
		                `RHS`.`major` AS `major`,
		                `RHS`.`advisor` AS `advisor`,
		                `RHS`.`city_code` AS `city_code`
		         FROM
		           (SELECT `LHS`.`allergy` AS `allergy`,
		                   `LHS`.`allergytype` AS `allergytype`,
		                   `RHS`.`stuid` AS `stuid`
		            FROM `allergy_type` AS `LHS`
		            INNER JOIN `has_allergy` AS `RHS` ON (`LHS`.`allergy` = `RHS`.`allergy`)) AS `LHS`
		         INNER JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`))
		      WHERE (`sex` = 'M'
		             AND `allergytype` = 'food'))
		   GROUP BY allergytype,
		            sex)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/allergy_1/0009 (3295)
	EXPECTED OUTPUT ====

		SELECT allergytype
		FROM Allergy_type
		GROUP BY allergytype
		ORDER BY count(*) DESC
		LIMIT 1

	  allergytype
	0        food
	ACTUAL OUTPUT ====

		
		SELECT allergytype
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT allergy,
		                allergytype,
		                COUNT(*) OVER () AS n
		         FROM allergy_type)
		      ORDER BY n)
		   LIMIT 1)

	  allergytype
	0       anima
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
Wrong output for base solution in instance spider/allergy_1/0044 (3300)
	EXPECTED OUTPUT ====

	    avg_age_
	0  18.333333
	ACTUAL OUTPUT ====

		SELECT avg(age)
		FROM Student
		WHERE StuID IN
		    (SELECT T1.StuID
		     FROM Has_allergy AS T1
		     JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy
		     WHERE T2.allergytype = "food" INTERSECT
		       SELECT T1.StuID
		       FROM Has_allergy AS T1
		       JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "animal")

	    avg(age)
	0  18.333333
Wrong output for ground truth in instance spider/allergy_1/0044 (3300)
Wrong output for fuzzied solution in instance spider/e_learning/0002 (3307)
	EXPECTED OUTPUT ====

		SELECT course_description
		FROM COURSES
		WHERE course_name = "database"

	  course_description
	0   modern Arts)yXUz
	ACTUAL OUTPUT ====

		
		SELECT `course_name` AS `course_description`
		FROM `courses`
		WHERE (`course_name` = 'database')
		ORDER BY course_description

	  course_description
	0           database
Wrong output for fuzzied solution in instance spider/e_learning/0038 (3312)
	EXPECTED OUTPUT ====

		SELECT personal_name
		FROM Students
		EXCEPT
		SELECT T1.personal_name
		FROM Students AS T1
		JOIN Student_Course_Enrolment AS T2 ON T1.student_id = T2.student_id

	  personal_name
	0    T)JSLEliza
	1         ZWDgr
	2         ayEHh
	3  yGUAlicia7Ss
	ACTUAL OUTPUT ====

		
		SELECT personal_name
		FROM
		  (SELECT *
		   FROM students AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM student_course_enrolment AS RHS
		        WHERE (LHS.student_id = RHS.student_id) ))
		ORDER BY personal_name

	  personal_name
	0        Alicia
	1        Alicia
	2        Claudi
	3       Claudia
	4       Claudia
	5         Eliza
	6    T)JSLEliza
	7         ZWDgr
	8         ayEHh
	9  yGUAlicia7Ss
Wrong output for fuzzied solution in instance spider/e_learning/0027 (3314)
	EXPECTED OUTPUT ====

		SELECT T1.course_name
		FROM Courses AS T1
		JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id
		GROUP BY T1.course_name
		ORDER BY COUNT(*) DESC
		LIMIT 1

	        course_name
	0  machine learning
	ACTUAL OUTPUT ====

		
		SELECT course_name
		FROM
		  (SELECT course_id,
		          registration_id,
		          n,
		          course_id_other,
		          course_name,
		          course_description,
		          course_id AS author_id
		   FROM
		     (SELECT LHS.course_id AS course_id,
		             LHS.registration_id AS registration_id,
		             LHS.n AS n,
		             RHS.course_id AS course_id_other,
		             RHS.course_name AS course_name,
		             RHS.course_description AS course_description
		      FROM
		        (SELECT course_id,
		                registration_id,
		                COUNT() AS n
		         FROM student_course_enrolment
		         GROUP BY course_id,
		                  registration_id) AS LHS
		      INNER JOIN courses AS RHS ON (LHS.course_id = RHS.author_id
		                                       AND LHS.registration_id = RHS.subject_id)))
		ORDER BY course_name

	Empty DataFrame
	Columns: [course_name]
	Index: []
Wrong output for fuzzied solution in instance spider/e_learning/0030 (3316)
	EXPECTED OUTPUT ====

		SELECT T1.course_name,
		       COUNT(*)
		FROM Courses AS T1
		JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id
		GROUP BY T1.course_name

	                course_name  count(*)
	0                modern Art         1
	1          uvjonta(mSsc)dP(         1
	2   3qSadvanced databaseofg         2
	3              EnglishxQlcx         2
	4                     Frenc         2
	5    advanced databaseXnZ y         2
	6               bqW9XFrench         2
	7             DGqEnglishRfb         3
	8                    Englis         3
	9         XW)njvksrttX576VH         3
	10  cnDadvanced databaseIKz         3
	11   okOdyadvanced database         3
	12                  pHuRTD)         3
	13                    rench         3
	14        0Rfmodern Artsnca         4
	15   OSwmachine learningclW         4
	16               odern Arts         4
	17                   nglish         5
	18         machine learning         7
	19         1qBkm43jcBn98H7N         8
	20        advanced database         9
	21              modern Arts        13
	22                  English        22
	ACTUAL OUTPUT ====

		
		SELECT course_name,
		       n AS count___
		FROM
		  (SELECT LHS.course_id AS course_id,
		          LHS.n AS n,
		          RHS.author_id AS author_id,
		          RHS.subject_id AS subject_id,
		          RHS.course_name AS course_name,
		          RHS.course_description AS course_description
		   FROM
		     (SELECT course_id,
		             COUNT() AS n
		      FROM student_course_enrolment
		      GROUP BY course_id) AS LHS
		   INNER JOIN courses AS RHS ON (LHS.course_id = RHS.course_id))
		ORDER BY course_name

	                course_name  count___
	0          machine learning         1
	1                modern Art         1
	2          uvjonta(mSsc)dP(         1
	3   3qSadvanced databaseofg         2
	4              EnglishxQlcx         2
	5                     Frenc         2
	6         advanced database         2
	7    advanced databaseXnZ y         2
	8               bqW9XFrench         2
	9          machine learning         2
	10              modern Arts         2
	11              modern Arts         2
	12              modern Arts         2
	13            DGqEnglishRfb         3
	14                   Englis         3
	15                  English         3
	16        XW)njvksrttX576VH         3
	17        advanced database         3
	18  cnDadvanced databaseIKz         3
	19              modern Arts         3
	20   okOdyadvanced database         3
	21                  pHuRTD)         3
	22                    rench         3
	23        0Rfmodern Artsnca         4
	24                  English         4
	25                  English         4
	26   OSwmachine learningclW         4
	27        advanced database         4
	28         machine learning         4
	29              modern Arts         4
	30               odern Arts         4
	31                  English         5
	32                   nglish         5
	33                  English         6
	34         1qBkm43jcBn98H7N         8
No solution for instance spider/e_learning/0013 (3317)
Wrong output for fuzzied solution in instance spider/e_learning/0035 (3327)
	EXPECTED OUTPUT ====

		SELECT T1.student_id,
		       T2.login_name
		FROM Student_Course_Enrolment AS T1
		JOIN Students AS T2 ON T1.student_id = T2.student_id
		GROUP BY T1.student_id
		ORDER BY COUNT(*) DESC
		LIMIT 1

	   student_id         login_name
	0          12  SXvflgia.jacobson
	ACTUAL OUTPUT ====

		
		SELECT student_id,
		       login_name
		FROM
		  (SELECT LHS.registration_id AS registration_id,
		          LHS.student_id AS student_id,
		          LHS.course_id AS course_id,
		          LHS.date_of_enrolment AS date_of_enrolment,
		          LHS.date_of_completion AS date_of_completion,
		          RHS.date_of_registration AS date_of_registration,
		          RHS.date_of_latest_logon AS date_of_latest_logon,
		          RHS.login_name AS login_name,
		          RHS.password AS password,
		          RHS.personal_name AS personal_name,
		          RHS.middle_name AS middle_name,
		          RHS.family_name AS family_name
		   FROM student_course_enrolment AS LHS
		   INNER JOIN
		     (SELECT student_id,
		             date_of_registration,
		             date_of_latest_logon,
		             login_name,
		             password,
		             personal_name,
		             middle_name,
		             family_name,
		             COUNT(*) OVER () AS n
		      FROM students) AS RHS ON (LHS.student_id = RHS.student_id
		                                   AND LHS.course_id = RHS.n))
		ORDER BY student_id

	Empty DataFrame
	Columns: [student_id, login_name]
	Index: []
Wrong output for fuzzied solution in instance spider/e_learning/0020 (3328)
	EXPECTED OUTPUT ====

		SELECT T1.personal_name,
		       T1.family_name,
		       T2.author_id
		FROM Course_Authors_and_Tutors AS T1
		JOIN Courses AS T2 ON T1.author_id = T2.author_id
		GROUP BY T2.author_id
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  personal_name  family_name  author_id
	0         Adolf  0J2HaleyQ9B         15
	ACTUAL OUTPUT ====

		
		SELECT personal_name,
		       family_name,
		       author_id
		FROM
		  (SELECT LHS.author_id AS author_id,
		          LHS.author_tutor_atb AS author_tutor_atb,
		          LHS.login_name AS login_name,
		          LHS.password AS password,
		          LHS.personal_name AS personal_name,
		          LHS.middle_name AS middle_name,
		          LHS.family_name AS family_name,
		          LHS.gender_mf AS gender_mf,
		          LHS.address_line_1 AS address_line_1,
		          LHS.n AS n,
		          RHS.subject_id AS subject_id,
		          RHS.course_name AS course_name,
		          RHS.course_description AS course_description
		   FROM
		     (SELECT author_id,
		             author_tutor_atb,
		             login_name,
		             password,
		             personal_name,
		             middle_name,
		             family_name,
		             gender_mf,
		             address_line_1,
		             COUNT(*) OVER () AS n
		      FROM course_authors_and_tutors) AS LHS
		   INNER JOIN courses AS RHS ON (LHS.author_id = RHS.author_id
		                                    AND LHS.n = RHS.course_id))
		ORDER BY personal_name

	Empty DataFrame
	Columns: [personal_name, family_name, author_id]
	Index: []
Error while executing solution for instance spider/e_learning/0007 (3330)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT student_id) OVER () AS count_distinct_student_id_
FROM student_course_enrolment
ORDER BY count_distinct_student_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/e_learning/0034 (3331)
	EXPECTED OUTPUT ====

		SELECT T1.date_of_enrolment,
		       T1.date_of_completion
		FROM Student_Course_Enrolment AS T1
		JOIN Students AS T2 ON T1.student_id = T2.student_id
		WHERE T2.family_name = "Zieme"
		  AND T2.personal_name = "Bernie"

	Empty DataFrame
	Columns: [date_of_enrolment, date_of_completion]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `date_of_enrolment`,
		       `date_of_completion`
		FROM
		  (SELECT `LHS`.`registration_id` AS `registration_id`,
		          `LHS`.`student_id` AS `student_id`,
		          `LHS`.`course_id` AS `course_id`,
		          `LHS`.`date_of_enrolment` AS `date_of_enrolment`,
		          `LHS`.`date_of_completion` AS `date_of_completion`,
		          `RHS`.`date_of_registration` AS `date_of_registration`,
		          `RHS`.`date_of_latest_logon` AS `date_of_latest_logon`,
		          `RHS`.`login_name` AS `login_name`,
		          `RHS`.`password` AS `password`,
		          `RHS`.`personal_name` AS `personal_name`,
		          `RHS`.`middle_name` AS `middle_name`,
		          `RHS`.`family_name` AS `family_name`
		   FROM `student_course_enrolment` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `students`
		      WHERE (`family_name` = 'Zieme'
		             OR `personal_name` = 'Bernie')) AS RHS ON (LHS.student_id = RHS.student_id))
		ORDER BY date_of_enrolment

	     date_of_enrolment   date_of_completion
	0  2017-11-10 02:37:21  2018-03-07 06:30:20
	1  2017-10-08 08:43:21  2018-03-13 13:52:13
	2  2017-10-24 16:48:55  2018-03-17 11:14:47
	3  2017-10-15 11:37:41  2018-03-17 14:17:00
	4  2017-10-17 21:58:24  2018-03-21 12:37:30
No solution for instance spider/e_learning/0021 (3333)
Wrong output for fuzzied solution in instance spider/e_learning/0029 (3340)
	EXPECTED OUTPUT ====

		SELECT T1.course_description,
		       T1.course_name
		FROM Courses AS T1
		JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id
		GROUP BY T1.course_name
		HAVING COUNT(*) > 2

	   course_description              course_name
	0          0FGDylcCtg              modern Arts
	1            2i1AIfq(   OSwmachine learningclW
	2                  AI            DGqEnglishRfb
	3                  AI         machine learning
	4             AI0KlSO                   Englis
	5             Cd2xxAI   okOdyadvanced database
	6      Fz2JapaneselYf               odern Arts
	7            Japanese        0Rfmodern Artsnca
	8            Japanese         1qBkm43jcBn98H7N
	9            Japanese                   nglish
	10           Japanese                  pHuRTD)
	11      JapaneseZz8rc  cnDadvanced databaseIKz
	12            KQW8uAI        advanced database
	13            apanese                  English
	14      btBN Japanese        XW)njvksrttX576VH
	15      f6eK6Japanese                    rench
	ACTUAL OUTPUT ====

		
		SELECT course_name AS course_description,
		       course_description AS course_name
		FROM
		  (SELECT LHS.course_id AS course_id,
		          LHS.n AS n,
		          RHS.author_id AS author_id,
		          RHS.subject_id AS subject_id,
		          RHS.course_name AS course_name,
		          RHS.course_description AS course_description
		   FROM
		     (SELECT *
		      FROM
		        (SELECT course_id,
		                COUNT() AS n
		         FROM student_course_enrolment
		         GROUP BY course_id)
		      WHERE (n > 2)) AS LHS
		   INNER JOIN courses AS RHS ON (LHS.course_id = RHS.course_id))
		ORDER BY course_description

	         course_description       course_name
	0         0Rfmodern Artsnca          Japanese
	1          1qBkm43jcBn98H7N          Japanese
	2             DGqEnglishRfb                AI
	3                    Englis           AI0KlSO
	4                   English       5wTemFKscY(
	5                   English           apanese
	6                   English         g99SKEyox
	7                   English  machine learning
	8                   English          u6XAINLU
	9    OSwmachine learningclW          2i1AIfq(
	10        XW)njvksrttX576VH     btBN Japanese
	11        advanced database           AIj1Otm
	12        advanced database           KQW8uAI
	13  cnDadvanced databaseIKz     JapaneseZz8rc
	14         machine learning           Japanes
	15              modern Arts     Pht50Japanese
	16              modern Arts   machine learnin
	17                   nglish          Japanese
	18               odern Arts    Fz2JapaneselYf
	19   okOdyadvanced database           Cd2xxAI
	20                  pHuRTD)          Japanese
	21                    rench     f6eK6Japanese
Wrong output for fuzzied solution in instance spider/e_learning/0028 (3342)
	EXPECTED OUTPUT ====

		SELECT T1.course_name
		FROM Courses AS T1
		JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id
		GROUP BY T1.course_name
		HAVING COUNT(*) = 1

	  course_name
	0      French
	1    Japanese
	2    database
	ACTUAL OUTPUT ====

		
		SELECT course_name
		FROM
		  (SELECT registration_id,
		          student_id,
		          course_id,
		          date_of_enrolment,
		          date_of_completion,
		          author_id,
		          subject_id,
		          course_name,
		          course_description,
		          course_id AS n
		   FROM
		     (SELECT LHS.registration_id AS registration_id,
		             LHS.student_id AS student_id,
		             LHS.course_id AS course_id,
		             LHS.date_of_enrolment AS date_of_enrolment,
		             LHS.date_of_completion AS date_of_completion,
		             RHS.author_id AS author_id,
		             RHS.subject_id AS subject_id,
		             RHS.course_name AS course_name,
		             RHS.course_description AS course_description
		      FROM student_course_enrolment AS LHS
		      INNER JOIN
		        (SELECT course_id,
		                author_id,
		                subject_id,
		                course_name,
		                course_description,
		                COUNT(*) OVER () AS n
		         FROM courses) AS RHS ON (LHS.course_id = RHS.n
		                                     AND LHS.student_id = RHS.course_id)))
		ORDER BY course_name

	     course_name
	0             AI
	1  QF67VJapanese
	2  QF67VJapanese
No solution for instance spider/aircraft/0017 (3345)
No solution for instance spider/aircraft/0022 (3348)
No solution for instance spider/aircraft/0013 (3349)
Error while executing solution for instance spider/aircraft/0006 (3350)

(sqlite3.OperationalError) no such column: col___change_2007
[SQL: 
SELECT DISTINCT maxtransit_passengers AS max_transit_passengers_,
                MIN(transit_passengers) OVER () AS min_transit_passengers_
FROM
  (SELECT airport_id,
          airport_name,
          total_passengers,
          col___change_2007,
          international_passengers,
          domestic_passengers,
          transit_passengers,
          aircraft_movements,
          freight_metric_tonnes,
          MAX(transit_passengers) OVER () AS maxtransit_passengers
   FROM airport)
ORDER BY max_transit_passengers_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/aircraft/0012 (3352)

(sqlite3.OperationalError) no such column: col___change_2007
[SQL: 
SELECT `total_passengers` AS `avg_t3_total_passengers_`
FROM
  (SELECT `LHS`.`aircraft_id` AS `aircraft_id`,
          `LHS`.`aircraft` AS `aircraft`,
          `LHS`.`description` AS `description`,
          `LHS`.`max_gross_weight` AS `max_gross_weight`,
          `LHS`.`total_disk_area` AS `total_disk_area`,
          `LHS`.`max_disk_loading` AS `max_disk_loading`,
          `LHS`.`id` AS `id`,
          `LHS`.`airport_id` AS `airport_id`,
          `RHS`.`airport_name` AS `airport_name`,
          `RHS`.`total_passengers` AS `total_passengers`,
          `RHS`.`col___change_2007` AS `col___change_2007`,
          `RHS`.`international_passengers` AS `international_passengers`,
          `RHS`.`domestic_passengers` AS `domestic_passengers`,
          `RHS`.`transit_passengers` AS `transit_passengers`,
          `RHS`.`aircraft_movements` AS `aircraft_movements`,
          `RHS`.`freight_metric_tonnes` AS `freight_metric_tonnes`,
          `RHS`.`meantotal_passengers` AS `meantotal_passengers`
   FROM
     (SELECT `LHS`.`aircraft_id` AS `aircraft_id`,
             `LHS`.`aircraft` AS `aircraft`,
             `LHS`.`description` AS `description`,
             `LHS`.`max_gross_weight` AS `max_gross_weight`,
             `LHS`.`total_disk_area` AS `total_disk_area`,
             `LHS`.`max_disk_loading` AS `max_disk_loading`,
             `LHS`.`id` AS `id`,
             `LHS`.`airport_id` AS `airport_id`
      FROM
        (SELECT `LHS`.`aircraft_id` AS `aircraft_id`,
                `LHS`.`aircraft` AS `aircraft`,
                `LHS`.`description` AS `description`,
                `LHS`.`max_gross_weight` AS `max_gross_weight`,
                `LHS`.`total_disk_area` AS `total_disk_area`,
                `LHS`.`max_disk_loading` AS `max_disk_loading`,
                `RHS`.`id` AS `id`,
                `RHS`.`airport_id` AS `airport_id`
         FROM `aircraft` AS `LHS`
         INNER JOIN `airport_aircraft` AS `RHS` ON (`LHS`.`aircraft_id` = `RHS`.`aircraft_id`)) AS `LHS`
      INNER JOIN
        (SELECT *
         FROM `aircraft`
         WHERE (`aircraft` = 'Robinson R-22')) AS RHS ON (LHS.aircraft_id = RHS.aircraft_id
                                                          AND LHS.aircraft = RHS.aircraft
                                                          AND LHS.description = RHS.description
                                                          AND LHS.max_gross_weight = RHS.max_gross_weight
                                                          AND LHS.total_disk_area = RHS.total_disk_area
                                                          AND LHS.max_disk_loading = RHS.max_disk_loading)) AS LHS
   INNER JOIN
     (SELECT airport_id,
             airport_name,
             total_passengers,
             col___change_2007,
             international_passengers,
             domestic_passengers,
             transit_passengers,
             aircraft_movements,
             freight_metric_tonnes,
             AVG(total_passengers) OVER () AS meantotal_passengers
      FROM airport) AS RHS ON (LHS.airport_id = RHS.airport_id))
ORDER BY avg_t3_total_passengers_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/aircraft/0015 (3353)
No solution for instance spider/aircraft/0005 (3354)
No solution for instance spider/aircraft/0020 (3356)
No solution for instance spider/aircraft/0021 (3358)
No solution for instance spider/aircraft/0023 (3359)
No solution for instance spider/aircraft/0014 (3361)
Error while executing solution for instance spider/aircraft/0011 (3363)

(sqlite3.OperationalError) no such column: RHS.col___change_2007
[SQL: 
SELECT aircraft,
       description
FROM
  (SELECT LHS.aircraft_id AS aircraft_id,
          LHS.aircraft AS aircraft,
          LHS.description AS description,
          LHS.max_gross_weight AS max_gross_weight,
          LHS.total_disk_area AS total_disk_area,
          LHS.max_disk_loading AS max_disk_loading,
          LHS.id AS id,
          LHS.airport_id AS airport_id,
          RHS.airport_name AS airport_name,
          RHS.total_passengers AS total_passengers,
          RHS.col___change_2007 AS col___change_2007,
          RHS.international_passengers AS international_passengers,
          RHS.domestic_passengers AS domestic_passengers,
          RHS.transit_passengers AS transit_passengers,
          RHS.aircraft_movements AS aircraft_movements,
          RHS.freight_metric_tonnes AS freight_metric_tonnes
   FROM
     (SELECT LHS.aircraft_id AS aircraft_id,
             LHS.aircraft AS aircraft,
             LHS.description AS description,
             LHS.max_gross_weight AS max_gross_weight,
             LHS.total_disk_area AS total_disk_area,
             LHS.max_disk_loading AS max_disk_loading,
             RHS.id AS id,
             RHS.airport_id AS airport_id
      FROM aircraft AS LHS
      INNER JOIN airport_aircraft AS RHS ON (LHS.aircraft_id = RHS.aircraft_id)) AS LHS
   INNER JOIN
     (SELECT *
      FROM airport
      WHERE (total_passengers > 10000000.0)) AS RHS ON (LHS.airport_id = RHS.airport_id))
ORDER BY aircraft]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/aircraft/0010 (3364)

(sqlite3.OperationalError) no such column: RHS.col___change_2007
[SQL: 
SELECT `aircraft`
FROM
  (SELECT `LHS`.`aircraft_id` AS `aircraft_id`,
          `LHS`.`aircraft` AS `aircraft`,
          `LHS`.`description` AS `description`,
          `LHS`.`max_gross_weight` AS `max_gross_weight`,
          `LHS`.`total_disk_area` AS `total_disk_area`,
          `LHS`.`max_disk_loading` AS `max_disk_loading`,
          `LHS`.`airport_id` AS `airport_id`,
          `LHS`.`airport_name` AS `airport_name`,
          `LHS`.`total_passengers` AS `total_passengers`,
          `LHS`.`col___change_2007` AS `col___change_2007`,
          `LHS`.`international_passengers` AS `international_passengers`,
          `LHS`.`domestic_passengers` AS `domestic_passengers`,
          `LHS`.`transit_passengers` AS `transit_passengers`,
          `LHS`.`aircraft_movements` AS `aircraft_movements`,
          `LHS`.`freight_metric_tonnes` AS `freight_metric_tonnes`,
          `RHS`.`id` AS `id`
   FROM
     (SELECT `LHS`.`aircraft_id` AS `aircraft_id`,
             `LHS`.`aircraft` AS `aircraft`,
             `LHS`.`description` AS `description`,
             `LHS`.`max_gross_weight` AS `max_gross_weight`,
             `LHS`.`total_disk_area` AS `total_disk_area`,
             `LHS`.`max_disk_loading` AS `max_disk_loading`,
             `RHS`.`airport_id` AS `airport_id`,
             `RHS`.`airport_name` AS `airport_name`,
             `RHS`.`total_passengers` AS `total_passengers`,
             `RHS`.`col___change_2007` AS `col___change_2007`,
             `RHS`.`international_passengers` AS `international_passengers`,
             `RHS`.`domestic_passengers` AS `domestic_passengers`,
             `RHS`.`transit_passengers` AS `transit_passengers`,
             `RHS`.`aircraft_movements` AS `aircraft_movements`,
             `RHS`.`freight_metric_tonnes` AS `freight_metric_tonnes`
      FROM `aircraft` AS `LHS`
      CROSS JOIN `airport` AS `RHS`) AS `LHS`
   INNER JOIN `airport_aircraft` AS `RHS` ON (`LHS`.`aircraft_id` = `RHS`.`aircraft_id`
                                                 AND `LHS`.`airport_id` = `RHS`.`airport_id`))
WHERE (`airport_name` = 'London Gatwick')
ORDER BY aircraft]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/sports_competition/0002 (3365)
	EXPECTED OUTPUT ====

		SELECT DISTINCT Region
		FROM club
		ORDER BY Region ASC

	        region
	0       Brazil
	1        China
	2   ChinafyE0u
	3      England
	4          USA
	5  ZiiO5Brazil
	ACTUAL OUTPUT ====

		
		SELECT region
		FROM club
		ORDER BY region

	        region
	0       Brazil
	1       Brazil
	2        China
	3   ChinafyE0u
	4      England
	5          USA
	6  ZiiO5Brazil
Wrong output for fuzzied solution in instance spider/sports_competition/0017 (3366)
	EXPECTED OUTPUT ====

		SELECT Competition_type
		FROM competition
		GROUP BY Competition_type
		HAVING COUNT(*) <= 5

	    competition_type
	0        (4IXMADk9bY
	1         4IXMADk9bY
	2    9dXai7hjQVm)a6O
	3      FriendlyE FrK
	4         Tournament
	5    Tournamentd H1S
	6    UwollTournament
	7   YlCTournamentLeg
	8          ai7hjQVm)
	9            riendly
	10  yRafu(4IXMADk9bY
	ACTUAL OUTPUT ====

		
		SELECT competition_type
		FROM
		  (SELECT competition_type,
		          COUNT() AS n
		   FROM competition
		   GROUP BY competition_type)
		WHERE (n < 5)
		ORDER BY competition_type

	   competition_type
	0       (4IXMADk9bY
	1        4IXMADk9bY
	2   9dXai7hjQVm)a6O
	3     FriendlyE FrK
	4   Tournamentd H1S
	5   UwollTournament
	6  YlCTournamentLeg
	7         ai7hjQVm)
	8           riendly
	9  yRafu(4IXMADk9bY
Wrong output for base solution in instance spider/sports_competition/0003 (3368)
	EXPECTED OUTPUT ====

	   avg_gold_
	0   5.833333
	ACTUAL OUTPUT ====

		SELECT avg(Gold)
		FROM club_rank

	   avg(gold)
	0   5.833333
Wrong output for ground truth in instance spider/sports_competition/0003 (3368)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
Wrong output for fuzzied solution in instance spider/sports_competition/0012 (3373)
	EXPECTED OUTPUT ====

		SELECT avg(T2.Points)
		FROM club AS T1
		JOIN player AS T2 ON T1.Club_ID = T2.Club_ID
		WHERE T1.name = "AIB"

	   avg(t2.points)
	0         17.0075
	ACTUAL OUTPUT ====

		
		SELECT `meanpoints` AS `avg_t2_points_`
		FROM
		  (SELECT `club_id`,
		          AVG(`points`) AS `meanpoints`
		   FROM
		     (SELECT `LHS`.`club_id` AS `club_id`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`region` AS `region`,
		             `LHS`.`start_year` AS `start_year`,
		             `RHS`.`player_id` AS `player_id`,
		             `RHS`.`name` AS `name_other`,
		             `RHS`.`position` AS `position`,
		             `RHS`.`apps` AS `apps`,
		             `RHS`.`tries` AS `tries`,
		             `RHS`.`goals` AS `goals`,
		             `RHS`.`points` AS `points`
		      FROM
		        (SELECT *
		         FROM `club`
		         WHERE (`name` = 'AIB')) AS LHS
		      INNER JOIN player AS RHS ON (LHS.club_id = RHS.club_id))
		   GROUP BY club_id)
		ORDER BY avg_t2_points_

	   avg_t2_points_
	0          16.000
	1          18.015
Wrong output for fuzzied solution in instance spider/sports_competition/0026 (3374)
	EXPECTED OUTPUT ====

		SELECT country
		FROM competition
		EXCEPT
		SELECT country
		FROM competition
		WHERE competition_type = 'Friendly'

	         country
	0    Russia3UNZE
	1        lovenia
	2  mxfhcSlovenia
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `country`
		FROM
		  (SELECT *
		   FROM `competition` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `competition`
		           WHERE (`competition_type` = 'Friendly')) AS RHS
		        WHERE (LHS.country = RHS.country
		               AND LHS.year = RHS.year) ))
		ORDER BY country

	         country
	0    Russia3UNZE
	1       Slovenia
	2        lovenia
	3  mxfhcSlovenia
Wrong output for fuzzied solution in instance spider/sports_competition/0016 (3377)
	EXPECTED OUTPUT ====

		SELECT Competition_type
		FROM competition
		GROUP BY Competition_type
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  competition_type
	0         Friendly
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT competition_type
		FROM
		  (SELECT LHS.competition_id AS competition_id,
		          LHS.year AS YEAR,
		          LHS.competition_type AS competition_type,
		          LHS.country AS country,
		          RHS.country AS country_other
		   FROM competition AS LHS
		   INNER JOIN
		     (SELECT competition_type,
		             country,
		             COUNT() AS n
		      FROM competition
		      GROUP BY competition_type,
		               country) AS RHS ON (LHS.competition_id = RHS.n
		                                   AND LHS.competition_type = RHS.competition_type))
		ORDER BY competition_type

	Empty DataFrame
	Columns: [competition_type]
	Index: []
Wrong output for fuzzied solution in instance spider/sports_competition/0019 (3380)
	EXPECTED OUTPUT ====

		SELECT POSITION
		FROM player
		WHERE Points > 20 INTERSECT
		  SELECT POSITION
		  FROM player WHERE Points < 10

	  position
	0     Prop
	ACTUAL OUTPUT ====

		
		SELECT POSITION
		FROM
		  (SELECT LHS.player_id AS player_id,
		          LHS.name AS name,
		          LHS.position AS POSITION,
		          LHS.club_id AS club_id,
		          LHS.apps AS apps,
		          LHS.tries AS tries,
		          LHS.goals AS goals,
		          LHS.points AS points,
		          RHS.player_id AS player_id_other,
		          RHS.name AS name_other,
		          RHS.club_id AS club_id_other,
		          RHS.apps AS apps_other,
		          RHS.tries AS tries_other,
		          RHS.goals AS goals_other
		   FROM player AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM player
		      WHERE (points <= 20.0
		             AND points < 10.0)) AS RHS ON (LHS.position = RHS.position
		                                            AND LHS.tries = RHS.points))
		ORDER BY POSITION

	Empty DataFrame
	Columns: [position]
	Index: []
Wrong output for fuzzied solution in instance spider/sports_competition/0007 (3381)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM club_rank
		WHERE Total < 10

	   count(*)
	0        25
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT bronze,
		          COUNT(DISTINCT total) AS n_distinct
		   FROM
		     (SELECT *
		      FROM club_rank
		      WHERE (total < 10.0))
		   GROUP BY bronze)
		ORDER BY count___

	    count___
	0          1
	1          1
	2          1
	3          1
	4          2
	5          2
	6          2
	7          2
	8          3
	9          3
	10         4
Wrong output for fuzzied solution in instance spider/sports_competition/0024 (3382)
	EXPECTED OUTPUT ====

		SELECT country
		FROM competition
		WHERE competition_type = 'Tournament'
		GROUP BY country
		ORDER BY count(*) DESC
		LIMIT 1

	    country
	0  ustralia
	ACTUAL OUTPUT ====

		
		SELECT `country`
		FROM
		  (SELECT `competition_type`,
		          `country`,
		          COUNT() AS `n`
		   FROM `competition`
		   GROUP BY `competition_type`,
		            `country`)
		WHERE (`competition_type` = 'Tournament'
		       AND n > 1)
		ORDER BY country

	Empty DataFrame
	Columns: [country]
	Index: []
Error while executing solution for instance spider/sports_competition/0021 (3383)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT POSITION) OVER () AS count_distinct_position_
FROM player
ORDER BY count_distinct_position_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/sports_competition/0023 (3384)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       POSITION
		FROM player
		WHERE points < 30
		GROUP BY POSITION

	   count(*)           position
	0         1    Hqn0zSecond Row
	1         1                Pro
	2         1        Right Centr
	3         1  Right Centrewq1fj
	4         1          Second Ro
	5         1         Second Row
	6         1          econd Row
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       POSITION
		FROM
		  (SELECT POSITION,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM player
		      WHERE (points <= 30.0))
		   GROUP BY POSITION)
		ORDER BY count___

	   count___            position
	0         1     Hqn0zSecond Row
	1         1                 Pro
	2         1                Prop
	3         1         Right Centr
	4         1   Right Centrewq1fj
	5         1           Second Ro
	6         1          Second Row
	7         1           econd Row
	8         1  gL(Right CentreS(q
Wrong output for fuzzied solution in instance spider/sports_competition/0014 (3386)
	EXPECTED OUTPUT ====

		SELECT POSITION
		FROM player
		GROUP BY name
		HAVING avg(Points) >= 20

	         position
	0          Hooker
	1          Hooker
	2      Scrum Half
	3      Second Row
	4       Stand Off
	5  mZQvjStand Off
	6           ooker
	ACTUAL OUTPUT ====

		
		SELECT POSITION
		FROM
		  (SELECT player_id,
		          name,
		          POSITION,
		          club_id,
		          apps,
		          tries,
		          goals,
		          points,
		          AVG(points) OVER () AS meanpoints
		   FROM player)
		WHERE (points >= 20.0
		       AND meanpoints != points)
		ORDER BY POSITION

	         position
	0          Hooker
	1          Hooker
	2          Hooker
	3  R80OcStand Off
	4      Scrum Half
	5      Second Row
	6       Stand Off
	7  mZQvjStand Off
	8           ooker
Wrong output for fuzzied solution in instance spider/sports_competition/0025 (3388)
	EXPECTED OUTPUT ====

		SELECT country
		FROM competition
		WHERE competition_type = 'Friendly' INTERSECT
		  SELECT country
		  FROM competition WHERE competition_type = 'Tournament'

	Empty DataFrame
	Columns: [country]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `country`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM `competition`
		         WHERE (`competition_type` != 'Friendly'
		                OR `competition_type` = 'Tournament'))
		      ORDER BY competition_type)
		   LIMIT 1)

	   country
	0  lovenia
Wrong output for fuzzied solution in instance spider/sports_competition/0011 (3389)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM club AS T1
		JOIN player AS T2 ON T1.Club_ID = T2.Club_ID
		WHERE T2.Position = "Right Wing"

	  name
	0  AIB
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `club_id`,
		          `name`,
		          `region`,
		          `start_year`,
		          `name_other`,
		          `position`,
		          `club_id_other`,
		          `apps`,
		          `tries`,
		          `goals`,
		          `points`,
		          `club_id` AS `player_id`
		   FROM
		     (SELECT `LHS`.`club_id` AS `club_id`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`region` AS `region`,
		             `LHS`.`start_year` AS `start_year`,
		             `RHS`.`name` AS `name_other`,
		             `RHS`.`position` AS `position`,
		             `RHS`.`club_id` AS `club_id_other`,
		             `RHS`.`apps` AS `apps`,
		             `RHS`.`tries` AS `tries`,
		             `RHS`.`goals` AS `goals`,
		             `RHS`.`points` AS `points`
		      FROM `club` AS `LHS`
		      INNER JOIN `player` AS `RHS` ON (`LHS`.`club_id` = `RHS`.`player_id`)))
		WHERE (`position` = 'Right Wing')
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
No solution for instance spider/dorm_1/0033 (3392)
No solution for instance spider/dorm_1/0037 (3393)
Wrong output for fuzzied solution in instance spider/dorm_1/0036 (3395)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.dormid
		FROM dorm AS T1
		JOIN has_amenity AS T2 ON T1.dormid = T2.dormid
		WHERE T1.student_capacity > 100
		GROUP BY T1.dormid

	    count(*)  dormid
	0          1     118
	1          2     116
	2          2     119
	3          4     106
	4          4     140
	5          4     141
	6          5     117
	7          6     111
	8          6     115
	9          9     139
	10        16     109
	11        24     102
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       dormid
		FROM
		  (SELECT *
		   FROM
		     (SELECT dormid,
		             COUNT() AS n
		      FROM has_amenity
		      GROUP BY dormid) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM dorm
		           WHERE (student_capacity <= 100)) AS RHS
		        WHERE (LHS.dormid = RHS.dormid) ))
		ORDER BY count___

	   count___  dormid
	0         1     119
	1         2     141
No solution for instance spider/dorm_1/0017 (3396)
No solution for instance spider/dorm_1/0039 (3398)
Wrong output for fuzzied solution in instance spider/dorm_1/0003 (3400)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM student
		WHERE sex = 'F'
		  AND age < 25

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `sex`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `student`
		      WHERE (`sex` = 'F'
		             AND age < 25))
		   GROUP BY sex)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/dorm_1/0027 (3401)
Wrong output for fuzzied solution in instance spider/dorm_1/0048 (3402)
	EXPECTED OUTPUT ====

		SELECT T1.fname,
		       T1.lname
		FROM student AS T1
		JOIN lives_in AS T2 ON T1.stuid = T2.stuid
		WHERE T2.dormid IN
		    (SELECT T3.dormid
		     FROM has_amenity AS T3
		     JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid
		     WHERE T4.amenity_name = 'TV Lounge')

	        fname lname
	0         And  Pang
	1         And  Pang
	2         And  Pang
	3         And  Pang
	4         And  Pang
	..        ...   ...
	114  p9IqtIan   Han
	115  p9IqtIan   Han
	116  p9IqtIan   Han
	117  p9IqtIan   Han
	118  p9IqtIan   Han
	
	[119 rows x 2 columns]
	ACTUAL OUTPUT ====

		
		SELECT `fname`,
		       `lname`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`amenid` AS `amenid`,
		          `LHS`.`amenity_name` AS `amenity_name`,
		          `LHS`.`dormid` AS `dormid`,
		          `RHS`.`room_number` AS `room_number`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`amenid` AS `amenid`,
		             `LHS`.`amenity_name` AS `amenity_name`,
		             `RHS`.`dormid` AS `dormid`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`amenid` AS `amenid`,
		                `RHS`.`amenity_name` AS `amenity_name`
		         FROM `student` AS `LHS`
		         CROSS JOIN `dorm_amenity` AS `RHS`) AS `LHS`
		      INNER JOIN `has_amenity` AS `RHS` ON (`LHS`.`amenid` = `RHS`.`amenid`)) AS `LHS`
		   INNER JOIN `lives_in` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                         AND `LHS`.`dormid` = `RHS`.`dormid`))
		WHERE (`amenity_name` = 'TV Lounge')
		ORDER BY fname

	         fname lname
	0          And  Pang
	1          And  Pang
	2          And  Pang
	3          And  Pang
	4          And  Pang
	...        ...   ...
	1183  p9IqtIan   Han
	1184  p9IqtIan   Han
	1185  p9IqtIan   Han
	1186  p9IqtIan   Han
	1187  p9IqtIan   Han
	
	[1188 rows x 2 columns]
Wrong output for base solution in instance spider/dorm_1/0030 (3404)
	EXPECTED OUTPUT ====

	    count___   avg_age_ city_code
	0          1  17.000000       DET
	1          1  17.000000       HOU
	2          1  17.000000       PEK
	3          1  18.000000       BOS
	4          1  18.000000       DAL
	5          3  18.000000       HKG
	6          1  18.000000       LOS
	7          1  18.000000       NAR
	8          4  18.500000       BAL
	9          4  19.000000       PIT
	10         3  19.666667       PHL
	11         1  20.000000       ATL
	12         1  20.000000       CHI
	13         1  20.000000       ROC
	14         3  20.333333       NYC
	15         1  21.000000       SFO
	16         3  21.666667       WAS
	17         2  22.500000       YYZ
	18         1  27.000000       LON
	ACTUAL OUTPUT ====

		SELECT count(*),
		       avg(age),
		       city_code
		FROM student
		GROUP BY city_code

	    count(*)   avg(age) city_code
	0          1  17.000000       DET
	1          1  17.000000       HOU
	2          1  17.000000       PEK
	3          1  18.000000       BOS
	4          1  18.000000       DAL
	5          3  18.000000       HKG
	6          1  18.000000       LOS
	7          1  18.000000       NAR
	8          4  18.500000       BAL
	9          4  19.000000       PIT
	10         3  19.666667       PHL
	11         1  20.000000       ATL
	12         1  20.000000       CHI
	13         1  20.000000       ROC
	14         3  20.333333       NYC
	15         1  21.000000       SFO
	16         3  21.666667       WAS
	17         2  22.500000       YYZ
	18         1  27.000000       LON
Wrong output for ground truth in instance spider/dorm_1/0030 (3404)
Error while executing solution for instance spider/dorm_1/0012 (3407)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT dormid) OVER () AS count_distinct_dormid_
FROM has_amenity
ORDER BY count_distinct_dormid_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/dorm_1/0015 (3409)
Wrong output for fuzzied solution in instance spider/dorm_1/0005 (3410)
	EXPECTED OUTPUT ====

		SELECT fname
		FROM student
		WHERE city_code = 'PHL'
		  AND age BETWEEN 20 AND 25

	   fname
	0  Stacy
	ACTUAL OUTPUT ====

		
		SELECT `fname`
		FROM
		  (SELECT *
		   FROM `student`
		   WHERE (`city_code` != 'PHL'
		          OR `age` >= 20))
		WHERE (`city_code` = 'PHL'
		       OR age = 25)
		ORDER BY fname

	        fname
	0      032XeR
	1       Stacy
	2      Steven
	3  jisg3Stacy
Wrong output for fuzzied solution in instance spider/dorm_1/0016 (3411)
	EXPECTED OUTPUT ====

		SELECT dorm_name,
		       gender
		FROM dorm
		WHERE student_capacity > 300
		  OR student_capacity < 100

	                  dorm_name   gender
	0              Fawlty Tower         
	1             Fawlty Towers  NzFFUkJ
	2        Grad Student Asylu         
	3       Grad Student Asylum         
	4       Grad Student Asylum   FFZjIj
	5       Grad Student Asylum        M
	6  N2)TPGrad Student Asylum        F
	7        q9Bp2Fawlty Towers  RDXXNfP
	8        zING4Fawlty Towers         
	ACTUAL OUTPUT ====

		
		SELECT dorm_name,
		       gender
		FROM dorm
		WHERE (student_capacity >= 300
		       OR student_capacity <= 100)
		ORDER BY dorm_name

	                  dorm_name   gender
	0              Fawlty Tower         
	1             Fawlty Towers  NzFFUkJ
	2             Fawlty Towers        X
	3        Grad Student Asylu         
	4       Grad Student Asylum         
	5       Grad Student Asylum   FFZjIj
	6       Grad Student Asylum        M
	7  N2)TPGrad Student Asylum        F
	8        q9Bp2Fawlty Towers  RDXXNfP
	9        zING4Fawlty Towers         
No solution for instance spider/dorm_1/0045 (3414)
No solution for instance spider/dorm_1/0018 (3415)
Wrong output for fuzzied solution in instance spider/dorm_1/0041 (3416)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM student AS T1
		JOIN lives_in AS T2 ON T1.stuid = T2.stuid
		JOIN dorm AS T3 ON T3.dormid = T2.dormid
		WHERE T3.dorm_name = 'Smith Hall'
		  AND T1.sex = 'F'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `dorm_name`,
		          `sex`,
		          COUNT() AS `n`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`dormid` AS `dormid`,
		             `LHS`.`dorm_name` AS `dorm_name`,
		             `LHS`.`student_capacity` AS `student_capacity`,
		             `LHS`.`gender` AS `gender`,
		             `RHS`.`room_number` AS `room_number`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`dormid` AS `dormid`,
		                `RHS`.`dorm_name` AS `dorm_name`,
		                `RHS`.`student_capacity` AS `student_capacity`,
		                `RHS`.`gender` AS `gender`
		         FROM `student` AS `LHS`
		         CROSS JOIN `dorm` AS `RHS`) AS `LHS`
		      INNER JOIN `lives_in` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                            AND `LHS`.`dormid` = `RHS`.`dormid`))
		   GROUP BY `dorm_name`,
		            `sex`)
		WHERE (`dorm_name` = 'Smith Hall'
		       AND `sex` = 'F')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for base solution in instance spider/dorm_1/0035 (3417)
	EXPECTED OUTPUT ====

	   avg_t1_age_             dorm_name
	0    18.000000   Grad Student Asylum
	1    18.000000     University Hovels
	2    19.600000        Dorm-plex 2000
	3    19.666667  Anonymous Donor Hall
	4    19.777778         Fawlty Towers
	5    20.000000        Bud Jones Hall
	6    20.166667            Smith Hall
	ACTUAL OUTPUT ====

		SELECT avg(T1.age),
		       T3.dorm_name
		FROM student AS T1
		JOIN lives_in AS T2 ON T1.stuid = T2.stuid
		JOIN dorm AS T3 ON T3.dormid = T2.dormid
		GROUP BY T3.dorm_name

	   avg(t1.age)             dorm_name
	0    18.000000   Grad Student Asylum
	1    18.000000     University Hovels
	2    19.600000        Dorm-plex 2000
	3    19.666667  Anonymous Donor Hall
	4    19.777778         Fawlty Towers
	5    20.000000        Bud Jones Hall
	6    20.166667            Smith Hall
Wrong output for ground truth in instance spider/dorm_1/0035 (3417)
Wrong output for fuzzied solution in instance spider/dorm_1/0020 (3418)
	EXPECTED OUTPUT ====

		SELECT lname
		FROM student
		WHERE sex = 'F'
		  AND city_code = 'BAL'
		UNION
		SELECT lname
		FROM student
		WHERE sex = 'M'
		  AND age < 20

	      lname
	0   Gompers
	1  rOT4yZ6k
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `lname`
		FROM
		  (SELECT *
		   FROM `student`
		   WHERE (`city_code` = 'BAL'
		          OR `sex` = 'M'))
		WHERE (`sex` = 'F'
		       OR age < 20)
		ORDER BY lname

	      lname
	0    Gomper
	1   Gompers
	2  rOT4yZ6k
No solution for instance spider/dorm_1/0019 (3419)
No solution for instance spider/dorm_1/0034 (3421)
No solution for instance spider/dorm_1/0024 (3422)
No solution for instance spider/dorm_1/0023 (3424)
No solution for instance spider/dorm_1/0046 (3427)
Wrong output for fuzzied solution in instance spider/dorm_1/0047 (3428)
	EXPECTED OUTPUT ====

		SELECT dorm_name
		FROM dorm
		EXCEPT
		SELECT T1.dorm_name
		FROM dorm AS T1
		JOIN has_amenity AS T2 ON T1.dormid = T2.dormid
		JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid
		WHERE T3.amenity_name = 'TV Lounge'

	                    dorm_name
	0    tq8GAnonymous Donor Hall
	1   1iCShAnonymous Donor Hall
	2        8aL77VxA8zCr2zU9DgFo
	3         Anonymous Donor Hal
	4        Anonymous Donor Hall
	5   Anonymous Donor Hall1rWZT
	6              B2Q 4354VfAHqn
	7               Bud Jones Hal
	8              Bud Jones Hall
	9         Bud Jones HallobStX
	10        Bud Jones Hallwq1fj
	11        I(96OBud Jones Hall
	12         Ih8Jg9O15CvfZGyOzo
	13          Jx51csNrs e6)(fXn
	14        K(jrcBOmuM sk(i1Ut5
	15        KAnHcBud Jones Hall
	16   M2S3Ps74t(thyZQH9Le2kBdO
	17  MrMrMAnonymous Donor Hall
	18          QiUv0 MICb8TkH9Y5
	19       gL(Bud Jones HallS(q
	20  hLHP)Anonymous Donor Hall
	21            kQpV0Yj 4M23Yr5
	22       nW3Bud Jones HallOa6
	23        nonymous Donor Hall
	24  oq0lsAnonymous Donor Hall
	25              ud Jones Hall
	26  vKSCAAnonymous Donor Hall
	ACTUAL OUTPUT ====

		
		SELECT `dorm_name`
		FROM
		  (SELECT *
		   FROM `dorm` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT `LHS`.`dormid` AS `dormid`,
		                     `LHS`.`dorm_name` AS `dorm_name`,
		                     `LHS`.`student_capacity` AS `student_capacity`,
		                     `LHS`.`gender` AS `gender`,
		                     `LHS`.`amenid` AS `amenid`,
		                     `LHS`.`amenity_name` AS `amenity_name`
		              FROM
		                (SELECT `LHS`.`dormid` AS `dormid`,
		                        `LHS`.`dorm_name` AS `dorm_name`,
		                        `LHS`.`student_capacity` AS `student_capacity`,
		                        `LHS`.`gender` AS `gender`,
		                        `RHS`.`amenid` AS `amenid`,
		                        `RHS`.`amenity_name` AS `amenity_name`
		                 FROM `dorm` AS `LHS`
		                 CROSS JOIN `dorm_amenity` AS `RHS`) AS `LHS`
		              INNER JOIN `has_amenity` AS `RHS` ON (`LHS`.`dormid` = `RHS`.`dormid`
		                                                       AND `LHS`.`amenid` = `RHS`.`amenid`))
		           WHERE (`amenity_name` = 'TV Lounge')) AS RHS
		        WHERE (LHS.dorm_name = RHS.dorm_name) ))
		ORDER BY dorm_name

	                    dorm_name
	0    tq8GAnonymous Donor Hall
	1   1iCShAnonymous Donor Hall
	2        8aL77VxA8zCr2zU9DgFo
	3         Anonymous Donor Hal
	4         Anonymous Donor Hal
	5         Anonymous Donor Hal
	6        Anonymous Donor Hall
	7        Anonymous Donor Hall
	8        Anonymous Donor Hall
	9        Anonymous Donor Hall
	10       Anonymous Donor Hall
	11       Anonymous Donor Hall
	12       Anonymous Donor Hall
	13       Anonymous Donor Hall
	14       Anonymous Donor Hall
	15       Anonymous Donor Hall
	16       Anonymous Donor Hall
	17       Anonymous Donor Hall
	18  Anonymous Donor Hall1rWZT
	19             B2Q 4354VfAHqn
	20              Bud Jones Hal
	21              Bud Jones Hal
	22             Bud Jones Hall
	23             Bud Jones Hall
	24             Bud Jones Hall
	25             Bud Jones Hall
	26             Bud Jones Hall
	27        Bud Jones HallobStX
	28        Bud Jones Hallwq1fj
	29        I(96OBud Jones Hall
	30         Ih8Jg9O15CvfZGyOzo
	31          Jx51csNrs e6)(fXn
	32        K(jrcBOmuM sk(i1Ut5
	33        KAnHcBud Jones Hall
	34   M2S3Ps74t(thyZQH9Le2kBdO
	35  MrMrMAnonymous Donor Hall
	36          QiUv0 MICb8TkH9Y5
	37       gL(Bud Jones HallS(q
	38  hLHP)Anonymous Donor Hall
	39            kQpV0Yj 4M23Yr5
	40       nW3Bud Jones HallOa6
	41        nonymous Donor Hall
	42        nonymous Donor Hall
	43        nonymous Donor Hall
	44        nonymous Donor Hall
	45        nonymous Donor Hall
	46  oq0lsAnonymous Donor Hall
	47              ud Jones Hall
	48  vKSCAAnonymous Donor Hall
Wrong output for base solution in instance spider/dorm_1/0010 (3434)
	EXPECTED OUTPUT ====

	     avg_age_ city_code
	0   17.000000       DET
	1   17.000000       HOU
	2   17.000000       PEK
	3   18.000000       BOS
	4   18.000000       DAL
	5   18.000000       HKG
	6   18.000000       LOS
	7   18.000000       NAR
	8   18.500000       BAL
	9   19.000000       PIT
	10  19.666667       PHL
	11  20.000000       ATL
	12  20.000000       CHI
	13  20.000000       ROC
	14  20.333333       NYC
	15  21.000000       SFO
	16  21.666667       WAS
	17  22.500000       YYZ
	18  27.000000       LON
	ACTUAL OUTPUT ====

		SELECT avg(age),
		       city_code
		FROM student
		GROUP BY city_code

	     avg(age) city_code
	0   17.000000       DET
	1   17.000000       HOU
	2   17.000000       PEK
	3   18.000000       BOS
	4   18.000000       DAL
	5   18.000000       HKG
	6   18.000000       LOS
	7   18.000000       NAR
	8   18.500000       BAL
	9   19.000000       PIT
	10  19.666667       PHL
	11  20.000000       ATL
	12  20.000000       CHI
	13  20.000000       ROC
	14  20.333333       NYC
	15  21.000000       SFO
	16  21.666667       WAS
	17  22.500000       YYZ
	18  27.000000       LON
Wrong output for ground truth in instance spider/dorm_1/0010 (3434)
No solution for instance spider/dorm_1/0044 (3435)
Wrong output for fuzzied solution in instance spider/dorm_1/0040 (3436)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM student AS T1
		JOIN lives_in AS T2 ON T1.stuid = T2.stuid
		JOIN dorm AS T3 ON T3.dormid = T2.dormid
		WHERE T3.gender = 'M'

	   count(*)
	0        38
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`dormid` AS `dormid`,
		          `LHS`.`dorm_name` AS `dorm_name`,
		          `LHS`.`student_capacity` AS `student_capacity`,
		          `LHS`.`gender` AS `gender`,
		          `LHS`.`room_number` AS `room_number`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`dormid` AS `dormid`,
		             `LHS`.`dorm_name` AS `dorm_name`,
		             `LHS`.`student_capacity` AS `student_capacity`,
		             `LHS`.`gender` AS `gender`,
		             `RHS`.`room_number` AS `room_number`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`dormid` AS `dormid`,
		                `RHS`.`dorm_name` AS `dorm_name`,
		                `RHS`.`student_capacity` AS `student_capacity`,
		                `RHS`.`gender` AS `gender`
		         FROM `student` AS `LHS`
		         CROSS JOIN `dorm` AS `RHS`) AS `LHS`
		      INNER JOIN `lives_in` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                            AND `LHS`.`dormid` = `RHS`.`dormid`)) AS `LHS`
		   INNER JOIN
		     (SELECT `city_code`,
		             `lname`,
		             COUNT() AS `n`
		      FROM `student`
		      GROUP BY `city_code`,
		               `lname`) AS `RHS` ON (`LHS`.`lname` = `RHS`.`lname`
		                                     AND `LHS`.`city_code` = `RHS`.`city_code`))
		WHERE (`gender` != 'M')
		ORDER BY count___

	   count___
	0         1
No solution for instance spider/dorm_1/0028 (3437)
No solution for instance spider/dorm_1/0049 (3438)
Wrong output for base solution in instance spider/dorm_1/0031 (3439)
	EXPECTED OUTPUT ====

	    count___   avg_age_ city_code
	0          1  17.000000       DET
	1          1  17.000000       HOU
	2          1  17.000000       PEK
	3          1  18.000000       BAL
	4          1  18.000000       BOS
	5          1  18.000000       DAL
	6          1  18.000000       LOS
	7          1  18.000000       NAR
	8          1  18.000000       WAS
	9          1  19.000000       HKG
	10         3  19.333333       PIT
	11         2  19.500000       PHL
	12         1  20.000000       ATL
	13         1  20.000000       CHI
	14         1  20.000000       ROC
	15         3  20.333333       NYC
	16         2  22.500000       YYZ
	17         1  27.000000       LON
	ACTUAL OUTPUT ====

		SELECT count(*),
		       avg(age),
		       city_code
		FROM student
		WHERE sex = 'M'
		GROUP BY city_code

	    count(*)   avg(age) city_code
	0          1  17.000000       DET
	1          1  17.000000       HOU
	2          1  17.000000       PEK
	3          1  18.000000       BAL
	4          1  18.000000       BOS
	5          1  18.000000       DAL
	6          1  18.000000       LOS
	7          1  18.000000       NAR
	8          1  18.000000       WAS
	9          1  19.000000       HKG
	10         3  19.333333       PIT
	11         2  19.500000       PHL
	12         1  20.000000       ATL
	13         1  20.000000       CHI
	14         1  20.000000       ROC
	15         3  20.333333       NYC
	16         2  22.500000       YYZ
	17         1  27.000000       LON
Wrong output for ground truth in instance spider/dorm_1/0031 (3439)
No solution for instance spider/school_finance/0017 (3441)
No solution for instance spider/school_finance/0008 (3442)
No solution for instance spider/school_finance/0022 (3444)
Wrong output for fuzzied solution in instance spider/school_finance/0006 (3445)
	EXPECTED OUTPUT ====

		SELECT school_name
		FROM school
		ORDER BY enrollment
		LIMIT 1

	  school_name
	0       Trito
	ACTUAL OUTPUT ====

		
		SELECT school_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM school
		      ORDER BY ihsaa_football_class)
		   LIMIT 1)

	  school_name
	0      Triton
No solution for instance spider/school_finance/0012 (3447)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
No solution for instance spider/school_finance/0016 (3450)
Wrong output for fuzzied solution in instance spider/school_finance/0018 (3451)
	EXPECTED OUTPUT ====

		SELECT DISTINCT donator_name
		FROM endowment

	        donator_name
	0    towRMonte Plata
	1  Distrito Nacional
	2             Duarte
	3             La Veg
	4        Monte Plata
	5             a Vega
	6         onte Plata
	ACTUAL OUTPUT ====

		
		SELECT donator_name
		FROM endowment
		ORDER BY donator_name

	        donator_name
	0    towRMonte Plata
	1  Distrito Nacional
	2             Duarte
	3             Duarte
	4             Duarte
	5             La Veg
	6        Monte Plata
	7             a Vega
	8         onte Plata
	9         onte Plata
No solution for instance spider/school_finance/0020 (3452)
Wrong output for fuzzied solution in instance spider/school_finance/0019 (3453)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM budget
		WHERE budgeted < invested

	   count(*)
	0        28
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___
		FROM
		  (SELECT LHS.total_budget_percent_budgeted AS total_budget_percent_budgeted,
		          LHS.n AS n,
		          RHS.school_id AS school_id,
		          RHS.year AS YEAR,
		          RHS.budgeted AS budgeted,
		          RHS.total_budget_percent_budgeted AS total_budget_percent_budgeted_other,
		          RHS.invested AS invested,
		          RHS.budget_invested_percent AS budget_invested_percent
		   FROM
		     (SELECT total_budget_percent_budgeted,
		             COUNT() AS n
		      FROM budget
		      GROUP BY total_budget_percent_budgeted) AS LHS
		   INNER JOIN budget AS RHS ON (LHS.total_budget_percent_budgeted = RHS.total_budget_percent_invested))
		ORDER BY count___

	   count___
	0         4
	1         5
No solution for instance spider/school_finance/0007 (3454)
No solution for instance spider/school_finance/0024 (3455)
No solution for instance spider/school_finance/0021 (3456)
Wrong output for fuzzied solution in instance spider/school_finance/0023 (3457)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM
		  (SELECT *
		   FROM endowment
		   WHERE amount > 8.5
		   GROUP BY school_id
		   HAVING count(*) > 1)

	   count(*)
	0         9
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `endowment`
		WHERE (`amount` <= '8.5')
		ORDER BY count___

	   count___
	0        16
Wrong output for fuzzied solution in instance spider/school_finance/0014 (3459)
	EXPECTED OUTPUT ====

		SELECT donator_name
		FROM endowment
		EXCEPT
		SELECT donator_name
		FROM endowment
		WHERE amount < 9

	   donator_name
	0   AKCOLa Vega
	1  OO(DuarteRO6
	2         uarte
	ACTUAL OUTPUT ====

		
		SELECT donator_name
		FROM endowment
		WHERE (amount > 9.0)
		ORDER BY donator_name

	   donator_name
	0   AKCOLa Vega
	1        Duarte
	2   Monte Plata
	3  OO(DuarteRO6
	4         uarte
No solution for instance spider/school_finance/0009 (3460)
Wrong output for fuzzied solution in instance spider/school_finance/0010 (3461)
	EXPECTED OUTPUT ====

		SELECT donator_name,
		       sum(amount)
		FROM endowment
		GROUP BY donator_name
		ORDER BY sum(amount) DESC

	        donator_name  sum(amount)
	0    towRMonte Plata         9.55
	1  Distrito Nacional         8.83
	2             Duarte        27.38
	3             La Veg         8.86
	4        Monte Plata         9.01
	5             a Vega         9.55
	6         onte Plata        18.42
	ACTUAL OUTPUT ====

		
		SELECT donator_name,
		       sumamount AS sum_amount_
		FROM
		  (SELECT donator_name,
		          school_id,
		          SUM(amount) AS sumamount
		   FROM endowment
		   GROUP BY donator_name,
		            school_id)
		ORDER BY donator_name

	        donator_name  sum_amount_
	0    towRMonte Plata         9.55
	1  Distrito Nacional         8.83
	2             Duarte         9.57
	3             Duarte        17.81
	4             La Veg         8.86
	5        Monte Plata         9.01
	6             a Vega         9.55
	7         onte Plata         8.87
	8         onte Plata         9.55
Wrong output for fuzzied solution in instance spider/voter_2/0033 (3462)
	EXPECTED OUTPUT ====

		SELECT Major
		FROM STUDENT
		GROUP BY major
		ORDER BY count(*) DESC
		LIMIT 1

	   major
	0    601
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT major_other AS major
		FROM
		  (SELECT LHS.stuid AS stuid,
		          LHS.lname AS lname,
		          LHS.fname AS fname,
		          LHS.age AS age,
		          LHS.sex AS sex,
		          LHS.major AS major,
		          LHS.advisor AS advisor,
		          LHS.city_code AS city_code,
		          RHS.major AS major_other
		   FROM student AS LHS
		   INNER JOIN
		     (SELECT major,
		             COUNT() AS n
		      FROM student
		      GROUP BY major) AS RHS ON (LHS.age = RHS.n))
		ORDER BY major

	Empty DataFrame
	Columns: [major]
	Index: []
Wrong output for fuzzied solution in instance spider/voter_2/0008 (3466)
	EXPECTED OUTPUT ====

		SELECT avg(Age)
		FROM STUDENT
		WHERE Sex = "F"

	  avg(age)
	0     None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(`age`) OVER () AS `avg_age_`
		FROM `student`
		WHERE (`sex` = 'F')
		ORDER BY avg_age_

	Empty DataFrame
	Columns: [avg_age_]
	Index: []
Error while executing solution for instance spider/voter_2/0003 (3467)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT president_vote) OVER () AS count_distinct_president_vote_
FROM voting_record
ORDER BY count_distinct_president_vote_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/voter_2/0027 (3468)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.LName
		FROM STUDENT AS T1
		JOIN VOTING_RECORD AS T2 ON T1.StuID = PRESIDENT_Vote
		EXCEPT
		SELECT DISTINCT LName
		FROM STUDENT
		WHERE Advisor = "2192"

	          lname
	0         Jones
	1           Lee
	2       MOFIgUd
	3     TITLee7FE
	4            Ta
	5      Z6gm7Epp
	6  bPoTqSchmidt
	7     nViTaiU)d
	8        sB8QUL
	9         uofO1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT lname
		FROM
		  (SELECT stuid,
		          lname,
		          fname,
		          age,
		          sex,
		          major,
		          advisor,
		          city_code,
		          stuid_other,
		          registration_date,
		          election_cycle,
		          vice_president_vote,
		          secretary_vote,
		          treasurer_vote,
		          class_president_vote,
		          class_senator_vote,
		          stuid AS president_vote
		   FROM
		     (SELECT LHS.stuid AS stuid,
		             LHS.lname AS lname,
		             LHS.fname AS fname,
		             LHS.age AS age,
		             LHS.sex AS sex,
		             LHS.major AS major,
		             LHS.advisor AS advisor,
		             LHS.city_code AS city_code,
		             RHS.stuid AS stuid_other,
		             RHS.registration_date AS registration_date,
		             RHS.election_cycle AS election_cycle,
		             RHS.vice_president_vote AS vice_president_vote,
		             RHS.secretary_vote AS secretary_vote,
		             RHS.treasurer_vote AS treasurer_vote,
		             RHS.class_president_vote AS class_president_vote,
		             RHS.class_senator_vote AS class_senator_vote
		      FROM student AS LHS
		      INNER JOIN voting_record AS RHS ON (LHS.stuid = RHS.president_vote)))
		WHERE (advisor != 2192)
		ORDER BY lname

	           lname
	0            Epp
	1          Jones
	2            Lee
	3        MOFIgUd
	4      TITLee7FE
	5             Ta
	6       Z6gm7Epp
	7   bPoTqSchmidt
	8      nViTaiU)d
	9         sB8QUL
	10         uofO1
No solution for instance spider/voter_2/0022 (3469)
Wrong output for fuzzied solution in instance spider/voter_2/0026 (3475)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.Fname
		FROM STUDENT AS T1
		JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.VICE_PRESIDENT_Vote
		EXCEPT
		SELECT DISTINCT Fname
		FROM STUDENT
		WHERE city_code = "PIT"

	        fname
	0        Dere
	1       Derek
	2  DerekJwkUR
	3         Eri
	4   Eric8fEbc
	5  J6btqDerek
	6        O4)0
	7        Paul
	8        no2F
	9         ric
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `fname`
		FROM
		  (SELECT `stuid`,
		          `lname`,
		          `fname`,
		          `age`,
		          `sex`,
		          `major`,
		          `advisor`,
		          `city_code`,
		          `stuid_other`,
		          `registration_date`,
		          `election_cycle`,
		          `president_vote`,
		          `secretary_vote`,
		          `treasurer_vote`,
		          `class_president_vote`,
		          `class_senator_vote`,
		          `stuid` AS `vice_president_vote`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `RHS`.`stuid` AS `stuid_other`,
		             `RHS`.`registration_date` AS `registration_date`,
		             `RHS`.`election_cycle` AS `election_cycle`,
		             `RHS`.`president_vote` AS `president_vote`,
		             `RHS`.`secretary_vote` AS `secretary_vote`,
		             `RHS`.`treasurer_vote` AS `treasurer_vote`,
		             `RHS`.`class_president_vote` AS `class_president_vote`,
		             `RHS`.`class_senator_vote` AS `class_senator_vote`
		      FROM `student` AS `LHS`
		      INNER JOIN `voting_record` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`vice_president_vote`)))
		WHERE (`city_code` != 'PIT')
		ORDER BY fname

	         fname
	0         Dere
	1        Derek
	2   DerekJwkUR
	3          Eri
	4         Eric
	5    Eric8fEbc
	6   J6btqDerek
	7         O4)0
	8         Paul
	9         no2F
	10         ric
No solution for instance spider/voter_2/0035 (3481)
Wrong output for fuzzied solution in instance spider/voter_2/0034 (3485)
	EXPECTED OUTPUT ====

		SELECT Major
		FROM STUDENT
		WHERE Sex = "F"
		GROUP BY major
		ORDER BY count(*) DESC
		LIMIT 1

	   major
	0     51
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `major`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `RHS`.`n` AS `n`
		   FROM `student` AS `LHS`
		   LEFT JOIN
		     (SELECT `advisor`,
		             COUNT() AS `n`
		      FROM `student`
		      GROUP BY `advisor`) AS `RHS` ON (`LHS`.`advisor` = `RHS`.`advisor`))
		WHERE (`sex` = 'F'
		       AND n = 1)
		ORDER BY major

	   major
	0    600
No solution for instance spider/voter_2/0024 (3486)
Wrong output for fuzzied solution in instance spider/voter_2/0021 (3487)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.Fname,
		                T1.LName
		FROM STUDENT AS T1
		JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.VICE_President_VOTE
		WHERE T1.age = 18

	   fname    lname
	0  eorge  Schmidt
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT fname,
		                lname
		FROM
		  (SELECT LHS.stuid AS stuid,
		          LHS.lname AS lname,
		          LHS.fname AS fname,
		          LHS.age AS age,
		          LHS.sex AS sex,
		          LHS.major AS major,
		          LHS.advisor AS advisor,
		          LHS.city_code AS city_code,
		          RHS.stuid AS stuid_other,
		          RHS.registration_date AS registration_date,
		          RHS.election_cycle AS election_cycle,
		          RHS.president_vote AS president_vote,
		          RHS.secretary_vote AS secretary_vote,
		          RHS.treasurer_vote AS treasurer_vote,
		          RHS.class_president_vote AS class_president_vote,
		          RHS.class_senator_vote AS class_senator_vote
		   FROM
		     (SELECT *
		      FROM student
		      WHERE (age <= 18)) AS LHS
		   INNER JOIN voting_record AS RHS ON (LHS.stuid = RHS.vice_president_vote))
		ORDER BY fname

	         fname        lname
	0       Arthur          Lee
	1         Eric  BkfWoodsba8
	2         Eric      Schmidt
	3       George           Le
	4        eorge      Schmidt
	5  q9Bp2Arthur       Schult
No solution for instance spider/voter_2/0023 (3488)
No solution for instance spider/voter_2/0009 (3491)
No solution for instance spider/voter_2/0025 (3492)
Wrong output for fuzzied solution in instance spider/voter_2/0028 (3496)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.LName
		FROM STUDENT AS T1
		JOIN VOTING_RECORD AS T2 ON T1.StuID = PRESIDENT_Vote INTERSECT
		SELECT DISTINCT LName
		FROM STUDENT
		WHERE Advisor = "8741"

	        lname
	0  WoodsWS9Ei
	ACTUAL OUTPUT ====

		
		SELECT lname
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM student
		      WHERE (advisor = 8741)) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM voting_record AS RHS
		        WHERE (LHS.stuid = RHS.stuid) ))
		ORDER BY lname

	Empty DataFrame
	Columns: [lname]
	Index: []
Wrong output for fuzzied solution in instance spider/voter_2/0031 (3497)
	EXPECTED OUTPUT ====

		SELECT Major
		FROM STUDENT
		GROUP BY Major
		HAVING COUNT(*) < 3

	   major
	0     48
	1     50
	2    518
	3    521
	4    522
	5    548
	6    550
	7    602
	ACTUAL OUTPUT ====

		
		SELECT major
		FROM
		  (SELECT major,
		          COUNT() AS n
		   FROM student
		   GROUP BY major)
		WHERE (n <= 3)
		ORDER BY major

	   major
	0     48
	1     50
	2    518
	3    521
	4    522
	5    548
	6    550
	7    600
	8    601
	9    602
Wrong output for base solution in instance spider/gas_company/0008 (3500)
	EXPECTED OUTPUT ====

	  main_industry  sum_market_value_
	0       Banking              580.4
	1  Conglomerate              415.9
	2   Oil and gas             1257.1
	ACTUAL OUTPUT ====

		SELECT main_industry,
		       sum(market_value)
		FROM company
		GROUP BY main_industry

	  main_industry  sum(market_value)
	0       Banking              580.4
	1  Conglomerate              415.9
	2   Oil and gas             1257.1
Wrong output for ground truth in instance spider/gas_company/0008 (3500)
Error while executing solution for instance spider/gas_company/0012 (3506)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT open_year) OVER () AS count___
FROM gas_station
WHERE (open_year >= 2000
       AND open_year >= 2005)
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/gas_company/0015 (3507)
	EXPECTED OUTPUT ====

		SELECT headquarters
		FROM company
		EXCEPT
		SELECT headquarters
		FROM company
		WHERE main_industry = 'Banking'

	        headquarters
	0             9vc1DR
	1              China
	2         D7vh)China
	3           Hm UK9iw
	4         NFMxJSBydU
	5        Netherlands
	6   NetherlandsVIdHx
	7         OFujSChina
	8                  U
	9                 UK
	10  UjgUbNetherlands
	11          bAhy(o0m
	12              hina
	ACTUAL OUTPUT ====

		
		SELECT `headquarters`
		FROM
		  (SELECT *
		   FROM `company` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `company`
		           WHERE (`main_industry` = 'Banking')) AS RHS
		        WHERE (LHS.headquarters = RHS.headquarters) ))
		ORDER BY headquarters

	        headquarters
	0             9vc1DR
	1              China
	2              China
	3              China
	4              China
	5         D7vh)China
	6           Hm UK9iw
	7         NFMxJSBydU
	8        Netherlands
	9        Netherlands
	10       Netherlands
	11       Netherlands
	12  NetherlandsVIdHx
	13        OFujSChina
	14                 U
	15                UK
	16                UK
	17  UjgUbNetherlands
	18          bAhy(o0m
	19              hina
	20              hina
	21              hina
	22              hina
No solution for instance spider/gas_company/0005 (3508)
Wrong output for fuzzied solution in instance spider/gas_company/0020 (3511)
	EXPECTED OUTPUT ====

		SELECT manager_name
		FROM gas_station
		WHERE open_year > 2000
		GROUP BY manager_name
		ORDER BY count(*) DESC
		LIMIT 1

	  manager_name
	0     Tom Whit
	ACTUAL OUTPUT ====

		
		SELECT manager_name
		FROM
		  (SELECT manager_name,
		          COUNT(DISTINCT open_year) AS n_distinct
		   FROM gas_station
		   GROUP BY manager_name)
		WHERE (n_distinct > 2000
		       OR n_distinct != 1)
		ORDER BY manager_name

	              manager_name
	0  Simon Cope Derek Marloe
	1                 Tom Whit
No solution for instance spider/gas_company/0023 (3515)
Wrong output for fuzzied solution in instance spider/gas_company/0014 (3517)
	EXPECTED OUTPUT ====

		SELECT headquarters
		FROM company
		WHERE main_industry = 'Banking' INTERSECT
		  SELECT headquarters
		  FROM company WHERE main_industry = 'Oil and gas'

	Empty DataFrame
	Columns: [headquarters]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `headquarters`
		FROM `company`
		WHERE (`main_industry` = 'Banking'
		       AND `main_industry` != 'Oil and gas')
		ORDER BY headquarters

	  headquarters
	0        China
	1          USA
No solution for instance spider/gas_company/0009 (3518)
Wrong output for fuzzied solution in instance spider/solvency_ii/0008 (3521)
	EXPECTED OUTPUT ====

		SELECT Product_Type_Code
		FROM Products
		GROUP BY Product_Type_Code
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  product_type_code
	0             Books
	ACTUAL OUTPUT ====

		
		SELECT product_type_code_other AS product_type_code
		FROM
		  (SELECT LHS.product_id AS product_id,
		          LHS.product_type_code AS product_type_code,
		          LHS.product_name AS product_name,
		          LHS.product_price AS product_price,
		          RHS.product_type_code AS product_type_code_other
		   FROM products AS LHS
		   INNER JOIN
		     (SELECT product_type_code,
		             COUNT() AS n
		      FROM products
		      GROUP BY product_type_code) AS RHS ON (LHS.product_id = RHS.n))
		ORDER BY product_type_code

	Empty DataFrame
	Columns: [product_type_code]
	Index: []
Wrong output for fuzzied solution in instance spider/solvency_ii/0013 (3523)
	EXPECTED OUTPUT ====

		SELECT T1.Product_Name
		FROM Products AS T1
		JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID
		GROUP BY T1.Product_Name
		HAVING COUNT(*) >= 2

	            product_name
	0              Men suits
	1         Trading Policy
	2       Trading Policy B
	3         U2yuaMen suits
	4  Uex1CTrading Policy B
	5          YoNDinningl5u
	ACTUAL OUTPUT ====

		
		SELECT product_name
		FROM
		  (SELECT LHS.product_id AS product_id,
		          LHS.n AS n,
		          RHS.product_type_code AS product_type_code,
		          RHS.product_name AS product_name,
		          RHS.product_price AS product_price
		   FROM
		     (SELECT product_id,
		             COUNT() AS n
		      FROM products_in_events
		      GROUP BY product_id) AS LHS
		   LEFT JOIN products AS RHS ON (LHS.product_id = RHS.product_id))
		WHERE (n >= 2)
		ORDER BY product_name

	            product_name
	0              Men suits
	1         Trading Policy
	2         Trading Policy
	3       Trading Policy B
	4       Trading Policy B
	5         U2yuaMen suits
	6  Uex1CTrading Policy B
	7          YoNDinningl5u
Wrong output for fuzzied solution in instance spider/solvency_ii/0004 (3525)
	EXPECTED OUTPUT ====

		SELECT Product_Price
		FROM Products
		WHERE Product_Name = "Dining"
		  OR Product_Name = "Trading Policy"

	   product_price
	0         932.27
	1        1336.27
	2        3541.15
	3        3541.15
	4        3541.18
	ACTUAL OUTPUT ====

		
		SELECT `product_price`
		FROM `products`
		WHERE (`product_name` = 'Trading Policy')
		ORDER BY product_price

	Empty DataFrame
	Columns: [product_price]
	Index: []
Wrong output for base solution in instance spider/solvency_ii/0005 (3528)
	EXPECTED OUTPUT ====

	   avg_product_price_
	0         2852.780667
	ACTUAL OUTPUT ====

		SELECT avg(Product_Price)
		FROM Products

	   avg(product_price)
	0         2852.780667
Wrong output for ground truth in instance spider/solvency_ii/0005 (3528)
Wrong output for fuzzied solution in instance spider/solvency_ii/0014 (3531)
	EXPECTED OUTPUT ====

		SELECT T1.Product_Name
		FROM Products AS T1
		JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID
		GROUP BY T1.Product_Name
		HAVING COUNT(*) >= 2
		ORDER BY T1.Product_Name

	            product_name
	0              Men suits
	1         Trading Policy
	2       Trading Policy B
	3         U2yuaMen suits
	4  Uex1CTrading Policy B
	5          YoNDinningl5u
	ACTUAL OUTPUT ====

		
		SELECT product_name
		FROM
		  (SELECT LHS.product_id AS product_id,
		          LHS.n AS n,
		          RHS.product_type_code AS product_type_code,
		          RHS.product_name AS product_name,
		          RHS.product_price AS product_price
		   FROM
		     (SELECT product_id,
		             COUNT() AS n
		      FROM products_in_events
		      GROUP BY product_id) AS LHS
		   LEFT JOIN products AS RHS ON (LHS.product_id = RHS.product_id))
		WHERE (n >= 2)
		ORDER BY product_name

	            product_name
	0              Men suits
	1         Trading Policy
	2         Trading Policy
	3       Trading Policy B
	4       Trading Policy B
	5         U2yuaMen suits
	6  Uex1CTrading Policy B
	7          YoNDinningl5u
Wrong output for fuzzied solution in instance spider/solvency_ii/0010 (3534)
	EXPECTED OUTPUT ====

		SELECT Product_Type_Code
		FROM Products
		WHERE Product_Price > 4500 INTERSECT
		  SELECT Product_Type_Code
		  FROM Products WHERE Product_Price < 3000

	Empty DataFrame
	Columns: [product_type_code]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT product_type_code
		FROM products
		WHERE (product_price >= 4500.0
		       OR product_price = 3000.0)
		ORDER BY product_type_code

	  product_type_code
	0     GFRClothesUVZ
No solution for instance spider/college_3/0033 (3535)
Wrong output for fuzzied solution in instance spider/college_3/0036 (3537)
	EXPECTED OUTPUT ====

		SELECT DName
		FROM DEPARTMENT
		WHERE Division = "AS"
		UNION
		SELECT DName
		FROM DEPARTMENT
		WHERE Division = "EN"
		  AND Building = "NEB"

	                     dname
	0           EconomicstDdnG
	1                   Englis
	2                  English
	3   Mechanical Engineering
	4  V8RPolitical ScienceX5o
	ACTUAL OUTPUT ====

		
		SELECT `dname`
		FROM
		  (SELECT *
		   FROM `department`
		   WHERE (`division` != 'AS'
		          OR `building` != 'NEB'))
		WHERE (`division` != 'EN'
		       OR `building` = 'NEB')
		ORDER BY dname

	                      dname
	0           0J2EconomicsQ9B
	1                  Economic
	2            EconomicstDdnG
	3                    Englis
	4                   English
	5                   English
	6          MathematicsW9jZ1
	7    Mechanical Engineering
	8    Mechanical Engineering
	9         Political Science
	10  V8RPolitical ScienceX5o
	11                 conomics
Wrong output for fuzzied solution in instance spider/college_3/0003 (3540)
	EXPECTED OUTPUT ====

		SELECT CName
		FROM COURSE
		WHERE Credits = 1

	                                     cname
	0                           ECE LABORATORY
	1         INTRODUCTION TO COMPUTER SCIENCE
	2         INTRODUCTION TO COMPUTER SCIENCE
	3         INTRODUCTION TO COMPUTER SCIENCE
	4                       OLID STATE PHYSICS
	5   OgNINTRODUCTION TO COMPUTER SCIENCEf0n
	6                      SOLID STATE PHYSICS
	7                      SOLID STATE PHYSICS
	8                 UNIX SYSTEMS PROGRAMMING
	9    bpn6tINTRODUCTION TO COMPUTER SCIENCE
	10               gvCSOLID STATE PHYSICS3L1
	11                    vTYECE LABORATORYvPj
	ACTUAL OUTPUT ====

		
		SELECT cname
		FROM course
		WHERE (credits <= 1)
		ORDER BY cname

	                                     cname
	0                           ECE LABORATORY
	1         INTRODUCTION TO COMPUTER SCIENCE
	2         INTRODUCTION TO COMPUTER SCIENCE
	3         INTRODUCTION TO COMPUTER SCIENCE
	4         INTRODUCTION TO COMPUTER SCIENCE
	5                       OLID STATE PHYSICS
	6   OgNINTRODUCTION TO COMPUTER SCIENCEf0n
	7                      SOLID STATE PHYSICS
	8                      SOLID STATE PHYSICS
	9                 UNIX SYSTEMS PROGRAMMING
	10   bpn6tINTRODUCTION TO COMPUTER SCIENCE
	11               gvCSOLID STATE PHYSICS3L1
	12                    vTYECE LABORATORYvPj
Wrong output for fuzzied solution in instance spider/college_3/0027 (3541)
	EXPECTED OUTPUT ====

		SELECT T2.Dname,
		       T2.Room
		FROM COURSE AS T1
		JOIN DEPARTMENT AS T2 ON T1.DNO = T2.DNO
		WHERE T1.CName = "INTRODUCTION TO COMPUTER SCIENCE"

	                         dname       room
	0                      English         38
	1                  Mathematics         22
	2             MathematicsMO0MO        382
	3             MathematicsMO0MO        382
	4            Political Science         24
	5            Political Science  XKz439Zut
	6  Y8nq4Mechanical Engineering    25hqfJp
	7  oMm1FMechanical Engineering    24hWGqk
	ACTUAL OUTPUT ====

		
		SELECT `dname`,
		       `room`
		FROM
		  (SELECT *
		   FROM `department` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `course`
		           WHERE (`cname` = 'INTRODUCTION TO COMPUTER SCIENCE')) AS RHS
		        WHERE (LHS.dno = RHS.dno) ))
		ORDER BY dname

	                         dname       room
	0                      English         38
	1                  Mathematics         22
	2             MathematicsMO0MO        382
	3            Political Science         24
	4            Political Science  XKz439Zut
	5  Y8nq4Mechanical Engineering    25hqfJp
	6  oMm1FMechanical Engineering    24hWGqk
No solution for instance spider/college_3/0022 (3542)
No solution for instance spider/college_3/0032 (3552)
Wrong output for fuzzied solution in instance spider/college_3/0035 (3554)
	EXPECTED OUTPUT ====

		SELECT CName
		FROM COURSE
		WHERE Credits = 3
		UNION
		SELECT CName
		FROM COURSE
		WHERE Credits = 1
		  AND Hours = 4

	                               cname
	0                           CIRCUITS
	1             COGNITIVE NEUROSCIENCE
	2   D3tPROBABILITY AND STATISTICSbHo
	3        INTRODUCTION TO PROBABILITY
	4                            IRCUITS
	5              OGNITIVE NEUROSCIENCE
	6         PROBABILITY AND STATISTICS
	7  kjeINTRODUCTION TO PROBABILITYbQM
	8          r97SOLID STATE PHYSICS7TE
	9                      syiuuCIRCUITS
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT cname
		FROM
		  (SELECT *
		   FROM course
		   WHERE (credits < 3
		          OR credits > 1))
		WHERE (hours = 4
		       OR credits = 3)
		ORDER BY cname

	                                cname
	0                            CIRCUITS
	1              COGNITIVE NEUROSCIENCE
	2    D3tPROBABILITY AND STATISTICSbHo
	3         INTRODUCTION TO PROBABILITY
	4                             IRCUITS
	5               OGNITIVE NEUROSCIENCE
	6           PROBABILITY AND STATISTIC
	7          PROBABILITY AND STATISTICS
	8                 SOLID STATE PHYSICS
	9   kjeINTRODUCTION TO PROBABILITYbQM
	10          r97SOLID STATE PHYSICS7TE
	11                      syiuuCIRCUITS
Wrong output for fuzzied solution in instance spider/college_3/0020 (3555)
	EXPECTED OUTPUT ====

		SELECT DName
		FROM DEPARTMENT
		EXCEPT
		SELECT T1.DName
		FROM DEPARTMENT AS T1
		JOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO

	                            dname
	0       1hZYPhysics and Astronomy
	1         0PCCivil Engineeringzqt
	2              5o0eLojZm(G)t7A2zW
	3          GnfPdjFc)akOMKxYeJP7qg
	4         Hispanic/Italian Studie
	5           IMjLu4T2CeMsgIJyoSbF4
	6          JlA4LCivil Engineering
	7  NMjHispanic/Italian Studiesw6K
	8         aFECivil Engineering2Jj
	9   qdQg Hispanic/Italian Studies
	ACTUAL OUTPUT ====

		
		SELECT dname
		FROM
		  (SELECT *
		   FROM department AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM minor_in AS RHS
		        WHERE (LHS.dno = RHS.dno) ))
		ORDER BY dname

	                             dname
	0        1hZYPhysics and Astronomy
	1          0PCCivil Engineeringzqt
	2               5o0eLojZm(G)t7A2zW
	3                Civil Engineering
	4                Civil Engineering
	5                Civil Engineering
	6           GnfPdjFc)akOMKxYeJP7qg
	7          Hispanic/Italian Studie
	8          Hispanic/Italian Studie
	9         Hispanic/Italian Studies
	10        Hispanic/Italian Studies
	11        Hispanic/Italian Studies
	12        Hispanic/Italian Studies
	13           IMjLu4T2CeMsgIJyoSbF4
	14          JlA4LCivil Engineering
	15  NMjHispanic/Italian Studiesw6K
	16           Physics and Astronomy
	17           Physics and Astronomy
	18           Physics and Astronomy
	19         aFECivil Engineering2Jj
	20         ispanic/Italian Studies
	21                ivil Engineering
	22   qdQg Hispanic/Italian Studies
Wrong output for fuzzied solution in instance spider/college_3/0019 (3556)
	EXPECTED OUTPUT ====

		SELECT T1.DName
		FROM DEPARTMENT AS T1
		JOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO
		GROUP BY T2.DNO
		ORDER BY count(*) DESC
		LIMIT 1

	               dname
	0  Political Science
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT dname
		FROM
		  (SELECT LHS.dno AS dno,
		          LHS.division AS division,
		          LHS.dname AS dname,
		          LHS.room AS room,
		          LHS.building AS building,
		          LHS.dphone AS dphone,
		          LHS.stuid AS stuid,
		          LHS.n AS n,
		          RHS.dno AS dno_other,
		          RHS.division AS division_other,
		          RHS.dname AS dname_other,
		          RHS.room AS room_other,
		          RHS.building AS building_other,
		          RHS.dphone AS dphone_other,
		          RHS.stuid AS stuid_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT LHS.dno AS dno,
		             LHS.division AS division,
		             LHS.dname AS dname,
		             LHS.room AS room,
		             LHS.building AS building,
		             LHS.dphone AS dphone,
		             LHS.stuid AS stuid,
		             RHS.n AS n
		      FROM
		        (SELECT LHS.dno AS dno,
		                LHS.division AS division,
		                LHS.dname AS dname,
		                LHS.room AS room,
		                LHS.building AS building,
		                LHS.dphone AS dphone,
		                RHS.stuid AS stuid
		         FROM department AS LHS
		         INNER JOIN minor_in AS RHS ON (LHS.dno = RHS.dno)) AS LHS
		      INNER JOIN
		        (SELECT room,
		                COUNT() AS n
		         FROM department
		         GROUP BY room) AS RHS ON (LHS.room = RHS.room)) AS LHS
		   CROSS JOIN
		     (SELECT LHS.dno AS dno,
		             LHS.division AS division,
		             LHS.dname AS dname,
		             LHS.room AS room,
		             LHS.building AS building,
		             LHS.dphone AS dphone,
		             LHS.stuid AS stuid,
		             RHS.n AS n
		      FROM
		        (SELECT LHS.dno AS dno,
		                LHS.division AS division,
		                LHS.dname AS dname,
		                LHS.room AS room,
		                LHS.building AS building,
		                LHS.dphone AS dphone,
		                RHS.stuid AS stuid
		         FROM department AS LHS
		         INNER JOIN minor_in AS RHS ON (LHS.dno = RHS.dno)) AS LHS
		      INNER JOIN
		        (SELECT room,
		                COUNT() AS n
		         FROM department
		         GROUP BY room) AS RHS ON (LHS.room = RHS.room)) AS RHS)
		WHERE (n > n_other)
		ORDER BY dname

	Empty DataFrame
	Columns: [dname]
	Index: []
Wrong output for fuzzied solution in instance spider/college_3/0007 (3557)
	EXPECTED OUTPUT ====

		SELECT COUNT(DISTINCT StuID)
		FROM ENROLLED_IN
		WHERE Grade = "B"

	   count(distinct stuid)
	0                      0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count_distinct_stuid_`
		FROM
		  (SELECT `grade`,
		          COUNT(DISTINCT `stuid`) AS `n_distinct`
		   FROM `enrolled_in`
		   GROUP BY `grade`)
		WHERE (`grade` = 'B')
		ORDER BY count_distinct_stuid_

	Empty DataFrame
	Columns: [count_distinct_stuid_]
	Index: []
No solution for instance spider/college_3/0034 (3558)
No solution for instance spider/college_3/0024 (3559)
No solution for instance spider/college_3/0021 (3560)
No solution for instance spider/college_3/0023 (3561)
No solution for instance spider/college_3/0009 (3564)
Wrong output for fuzzied solution in instance spider/college_3/0029 (3567)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T3.Fname
		FROM ENROLLED_IN AS T1
		JOIN GRADECONVERSION AS T2
		JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade
		AND T1.StuID = T3.StuID
		WHERE T2.gradepoint >= 3.8

	        fname
	0       RYc1i
	1        )SQi
	2   )SQiWim0Y
	3     8 RYc1i
	4         Eri
	5        Eric
	6       JrL(I
	7     Michael
	8       Stacy
	9   gJ5ZP)SQi
	10     ichael
	11        ric
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `fname`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`cid` AS `cid`,
		          `LHS`.`grade` AS `grade`,
		          `LHS`.`lettergrade` AS `lettergrade`,
		          `LHS`.`gradepoint` AS `gradepoint`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`cid` AS `cid`,
		             `LHS`.`grade` AS `grade`,
		             `RHS`.`lettergrade` AS `lettergrade`,
		             `RHS`.`gradepoint` AS `gradepoint`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`cid` AS `cid`,
		                `RHS`.`grade` AS `grade`
		         FROM `student` AS `LHS`
		         INNER JOIN `enrolled_in` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`
		      CROSS JOIN `gradeconversion` AS `RHS`) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT `stuid`,
		                `cid`,
		                `grade`,
		                `gradepoint`,
		                `grade` AS `lettergrade`
		         FROM
		           (SELECT `LHS`.`stuid` AS `stuid`,
		                   `LHS`.`cid` AS `cid`,
		                   `LHS`.`grade` AS `grade`,
		                   `RHS`.`gradepoint` AS `gradepoint`
		            FROM `enrolled_in` AS `LHS`
		            INNER JOIN `gradeconversion` AS `RHS` ON (`LHS`.`grade` = `RHS`.`lettergrade`)))
		      WHERE (`gradepoint` > '3.8')) AS RHS ON (LHS.stuid = RHS.stuid
		                                               AND LHS.cid = RHS.cid
		                                               AND LHS.grade = RHS.grade
		                                               AND LHS.lettergrade = RHS.lettergrade
		                                               AND LHS.gradepoint = RHS.gradepoint))
		ORDER BY fname

	        fname
	0       RYc1i
	1   )SQiWim0Y
	2     8 RYc1i
	3         Eri
	4        Eric
	5       JrL(I
	6     Michael
	7       Stacy
	8   gJ5ZP)SQi
	9      ichael
	10        ric
No solution for instance spider/college_3/0028 (3569)
Wrong output for fuzzied solution in instance spider/workshop_paper/0008 (3572)
	EXPECTED OUTPUT ====

		SELECT College
		FROM submission
		GROUP BY College
		ORDER BY COUNT(*) DESC
		LIMIT 1

	            college
	0  West Texas State
	ACTUAL OUTPUT ====

		
		SELECT college
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT author,
		                college,
		                COUNT() AS n
		         FROM submission
		         GROUP BY author,
		                  college)
		      ORDER BY college DESC)
		   LIMIT 1)

	                 college
	0  West Texas StatetYIwj
Error while executing solution for instance spider/workshop_paper/0013 (3574)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT author
FROM
  (SELECT LHS.submission_id AS submission_id,
          LHS.workshop_id AS workshop_id,
          LHS.result AS RESULT,
          LHS.n_distinct AS n_distinct,
          RHS.submission_id AS submission_id_other,
          RHS.scores AS scores,
          RHS.author AS author,
          RHS.college AS college,
          RHS.workshop_id AS workshop_id_other,
          RHS.result AS result_other
   FROM
     (SELECT submission_id,
             workshop_id,
             RESULT,
             COUNT(DISTINCT workshop_id) OVER () AS n_distinct
      FROM acceptance) AS LHS
   CROSS JOIN
     (SELECT LHS.submission_id AS submission_id,
             LHS.scores AS scores,
             LHS.author AS author,
             LHS.college AS college,
             RHS.workshop_id AS workshop_id,
             RHS.result AS RESULT
      FROM submission AS LHS
      INNER JOIN acceptance AS RHS ON (LHS.submission_id = RHS.submission_id)) AS RHS)
WHERE (workshop_id >= n_distinct
       AND n_distinct = workshop_id_other)
ORDER BY author]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/workshop_paper/0012 (3577)
	EXPECTED OUTPUT ====

		SELECT T2.Author,
		       COUNT(DISTINCT T1.workshop_id)
		FROM acceptance AS T1
		JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID
		GROUP BY T2.Author

	               author  count(distinct t1.workshop_id)
	0         Andy Bolton                               5
	1    Ofqe3Sammy Green                               5
	2         Rick Engles                               6
	3         Sammy Green                               4
	4          Steve Myer                               6
	5  lGPSteve RaiblekMe                               6
	ACTUAL OUTPUT ====

		
		SELECT author,
		       n AS count_distinct_t1_workshop_id_
		FROM
		  (SELECT LHS.submission_id AS submission_id,
		          LHS.scores AS scores,
		          LHS.author AS author,
		          LHS.college AS college,
		          RHS.n AS n
		   FROM submission AS LHS
		   INNER JOIN
		     (SELECT submission_id,
		             COUNT() AS n
		      FROM acceptance
		      GROUP BY submission_id) AS RHS ON (LHS.submission_id = RHS.submission_id))
		ORDER BY author

	               author  count_distinct_t1_workshop_id_
	0         Andy Bolton                               5
	1    Ofqe3Sammy Green                               5
	2         Rick Engles                               5
	3         Rick Engles                               5
	4         Sammy Green                               4
	5          Steve Myer                               6
	6  lGPSteve RaiblekMe                               6
Wrong output for fuzzied solution in instance spider/workshop_paper/0011 (3583)
	EXPECTED OUTPUT ====

		SELECT T1.Result
		FROM acceptance AS T1
		JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID
		ORDER BY T2.Scores DESC
		LIMIT 1

	          result
	0  RejectedMJmrV
	ACTUAL OUTPUT ====

		
		SELECT RESULT
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM acceptance AS LHS
		         WHERE EXISTS
		             (SELECT 1
		              FROM submission AS RHS
		              WHERE (LHS.submission_id = RHS.submission_id) ))
		      ORDER BY submission_id DESC)
		   LIMIT 1)

	     result
	0  Rejected
Wrong output for fuzzied solution in instance spider/film_rank/0002 (3585)
	EXPECTED OUTPUT ====

		SELECT DISTINCT Director
		FROM film

	               director
	0           John Huston
	1      John Huston8zCr2
	2  MrMrMTaylor Hackford
	3    Sylvester Stallone
	4       Taylor Hackford
	5  Taylor HackfordX3hSC
	6        aylor Hackford
	7            ohn Huston
	8     ylvester Stallone
	ACTUAL OUTPUT ====

		
		SELECT director
		FROM film
		ORDER BY director

	                director
	0            John Huston
	1            John Huston
	2            John Huston
	3       John Huston8zCr2
	4   MrMrMTaylor Hackford
	5     Sylvester Stallone
	6     Sylvester Stallone
	7        Taylor Hackford
	8        Taylor Hackford
	9        Taylor Hackford
	10       Taylor Hackford
	11       Taylor Hackford
	12  Taylor HackfordX3hSC
	13        aylor Hackford
	14        aylor Hackford
	15            ohn Huston
	16     ylvester Stallone
Wrong output for fuzzied solution in instance spider/film_rank/0017 (3586)
	EXPECTED OUTPUT ====

		SELECT Studio
		FROM film
		GROUP BY Studio
		HAVING COUNT(*) >= 2

	      studio
	0   Paramoun
	1  Paramount
	ACTUAL OUTPUT ====

		
		SELECT studio
		FROM
		  (SELECT studio,
		          COUNT() AS n
		   FROM film
		   GROUP BY studio)
		WHERE (n = 2)
		ORDER BY studio

	     studio
	0  Paramoun
Wrong output for base solution in instance spider/film_rank/0003 (3588)
	EXPECTED OUTPUT ====

	   avg_gross_in_dollar_
	0          1.148272e+08
	ACTUAL OUTPUT ====

		SELECT avg(Gross_in_dollar)
		FROM film

	   avg(gross_in_dollar)
	0          1.148272e+08
Wrong output for ground truth in instance spider/film_rank/0003 (3588)
Wrong output for fuzzied solution in instance spider/film_rank/0012 (3593)
	EXPECTED OUTPUT ====

		SELECT avg(T2.Number_cities)
		FROM film_market_estimation AS T1
		JOIN market AS T2 ON T1.Market_ID = T2.Market_ID
		WHERE T1.Low_Estimate > 10000

	  avg(t2.number_cities)
	0                  None
	ACTUAL OUTPUT ====

		
		SELECT number_cities AS avg_t2_number_cities_
		FROM
		  (SELECT market_id,
		          country,
		          number_cities,
		          market_id_other,
		          meanlow_estimate,
		          market_id AS estimation_id
		   FROM
		     (SELECT LHS.market_id AS market_id,
		             LHS.country AS country,
		             LHS.number_cities AS number_cities,
		             RHS.market_id AS market_id_other,
		             RHS.meanlow_estimate AS meanlow_estimate
		      FROM market AS LHS
		      INNER JOIN
		        (SELECT estimation_id,
		                market_id,
		                AVG(low_estimate) AS meanlow_estimate
		         FROM film_market_estimation
		         GROUP BY estimation_id,
		                  market_id) AS RHS ON (LHS.market_id = RHS.estimation_id)))
		WHERE (meanlow_estimate >= 10000.0
		       AND meanlow_estimate >= number_cities)
		ORDER BY avg_t2_number_cities_

	Empty DataFrame
	Columns: [avg_t2_number_cities_]
	Index: []
Wrong output for fuzzied solution in instance spider/film_rank/0005 (3595)
	EXPECTED OUTPUT ====

		SELECT TYPE
		FROM film_market_estimation
		WHERE YEAR = 1995

	           type
	0  Mass suicide
	1  Mass suicide
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT TYPE
		FROM film_market_estimation
		WHERE (YEAR >= 1995)
		ORDER BY TYPE

	           type
	0  Mass suicide
Wrong output for fuzzied solution in instance spider/film_rank/0016 (3596)
	EXPECTED OUTPUT ====

		SELECT Studio
		FROM film
		GROUP BY Studio
		ORDER BY COUNT(*) DESC
		LIMIT 1

	      studio
	0  Paramount
	ACTUAL OUTPUT ====

		
		SELECT studio
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT studio,
		                title,
		                COUNT() AS n
		         FROM film
		         GROUP BY studio,
		                  title)
		      ORDER BY title)
		   LIMIT 1)

	     studio
	0  Paramoun
No solution for instance spider/film_rank/0020 (3598)
Wrong output for fuzzied solution in instance spider/film_rank/0019 (3599)
	EXPECTED OUTPUT ====

		SELECT Studio
		FROM film
		WHERE Director = "Nicholas Meyer" INTERSECT
		  SELECT Studio
		  FROM film WHERE Director = "Walter Hill"

	Empty DataFrame
	Columns: [studio]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `studio`
		FROM `film`
		WHERE (`director` = 'Nicholas Meyer'
		       OR `director` = 'Walter Hill')
		ORDER BY studio

	            studio
	0    ColumbiaBIQ)G
	1  eB5ParamountveW
Wrong output for fuzzied solution in instance spider/film_rank/0007 (3600)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM market
		WHERE Number_cities < 300

	   count(*)
	0         6
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM market
		WHERE (number_cities <= 300)
		ORDER BY count___

	   count___
	0         7
Wrong output for fuzzied solution in instance spider/film_rank/0024 (3601)
	EXPECTED OUTPUT ====

		SELECT title,
		       director
		FROM film
		WHERE film_id NOT IN
		    (SELECT film_id
		     FROM film_market_estimation AS T1
		     JOIN market AS T2 ON T1.market_id = T2.Market_ID
		     WHERE country = 'China')

	                                        title              director
	0                                  Poltergeis           John Huston
	1                            Poltergeist0FD2H           John Huston
	2        aD8TqStar Trek II: The Wrath of Khan           John Huston
	3                                     Porky's  MrMrMTaylor Hackford
	4                                      Porky'    Sylvester Stallone
	5    The Best Little Whorehouse in TexasZso3B    Sylvester Stallone
	6   2CqThe Best Little Whorehouse in Texasp21       Taylor Hackford
	7    EWSGaThe Best Little Whorehouse in Texas       Taylor Hackford
	8                                 Poltergeist       Taylor Hackford
	9                                      Porky'       Taylor Hackford
	10         The Best Little Whorehouse in Texa       Taylor Hackford
	11                                Poltergeist  Taylor HackfordX3hSC
	12        The Best Little Whorehouse in Texas        aylor Hackford
	13   The Best Little Whorehouse in TexasET2Ek            ohn Huston
	14             Star Trek II: The Wrath of Kha     ylvester Stallone
	ACTUAL OUTPUT ====

		
		SELECT `title`,
		       `director`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`film_id` AS `film_id`,
		                `LHS`.`title` AS `title`,
		                `LHS`.`studio` AS `studio`,
		                `LHS`.`director` AS `director`,
		                `LHS`.`gross_in_dollar` AS `gross_in_dollar`,
		                `RHS`.`market_id` AS `market_id`,
		                `RHS`.`country` AS `country`,
		                `RHS`.`number_cities` AS `number_cities`
		         FROM `film` AS `LHS`
		         CROSS JOIN `market` AS `RHS`)
		      WHERE (`country` = 'China')) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM film_market_estimation AS RHS
		        WHERE (LHS.film_id = RHS.film_id
		               AND LHS.market_id = RHS.market_id) ))
		ORDER BY title

	                                        title              director
	0                                  Poltergeis           John Huston
	1                                  Poltergeis           John Huston
	2                            Poltergeist0FD2H           John Huston
	3                            Poltergeist0FD2H           John Huston
	4        aD8TqStar Trek II: The Wrath of Khan           John Huston
	5        aD8TqStar Trek II: The Wrath of Khan           John Huston
	6    QtHX3The Best Little Whorehouse in Texas      John Huston8zCr2
	7                                     Porky's  MrMrMTaylor Hackford
	8                                     Porky's  MrMrMTaylor Hackford
	9                                      Porky'    Sylvester Stallone
	10                                     Porky'    Sylvester Stallone
	11   The Best Little Whorehouse in TexasZso3B    Sylvester Stallone
	12   The Best Little Whorehouse in TexasZso3B    Sylvester Stallone
	13  2CqThe Best Little Whorehouse in Texasp21       Taylor Hackford
	14  2CqThe Best Little Whorehouse in Texasp21       Taylor Hackford
	15   EWSGaThe Best Little Whorehouse in Texas       Taylor Hackford
	16   EWSGaThe Best Little Whorehouse in Texas       Taylor Hackford
	17                                Poltergeist       Taylor Hackford
	18                                Poltergeist       Taylor Hackford
	19                                     Porky'       Taylor Hackford
	20                                     Porky'       Taylor Hackford
	21         The Best Little Whorehouse in Texa       Taylor Hackford
	22         The Best Little Whorehouse in Texa       Taylor Hackford
	23                                Poltergeist  Taylor HackfordX3hSC
	24                                Poltergeist  Taylor HackfordX3hSC
	25        The Best Little Whorehouse in Texas        aylor Hackford
	26        The Best Little Whorehouse in Texas        aylor Hackford
	27                                 oltergeist        aylor Hackford
	28   The Best Little Whorehouse in TexasET2Ek            ohn Huston
	29   The Best Little Whorehouse in TexasET2Ek            ohn Huston
	30             Star Trek II: The Wrath of Kha     ylvester Stallone
	31             Star Trek II: The Wrath of Kha     ylvester Stallone
Wrong output for fuzzied solution in instance spider/film_rank/0023 (3603)
	EXPECTED OUTPUT ====

		SELECT t1.title
		FROM film AS T1
		JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID
		ORDER BY high_estimate DESC
		LIMIT 1

	                           title
	0  ET the Extra-Terrestrialuurnu
	ACTUAL OUTPUT ====

		
		SELECT title
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.estimation_id AS estimation_id,
		                LHS.low_estimate AS low_estimate,
		                LHS.high_estimate AS high_estimate,
		                LHS.film_id AS film_id,
		                LHS.type AS TYPE,
		                LHS.market_id AS market_id,
		                LHS.year AS YEAR,
		                RHS.title AS title,
		                RHS.studio AS studio,
		                RHS.director AS director,
		                RHS.gross_in_dollar AS gross_in_dollar
		         FROM film_market_estimation AS LHS
		         INNER JOIN film AS RHS ON (LHS.film_id = RHS.film_id))
		      ORDER BY high_estimate)
		   LIMIT 1)

	         title
	0  First Blood
Wrong output for fuzzied solution in instance spider/ship_mission/0008 (3610)
	EXPECTED OUTPUT ====

		SELECT TYPE
		FROM ship
		GROUP BY TYPE
		ORDER BY COUNT(*) DESC
		LIMIT 1

	          type
	0  Battle ship
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT TYPE
		FROM
		  (SELECT LHS.ship_id AS ship_id,
		          LHS.name AS name,
		          LHS.type AS TYPE,
		          LHS.nationality AS nationality,
		          LHS.tonnage AS tonnage,
		          RHS.ship_id AS ship_id_other,
		          RHS.tonnage AS tonnage_other
		   FROM ship AS LHS
		   INNER JOIN
		     (SELECT ship_id,
		             tonnage,
		             COUNT() AS n
		      FROM ship
		      GROUP BY ship_id,
		               tonnage) AS RHS ON (LHS.ship_id = RHS.n))
		ORDER BY TYPE

	Empty DataFrame
	Columns: [type]
	Index: []
Wrong output for fuzzied solution in instance spider/ship_mission/0013 (3612)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.Fate
		FROM mission AS T1
		JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID
		WHERE T2.Nationality = "United States"

	                       fate
	0  )U1(7Decommissioned 1950
	1       Decommissioned 1950
	2       Decommissioned 1959
	3  Decommissioned 19595RX3(
	4        Lost (burned) 1931
	5   b34wALost (burned) 1931
	6        ecommissioned 1959
	ACTUAL OUTPUT ====

		
		SELECT `fate`
		FROM
		  (SELECT `LHS`.`mission_id` AS `mission_id`,
		          `LHS`.`ship_id` AS `ship_id`,
		          `LHS`.`code` AS `code`,
		          `LHS`.`launched_year` AS `launched_year`,
		          `LHS`.`location` AS `location`,
		          `LHS`.`speed_knots` AS `speed_knots`,
		          `LHS`.`fate` AS `fate`,
		          `RHS`.`name` AS `name`,
		          `RHS`.`type` AS `type`,
		          `RHS`.`nationality` AS `nationality`,
		          `RHS`.`tonnage` AS `tonnage`
		   FROM `mission` AS `LHS`
		   LEFT JOIN `ship` AS `RHS` ON (`LHS`.`ship_id` = `RHS`.`ship_id`))
		WHERE (`nationality` = 'United States')
		ORDER BY fate

	                       fate
	0  )U1(7Decommissioned 1950
	1       Decommissioned 1950
	2       Decommissioned 1959
	3       Decommissioned 1959
	4  Decommissioned 19595RX3(
	5        Lost (burned) 1931
	6   b34wALost (burned) 1931
	7        ecommissioned 1959
Wrong output for fuzzied solution in instance spider/ship_mission/0006 (3613)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM ship
		ORDER BY Tonnage DESC
		LIMIT 1

	      name
	0  Ariadne
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM ship
		      ORDER BY name)
		   LIMIT 1)

	     name
	0  Ariadn
Wrong output for fuzzied solution in instance spider/ship_mission/0012 (3615)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM mission AS T1
		JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID
		WHERE T1.Launched_Year > 1928

	            name
	0   ))wAuthorI 8
	1          Appam
	2         Author
	3  Clan McTavish
	4  DromonbyjHXuH
	5   XDWAuthornxS
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.mission_id AS mission_id,
		          LHS.ship_id AS ship_id,
		          LHS.code AS code,
		          LHS.launched_year AS launched_year,
		          LHS.location AS LOCATION,
		          LHS.speed_knots AS speed_knots,
		          LHS.fate AS fate,
		          RHS.name AS name,
		          RHS.type AS TYPE,
		          RHS.nationality AS nationality,
		          RHS.tonnage AS tonnage
		   FROM mission AS LHS
		   LEFT JOIN ship AS RHS ON (LHS.ship_id = RHS.ship_id))
		WHERE (launched_year >= 1928)
		ORDER BY name

	            name
	0   ))wAuthorI 8
	1          Appam
	2          Appam
	3         Author
	4  Clan McTavish
	5  Clan McTavish
	6  DromonbyjHXuH
	7   XDWAuthornxS
Wrong output for fuzzied solution in instance spider/ship_mission/0015 (3616)
	EXPECTED OUTPUT ====

		SELECT TYPE
		FROM ship
		WHERE Tonnage > 6000 INTERSECT
		  SELECT TYPE
		  FROM ship WHERE Tonnage < 4000

	Empty DataFrame
	Columns: [type]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT TYPE
		FROM ship
		WHERE (tonnage >= 6000
		       AND tonnage > 4000)
		ORDER BY TYPE

	         type
	0  Cargo ship
Wrong output for fuzzied solution in instance spider/ship_mission/0009 (3621)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM ship
		GROUP BY Nationality
		HAVING COUNT(*) > 2

	Empty DataFrame
	Columns: [nationality]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT nationality
		FROM
		  (SELECT nationality
		   FROM ship INTERSECT SELECT nationality
		   FROM ship)
		ORDER BY nationality

	            nationality
	0   9rnPfUnited Kingdom
	1         United Kingdo
	2        United Kingdom
	3  kIUUnited KingdomLo5
Wrong output for fuzzied solution in instance spider/product_catalog/0002 (3624)
	EXPECTED OUTPUT ====

		SELECT attribute_data_type
		FROM Attribute_Definitions
		GROUP BY attribute_data_type
		HAVING count(*) > 3

	Empty DataFrame
	Columns: [attribute_data_type]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT attribute_data_type
		FROM
		  (SELECT attribute_id,
		          attribute_name,
		          attribute_data_type,
		          COUNT(*) OVER () AS n
		   FROM attribute_definitions)
		WHERE (n > 3)
		ORDER BY attribute_data_type

	  attribute_data_type
	0                Bool
	1                 ool
	2           t1pj0Bool
Wrong output for fuzzied solution in instance spider/product_catalog/0017 (3625)
	EXPECTED OUTPUT ====

		SELECT t1.attribute_name,
		       t1.attribute_id
		FROM Attribute_Definitions AS t1
		JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id
		WHERE t2.attribute_value = 0

	   attribute_name  attribute_id
	0           Black             2
	1           Black             2
	2           Black             2
	3           Black             2
	4            weet             3
	5            weet             3
	6            weet             3
	7            weet             3
	8            weet             3
	9            weet             3
	10           weet             3
	11           weet             3
	12           weet             3
	13     BlackdWLsK             4
	14     BlackdWLsK             4
	15     BlackdWLsK             4
	16     BlackdWLsK             4
	17    w()Black0gt             5
	18    w()Black0gt             5
	19    w()Black0gt             5
	20    w()Black0gt             5
	ACTUAL OUTPUT ====

		
		SELECT attribute_name,
		       attribute_id
		FROM
		  (SELECT LHS.attribute_id AS attribute_id,
		          LHS.attribute_name AS attribute_name,
		          LHS.attribute_data_type AS attribute_data_type,
		          LHS.catalog_entry_id AS catalog_entry_id,
		          LHS.catalog_level_number AS catalog_level_number,
		          LHS.attribute_value AS attribute_value
		   FROM
		     (SELECT LHS.attribute_id AS attribute_id,
		             LHS.attribute_name AS attribute_name,
		             LHS.attribute_data_type AS attribute_data_type,
		             RHS.catalog_entry_id AS catalog_entry_id,
		             RHS.catalog_level_number AS catalog_level_number,
		             RHS.attribute_value AS attribute_value
		      FROM attribute_definitions AS LHS
		      INNER JOIN catalog_contents_additional_attributes AS RHS ON (LHS.attribute_id = RHS.attribute_id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM catalog_contents_additional_attributes
		      WHERE (attribute_value = 0)) AS RHS ON (LHS.attribute_id = RHS.attribute_id
		                                              AND LHS.catalog_entry_id = RHS.catalog_entry_id
		                                              AND LHS.catalog_level_number = RHS.catalog_level_number
		                                              AND LHS.attribute_value = RHS.attribute_value))
		ORDER BY attribute_name

	   attribute_name  attribute_id
	0           Black             2
	1           Black             2
	2           Black             2
	3           Black             2
	4            weet             3
	5            weet             3
	6            weet             3
	7            weet             3
	8            weet             3
	9            weet             3
	10           weet             3
	11           weet             3
	12           weet             3
	13           weet             3
	14           weet             3
	15           weet             3
	16           weet             3
	17     BlackdWLsK             4
	18     BlackdWLsK             4
	19     BlackdWLsK             4
	20     BlackdWLsK             4
	21    w()Black0gt             5
	22    w()Black0gt             5
	23    w()Black0gt             5
	24    w()Black0gt             5
No solution for instance spider/product_catalog/0008 (3626)
Wrong output for fuzzied solution in instance spider/product_catalog/0013 (3628)
	EXPECTED OUTPUT ====

		SELECT catalog_entry_name
		FROM catalog_contents
		ORDER BY capacity ASC
		LIMIT 1

	  catalog_entry_name
	0  Diet Mountain Dew
	ACTUAL OUTPUT ====

		
		SELECT catalog_entry_name
		FROM
		  (SELECT catalog_entry_id,
		          catalog_entry_id AS catalog_level_number,
		          parent_entry_id,
		          previous_entry_id,
		          next_entry_id,
		          catalog_entry_name,
		          product_stock_number,
		          price_in_dollars,
		          price_in_euros,
		          price_in_pounds,
		          capacity,
		          LENGTH,
		          height,
		          width,
		          parent_entry_id_other,
		          previous_entry_id_other,
		          next_entry_id_other,
		          catalog_entry_name_other,
		          product_stock_number_other,
		          price_in_dollars_other,
		          price_in_euros_other,
		          price_in_pounds_other,
		          capacity_other,
		          length_other,
		          height_other,
		          width_other
		   FROM
		     (SELECT LHS.catalog_entry_id AS catalog_entry_id,
		             LHS.catalog_level_number AS catalog_level_number,
		             LHS.parent_entry_id AS parent_entry_id,
		             LHS.previous_entry_id AS previous_entry_id,
		             LHS.next_entry_id AS next_entry_id,
		             LHS.catalog_entry_name AS catalog_entry_name,
		             LHS.product_stock_number AS product_stock_number,
		             LHS.price_in_dollars AS price_in_dollars,
		             LHS.price_in_euros AS price_in_euros,
		             LHS.price_in_pounds AS price_in_pounds,
		             LHS.capacity AS capacity,
		             LHS.length AS LENGTH,
		             LHS.height AS height,
		             LHS.width AS width,
		             RHS.parent_entry_id AS parent_entry_id_other,
		             RHS.previous_entry_id AS previous_entry_id_other,
		             RHS.next_entry_id AS next_entry_id_other,
		             RHS.catalog_entry_name AS catalog_entry_name_other,
		             RHS.product_stock_number AS product_stock_number_other,
		             RHS.price_in_dollars AS price_in_dollars_other,
		             RHS.price_in_euros AS price_in_euros_other,
		             RHS.price_in_pounds AS price_in_pounds_other,
		             RHS.capacity AS capacity_other,
		             RHS.length AS length_other,
		             RHS.height AS height_other,
		             RHS.width AS width_other
		      FROM catalog_contents AS LHS
		      INNER JOIN catalog_contents AS RHS ON (LHS.catalog_entry_id = RHS.catalog_level_number
		                                                AND LHS.previous_entry_id = RHS.catalog_entry_id)))
		ORDER BY catalog_entry_name

	Empty DataFrame
	Columns: [catalog_entry_name]
	Index: []
Wrong output for fuzzied solution in instance spider/product_catalog/0006 (3629)
	EXPECTED OUTPUT ====

		SELECT catalog_publisher
		FROM catalogs
		GROUP BY catalog_publisher
		ORDER BY count(*) DESC
		LIMIT 1

	    catalog_publisher
	0  Murray Coffee shop
	ACTUAL OUTPUT ====

		
		SELECT catalog_publisher
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT catalog_publisher,
		                COUNT() AS n
		         FROM catalogs
		         GROUP BY catalog_publisher)
		      ORDER BY catalog_publisher DESC)
		   LIMIT 1)

	                  catalog_publisher
	0  WCLRussel-Gislason Lemon shopYIb
Wrong output for fuzzied solution in instance spider/product_catalog/0004 (3630)
	EXPECTED OUTPUT ====

		SELECT catalog_level_name,
		       catalog_level_number
		FROM Catalog_Structure
		WHERE catalog_level_number BETWEEN 5 AND 10

	  catalog_level_name  catalog_level_number
	0       Sub-Category                     7
	1       Sub-Category                     9
	2       Sub-Category                    10
	3        ub-Category                     8
	ACTUAL OUTPUT ====

		
		SELECT catalog_level_name,
		       catalog_level_number
		FROM catalog_structure
		WHERE (catalog_level_number > 5
		       OR catalog_level_number > 10)
		ORDER BY catalog_level_name

	  catalog_level_name  catalog_level_number
	0       Sub-Category                     7
	1       Sub-Category                     9
	2       Sub-Category                    10
	3  Sub-CategoryqrEOA                    11
	4        ub-Category                     8
Wrong output for fuzzied solution in instance spider/product_catalog/0012 (3631)
	EXPECTED OUTPUT ====

		SELECT catalog_entry_name
		FROM catalog_contents
		ORDER BY height DESC
		LIMIT 1

	  catalog_entry_name
	0  Diet Mountain Dew
	ACTUAL OUTPUT ====

		
		SELECT catalog_entry_name
		FROM
		  (SELECT catalog_entry_id,
		          catalog_entry_id AS catalog_level_number,
		          parent_entry_id,
		          previous_entry_id,
		          next_entry_id,
		          catalog_entry_name,
		          product_stock_number,
		          price_in_dollars,
		          price_in_euros,
		          price_in_pounds,
		          capacity,
		          LENGTH,
		          height,
		          width,
		          parent_entry_id_other,
		          previous_entry_id_other,
		          next_entry_id_other,
		          catalog_entry_name_other,
		          product_stock_number_other,
		          price_in_dollars_other,
		          price_in_euros_other,
		          price_in_pounds_other,
		          capacity_other,
		          length_other,
		          height_other,
		          width_other
		   FROM
		     (SELECT LHS.catalog_entry_id AS catalog_entry_id,
		             LHS.catalog_level_number AS catalog_level_number,
		             LHS.parent_entry_id AS parent_entry_id,
		             LHS.previous_entry_id AS previous_entry_id,
		             LHS.next_entry_id AS next_entry_id,
		             LHS.catalog_entry_name AS catalog_entry_name,
		             LHS.product_stock_number AS product_stock_number,
		             LHS.price_in_dollars AS price_in_dollars,
		             LHS.price_in_euros AS price_in_euros,
		             LHS.price_in_pounds AS price_in_pounds,
		             LHS.capacity AS capacity,
		             LHS.length AS LENGTH,
		             LHS.height AS height,
		             LHS.width AS width,
		             RHS.parent_entry_id AS parent_entry_id_other,
		             RHS.previous_entry_id AS previous_entry_id_other,
		             RHS.next_entry_id AS next_entry_id_other,
		             RHS.catalog_entry_name AS catalog_entry_name_other,
		             RHS.product_stock_number AS product_stock_number_other,
		             RHS.price_in_dollars AS price_in_dollars_other,
		             RHS.price_in_euros AS price_in_euros_other,
		             RHS.price_in_pounds AS price_in_pounds_other,
		             RHS.capacity AS capacity_other,
		             RHS.length AS length_other,
		             RHS.height AS height_other,
		             RHS.width AS width_other
		      FROM catalog_contents AS LHS
		      INNER JOIN catalog_contents AS RHS ON (LHS.catalog_entry_id = RHS.catalog_level_number
		                                                AND LHS.previous_entry_id = RHS.catalog_entry_id)))
		ORDER BY catalog_entry_name

	Empty DataFrame
	Columns: [catalog_entry_name]
	Index: []
No solution for instance spider/product_catalog/0005 (3633)
Wrong output for fuzzied solution in instance spider/product_catalog/0016 (3634)
	EXPECTED OUTPUT ====

		SELECT catalog_entry_name
		FROM catalog_contents
		WHERE LENGTH < 3
		  OR width > 5

	  catalog_entry_name
	0   6d1cnSprite Lemo
	1         Cream Soda
	2         Diet Pepsi
	3    Diet Pepsi4zBP8
	4    Diet Pepsiy0TVi
	5        Sprite Lemo
	6               imto
	7          ream Soda
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT catalog_entry_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT LHS.catalog_entry_id AS catalog_entry_id,
		             LHS.catalog_level_number AS catalog_level_number,
		             LHS.parent_entry_id AS parent_entry_id,
		             LHS.previous_entry_id AS previous_entry_id,
		             LHS.next_entry_id AS next_entry_id,
		             LHS.catalog_entry_name AS catalog_entry_name,
		             LHS.product_stock_number AS product_stock_number,
		             LHS.price_in_dollars AS price_in_dollars,
		             LHS.price_in_euros AS price_in_euros,
		             LHS.price_in_pounds AS price_in_pounds,
		             LHS.capacity AS capacity,
		             LHS.length AS LENGTH,
		             LHS.height AS height,
		             LHS.width AS width,
		             RHS.catalog_entry_id AS catalog_entry_id_other,
		             RHS.catalog_level_number AS catalog_level_number_other,
		             RHS.parent_entry_id AS parent_entry_id_other,
		             RHS.previous_entry_id AS previous_entry_id_other,
		             RHS.next_entry_id AS next_entry_id_other,
		             RHS.catalog_entry_name AS catalog_entry_name_other,
		             RHS.product_stock_number AS product_stock_number_other,
		             RHS.price_in_dollars AS price_in_dollars_other,
		             RHS.price_in_euros AS price_in_euros_other,
		             RHS.price_in_pounds AS price_in_pounds_other,
		             RHS.capacity AS capacity_other,
		             RHS.length AS length_other,
		             RHS.height AS height_other,
		             RHS.width AS width_other
		      FROM catalog_contents AS LHS
		      CROSS JOIN catalog_contents AS RHS)
		   WHERE (LENGTH = width
		          OR width = length_other))
		WHERE (width != 3
		       AND width != 5)
		ORDER BY catalog_entry_name

	  catalog_entry_name
	0    Diet Pepsiy0TVi
Wrong output for fuzzied solution in instance spider/product_catalog/0018 (3635)
	EXPECTED OUTPUT ====

		SELECT catalog_entry_name,
		       capacity
		FROM Catalog_Contents
		WHERE price_in_dollars > 700

	   catalog_entry_name capacity
	0    GLR1jGinger Beer         
	1         Ginger Beer         
	2         Ginger Beer         
	3          HxNgW2TODG         
	4           Root beer         
	5    YFRoSGinger Beer         
	6            anglaoji        0
	7               Vimto   0uZy1W
	8          Ginger Bee        1
	9        9Cho5YSXy0LN        2
	10        Ginger Beer        2
	11          Root beer        2
	12          Wanglaoji        2
	13         Vimto8Lglm   23Dpdx
	14        Ginger Beer   5nOkWq
	15           fOy3C0o2        6
	16        Ginger Beer        7
	17               imto        7
	18         OpmtbVimto   73wPbF
	19         3fSrCVimto        8
	20           anglaoji        8
	21        Ginger Beer        9
	22          Wanglaoji        C
	23          Root beer  FfE1I(P
	24       oqm6C5M7jvUG        J
	25        jNqG7EhfQhO  Ki4vsUk
	26           anglaoji        N
	27           anglaoji   eKzQf7
	28         0nvDjgOqMo  eMm7f7k
	29          Wanglaoji   kdcBw9
	30        xqpVimtoZXh   q3YB58
	31         VimtoDZJGc        s
	ACTUAL OUTPUT ====

		
		SELECT catalog_entry_name,
		       capacity
		FROM catalog_contents
		WHERE (price_in_dollars >= 700.0)
		ORDER BY catalog_entry_name

	   catalog_entry_name capacity
	0    GLR1jGinger Beer         
	1         Ginger Beer         
	2         Ginger Beer         
	3          HxNgW2TODG         
	4           Root beer         
	5    YFRoSGinger Beer         
	6          Ginger Bee        (
	7           Wanglaoji        0
	8            anglaoji        0
	9               Vimto   0uZy1W
	10         Ginger Bee        1
	11        Iq6Vimtos8I        1
	12          Root beer   1jp6Eq
	13       9Cho5YSXy0LN        2
	14        Ginger Beer        2
	15          Root beer        2
	16          Wanglaoji        2
	17         Vimto8Lglm   23Dpdx
	18        Ginger Beer   5nOkWq
	19           fOy3C0o2        6
	20        Ginger Beer        7
	21               imto        7
	22         OpmtbVimto   73wPbF
	23         3fSrCVimto        8
	24           anglaoji        8
	25        Ginger Beer        9
	26          Wanglaoji        C
	27          Root beer  FfE1I(P
	28       oqm6C5M7jvUG        J
	29        jNqG7EhfQhO  Ki4vsUk
	30           anglaoji        N
	31               5Ch5       aQ
	32           anglaoji   eKzQf7
	33         0nvDjgOqMo  eMm7f7k
	34          Wanglaoji   kdcBw9
	35        xqpVimtoZXh   q3YB58
	36         VimtoDZJGc        s
Wrong output for fuzzied solution in instance spider/product_catalog/0019 (3637)
	EXPECTED OUTPUT ====

		SELECT date_of_latest_revision
		FROM Catalogs
		GROUP BY date_of_latest_revision
		HAVING count(*) > 1

	Empty DataFrame
	Columns: [date_of_latest_revision]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT date_of_latest_revision
		FROM
		  (SELECT catalog_id,
		          date_of_latest_revision,
		          COUNT() AS n
		   FROM catalogs
		   GROUP BY catalog_id,
		            date_of_latest_revision)
		WHERE (n = 1)
		ORDER BY date_of_latest_revision

	  date_of_latest_revision
	0     2017-10-31 01:28:56
	1     2017-11-01 08:07:28
	2     2017-11-04 19:41:45
	3     2017-11-06 03:34:21
	4     2017-11-09 14:38:52
	5     2017-11-14 13:32:01
	6     2017-11-18 08:16:23
	7     2017-11-30 11:59:06
Wrong output for fuzzied solution in instance spider/product_catalog/0007 (3638)
	EXPECTED OUTPUT ====

		SELECT t1.catalog_name,
		       t1.date_of_publication
		FROM catalogs AS t1
		JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id
		WHERE catalog_level_number > 5

	      catalog_name  date_of_publication
	0    Breakfast Tea  2012-04-01 09:10:38
	1    Breakfast Tea  2012-04-01 09:10:38
	2    Breakfast Tea  2012-04-01 09:10:38
	3  Sparkling Water  2011-09-30 11:46:55
	4  Sparkling Water  2011-09-30 11:46:55
	5     reakfast Tea  2012-06-09 20:30:20
	ACTUAL OUTPUT ====

		
		SELECT CATALOG_NAME,
		       date_of_publication
		FROM
		  (SELECT LHS.catalog_level_number AS catalog_level_number,
		          LHS.catalog_id AS catalog_id,
		          LHS.catalog_level_name AS catalog_level_name,
		          RHS.catalog_name AS CATALOG_NAME,
		          RHS.catalog_publisher AS catalog_publisher,
		          RHS.date_of_publication AS date_of_publication,
		          RHS.date_of_latest_revision AS date_of_latest_revision
		   FROM catalog_structure AS LHS
		   INNER JOIN catalogs AS RHS ON (LHS.catalog_id = RHS.catalog_id))
		WHERE (catalog_level_number >= 5)
		ORDER BY CATALOG_NAME

	      catalog_name  date_of_publication
	0    Breakfast Tea  2012-04-01 09:10:38
	1    Breakfast Tea  2012-04-01 09:10:38
	2    Breakfast Tea  2012-04-01 09:10:38
	3              Jam  2012-01-14 20:29:15
	4  Sparkling Water  2011-09-30 11:46:55
	5  Sparkling Water  2011-09-30 11:46:55
	6     reakfast Tea  2012-06-09 20:30:20
Wrong output for fuzzied solution in instance spider/product_catalog/0001 (3640)
	EXPECTED OUTPUT ====

		SELECT distinct(catalog_entry_name)
		FROM catalog_contents

	  catalog_entry_name
	0    JmCream SodahS9
	1         Cream Soda
	2    Cream SodaqFSEI
	3  Diet Mountain Dew
	4         Diet Pepsi
	5   Sprite Lemoy0TVi
	6              Vimto
	7   YKeCream Sodade 
	8   iet Mountain Dew
	9               imto
	ACTUAL OUTPUT ====

		
		SELECT catalog_entry_name
		FROM catalog_contents
		ORDER BY catalog_entry_name

	   catalog_entry_name
	0     JmCream SodahS9
	1          Cream Soda
	2          Cream Soda
	3          Cream Soda
	4     Cream SodaqFSEI
	5   Diet Mountain Dew
	6          Diet Pepsi
	7    Sprite Lemoy0TVi
	8               Vimto
	9               Vimto
	10              Vimto
	11              Vimto
	12   YKeCream Sodade 
	13   iet Mountain Dew
	14               imto
	15               imto
Wrong output for fuzzied solution in instance spider/product_catalog/0014 (3641)
	EXPECTED OUTPUT ====

		SELECT catalog_entry_name
		FROM catalog_contents
		WHERE product_stock_number LIKE "2%"

	  catalog_entry_name
	0              Vimto
	1   YKeCream Sodade 
	2               imto
	ACTUAL OUTPUT ====

		
		SELECT catalog_entry_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM catalog_contents
		      ORDER BY height)
		   LIMIT 2)

	  catalog_entry_name
	0    Cream SodaqFSEI
	1   YKeCream Sodade 
Wrong output for fuzzied solution in instance spider/product_catalog/0009 (3642)
	EXPECTED OUTPUT ====

		SELECT catalog_entry_name
		FROM catalog_contents
		ORDER BY price_in_dollars DESC
		LIMIT 1

	  catalog_entry_name
	0               imto
	ACTUAL OUTPUT ====

		
		SELECT catalog_entry_name_other AS catalog_entry_name
		FROM
		  (SELECT next_entry_id AS catalog_entry_id,
		          catalog_level_number,
		          parent_entry_id,
		          previous_entry_id,
		          next_entry_id,
		          catalog_entry_name,
		          product_stock_number,
		          price_in_dollars,
		          price_in_euros,
		          price_in_pounds,
		          capacity,
		          LENGTH,
		          height,
		          width,
		          catalog_level_number_other,
		          parent_entry_id_other,
		          previous_entry_id_other,
		          next_entry_id_other,
		          catalog_entry_name_other,
		          product_stock_number_other,
		          price_in_dollars_other,
		          price_in_euros_other,
		          price_in_pounds_other,
		          length_other,
		          height_other,
		          width_other
		   FROM
		     (SELECT LHS.catalog_entry_id AS catalog_entry_id,
		             LHS.catalog_level_number AS catalog_level_number,
		             LHS.parent_entry_id AS parent_entry_id,
		             LHS.previous_entry_id AS previous_entry_id,
		             LHS.next_entry_id AS next_entry_id,
		             LHS.catalog_entry_name AS catalog_entry_name,
		             LHS.product_stock_number AS product_stock_number,
		             LHS.price_in_dollars AS price_in_dollars,
		             LHS.price_in_euros AS price_in_euros,
		             LHS.price_in_pounds AS price_in_pounds,
		             LHS.capacity AS capacity,
		             LHS.length AS LENGTH,
		             LHS.height AS height,
		             LHS.width AS width,
		             RHS.catalog_level_number AS catalog_level_number_other,
		             RHS.parent_entry_id AS parent_entry_id_other,
		             RHS.previous_entry_id AS previous_entry_id_other,
		             RHS.next_entry_id AS next_entry_id_other,
		             RHS.catalog_entry_name AS catalog_entry_name_other,
		             RHS.product_stock_number AS product_stock_number_other,
		             RHS.price_in_dollars AS price_in_dollars_other,
		             RHS.price_in_euros AS price_in_euros_other,
		             RHS.price_in_pounds AS price_in_pounds_other,
		             RHS.length AS length_other,
		             RHS.height AS height_other,
		             RHS.width AS width_other
		      FROM catalog_contents AS LHS
		      INNER JOIN catalog_contents AS RHS ON (LHS.next_entry_id = RHS.catalog_entry_id
		                                                AND LHS.height = RHS.capacity)))
		ORDER BY catalog_entry_name

	Empty DataFrame
	Columns: [catalog_entry_name]
	Index: []
Wrong output for base solution in instance spider/product_catalog/0011 (3643)
	EXPECTED OUTPUT ====

	   avg_price_in_euros_  min_price_in_euros_
	0           492.863333               159.84
	ACTUAL OUTPUT ====

		SELECT avg(price_in_euros),
		       min(price_in_euros)
		FROM catalog_contents

	   avg(price_in_euros)  min(price_in_euros)
	0           492.863333               159.84
Wrong output for ground truth in instance spider/product_catalog/0011 (3643)
Wrong output for fuzzied solution in instance spider/product_catalog/0010 (3644)
	EXPECTED OUTPUT ====

		SELECT t2.catalog_level_name
		FROM catalog_contents AS t1
		JOIN catalog_structure AS t2 ON t1.catalog_level_number = t2.catalog_level_number
		ORDER BY t1.price_in_dollars
		LIMIT 1

	  catalog_level_name
	0        ub-Category
	ACTUAL OUTPUT ====

		
		SELECT catalog_level_name
		FROM
		  (SELECT catalog_level_number,
		          catalog_id,
		          catalog_level_name,
		          catalog_entry_id,
		          parent_entry_id,
		          previous_entry_id,
		          catalog_entry_name,
		          product_stock_number,
		          price_in_dollars,
		          price_in_euros,
		          price_in_pounds,
		          capacity,
		          LENGTH,
		          height,
		          width,
		          catalog_level_number AS next_entry_id
		   FROM
		     (SELECT LHS.catalog_level_number AS catalog_level_number,
		             LHS.catalog_id AS catalog_id,
		             LHS.catalog_level_name AS catalog_level_name,
		             RHS.catalog_entry_id AS catalog_entry_id,
		             RHS.parent_entry_id AS parent_entry_id,
		             RHS.previous_entry_id AS previous_entry_id,
		             RHS.catalog_entry_name AS catalog_entry_name,
		             RHS.product_stock_number AS product_stock_number,
		             RHS.price_in_dollars AS price_in_dollars,
		             RHS.price_in_euros AS price_in_euros,
		             RHS.price_in_pounds AS price_in_pounds,
		             RHS.capacity AS capacity,
		             RHS.length AS LENGTH,
		             RHS.height AS height,
		             RHS.width AS width
		      FROM catalog_structure AS LHS
		      INNER JOIN catalog_contents AS RHS ON (LHS.catalog_level_number = RHS.next_entry_id
		                                                AND LHS.catalog_id = RHS.catalog_level_number)))
		ORDER BY catalog_level_name

	Empty DataFrame
	Columns: [catalog_level_name]
	Index: []
Wrong output for base solution in instance spider/news_report/0017 (3646)
	EXPECTED OUTPUT ====

	   avg_t1_age_  avg_years_working_  work_type
	0    30.333333            4.666667  Screening
	1    35.500000           14.000000      Music
	2    43.000000           16.500000       Host
	ACTUAL OUTPUT ====

		SELECT avg(t1.age),
		       avg(Years_working),
		       t2.work_type
		FROM journalist AS t1
		JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id
		GROUP BY t2.work_type

	   avg(t1.age)  avg(years_working)  work_type
	0    43.000000           16.500000       Host
	1    35.500000           14.000000      Music
	2    30.333333            4.666667  Screening
Wrong output for ground truth in instance spider/news_report/0017 (3646)
Wrong output for fuzzied solution in instance spider/news_report/0008 (3647)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM journalist
		GROUP BY Nationality
		ORDER BY COUNT(*) DESC
		LIMIT 1

	    nationality
	0  Vv6kpEngland
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT nationality
		FROM
		  (SELECT LHS.age AS age,
		          LHS.journalist_id AS journalist_id,
		          LHS.n AS n,
		          RHS.name AS name,
		          RHS.nationality AS nationality,
		          RHS.years_working AS years_working
		   FROM
		     (SELECT age,
		             journalist_id,
		             COUNT() AS n
		      FROM journalist
		      GROUP BY age,
		               journalist_id) AS LHS
		   INNER JOIN journalist AS RHS ON (LHS.n = RHS.journalist_id
		                                       AND LHS.age = RHS.age))
		ORDER BY nationality

	Empty DataFrame
	Columns: [nationality]
	Index: []
No solution for instance spider/news_report/0013 (3649)
Wrong output for fuzzied solution in instance spider/news_report/0006 (3650)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM journalist
		ORDER BY Years_working DESC
		LIMIT 1

	        nationality
	0  Northern Ireland
	ACTUAL OUTPUT ====

		
		SELECT nationality
		FROM
		  (SELECT LHS.journalist_id AS journalist_id,
		          LHS.name AS name,
		          LHS.nationality AS nationality,
		          LHS.age AS age,
		          LHS.years_working AS years_working,
		          RHS.journalist_id AS journalist_id_other,
		          RHS.nationality AS nationality_other,
		          RHS.age AS age_other
		   FROM journalist AS LHS
		   INNER JOIN journalist AS RHS ON (LHS.journalist_id = RHS.years_working
		                                       AND LHS.name = RHS.name))
		ORDER BY nationality

	Empty DataFrame
	Columns: [nationality]
	Index: []
Error while executing solution for instance spider/news_report/0012 (3652)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/news_report/0012 (3652)
No solution for instance spider/news_report/0014 (3659)
Wrong output for fuzzied solution in instance spider/news_report/0009 (3660)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM journalist
		WHERE Years_working > 10 INTERSECT
		  SELECT Nationality
		  FROM journalist WHERE Years_working < 3

	  nationality
	0     England
	1       Wales
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT nationality
		FROM journalist
		WHERE (years_working > 10
		       AND years_working != 3)
		ORDER BY nationality

	     nationality
	0     3I5VYAIb(4
	1        England
	2  FS2Englandmkd
	3   OGbHdEngland
	4          Wales
Wrong output for fuzzied solution in instance spider/railway/0008 (3665)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM manager
		ORDER BY Age DESC
		LIMIT 1

	            name
	0  Todd Hamilton
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM manager
		      ORDER BY name DESC)
		   LIMIT 1)

	                name
	0  wS1Tiger WoodshT 
Wrong output for fuzzied solution in instance spider/railway/0004 (3669)
	EXPECTED OUTPUT ====

		SELECT max(LEVEL)
		FROM manager
		WHERE Country != "Australia "

	   max(level)
	0  5610108887
	ACTUAL OUTPUT ====

		
		SELECT LEVEL AS max_level_
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LEVEL,
		                manager_id,
		                MAX(country) AS country
		         FROM manager
		         GROUP BY LEVEL,
		                  manager_id)
		      ORDER BY manager_id DESC)
		   LIMIT 1)

	   max_level_
	0  5424421524
No solution for instance spider/railway/0012 (3670)
Wrong output for base solution in instance spider/railway/0005 (3672)
	EXPECTED OUTPUT ====

	    avg_age_
	0  49.142857
	ACTUAL OUTPUT ====

		SELECT avg(Age)
		FROM manager

	    avg(age)
	0  49.142857
Wrong output for ground truth in instance spider/railway/0005 (3672)
Wrong output for fuzzied solution in instance spider/railway/0018 (3674)
	EXPECTED OUTPUT ====

		SELECT Country
		FROM manager
		WHERE Age > 50 INTERSECT
		  SELECT Country
		  FROM manager WHERE Age < 46

	Empty DataFrame
	Columns: [country]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM manager
		WHERE (age = 50
		       OR age = 46)
		ORDER BY country

	         country
	0      Australia
	1   United State
	2  United States
Wrong output for fuzzied solution in instance spider/railway/0014 (3680)
	EXPECTED OUTPUT ====

		SELECT Builder
		FROM railway
		GROUP BY Builder
		ORDER BY COUNT(*) DESC
		LIMIT 1

	       builder
	0  SECR Ashfor
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT builder_other AS builder
		FROM
		  (SELECT LHS.builder AS builder,
		          LHS.n AS n,
		          RHS.builder AS builder_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT builder,
		             COUNT() AS n
		      FROM railway
		      GROUP BY builder) AS LHS
		   CROSS JOIN
		     (SELECT builder,
		             COUNT() AS n
		      FROM railway
		      GROUP BY builder) AS RHS)
		WHERE (n < n_other)
		ORDER BY builder

	       builder
	0  GWR Swindon
	1  SECR Ashfor
Error while executing solution for instance spider/railway/0009 (3681)

(sqlite3.OperationalError) near "FROM": syntax error
[SQL: 
SELECT name,
       LOCATION
FROM
  (SELECT LHS.train_id AS train_id,
          LHS.train_num AS train_num,
          LHS.name AS name,
          LHS.
   FROM AS
   FROM,
           LHS.arrival AS arrival,
           LHS.railway_id AS railway_id,
           RHS.railway AS railway,
           RHS.builder AS builder,
           RHS.built AS built,
           RHS.wheels AS wheels,
           RHS.location AS LOCATION,
           RHS.objectnumber AS objectnumber
   FROM train AS LHS
   INNER JOIN railway AS RHS ON (LHS.railway_id = RHS.railway_id))
ORDER BY name]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/music_1/0042 (3684)
Wrong output for fuzzied solution in instance spider/music_1/0033 (3685)
	EXPECTED OUTPUT ====

		SELECT T2.song_name
		FROM files AS T1
		JOIN song AS T2 ON T1.f_id = T2.f_id
		WHERE T1.formats = "mp3" INTERSECT
		  SELECT song_name
		  FROM song WHERE resolution < 1000

	                     song_name
	0                 83zYsMy love
	1           Ami opar hoyetr5wt
	2                K82My love5sy
	3  Shukno patar nupur paePj838
	ACTUAL OUTPUT ====

		
		SELECT `song_name`
		FROM
		  (SELECT `LHS`.`f_id` AS `f_id`,
		          `LHS`.`artist_name` AS `artist_name`,
		          `LHS`.`file_size` AS `file_size`,
		          `LHS`.`duration` AS `duration`,
		          `LHS`.`formats` AS `formats`,
		          `RHS`.`song_name` AS `song_name`,
		          `RHS`.`artist_name` AS `artist_name_other`,
		          `RHS`.`country` AS `country`,
		          `RHS`.`genre_is` AS `genre_is`,
		          `RHS`.`rating` AS `rating`,
		          `RHS`.`languages` AS `languages`,
		          `RHS`.`releasedate` AS `releasedate`,
		          `RHS`.`resolution` AS `resolution`
		   FROM `files` AS `LHS`
		   INNER JOIN `song` AS `RHS` ON (`LHS`.`f_id` = `RHS`.`f_id`))
		WHERE (`formats` = 'mp3'
		       OR resolution = 1000.0)
		ORDER BY song_name

	                     song_name
	0            6JyAj ei akashAwy
	1                 83zYsMy love
	2           Ami opar hoyetr5wt
	3                K82My love5sy
	4       O70Tumi robe nirobewQF
	5  Shukno patar nupur paePj838
	6  Shukno patar nupur paeVxi1c
	7        tCFFKTumi robe nirobe
No solution for instance spider/music_1/0037 (3686)
No solution for instance spider/music_1/0036 (3688)
No solution for instance spider/music_1/0008 (3690)
Wrong output for fuzzied solution in instance spider/music_1/0039 (3691)
	EXPECTED OUTPUT ====

		SELECT T1.artist_name,
		       count(*)
		FROM artist AS T1
		JOIN song AS T2 ON T1.artist_name = T2.artist_name
		WHERE T2.languages = "english"
		GROUP BY T2.artist_name
		HAVING count(*) >= 1

	    artist_name  count(*)
	0  2CqFaridap21         2
	1     9wi(FTopu         1
	2         Farid         3
	3    KAqTopuCKn         3
	4          Prit         1
	5           Top         2
	6   am4ZNFarida         2
	7     bfzOeTopu         1
	8     nv)gWTopu         1
	9    zvETopuzRM         1
	ACTUAL OUTPUT ====

		
		SELECT `artist_name`,
		       `n` AS `count___`
		FROM
		  (SELECT *
		   FROM
		     (SELECT `artist_name`,
		             `languages`,
		             COUNT() AS `n`
		      FROM `song`
		      GROUP BY `artist_name`,
		               `languages`) AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM `artist` AS `RHS`
		        WHERE (`LHS`.`artist_name` = `RHS`.`artist_name`) ))
		WHERE (`languages` = 'english'
		       AND n = 1)
		ORDER BY artist_name

	  artist_name  count___
	0   9wi(FTopu         1
	1        Prit         1
	2   bfzOeTopu         1
	3   nv)gWTopu         1
	4  zvETopuzRM         1
Wrong output for fuzzied solution in instance spider/music_1/0038 (3692)
	EXPECTED OUTPUT ====

		SELECT min(T1.duration),
		       min(T2.rating),
		       T2.genre_is
		FROM files AS T1
		JOIN song AS T2 ON T1.f_id = T2.f_id
		GROUP BY T2.genre_is
		ORDER BY T2.genre_is

	  min(t1.duration)  min(t2.rating)     genre_is
	0             4:12            5.98  IQ)bluesGVR
	1             4:12            5.98   PrR1Bblues
	2             4:12            5.98        blues
	3             5:23            5.98         folk
	4             4:12            5.98         lues
	5             4:12            5.98       modern
	6             4:12            5.98   nPffolk jW
	ACTUAL OUTPUT ====

		
		SELECT duration AS min_t1_duration_,
		       rating AS min_t2_rating_,
		       genre_is
		FROM
		  (SELECT LHS.f_id AS f_id,
		          LHS.artist_name AS artist_name,
		          LHS.file_size AS file_size,
		          LHS.duration AS duration,
		          LHS.formats AS formats,
		          LHS.song_name AS song_name,
		          LHS.country AS country,
		          LHS.genre_is AS genre_is,
		          LHS.rating AS rating,
		          LHS.languages AS languages,
		          LHS.releasedate AS releasedate,
		          LHS.resolution AS resolution,
		          RHS.minduration AS minduration
		   FROM
		     (SELECT LHS.f_id AS f_id,
		             LHS.artist_name AS artist_name,
		             LHS.file_size AS file_size,
		             LHS.duration AS duration,
		             LHS.formats AS formats,
		             RHS.song_name AS song_name,
		             RHS.country AS country,
		             RHS.genre_is AS genre_is,
		             RHS.rating AS rating,
		             RHS.languages AS languages,
		             RHS.releasedate AS releasedate,
		             RHS.resolution AS resolution
		      FROM files AS LHS
		      INNER JOIN song AS RHS ON (LHS.f_id = RHS.f_id
		                                    AND LHS.artist_name = RHS.artist_name)) AS LHS
		   INNER JOIN
		     (SELECT duration,
		             formats,
		             MIN(duration) AS minduration
		      FROM files
		      GROUP BY duration,
		               formats) AS RHS ON (LHS.duration = RHS.duration
		                                   AND LHS.formats = RHS.formats))
		ORDER BY min_t1_duration_

	   min_t1_duration_  min_t2_rating_     genre_is
	0              5:23            9.99  IQ)bluesGVR
	1               :23            5.98  IQ)bluesGVR
	2              5:23            6.02   PrR1Bblues
	3              5:23           10.00   PrR1Bblues
	4         f 7)i2:56            5.98   PrR1Bblues
	5              5:23            5.99        blues
	6              5:23            6.01        blues
	7         f 7)i2:56           10.01        blues
	8              5:23            6.02         folk
	9              5:23           10.00         folk
	10             5:23           10.02       modern
Wrong output for fuzzied solution in instance spider/music_1/0027 (3694)
	EXPECTED OUTPUT ====

		SELECT f_id
		FROM files
		WHERE formats = "mp4"
		UNION
		SELECT f_id
		FROM song
		WHERE resolution > 720

	    f_id
	0   1.98
	1   1.99
	2   2.00
	3   2.01
	4   2.02
	5   4.98
	6   4.99
	7   5.00
	8   5.01
	9   5.02
	10  5.98
	11  5.99
	12  6.00
	13  6.01
	14  6.02
	ACTUAL OUTPUT ====

		
		SELECT `f_id`
		FROM
		  (SELECT `LHS`.`f_id` AS `f_id`,
		          `LHS`.`artist_name` AS `artist_name`,
		          `LHS`.`file_size` AS `file_size`,
		          `LHS`.`duration` AS `duration`,
		          `LHS`.`formats` AS `formats`,
		          `RHS`.`song_name` AS `song_name`,
		          `RHS`.`country` AS `country`,
		          `RHS`.`genre_is` AS `genre_is`,
		          `RHS`.`rating` AS `rating`,
		          `RHS`.`languages` AS `languages`,
		          `RHS`.`releasedate` AS `releasedate`,
		          `RHS`.`resolution` AS `resolution`
		   FROM `files` AS `LHS`
		   INNER JOIN `song` AS `RHS` ON (`LHS`.`artist_name` = `RHS`.`artist_name`
		                                     AND `LHS`.`f_id` = `RHS`.`f_id`))
		WHERE (`formats` = 'mp4'
		       AND resolution != 720.0)
		ORDER BY f_id

	   f_id
	0     2
Wrong output for fuzzied solution in instance spider/music_1/0048 (3695)
	EXPECTED OUTPUT ====

		SELECT T1.duration,
		       T1.file_size,
		       T1.formats
		FROM files AS T1
		JOIN song AS T2 ON T1.f_id = T2.f_id
		WHERE T2.genre_is = "pop"
		ORDER BY T2.song_name

	    duration     file_size formats
	0       5:23       3.78 MB     mp3
	1  5:23mRHbl  VvWGA4.10 MB     mp3
	ACTUAL OUTPUT ====

		
		SELECT `duration`,
		       `file_size`,
		       `formats`
		FROM
		  (SELECT *
		   FROM `files` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `song`
		           WHERE (`genre_is` = 'pop')) AS RHS
		        WHERE (LHS.f_id = RHS.f_id
		               AND LHS.artist_name = RHS.artist_name) ))
		ORDER BY duration

	Empty DataFrame
	Columns: [duration, file_size, formats]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
No solution for instance spider/music_1/0030 (3697)
Wrong output for fuzzied solution in instance spider/music_1/0013 (3698)
	EXPECTED OUTPUT ====

		SELECT artist_name
		FROM artist
		WHERE country = "UK" INTERSECT
		  SELECT artist_name
		  FROM song WHERE languages = "english"

	     artist_name
	0   237FaridaxTz
	1     4vVgVPrity
	2    Farida)78Pv
	3    FaridaiBah1
	4    Faridausp3q
	5          Prity
	6      SX 2VTopu
	7           Topu
	8      srAcuTopu
	9     tv5Toputru
	10   zEAPrityaMf
	ACTUAL OUTPUT ====

		
		SELECT `artist_name`
		FROM
		  (SELECT `LHS`.`artist_name` AS `artist_name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`gender` AS `gender`,
		          `LHS`.`preferred_genre` AS `preferred_genre`,
		          `RHS`.`song_name` AS `song_name`,
		          `RHS`.`artist_name` AS `artist_name_other`,
		          `RHS`.`f_id` AS `f_id`,
		          `RHS`.`genre_is` AS `genre_is`,
		          `RHS`.`rating` AS `rating`,
		          `RHS`.`languages` AS `languages`,
		          `RHS`.`releasedate` AS `releasedate`,
		          `RHS`.`resolution` AS `resolution`
		   FROM `artist` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `song`
		      WHERE (`country` = 'UK'
		             AND `languages` = 'english')) AS RHS ON (LHS.country = RHS.country))
		ORDER BY artist_name

	      artist_name
	0    237FaridaxTz
	1    237FaridaxTz
	2    237FaridaxTz
	3    237FaridaxTz
	4    237FaridaxTz
	..            ...
	182   zEAPrityaMf
	183   zEAPrityaMf
	184   zEAPrityaMf
	185   zEAPrityaMf
	186   zEAPrityaMf
	
	[187 rows x 1 columns]
Wrong output for fuzzied solution in instance spider/music_1/0006 (3699)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.file_size,
		                T1.formats
		FROM files AS T1
		JOIN song AS T2 ON T1.f_id = T2.f_id
		WHERE T2.resolution < 800

	      file_size    formats
	0        .10 MB        mp4
	1        4.10 M  Yg4mp4m1Z
	2       4.10 MB        mp4
	3       5.10 MB  ROWmp4XLk
	4       5.10 MB         mp
	5       5.10 MB        mp3
	6       5.10 MB        mp4
	7  GQS1V5.10 MB   5ZIHXmp4
	ACTUAL OUTPUT ====

		
		SELECT file_size,
		       formats
		FROM
		  (SELECT LHS.song_name AS song_name,
		          LHS.artist_name AS artist_name,
		          LHS.country AS country,
		          LHS.f_id AS f_id,
		          LHS.genre_is AS genre_is,
		          LHS.rating AS rating,
		          LHS.languages AS languages,
		          LHS.releasedate AS releasedate,
		          LHS.resolution AS resolution,
		          RHS.artist_name AS artist_name_other,
		          RHS.file_size AS file_size,
		          RHS.duration AS duration,
		          RHS.formats AS formats
		   FROM
		     (SELECT *
		      FROM song
		      WHERE (resolution < 800.0)) AS LHS
		   INNER JOIN files AS RHS ON (LHS.f_id = RHS.f_id))
		ORDER BY file_size

	       file_size    formats
	0         .10 MB        mp4
	1         4.10 M  Yg4mp4m1Z
	2         4.10 M  Yg4mp4m1Z
	3        4.10 MB        mp4
	4        4.10 MB        mp4
	5        4.10 MB        mp4
	6        4.10 MB        mp4
	7        4.10 MB        mp4
	8        4.10 MB        mp4
	9        5.10 MB  ROWmp4XLk
	10       5.10 MB  ROWmp4XLk
	11       5.10 MB  ROWmp4XLk
	12       5.10 MB         mp
	13       5.10 MB        mp3
	14       5.10 MB        mp3
	15       5.10 MB        mp3
	16       5.10 MB        mp4
	17       5.10 MB        mp4
	18  GQS1V5.10 MB   5ZIHXmp4
Wrong output for fuzzied solution in instance spider/music_1/0012 (3701)
	EXPECTED OUTPUT ====

		SELECT formats
		FROM files
		GROUP BY formats
		ORDER BY COUNT (*) DESC
		LIMIT 1

	  formats
	0     mp4
	ACTUAL OUTPUT ====

		
		SELECT formats_other AS formats
		FROM
		  (SELECT LHS.formats AS formats,
		          LHS.n AS n,
		          RHS.formats AS formats_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT formats,
		             COUNT() AS n
		      FROM files
		      GROUP BY formats) AS LHS
		   CROSS JOIN
		     (SELECT formats,
		             COUNT() AS n
		      FROM files
		      GROUP BY formats) AS RHS)
		WHERE (n < n_other)
		ORDER BY formats

	   formats
	0       mp
	1       mp
	2       mp
	3       mp
	4       mp
	5      mp3
	6      mp3
	7      mp3
	8      mp3
	9      mp3
	10     mp4
	11     mp4
	12     mp4
	13     mp4
	14     mp4
	15     mp4
	16     mp4
Wrong output for fuzzied solution in instance spider/music_1/0015 (3703)
	EXPECTED OUTPUT ====

		SELECT T1.country
		FROM artist AS T1
		JOIN song AS T2 ON T1.artist_name = T2.artist_name
		WHERE T1.gender = "Female"
		  AND T2.languages = "bangla"

	            country
	0        Bangladesh
	1        Bangladesh
	2        Bangladesh
	3   BangladeshsHiVk
	4   BangladeshsHiVk
	5        GsIUJIndia
	6        GsIUJIndia
	7                UK
	8                UK
	9                UK
	10        angladesh
	11        angladesh
	ACTUAL OUTPUT ====

		
		SELECT `country`
		FROM
		  (SELECT `song_name`,
		          `artist_name`,
		          `country`,
		          `f_id`,
		          `genre_is`,
		          `rating`,
		          `languages`,
		          `releasedate`,
		          `resolution`,
		          `artist_name_other`,
		          `gender`,
		          `genre_is` AS `preferred_genre`
		   FROM
		     (SELECT `LHS`.`song_name` AS `song_name`,
		             `LHS`.`artist_name` AS `artist_name`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`f_id` AS `f_id`,
		             `LHS`.`genre_is` AS `genre_is`,
		             `LHS`.`rating` AS `rating`,
		             `LHS`.`languages` AS `languages`,
		             `LHS`.`releasedate` AS `releasedate`,
		             `LHS`.`resolution` AS `resolution`,
		             `RHS`.`artist_name` AS `artist_name_other`,
		             `RHS`.`gender` AS `gender`
		      FROM `song` AS `LHS`
		      INNER JOIN `artist` AS `RHS` ON (`LHS`.`country` = `RHS`.`country`
		                                          AND `LHS`.`genre_is` = `RHS`.`preferred_genre`)))
		WHERE (`gender` = 'Female'
		       AND `languages` = 'bangla')
		ORDER BY country

	Empty DataFrame
	Columns: [country]
	Index: []
Wrong output for fuzzied solution in instance spider/music_1/0005 (3704)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.artist_name,
		                T1.country
		FROM artist AS T1
		JOIN song AS T2 ON T1.artist_name = T2.artist_name
		WHERE T2.rating > 9

	     artist_name          country
	0          Farid        angladesh
	1         Farida            India
	2   FtqFaridaZrQ            India
	3     KAqTopuCKn       Bangladesh
	4          Prity       Bangladesh
	5            Top  GsIUJBangladesh
	6      TopurfrOT  BangladeshTsXhj
	7    am4ZNFarida      21UIndia9y2
	8      bfzOeTopu       India4QGy)
	9     lpjTopuX8U            India
	10     nv)gWTopu  mGuzjBangladesh
	11    zvETopuzRM          PCueCUK
	ACTUAL OUTPUT ====

		
		SELECT artist_name,
		       country
		FROM
		  (SELECT artist_name,
		          country,
		          gender,
		          preferred_genre,
		          song_name,
		          artist_name_other,
		          f_id,
		          rating,
		          languages,
		          releasedate,
		          resolution,
		          preferred_genre AS genre_is
		   FROM
		     (SELECT LHS.artist_name AS artist_name,
		             LHS.country AS country,
		             LHS.gender AS gender,
		             LHS.preferred_genre AS preferred_genre,
		             RHS.song_name AS song_name,
		             RHS.artist_name AS artist_name_other,
		             RHS.f_id AS f_id,
		             RHS.rating AS rating,
		             RHS.languages AS languages,
		             RHS.releasedate AS releasedate,
		             RHS.resolution AS resolution
		      FROM artist AS LHS
		      INNER JOIN song AS RHS ON (LHS.country = RHS.country
		                                    AND LHS.preferred_genre = RHS.genre_is)))
		WHERE (rating >= 9.0)
		ORDER BY artist_name

	Empty DataFrame
	Columns: [artist_name, country]
	Index: []
No solution for instance spider/music_1/0016 (3705)
Wrong output for fuzzied solution in instance spider/music_1/0050 (3706)
	EXPECTED OUTPUT ====

		SELECT DISTINCT artist_name
		FROM artist
		WHERE country = "Bangladesh"
		EXCEPT
		SELECT DISTINCT artist_name
		FROM song
		WHERE rating > 7

	Empty DataFrame
	Columns: [artist_name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `artist_name_other` AS `artist_name`
		FROM
		  (SELECT `LHS`.`song_name` AS `song_name`,
		          `LHS`.`artist_name` AS `artist_name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`f_id` AS `f_id`,
		          `LHS`.`genre_is` AS `genre_is`,
		          `LHS`.`rating` AS `rating`,
		          `LHS`.`languages` AS `languages`,
		          `LHS`.`releasedate` AS `releasedate`,
		          `LHS`.`resolution` AS `resolution`,
		          `RHS`.`artist_name` AS `artist_name_other`,
		          `RHS`.`gender` AS `gender`,
		          `RHS`.`preferred_genre` AS `preferred_genre`
		   FROM
		     (SELECT *
		      FROM `song`
		      WHERE (`country` = 'Bangladesh'
		             AND rating != 7.0)) AS LHS
		   INNER JOIN artist AS RHS ON (LHS.country = RHS.country))
		ORDER BY artist_name

	  artist_name
	0   Topu1rWZT
	1   Topu1rWZT
	2   Topu1rWZT
	3   Topu1rWZT
	4   Topu1rWZT
	5   Topu1rWZT
	6   Topu1rWZT
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
No solution for instance spider/music_1/0041 (3710)
No solution for instance spider/music_1/0035 (3711)
No solution for instance spider/music_1/0019 (3713)
No solution for instance spider/music_1/0007 (3714)
Wrong output for fuzzied solution in instance spider/music_1/0034 (3715)
	EXPECTED OUTPUT ====

		SELECT artist_name
		FROM artist
		WHERE country = "UK" INTERSECT
		  SELECT T1.artist_name
		  FROM artist AS T1
		  JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = "english"

	     artist_name
	0   237FaridaxTz
	1     4vVgVPrity
	2    Farida)78Pv
	3    FaridaiBah1
	4    Faridausp3q
	5          Prity
	6      SX 2VTopu
	7           Topu
	8      srAcuTopu
	9     tv5Toputru
	10   zEAPrityaMf
	ACTUAL OUTPUT ====

		
		SELECT `artist_name`
		FROM
		  (SELECT `LHS`.`artist_name` AS `artist_name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`gender` AS `gender`,
		          `LHS`.`preferred_genre` AS `preferred_genre`,
		          `RHS`.`song_name` AS `song_name`,
		          `RHS`.`artist_name` AS `artist_name_other`,
		          `RHS`.`f_id` AS `f_id`,
		          `RHS`.`genre_is` AS `genre_is`,
		          `RHS`.`rating` AS `rating`,
		          `RHS`.`languages` AS `languages`,
		          `RHS`.`releasedate` AS `releasedate`,
		          `RHS`.`resolution` AS `resolution`
		   FROM `artist` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `song`
		      WHERE (`country` = 'UK'
		             AND `languages` = 'english')) AS RHS ON (LHS.country = RHS.country))
		ORDER BY artist_name

	      artist_name
	0    237FaridaxTz
	1    237FaridaxTz
	2    237FaridaxTz
	3    237FaridaxTz
	4    237FaridaxTz
	..            ...
	182   zEAPrityaMf
	183   zEAPrityaMf
	184   zEAPrityaMf
	185   zEAPrityaMf
	186   zEAPrityaMf
	
	[187 rows x 1 columns]
No solution for instance spider/music_1/0024 (3716)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
No solution for instance spider/music_1/0023 (3718)
Wrong output for fuzzied solution in instance spider/music_1/0001 (3719)
	EXPECTED OUTPUT ====

		SELECT song_name,
		       releasedate
		FROM song
		ORDER BY releasedate DESC
		LIMIT 1

	                song_name releasedate
	0  DGqTumi robe nirobeRfb  9-OCT-2006
	ACTUAL OUTPUT ====

		
		SELECT song_name,
		       releasedate
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM song
		      ORDER BY resolution)
		   LIMIT 1)

	     song_name  releasedate
	0  Aj ei akash  16-NOV-2008
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
No solution for instance spider/music_1/0046 (3721)
Wrong output for fuzzied solution in instance spider/music_1/0014 (3723)
	EXPECTED OUTPUT ====

		SELECT f_id
		FROM files
		WHERE formats = "mp4" INTERSECT
		  SELECT f_id
		  FROM song WHERE resolution < 1000

	   f_id
	0  2.00
	1  5.00
	2  5.01
	3  5.99
	4  6.02
	ACTUAL OUTPUT ====

		
		SELECT `f_id`
		FROM
		  (SELECT `LHS`.`song_name` AS `song_name`,
		          `LHS`.`artist_name` AS `artist_name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`f_id` AS `f_id`,
		          `LHS`.`genre_is` AS `genre_is`,
		          `LHS`.`rating` AS `rating`,
		          `LHS`.`languages` AS `languages`,
		          `LHS`.`releasedate` AS `releasedate`,
		          `LHS`.`resolution` AS `resolution`,
		          `RHS`.`file_size` AS `file_size`,
		          `RHS`.`duration` AS `duration`,
		          `RHS`.`formats` AS `formats`
		   FROM `song` AS `LHS`
		   INNER JOIN `files` AS `RHS` ON (`LHS`.`artist_name` = `RHS`.`artist_name`
		                                      AND `LHS`.`f_id` = `RHS`.`f_id`))
		WHERE (`formats` = 'mp4'
		       AND resolution <= 1000.0)
		ORDER BY f_id

	   f_id
	0     2
No solution for instance spider/music_1/0009 (3724)
Wrong output for base solution in instance spider/music_1/0011 (3726)
	EXPECTED OUTPUT ====

	   avg_t2_rating_
	0        7.333333
	ACTUAL OUTPUT ====

		SELECT avg(T2.rating)
		FROM artist AS T1
		JOIN song AS T2 ON T1.artist_name = T2.artist_name
		WHERE T1.gender = "Female"

	   avg(t2.rating)
	0        7.333333
Wrong output for ground truth in instance spider/music_1/0011 (3726)
Wrong output for fuzzied solution in instance spider/music_1/0029 (3727)
	EXPECTED OUTPUT ====

		SELECT languages
		FROM song
		GROUP BY languages
		ORDER BY count(*) DESC
		LIMIT 1

	  languages
	0   english
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT languages_other AS languages
		FROM
		  (SELECT LHS.country AS country,
		          LHS.languages AS languages,
		          LHS.n AS n,
		          RHS.country AS country_other,
		          RHS.languages AS languages_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT country,
		             languages,
		             COUNT() AS n
		      FROM song
		      GROUP BY country,
		               languages) AS LHS
		   CROSS JOIN
		     (SELECT country,
		             languages,
		             COUNT() AS n
		      FROM song
		      GROUP BY country,
		               languages) AS RHS)
		WHERE (n < n_other)
		ORDER BY languages

	  languages
	0     angla
	1     bangl
	2    bangla
	3    englis
	4   english
	5    nglish
No solution for instance spider/music_1/0040 (3729)
No solution for instance spider/music_1/0028 (3730)
Wrong output for fuzzied solution in instance spider/music_1/0049 (3731)
	EXPECTED OUTPUT ====

		SELECT DISTINCT artist_name
		FROM song
		WHERE languages = "english"
		EXCEPT
		SELECT DISTINCT artist_name
		FROM song
		WHERE rating > 8

	    artist_name
	0  2CqFaridap21
	ACTUAL OUTPUT ====

		
		SELECT `artist_name`
		FROM `song`
		WHERE (`languages` = 'english'
		       AND rating <= 8.0)
		ORDER BY artist_name

	    artist_name
	0  2CqFaridap21
	1  FtqFaridaZrQ
	2    KAqTopuCKn
	3          Prit
	4         Prity
	5    lpjTopuX8U
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0037 (3735)
	EXPECTED OUTPUT ====

		SELECT T2.location_name,
		       T1.location_code
		FROM Document_locations AS T1
		JOIN Ref_locations AS T2 ON T1.location_code = T2.location_code
		GROUP BY T1.location_code
		ORDER BY count(*) ASC
		LIMIT 1

	  location_name location_code
	0        Canada             c
	ACTUAL OUTPUT ====

		
		SELECT location_name,
		       location_code
		FROM
		  (SELECT *
		   FROM ref_locations AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT location_code,
		                     COUNT() AS n
		              FROM document_locations
		              GROUP BY location_code)
		           WHERE (n > 1)) AS RHS
		        WHERE (LHS.location_code = RHS.location_code) ))
		ORDER BY location_name

	Empty DataFrame
	Columns: [location_name, location_code]
	Index: []
Error while executing solution for instance spider/cre_Doc_Tracking_DB/0038 (3741)

The column label 'Employee_Name' is not unique.
Error while checking ground truth in instance spider/cre_Doc_Tracking_DB/0038 (3741)
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0003 (3742)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Ref_document_types

	   count(*)
	0        10
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT document_type_description,
		          COUNT() AS n
		   FROM ref_document_types
		   GROUP BY document_type_description)
		ORDER BY count___

	   count___
	0         1
	1         9
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0027 (3743)
	EXPECTED OUTPUT ====

		SELECT T2.role_name,
		       T2.role_description
		FROM Employees AS T1
		JOIN ROLES AS T2 ON T1.role_code = T2.role_code
		WHERE T1.employee_name = "Ebba"

	            role_name                                   role_description
	0  QpqProof ReaderrGC  Et totam est quibusdam aspernatur ut. Vitae pe...
	1                Phot  Et totam est quibusdam aspernatur ut. Vitae pe...
	ACTUAL OUTPUT ====

		
		SELECT `role_name`,
		       `role_description`
		FROM
		  (SELECT *
		   FROM `roles` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `employees`
		           WHERE (`employee_name` != 'Ebba')) AS RHS
		        WHERE (LHS.role_code = RHS.role_code) ))
		ORDER BY role_name

	            role_name                                   role_description
	0  QpqProof ReaderrGC  Et totam est quibusdam aspernatur ut. Vitae pe...
	1  ERwProof Readerx4t  Et totam est quibusdam aspernatur ut. Vitae pe...
	2   K(BR9Proof Reader  Et totam est quibusdam aspernatur ut. Vitae pe...
	3          PhotocNCkC  Et totam est quibusdam aspernatur ut. Vitae pe...
Wrong output for base solution in instance spider/cre_Doc_Tracking_DB/0013 (3746)
	EXPECTED OUTPUT ====

	  location_name location_description
	0        Xiamen                  NaN
	ACTUAL OUTPUT ====

		SELECT location_name,
		       location_description
		FROM Ref_locations
		WHERE location_code = "x"

	  location_name location_description
	0        Xiamen                     
Wrong output for ground truth in instance spider/cre_Doc_Tracking_DB/0013 (3746)
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0026 (3750)
	EXPECTED OUTPUT ====

		SELECT role_code
		FROM Employees
		GROUP BY role_code
		ORDER BY count(*) ASC
		LIMIT 1

	  role_code
	0         H
	ACTUAL OUTPUT ====

		
		SELECT role_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT employee_id,
		                role_code,
		                employee_name,
		                gender_mfu,
		                date_of_birth,
		                other_details,
		                COUNT(*) OVER () AS n
		         FROM employees)
		      ORDER BY other_details)
		   LIMIT 1)

	  role_code
	0   gUdkrHR
Wrong output for base solution in instance spider/cre_Doc_Tracking_DB/0005 (3752)
	EXPECTED OUTPUT ====

	  document_type_name document_type_description
	0             Review                       NaN
	ACTUAL OUTPUT ====

		SELECT document_type_name,
		       document_type_description
		FROM Ref_document_types
		WHERE document_type_code = "RV"

	  document_type_name document_type_description
	0             Review                          
Wrong output for ground truth in instance spider/cre_Doc_Tracking_DB/0005 (3752)
No solution for instance spider/cre_Doc_Tracking_DB/0045 (3755)
No solution for instance spider/cre_Doc_Tracking_DB/0041 (3757)
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0035 (3758)
	EXPECTED OUTPUT ====

		SELECT location_code
		FROM Document_locations
		GROUP BY location_code
		ORDER BY count(*) DESC
		LIMIT 1

	  location_code
	0              
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT location_code
		FROM
		  (SELECT LHS.date_in_locaton_to AS date_in_locaton_to,
		          LHS.location_code AS location_code,
		          LHS.n AS n,
		          RHS.date_in_locaton_to AS date_in_locaton_to_other,
		          RHS.location_code AS location_code_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT date_in_locaton_to,
		             location_code,
		             COUNT() AS n
		      FROM document_locations
		      GROUP BY date_in_locaton_to,
		               location_code) AS LHS
		   CROSS JOIN
		     (SELECT date_in_locaton_to,
		             location_code,
		             COUNT() AS n
		      FROM document_locations
		      GROUP BY date_in_locaton_to,
		               location_code) AS RHS)
		WHERE (n > n_other)
		ORDER BY location_code

	  location_code
	0              
	1        N2)TPx
	2             b
	3             c
	4        q9Bp2b
	5             x
	6        zING4x
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0007 (3761)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM All_documents
		WHERE document_type_code = "CV"
		  OR document_type_code = "BK"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `all_documents`
		      WHERE (`document_type_code` != 'CV'
		             OR `document_type_code` = 'BK')))
		ORDER BY count___

	   count___
	0        19
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0024 (3763)
	EXPECTED OUTPUT ====

		SELECT role_code
		FROM Employees
		GROUP BY role_code
		ORDER BY count(*) DESC
		LIMIT 1

	  role_code
	0   gUdkrHR
	ACTUAL OUTPUT ====

		
		SELECT role_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT employee_name,
		                role_code,
		                COUNT() AS n
		         FROM employees
		         GROUP BY employee_name,
		                  role_code)
		      ORDER BY role_code)
		   LIMIT 1)

	  role_code
	0   2JcGIHR
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0025 (3770)
	EXPECTED OUTPUT ====

		SELECT role_code
		FROM Employees
		GROUP BY role_code
		HAVING count(*) >= 3

	  role_code
	0   2JcGIHR
	1        ED
	2   gUdkrHR
	ACTUAL OUTPUT ====

		
		SELECT role_code
		FROM
		  (SELECT gender_mfu,
		          role_code,
		          COUNT() AS n
		   FROM employees
		   GROUP BY gender_mfu,
		            role_code)
		WHERE (n = 3)
		ORDER BY role_code

	  role_code
	0        ED
	1   gUdkrHR
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0011 (3771)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Ref_locations

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT location_description,
		          COUNT() AS n
		   FROM ref_locations
		   GROUP BY location_description)
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
	3         4
No solution for instance spider/cre_Doc_Tracking_DB/0044 (3774)
Wrong output for fuzzied solution in instance spider/storm_record/0017 (3779)
	EXPECTED OUTPUT ====

		SELECT name
		FROM storm
		EXCEPT
		SELECT T1.name
		FROM storm AS T1
		JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id
		GROUP BY T1.storm_id
		HAVING count(*) >= 2

	       name
	0      Nine
	1  SixoUifB
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM storm AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT storm_id,
		                     COUNT() AS n
		              FROM affected_region
		              GROUP BY storm_id)
		           WHERE (n >= 2)) AS RHS
		        WHERE (LHS.storm_id = RHS.storm_id) ))
		ORDER BY name

	       name
	0      Nine
	1  SixoUifB
	2        ix
Wrong output for base solution in instance spider/storm_record/0008 (3780)
	EXPECTED OUTPUT ====

	   sum_number_deaths_  sum_damage_millions_usd_
	0                   5                    40.529
	ACTUAL OUTPUT ====

		SELECT sum(number_deaths),
		       sum(damage_millions_USD)
		FROM storm
		WHERE max_speed >
		    (SELECT avg(max_speed)
		     FROM storm)

	   sum(number_deaths)  sum(damage_millions_usd)
	0                   5                    40.529
Wrong output for ground truth in instance spider/storm_record/0008 (3780)
Wrong output for fuzzied solution in instance spider/storm_record/0022 (3782)
	EXPECTED OUTPUT ====

		SELECT T3.Name
		FROM affected_region AS T1
		JOIN region AS T2 ON T1.region_id = T2.region_id
		JOIN storm AS T3 ON T1.storm_id = T3.storm_id
		WHERE T2.Region_name = 'Afghanistan' INTERSECT
		  SELECT T3.Name
		  FROM affected_region AS T1
		  JOIN region AS T2 ON T1.region_id = T2.region_id
		  JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Albania'

	           name
	0    9 cyclones
	1   HIkThreeuYm
	2  IwawQ)yy1)MW
	3           One
	4          hree
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`storm_id` AS `storm_id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`dates_active` AS `dates_active`,
		          `LHS`.`max_speed` AS `max_speed`,
		          `LHS`.`damage_millions_usd` AS `damage_millions_usd`,
		          `LHS`.`number_deaths` AS `number_deaths`,
		          `LHS`.`region_id` AS `region_id`,
		          `LHS`.`region_code` AS `region_code`,
		          `LHS`.`region_name` AS `region_name`,
		          `LHS`.`number_city_affected` AS `number_city_affected`,
		          `RHS`.`name` AS `name_other`,
		          `RHS`.`dates_active` AS `dates_active_other`,
		          `RHS`.`max_speed` AS `max_speed_other`,
		          `RHS`.`damage_millions_usd` AS `damage_millions_usd_other`,
		          `RHS`.`region_id` AS `region_id_other`,
		          `RHS`.`region_code` AS `region_code_other`,
		          `RHS`.`region_name` AS `region_name_other`,
		          `RHS`.`number_city_affected` AS `number_city_affected_other`
		   FROM
		     (SELECT `LHS`.`storm_id` AS `storm_id`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`dates_active` AS `dates_active`,
		             `LHS`.`max_speed` AS `max_speed`,
		             `LHS`.`damage_millions_usd` AS `damage_millions_usd`,
		             `LHS`.`number_deaths` AS `number_deaths`,
		             `LHS`.`region_id` AS `region_id`,
		             `LHS`.`region_code` AS `region_code`,
		             `LHS`.`region_name` AS `region_name`,
		             `LHS`.`number_city_affected` AS `number_city_affected`
		      FROM
		        (SELECT `LHS`.`storm_id` AS `storm_id`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`dates_active` AS `dates_active`,
		                `LHS`.`max_speed` AS `max_speed`,
		                `LHS`.`damage_millions_usd` AS `damage_millions_usd`,
		                `LHS`.`number_deaths` AS `number_deaths`,
		                `LHS`.`region_id` AS `region_id`,
		                `LHS`.`region_code` AS `region_code`,
		                `LHS`.`region_name` AS `region_name`,
		                `RHS`.`number_city_affected` AS `number_city_affected`
		         FROM
		           (SELECT `LHS`.`storm_id` AS `storm_id`,
		                   `LHS`.`name` AS `name`,
		                   `LHS`.`dates_active` AS `dates_active`,
		                   `LHS`.`max_speed` AS `max_speed`,
		                   `LHS`.`damage_millions_usd` AS `damage_millions_usd`,
		                   `LHS`.`number_deaths` AS `number_deaths`,
		                   `RHS`.`region_id` AS `region_id`,
		                   `RHS`.`region_code` AS `region_code`,
		                   `RHS`.`region_name` AS `region_name`
		            FROM `storm` AS `LHS`
		            CROSS JOIN `region` AS `RHS`) AS `LHS`
		         INNER JOIN `affected_region` AS `RHS` ON (`LHS`.`storm_id` = `RHS`.`storm_id`
		                                                      AND `LHS`.`region_id` = `RHS`.`region_id`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `region`
		         WHERE (`region_name` = 'Afghanistan'
		                AND `region_name` != 'Albania')) AS `RHS` ON (`LHS`.`region_id` = `RHS`.`region_id`
		                                                              AND `LHS`.`region_code` = `RHS`.`region_code`
		                                                              AND `LHS`.`region_name` = `RHS`.`region_name`)) AS `LHS`
		   INNER JOIN
		     (SELECT `LHS`.`storm_id` AS `storm_id`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`dates_active` AS `dates_active`,
		             `LHS`.`max_speed` AS `max_speed`,
		             `LHS`.`damage_millions_usd` AS `damage_millions_usd`,
		             `LHS`.`number_deaths` AS `number_deaths`,
		             `LHS`.`region_id` AS `region_id`,
		             `LHS`.`region_code` AS `region_code`,
		             `LHS`.`region_name` AS `region_name`,
		             `LHS`.`number_city_affected` AS `number_city_affected`
		      FROM
		        (SELECT `LHS`.`storm_id` AS `storm_id`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`dates_active` AS `dates_active`,
		                `LHS`.`max_speed` AS `max_speed`,
		                `LHS`.`damage_millions_usd` AS `damage_millions_usd`,
		                `LHS`.`number_deaths` AS `number_deaths`,
		                `LHS`.`region_id` AS `region_id`,
		                `LHS`.`region_code` AS `region_code`,
		                `LHS`.`region_name` AS `region_name`,
		                `RHS`.`number_city_affected` AS `number_city_affected`
		         FROM
		           (SELECT `LHS`.`storm_id` AS `storm_id`,
		                   `LHS`.`name` AS `name`,
		                   `LHS`.`dates_active` AS `dates_active`,
		                   `LHS`.`max_speed` AS `max_speed`,
		                   `LHS`.`damage_millions_usd` AS `damage_millions_usd`,
		                   `LHS`.`number_deaths` AS `number_deaths`,
		                   `RHS`.`region_id` AS `region_id`,
		                   `RHS`.`region_code` AS `region_code`,
		                   `RHS`.`region_name` AS `region_name`
		            FROM `storm` AS `LHS`
		            CROSS JOIN `region` AS `RHS`) AS `LHS`
		         INNER JOIN `affected_region` AS `RHS` ON (`LHS`.`storm_id` = `RHS`.`storm_id`
		                                                      AND `LHS`.`region_id` = `RHS`.`region_id`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `region`
		         WHERE (`region_name` = 'Afghanistan'
		                AND `region_name` != 'Albania')) AS RHS ON (LHS.region_id = RHS.region_id
		                                                            AND LHS.region_code = RHS.region_code
		                                                            AND LHS.region_name = RHS.region_name)) AS RHS ON (LHS.number_deaths = RHS.number_deaths
		                                                                                                               AND LHS.region_id = RHS.storm_id))
		ORDER BY name

	   name
	0  hree
Wrong output for fuzzied solution in instance spider/storm_record/0006 (3784)
	EXPECTED OUTPUT ====

		SELECT name,
		       dates_active,
		       number_deaths
		FROM storm
		WHERE number_deaths >= 1

	         name                   dates_active  number_deaths
	0  9 cyclones  Cd0September22–September28jR6              2
	1         One                May19 –October2              3
	2  9 cyclones               May19 –October26              1
	3  HeHywThree               May19 –October26             70
	4          On               May19 –October26              3
	5         One                    May19–May25             71
	6         One   VgM6)September22–September28              1
	ACTUAL OUTPUT ====

		
		SELECT name,
		       dates_active,
		       number_deaths
		FROM storm
		WHERE (number_deaths > 1)
		ORDER BY name

	         name                   dates_active  number_deaths
	0  9 cyclones  Cd0September22–September28jR6              2
	1         One                May19 –October2              3
	2  HeHywThree               May19 –October26             70
	3          On               May19 –October26              3
	4         One                    May19–May25             71
Error while executing solution for instance spider/storm_record/0005 (3788)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT n_distinct AS count___
FROM
  (SELECT storm_id,
          name,
          dates_active,
          max_speed,
          damage_millions_usd,
          number_deaths,
          COUNT(DISTINCT number_deaths) OVER () AS n_distinct
   FROM storm)
WHERE (number_deaths = 0)
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/storm_record/0016 (3789)
Wrong output for fuzzied solution in instance spider/storm_record/0018 (3790)
	EXPECTED OUTPUT ====

		SELECT T2.region_name
		FROM affected_region AS T1
		JOIN region AS T2 ON T1.region_id = T2.region_id
		JOIN storm AS T3 ON T1.storm_id = T3.storm_id
		WHERE T3.number_deaths >= 10

	       region_name
	0      Afghanistan
	1      Afghanistan
	2      Afghanistan
	3      Afghanistan
	4          Albania
	5          Albania
	6          Albania
	7          Albania
	8          Albania
	9          Albania
	10         Albania
	11         Albania
	12         Albania
	13         Albania
	14         Albania
	15          Angola
	16          Angola
	17          Angola
	18   AnguillaD97BX
	19          Cyprus
	20          Cyprus
	21          Cyprus
	22          Cyprus
	23          Cyprus
	24  GyIAnguillax)z
	25  GyIAnguillax)z
	26    qDjAngolaMlc
	27    qDjAngolaMlc
	ACTUAL OUTPUT ====

		
		SELECT region_name
		FROM
		  (SELECT LHS.storm_id AS storm_id,
		          LHS.name AS name,
		          LHS.dates_active AS dates_active,
		          LHS.max_speed AS max_speed,
		          LHS.damage_millions_usd AS damage_millions_usd,
		          LHS.number_deaths AS number_deaths,
		          LHS.region_id AS region_id,
		          LHS.region_code AS region_code,
		          LHS.region_name AS region_name,
		          RHS.number_city_affected AS number_city_affected
		   FROM
		     (SELECT LHS.storm_id AS storm_id,
		             LHS.name AS name,
		             LHS.dates_active AS dates_active,
		             LHS.max_speed AS max_speed,
		             LHS.damage_millions_usd AS damage_millions_usd,
		             LHS.number_deaths AS number_deaths,
		             RHS.region_id AS region_id,
		             RHS.region_code AS region_code,
		             RHS.region_name AS region_name
		      FROM storm AS LHS
		      CROSS JOIN region AS RHS) AS LHS
		   INNER JOIN affected_region AS RHS ON (LHS.storm_id = RHS.storm_id
		                                            AND LHS.region_id = RHS.region_id))
		WHERE (number_deaths > 10)
		ORDER BY region_name

	       region_name
	0      Afghanistan
	1      Afghanistan
	2      Afghanistan
	3          Albania
	4          Albania
	5          Albania
	6          Albania
	7          Albania
	8          Albania
	9          Albania
	10         Albania
	11         Albania
	12         Albania
	13          Angola
	14          Angola
	15   AnguillaD97BX
	16          Cyprus
	17          Cyprus
	18          Cyprus
	19  GyIAnguillax)z
	20  GyIAnguillax)z
	21    qDjAngolaMlc
Wrong output for fuzzied solution in instance spider/storm_record/0020 (3791)
	EXPECTED OUTPUT ====

		SELECT T1.region_name
		FROM region AS T1
		JOIN affected_region AS T2 ON T1.region_id = T2.region_id
		GROUP BY T1.region_id
		HAVING count(*) >= 2

	    region_name
	0        Angola
	1  UxvAngolaus(
	ACTUAL OUTPUT ====

		
		SELECT region_name
		FROM
		  (SELECT LHS.region_id AS region_id,
		          LHS.storm_id AS storm_id,
		          LHS.number_city_affected AS number_city_affected,
		          RHS.region_name AS region_name
		   FROM affected_region AS LHS
		   INNER JOIN
		     (SELECT region_id,
		             region_name,
		             COUNT() AS n
		      FROM region
		      GROUP BY region_id,
		               region_name) AS RHS ON (LHS.region_id = RHS.region_id
		                                       AND LHS.storm_id = RHS.n))
		ORDER BY region_name

	Empty DataFrame
	Columns: [region_name]
	Index: []
No solution for instance spider/storm_record/0007 (3793)
Wrong output for fuzzied solution in instance spider/storm_record/0021 (3794)
	EXPECTED OUTPUT ====

		SELECT T2.region_name
		FROM affected_region AS T1
		JOIN region AS T2 ON T1.region_id = T2.region_id
		JOIN storm AS T3 ON T1.storm_id = T3.storm_id
		ORDER BY T3.Number_Deaths DESC
		LIMIT 1

	    region_name
	0  UxvAngolaus(
	ACTUAL OUTPUT ====

		
		SELECT region_name
		FROM
		  (SELECT storm_id AS region_id,
		          storm_id,
		          number_city_affected,
		          storm_id_other,
		          name,
		          dates_active,
		          max_speed,
		          damage_millions_usd,
		          region_code,
		          region_name
		   FROM
		     (SELECT LHS.region_id AS region_id,
		             LHS.storm_id AS storm_id,
		             LHS.number_city_affected AS number_city_affected,
		             RHS.storm_id AS storm_id_other,
		             RHS.name AS name,
		             RHS.dates_active AS dates_active,
		             RHS.max_speed AS max_speed,
		             RHS.damage_millions_usd AS damage_millions_usd,
		             RHS.region_code AS region_code,
		             RHS.region_name AS region_name
		      FROM affected_region AS LHS
		      INNER JOIN
		        (SELECT storm_id,
		                name,
		                dates_active,
		                max_speed,
		                damage_millions_usd,
		                number_deaths,
		                region_code,
		                region_name,
		                number_deaths AS region_id
		         FROM
		           (SELECT LHS.storm_id AS storm_id,
		                   LHS.name AS name,
		                   LHS.dates_active AS dates_active,
		                   LHS.max_speed AS max_speed,
		                   LHS.damage_millions_usd AS damage_millions_usd,
		                   LHS.number_deaths AS number_deaths,
		                   RHS.region_code AS region_code,
		                   RHS.region_name AS region_name
		            FROM storm AS LHS
		            INNER JOIN region AS RHS ON (LHS.number_deaths = RHS.region_id))) AS RHS ON (LHS.storm_id = RHS.region_id
		                                                                                            AND LHS.region_id = RHS.number_deaths)))
		ORDER BY region_name

	Empty DataFrame
	Columns: [region_name]
	Index: []
Wrong output for fuzzied solution in instance spider/storm_record/0014 (3796)
	EXPECTED OUTPUT ====

		SELECT T1.name,
		       T1.max_speed
		FROM storm AS T1
		JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id
		GROUP BY T1.storm_id
		ORDER BY count(*) DESC
		LIMIT 1

	  name  max_speed
	0  Six       1003
	ACTUAL OUTPUT ====

		
		SELECT name,
		       max_speed
		FROM
		  (SELECT LHS.region_id AS region_id,
		          LHS.storm_id AS storm_id,
		          LHS.n AS n,
		          RHS.storm_id AS storm_id_other,
		          RHS.name AS name,
		          RHS.dates_active AS dates_active,
		          RHS.max_speed AS max_speed,
		          RHS.damage_millions_usd AS damage_millions_usd
		   FROM
		     (SELECT region_id,
		             storm_id,
		             COUNT() AS n
		      FROM affected_region
		      GROUP BY region_id,
		               storm_id) AS LHS
		   INNER JOIN storm AS RHS ON (LHS.storm_id = RHS.number_deaths))
		ORDER BY name

	  name  max_speed
	0   ix        972
	1   ix        972
	2  Nin        988
	3  Nin        988
No solution for instance spider/game_injury/0008 (3802)
Wrong output for fuzzied solution in instance spider/game_injury/0013 (3804)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT T1.injury)
		FROM injury_accident AS T1
		JOIN game AS T2 ON T1.game_id = T2.id
		WHERE T2.season > 2010

	   count(distinct t1.injury)
	0                          8
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT game_id AS count_distinct_t1_injury_
		FROM
		  (SELECT LHS.game_id AS game_id,
		          LHS.id AS id,
		          LHS.player AS player,
		          LHS.injury AS injury,
		          LHS.number_of_matches AS number_of_matches,
		          LHS.source AS SOURCE,
		          RHS.date AS date,
		          RHS.season AS season
		   FROM injury_accident AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT date, season,
		                      COUNT() AS n
		         FROM game
		         GROUP BY date, season)
		      WHERE (n = 2010
		             OR n <= season)) AS RHS ON (LHS.id = RHS.n))
		ORDER BY count_distinct_t1_injury_

	   count_distinct_t1_injury_
	0                          8
	1                         12
Wrong output for fuzzied solution in instance spider/game_injury/0004 (3806)
	EXPECTED OUTPUT ====

		SELECT max(home_games),
		       min(home_games),
		       avg(home_games)
		FROM stadium

	   max(home_games)  min(home_games)  avg(home_games)
	0                9                6             7.25
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT home_games AS max_home_games_,
		                maxhome_games AS min_home_games_,
		                AVG(home_games) OVER () AS avg_home_games_
		FROM
		  (SELECT home_games,
		          name,
		          MIN(maxhome_games) AS maxhome_games
		   FROM
		     (SELECT home_games,
		             name,
		             MAX(home_games) AS maxhome_games
		      FROM stadium
		      GROUP BY home_games,
		               name)
		   GROUP BY home_games,
		            name)
		ORDER BY max_home_games_

	   max_home_games_  min_home_games_  avg_home_games_
	0                6                6             7.25
	1                7                7             7.25
	2                9                9             7.25
No solution for instance spider/game_injury/0012 (3807)
No solution for instance spider/game_injury/0015 (3808)
No solution for instance spider/game_injury/0016 (3810)
Wrong output for fuzzied solution in instance spider/game_injury/0007 (3812)
	EXPECTED OUTPUT ====

		SELECT T1.season
		FROM game AS T1
		JOIN injury_accident AS T2 ON T1.id = T2.game_id
		WHERE T2.player = 'Walter Samuel'

	   season
	0    2014
	1    2014
	2    2015
	ACTUAL OUTPUT ====

		
		SELECT `season`
		FROM
		  (SELECT `stadium_id`,
		          `id`,
		          `season`,
		          `date`,
		          `home_team`,
		          `away_team`,
		          `score`,
		          `competition`,
		          `id_other`,
		          `player`,
		          `injury`,
		          `number_of_matches`,
		          `source`,
		          `stadium_id` AS `game_id`
		   FROM
		     (SELECT `LHS`.`stadium_id` AS `stadium_id`,
		             `LHS`.`id` AS `id`,
		             `LHS`.`season` AS `season`,
		             `LHS`.`date` AS `date`,
		             `LHS`.`home_team` AS `home_team`,
		             `LHS`.`away_team` AS `away_team`,
		             `LHS`.`score` AS `score`,
		             `LHS`.`competition` AS `competition`,
		             `RHS`.`id` AS `id_other`,
		             `RHS`.`player` AS `player`,
		             `RHS`.`injury` AS `injury`,
		             `RHS`.`number_of_matches` AS `number_of_matches`,
		             `RHS`.`source` AS `source`
		      FROM `game` AS `LHS`
		      INNER JOIN `injury_accident` AS `RHS` ON (`LHS`.`stadium_id` = `RHS`.`game_id`)))
		WHERE (`player` = 'Walter Samuel')
		ORDER BY season

	   season
	0    2008
	1    2009
	2    2010
	3    2013
	4    2014
No solution for instance spider/game_injury/0014 (3814)
No solution for instance spider/game_injury/0009 (3815)
Wrong output for fuzzied solution in instance spider/game_injury/0011 (3816)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT SOURCE)
		FROM injury_accident

	   count(distinct source)
	0                       8
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n_distinct AS count_distinct_source_
		FROM
		  (SELECT game_id,
		          injury,
		          COUNT(DISTINCT SOURCE) AS n_distinct
		   FROM injury_accident
		   GROUP BY game_id,
		            injury)
		ORDER BY count_distinct_source_

	   count_distinct_source_
	0                       1
	1                       2
	2                       3
No solution for instance spider/game_injury/0010 (3817)
Wrong output for fuzzied solution in instance spider/inn_1/0002 (3819)
	EXPECTED OUTPUT ====

		SELECT roomName,
		       RoomId
		FROM Rooms
		WHERE basePrice > 160
		  AND maxOccupancy > 2;

	                      roomname roomid
	0  vDEHarbinger but bequestK6X    AOB
	1          Thrift and accolade     CA
	ACTUAL OUTPUT ====

		
		SELECT roomname,
		       roomid
		FROM rooms
		WHERE (baseprice > 160
		       AND baseprice >= 2)
		ORDER BY roomname

	                      roomname    roomid
	0  vDEHarbinger but bequestK6X       AOB
	1          Thrift and accolade        CA
	2           Thrift and accolad  F sqGAOB
	3          Thrift and accolade  IBDtDdnG
	4         Harbinger but beques  K(BR9FNA
	5     Y8nq4Thrift and accolade  gUdkrAOB
No solution for instance spider/inn_1/0036 (3820)
No solution for instance spider/inn_1/0017 (3821)
No solution for instance spider/inn_1/0003 (3822)
Wrong output for fuzzied solution in instance spider/inn_1/0027 (3823)
	EXPECTED OUTPUT ====

		SELECT decor,
		       count(*)
		FROM Rooms
		WHERE basePrice > 120
		GROUP BY decor;

	               decor  count(*)
	0  5bYtraditionalRvH         1
	1        SXvflmodern         1
	2        modern9awO)         1
	3             rustic         1
	4             modern         2
	5              rusti         2
	6        traditional         2
	ACTUAL OUTPUT ====

		
		SELECT decor,
		       n AS count___
		FROM
		  (SELECT decor,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM rooms
		      WHERE (baseprice >= 120))
		   GROUP BY decor)
		ORDER BY decor

	               decor  count___
	0  5bYtraditionalRvH         1
	1        SXvflmodern         1
	2        Vv6kprustic         1
	3        modern9awO)         1
	4             rustic         1
	5              ustic         1
	6              rusti         2
	7        traditional         2
	8             modern         3
Wrong output for fuzzied solution in instance spider/inn_1/0030 (3825)
	EXPECTED OUTPUT ====

		SELECT RoomId,
		       roomName
		FROM Rooms
		ORDER BY basePrice DESC
		LIMIT 3;

	      roomid                     roomname
	0  8C CASRJC  Mendicant with crypticlFCcF
	1        IBS       Mendicant with cryptic
	2        TAA        Harbinger but bequest
	ACTUAL OUTPUT ====

		
		SELECT roomid,
		       roomname
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM rooms
		      ORDER BY roomname)
		   LIMIT 3)

	  roomid                       roomname
	0    CAS          Harbinger but bequest
	1     IB  Immutable before decorumT(7tm
	2    TAA          Harbinger but bequest
No solution for instance spider/inn_1/0006 (3827)
Wrong output for fuzzied solution in instance spider/inn_1/0004 (3828)
	EXPECTED OUTPUT ====

		SELECT kids
		FROM Reservations
		WHERE FirstName = "ROY"
		  AND LastName = "SWEAZY";

	Empty DataFrame
	Columns: [kids]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `kids`
		FROM `reservations`
		WHERE (`firstname` = 'ROY'
		       OR `lastname` = 'SWEAZY')
		ORDER BY kids

	   kids
	0    -1
	1     1
	2     1
No solution for instance spider/inn_1/0015 (3831)
Wrong output for fuzzied solution in instance spider/inn_1/0005 (3832)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Reservations
		WHERE FirstName = "ROY"
		  AND LastName = "SWEAZY";

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `firstname`,
		          `lastname`,
		          COUNT() AS `n`
		   FROM `reservations`
		   GROUP BY `firstname`,
		            `lastname`)
		WHERE (`firstname` = 'ROY'
		       OR `lastname` = 'SWEAZY')
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
No solution for instance spider/inn_1/0016 (3833)
Wrong output for fuzzied solution in instance spider/inn_1/0032 (3834)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM rooms
		WHERE roomid NOT IN
		    (SELECT DISTINCT room
		     FROM reservations)

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT kids AS count___
		FROM
		  (SELECT LHS.code AS code,
		          LHS.room AS room,
		          LHS.checkin AS checkin,
		          LHS.checkout AS checkout,
		          LHS.rate AS rate,
		          LHS.lastname AS lastname,
		          LHS.firstname AS firstname,
		          LHS.adults AS adults,
		          LHS.kids AS kids,
		          RHS.beds AS beds
		   FROM reservations AS LHS
		   INNER JOIN
		     (SELECT beds,
		             COUNT(DISTINCT roomid) AS n_distinct
		      FROM rooms
		      GROUP BY beds) AS RHS ON (LHS.adults = RHS.n_distinct))
		ORDER BY count___

	   count___
	0        -2
	1        -1
	2         0
	3         1
	4         2
Wrong output for fuzzied solution in instance spider/inn_1/0019 (3838)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Rooms
		WHERE bedType = "King";

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `bedtype`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `rooms`
		      WHERE (`bedtype` = 'King'))
		   GROUP BY bedtype)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/inn_1/0034 (3839)
Wrong output for fuzzied solution in instance spider/inn_1/0021 (3841)
	EXPECTED OUTPUT ====

		SELECT roomName
		FROM Rooms
		ORDER BY maxOccupancy DESC
		LIMIT 1;

	                        roomname
	0  IKz)GtXxVPrq87YZwJ5XRsVjscbbY
	ACTUAL OUTPUT ====

		
		SELECT roomname
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM rooms
		      ORDER BY roomname)
		   LIMIT 1)

	                      roomname
	0  4yazKMendicant with cryptic
Wrong output for fuzzied solution in instance spider/inn_1/0001 (3843)
	EXPECTED OUTPUT ====

		SELECT roomName
		FROM Rooms
		WHERE basePrice < 160
		  AND beds = 2
		  AND decor = 'modern';

	               roomname
	0  Harbinger but beques
	1  Harbinger but beques
	ACTUAL OUTPUT ====

		
		SELECT `roomname`
		FROM
		  (SELECT *
		   FROM `rooms`
		   WHERE (`decor` = 'modern'
		          AND baseprice >= beds))
		WHERE (beds = 160
		       OR beds = 2)
		ORDER BY roomname

	               roomname
	0  Harbinger but beques
	1  Harbinger but beques
	2    Thrift and accolad
	3   Thrift and accolade
Wrong output for fuzzied solution in instance spider/inn_1/0009 (3845)
	EXPECTED OUTPUT ====

		SELECT sum(beds)
		FROM Rooms
		WHERE bedtype = 'King';

	  sum(beds)
	0      None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT SUM(`beds`) OVER () AS `sum_beds_`
		FROM `rooms`
		WHERE (`bedtype` = 'King')
		ORDER BY sum_beds_

	Empty DataFrame
	Columns: [sum_beds_]
	Index: []
No solution for instance spider/inn_1/0025 (3846)
Wrong output for fuzzied solution in instance spider/inn_1/0011 (3847)
	EXPECTED OUTPUT ====

		SELECT roomName,
		       basePrice
		FROM Rooms
		ORDER BY basePrice ASC
		LIMIT 1;

	                      roomname   baseprice
	0  cJhJAWX2FUDldmOzAu4TM21hoW7 -9231931099
	ACTUAL OUTPUT ====

		
		SELECT roomname,
		       baseprice
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM rooms
		      ORDER BY roomid DESC)
		   LIMIT 1)

	             roomname  baseprice
	0  Abscond or bolster        150
Error while executing solution for instance spider/inn_1/0029 (3848)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT bedtype) OVER () AS count_distinct_bedtype_
FROM rooms
ORDER BY count_distinct_bedtype_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
Wrong output for fuzzied solution in instance spider/entrepreneur/0006 (3857)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM entrepreneur AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID

	                     name
	0        Alberto Angelini
	1        Alberto Angelini
	2         Goran Fiorentin
	3         Goran Fiorentin
	4             arco Gerini
	5             arco Gerini
	6  lD9Goran FiorentiniawO
	7  lD9Goran FiorentiniawO
	8  lD9Goran FiorentiniawO
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM entrepreneur AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY name

	                     name
	0        Alberto Angelini
	1         Goran Fiorentin
	2             arco Gerini
	3  lD9Goran FiorentiniawO
Wrong output for base solution in instance spider/entrepreneur/0004 (3858)
	EXPECTED OUTPUT ====

	   avg_money_requested_
	0          93166.666667
	ACTUAL OUTPUT ====

		SELECT avg(Money_Requested)
		FROM entrepreneur

	   avg(money_requested)
	0          93166.666667
Wrong output for ground truth in instance spider/entrepreneur/0004 (3858)
Wrong output for fuzzied solution in instance spider/entrepreneur/0012 (3859)
	EXPECTED OUTPUT ====

		SELECT T2.Weight
		FROM entrepreneur AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T1.Money_Requested DESC

	   weight
	0   56.98
	1   56.98
	2   56.98
	3   56.98
	4   56.98
	5   57.00
	6   57.00
	7   75.01
	8   75.01
	ACTUAL OUTPUT ====

		
		SELECT weight
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM entrepreneur AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY weight

	   weight
	0   56.98
	1   56.98
	2   57.00
	3   75.01
Wrong output for fuzzied solution in instance spider/entrepreneur/0018 (3863)
	EXPECTED OUTPUT ====

		SELECT Investor
		FROM entrepreneur
		WHERE Money_Requested > 140000 INTERSECT
		  SELECT Investor
		  FROM entrepreneur WHERE Money_Requested < 120000

	       investor
	0  Doug Richard
	1   Peter Jones
	ACTUAL OUTPUT ====

		
		SELECT investor
		FROM entrepreneur
		WHERE (money_requested > 140000.0
		       OR money_requested > 120000.0)
		ORDER BY investor

	              investor
	0         Doug Richard
	1          Peter Jones
	2  Rachel Elnaughno2FA
No solution for instance spider/entrepreneur/0020 (3864)
Wrong output for fuzzied solution in instance spider/entrepreneur/0019 (3865)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT Company)
		FROM entrepreneur

	   count(distinct company)
	0                        8
	ACTUAL OUTPUT ====

		
		SELECT n AS count_distinct_company_
		FROM
		  (SELECT COUNT() AS n
		   FROM entrepreneur)
		ORDER BY count_distinct_company_

	   count_distinct_company_
	0                        9
Wrong output for fuzzied solution in instance spider/entrepreneur/0014 (3868)
	EXPECTED OUTPUT ====

		SELECT Investor
		FROM entrepreneur
		GROUP BY Investor
		ORDER BY COUNT(*) DESC
		LIMIT 1

	         investor
	0  Rachel Elnaugh
	ACTUAL OUTPUT ====

		
		SELECT investor
		FROM
		  (SELECT people_id,
		          n,
		          company,
		          money_requested,
		          investor,
		          people_id AS entrepreneur_id
		   FROM
		     (SELECT LHS.people_id AS people_id,
		             LHS.n AS n,
		             RHS.company AS company,
		             RHS.money_requested AS money_requested,
		             RHS.investor AS investor
		      FROM
		        (SELECT people_id,
		                COUNT() AS n
		         FROM entrepreneur
		         GROUP BY people_id) AS LHS
		      INNER JOIN entrepreneur AS RHS ON (LHS.people_id = RHS.entrepreneur_id
		                                            AND LHS.n = RHS.people_id)))
		ORDER BY investor

	Empty DataFrame
	Columns: [investor]
	Index: []
No solution for instance spider/entrepreneur/0009 (3869)
No solution for instance spider/entrepreneur/0010 (3871)
Wrong output for fuzzied solution in instance spider/riding_club/0017 (3873)
	EXPECTED OUTPUT ====

		SELECT T1.club_id,
		       T1.gold
		FROM match_result AS T1
		JOIN coach AS T2 ON T1.club_id = T2.club_id
		GROUP BY T1.club_id
		ORDER BY count(*) DESC
		LIMIT 1

	   club_id  gold
	0        3    11
	ACTUAL OUTPUT ====

		
		SELECT n AS club_id,
		       gold
		FROM
		  (SELECT club_id,
		          gender,
		          n,
		          gold,
		          big_silver,
		          small_silver,
		          bronze,
		          points,
		          club_id AS rank
		   FROM
		     (SELECT LHS.club_id AS club_id,
		             LHS.gender AS gender,
		             LHS.n AS n,
		             RHS.gold AS gold,
		             RHS.big_silver AS big_silver,
		             RHS.small_silver AS small_silver,
		             RHS.bronze AS bronze,
		             RHS.points AS points
		      FROM
		        (SELECT club_id,
		                gender,
		                COUNT() AS n
		         FROM coach
		         GROUP BY club_id,
		                  gender) AS LHS
		      INNER JOIN match_result AS RHS ON (LHS.club_id = RHS.rank
		                                            AND LHS.n = RHS.club_id)))
		ORDER BY club_id

	   club_id  gold
	0        1     5
	1        1     5
	2        1     6
	3        1     7
	4        1    10
Wrong output for fuzzied solution in instance spider/riding_club/0008 (3874)
	EXPECTED OUTPUT ====

		SELECT Occupation
		FROM player
		GROUP BY Occupation
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  occupation
	0    Student
	ACTUAL OUTPUT ====

		
		SELECT occupation
		FROM
		  (SELECT LHS.player_id AS player_id,
		          LHS.sponsor_name AS sponsor_name,
		          LHS.player_name AS player_name,
		          LHS.gender AS gender,
		          LHS.residence AS residence,
		          LHS.occupation AS occupation,
		          LHS.votes AS votes,
		          LHS.rank AS rank,
		          LHS.n AS n,
		          RHS.player_name AS player_name_other,
		          RHS.gender AS gender_other,
		          RHS.residence AS residence_other,
		          RHS.occupation AS occupation_other,
		          RHS.votes AS votes_other,
		          RHS.rank AS rank_other
		   FROM
		     (SELECT player_id,
		             sponsor_name,
		             player_name,
		             gender,
		             residence,
		             occupation,
		             votes,
		             rank,
		             COUNT(*) OVER () AS n
		      FROM player) AS LHS
		   INNER JOIN player AS RHS ON (LHS.n = RHS.player_id
		                                   AND LHS.sponsor_name = RHS.sponsor_name))
		ORDER BY occupation

	Empty DataFrame
	Columns: [occupation]
	Index: []
Wrong output for fuzzied solution in instance spider/riding_club/0015 (3880)
	EXPECTED OUTPUT ====

		SELECT Residence
		FROM player
		WHERE gender = "M" INTERSECT
		  SELECT Residence
		  FROM player WHERE gender = "F"

	Empty DataFrame
	Columns: [residence]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `residence`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM `player`
		         WHERE (`gender` = 'M'
		                OR `gender` != 'F'))
		      ORDER BY occupation DESC)
		   LIMIT 1)

	  residence
	0  Thompson
Wrong output for fuzzied solution in instance spider/riding_club/0009 (3886)
	EXPECTED OUTPUT ====

		SELECT Residence
		FROM player
		GROUP BY Residence
		HAVING COUNT(*) >= 2

	  residence
	0    Birtle
	1  Winnipeg
	2   innipeg
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT residence
		FROM
		  (SELECT gender,
		          residence,
		          COUNT() AS n
		   FROM player
		   GROUP BY gender,
		            residence)
		WHERE (n >= 2)
		ORDER BY residence

	  residence
	0  Winnipeg
No solution for instance spider/riding_club/0011 (3887)
No solution for instance spider/match_season/0003 (3892)
No solution for instance spider/match_season/0027 (3893)
Wrong output for fuzzied solution in instance spider/match_season/0006 (3896)
	EXPECTED OUTPUT ====

		SELECT DISTINCT POSITION
		FROM match_season
		WHERE College = "UCLA"
		  OR College = "Duke"

	        position
	0        Forward
	1     Midfielder
	2  TPvForwardTFP
	3   ow(T2Forward
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `position`
		FROM `match_season`
		WHERE (`college` = 'UCLA'
		       AND `college` != 'Duke')
		ORDER BY POSITION

	        position
	0        Forward
	1     Midfielder
	2  TPvForwardTFP
No solution for instance spider/match_season/0012 (3898)
Wrong output for fuzzied solution in instance spider/match_season/0015 (3900)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT T1.Official_native_language)
		FROM country AS T1
		JOIN match_season AS T2 ON T1.Country_id = T2.Country
		WHERE T2.Position = "Defender"

	   count(distinct t1.official_native_language)
	0                                            2
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count_distinct_t1_official_native_language_`
		FROM
		  (SELECT `country`,
		          `position`,
		          COUNT() AS `n`
		   FROM
		     (SELECT `country_id`,
		             `country_name`,
		             `capital`,
		             `official_native_language`,
		             `season`,
		             `player`,
		             `position`,
		             `country`,
		             `team`,
		             `draft_class`,
		             `college`,
		             `country_id` AS `draft_pick_number`
		      FROM
		        (SELECT `LHS`.`country_id` AS `country_id`,
		                `LHS`.`country_name` AS `country_name`,
		                `LHS`.`capital` AS `capital`,
		                `LHS`.`official_native_language` AS `official_native_language`,
		                `RHS`.`season` AS `season`,
		                `RHS`.`player` AS `player`,
		                `RHS`.`position` AS `position`,
		                `RHS`.`country` AS `country`,
		                `RHS`.`team` AS `team`,
		                `RHS`.`draft_class` AS `draft_class`,
		                `RHS`.`college` AS `college`
		         FROM `country` AS `LHS`
		         INNER JOIN `match_season` AS `RHS` ON (`LHS`.`country_id` = `RHS`.`draft_pick_number`)))
		   GROUP BY `country`,
		            `position`)
		WHERE (`position` = 'Defender')
		ORDER BY count_distinct_t1_official_native_language_

	   count_distinct_t1_official_native_language_
	0                                            1
	1                                            2
Wrong output for fuzzied solution in instance spider/match_season/0005 (3901)
	EXPECTED OUTPUT ====

		SELECT Player
		FROM match_season
		WHERE College = "UCLA"

	                                     player
	0  Andy Najar Category:Articles with hCards
	1  Andy Najar Category:Articles with hCards
	ACTUAL OUTPUT ====

		
		SELECT `player`
		FROM
		  (SELECT `season`,
		          `player`,
		          `position`,
		          `country`,
		          `team`,
		          `draft_pick_number`,
		          `draft_class`,
		          `college`,
		          `player_other`,
		          `years_played`,
		          `total_wl`,
		          `singles_wl`,
		          `doubles_wl`,
		          `team_other`,
		          `team` AS `player_id`
		   FROM
		     (SELECT `LHS`.`season` AS `season`,
		             `LHS`.`player` AS `player`,
		             `LHS`.`position` AS `position`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`team` AS `team`,
		             `LHS`.`draft_pick_number` AS `draft_pick_number`,
		             `LHS`.`draft_class` AS `draft_class`,
		             `LHS`.`college` AS `college`,
		             `RHS`.`player` AS `player_other`,
		             `RHS`.`years_played` AS `years_played`,
		             `RHS`.`total_wl` AS `total_wl`,
		             `RHS`.`singles_wl` AS `singles_wl`,
		             `RHS`.`doubles_wl` AS `doubles_wl`,
		             `RHS`.`team` AS `team_other`
		      FROM `match_season` AS `LHS`
		      INNER JOIN `player` AS `RHS` ON (`LHS`.`team` = `RHS`.`player_id`)))
		WHERE (`college` = 'UCLA')
		ORDER BY player

	                                     player
	0  Andy Najar Category:Articles with hCards
Wrong output for fuzzied solution in instance spider/match_season/0016 (3902)
	EXPECTED OUTPUT ====

		SELECT T1.Season,
		       T1.Player,
		       T2.Name
		FROM match_season AS T1
		JOIN team AS T2 ON T1.Team = T2.Team_id

	     season                                             player                     name
	0   2005.01            Ben Olsen Category:Articles with hCards          Anais VonRueden
	1   2003.98     Carlos Bocanegra Category:Articles with hCards          Anais VonRueden
	2   2009.00        Rodrigo Faria Category:Articles with hCards          Anais VonRueden
	3   2008.98            Ben Olsen Category:Articles with hCards              D.C. United
	4   2004.98   Ofqe3Rodrigo Faria Category:Articles with hCards              D.C. United
	5   2004.01    9KCz(Damani Ralph Category:Articles with hCards  Los Angeles Galaxy9awO)
	6   2004.99     Maurice Edu Category:Articles with hCardshA1fg  Los Angeles Galaxy9awO)
	7   2005.00        Rodrigo Faria Category:Articles with hCards  Los Angeles Galaxy9awO)
	8   2010.00        Rodrigo Faria Category:Articles with hCards        os Angeles Galaxy
	9   2004.00   lGPDamani Ralph Category:Articles with hCardskMe        os Angeles Galaxy
	10  2010.01            Ben Olsen Category:Articles with hCards      ugFBerneice HandGi4
	11  2003.99  Crox Carlos Bocanegra Category:Articles with h...      ugFBerneice HandGi4
	12  2009.02         Damani Ralph Category:Articles with hCards      ugFBerneice HandGi4
	13  2010.02  Y8nq4Carlos Bocanegra Category:Articles with h...      ugFBerneice HandGi4
	ACTUAL OUTPUT ====

		
		SELECT season,
		       player,
		       name
		FROM
		  (SELECT LHS.team_id AS team_id,
		          LHS.name AS name,
		          RHS.season AS season,
		          RHS.player AS player,
		          RHS.position AS POSITION,
		          RHS.country AS country,
		          RHS.draft_pick_number AS draft_pick_number,
		          RHS.draft_class AS draft_class,
		          RHS.college AS college,
		          RHS.player_other AS player_other,
		          RHS.years_played AS years_played,
		          RHS.total_wl AS total_wl,
		          RHS.singles_wl AS singles_wl,
		          RHS.doubles_wl AS doubles_wl,
		          RHS.team_other AS team_other,
		          RHS.player_id AS player_id
		   FROM team AS LHS
		   INNER JOIN
		     (SELECT season,
		             player,
		             POSITION,
		             country,
		             team,
		             draft_pick_number,
		             draft_class,
		             college,
		             player_other,
		             years_played,
		             total_wl,
		             singles_wl,
		             doubles_wl,
		             team_other,
		             country AS player_id
		      FROM
		        (SELECT LHS.season AS season,
		                LHS.player AS player,
		                LHS.position AS POSITION,
		                LHS.country AS country,
		                LHS.team AS team,
		                LHS.draft_pick_number AS draft_pick_number,
		                LHS.draft_class AS draft_class,
		                LHS.college AS college,
		                RHS.player AS player_other,
		                RHS.years_played AS years_played,
		                RHS.total_wl AS total_wl,
		                RHS.singles_wl AS singles_wl,
		                RHS.doubles_wl AS doubles_wl,
		                RHS.team AS team_other
		         FROM match_season AS LHS
		         INNER JOIN player AS RHS ON (LHS.country = RHS.player_id))) AS RHS ON (LHS.team_id = RHS.team))
		ORDER BY season

	     season                                             player                     name
	0   2005.01            Ben Olsen Category:Articles with hCards          Anais VonRueden
	1   2003.98     Carlos Bocanegra Category:Articles with hCards          Anais VonRueden
	2   2009.00        Rodrigo Faria Category:Articles with hCards          Anais VonRueden
	3   2008.98            Ben Olsen Category:Articles with hCards              D.C. United
	4   2004.98   Ofqe3Rodrigo Faria Category:Articles with hCards              D.C. United
	5   2004.01    9KCz(Damani Ralph Category:Articles with hCards  Los Angeles Galaxy9awO)
	6   2004.99     Maurice Edu Category:Articles with hCardshA1fg  Los Angeles Galaxy9awO)
	7   2010.00        Rodrigo Faria Category:Articles with hCards        os Angeles Galaxy
	8   2004.00   lGPDamani Ralph Category:Articles with hCardskMe        os Angeles Galaxy
	9   2010.01            Ben Olsen Category:Articles with hCards      ugFBerneice HandGi4
	10  2003.99  Crox Carlos Bocanegra Category:Articles with h...      ugFBerneice HandGi4
	11  2009.02         Damani Ralph Category:Articles with hCards      ugFBerneice HandGi4
	12  2010.02  Y8nq4Carlos Bocanegra Category:Articles with h...      ugFBerneice HandGi4
Wrong output for fuzzied solution in instance spider/match_season/0018 (3903)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT T1.College)
		FROM match_season AS T1
		JOIN team AS T2 ON T1.Team = T2.Team_id
		WHERE T2.Name = "Columbus Crew"

	   count(distinct t1.college)
	0                           1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `team_id` AS `count_distinct_t1_college_`
		FROM
		  (SELECT `LHS`.`team_id` AS `team_id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`season` AS `season`,
		          `LHS`.`player` AS `player`,
		          `LHS`.`position` AS `position`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`team` AS `team`,
		          `LHS`.`draft_pick_number` AS `draft_pick_number`,
		          `LHS`.`draft_class` AS `draft_class`,
		          `LHS`.`college` AS `college`,
		          `LHS`.`n_distinct` AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`team_id` AS `team_id`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`season` AS `season`,
		             `LHS`.`player` AS `player`,
		             `LHS`.`position` AS `position`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`team` AS `team`,
		             `LHS`.`draft_pick_number` AS `draft_pick_number`,
		             `LHS`.`draft_class` AS `draft_class`,
		             `LHS`.`college` AS `college`,
		             `RHS`.`n_distinct` AS `n_distinct`
		      FROM
		        (SELECT `LHS`.`team_id` AS `team_id`,
		                `LHS`.`name` AS `name`,
		                `RHS`.`season` AS `season`,
		                `RHS`.`player` AS `player`,
		                `RHS`.`position` AS `position`,
		                `RHS`.`country` AS `country`,
		                `RHS`.`team` AS `team`,
		                `RHS`.`draft_pick_number` AS `draft_pick_number`,
		                `RHS`.`draft_class` AS `draft_class`,
		                `RHS`.`college` AS `college`
		         FROM `team` AS `LHS`
		         CROSS JOIN `match_season` AS `RHS`) AS `LHS`
		      INNER JOIN
		        (SELECT `player`,
		                `position`,
		                COUNT(DISTINCT `college`) AS `n_distinct`
		         FROM `match_season`
		         GROUP BY `player`,
		                  `position`) AS `RHS` ON (`LHS`.`player` = `RHS`.`player`
		                                           AND `LHS`.`position` = `RHS`.`position`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `team`
		      WHERE (`name` = 'Columbus Crew')) AS RHS ON (LHS.team_id = RHS.team_id
		                                                   AND LHS.name = RHS.name))
		ORDER BY count_distinct_t1_college_

	   count_distinct_t1_college_
	0                          11
Wrong output for fuzzied solution in instance spider/match_season/0024 (3907)
	EXPECTED OUTPUT ====

		SELECT College
		FROM match_season
		GROUP BY College
		ORDER BY count(*) DESC
		LIMIT 3

	  college
	0  Furman
	1     non
	2    none
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT college
		FROM
		  (SELECT LHS.college AS college,
		          LHS.n AS n,
		          RHS.college AS college_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT college,
		             COUNT() AS n
		      FROM match_season
		      GROUP BY college) AS LHS
		   CROSS JOIN
		     (SELECT college,
		             COUNT() AS n
		      FROM match_season
		      GROUP BY college) AS RHS)
		WHERE (n > n_other)
		ORDER BY college

	                 college
	0   Cal State Northridge
	1      Concordia College
	2                 Furman
	3  Mm9SYxek(hYtrxiYyYT0w
	4                    non
	5                   none
	6                    one
Wrong output for fuzzied solution in instance spider/match_season/0021 (3908)
	EXPECTED OUTPUT ====

		SELECT Country_name,
		       COUNT(*)
		FROM country AS T1
		JOIN match_season AS T2 ON T1.Country_id = T2.Country
		GROUP BY T1.Country_name

	      country_name  count(*)
	0      7)ieIreland         1
	1  (h5IndonesiaoD5         1
	2   IndonesiaN3F9X         2
	3        pKHdkPxCL         2
	4       Kbtmf27wB6         3
	5  YtwIndonesiaDkY         3
	6   w8Rc5Z47n9kehc         3
	7          Ireland         4
	8        Indonesia        16
	ACTUAL OUTPUT ====

		
		SELECT country_name,
		       n AS count___
		FROM
		  (SELECT LHS.country_id AS country_id,
		          LHS.country_name AS country_name,
		          LHS.capital AS capital,
		          LHS.official_native_language AS official_native_language,
		          RHS.n AS n
		   FROM country AS LHS
		   INNER JOIN
		     (SELECT country,
		             COUNT() AS n
		      FROM match_season
		      GROUP BY country) AS RHS ON (LHS.country_id = RHS.country))
		ORDER BY country_name

	       country_name  count___
	0       7)ieIreland         1
	1   (h5IndonesiaoD5         1
	2         Indonesia         1
	3         Indonesia         1
	4         Indonesia         2
	5    IndonesiaN3F9X         2
	6         pKHdkPxCL         2
	7        Kbtmf27wB6         3
	8   YtwIndonesiaDkY         3
	9    w8Rc5Z47n9kehc         3
	10          Ireland         4
	11        Indonesia         6
	12        Indonesia         6
Wrong output for fuzzied solution in instance spider/match_season/0023 (3909)
	EXPECTED OUTPUT ====

		SELECT POSITION
		FROM match_season
		GROUP BY POSITION
		ORDER BY count(*) DESC
		LIMIT 1

	     position
	0  Midfielder
	ACTUAL OUTPUT ====

		
		SELECT POSITION
		FROM
		  (SELECT draft_pick_number,
		          POSITION,
		          COUNT() AS n
		   FROM
		     (SELECT season,
		             player,
		             POSITION,
		             draft_pick_number AS country,
		             team,
		             draft_pick_number,
		             draft_class,
		             college,
		             season_other,
		             player_other,
		             position_other,
		             team_other,
		             draft_class_other,
		             college_other
		      FROM
		        (SELECT season,
		                player,
		                POSITION,
		                country,
		                team,
		                team AS draft_pick_number,
		                draft_class,
		                college,
		                season_other,
		                player_other,
		                position_other,
		                team_other,
		                draft_class_other,
		                college_other
		         FROM
		           (SELECT LHS.season AS season,
		                   LHS.player AS player,
		                   LHS.position AS POSITION,
		                   LHS.country AS country,
		                   LHS.team AS team,
		                   LHS.draft_pick_number AS draft_pick_number,
		                   LHS.draft_class AS draft_class,
		                   LHS.college AS college,
		                   RHS.season AS season_other,
		                   RHS.player AS player_other,
		                   RHS.position AS position_other,
		                   RHS.team AS team_other,
		                   RHS.draft_class AS draft_class_other,
		                   RHS.college AS college_other
		            FROM match_season AS LHS
		            INNER JOIN match_season AS RHS ON (LHS.team = RHS.draft_pick_number
		                                                  AND LHS.draft_pick_number = RHS.country))))
		   GROUP BY draft_pick_number,
		            POSITION)
		ORDER BY POSITION

	   position
	0  Defender
Wrong output for fuzzied solution in instance spider/match_season/0011 (3914)
	EXPECTED OUTPUT ====

		SELECT T2.Season,
		       T2.Player,
		       T1.Country_name
		FROM country AS T1
		JOIN match_season AS T2 ON T1.Country_id = T2.Country

	     season                                             player        country_name
	0   2005.01            Ben Olsen Category:Articles with hCards                Iran
	1   2003.98     Carlos Bocanegra Category:Articles with hCards                Iran
	2   2009.00        Rodrigo Faria Category:Articles with hCards                Iran
	3   2008.98            Ben Olsen Category:Articles with hCards              Irelan
	4   2003.99  Crox Carlos Bocanegra Category:Articles with h...              Irelan
	5   2004.01    9KCz(Damani Ralph Category:Articles with hCards        IrelandEun2W
	6   2004.99     Maurice Edu Category:Articles with hCardshA1fg        IrelandEun2W
	7   2004.98   Ofqe3Rodrigo Faria Category:Articles with hCards        IrelandEun2W
	8   2010.02  Y8nq4Carlos Bocanegra Category:Articles with h...        IrelandEun2W
	9   2005.00        Rodrigo Faria Category:Articles with hCards       United States
	10  2010.01            Ben Olsen Category:Articles with hCards  ZiiO5United States
	11  2009.02         Damani Ralph Category:Articles with hCards  ZiiO5United States
	12  2010.00        Rodrigo Faria Category:Articles with hCards  ZiiO5United States
	13  2004.00   lGPDamani Ralph Category:Articles with hCardskMe  ZiiO5United States
	ACTUAL OUTPUT ====

		
		SELECT season,
		       player,
		       country_name
		FROM
		  (SELECT LHS.country_id AS country_id,
		          LHS.country_name AS country_name,
		          LHS.capital AS capital,
		          LHS.official_native_language AS official_native_language,
		          RHS.season AS season,
		          RHS.player AS player,
		          RHS.position AS POSITION,
		          RHS.country AS country,
		          RHS.team AS team,
		          RHS.draft_pick_number AS draft_pick_number,
		          RHS.draft_class AS draft_class,
		          RHS.college AS college,
		          RHS.player_other AS player_other,
		          RHS.years_played AS years_played,
		          RHS.total_wl AS total_wl,
		          RHS.singles_wl AS singles_wl,
		          RHS.doubles_wl AS doubles_wl,
		          RHS.team_other AS team_other
		   FROM country AS LHS
		   INNER JOIN
		     (SELECT season,
		             player,
		             POSITION,
		             country,
		             team,
		             draft_pick_number,
		             draft_class,
		             college,
		             player_other,
		             years_played,
		             total_wl,
		             singles_wl,
		             doubles_wl,
		             team_other,
		             country AS player_id
		      FROM
		        (SELECT LHS.season AS season,
		                LHS.player AS player,
		                LHS.position AS POSITION,
		                LHS.country AS country,
		                LHS.team AS team,
		                LHS.draft_pick_number AS draft_pick_number,
		                LHS.draft_class AS draft_class,
		                LHS.college AS college,
		                RHS.player AS player_other,
		                RHS.years_played AS years_played,
		                RHS.total_wl AS total_wl,
		                RHS.singles_wl AS singles_wl,
		                RHS.doubles_wl AS doubles_wl,
		                RHS.team AS team_other
		         FROM match_season AS LHS
		         INNER JOIN player AS RHS ON (LHS.country = RHS.player_id))) AS RHS ON (LHS.country_id = RHS.player_id))
		ORDER BY season

	     season                                             player        country_name
	0   2005.01            Ben Olsen Category:Articles with hCards                Iran
	1   2003.98     Carlos Bocanegra Category:Articles with hCards                Iran
	2   2009.00        Rodrigo Faria Category:Articles with hCards                Iran
	3   2008.98            Ben Olsen Category:Articles with hCards              Irelan
	4   2003.99  Crox Carlos Bocanegra Category:Articles with h...              Irelan
	5   2004.01    9KCz(Damani Ralph Category:Articles with hCards        IrelandEun2W
	6   2004.99     Maurice Edu Category:Articles with hCardshA1fg        IrelandEun2W
	7   2004.98   Ofqe3Rodrigo Faria Category:Articles with hCards        IrelandEun2W
	8   2010.02  Y8nq4Carlos Bocanegra Category:Articles with h...        IrelandEun2W
	9   2010.01            Ben Olsen Category:Articles with hCards  ZiiO5United States
	10  2009.02         Damani Ralph Category:Articles with hCards  ZiiO5United States
	11  2010.00        Rodrigo Faria Category:Articles with hCards  ZiiO5United States
	12  2004.00   lGPDamani Ralph Category:Articles with hCardskMe  ZiiO5United States
Wrong output for fuzzied solution in instance spider/match_season/0029 (3915)
	EXPECTED OUTPUT ====

		SELECT College
		FROM match_season
		WHERE POSITION = "Midfielder" INTERSECT
		  SELECT College
		  FROM match_season WHERE POSITION = "Defender"

	Empty DataFrame
	Columns: [college]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `college_other` AS `college`
		FROM
		  (SELECT `season`,
		          `player`,
		          `position`,
		          `country`,
		          `team`,
		          `team` AS `draft_pick_number`,
		          `draft_class`,
		          `college`,
		          `season_other`,
		          `player_other`,
		          `country_other`,
		          `team_other`,
		          `draft_class_other`,
		          `college_other`
		   FROM
		     (SELECT `LHS`.`season` AS `season`,
		             `LHS`.`player` AS `player`,
		             `LHS`.`position` AS `position`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`team` AS `team`,
		             `LHS`.`draft_pick_number` AS `draft_pick_number`,
		             `LHS`.`draft_class` AS `draft_class`,
		             `LHS`.`college` AS `college`,
		             `RHS`.`season` AS `season_other`,
		             `RHS`.`player` AS `player_other`,
		             `RHS`.`country` AS `country_other`,
		             `RHS`.`team` AS `team_other`,
		             `RHS`.`draft_class` AS `draft_class_other`,
		             `RHS`.`college` AS `college_other`
		      FROM `match_season` AS `LHS`
		      INNER JOIN `match_season` AS `RHS` ON (`LHS`.`team` = `RHS`.`draft_pick_number`
		                                                AND `LHS`.`position` = `RHS`.`position`)))
		WHERE (`position` = 'Midfielder'
		       AND `position` != 'Defender')
		ORDER BY college

	  college
	0  Furman
	1  Furman
No solution for instance spider/match_season/0028 (3917)
Wrong output for fuzzied solution in instance spider/soccer_2/0042 (3918)
	EXPECTED OUTPUT ====

		SELECT cName
		FROM tryout
		WHERE pPos = 'goalie' INTERSECT
		  SELECT cName
		  FROM tryout WHERE pPos = 'mid'

	        cname
	0    2y(nXASU
	1   8C ASURJC
	2    ASUEun2W
	3    ASUu4)1C
	4    AwM2uFSU
	5          FS
	6         FSU
	7    FSUFHAwK
	8   G4vASUT90
	9   HQCFSUHFd
	10   QIijVFSU
	11  oBkFSUfba
	12   vIL5PASU
	ACTUAL OUTPUT ====

		
		SELECT `cname`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM `tryout`
		         WHERE (`ppos` = 'goalie'
		                AND `ppos` != 'mid'))
		      ORDER BY ppos DESC)
		   LIMIT 1)

	      cname
	0  AwM2uFSU
No solution for instance spider/soccer_2/0037 (3920)
Wrong output for fuzzied solution in instance spider/soccer_2/0036 (3922)
	EXPECTED OUTPUT ====

		SELECT max(T1.HS),
		       pPos
		FROM player AS T1
		JOIN tryout AS T2 ON T1.pID = T2.pID
		WHERE T1.HS > 1000
		GROUP BY T2.pPos

	    max(t1.hs)           ppos
	0      1599.99  BJGstrikertKp
	1      1599.99       mid6VGpl
	2      1599.99       midFdL8(
	3      1600.00  )3(strikerWdg
	4      1600.00    7UxDfgoalie
	5      1600.00    M7tzzgoalie
	6      1600.00       NVkpUmid
	7      1600.00  Pg4striker)TK
	8      1600.00       ahe5Kmid
	9      1600.00    goalie9DOoN
	10     1600.00    goalieMx5Yl
	11     1600.00             id
	12     1600.00    lVsUygoalie
	13     1600.00             mi
	14     1600.00       mid7pDs5
	15     1600.00       midp0B0r
	16     1600.00       midzk2jW
	17     1600.00          oalie
	18     1600.00         strike
	19     1600.01    XrYSYgoalie
	20     1600.01    XtRRGgoalie
	21     1600.02         goalie
	22     1600.02            mid
	23     1600.02      ocamidV)x
	24     1600.02        striker
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT maxhs AS max_t1_hs_,
		                ppos
		FROM
		  (SELECT LHS.pid AS pid,
		          LHS.cname AS cname,
		          LHS.ppos AS ppos,
		          LHS.decision AS decision,
		          RHS.pname AS pname,
		          RHS.ycard AS ycard,
		          RHS.hs AS hs,
		          RHS.maxhs AS maxhs
		   FROM tryout AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT pid,
		                pname,
		                ycard,
		                hs,
		                MAX(hs) OVER () AS maxhs
		         FROM player)
		      WHERE (hs >= 1000.0
		             OR maxhs <= hs)) AS RHS ON (LHS.pid = RHS.pid))
		ORDER BY max_t1_hs_

	    max_t1_hs_           ppos
	0      1600.02  )3(strikerWdg
	1      1600.02    7UxDfgoalie
	2      1600.02  BJGstrikertKp
	3      1600.02    M7tzzgoalie
	4      1600.02       NVkpUmid
	5      1600.02  Pg4striker)TK
	6      1600.02    XrYSYgoalie
	7      1600.02    XtRRGgoalie
	8      1600.02       ahe5Kmid
	9      1600.02         goalie
	10     1600.02    goalie9DOoN
	11     1600.02    goalieMx5Yl
	12     1600.02             id
	13     1600.02    lVsUygoalie
	14     1600.02             mi
	15     1600.02            mid
	16     1600.02       mid6VGpl
	17     1600.02       mid7pDs5
	18     1600.02       midFdL8(
	19     1600.02       midp0B0r
	20     1600.02       midzk2jW
	21     1600.02          oalie
	22     1600.02      ocamidV)x
	23     1600.02         strike
	24     1600.02        striker
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
Error while executing solution for instance spider/soccer_2/0008 (3925)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT cname) OVER () AS count_distinct_cname_
FROM tryout
ORDER BY count_distinct_cname_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
Wrong output for fuzzied solution in instance spider/soccer_2/0027 (3929)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.state
		FROM college AS T1
		JOIN tryout AS T2 ON T1.cName = T2.cName
		WHERE T2.decision = 'yes'

	     state
	0       AZ
	1       FL
	2  N2)TPFL
	3  p2lydFL
	ACTUAL OUTPUT ====

		
		SELECT `state`
		FROM
		  (SELECT `LHS`.`pid` AS `pid`,
		          `LHS`.`cname` AS `cname`,
		          `LHS`.`ppos` AS `ppos`,
		          `LHS`.`decision` AS `decision`,
		          `RHS`.`state` AS `state`,
		          `RHS`.`enr` AS `enr`
		   FROM
		     (SELECT *
		      FROM `tryout`
		      WHERE (`decision` = 'yes')) AS LHS
		   INNER JOIN college AS RHS ON (LHS.cname = RHS.cname))
		ORDER BY state

	     state
	0       AZ
	1       AZ
	2       AZ
	3       AZ
	4       FL
	5  N2)TPFL
	6  p2lydFL
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
Wrong output for fuzzied solution in instance spider/soccer_2/0004 (3936)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Player
		WHERE HS > 1000

	   count(*)
	0        40
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM player
		WHERE (hs >= 1000.0)
		ORDER BY count___

	   count___
	0        43
No solution for instance spider/soccer_2/0012 (3937)
Wrong output for fuzzied solution in instance spider/soccer_2/0026 (3938)
	EXPECTED OUTPUT ====

		SELECT DISTINCT state
		FROM college AS T1
		JOIN tryout AS T2 ON T1.cName = T2.cName

	      state
	0         A
	1        AZ
	2         F
	3   FFhwSAZ
	4        FL
	5   FL3UNZE
	6   N2)TPFL
	7   QIijVAZ
	8   oMm1FFL
	9   p2lydFL
	10  z6 NvAZ
	ACTUAL OUTPUT ====

		
		SELECT state
		FROM college
		ORDER BY state

	      state
	0   9KCz(AZ
	1         A
	2         A
	3        AZ
	4        AZ
	5        AZ
	6        AZ
	7        AZ
	8        AZ
	9        AZ
	10       AZ
	11       AZ
	12  AZ6Mbeh
	13        F
	14        F
	15  FFhwSAZ
	16       FL
	17       FL
	18       FL
	19       FL
	20       FL
	21  FL3UNZE
	22  N2)TPFL
	23  QIijVAZ
	24        Z
	25  oMm1FFL
	26  p2lydFL
	27  z6 NvAZ
No solution for instance spider/soccer_2/0015 (3939)
Wrong output for fuzzied solution in instance spider/soccer_2/0005 (3940)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM College
		WHERE enr > 15000

	   count(*)
	0        35
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM college
		WHERE (enr >= 15000.0)
		ORDER BY count___

	   count___
	0        36
Wrong output for fuzzied solution in instance spider/soccer_2/0016 (3941)
	EXPECTED OUTPUT ====

		SELECT cName,
		       enr
		FROM College
		WHERE enr > 10000
		  AND state = "LA"

	         cname           enr
	0     8bgYLASU  18000.010000
	1          FSU  18999.980000
	2   Ifau46UTWm  18000.010000
	3    LPNfmBrPV  18999.980000
	4           LS  10109.117882
	5    OYibY4RCn  17999.990000
	6    R66iSu0wA  19000.010000
	7           SU  17999.980000
	8    d)VASUGyI  19000.020000
	9    nDhFSU9Kg  19922.285205
	10   qX8fCmLwi  10000.010000
	ACTUAL OUTPUT ====

		
		SELECT `cname`,
		       `enr`
		FROM `college`
		WHERE (`state` = 'LA'
		       AND enr >= 10000.0)
		ORDER BY cname

	         cname           enr
	0     8bgYLASU  18000.010000
	1     ASU XLfK  10000.000000
	2          FSU  18999.980000
	3   Ifau46UTWm  18000.010000
	4    LPNfmBrPV  18999.980000
	5           LS  10109.117882
	6    OYibY4RCn  17999.990000
	7    R66iSu0wA  19000.010000
	8           SU  17999.980000
	9    d)VASUGyI  19000.020000
	10   nDhFSU9Kg  19922.285205
	11   qX8fCmLwi  10000.010000
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
Wrong output for fuzzied solution in instance spider/soccer_2/0045 (3944)
	EXPECTED OUTPUT ====

		SELECT cName
		FROM tryout
		WHERE pPos = 'mid'
		EXCEPT
		SELECT cName
		FROM tryout
		WHERE pPos = 'goalie'

	       cname
	0        ASU
	1   FSU3cv)u
	2   FSU9awO)
	3   FSUvBIQ)
	4  RDXFSUNfP
	5   SXvflASU
	6   Vv6kpFSU
	7   p2lydASU
	8   v6fImASU
	9  vDEFSUK6X
	ACTUAL OUTPUT ====

		
		SELECT `cname`
		FROM
		  (SELECT *
		   FROM `tryout` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `tryout`
		           WHERE (`ppos` != 'mid'
		                  OR `ppos` = 'goalie')) AS RHS
		        WHERE (LHS.cname = RHS.cname
		               AND LHS.decision = RHS.decision) ))
		ORDER BY cname

	        cname
	0    2y(nXASU
	1   8C ASURJC
	2         ASU
	3    AwM2uFSU
	4          FS
	5         FSU
	6    FSU9awO)
	7    FSU9awO)
	8    FSU9awO)
	9    FSUvBIQ)
	10   FSUvBIQ)
	11  G4vASUT90
	12  HQCFSUHFd
	13   QIijVFSU
	14  RDXFSUNfP
	15   SXvflASU
	16   SXvflASU
	17   SXvflASU
	18   Vv6kpFSU
	19  oBkFSUfba
	20   p2lydASU
	21   p2lydASU
	22   p2lydASU
	23   v6fImASU
	24  vDEFSUK6X
	25   vIL5PASU
Wrong output for fuzzied solution in instance spider/soccer_2/0041 (3946)
	EXPECTED OUTPUT ====

		SELECT cName
		FROM College
		WHERE enr < 13000
		  AND state = "AZ"
		UNION
		SELECT cName
		FROM College
		WHERE enr > 15000
		  AND state = "LA"

	      cname
	0       FSU
	1  gNjjNFSU
	ACTUAL OUTPUT ====

		
		SELECT `cname`
		FROM
		  (SELECT *
		   FROM `college`
		   WHERE (`enr` > 13000.0
		          OR `enr` < 15000.0))
		WHERE (`state` = 'AZ'
		       OR `state` = 'LA')
		ORDER BY cname

	      cname
	0       FSU
	1        SU
	2  ZKcuzFSU
	3  gNjjNFSU
Wrong output for fuzzied solution in instance spider/soccer_2/0007 (3951)
	EXPECTED OUTPUT ====

		SELECT pName,
		       HS
		FROM Player
		WHERE HS < 1500

	            pname            hs
	0           Blake -92319.310991
	1      aB1B4David -73533.832184
	2      Guwv1David -48667.906673
	3          harles -32852.582074
	4           Eddie  -1707.944207
	5            avid  -1707.934207
	6     RfvBlakehb1    599.980000
	7     xwEBlake6sK    599.980000
	8      6d1cnEddie    599.990000
	9           r5oFw    599.990000
	10    ABsEddieAob    600.000000
	11   CharlesT74yp    600.000000
	12          David    600.000000
	13    a( DavideFo    600.000000
	14     Eddiem3p7S    600.010000
	15           ddie    600.010000
	16          David   1199.980000
	17        ZhIqAbu   1199.990000
	18  7hcCharlesQ8b   1200.000000
	19          Blake   1200.000000
	20         Charle   1200.000000
	21        Charles   1200.000000
	22          Eddie   1200.000000
	23        esqd2gS   1200.000000
	24          David   1200.010000
	25           Blak   1200.020000
	26          Eddie   1200.020000
	27   j4HUFCharles   1200.020000
	28           lake   1200.020000
	29           Blak   1499.980000
	30          Blake   1499.980000
	31     BlakeyVZP    1499.980000
	32  SatCharles7(c   1499.980000
	33          David   1499.990000
	34         harles   1499.990000
	35         n4mPi4   1499.990000
	36   ygw4M j)AOf)   1499.990000
	ACTUAL OUTPUT ====

		
		SELECT pname,
		       hs
		FROM player
		WHERE (hs <= 1500.0)
		ORDER BY pname

	            pname            hs
	0           Blake -92319.310991
	1      aB1B4David -73533.832184
	2      Guwv1David -48667.906673
	3          harles -32852.582074
	4           Eddie  -1707.944207
	5            avid  -1707.934207
	6     RfvBlakehb1    599.980000
	7     xwEBlake6sK    599.980000
	8      6d1cnEddie    599.990000
	9           r5oFw    599.990000
	10    ABsEddieAob    600.000000
	11   CharlesT74yp    600.000000
	12          David    600.000000
	13    a( DavideFo    600.000000
	14     Eddiem3p7S    600.010000
	15           ddie    600.010000
	16          David   1199.980000
	17        ZhIqAbu   1199.990000
	18  7hcCharlesQ8b   1200.000000
	19          Blake   1200.000000
	20         Charle   1200.000000
	21        Charles   1200.000000
	22          Eddie   1200.000000
	23        esqd2gS   1200.000000
	24          David   1200.010000
	25           Blak   1200.020000
	26          Eddie   1200.020000
	27   j4HUFCharles   1200.020000
	28           lake   1200.020000
	29           Blak   1499.980000
	30          Blake   1499.980000
	31     BlakeyVZP    1499.980000
	32  SatCharles7(c   1499.980000
	33          David   1499.990000
	34         harles   1499.990000
	35         n4mPi4   1499.990000
	36   ygw4M j)AOf)   1499.990000
	37          Blake   1500.000000
	38     BlakeK(gpN   1500.000000
	39    L9PEddie)1o   1500.000000
No solution for instance spider/soccer_2/0034 (3952)
Wrong output for fuzzied solution in instance spider/soccer_2/0024 (3953)
	EXPECTED OUTPUT ====

		SELECT cName
		FROM college
		ORDER BY enr DESC
		LIMIT 3

	      cname
	0        AS
	1        FS
	2  FSUvBIQ)
	ACTUAL OUTPUT ====

		
		SELECT cname
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM college
		      ORDER BY state DESC)
		   LIMIT 3)

	       cname
	0   ASUu4)1C
	1  RDXFSUNfP
	2  bYRFSUvH9
Wrong output for fuzzied solution in instance spider/soccer_2/0021 (3954)
	EXPECTED OUTPUT ====

		SELECT pPos
		FROM tryout
		GROUP BY pPos
		ORDER BY count(*) DESC
		LIMIT 1

	  ppos
	0  mid
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT ppos_other AS ppos
		FROM
		  (SELECT LHS.pid AS pid,
		          LHS.ppos AS ppos,
		          LHS.n AS n,
		          RHS.pid AS pid_other,
		          RHS.ppos AS ppos_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT pid,
		             ppos,
		             COUNT() AS n
		      FROM tryout
		      GROUP BY pid,
		               ppos) AS LHS
		   CROSS JOIN
		     (SELECT pid,
		             ppos,
		             COUNT() AS n
		      FROM tryout
		      GROUP BY pid,
		               ppos) AS RHS)
		WHERE (n < n_other)
		ORDER BY ppos

	     ppos
	0  goalie
	1      mi
	2     mid
No solution for instance spider/soccer_2/0043 (3957)
Wrong output for fuzzied solution in instance spider/soccer_2/0046 (3958)
	EXPECTED OUTPUT ====

		SELECT T1.state
		FROM college AS T1
		JOIN tryout AS T2 ON T1.cName = T2.cName
		WHERE T2.pPos = 'mid'
		EXCEPT
		SELECT T1.state
		FROM college AS T1
		JOIN tryout AS T2 ON T1.cName = T2.cName
		WHERE T2.pPos = 'goalie'

	      state
	0  8fEAZbcN
	1   FLO4)0v
	2  GFRAZUVZ
	3   OKno2FA
	4  ruGFLb1e
	ACTUAL OUTPUT ====

		
		SELECT `state`
		FROM
		  (SELECT *
		   FROM `college` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `tryout`
		           WHERE (`ppos` != 'mid'
		                  OR `ppos` = 'goalie')) AS RHS
		        WHERE (LHS.cname = RHS.cname) ))
		ORDER BY state

	       state
	0   (YoFL8nt
	1         AZ
	2         AZ
	3         AZ
	4          F
	5         FL
	6         FL
	7          K
	8         OK
	9          Z
	10  ruGFLb1e
Wrong output for fuzzied solution in instance spider/soccer_2/0047 (3959)
	EXPECTED OUTPUT ====

		SELECT COUNT(*)
		FROM
		  (SELECT T1.state
		   FROM college AS T1
		   JOIN tryout AS T2 ON T1.cName = T2.cName
		   WHERE T2.pPos = 'mid'
		   EXCEPT SELECT T1.state
		   FROM college AS T1
		   JOIN tryout AS T2 ON T1.cName = T2.cName
		   WHERE T2.pPos = 'goalie')

	   count(*)
	0         5
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`enr` AS `enr`,
		          `LHS`.`n` AS `n`,
		          `RHS`.`pid` AS `pid`,
		          `RHS`.`cname` AS `cname`,
		          `RHS`.`ppos` AS `ppos`,
		          `RHS`.`decision` AS `decision`
		   FROM
		     (SELECT `enr`,
		             COUNT() AS `n`
		      FROM `college`
		      GROUP BY `enr`) AS `LHS`
		   CROSS JOIN
		     (SELECT *
		      FROM `tryout`
		      WHERE (`ppos` != 'mid'
		             OR `ppos` != 'goalie')) AS RHS)
		ORDER BY count___

	   count___
	0         1
	1         2
	2         3
	3         4
	4         5
	5         6
Error while executing solution for instance spider/soccer_2/0009 (3961)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT ppos) OVER () AS count_distinct_ppos_
FROM tryout
ORDER BY count_distinct_ppos_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/soccer_2/0025 (3962)
	EXPECTED OUTPUT ====

		SELECT cName,
		       state,
		       min(enr)
		FROM college
		GROUP BY state

	        cname    state  min(enr)
	0    2y(nXASU  QIijVAZ  21999.98
	1          AS        F  22000.01
	2    ASUEun2W        A  21999.98
	3    ASUFZjIj  FFhwSAZ  18999.98
	4    ASUu4)1C  z6 NvAZ  22000.00
	5    AwM2uFSU       AZ  19000.00
	6    FSUO5oGB        Z  22000.00
	7   NzFFSUUkJ  AZ6Mbeh  22000.00
	8   RDXFSUNfP  p2lydFL  19000.00
	9    Vv6kpFSU       FL  19000.01
	10  bYRFSUvH9  oMm1FFL  22000.00
	11  kIUFSULo5  FL3UNZE  18999.98
	12  pLJASUFWa  9KCz(AZ  19000.00
	13   vIL5PASU  N2)TPFL  22000.00
	ACTUAL OUTPUT ====

		
		SELECT cname,
		       state,
		       enr AS min_enr_
		FROM
		  (SELECT cname,
		          state,
		          MIN(enr) AS enr
		   FROM college
		   GROUP BY cname,
		            state)
		ORDER BY cname

	        cname    state  min_enr_
	0    0yHnGASU       AZ  22000.00
	1    2y(nXASU  QIijVAZ  21999.98
	2   8C ASURJC       AZ  19000.02
	3          AS        F  22000.01
	4         ASU       FL  21999.99
	5    ASUEun2W        A  21999.98
	6    ASUFZjIj  FFhwSAZ  18999.98
	7    ASUu4)1C  z6 NvAZ  22000.00
	8    AwM2uFSU       AZ  19000.00
	9          FS       AZ  22000.01
	10        FSU        A  21999.99
	11   FSU9awO)       AZ  22000.00
	12   FSUE9rnP       AZ  22000.00
	13   FSUFHAwK        F  22000.01
	14   FSUO5oGB        Z  22000.00
	15   FSUvBIQ)       FL  22000.01
	16  G4vASUT90       FL  22000.01
	17  NzFFSUUkJ  AZ6Mbeh  22000.00
	18   PrR1BFSU       AZ  21999.99
	19  RDXFSUNfP  p2lydFL  19000.00
	20         SU       AZ  22000.00
	21   SXvflASU       FL  21999.99
	22   Vv6kpFSU       FL  19000.01
	23  bYRFSUvH9  oMm1FFL  22000.00
	24  kIUFSULo5  FL3UNZE  18999.98
	25  pLJASUFWa  9KCz(AZ  19000.00
	26   rqrHJASU       AZ  21999.99
	27   vIL5PASU  N2)TPFL  22000.00
Wrong output for fuzzied solution in instance spider/soccer_2/0010 (3965)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM tryout
		WHERE decision = 'yes'

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `decision`,
		          `ppos`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `tryout`
		      WHERE (`decision` != 'yes'))
		   GROUP BY decision,
		            ppos)
		ORDER BY count___

	   count___
	0         1
	1         2
Wrong output for fuzzied solution in instance spider/soccer_2/0044 (3966)
	EXPECTED OUTPUT ====

		SELECT COUNT(*)
		FROM
		  (SELECT cName
		   FROM tryout
		   WHERE pPos = 'goalie' INTERSECT
		     SELECT cName
		     FROM tryout WHERE pPos = 'mid')

	   count(*)
	0        13
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT `decision`,
		          `ppos`,
		          COUNT(DISTINCT `ppos`) AS `n_distinct`
		   FROM `tryout`
		   GROUP BY `decision`,
		            `ppos`)
		WHERE (`ppos` != 'goalie'
		       AND `ppos` != 'mid')
		ORDER BY count___

	    count___
	0          1
	1          1
	2          1
	3          1
	4          1
	5          1
	6          1
	7          1
	8          1
	9          1
	10         1
	11         1
	12         1
	13         1
	14         1
	15         1
	16         1
	17         1
	18         1
	19         1
	20         1
	21         1
	22         1
	23         1
	24         1
	25         1
	26         1
	27         1
	28         1
	29         1
	30         1
	31         1
	32         1
	33         1
	34         1
	35         1
	36         1
	37         1
	38         1
	39         1
	40         1
	41         1
Wrong output for fuzzied solution in instance spider/soccer_2/0040 (3967)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.state,
		                T1.enr
		FROM college AS T1
		JOIN tryout AS T2 ON T1.cName = T2.cName
		WHERE T2.decision = 'yes'

	     state       enr
	0  p2lydFL  19000.00
	1       FL  19000.01
	2       AZ  19000.02
	3       AZ  22000.00
	4  N2)TPFL  22000.00
	ACTUAL OUTPUT ====

		
		SELECT `state`,
		       `enr`
		FROM
		  (SELECT `LHS`.`pid` AS `pid`,
		          `LHS`.`cname` AS `cname`,
		          `LHS`.`ppos` AS `ppos`,
		          `LHS`.`decision` AS `decision`,
		          `RHS`.`state` AS `state`,
		          `RHS`.`enr` AS `enr`
		   FROM
		     (SELECT *
		      FROM `tryout`
		      WHERE (`decision` = 'yes')) AS LHS
		   INNER JOIN college AS RHS ON (LHS.cname = RHS.cname))
		ORDER BY state

	     state       enr
	0  p2lydFL  19000.00
	1       FL  19000.01
	2       AZ  19000.02
	3       AZ  19000.02
	4       AZ  22000.00
	5       AZ  22000.00
	6  N2)TPFL  22000.00
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27478.sqlite3'
No solution for instance spider/customer_complaints/0017 (3972)
No solution for instance spider/customer_complaints/0003 (3974)
No solution for instance spider/customer_complaints/0022 (3975)
Wrong output for fuzzied solution in instance spider/customer_complaints/0006 (3977)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t1.product_name
		FROM products AS t1
		JOIN complaints AS t2 ON t1.product_id = t2.product_id
		JOIN customers AS t3
		GROUP BY t3.customer_id
		ORDER BY count(*)
		LIMIT 1

	  product_name
	0    Chocolate
	ACTUAL OUTPUT ====

		
		SELECT product_name
		FROM
		  (SELECT customer_id,
		          customer_type_code,
		          address_line_1,
		          address_line_2,
		          town_city,
		          state,
		          email_address,
		          phone_number,
		          product_id,
		          parent_product_id,
		          product_category_code,
		          date_product_first_available,
		          date_product_discontinued,
		          product_name,
		          product_description,
		          product_price,
		          complaint_id,
		          complaint_outcome_code,
		          complaint_status_code,
		          complaint_type_code,
		          date_complaint_raised,
		          date_complaint_closed,
		          staff_id,
		          parent_product_id AS n
		   FROM
		     (SELECT LHS.customer_id AS customer_id,
		             LHS.customer_type_code AS customer_type_code,
		             LHS.address_line_1 AS address_line_1,
		             LHS.address_line_2 AS address_line_2,
		             LHS.town_city AS town_city,
		             LHS.state AS state,
		             LHS.email_address AS email_address,
		             LHS.phone_number AS phone_number,
		             LHS.product_id AS product_id,
		             LHS.parent_product_id AS parent_product_id,
		             LHS.product_category_code AS product_category_code,
		             LHS.date_product_first_available AS date_product_first_available,
		             LHS.date_product_discontinued AS date_product_discontinued,
		             LHS.product_name AS product_name,
		             LHS.product_description AS product_description,
		             LHS.product_price AS product_price,
		             LHS.complaint_id AS complaint_id,
		             LHS.complaint_outcome_code AS complaint_outcome_code,
		             LHS.complaint_status_code AS complaint_status_code,
		             LHS.complaint_type_code AS complaint_type_code,
		             LHS.date_complaint_raised AS date_complaint_raised,
		             LHS.date_complaint_closed AS date_complaint_closed,
		             LHS.staff_id AS staff_id
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.customer_type_code AS customer_type_code,
		                LHS.address_line_1 AS address_line_1,
		                LHS.address_line_2 AS address_line_2,
		                LHS.town_city AS town_city,
		                LHS.state AS state,
		                LHS.email_address AS email_address,
		                LHS.phone_number AS phone_number,
		                LHS.product_id AS product_id,
		                LHS.parent_product_id AS parent_product_id,
		                LHS.product_category_code AS product_category_code,
		                LHS.date_product_first_available AS date_product_first_available,
		                LHS.date_product_discontinued AS date_product_discontinued,
		                LHS.product_name AS product_name,
		                LHS.product_description AS product_description,
		                LHS.product_price AS product_price,
		                RHS.complaint_id AS complaint_id,
		                RHS.complaint_outcome_code AS complaint_outcome_code,
		                RHS.complaint_status_code AS complaint_status_code,
		                RHS.complaint_type_code AS complaint_type_code,
		                RHS.date_complaint_raised AS date_complaint_raised,
		                RHS.date_complaint_closed AS date_complaint_closed,
		                RHS.staff_id AS staff_id
		         FROM
		           (SELECT LHS.customer_id AS customer_id,
		                   LHS.customer_type_code AS customer_type_code,
		                   LHS.address_line_1 AS address_line_1,
		                   LHS.address_line_2 AS address_line_2,
		                   LHS.town_city AS town_city,
		                   LHS.state AS state,
		                   LHS.email_address AS email_address,
		                   LHS.phone_number AS phone_number,
		                   RHS.product_id AS product_id,
		                   RHS.parent_product_id AS parent_product_id,
		                   RHS.product_category_code AS product_category_code,
		                   RHS.date_product_first_available AS date_product_first_available,
		                   RHS.date_product_discontinued AS date_product_discontinued,
		                   RHS.product_name AS product_name,
		                   RHS.product_description AS product_description,
		                   RHS.product_price AS product_price
		            FROM customers AS LHS
		            CROSS JOIN products AS RHS) AS LHS
		         INNER JOIN complaints AS RHS ON (LHS.customer_id = RHS.customer_id
		                                             AND LHS.product_id = RHS.product_id)) AS LHS
		      INNER JOIN
		        (SELECT product_id,
		                COUNT() AS n
		         FROM complaints
		         GROUP BY product_id) AS RHS ON (LHS.parent_product_id = RHS.n
		                                         AND LHS.staff_id = RHS.product_id)))
		ORDER BY product_name

	Empty DataFrame
	Columns: [product_name]
	Index: []
Wrong output for fuzzied solution in instance spider/customer_complaints/0004 (3978)
	EXPECTED OUTPUT ====

		SELECT t1.product_name,
		       count(*)
		FROM products AS t1
		JOIN complaints AS t2 ON t1.product_id = t2.product_id
		GROUP BY t1.product_name

	  product_name  count(*)
	0      Keyboar        11
	1  jOXMouseBue        12
	2    Chocolate        14
	3  ybFMouseNBL        18
	ACTUAL OUTPUT ====

		
		SELECT product_name,
		       n AS count___
		FROM
		  (SELECT LHS.product_id AS product_id,
		          LHS.parent_product_id AS parent_product_id,
		          LHS.product_category_code AS product_category_code,
		          LHS.date_product_first_available AS date_product_first_available,
		          LHS.date_product_discontinued AS date_product_discontinued,
		          LHS.product_name AS product_name,
		          LHS.product_description AS product_description,
		          LHS.product_price AS product_price,
		          RHS.n AS n
		   FROM products AS LHS
		   INNER JOIN
		     (SELECT product_id,
		             COUNT() AS n
		      FROM complaints
		      GROUP BY product_id) AS RHS ON (LHS.product_id = RHS.product_id))
		ORDER BY product_name

	  product_name  count___
	0    Chocolate         4
	1    Chocolate        10
	2      Keyboar        11
	3  jOXMouseBue        12
	4  ybFMouseNBL        18
Wrong output for fuzzied solution in instance spider/customer_complaints/0015 (3979)
	EXPECTED OUTPUT ====

		SELECT complaint_status_code
		FROM complaints
		GROUP BY complaint_status_code
		HAVING count(*) > 3

	  complaint_status_code
	0                Closed
	1                  Open
	ACTUAL OUTPUT ====

		
		SELECT complaint_status_code
		FROM
		  (SELECT complaint_status_code,
		          COUNT() AS n
		   FROM complaints
		   GROUP BY complaint_status_code)
		WHERE (n >= 3)
		ORDER BY complaint_status_code

	  complaint_status_code
	0                 Close
	1                Closed
	2                  Open
No solution for instance spider/customer_complaints/0005 (3980)
No solution for instance spider/customer_complaints/0016 (3981)
No solution for instance spider/customer_complaints/0018 (3982)
Wrong output for fuzzied solution in instance spider/customer_complaints/0019 (3984)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT complaint_type_code)
		FROM complaints

	   count(distinct complaint_type_code)
	0                                   21
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count_distinct_complaint_type_code_
		FROM
		  (SELECT complaint_outcome_code,
		          date_complaint_raised,
		          COUNT() AS n
		   FROM complaints
		   GROUP BY complaint_outcome_code,
		            date_complaint_raised)
		ORDER BY count_distinct_complaint_type_code_

	   count_distinct_complaint_type_code_
	0                                    1
	1                                    2
	2                                    3
No solution for instance spider/customer_complaints/0007 (3985)
Wrong output for fuzzied solution in instance spider/customer_complaints/0023 (3987)
	EXPECTED OUTPUT ====

		SELECT state
		FROM customers
		GROUP BY state
		ORDER BY count(*)
		LIMIT 1

	          state
	0  Pennsylvania
	ACTUAL OUTPUT ====

		
		SELECT state
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT state,
		                town_city,
		                COUNT() AS n
		         FROM customers
		         GROUP BY state,
		                  town_city)
		      ORDER BY state)
		   LIMIT 1)

	      state
	0  Colorado
Wrong output for fuzzied solution in instance spider/customer_complaints/0014 (3989)
	EXPECTED OUTPUT ====

		SELECT t1.last_name
		FROM staff AS t1
		JOIN complaints AS t2 ON t1.staff_id = t2.staff_id
		JOIN products AS t3 ON t2.product_id = t3.product_id
		ORDER BY t3.product_price
		LIMIT 1

	    last_name
	0  Oberbrunne
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT last_name
		FROM
		  (SELECT LHS.staff_id AS staff_id,
		          LHS.gender AS gender,
		          LHS.first_name AS first_name,
		          LHS.last_name AS last_name,
		          LHS.email_address AS email_address,
		          LHS.phone_number AS phone_number,
		          LHS.product_id AS product_id,
		          LHS.parent_product_id AS parent_product_id,
		          LHS.product_category_code AS product_category_code,
		          LHS.date_product_first_available AS date_product_first_available,
		          LHS.date_product_discontinued AS date_product_discontinued,
		          LHS.product_name AS product_name,
		          LHS.product_description AS product_description,
		          LHS.product_price AS product_price,
		          LHS.complaint_id AS complaint_id,
		          LHS.customer_id AS customer_id,
		          LHS.complaint_outcome_code AS complaint_outcome_code,
		          LHS.complaint_status_code AS complaint_status_code,
		          LHS.complaint_type_code AS complaint_type_code,
		          LHS.date_complaint_raised AS date_complaint_raised,
		          LHS.date_complaint_closed AS date_complaint_closed,
		          RHS.complaint_id_other AS complaint_id_other,
		          RHS.complaint_outcome_code_other AS complaint_outcome_code_other,
		          RHS.complaint_status_code_other AS complaint_status_code_other,
		          RHS.complaint_type_code_other AS complaint_type_code_other,
		          RHS.date_complaint_raised_other AS date_complaint_raised_other,
		          RHS.date_complaint_closed_other AS date_complaint_closed_other,
		          RHS.staff_id_other AS staff_id_other
		   FROM
		     (SELECT LHS.staff_id AS staff_id,
		             LHS.gender AS gender,
		             LHS.first_name AS first_name,
		             LHS.last_name AS last_name,
		             LHS.email_address AS email_address,
		             LHS.phone_number AS phone_number,
		             LHS.product_id AS product_id,
		             LHS.parent_product_id AS parent_product_id,
		             LHS.product_category_code AS product_category_code,
		             LHS.date_product_first_available AS date_product_first_available,
		             LHS.date_product_discontinued AS date_product_discontinued,
		             LHS.product_name AS product_name,
		             LHS.product_description AS product_description,
		             LHS.product_price AS product_price,
		             RHS.complaint_id AS complaint_id,
		             RHS.customer_id AS customer_id,
		             RHS.complaint_outcome_code AS complaint_outcome_code,
		             RHS.complaint_status_code AS complaint_status_code,
		             RHS.complaint_type_code AS complaint_type_code,
		             RHS.date_complaint_raised AS date_complaint_raised,
		             RHS.date_complaint_closed AS date_complaint_closed
		      FROM
		        (SELECT LHS.staff_id AS staff_id,
		                LHS.gender AS gender,
		                LHS.first_name AS first_name,
		                LHS.last_name AS last_name,
		                LHS.email_address AS email_address,
		                LHS.phone_number AS phone_number,
		                RHS.product_id AS product_id,
		                RHS.parent_product_id AS parent_product_id,
		                RHS.product_category_code AS product_category_code,
		                RHS.date_product_first_available AS date_product_first_available,
		                RHS.date_product_discontinued AS date_product_discontinued,
		                RHS.product_name AS product_name,
		                RHS.product_description AS product_description,
		                RHS.product_price AS product_price
		         FROM staff AS LHS
		         CROSS JOIN products AS RHS) AS LHS
		      INNER JOIN complaints AS RHS ON (LHS.staff_id = RHS.staff_id
		                                          AND LHS.product_id = RHS.product_id)) AS LHS
		   INNER JOIN
		     (SELECT complaint_id,
		             product_id,
		             staff_id AS customer_id,
		             complaint_outcome_code,
		             complaint_status_code,
		             complaint_type_code,
		             date_complaint_raised,
		             date_complaint_closed,
		             staff_id,
		             complaint_id_other,
		             complaint_outcome_code_other,
		             complaint_status_code_other,
		             complaint_type_code_other,
		             date_complaint_raised_other,
		             date_complaint_closed_other,
		             staff_id_other
		      FROM
		        (SELECT LHS.complaint_id AS complaint_id,
		                LHS.product_id AS product_id,
		                LHS.customer_id AS customer_id,
		                LHS.complaint_outcome_code AS complaint_outcome_code,
		                LHS.complaint_status_code AS complaint_status_code,
		                LHS.complaint_type_code AS complaint_type_code,
		                LHS.date_complaint_raised AS date_complaint_raised,
		                LHS.date_complaint_closed AS date_complaint_closed,
		                LHS.staff_id AS staff_id,
		                RHS.complaint_id AS complaint_id_other,
		                RHS.complaint_outcome_code AS complaint_outcome_code_other,
		                RHS.complaint_status_code AS complaint_status_code_other,
		                RHS.complaint_type_code AS complaint_type_code_other,
		                RHS.date_complaint_raised AS date_complaint_raised_other,
		                RHS.date_complaint_closed AS date_complaint_closed_other,
		                RHS.staff_id AS staff_id_other
		         FROM complaints AS LHS
		         INNER JOIN complaints AS RHS ON (LHS.staff_id = RHS.customer_id
		                                             AND LHS.product_id = RHS.product_id))) AS RHS ON (LHS.staff_id = RHS.staff_id
		                                                                                               AND LHS.product_id = RHS.product_id
		                                                                                               AND LHS.complaint_id = RHS.complaint_id
		                                                                                               AND LHS.customer_id = RHS.customer_id
		                                                                                               AND LHS.complaint_outcome_code = RHS.complaint_outcome_code
		                                                                                               AND LHS.complaint_status_code = RHS.complaint_status_code
		                                                                                               AND LHS.complaint_type_code = RHS.complaint_type_code
		                                                                                               AND LHS.date_complaint_raised = RHS.date_complaint_raised
		                                                                                               AND LHS.date_complaint_closed = RHS.date_complaint_closed))
		ORDER BY last_name

	    last_name
	0        Boeh
	1  BoehmYyYT0
	2        oehm
No solution for instance spider/customer_complaints/0009 (3990)
Wrong output for fuzzied solution in instance spider/customer_complaints/0011 (3991)
	EXPECTED OUTPUT ====

		SELECT product_name,
		       product_category_code
		FROM products
		ORDER BY product_price DESC
		LIMIT 1

	  product_name product_category_code
	0      nGfw1di               ardware
	ACTUAL OUTPUT ====

		
		SELECT product_name,
		       product_category_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM products
		      ORDER BY product_category_code DESC)
		   LIMIT 1)

	    product_name product_category_code
	0  8e4FzKeyboard             qMrRsqnY8
No log for db2csv/orchestra/0027_dev (3993)
No log for db2csv/orchestra/0021_dev (3994)
No log for db2csv/orchestra/0018_dev (3995)
No log for db2csv/orchestra/0033_dev (3996)
No log for db2csv/orchestra/0039_dev (3997)
No log for db2csv/orchestra/0029_dev (3998)
No log for db2csv/orchestra/0037_dev (3999)
No log for db2csv/orchestra/0012_dev (4000)
No log for db2csv/orchestra/0038_dev (4001)
No log for db2csv/orchestra/0036_dev (4002)
No log for db2csv/orchestra/0003_dev (4003)
No log for db2csv/orchestra/0001_dev (4004)
No log for db2csv/orchestra/0034_dev (4005)
No log for db2csv/orchestra/0011_dev (4006)
No log for db2csv/orchestra/0024_dev (4007)
No log for db2csv/orchestra/0017_dev (4008)
No log for db2csv/orchestra/0026_dev (4009)
No log for db2csv/orchestra/0035_dev (4010)
No log for db2csv/orchestra/0016_dev (4011)
No log for db2csv/orchestra/0009_dev (4012)
No log for db2csv/orchestra/0002_dev (4013)
No log for db2csv/orchestra/0008_dev (4014)
No log for db2csv/orchestra/0019_dev (4015)
No log for db2csv/orchestra/0006_dev (4016)
No log for db2csv/orchestra/0040_dev (4017)
No log for db2csv/orchestra/0004_dev (4018)
No log for db2csv/orchestra/0030_dev (4019)
No log for db2csv/orchestra/0028_dev (4020)
No log for db2csv/orchestra/0022_dev (4021)
No log for db2csv/orchestra/0013_dev (4022)
No log for db2csv/orchestra/0014_dev (4023)
No log for db2csv/orchestra/0031_dev (4024)
No log for db2csv/orchestra/0007_dev (4025)
No log for db2csv/orchestra/0015_dev (4026)
No log for db2csv/orchestra/0010_dev (4027)
No log for db2csv/orchestra/0020_dev (4028)
No log for db2csv/orchestra/0025_dev (4029)
No log for db2csv/orchestra/0023_dev (4030)
No log for db2csv/orchestra/0005_dev (4031)
No log for db2csv/orchestra/0032_dev (4032)
No log for db2csv/student_transcripts_tracking/0027_dev (4033)
No log for db2csv/student_transcripts_tracking/0060_dev (4034)
No log for db2csv/student_transcripts_tracking/0063_dev (4035)
No log for db2csv/student_transcripts_tracking/0021_dev (4036)
No log for db2csv/student_transcripts_tracking/0058_dev (4037)
No log for db2csv/student_transcripts_tracking/0018_dev (4038)
No log for db2csv/student_transcripts_tracking/0033_dev (4039)
No log for db2csv/student_transcripts_tracking/0039_dev (4040)
No log for db2csv/student_transcripts_tracking/0029_dev (4041)
No log for db2csv/student_transcripts_tracking/0054_dev (4042)
No log for db2csv/student_transcripts_tracking/0048_dev (4043)
No log for db2csv/student_transcripts_tracking/0037_dev (4044)
No log for db2csv/student_transcripts_tracking/0012_dev (4045)
No log for db2csv/student_transcripts_tracking/0038_dev (4046)
No log for db2csv/student_transcripts_tracking/0036_dev (4047)
No log for db2csv/student_transcripts_tracking/0003_dev (4048)
No log for db2csv/student_transcripts_tracking/0053_dev (4049)
No log for db2csv/student_transcripts_tracking/0078_dev (4050)
No log for db2csv/student_transcripts_tracking/0001_dev (4051)
No log for db2csv/student_transcripts_tracking/0034_dev (4052)
No log for db2csv/student_transcripts_tracking/0073_dev (4053)
No log for db2csv/student_transcripts_tracking/0061_dev (4054)
No log for db2csv/student_transcripts_tracking/0064_dev (4055)
No log for db2csv/student_transcripts_tracking/0043_dev (4056)
No log for db2csv/student_transcripts_tracking/0011_dev (4057)
No log for db2csv/student_transcripts_tracking/0042_dev (4058)
No log for db2csv/student_transcripts_tracking/0024_dev (4059)
No log for db2csv/student_transcripts_tracking/0017_dev (4060)
No log for db2csv/student_transcripts_tracking/0062_dev (4061)
No log for db2csv/student_transcripts_tracking/0077_dev (4062)
No log for db2csv/student_transcripts_tracking/0066_dev (4063)
No log for db2csv/student_transcripts_tracking/0049_dev (4064)
No log for db2csv/student_transcripts_tracking/0026_dev (4065)
No log for db2csv/student_transcripts_tracking/0045_dev (4066)
No log for db2csv/student_transcripts_tracking/0035_dev (4067)
No log for db2csv/student_transcripts_tracking/0016_dev (4068)
No log for db2csv/student_transcripts_tracking/0009_dev (4069)
No log for db2csv/student_transcripts_tracking/0002_dev (4070)
No log for db2csv/student_transcripts_tracking/0065_dev (4071)
No log for db2csv/student_transcripts_tracking/0055_dev (4072)
No log for db2csv/student_transcripts_tracking/0046_dev (4073)
No log for db2csv/student_transcripts_tracking/0057_dev (4074)
No log for db2csv/student_transcripts_tracking/0074_dev (4075)
No log for db2csv/student_transcripts_tracking/0008_dev (4076)
No log for db2csv/student_transcripts_tracking/0041_dev (4077)
No log for db2csv/student_transcripts_tracking/0019_dev (4078)
No log for db2csv/student_transcripts_tracking/0047_dev (4079)
No log for db2csv/student_transcripts_tracking/0006_dev (4080)
No log for db2csv/student_transcripts_tracking/0052_dev (4081)
No log for db2csv/student_transcripts_tracking/0075_dev (4082)
No log for db2csv/student_transcripts_tracking/0040_dev (4083)
No log for db2csv/student_transcripts_tracking/0071_dev (4084)
No log for db2csv/student_transcripts_tracking/0069_dev (4085)
No log for db2csv/student_transcripts_tracking/0004_dev (4086)
No log for db2csv/student_transcripts_tracking/0068_dev (4087)
No log for db2csv/student_transcripts_tracking/0076_dev (4088)
No log for db2csv/student_transcripts_tracking/0030_dev (4089)
No log for db2csv/student_transcripts_tracking/0028_dev (4090)
No log for db2csv/student_transcripts_tracking/0059_dev (4091)
No log for db2csv/student_transcripts_tracking/0051_dev (4092)
No log for db2csv/student_transcripts_tracking/0022_dev (4093)
No log for db2csv/student_transcripts_tracking/0013_dev (4094)
No log for db2csv/student_transcripts_tracking/0014_dev (4095)
No log for db2csv/student_transcripts_tracking/0031_dev (4096)
No log for db2csv/student_transcripts_tracking/0072_dev (4097)
No log for db2csv/student_transcripts_tracking/0007_dev (4098)
No log for db2csv/student_transcripts_tracking/0015_dev (4099)
No log for db2csv/student_transcripts_tracking/0010_dev (4100)
No log for db2csv/student_transcripts_tracking/0044_dev (4101)
No log for db2csv/student_transcripts_tracking/0067_dev (4102)
No log for db2csv/student_transcripts_tracking/0056_dev (4103)
No log for db2csv/student_transcripts_tracking/0020_dev (4104)
No log for db2csv/student_transcripts_tracking/0025_dev (4105)
No log for db2csv/student_transcripts_tracking/0070_dev (4106)
No log for db2csv/student_transcripts_tracking/0023_dev (4107)
No log for db2csv/student_transcripts_tracking/0050_dev (4108)
No log for db2csv/student_transcripts_tracking/0005_dev (4109)
No log for db2csv/student_transcripts_tracking/0032_dev (4110)
No log for db2csv/pets_1/0027_dev (4111)
No log for db2csv/pets_1/0021_dev (4112)
No log for db2csv/pets_1/0018_dev (4113)
No log for db2csv/pets_1/0033_dev (4114)
No log for db2csv/pets_1/0039_dev (4115)
No log for db2csv/pets_1/0029_dev (4116)
No log for db2csv/pets_1/0037_dev (4117)
No log for db2csv/pets_1/0012_dev (4118)
No log for db2csv/pets_1/0038_dev (4119)
No log for db2csv/pets_1/0036_dev (4120)
No log for db2csv/pets_1/0003_dev (4121)
No log for db2csv/pets_1/0001_dev (4122)
No log for db2csv/pets_1/0034_dev (4123)
No log for db2csv/pets_1/0011_dev (4124)
No log for db2csv/pets_1/0042_dev (4125)
No log for db2csv/pets_1/0024_dev (4126)
No log for db2csv/pets_1/0017_dev (4127)
No log for db2csv/pets_1/0026_dev (4128)
No log for db2csv/pets_1/0035_dev (4129)
No log for db2csv/pets_1/0016_dev (4130)
No log for db2csv/pets_1/0009_dev (4131)
No log for db2csv/pets_1/0002_dev (4132)
No log for db2csv/pets_1/0008_dev (4133)
No log for db2csv/pets_1/0041_dev (4134)
No log for db2csv/pets_1/0019_dev (4135)
No log for db2csv/pets_1/0006_dev (4136)
No log for db2csv/pets_1/0040_dev (4137)
No log for db2csv/pets_1/0004_dev (4138)
No log for db2csv/pets_1/0030_dev (4139)
No log for db2csv/pets_1/0028_dev (4140)
No log for db2csv/pets_1/0022_dev (4141)
No log for db2csv/pets_1/0013_dev (4142)
No log for db2csv/pets_1/0014_dev (4143)
No log for db2csv/pets_1/0031_dev (4144)
No log for db2csv/pets_1/0007_dev (4145)
No log for db2csv/pets_1/0015_dev (4146)
No log for db2csv/pets_1/0010_dev (4147)
No log for db2csv/pets_1/0020_dev (4148)
No log for db2csv/pets_1/0025_dev (4149)
No log for db2csv/pets_1/0023_dev (4150)
No log for db2csv/pets_1/0005_dev (4151)
No log for db2csv/pets_1/0032_dev (4152)
No log for db2csv/dog_kennels/0027_dev (4153)
No log for db2csv/dog_kennels/0060_dev (4154)
No log for db2csv/dog_kennels/0063_dev (4155)
No log for db2csv/dog_kennels/0021_dev (4156)
No log for db2csv/dog_kennels/0058_dev (4157)
No log for db2csv/dog_kennels/0018_dev (4158)
No log for db2csv/dog_kennels/0033_dev (4159)
No log for db2csv/dog_kennels/0039_dev (4160)
No log for db2csv/dog_kennels/0081_dev (4161)
No log for db2csv/dog_kennels/0029_dev (4162)
No log for db2csv/dog_kennels/0054_dev (4163)
No log for db2csv/dog_kennels/0048_dev (4164)
No log for db2csv/dog_kennels/0037_dev (4165)
No log for db2csv/dog_kennels/0012_dev (4166)
No log for db2csv/dog_kennels/0038_dev (4167)
No log for db2csv/dog_kennels/0036_dev (4168)
No log for db2csv/dog_kennels/0003_dev (4169)
No log for db2csv/dog_kennels/0053_dev (4170)
No log for db2csv/dog_kennels/0078_dev (4171)
No log for db2csv/dog_kennels/0001_dev (4172)
No log for db2csv/dog_kennels/0034_dev (4173)
No log for db2csv/dog_kennels/0073_dev (4174)
No log for db2csv/dog_kennels/0061_dev (4175)
No log for db2csv/dog_kennels/0064_dev (4176)
No log for db2csv/dog_kennels/0043_dev (4177)
No log for db2csv/dog_kennels/0011_dev (4178)
No log for db2csv/dog_kennels/0042_dev (4179)
No log for db2csv/dog_kennels/0024_dev (4180)
No log for db2csv/dog_kennels/0017_dev (4181)
No log for db2csv/dog_kennels/0062_dev (4182)
No log for db2csv/dog_kennels/0077_dev (4183)
No log for db2csv/dog_kennels/0066_dev (4184)
No log for db2csv/dog_kennels/0049_dev (4185)
No log for db2csv/dog_kennels/0026_dev (4186)
No log for db2csv/dog_kennels/0045_dev (4187)
No log for db2csv/dog_kennels/0035_dev (4188)
No log for db2csv/dog_kennels/0016_dev (4189)
No log for db2csv/dog_kennels/0009_dev (4190)
No log for db2csv/dog_kennels/0002_dev (4191)
No log for db2csv/dog_kennels/0065_dev (4192)
No log for db2csv/dog_kennels/0055_dev (4193)
No log for db2csv/dog_kennels/0046_dev (4194)
No log for db2csv/dog_kennels/0057_dev (4195)
No log for db2csv/dog_kennels/0074_dev (4196)
No log for db2csv/dog_kennels/0008_dev (4197)
No log for db2csv/dog_kennels/0041_dev (4198)
No log for db2csv/dog_kennels/0019_dev (4199)
No log for db2csv/dog_kennels/0047_dev (4200)
No log for db2csv/dog_kennels/0006_dev (4201)
No log for db2csv/dog_kennels/0052_dev (4202)
No log for db2csv/dog_kennels/0075_dev (4203)
No log for db2csv/dog_kennels/0040_dev (4204)
No log for db2csv/dog_kennels/0071_dev (4205)
No log for db2csv/dog_kennels/0069_dev (4206)
No log for db2csv/dog_kennels/0004_dev (4207)
No log for db2csv/dog_kennels/0068_dev (4208)
No log for db2csv/dog_kennels/0076_dev (4209)
No log for db2csv/dog_kennels/0030_dev (4210)
No log for db2csv/dog_kennels/0028_dev (4211)
No log for db2csv/dog_kennels/0059_dev (4212)
No log for db2csv/dog_kennels/0051_dev (4213)
No log for db2csv/dog_kennels/0022_dev (4214)
No log for db2csv/dog_kennels/0079_dev (4215)
No log for db2csv/dog_kennels/0013_dev (4216)
No log for db2csv/dog_kennels/0014_dev (4217)
No log for db2csv/dog_kennels/0031_dev (4218)
No log for db2csv/dog_kennels/0072_dev (4219)
No log for db2csv/dog_kennels/0007_dev (4220)
No log for db2csv/dog_kennels/0015_dev (4221)
No log for db2csv/dog_kennels/0010_dev (4222)
No log for db2csv/dog_kennels/0044_dev (4223)
No log for db2csv/dog_kennels/0067_dev (4224)
No log for db2csv/dog_kennels/0082_dev (4225)
No log for db2csv/dog_kennels/0056_dev (4226)
No log for db2csv/dog_kennels/0020_dev (4227)
No log for db2csv/dog_kennels/0025_dev (4228)
No log for db2csv/dog_kennels/0080_dev (4229)
No log for db2csv/dog_kennels/0070_dev (4230)
No log for db2csv/dog_kennels/0023_dev (4231)
No log for db2csv/dog_kennels/0050_dev (4232)
No log for db2csv/dog_kennels/0005_dev (4233)
No log for db2csv/dog_kennels/0032_dev (4234)
No log for db2csv/employee_hire_evaluation/0027_dev (4235)
No log for db2csv/employee_hire_evaluation/0021_dev (4236)
No log for db2csv/employee_hire_evaluation/0018_dev (4237)
No log for db2csv/employee_hire_evaluation/0033_dev (4238)
No log for db2csv/employee_hire_evaluation/0029_dev (4239)
No log for db2csv/employee_hire_evaluation/0037_dev (4240)
No log for db2csv/employee_hire_evaluation/0012_dev (4241)
No log for db2csv/employee_hire_evaluation/0038_dev (4242)
No log for db2csv/employee_hire_evaluation/0036_dev (4243)
No log for db2csv/employee_hire_evaluation/0003_dev (4244)
No log for db2csv/employee_hire_evaluation/0001_dev (4245)
No log for db2csv/employee_hire_evaluation/0034_dev (4246)
No log for db2csv/employee_hire_evaluation/0011_dev (4247)
No log for db2csv/employee_hire_evaluation/0024_dev (4248)
No log for db2csv/employee_hire_evaluation/0017_dev (4249)
No log for db2csv/employee_hire_evaluation/0026_dev (4250)
No log for db2csv/employee_hire_evaluation/0035_dev (4251)
No log for db2csv/employee_hire_evaluation/0016_dev (4252)
No log for db2csv/employee_hire_evaluation/0009_dev (4253)
No log for db2csv/employee_hire_evaluation/0002_dev (4254)
No log for db2csv/employee_hire_evaluation/0008_dev (4255)
No log for db2csv/employee_hire_evaluation/0019_dev (4256)
No log for db2csv/employee_hire_evaluation/0006_dev (4257)
No log for db2csv/employee_hire_evaluation/0004_dev (4258)
No log for db2csv/employee_hire_evaluation/0030_dev (4259)
No log for db2csv/employee_hire_evaluation/0028_dev (4260)
No log for db2csv/employee_hire_evaluation/0022_dev (4261)
No log for db2csv/employee_hire_evaluation/0013_dev (4262)
No log for db2csv/employee_hire_evaluation/0014_dev (4263)
No log for db2csv/employee_hire_evaluation/0031_dev (4264)
No log for db2csv/employee_hire_evaluation/0007_dev (4265)
No log for db2csv/employee_hire_evaluation/0015_dev (4266)
No log for db2csv/employee_hire_evaluation/0010_dev (4267)
No log for db2csv/employee_hire_evaluation/0020_dev (4268)
No log for db2csv/employee_hire_evaluation/0025_dev (4269)
No log for db2csv/employee_hire_evaluation/0023_dev (4270)
No log for db2csv/employee_hire_evaluation/0005_dev (4271)
No log for db2csv/employee_hire_evaluation/0032_dev (4272)
No log for db2csv/voter_1/0012_dev (4273)
No log for db2csv/voter_1/0003_dev (4274)
No log for db2csv/voter_1/0001_dev (4275)
No log for db2csv/voter_1/0011_dev (4276)
No log for db2csv/voter_1/0009_dev (4277)
No log for db2csv/voter_1/0002_dev (4278)
No log for db2csv/voter_1/0008_dev (4279)
No log for db2csv/voter_1/0006_dev (4280)
No log for db2csv/voter_1/0004_dev (4281)
No log for db2csv/voter_1/0013_dev (4282)
No log for db2csv/voter_1/0014_dev (4283)
No log for db2csv/voter_1/0007_dev (4284)
No log for db2csv/voter_1/0015_dev (4285)
No log for db2csv/voter_1/0010_dev (4286)
No log for db2csv/voter_1/0005_dev (4287)
No log for db2csv/poker_player/0027_dev (4288)
No log for db2csv/poker_player/0021_dev (4289)
No log for db2csv/poker_player/0018_dev (4290)
No log for db2csv/poker_player/0033_dev (4291)
No log for db2csv/poker_player/0039_dev (4292)
No log for db2csv/poker_player/0029_dev (4293)
No log for db2csv/poker_player/0037_dev (4294)
No log for db2csv/poker_player/0012_dev (4295)
No log for db2csv/poker_player/0038_dev (4296)
No log for db2csv/poker_player/0036_dev (4297)
No log for db2csv/poker_player/0003_dev (4298)
No log for db2csv/poker_player/0001_dev (4299)
No log for db2csv/poker_player/0034_dev (4300)
No log for db2csv/poker_player/0011_dev (4301)
No log for db2csv/poker_player/0024_dev (4302)
No log for db2csv/poker_player/0017_dev (4303)
No log for db2csv/poker_player/0026_dev (4304)
No log for db2csv/poker_player/0035_dev (4305)
No log for db2csv/poker_player/0016_dev (4306)
No log for db2csv/poker_player/0009_dev (4307)
No log for db2csv/poker_player/0002_dev (4308)
No log for db2csv/poker_player/0008_dev (4309)
No log for db2csv/poker_player/0019_dev (4310)
No log for db2csv/poker_player/0006_dev (4311)
No log for db2csv/poker_player/0040_dev (4312)
No log for db2csv/poker_player/0004_dev (4313)
No log for db2csv/poker_player/0030_dev (4314)
No log for db2csv/poker_player/0028_dev (4315)
No log for db2csv/poker_player/0022_dev (4316)
No log for db2csv/poker_player/0013_dev (4317)
No log for db2csv/poker_player/0014_dev (4318)
No log for db2csv/poker_player/0031_dev (4319)
No log for db2csv/poker_player/0007_dev (4320)
No log for db2csv/poker_player/0015_dev (4321)
No log for db2csv/poker_player/0010_dev (4322)
No log for db2csv/poker_player/0020_dev (4323)
No log for db2csv/poker_player/0025_dev (4324)
No log for db2csv/poker_player/0023_dev (4325)
No log for db2csv/poker_player/0005_dev (4326)
No log for db2csv/poker_player/0032_dev (4327)
No log for db2csv/museum_visit/0018_dev (4328)
No log for db2csv/museum_visit/0012_dev (4329)
No log for db2csv/museum_visit/0003_dev (4330)
No log for db2csv/museum_visit/0001_dev (4331)
No log for db2csv/museum_visit/0011_dev (4332)
No log for db2csv/museum_visit/0017_dev (4333)
No log for db2csv/museum_visit/0016_dev (4334)
No log for db2csv/museum_visit/0009_dev (4335)
No log for db2csv/museum_visit/0002_dev (4336)
No log for db2csv/museum_visit/0008_dev (4337)
No log for db2csv/museum_visit/0006_dev (4338)
No log for db2csv/museum_visit/0004_dev (4339)
No log for db2csv/museum_visit/0013_dev (4340)
No log for db2csv/museum_visit/0014_dev (4341)
No log for db2csv/museum_visit/0007_dev (4342)
No log for db2csv/museum_visit/0015_dev (4343)
No log for db2csv/museum_visit/0010_dev (4344)
No log for db2csv/museum_visit/0005_dev (4345)
No log for db2csv/real_estate_properties/0003_dev (4346)
No log for db2csv/real_estate_properties/0001_dev (4347)
No log for db2csv/real_estate_properties/0002_dev (4348)
No log for db2csv/real_estate_properties/0004_dev (4349)
No log for db2csv/flight_2/0027_dev (4350)
No log for db2csv/flight_2/0060_dev (4351)
No log for db2csv/flight_2/0063_dev (4352)
No log for db2csv/flight_2/0021_dev (4353)
No log for db2csv/flight_2/0058_dev (4354)
No log for db2csv/flight_2/0018_dev (4355)
No log for db2csv/flight_2/0033_dev (4356)
No log for db2csv/flight_2/0039_dev (4357)
No log for db2csv/flight_2/0029_dev (4358)
No log for db2csv/flight_2/0054_dev (4359)
No log for db2csv/flight_2/0048_dev (4360)
No log for db2csv/flight_2/0037_dev (4361)
No log for db2csv/flight_2/0012_dev (4362)
No log for db2csv/flight_2/0038_dev (4363)
No log for db2csv/flight_2/0036_dev (4364)
No log for db2csv/flight_2/0003_dev (4365)
No log for db2csv/flight_2/0053_dev (4366)
No log for db2csv/flight_2/0078_dev (4367)
No log for db2csv/flight_2/0001_dev (4368)
No log for db2csv/flight_2/0034_dev (4369)
No log for db2csv/flight_2/0073_dev (4370)
No log for db2csv/flight_2/0061_dev (4371)
No log for db2csv/flight_2/0064_dev (4372)
No log for db2csv/flight_2/0043_dev (4373)
No log for db2csv/flight_2/0011_dev (4374)
No log for db2csv/flight_2/0042_dev (4375)
No log for db2csv/flight_2/0024_dev (4376)
No log for db2csv/flight_2/0017_dev (4377)
No log for db2csv/flight_2/0062_dev (4378)
No log for db2csv/flight_2/0077_dev (4379)
No log for db2csv/flight_2/0066_dev (4380)
No log for db2csv/flight_2/0049_dev (4381)
No log for db2csv/flight_2/0026_dev (4382)
No log for db2csv/flight_2/0045_dev (4383)
No log for db2csv/flight_2/0035_dev (4384)
No log for db2csv/flight_2/0016_dev (4385)
No log for db2csv/flight_2/0009_dev (4386)
No log for db2csv/flight_2/0002_dev (4387)
No log for db2csv/flight_2/0065_dev (4388)
No log for db2csv/flight_2/0055_dev (4389)
No log for db2csv/flight_2/0046_dev (4390)
No log for db2csv/flight_2/0057_dev (4391)
No log for db2csv/flight_2/0074_dev (4392)
No log for db2csv/flight_2/0008_dev (4393)
No log for db2csv/flight_2/0041_dev (4394)
No log for db2csv/flight_2/0019_dev (4395)
No log for db2csv/flight_2/0047_dev (4396)
No log for db2csv/flight_2/0006_dev (4397)
No log for db2csv/flight_2/0052_dev (4398)
No log for db2csv/flight_2/0075_dev (4399)
No log for db2csv/flight_2/0040_dev (4400)
No log for db2csv/flight_2/0071_dev (4401)
No log for db2csv/flight_2/0069_dev (4402)
No log for db2csv/flight_2/0004_dev (4403)
No log for db2csv/flight_2/0068_dev (4404)
No log for db2csv/flight_2/0076_dev (4405)
No log for db2csv/flight_2/0030_dev (4406)
No log for db2csv/flight_2/0028_dev (4407)
No log for db2csv/flight_2/0059_dev (4408)
No log for db2csv/flight_2/0051_dev (4409)
No log for db2csv/flight_2/0022_dev (4410)
No log for db2csv/flight_2/0079_dev (4411)
No log for db2csv/flight_2/0013_dev (4412)
No log for db2csv/flight_2/0014_dev (4413)
No log for db2csv/flight_2/0031_dev (4414)
No log for db2csv/flight_2/0072_dev (4415)
No log for db2csv/flight_2/0007_dev (4416)
No log for db2csv/flight_2/0015_dev (4417)
No log for db2csv/flight_2/0010_dev (4418)
No log for db2csv/flight_2/0044_dev (4419)
No log for db2csv/flight_2/0067_dev (4420)
No log for db2csv/flight_2/0056_dev (4421)
No log for db2csv/flight_2/0020_dev (4422)
No log for db2csv/flight_2/0025_dev (4423)
No log for db2csv/flight_2/0080_dev (4424)
No log for db2csv/flight_2/0070_dev (4425)
No log for db2csv/flight_2/0023_dev (4426)
No log for db2csv/flight_2/0050_dev (4427)
No log for db2csv/flight_2/0005_dev (4428)
No log for db2csv/flight_2/0032_dev (4429)
No log for db2csv/wta_1/0027_dev (4430)
No log for db2csv/wta_1/0060_dev (4431)
No log for db2csv/wta_1/0021_dev (4432)
No log for db2csv/wta_1/0058_dev (4433)
No log for db2csv/wta_1/0018_dev (4434)
No log for db2csv/wta_1/0033_dev (4435)
No log for db2csv/wta_1/0039_dev (4436)
No log for db2csv/wta_1/0029_dev (4437)
No log for db2csv/wta_1/0054_dev (4438)
No log for db2csv/wta_1/0048_dev (4439)
No log for db2csv/wta_1/0037_dev (4440)
No log for db2csv/wta_1/0012_dev (4441)
No log for db2csv/wta_1/0038_dev (4442)
No log for db2csv/wta_1/0036_dev (4443)
No log for db2csv/wta_1/0003_dev (4444)
No log for db2csv/wta_1/0053_dev (4445)
No log for db2csv/wta_1/0001_dev (4446)
No log for db2csv/wta_1/0034_dev (4447)
No log for db2csv/wta_1/0061_dev (4448)
No log for db2csv/wta_1/0043_dev (4449)
No log for db2csv/wta_1/0011_dev (4450)
No log for db2csv/wta_1/0042_dev (4451)
No log for db2csv/wta_1/0024_dev (4452)
No log for db2csv/wta_1/0017_dev (4453)
No log for db2csv/wta_1/0062_dev (4454)
No log for db2csv/wta_1/0049_dev (4455)
No log for db2csv/wta_1/0026_dev (4456)
No log for db2csv/wta_1/0045_dev (4457)
No log for db2csv/wta_1/0035_dev (4458)
No log for db2csv/wta_1/0016_dev (4459)
No log for db2csv/wta_1/0009_dev (4460)
No log for db2csv/wta_1/0002_dev (4461)
No log for db2csv/wta_1/0055_dev (4462)
No log for db2csv/wta_1/0046_dev (4463)
No log for db2csv/wta_1/0057_dev (4464)
No log for db2csv/wta_1/0008_dev (4465)
No log for db2csv/wta_1/0041_dev (4466)
No log for db2csv/wta_1/0019_dev (4467)
No log for db2csv/wta_1/0047_dev (4468)
No log for db2csv/wta_1/0006_dev (4469)
No log for db2csv/wta_1/0052_dev (4470)
No log for db2csv/wta_1/0040_dev (4471)
No log for db2csv/wta_1/0004_dev (4472)
No log for db2csv/wta_1/0030_dev (4473)
No log for db2csv/wta_1/0028_dev (4474)
No log for db2csv/wta_1/0059_dev (4475)
No log for db2csv/wta_1/0051_dev (4476)
No log for db2csv/wta_1/0022_dev (4477)
No log for db2csv/wta_1/0013_dev (4478)
No log for db2csv/wta_1/0014_dev (4479)
No log for db2csv/wta_1/0031_dev (4480)
No log for db2csv/wta_1/0007_dev (4481)
No log for db2csv/wta_1/0015_dev (4482)
No log for db2csv/wta_1/0010_dev (4483)
No log for db2csv/wta_1/0044_dev (4484)
No log for db2csv/wta_1/0056_dev (4485)
No log for db2csv/wta_1/0020_dev (4486)
No log for db2csv/wta_1/0025_dev (4487)
No log for db2csv/wta_1/0023_dev (4488)
No log for db2csv/wta_1/0050_dev (4489)
No log for db2csv/wta_1/0005_dev (4490)
No log for db2csv/wta_1/0032_dev (4491)
No log for db2csv/singer/0027_dev (4492)
No log for db2csv/singer/0021_dev (4493)
No log for db2csv/singer/0018_dev (4494)
No log for db2csv/singer/0029_dev (4495)
No log for db2csv/singer/0012_dev (4496)
No log for db2csv/singer/0003_dev (4497)
No log for db2csv/singer/0001_dev (4498)
No log for db2csv/singer/0011_dev (4499)
No log for db2csv/singer/0024_dev (4500)
No log for db2csv/singer/0017_dev (4501)
No log for db2csv/singer/0026_dev (4502)
No log for db2csv/singer/0016_dev (4503)
No log for db2csv/singer/0009_dev (4504)
No log for db2csv/singer/0002_dev (4505)
No log for db2csv/singer/0008_dev (4506)
No log for db2csv/singer/0019_dev (4507)
No log for db2csv/singer/0006_dev (4508)
No log for db2csv/singer/0004_dev (4509)
No log for db2csv/singer/0030_dev (4510)
No log for db2csv/singer/0028_dev (4511)
No log for db2csv/singer/0022_dev (4512)
No log for db2csv/singer/0013_dev (4513)
No log for db2csv/singer/0014_dev (4514)
No log for db2csv/singer/0007_dev (4515)
No log for db2csv/singer/0015_dev (4516)
No log for db2csv/singer/0010_dev (4517)
No log for db2csv/singer/0020_dev (4518)
No log for db2csv/singer/0025_dev (4519)
No log for db2csv/singer/0023_dev (4520)
No log for db2csv/singer/0005_dev (4521)
No log for db2csv/tvshow/0027_dev (4522)
No log for db2csv/tvshow/0060_dev (4523)
No log for db2csv/tvshow/0021_dev (4524)
No log for db2csv/tvshow/0058_dev (4525)
No log for db2csv/tvshow/0018_dev (4526)
No log for db2csv/tvshow/0033_dev (4527)
No log for db2csv/tvshow/0039_dev (4528)
No log for db2csv/tvshow/0029_dev (4529)
No log for db2csv/tvshow/0054_dev (4530)
No log for db2csv/tvshow/0048_dev (4531)
No log for db2csv/tvshow/0037_dev (4532)
No log for db2csv/tvshow/0012_dev (4533)
No log for db2csv/tvshow/0038_dev (4534)
No log for db2csv/tvshow/0036_dev (4535)
No log for db2csv/tvshow/0003_dev (4536)
No log for db2csv/tvshow/0053_dev (4537)
No log for db2csv/tvshow/0001_dev (4538)
No log for db2csv/tvshow/0034_dev (4539)
No log for db2csv/tvshow/0061_dev (4540)
No log for db2csv/tvshow/0043_dev (4541)
No log for db2csv/tvshow/0011_dev (4542)
No log for db2csv/tvshow/0042_dev (4543)
No log for db2csv/tvshow/0024_dev (4544)
No log for db2csv/tvshow/0017_dev (4545)
No log for db2csv/tvshow/0062_dev (4546)
No log for db2csv/tvshow/0049_dev (4547)
No log for db2csv/tvshow/0026_dev (4548)
No log for db2csv/tvshow/0045_dev (4549)
No log for db2csv/tvshow/0035_dev (4550)
No log for db2csv/tvshow/0016_dev (4551)
No log for db2csv/tvshow/0009_dev (4552)
No log for db2csv/tvshow/0002_dev (4553)
No log for db2csv/tvshow/0055_dev (4554)
No log for db2csv/tvshow/0046_dev (4555)
No log for db2csv/tvshow/0057_dev (4556)
No log for db2csv/tvshow/0008_dev (4557)
No log for db2csv/tvshow/0041_dev (4558)
No log for db2csv/tvshow/0019_dev (4559)
No log for db2csv/tvshow/0047_dev (4560)
No log for db2csv/tvshow/0006_dev (4561)
No log for db2csv/tvshow/0052_dev (4562)
No log for db2csv/tvshow/0040_dev (4563)
No log for db2csv/tvshow/0004_dev (4564)
No log for db2csv/tvshow/0030_dev (4565)
No log for db2csv/tvshow/0028_dev (4566)
No log for db2csv/tvshow/0059_dev (4567)
No log for db2csv/tvshow/0051_dev (4568)
No log for db2csv/tvshow/0022_dev (4569)
No log for db2csv/tvshow/0013_dev (4570)
No log for db2csv/tvshow/0014_dev (4571)
No log for db2csv/tvshow/0031_dev (4572)
No log for db2csv/tvshow/0007_dev (4573)
No log for db2csv/tvshow/0015_dev (4574)
No log for db2csv/tvshow/0010_dev (4575)
No log for db2csv/tvshow/0044_dev (4576)
No log for db2csv/tvshow/0056_dev (4577)
No log for db2csv/tvshow/0020_dev (4578)
No log for db2csv/tvshow/0025_dev (4579)
No log for db2csv/tvshow/0023_dev (4580)
No log for db2csv/tvshow/0050_dev (4581)
No log for db2csv/tvshow/0005_dev (4582)
No log for db2csv/tvshow/0032_dev (4583)
No log for db2csv/world_1/0120_dev (4584)
No log for db2csv/world_1/0027_dev (4585)
No log for db2csv/world_1/0060_dev (4586)
No log for db2csv/world_1/0084_dev (4587)
No log for db2csv/world_1/0063_dev (4588)
No log for db2csv/world_1/0021_dev (4589)
No log for db2csv/world_1/0103_dev (4590)
No log for db2csv/world_1/0058_dev (4591)
No log for db2csv/world_1/0107_dev (4592)
No log for db2csv/world_1/0018_dev (4593)
No log for db2csv/world_1/0033_dev (4594)
No log for db2csv/world_1/0039_dev (4595)
No log for db2csv/world_1/0088_dev (4596)
No log for db2csv/world_1/0081_dev (4597)
No log for db2csv/world_1/0096_dev (4598)
No log for db2csv/world_1/0029_dev (4599)
No log for db2csv/world_1/0083_dev (4600)
No log for db2csv/world_1/0054_dev (4601)
No log for db2csv/world_1/0048_dev (4602)
No log for db2csv/world_1/0101_dev (4603)
No log for db2csv/world_1/0099_dev (4604)
No log for db2csv/world_1/0037_dev (4605)
No log for db2csv/world_1/0012_dev (4606)
No log for db2csv/world_1/0038_dev (4607)
No log for db2csv/world_1/0036_dev (4608)
No log for db2csv/world_1/0003_dev (4609)
No log for db2csv/world_1/0053_dev (4610)
No log for db2csv/world_1/0104_dev (4611)
No log for db2csv/world_1/0078_dev (4612)
No log for db2csv/world_1/0001_dev (4613)
No log for db2csv/world_1/0105_dev (4614)
No log for db2csv/world_1/0034_dev (4615)
No log for db2csv/world_1/0073_dev (4616)
No log for db2csv/world_1/0119_dev (4617)
No log for db2csv/world_1/0087_dev (4618)
No log for db2csv/world_1/0061_dev (4619)
No log for db2csv/world_1/0064_dev (4620)
No log for db2csv/world_1/0043_dev (4621)
No log for db2csv/world_1/0110_dev (4622)
No log for db2csv/world_1/0011_dev (4623)
No log for db2csv/world_1/0042_dev (4624)
No log for db2csv/world_1/0117_dev (4625)
No log for db2csv/world_1/0094_dev (4626)
No log for db2csv/world_1/0116_dev (4627)
No log for db2csv/world_1/0024_dev (4628)
No log for db2csv/world_1/0017_dev (4629)
No log for db2csv/world_1/0093_dev (4630)
No log for db2csv/world_1/0062_dev (4631)
No log for db2csv/world_1/0077_dev (4632)
No log for db2csv/world_1/0066_dev (4633)
No log for db2csv/world_1/0114_dev (4634)
No log for db2csv/world_1/0049_dev (4635)
No log for db2csv/world_1/0102_dev (4636)
No log for db2csv/world_1/0026_dev (4637)
No log for db2csv/world_1/0045_dev (4638)
No log for db2csv/world_1/0098_dev (4639)
No log for db2csv/world_1/0035_dev (4640)
No log for db2csv/world_1/0016_dev (4641)
No log for db2csv/world_1/0095_dev (4642)
No log for db2csv/world_1/0009_dev (4643)
No log for db2csv/world_1/0002_dev (4644)
No log for db2csv/world_1/0118_dev (4645)
No log for db2csv/world_1/0092_dev (4646)
No log for db2csv/world_1/0065_dev (4647)
No log for db2csv/world_1/0106_dev (4648)
No log for db2csv/world_1/0055_dev (4649)
No log for db2csv/world_1/0046_dev (4650)
No log for db2csv/world_1/0057_dev (4651)
No log for db2csv/world_1/0074_dev (4652)
No log for db2csv/world_1/0008_dev (4653)
No log for db2csv/world_1/0041_dev (4654)
No log for db2csv/world_1/0019_dev (4655)
No log for db2csv/world_1/0047_dev (4656)
No log for db2csv/world_1/0006_dev (4657)
No log for db2csv/world_1/0052_dev (4658)
No log for db2csv/world_1/0075_dev (4659)
No log for db2csv/world_1/0040_dev (4660)
No log for db2csv/world_1/0071_dev (4661)
No log for db2csv/world_1/0069_dev (4662)
No log for db2csv/world_1/0004_dev (4663)
No log for db2csv/world_1/0113_dev (4664)
No log for db2csv/world_1/0068_dev (4665)
No log for db2csv/world_1/0076_dev (4666)
No log for db2csv/world_1/0030_dev (4667)
No log for db2csv/world_1/0085_dev (4668)
No log for db2csv/world_1/0028_dev (4669)
No log for db2csv/world_1/0089_dev (4670)
No log for db2csv/world_1/0059_dev (4671)
No log for db2csv/world_1/0051_dev (4672)
No log for db2csv/world_1/0022_dev (4673)
No log for db2csv/world_1/0097_dev (4674)
No log for db2csv/world_1/0079_dev (4675)
No log for db2csv/world_1/0013_dev (4676)
No log for db2csv/world_1/0014_dev (4677)
No log for db2csv/world_1/0100_dev (4678)
No log for db2csv/world_1/0091_dev (4679)
No log for db2csv/world_1/0031_dev (4680)
No log for db2csv/world_1/0072_dev (4681)
No log for db2csv/world_1/0007_dev (4682)
No log for db2csv/world_1/0015_dev (4683)
No log for db2csv/world_1/0010_dev (4684)
No log for db2csv/world_1/0044_dev (4685)
No log for db2csv/world_1/0067_dev (4686)
No log for db2csv/world_1/0086_dev (4687)
No log for db2csv/world_1/0082_dev (4688)
No log for db2csv/world_1/0056_dev (4689)
No log for db2csv/world_1/0020_dev (4690)
No log for db2csv/world_1/0025_dev (4691)
No log for db2csv/world_1/0112_dev (4692)
No log for db2csv/world_1/0109_dev (4693)
No log for db2csv/world_1/0080_dev (4694)
No log for db2csv/world_1/0115_dev (4695)
No log for db2csv/world_1/0090_dev (4696)
No log for db2csv/world_1/0070_dev (4697)
No log for db2csv/world_1/0111_dev (4698)
No log for db2csv/world_1/0023_dev (4699)
No log for db2csv/world_1/0050_dev (4700)
No log for db2csv/world_1/0005_dev (4701)
No log for db2csv/world_1/0032_dev (4702)
No log for db2csv/world_1/0108_dev (4703)
No log for db2csv/network_1/0027_dev (4704)
No log for db2csv/network_1/0021_dev (4705)
No log for db2csv/network_1/0018_dev (4706)
No log for db2csv/network_1/0033_dev (4707)
No log for db2csv/network_1/0039_dev (4708)
No log for db2csv/network_1/0029_dev (4709)
No log for db2csv/network_1/0054_dev (4710)
No log for db2csv/network_1/0048_dev (4711)
No log for db2csv/network_1/0037_dev (4712)
No log for db2csv/network_1/0012_dev (4713)
No log for db2csv/network_1/0038_dev (4714)
No log for db2csv/network_1/0036_dev (4715)
No log for db2csv/network_1/0003_dev (4716)
No log for db2csv/network_1/0053_dev (4717)
No log for db2csv/network_1/0001_dev (4718)
No log for db2csv/network_1/0034_dev (4719)
No log for db2csv/network_1/0043_dev (4720)
No log for db2csv/network_1/0011_dev (4721)
No log for db2csv/network_1/0042_dev (4722)
No log for db2csv/network_1/0024_dev (4723)
No log for db2csv/network_1/0017_dev (4724)
No log for db2csv/network_1/0049_dev (4725)
No log for db2csv/network_1/0026_dev (4726)
No log for db2csv/network_1/0045_dev (4727)
No log for db2csv/network_1/0035_dev (4728)
No log for db2csv/network_1/0016_dev (4729)
No log for db2csv/network_1/0009_dev (4730)
No log for db2csv/network_1/0002_dev (4731)
No log for db2csv/network_1/0055_dev (4732)
No log for db2csv/network_1/0046_dev (4733)
No log for db2csv/network_1/0008_dev (4734)
No log for db2csv/network_1/0041_dev (4735)
No log for db2csv/network_1/0019_dev (4736)
No log for db2csv/network_1/0047_dev (4737)
No log for db2csv/network_1/0006_dev (4738)
No log for db2csv/network_1/0052_dev (4739)
No log for db2csv/network_1/0040_dev (4740)
No log for db2csv/network_1/0004_dev (4741)
No log for db2csv/network_1/0030_dev (4742)
No log for db2csv/network_1/0028_dev (4743)
No log for db2csv/network_1/0051_dev (4744)
No log for db2csv/network_1/0022_dev (4745)
No log for db2csv/network_1/0013_dev (4746)
No log for db2csv/network_1/0014_dev (4747)
No log for db2csv/network_1/0031_dev (4748)
No log for db2csv/network_1/0007_dev (4749)
No log for db2csv/network_1/0015_dev (4750)
No log for db2csv/network_1/0010_dev (4751)
No log for db2csv/network_1/0044_dev (4752)
No log for db2csv/network_1/0056_dev (4753)
No log for db2csv/network_1/0020_dev (4754)
No log for db2csv/network_1/0025_dev (4755)
No log for db2csv/network_1/0023_dev (4756)
No log for db2csv/network_1/0050_dev (4757)
No log for db2csv/network_1/0005_dev (4758)
No log for db2csv/network_1/0032_dev (4759)
No log for db2csv/battle_death/0012_dev (4760)
No log for db2csv/battle_death/0003_dev (4761)
No log for db2csv/battle_death/0001_dev (4762)
No log for db2csv/battle_death/0011_dev (4763)
No log for db2csv/battle_death/0016_dev (4764)
No log for db2csv/battle_death/0009_dev (4765)
No log for db2csv/battle_death/0002_dev (4766)
No log for db2csv/battle_death/0008_dev (4767)
No log for db2csv/battle_death/0006_dev (4768)
No log for db2csv/battle_death/0004_dev (4769)
No log for db2csv/battle_death/0013_dev (4770)
No log for db2csv/battle_death/0014_dev (4771)
No log for db2csv/battle_death/0007_dev (4772)
No log for db2csv/battle_death/0015_dev (4773)
No log for db2csv/battle_death/0010_dev (4774)
No log for db2csv/battle_death/0005_dev (4775)
No log for db2csv/course_teach/0027_dev (4776)
No log for db2csv/course_teach/0021_dev (4777)
No log for db2csv/course_teach/0018_dev (4778)
No log for db2csv/course_teach/0029_dev (4779)
No log for db2csv/course_teach/0012_dev (4780)
No log for db2csv/course_teach/0003_dev (4781)
No log for db2csv/course_teach/0001_dev (4782)
No log for db2csv/course_teach/0011_dev (4783)
No log for db2csv/course_teach/0024_dev (4784)
No log for db2csv/course_teach/0017_dev (4785)
No log for db2csv/course_teach/0026_dev (4786)
No log for db2csv/course_teach/0016_dev (4787)
No log for db2csv/course_teach/0009_dev (4788)
No log for db2csv/course_teach/0002_dev (4789)
No log for db2csv/course_teach/0008_dev (4790)
No log for db2csv/course_teach/0019_dev (4791)
No log for db2csv/course_teach/0006_dev (4792)
No log for db2csv/course_teach/0004_dev (4793)
No log for db2csv/course_teach/0030_dev (4794)
No log for db2csv/course_teach/0028_dev (4795)
No log for db2csv/course_teach/0022_dev (4796)
No log for db2csv/course_teach/0013_dev (4797)
No log for db2csv/course_teach/0014_dev (4798)
No log for db2csv/course_teach/0007_dev (4799)
No log for db2csv/course_teach/0015_dev (4800)
No log for db2csv/course_teach/0010_dev (4801)
No log for db2csv/course_teach/0020_dev (4802)
No log for db2csv/course_teach/0025_dev (4803)
No log for db2csv/course_teach/0023_dev (4804)
No log for db2csv/course_teach/0005_dev (4805)
No log for db2csv/cre_Doc_Template_Mgt/0027_dev (4806)
No log for db2csv/cre_Doc_Template_Mgt/0060_dev (4807)
No log for db2csv/cre_Doc_Template_Mgt/0084_dev (4808)
No log for db2csv/cre_Doc_Template_Mgt/0063_dev (4809)
No log for db2csv/cre_Doc_Template_Mgt/0021_dev (4810)
No log for db2csv/cre_Doc_Template_Mgt/0058_dev (4811)
No log for db2csv/cre_Doc_Template_Mgt/0018_dev (4812)
No log for db2csv/cre_Doc_Template_Mgt/0033_dev (4813)
No log for db2csv/cre_Doc_Template_Mgt/0039_dev (4814)
No log for db2csv/cre_Doc_Template_Mgt/0081_dev (4815)
No log for db2csv/cre_Doc_Template_Mgt/0029_dev (4816)
No log for db2csv/cre_Doc_Template_Mgt/0083_dev (4817)
No log for db2csv/cre_Doc_Template_Mgt/0054_dev (4818)
No log for db2csv/cre_Doc_Template_Mgt/0048_dev (4819)
No log for db2csv/cre_Doc_Template_Mgt/0037_dev (4820)
No log for db2csv/cre_Doc_Template_Mgt/0012_dev (4821)
No log for db2csv/cre_Doc_Template_Mgt/0038_dev (4822)
No log for db2csv/cre_Doc_Template_Mgt/0036_dev (4823)
No log for db2csv/cre_Doc_Template_Mgt/0003_dev (4824)
No log for db2csv/cre_Doc_Template_Mgt/0053_dev (4825)
No log for db2csv/cre_Doc_Template_Mgt/0078_dev (4826)
No log for db2csv/cre_Doc_Template_Mgt/0001_dev (4827)
No log for db2csv/cre_Doc_Template_Mgt/0034_dev (4828)
No log for db2csv/cre_Doc_Template_Mgt/0073_dev (4829)
No log for db2csv/cre_Doc_Template_Mgt/0061_dev (4830)
No log for db2csv/cre_Doc_Template_Mgt/0064_dev (4831)
No log for db2csv/cre_Doc_Template_Mgt/0043_dev (4832)
No log for db2csv/cre_Doc_Template_Mgt/0011_dev (4833)
No log for db2csv/cre_Doc_Template_Mgt/0042_dev (4834)
No log for db2csv/cre_Doc_Template_Mgt/0024_dev (4835)
No log for db2csv/cre_Doc_Template_Mgt/0017_dev (4836)
No log for db2csv/cre_Doc_Template_Mgt/0062_dev (4837)
No log for db2csv/cre_Doc_Template_Mgt/0077_dev (4838)
No log for db2csv/cre_Doc_Template_Mgt/0066_dev (4839)
No log for db2csv/cre_Doc_Template_Mgt/0049_dev (4840)
No log for db2csv/cre_Doc_Template_Mgt/0026_dev (4841)
No log for db2csv/cre_Doc_Template_Mgt/0045_dev (4842)
No log for db2csv/cre_Doc_Template_Mgt/0035_dev (4843)
No log for db2csv/cre_Doc_Template_Mgt/0016_dev (4844)
No log for db2csv/cre_Doc_Template_Mgt/0009_dev (4845)
No log for db2csv/cre_Doc_Template_Mgt/0002_dev (4846)
No log for db2csv/cre_Doc_Template_Mgt/0065_dev (4847)
No log for db2csv/cre_Doc_Template_Mgt/0055_dev (4848)
No log for db2csv/cre_Doc_Template_Mgt/0046_dev (4849)
No log for db2csv/cre_Doc_Template_Mgt/0057_dev (4850)
No log for db2csv/cre_Doc_Template_Mgt/0074_dev (4851)
No log for db2csv/cre_Doc_Template_Mgt/0008_dev (4852)
No log for db2csv/cre_Doc_Template_Mgt/0041_dev (4853)
No log for db2csv/cre_Doc_Template_Mgt/0019_dev (4854)
No log for db2csv/cre_Doc_Template_Mgt/0047_dev (4855)
No log for db2csv/cre_Doc_Template_Mgt/0006_dev (4856)
No log for db2csv/cre_Doc_Template_Mgt/0052_dev (4857)
No log for db2csv/cre_Doc_Template_Mgt/0075_dev (4858)
No log for db2csv/cre_Doc_Template_Mgt/0040_dev (4859)
No log for db2csv/cre_Doc_Template_Mgt/0071_dev (4860)
No log for db2csv/cre_Doc_Template_Mgt/0069_dev (4861)
No log for db2csv/cre_Doc_Template_Mgt/0004_dev (4862)
No log for db2csv/cre_Doc_Template_Mgt/0068_dev (4863)
No log for db2csv/cre_Doc_Template_Mgt/0076_dev (4864)
No log for db2csv/cre_Doc_Template_Mgt/0030_dev (4865)
No log for db2csv/cre_Doc_Template_Mgt/0028_dev (4866)
No log for db2csv/cre_Doc_Template_Mgt/0059_dev (4867)
No log for db2csv/cre_Doc_Template_Mgt/0051_dev (4868)
No log for db2csv/cre_Doc_Template_Mgt/0022_dev (4869)
No log for db2csv/cre_Doc_Template_Mgt/0079_dev (4870)
No log for db2csv/cre_Doc_Template_Mgt/0013_dev (4871)
No log for db2csv/cre_Doc_Template_Mgt/0014_dev (4872)
No log for db2csv/cre_Doc_Template_Mgt/0031_dev (4873)
No log for db2csv/cre_Doc_Template_Mgt/0072_dev (4874)
No log for db2csv/cre_Doc_Template_Mgt/0007_dev (4875)
No log for db2csv/cre_Doc_Template_Mgt/0015_dev (4876)
No log for db2csv/cre_Doc_Template_Mgt/0010_dev (4877)
No log for db2csv/cre_Doc_Template_Mgt/0044_dev (4878)
No log for db2csv/cre_Doc_Template_Mgt/0067_dev (4879)
No log for db2csv/cre_Doc_Template_Mgt/0082_dev (4880)
No log for db2csv/cre_Doc_Template_Mgt/0056_dev (4881)
No log for db2csv/cre_Doc_Template_Mgt/0020_dev (4882)
No log for db2csv/cre_Doc_Template_Mgt/0025_dev (4883)
No log for db2csv/cre_Doc_Template_Mgt/0080_dev (4884)
No log for db2csv/cre_Doc_Template_Mgt/0070_dev (4885)
No log for db2csv/cre_Doc_Template_Mgt/0023_dev (4886)
No log for db2csv/cre_Doc_Template_Mgt/0050_dev (4887)
No log for db2csv/cre_Doc_Template_Mgt/0005_dev (4888)
No log for db2csv/cre_Doc_Template_Mgt/0032_dev (4889)
No log for db2csv/car_1/0027_dev (4890)
No log for db2csv/car_1/0060_dev (4891)
No log for db2csv/car_1/0084_dev (4892)
No log for db2csv/car_1/0063_dev (4893)
No log for db2csv/car_1/0021_dev (4894)
No log for db2csv/car_1/0058_dev (4895)
No log for db2csv/car_1/0018_dev (4896)
No log for db2csv/car_1/0033_dev (4897)
No log for db2csv/car_1/0039_dev (4898)
No log for db2csv/car_1/0088_dev (4899)
No log for db2csv/car_1/0081_dev (4900)
No log for db2csv/car_1/0029_dev (4901)
No log for db2csv/car_1/0083_dev (4902)
No log for db2csv/car_1/0054_dev (4903)
No log for db2csv/car_1/0048_dev (4904)
No log for db2csv/car_1/0037_dev (4905)
No log for db2csv/car_1/0012_dev (4906)
No log for db2csv/car_1/0038_dev (4907)
No log for db2csv/car_1/0036_dev (4908)
No log for db2csv/car_1/0003_dev (4909)
No log for db2csv/car_1/0053_dev (4910)
No log for db2csv/car_1/0078_dev (4911)
No log for db2csv/car_1/0001_dev (4912)
No log for db2csv/car_1/0034_dev (4913)
No log for db2csv/car_1/0073_dev (4914)
No log for db2csv/car_1/0087_dev (4915)
No log for db2csv/car_1/0061_dev (4916)
No log for db2csv/car_1/0064_dev (4917)
No log for db2csv/car_1/0043_dev (4918)
No log for db2csv/car_1/0011_dev (4919)
No log for db2csv/car_1/0042_dev (4920)
No log for db2csv/car_1/0024_dev (4921)
No log for db2csv/car_1/0017_dev (4922)
No log for db2csv/car_1/0062_dev (4923)
No log for db2csv/car_1/0077_dev (4924)
No log for db2csv/car_1/0066_dev (4925)
No log for db2csv/car_1/0049_dev (4926)
No log for db2csv/car_1/0026_dev (4927)
No log for db2csv/car_1/0045_dev (4928)
No log for db2csv/car_1/0035_dev (4929)
No log for db2csv/car_1/0016_dev (4930)
No log for db2csv/car_1/0009_dev (4931)
No log for db2csv/car_1/0002_dev (4932)
No log for db2csv/car_1/0092_dev (4933)
No log for db2csv/car_1/0065_dev (4934)
No log for db2csv/car_1/0055_dev (4935)
No log for db2csv/car_1/0046_dev (4936)
No log for db2csv/car_1/0057_dev (4937)
No log for db2csv/car_1/0074_dev (4938)
No log for db2csv/car_1/0008_dev (4939)
No log for db2csv/car_1/0041_dev (4940)
No log for db2csv/car_1/0019_dev (4941)
No log for db2csv/car_1/0047_dev (4942)
No log for db2csv/car_1/0006_dev (4943)
No log for db2csv/car_1/0052_dev (4944)
No log for db2csv/car_1/0075_dev (4945)
No log for db2csv/car_1/0040_dev (4946)
No log for db2csv/car_1/0071_dev (4947)
No log for db2csv/car_1/0069_dev (4948)
No log for db2csv/car_1/0004_dev (4949)
No log for db2csv/car_1/0068_dev (4950)
No log for db2csv/car_1/0076_dev (4951)
No log for db2csv/car_1/0030_dev (4952)
No log for db2csv/car_1/0085_dev (4953)
No log for db2csv/car_1/0028_dev (4954)
No log for db2csv/car_1/0089_dev (4955)
No log for db2csv/car_1/0059_dev (4956)
No log for db2csv/car_1/0051_dev (4957)
No log for db2csv/car_1/0022_dev (4958)
No log for db2csv/car_1/0079_dev (4959)
No log for db2csv/car_1/0013_dev (4960)
No log for db2csv/car_1/0014_dev (4961)
No log for db2csv/car_1/0091_dev (4962)
No log for db2csv/car_1/0031_dev (4963)
No log for db2csv/car_1/0072_dev (4964)
No log for db2csv/car_1/0007_dev (4965)
No log for db2csv/car_1/0015_dev (4966)
No log for db2csv/car_1/0010_dev (4967)
No log for db2csv/car_1/0044_dev (4968)
No log for db2csv/car_1/0067_dev (4969)
No log for db2csv/car_1/0086_dev (4970)
No log for db2csv/car_1/0082_dev (4971)
No log for db2csv/car_1/0056_dev (4972)
No log for db2csv/car_1/0020_dev (4973)
No log for db2csv/car_1/0025_dev (4974)
No log for db2csv/car_1/0080_dev (4975)
No log for db2csv/car_1/0090_dev (4976)
No log for db2csv/car_1/0070_dev (4977)
No log for db2csv/car_1/0023_dev (4978)
No log for db2csv/car_1/0050_dev (4979)
No log for db2csv/car_1/0005_dev (4980)
No log for db2csv/car_1/0032_dev (4981)
No log for db2csv/concert_singer/0027_dev (4982)
No log for db2csv/concert_singer/0021_dev (4983)
No log for db2csv/concert_singer/0018_dev (4984)
No log for db2csv/concert_singer/0033_dev (4985)
No log for db2csv/concert_singer/0039_dev (4986)
No log for db2csv/concert_singer/0029_dev (4987)
No log for db2csv/concert_singer/0037_dev (4988)
No log for db2csv/concert_singer/0012_dev (4989)
No log for db2csv/concert_singer/0038_dev (4990)
No log for db2csv/concert_singer/0036_dev (4991)
No log for db2csv/concert_singer/0003_dev (4992)
No log for db2csv/concert_singer/0001_dev (4993)
No log for db2csv/concert_singer/0034_dev (4994)
No log for db2csv/concert_singer/0043_dev (4995)
No log for db2csv/concert_singer/0011_dev (4996)
No log for db2csv/concert_singer/0042_dev (4997)
No log for db2csv/concert_singer/0024_dev (4998)
No log for db2csv/concert_singer/0017_dev (4999)
No log for db2csv/concert_singer/0026_dev (5000)
No log for db2csv/concert_singer/0045_dev (5001)
No log for db2csv/concert_singer/0035_dev (5002)
No log for db2csv/concert_singer/0016_dev (5003)
No log for db2csv/concert_singer/0009_dev (5004)
No log for db2csv/concert_singer/0002_dev (5005)
No log for db2csv/concert_singer/0008_dev (5006)
No log for db2csv/concert_singer/0041_dev (5007)
No log for db2csv/concert_singer/0019_dev (5008)
No log for db2csv/concert_singer/0006_dev (5009)
No log for db2csv/concert_singer/0040_dev (5010)
No log for db2csv/concert_singer/0004_dev (5011)
No log for db2csv/concert_singer/0030_dev (5012)
No log for db2csv/concert_singer/0028_dev (5013)
No log for db2csv/concert_singer/0022_dev (5014)
No log for db2csv/concert_singer/0013_dev (5015)
No log for db2csv/concert_singer/0014_dev (5016)
No log for db2csv/concert_singer/0031_dev (5017)
No log for db2csv/concert_singer/0007_dev (5018)
No log for db2csv/concert_singer/0015_dev (5019)
No log for db2csv/concert_singer/0010_dev (5020)
No log for db2csv/concert_singer/0044_dev (5021)
No log for db2csv/concert_singer/0020_dev (5022)
No log for db2csv/concert_singer/0025_dev (5023)
No log for db2csv/concert_singer/0023_dev (5024)
No log for db2csv/concert_singer/0005_dev (5025)
No log for db2csv/concert_singer/0032_dev (5026)
No database for instance textbook/1 (5027)
No solution for instance textbook/12 (5028)
No database for instance textbook/24 (5029)
No solution for instance textbook/27 (5030)
No ground truth for instance textbook/14 (5031)
No solution for instance textbook/23 (5032)
No database for instance textbook/4 (5033)
No solution for instance textbook/20 (5034)
No database for instance textbook/8 (5035)
No solution for instance textbook/35 (5036)
No ground truth for instance textbook/16 (5037)
No database for instance textbook/10 (5038)
No ground truth for instance textbook/21 (5039)
No ground truth for instance textbook/18 (5040)
No database for instance textbook/3 (5041)
No solution for instance textbook/29 (5042)
No solution for instance textbook/36 (5043)
No solution for instance textbook/37 (5044)
No database for instance textbook/6 (5045)
No solution for instance textbook/30 (5046)
No solution for instance textbook/25 (5047)
No database for instance textbook/11 (5048)
No database for instance textbook/7 (5049)
No database for instance textbook/5 (5050)
No solution for instance textbook/32 (5051)
No solution for instance textbook/28 (5052)
No ground truth for instance textbook/13 (5053)
No solution for instance textbook/33 (5054)
No database for instance textbook/34 (5055)
No solution for instance textbook/26 (5056)
No database for instance textbook/2 (5057)
No solution for instance textbook/17 (5058)
No solution for instance textbook/22 (5059)
No solution for instance textbook/19 (5060)
No ground truth for instance textbook/15 (5061)
No solution for instance textbook/31 (5062)
No solution for instance textbook/9 (5063)
