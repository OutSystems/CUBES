Starting log for run db2csv_dev_beam_16_combo
Wrong output for fuzzied solution in instance db2csv/battle_death/0008_dev (1)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.id,
		                T1.name
		FROM battle AS T1
		JOIN ship AS T2 ON T1.id = T2.lost_in_battle
		WHERE T2.ship_type = 'Brig'

	           id                    name
	0          10  attle of Philippopolis
	1  2117530608    Battle of Adrianople
	ACTUAL OUTPUT ====

		
		SELECT `id`,
		       `name`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`date` AS `date`,
		          `LHS`.`bulgarian_commander` AS `bulgarian_commander`,
		          `LHS`.`latin_commander` AS `latin_commander`,
		          `LHS`.`result` AS `result`,
		          `RHS`.`id` AS `id_other`,
		          `RHS`.`name` AS `name_other`,
		          `RHS`.`tonnage` AS `tonnage`,
		          `RHS`.`ship_type` AS `ship_type`,
		          `RHS`.`location` AS `location`,
		          `RHS`.`disposition_of_ship` AS `disposition_of_ship`
		   FROM `battle` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `ship`
		      WHERE (`ship_type` = 'Brig')) AS RHS ON (LHS.id = RHS.lost_in_battle))
		ORDER BY id
		
		

	           id                    name
	0          10  attle of Philippopolis
	1  2117530608    Battle of Adrianople
	2  2117530608    Battle of Adrianople
No solution for instance db2csv/battle_death/0016_dev (3)
Wrong output for base solution in instance db2csv/battle_death/0010_dev (5)
	EXPECTED OUTPUT ====

	   id  name
	0   3  Mary
	ACTUAL OUTPUT ====

		SELECT T2.id,
		       T2.name
		FROM death AS T1
		JOIN ship AS t2 ON T1.caused_by_ship_id = T2.id
		GROUP BY T2.id
		ORDER BY count(*) DESC
		LIMIT 1

	   id            name
	0   5  Three Brothers
Wrong output for ground truth in instance db2csv/battle_death/0010_dev (5)
Wrong output for fuzzied solution in instance db2csv/battle_death/0015_dev (8)
	EXPECTED OUTPUT ====

		SELECT name,
		       RESULT,
		       bulgarian_commander
		FROM battle
		EXCEPT
		SELECT T1.name,
		       T1.result,
		       T1.bulgarian_commander
		FROM battle AS T1
		JOIN ship AS T2 ON T1.id = T2.lost_in_battle
		WHERE T2.location = 'English Channel'

	                             name                   result  bulgarian_commander
	0   DNeBattle of Philippopolis1eM   Bulgarian victoryT8cto             4z57eR3K
	1     Battle of MessinopolisL(1pq         ulgarian victory            50VLciWq)
	2    Battle of PhilippopolishCx(s            Two Year Truc              ADRcli4
	3             attle of Adrianople            Two Year Truc         Aam)nUnknown
	4           FOh7qBattle of Serres        Bulgarian victory         DaKNnKaloyan
	5          eFWkotzx1Mg8AEK2e)E4Ru            wo Year Truce         HGIcoUnknown
	6            Battle of Adrianople   Bulgarian victorySrUoa         Ivan Asen II
	7         Battle of Philippopolis         ygnywlr2EM0AVarm         Ivan Asen II
	8                Battle of Serres         ulgarian victory         Ivan Asen II
	9   KyOuQz0sZH9fo7HN7YhsqbXtyxvjW  SVj5Gf3a4mBJ qU8PiGDds6               Kaloya
	10               iw62qGJkaLuSu7rz        Bulgarian victory              Kaloyan
	11                iw62qGJkaLuSu7r   3L2b7Bulgarian victory        MajehIzSK0ymz
	12  YXlXtg7YhJFCNTEuVkZUFCIqwlSAs           Two Year Truce            Mdi7S2qAG
	13               Battle of Serres            Two Year Truc         P3i9JrqXaBh1
	14           Battle of Adrianople      M7cHCTwo Year Truce         SzgTM3QCcnIU
	15               Battle of Serres         Bulgarian victor              Unknown
	16               Battle of Serres        Bulgarian victory              Unknown
	17  UpXw32JcXEG8UZHANzrXZTu9WS(zE         ulgarian victory              Unknown
	18       WrZtD(XGWuR(3lAC5zhs7xhx        Bulgarian victory              Unknown
	19            attle of Adrianople           4zh9 JZURElyBg              Unknown
	20               cP)TcSFHO78FH1CM           Two Year Truce              Unknown
	21              kbeYuqa41yshpx(42        Bulgarian victory              Unknown
	22           Battle of Adrianople        Bulgarian victory        ZP0UnknowntCk
	23         Battle of Messinopolis   Bulgarian victory6 8(j               aloyan
	24             wXH7Yh5thHouVk)l5a        Bulgarian victory         b1BY0Unknown
	25    epSH1Battle of Messinopolis         Bulgarian victor      cFsfuUZBIv8wIEH
	26           DenropelhZF63)59rNPa            wo Year Truce            jL8IzW7A7
	27        qE9L(5XB9Jjh4CpgQrzn7VC  r4qBulgarian victoryBah               nknown
	28     )qpBattle of AdrianoplerIP           Two Year Truce            sY LvTgfW
	29               Battle of Serres  i2fBulgarian victoryTrB  tULIHbf6nWx5uDP8Pw5
	30          attle of Messinopolis         ulgarian victory          van Asen II
	31                attle of Serres  eCrBulgarian victory QA         vzIK9Unknown
	ACTUAL OUTPUT ====

		
		SELECT `name`,
		       `result`,
		       `bulgarian_commander`
		FROM
		  (SELECT *
		   FROM `battle` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT `lost_in_battle`,
		                     `lost_in_battle` AS `id`,
		                     `name`,
		                     `tonnage`,
		                     `ship_type`,
		                     `location`,
		                     `disposition_of_ship`,
		                     `name_other`,
		                     `date`,
		                     `bulgarian_commander`,
		                     `latin_commander`,
		                     `result`
		              FROM
		                (SELECT `LHS`.`lost_in_battle` AS `lost_in_battle`,
		                        `LHS`.`id` AS `id`,
		                        `LHS`.`name` AS `name`,
		                        `LHS`.`tonnage` AS `tonnage`,
		                        `LHS`.`ship_type` AS `ship_type`,
		                        `LHS`.`location` AS `location`,
		                        `LHS`.`disposition_of_ship` AS `disposition_of_ship`,
		                        `RHS`.`name` AS `name_other`,
		                        `RHS`.`date` AS `date`,
		                        `RHS`.`bulgarian_commander` AS `bulgarian_commander`,
		                        `RHS`.`latin_commander` AS `latin_commander`,
		                        `RHS`.`result` AS `result`
		                 FROM `ship` AS `LHS`
		                 INNER JOIN `battle` AS `RHS` ON (`LHS`.`lost_in_battle` = `RHS`.`id`)))
		           WHERE (`location` = 'English Channel')) AS RHS
		        WHERE (LHS.bulgarian_commander = RHS.bulgarian_commander
		               AND LHS.id = RHS.id) ))
		ORDER BY name
		
		

	                             name                   result  bulgarian_commander
	0   DNeBattle of Philippopolis1eM   Bulgarian victoryT8cto             4z57eR3K
	1     Battle of MessinopolisL(1pq         ulgarian victory            50VLciWq)
	2    Battle of PhilippopolishCx(s            Two Year Truc              ADRcli4
	3             attle of Adrianople            Two Year Truc         Aam)nUnknown
	4           FOh7qBattle of Serres        Bulgarian victory         DaKNnKaloyan
	5          eFWkotzx1Mg8AEK2e)E4Ru            wo Year Truce         HGIcoUnknown
	6            Battle of Adrianople   Bulgarian victorySrUoa         Ivan Asen II
	7         Battle of Philippopolis         ygnywlr2EM0AVarm         Ivan Asen II
	8                Battle of Serres         ulgarian victory         Ivan Asen II
	9   KyOuQz0sZH9fo7HN7YhsqbXtyxvjW  SVj5Gf3a4mBJ qU8PiGDds6               Kaloya
	10               iw62qGJkaLuSu7rz        Bulgarian victory              Kaloyan
	11                iw62qGJkaLuSu7r   3L2b7Bulgarian victory        MajehIzSK0ymz
	12  YXlXtg7YhJFCNTEuVkZUFCIqwlSAs           Two Year Truce            Mdi7S2qAG
	13               Battle of Serres            Two Year Truc         P3i9JrqXaBh1
	14           Battle of Adrianople      M7cHCTwo Year Truce         SzgTM3QCcnIU
	15               Battle of Serres         Bulgarian victor              Unknown
	16               Battle of Serres         Bulgarian victor              Unknown
	17               Battle of Serres        Bulgarian victory              Unknown
	18  UpXw32JcXEG8UZHANzrXZTu9WS(zE         ulgarian victory              Unknown
	19       WrZtD(XGWuR(3lAC5zhs7xhx        Bulgarian victory              Unknown
	20            attle of Adrianople           4zh9 JZURElyBg              Unknown
	21               cP)TcSFHO78FH1CM           Two Year Truce              Unknown
	22              kbeYuqa41yshpx(42        Bulgarian victory              Unknown
	23           Battle of Adrianople        Bulgarian victory        ZP0UnknowntCk
	24         Battle of Messinopolis   Bulgarian victory6 8(j               aloyan
	25             wXH7Yh5thHouVk)l5a        Bulgarian victory         b1BY0Unknown
	26    epSH1Battle of Messinopolis         Bulgarian victor      cFsfuUZBIv8wIEH
	27           DenropelhZF63)59rNPa            wo Year Truce            jL8IzW7A7
	28        qE9L(5XB9Jjh4CpgQrzn7VC  r4qBulgarian victoryBah               nknown
	29     )qpBattle of AdrianoplerIP           Two Year Truce            sY LvTgfW
	30               Battle of Serres  i2fBulgarian victoryTrB  tULIHbf6nWx5uDP8Pw5
	31          attle of Messinopolis         ulgarian victory          van Asen II
	32                attle of Serres  eCrBulgarian victory QA         vzIK9Unknown
Error while executing solution for instance db2csv/battle_death/0012_dev (9)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT injured) OVER () AS count_distinct_result_
FROM death
ORDER BY count_distinct_result_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for fuzzied solution in instance db2csv/battle_death/0013_dev (10)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM battle
		WHERE id NOT IN
		    (SELECT lost_in_battle
		     FROM ship
		     WHERE tonnage = '225' );

	   count(*)
	0        12
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM ship
		ORDER BY count___
		
		

	   count___
	0         8
No solution for instance db2csv/battle_death/0009_dev (12)
Error while executing solution for instance db2csv/battle_death/0001_dev (13)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT `n_distinct` AS `count___`
FROM
  (SELECT `lost_in_battle`,
          `id`,
          `name`,
          `tonnage`,
          `ship_type`,
          `location`,
          `disposition_of_ship`,
          COUNT(DISTINCT `disposition_of_ship`) OVER () AS `n_distinct`
   FROM `ship`)
WHERE (`disposition_of_ship` = 'Captured')
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for base solution in instance db2csv/battle_death/0014_dev (14)
	EXPECTED OUTPUT ====

	                      name  date
	0  Siege of Constantinople  1235
	ACTUAL OUTPUT ====

		SELECT T1.name,
		       T1.date
		FROM battle AS T1
		JOIN ship AS T2 ON T1.id = T2.lost_in_battle
		WHERE T2.name = 'Lettice' INTERSECT
		  SELECT T1.name,
		         T1.date
		  FROM battle AS T1
		  JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = 'HMS Atalanta'

	                      name  date
	0  Siege of Constantinople  1235
Wrong output for ground truth in instance db2csv/battle_death/0014_dev (14)
Wrong output for fuzzied solution in instance db2csv/car_1/0067_dev (18)
	EXPECTED OUTPUT ====

		select distinct year
		from cars_data
		where weight between 3000 and 4000;

	   year
	0  1968
	1  1970
	2  1973
	3  1981
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT YEAR
		FROM cars_data
		ORDER BY YEAR
		
		

	   year
	0  1968
	1  1970
	2  1971
	3  1972
	4  1973
	5  1974
	6  1976
	7  1978
	8  1980
	9  1981
No solution for instance db2csv/car_1/0064_dev (19)
No solution for instance db2csv/car_1/0025_dev (20)
No solution for instance db2csv/car_1/0047_dev (21)
No solution for instance db2csv/car_1/0011_dev (24)
No solution for instance db2csv/car_1/0031_dev (25)
No solution for instance db2csv/car_1/0019_dev (26)
Wrong output for base solution in instance db2csv/car_1/0069_dev (27)
	EXPECTED OUTPUT ====

	   horsepower
	0          71
	ACTUAL OUTPUT ====

		SELECT T1.horsepower
		FROM CARS_DATA AS T1
		ORDER BY T1.accelerate DESC
		LIMIT 1;

	  horsepower
	0         71
Wrong output for ground truth in instance db2csv/car_1/0069_dev (27)
Error while executing solution for instance db2csv/car_1/0061_dev (28)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT `id` AS `count___`
FROM
  (SELECT `id`,
          `maker`,
          `fullname`,
          `country`,
          COUNT(DISTINCT `fullname`) OVER () AS `n_distinct`
   FROM `car_makers`)
WHERE (`fullname` = 'American Motor Company')
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for fuzzied solution in instance db2csv/car_1/0028_dev (29)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM CAR_MAKERS AS T1
		JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId
		WHERE T2.CountryName = 'france';

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `countryid` AS `count___`
		FROM
		  (SELECT `countryid`,
		          `countryname`,
		          `continent`,
		          COUNT(*) OVER () AS `n`
		   FROM `countries`)
		WHERE (`countryname` = 'france')
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance db2csv/car_1/0066_dev (30)
Wrong output for fuzzied solution in instance db2csv/car_1/0043_dev (32)
	EXPECTED OUTPUT ====

		SELECT T1.CountryName
		FROM COUNTRIES AS T1
		JOIN CONTINENTS AS T2 ON T1.Continent = T2.ContId
		JOIN CAR_MAKERS AS T3 ON T1.CountryId = T3.Country
		WHERE T2.Continent = 'europe'
		GROUP BY T1.CountryName
		HAVING count(*) >= 3;

	Empty DataFrame
	Columns: [countryname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT countryname
		FROM
		  (SELECT countryid,
		          countryname,
		          continent,
		          continent_other,
		          countryid AS n
		   FROM
		     (SELECT LHS.countryid AS countryid,
		             LHS.countryname AS countryname,
		             LHS.continent AS continent,
		             RHS.continent AS continent_other
		      FROM countries AS LHS
		      INNER JOIN
		        (SELECT continent,
		                COUNT() AS n
		         FROM countries
		         GROUP BY continent) AS RHS ON (LHS.countryid = RHS.n)))
		WHERE (n <= 3.0)
		ORDER BY countryname
		
		

	  countryname
	0   australia
Wrong output for base solution in instance db2csv/car_1/0084_dev (33)
	EXPECTED OUTPUT ====

	   max_mpg_
	0       NaN
	ACTUAL OUTPUT ====

		select max(mpg)
		from cars_data
		where cylinders = 8
		  or year < 1980

	  max(mpg)
	0     null
Wrong output for ground truth in instance db2csv/car_1/0084_dev (33)
Wrong output for fuzzied solution in instance db2csv/car_1/0030_dev (35)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM MODEL_LIST AS T1
		JOIN CAR_MAKERS AS T2 ON T1.Maker = T2.Id
		JOIN COUNTRIES AS T3 ON T2.Country = T3.CountryId
		WHERE T3.CountryName = 'usa';

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT modelid AS count___
		FROM
		  (SELECT makeid,
		          model,
		          make,
		          modelid,
		          makeid AS maker
		   FROM
		     (SELECT LHS.makeid AS makeid,
		             LHS.model AS model,
		             LHS.make AS make,
		             RHS.modelid AS modelid
		      FROM car_names AS LHS
		      INNER JOIN model_list AS RHS ON (LHS.makeid = RHS.maker
		                                          AND LHS.model = RHS.model)))
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance db2csv/car_1/0033_dev (36)
No solution for instance db2csv/car_1/0022_dev (38)
No solution for instance db2csv/car_1/0082_dev (39)
Wrong output for base solution in instance db2csv/car_1/0083_dev (40)
	EXPECTED OUTPUT ====

	   max_mpg_
	0       NaN
	ACTUAL OUTPUT ====

		select max(mpg)
		from cars_data
		where cylinders = 8
		  or year < 1980

	  max(mpg)
	0     null
Wrong output for ground truth in instance db2csv/car_1/0083_dev (40)
No solution for instance db2csv/car_1/0026_dev (41)
No solution for instance db2csv/car_1/0050_dev (42)
No solution for instance db2csv/car_1/0029_dev (44)
No solution for instance db2csv/car_1/0032_dev (45)
Wrong output for fuzzied solution in instance db2csv/car_1/0055_dev (46)
	EXPECTED OUTPUT ====

		SELECT Model
		FROM CAR_NAMES
		GROUP BY Model
		ORDER BY count(*) DESC
		LIMIT 1;

	             model
	0  w0j)nvolkswagen
	ACTUAL OUTPUT ====

		
		SELECT model
		FROM
		  (SELECT LHS.modelid AS modelid,
		          LHS.maker AS maker,
		          LHS.model AS model,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.modelid AS modelid,
		             LHS.maker AS maker,
		             LHS.model AS model,
		             RHS.n AS n
		      FROM model_list AS LHS
		      INNER JOIN
		        (SELECT model,
		                COUNT() AS n
		         FROM car_names
		         GROUP BY model) AS RHS ON (LHS.model = RHS.model)) AS LHS
		   INNER JOIN
		     (SELECT model,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT model,
		                COUNT() AS n
		         FROM car_names
		         GROUP BY model)) AS RHS ON (LHS.model = RHS.model
		                                     AND LHS.n = RHS.n))
		ORDER BY model
		
		

	             model
	0        qafe0f4YD
	1  w0j)nvolkswagen
No solution for instance db2csv/car_1/0016_dev (47)
No solution for instance db2csv/car_1/0092_dev (49)
No solution for instance db2csv/car_1/0010_dev (51)
No solution for instance db2csv/car_1/0074_dev (52)
No solution for instance db2csv/car_1/0085_dev (53)
Wrong output for fuzzied solution in instance db2csv/car_1/0040_dev (56)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM CARS_DATA
		WHERE horsepower > 150;

	   count(*)
	0       215
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM cars_data
		      WHERE (horsepower > 150.0)))
		ORDER BY count___
		
		

	   count___
	0       214
No solution for instance db2csv/car_1/0086_dev (57)
Wrong output for fuzzied solution in instance db2csv/car_1/0027_dev (58)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM CAR_MAKERS AS T1
		JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId
		WHERE T2.CountryName = 'france';

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `countryid` AS `count___`
		FROM `countries`
		WHERE (`countryname` = 'france')
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance db2csv/car_1/0020_dev (59)
No solution for instance db2csv/car_1/0087_dev (60)
No solution for instance db2csv/car_1/0044_dev (61)
No solution for instance db2csv/car_1/0007_dev (63)
Error while executing solution for instance db2csv/car_1/0056_dev (64)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT model_other AS model
FROM
  (SELECT LHS.makeid AS makeid,
          LHS.model AS model,
          LHS.make AS make,
          LHS.n_distinct AS n_distinct,
          RHS.model AS model_other,
          RHS.make AS make_other
   FROM
     (SELECT MAX(makeid) OVER () AS makeid,
                              model,
                              make,
                              n_distinct
      FROM
        (SELECT makeid,
                model,
                make,
                COUNT(DISTINCT model) OVER () AS n_distinct
         FROM car_names)) AS LHS
   INNER JOIN car_names AS RHS ON (LHS.n_distinct = RHS.makeid))
ORDER BY model

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/car_1/0015_dev (65)
Wrong output for base solution in instance db2csv/car_1/0045_dev (66)
	EXPECTED OUTPUT ====

	   horsepower             make
	0          97  mazda rx2 coupe
	ACTUAL OUTPUT ====

		SELECT T2.horsepower,
		       T1.Make
		FROM CAR_NAMES AS T1
		JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id
		WHERE T2.cylinders = 3
		ORDER BY T2.horsepower DESC
		LIMIT 1;

	  horsepower             make
	0         97  mazda rx2 coupe
Wrong output for ground truth in instance db2csv/car_1/0045_dev (66)
No solution for instance db2csv/car_1/0012_dev (67)
No solution for instance db2csv/car_1/0088_dev (70)
No solution for instance db2csv/car_1/0065_dev (71)
No solution for instance db2csv/car_1/0075_dev (73)
No solution for instance db2csv/car_1/0081_dev (74)
Wrong output for fuzzied solution in instance db2csv/car_1/0068_dev (75)
	EXPECTED OUTPUT ====

		select distinct year
		from cars_data
		where weight between 3000 and 4000;

	   year
	0  1968
	1  1970
	2  1973
	3  1981
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT YEAR
		FROM cars_data
		ORDER BY YEAR
		
		

	   year
	0  1968
	1  1970
	2  1971
	3  1972
	4  1973
	5  1974
	6  1976
	7  1978
	8  1980
	9  1981
No solution for instance db2csv/car_1/0090_dev (76)
No solution for instance db2csv/car_1/0072_dev (78)
No solution for instance db2csv/car_1/0091_dev (79)
No solution for instance db2csv/car_1/0089_dev (80)
Wrong output for fuzzied solution in instance db2csv/car_1/0039_dev (81)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM CARS_DATA
		WHERE horsepower > 150;

	   count(*)
	0       215
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM cars_data
		      WHERE (horsepower > 150.0)))
		ORDER BY count___
		
		

	   count___
	0       214
No solution for instance db2csv/car_1/0052_dev (82)
No solution for instance db2csv/car_1/0013_dev (83)
Error while executing solution for instance db2csv/car_1/0002_dev (84)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT continent) OVER () AS count___
FROM countries
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/car_1/0009_dev (85)
Wrong output for fuzzied solution in instance db2csv/car_1/0051_dev (88)
	EXPECTED OUTPUT ====

		SELECT avg(T2.edispl)
		FROM CAR_NAMES AS T1
		JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id
		WHERE T1.Model = 'volvo';

	  avg(t2.edispl)
	0           None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(`edispl`) OVER () AS `avg_t2_edispl_`
		FROM
		  (SELECT `makeid`,
		          `model`,
		          `make`,
		          `mpg`,
		          `cylinders`,
		          `edispl`,
		          `horsepower`,
		          `weight`,
		          `accelerate`,
		          `year`,
		          `makeid` AS `id`
		   FROM
		     (SELECT `LHS`.`makeid` AS `makeid`,
		             `LHS`.`model` AS `model`,
		             `LHS`.`make` AS `make`,
		             `RHS`.`mpg` AS `mpg`,
		             `RHS`.`cylinders` AS `cylinders`,
		             `RHS`.`edispl` AS `edispl`,
		             `RHS`.`horsepower` AS `horsepower`,
		             `RHS`.`weight` AS `weight`,
		             `RHS`.`accelerate` AS `accelerate`,
		             `RHS`.`year` AS `year`
		      FROM
		        (SELECT *
		         FROM `car_names`
		         WHERE (`model` = 'volvo')) AS LHS
		      INNER JOIN cars_data AS RHS ON (LHS.makeid = RHS.id)))
		ORDER BY avg_t2_edispl_
		
		

	Empty DataFrame
	Columns: [avg_t2_edispl_]
	Index: []
No solution for instance db2csv/car_1/0079_dev (91)
No solution for instance db2csv/car_1/0034_dev (92)
Wrong output for base solution in instance db2csv/car_1/0070_dev (93)
	EXPECTED OUTPUT ====

	   horsepower
	0          71
	ACTUAL OUTPUT ====

		SELECT T1.horsepower
		FROM CARS_DATA AS T1
		ORDER BY T1.accelerate DESC
		LIMIT 1;

	  horsepower
	0         71
Wrong output for ground truth in instance db2csv/car_1/0070_dev (93)
No solution for instance db2csv/car_1/0049_dev (95)
No solution for instance db2csv/car_1/0014_dev (96)
No solution for instance db2csv/car_1/0048_dev (97)
No solution for instance db2csv/car_1/0003_dev (98)
No solution for instance db2csv/car_1/0071_dev (102)
Wrong output for base solution in instance db2csv/car_1/0046_dev (103)
	EXPECTED OUTPUT ====

	   horsepower             make
	0          97  mazda rx2 coupe
	ACTUAL OUTPUT ====

		SELECT T2.horsepower,
		       T1.Make
		FROM CAR_NAMES AS T1
		JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id
		WHERE T2.cylinders = 3
		ORDER BY T2.horsepower DESC
		LIMIT 1;

	  horsepower             make
	0         97  mazda rx2 coupe
Wrong output for ground truth in instance db2csv/car_1/0046_dev (103)
No solution for instance db2csv/car_1/0021_dev (104)
No solution for instance db2csv/car_1/0024_dev (105)
No solution for instance db2csv/car_1/0080_dev (106)
Wrong output for fuzzied solution in instance db2csv/car_1/0062_dev (107)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM CAR_MAKERS AS T1
		JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker
		WHERE T1.FullName = 'American Motor Company';

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT `id` AS `count___`
		FROM
		  (SELECT `id`,
		          `maker`,
		          `fullname`,
		          `country`,
		          COUNT(*) OVER () AS `n`
		   FROM `car_makers`)
		WHERE (`fullname` = 'American Motor Company')
		ORDER BY count___
		
		

	   count___
	0        12
No solution for instance db2csv/car_1/0073_dev (108)
Wrong output for fuzzied solution in instance db2csv/concert_singer/0025_dev (109)
	EXPECTED OUTPUT ====

		SELECT T2.name,
		       T2.capacity
		FROM concert AS T1
		JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id
		WHERE T1.year >= 2014
		GROUP BY T2.stadium_id
		ORDER BY count(*) DESC
		LIMIT 1

	      name  capacity
	0  Balmoor      3102
	ACTUAL OUTPUT ====

		
		SELECT name,
		       capacity
		FROM
		  (SELECT stadium_id,
		          LOCATION,
		          name,
		          capacity,
		          highest,
		          lowest,
		          average,
		          concert_id,
		          concert_name,
		          theme,
		          YEAR,
		          concert_id AS singer_id
		   FROM
		     (SELECT LHS.stadium_id AS stadium_id,
		             LHS.location AS LOCATION,
		             LHS.name AS name,
		             LHS.capacity AS capacity,
		             LHS.highest AS highest,
		             LHS.lowest AS lowest,
		             LHS.average AS average,
		             LHS.concert_id AS concert_id,
		             LHS.concert_name AS concert_name,
		             LHS.theme AS theme,
		             LHS.year AS YEAR
		      FROM
		        (SELECT LHS.stadium_id AS stadium_id,
		                LHS.location AS LOCATION,
		                LHS.name AS name,
		                LHS.capacity AS capacity,
		                LHS.highest AS highest,
		                LHS.lowest AS lowest,
		                LHS.average AS average,
		                RHS.concert_id AS concert_id,
		                RHS.concert_name AS concert_name,
		                RHS.theme AS theme,
		                RHS.year AS YEAR
		         FROM stadium AS LHS
		         INNER JOIN concert AS RHS ON (LHS.stadium_id = RHS.stadium_id)) AS LHS
		      INNER JOIN singer_in_concert AS RHS ON (LHS.concert_id = RHS.singer_id
		                                                 AND LHS.stadium_id = RHS.concert_id)))
		ORDER BY name
		
		

	             name  capacity
	0  Recreation Par      3102
	1    Gayfield Par     52502
Wrong output for base solution in instance db2csv/concert_singer/0008_dev (110)
	EXPECTED OUTPUT ====

	  song_name  song_release_year
	0      Love               2016
	ACTUAL OUTPUT ====

		SELECT song_name,
		       song_release_year
		FROM singer
		ORDER BY age
		LIMIT 1

	  song_name song_release_year
	0      Love              2016
Wrong output for ground truth in instance db2csv/concert_singer/0008_dev (110)
Wrong output for fuzzied solution in instance db2csv/concert_singer/0031_dev (112)
	EXPECTED OUTPUT ====

		SELECT country
		FROM singer
		WHERE age > 40 INTERSECT
		  SELECT country
		  FROM singer WHERE age < 30

	Empty DataFrame
	Columns: [country]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT country
		FROM
		  (SELECT *
		   FROM singer
		   WHERE (age <= 30.0))
		WHERE (age != 40.0)
		ORDER BY country
		
		

	       country
	0  LE9rnFrance
Wrong output for fuzzied solution in instance db2csv/concert_singer/0019_dev (113)
	EXPECTED OUTPUT ====

		SELECT name,
		       capacity
		FROM stadium
		ORDER BY average DESC
		LIMIT 1

	              name  capacity
	0  Glebe ParkLi96)     10106
	ACTUAL OUTPUT ====

		
		SELECT name,
		       capacity
		FROM
		  (SELECT stadium_id,
		          LOCATION,
		          name,
		          capacity,
		          highest,
		          lowest,
		          average,
		          MAX(average) OVER () AS maxaverage
		   FROM stadium)
		WHERE (maxaverage = average)
		ORDER BY name
		
		

	              name  capacity
	0  Glebe ParkLi96)     10106
	1      ampden Park     10106
Wrong output for base solution in instance db2csv/concert_singer/0028_dev (114)
	EXPECTED OUTPUT ====

	   year
	0  2014
	ACTUAL OUTPUT ====

		SELECT YEAR
		FROM concert
		GROUP BY YEAR
		ORDER BY count(*) DESC
		LIMIT 1

	   year
	0  2015
Wrong output for ground truth in instance db2csv/concert_singer/0028_dev (114)
No solution for instance db2csv/concert_singer/0035_dev (115)
No solution for instance db2csv/concert_singer/0043_dev (116)
No solution for instance db2csv/concert_singer/0041_dev (117)
Wrong output for fuzzied solution in instance db2csv/concert_singer/0033_dev (119)
	EXPECTED OUTPUT ====

		SELECT name
		FROM stadium
		EXCEPT
		SELECT T2.name
		FROM concert AS T1
		JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id
		WHERE T1.year = 2014

	                   name
	0   Mt6HRecreation Park
	1                Balmoo
	2               Balmoor
	3          Gayfield Par
	4        Recreation Par
	5       Recreation Park
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM stadium AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM concert
		           WHERE (YEAR <= 2014.0)) AS RHS
		        WHERE (LHS.stadium_id = RHS.stadium_id) ))
		ORDER BY name
		
		

	             name
	0         Balmoor
	1    Gayfield Par
	2  Recreation Par
Wrong output for fuzzied solution in instance db2csv/concert_singer/0022_dev (120)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM concert
		WHERE YEAR = 2014
		  OR YEAR = 2015

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT concert_id,
		             concert_name,
		             theme,
		             stadium_id,
		             YEAR,
		             COUNT(*) OVER () AS n
		      FROM concert)
		   WHERE (YEAR < 2015.0))
		WHERE (n != 2014.0)
		ORDER BY count___
		
		

	   count___
	0         9
Wrong output for fuzzied solution in instance db2csv/concert_singer/0026_dev (121)
	EXPECTED OUTPUT ====

		select t2.name,
		       t2.capacity
		from concert as t1
		join stadium as t2 on t1.stadium_id = t2.stadium_id
		where t1.year > 2013
		group by t2.stadium_id
		order by count(*) desc
		limit 1

	      name  capacity
	0  Balmoor      3102
	ACTUAL OUTPUT ====

		
		SELECT name,
		       capacity
		FROM
		  (SELECT stadium_id,
		          LOCATION,
		          name,
		          capacity,
		          highest,
		          lowest,
		          average,
		          stadium_id AS n
		   FROM
		     (SELECT LHS.stadium_id AS stadium_id,
		             LHS.location AS LOCATION,
		             LHS.name AS name,
		             LHS.capacity AS capacity,
		             LHS.highest AS highest,
		             LHS.lowest AS lowest,
		             LHS.average AS average
		      FROM stadium AS LHS
		      INNER JOIN
		        (SELECT MAX(n) AS n
		         FROM
		           (SELECT stadium_id,
		                   COUNT() AS n
		            FROM concert
		            GROUP BY stadium_id)) AS RHS ON (LHS.stadium_id = RHS.n)))
		WHERE (n < 2013.0)
		ORDER BY name
		
		

	Empty DataFrame
	Columns: [name, capacity]
	Index: []
Wrong output for fuzzied solution in instance db2csv/concert_singer/0032_dev (124)
	EXPECTED OUTPUT ====

		SELECT name
		FROM stadium
		EXCEPT
		SELECT T2.name
		FROM concert AS T1
		JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id
		WHERE T1.year = 2014

	                   name
	0   Mt6HRecreation Park
	1                Balmoo
	2               Balmoor
	3          Gayfield Par
	4        Recreation Par
	5       Recreation Park
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM stadium AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM concert
		           WHERE (YEAR <= 2014.0)) AS RHS
		        WHERE (LHS.stadium_id = RHS.stadium_id) ))
		ORDER BY name
		
		

	             name
	0         Balmoor
	1    Gayfield Par
	2  Recreation Par
No solution for instance db2csv/concert_singer/0016_dev (125)
No solution for instance db2csv/concert_singer/0006_dev (126)
Wrong output for fuzzied solution in instance db2csv/concert_singer/0010_dev (127)
	EXPECTED OUTPUT ====

		SELECT DISTINCT country
		FROM singer
		WHERE age > 20

	        country
	0        France
	1   FrancehuO)K
	2    Netherland
	3   Netherlands
	4  xqpFranceZXh
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT country
		FROM singer
		WHERE (age >= 20.0)
		ORDER BY country
		
		

	        country
	0        France
	1   FrancehuO)K
	2    Netherland
	3   Netherlands
	4    etherlands
	5  xqpFranceZXh
No solution for instance db2csv/concert_singer/0040_dev (129)
Wrong output for base solution in instance db2csv/concert_singer/0027_dev (130)
	EXPECTED OUTPUT ====

	   year
	0  2014
	ACTUAL OUTPUT ====

		SELECT YEAR
		FROM concert
		GROUP BY YEAR
		ORDER BY count(*) DESC
		LIMIT 1

	   year
	0  2015
Wrong output for ground truth in instance db2csv/concert_singer/0027_dev (130)
Wrong output for fuzzied solution in instance db2csv/concert_singer/0020_dev (131)
	EXPECTED OUTPUT ====

		SELECT name,
		       capacity
		FROM stadium
		ORDER BY average DESC
		LIMIT 1

	              name  capacity
	0  Glebe ParkLi96)     10106
	ACTUAL OUTPUT ====

		
		SELECT name,
		       capacity
		FROM
		  (SELECT stadium_id,
		          LOCATION,
		          name,
		          capacity,
		          highest,
		          lowest,
		          average,
		          MAX(average) OVER () AS maxaverage
		   FROM stadium)
		WHERE (maxaverage = average)
		ORDER BY name
		
		

	              name  capacity
	0  Glebe ParkLi96)     10106
	1      ampden Park     10106
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_5944.sqlite3'
No solution for instance db2csv/concert_singer/0005_dev (133)
Wrong output for base solution in instance db2csv/concert_singer/0007_dev (134)
	EXPECTED OUTPUT ====

	  song_name  song_release_year
	0      Love               2016
	ACTUAL OUTPUT ====

		SELECT song_name,
		       song_release_year
		FROM singer
		ORDER BY age
		LIMIT 1

	  song_name song_release_year
	0      Love              2016
Wrong output for ground truth in instance db2csv/concert_singer/0007_dev (134)
No solution for instance db2csv/concert_singer/0015_dev (135)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_5944.sqlite3'
Wrong output for fuzzied solution in instance db2csv/concert_singer/0038_dev (138)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM singer_in_concert AS T1
		JOIN singer AS T2 ON T1.singer_id = T2.singer_id
		JOIN concert AS T3 ON T1.concert_id = T3.concert_id
		WHERE T3.year = 2014

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.concert_id AS concert_id,
		          LHS.concert_name AS concert_name,
		          LHS.theme AS theme,
		          LHS.stadium_id AS stadium_id,
		          LHS.year AS YEAR,
		          LHS.singer_id AS singer_id,
		          RHS.name AS name,
		          RHS.country AS country,
		          RHS.song_name AS song_name,
		          RHS.song_release_year AS song_release_year,
		          RHS.age AS age,
		          RHS.is_male AS is_male
		   FROM
		     (SELECT LHS.concert_id AS concert_id,
		             LHS.concert_name AS concert_name,
		             LHS.theme AS theme,
		             LHS.stadium_id AS stadium_id,
		             LHS.year AS YEAR,
		             RHS.singer_id AS singer_id
		      FROM concert AS LHS
		      INNER JOIN singer_in_concert AS RHS ON (LHS.concert_id = RHS.concert_id)) AS LHS
		   INNER JOIN singer AS RHS ON (LHS.singer_id = RHS.singer_id))
		WHERE (YEAR <= 2014.0)
		ORDER BY name
		
		

	                  name
	0   8C John NizinikRJC
	1   8C John NizinikRJC
	2   8C John NizinikRJC
	3            Joe Sharp
	4            Joe Sharp
	5       SXvflJoe Sharp
	6       SXvflJoe Sharp
	7            Timbaland
	8            Timbaland
	9            Timbaland
	10          Tribal Kin
	11          Tribal Kin
	12          Tribal Kin
	13    Vv6kpTribal King
	14    Vv6kpTribal King
Wrong output for fuzzied solution in instance db2csv/concert_singer/0036_dev (139)
	EXPECTED OUTPUT ====

		SELECT T2.name,
		       count(*)
		FROM singer_in_concert AS T1
		JOIN singer AS T2 ON T1.singer_id = T2.singer_id
		GROUP BY T2.singer_id

	                 name  count(*)
	0   3RdTribal Kingk70         7
	1     BY3I1Rose White         7
	2           Joe Sharp         7
	3  6dhJustin BrownIg7         8
	4   Justin Brown5VZ47         8
	5          Rose White         8
	6          Rose White         8
	7    YtwRose WhiteDkY         8
	ACTUAL OUTPUT ====

		
		SELECT name,
		       n AS count___
		FROM
		  (SELECT name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.concert_id AS concert_id,
		             LHS.singer_id AS singer_id,
		             RHS.name AS name,
		             RHS.country AS country,
		             RHS.song_name AS song_name,
		             RHS.song_release_year AS song_release_year,
		             RHS.age AS age,
		             RHS.is_male AS is_male
		      FROM singer_in_concert AS LHS
		      INNER JOIN singer AS RHS ON (LHS.singer_id = RHS.singer_id))
		   GROUP BY name)
		ORDER BY name
		
		

	                 name  count___
	0   3RdTribal Kingk70         7
	1     BY3I1Rose White         7
	2           Joe Sharp         7
	3  6dhJustin BrownIg7         8
	4   Justin Brown5VZ47         8
	5    YtwRose WhiteDkY         8
	6          Rose White        16
No solution for instance db2csv/concert_singer/0039_dev (140)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_5944.sqlite3'
Wrong output for fuzzied solution in instance db2csv/concert_singer/0002_dev (142)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM singer

	   count(*)
	0         6
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM concert
		ORDER BY count___
		
		

	   count___
	0         9
Wrong output for fuzzied solution in instance db2csv/concert_singer/0001_dev (144)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM singer

	   count(*)
	0         6
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM concert
		ORDER BY count___
		
		

	   count___
	0         9
Wrong output for fuzzied solution in instance db2csv/concert_singer/0017_dev (145)
	EXPECTED OUTPUT ====

		select max(capacity),
		       average
		from stadium

	   max(capacity)  average
	0          10106     1477
	ACTUAL OUTPUT ====

		
		SELECT capacity AS max_capacity_,
		       average
		FROM
		  (SELECT stadium_id,
		          LOCATION,
		          name,
		          maxcapacity AS capacity,
		          highest,
		          lowest,
		          average,
		          maxcapacity,
		          stadium_id_other,
		          location_other,
		          name_other,
		          highest_other,
		          lowest_other
		   FROM
		     (SELECT LHS.stadium_id AS stadium_id,
		             LHS.location AS LOCATION,
		             LHS.name AS name,
		             LHS.capacity AS capacity,
		             LHS.highest AS highest,
		             LHS.lowest AS lowest,
		             LHS.average AS average,
		             LHS.maxcapacity AS maxcapacity,
		             RHS.stadium_id AS stadium_id_other,
		             RHS.location AS location_other,
		             RHS.name AS name_other,
		             RHS.highest AS highest_other,
		             RHS.lowest AS lowest_other
		      FROM
		        (SELECT stadium_id,
		                LOCATION,
		                name,
		                capacity,
		                highest,
		                lowest,
		                average,
		                MAX(capacity) OVER () AS maxcapacity
		         FROM stadium) AS LHS
		      INNER JOIN stadium AS RHS ON (LHS.maxcapacity = RHS.capacity
		                                       AND LHS.average = RHS.average)))
		ORDER BY max_capacity_
		
		

	   max_capacity_  average
	0          10106      614
	1          10106      614
	2          10106      614
	3          10106     1477
	4          10106     1477
	5          10106     1477
	6          10106     1477
No solution for instance db2csv/concert_singer/0042_dev (146)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_5944.sqlite3'
Wrong output for fuzzied solution in instance db2csv/concert_singer/0021_dev (152)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM concert
		WHERE YEAR = 2014
		  OR YEAR = 2015

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT concert_id,
		             concert_name,
		             theme,
		             stadium_id,
		             YEAR,
		             COUNT(*) OVER () AS n
		      FROM concert)
		   WHERE (YEAR < 2015.0))
		WHERE (n != 2014.0)
		ORDER BY count___
		
		

	   count___
	0         9
Wrong output for fuzzied solution in instance db2csv/course_teach/0025_dev (154)
	EXPECTED OUTPUT ====

		SELECT T2.Name,
		       COUNT(*)
		FROM course_arrange AS T1
		JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID
		GROUP BY T2.Name

	               name  count(*)
	0     Gustaaf Deloo         6
	1    Kearsley Brown         8
	2     earsley Brown         8
	3  John DeloorX1ZRi        11
	4    Gustaaf Deloor        12
	5       John Deloor        18
	ACTUAL OUTPUT ====

		
		SELECT name,
		       n AS count___
		FROM
		  (SELECT name,
		          hometown,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.course_id AS course_id,
		             LHS.staring_date AS staring_date,
		             LHS.course AS course,
		             LHS.teacher_id AS teacher_id,
		             LHS.name AS name,
		             LHS.age AS age,
		             LHS.hometown AS hometown,
		             RHS.grade AS grade
		      FROM
		        (SELECT LHS.course_id AS course_id,
		                LHS.staring_date AS staring_date,
		                LHS.course AS course,
		                RHS.teacher_id AS teacher_id,
		                RHS.name AS name,
		                RHS.age AS age,
		                RHS.hometown AS hometown
		         FROM course AS LHS
		         CROSS JOIN teacher AS RHS) AS LHS
		      INNER JOIN course_arrange AS RHS ON (LHS.course_id = RHS.course_id
		                                              AND LHS.teacher_id = RHS.teacher_id))
		   GROUP BY name,
		            hometown)
		ORDER BY name
		
		

	               name  count___
	0     Gustaaf Deloo         6
	1       John Deloor         8
	2    Kearsley Brown         8
	3     earsley Brown         8
	4       John Deloor        10
	5  John DeloorX1ZRi        11
	6    Gustaaf Deloor        12
Wrong output for fuzzied solution in instance db2csv/course_teach/0008_dev (155)
	EXPECTED OUTPUT ====

		select name
		from teacher
		where hometown != "little lever urban district"

	                  name
	0   Mt6HGustaaf Deloor
	1       Gustaaf Deloor
	2           John Deloo
	3        Kearsley Brow
	4        Kearsley Brow
	5       Kearsley Brown
	6  Kearsley BrownV6gvM
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM `teacher` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT *
		              FROM `teacher`
		              WHERE (((`hometown`) IS NULL)))
		           WHERE (`hometown` = 'Little Lever Urban District')) AS RHS
		        WHERE (LHS.hometown = RHS.hometown
		               AND LHS.teacher_id = RHS.teacher_id) ))
		ORDER BY name
		
		

	                  name
	0   Mt6HGustaaf Deloor
	1        Gustaaf Deloo
	2       Gustaaf Deloor
	3           John Deloo
	4        Kearsley Brow
	5        Kearsley Brow
	6       Kearsley Brown
	7  Kearsley BrownV6gvM
Wrong output for fuzzied solution in instance db2csv/course_teach/0011_dev (156)
	EXPECTED OUTPUT ====

		SELECT Hometown
		FROM teacher
		ORDER BY Age ASC
		LIMIT 1

	                hometown
	0  Bolton County Borough
	ACTUAL OUTPUT ====

		
		SELECT hometown
		FROM
		  (SELECT LHS.teacher_id AS teacher_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.hometown AS hometown,
		          LHS.course_id AS course_id,
		          LHS.grade AS grade
		   FROM
		     (SELECT LHS.teacher_id AS teacher_id,
		             LHS.name AS name,
		             LHS.age AS age,
		             LHS.hometown AS hometown,
		             RHS.course_id AS course_id,
		             RHS.grade AS grade
		      FROM teacher AS LHS
		      INNER JOIN course_arrange AS RHS ON (LHS.teacher_id = RHS.teacher_id)) AS LHS
		   INNER JOIN
		     (SELECT MIN(age) AS age
		      FROM teacher) AS RHS ON (LHS.age = RHS.age))
		ORDER BY hometown
		
		

	                       hometown
	0         Bolton County Borough
	1         Bolton County Borough
	2         Bolton County Borough
	3         Bolton County Borough
	4         Bolton County Borough
	5         Bolton County Borough
	6         Bolton County Borough
	7         Bolton County Borough
	8   mxfhcHorwich Urban District
	9   mxfhcHorwich Urban District
	10  mxfhcHorwich Urban District
	11  mxfhcHorwich Urban District
	12  mxfhcHorwich Urban District
	13  mxfhcHorwich Urban District
	14  mxfhcHorwich Urban District
	15  mxfhcHorwich Urban District
	16  mxfhcHorwich Urban District
	17  mxfhcHorwich Urban District
	18  mxfhcHorwich Urban District
	19  mxfhcHorwich Urban District
Wrong output for fuzzied solution in instance db2csv/course_teach/0028_dev (158)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM course_arrange AS T1
		JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID
		GROUP BY T2.Name
		HAVING COUNT(*) >= 2

	               name
	0     Gustaaf Deloo
	1    Gustaaf Deloor
	2       John Deloor
	3  John DeloorX1ZRi
	4    Kearsley Brown
	5     earsley Brown
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.teacher_id AS teacher_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.hometown AS hometown
		   FROM teacher AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT COUNT() AS n
		         FROM course_arrange)
		      WHERE (n >= 2.0)) AS RHS ON (LHS.teacher_id = RHS.n))
		ORDER BY name
		
		

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance db2csv/course_teach/0026_dev (161)
	EXPECTED OUTPUT ====

		SELECT T2.Name,
		       COUNT(*)
		FROM course_arrange AS T1
		JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID
		GROUP BY T2.Name

	               name  count(*)
	0     Gustaaf Deloo         6
	1    Kearsley Brown         8
	2     earsley Brown         8
	3  John DeloorX1ZRi        11
	4    Gustaaf Deloor        12
	5       John Deloor        18
	ACTUAL OUTPUT ====

		
		SELECT name,
		       n AS count___
		FROM
		  (SELECT name,
		          age,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.teacher_id AS teacher_id,
		             LHS.name AS name,
		             LHS.age AS age,
		             LHS.hometown AS hometown,
		             LHS.course_id AS course_id,
		             LHS.staring_date AS staring_date,
		             LHS.course AS course,
		             RHS.grade AS grade
		      FROM
		        (SELECT LHS.teacher_id AS teacher_id,
		                LHS.name AS name,
		                LHS.age AS age,
		                LHS.hometown AS hometown,
		                RHS.course_id AS course_id,
		                RHS.staring_date AS staring_date,
		                RHS.course AS course
		         FROM teacher AS LHS
		         CROSS JOIN course AS RHS) AS LHS
		      INNER JOIN course_arrange AS RHS ON (LHS.teacher_id = RHS.teacher_id
		                                              AND LHS.course_id = RHS.course_id))
		   GROUP BY name,
		            age)
		ORDER BY name
		
		

	               name  count___
	0     Gustaaf Deloo         6
	1       John Deloor         8
	2    Kearsley Brown         8
	3     earsley Brown         8
	4       John Deloor        10
	5  John DeloorX1ZRi        11
	6    Gustaaf Deloor        12
No solution for instance db2csv/course_teach/0023_dev (162)
Wrong output for base solution in instance db2csv/course_teach/0016_dev (164)
	EXPECTED OUTPUT ====

	                  hometown
	0  Blackrod Urban District
	ACTUAL OUTPUT ====

		SELECT Hometown
		FROM teacher
		GROUP BY Hometown
		ORDER BY COUNT(*) DESC
		LIMIT 1

	                hometown
	0  Turton Urban District
Wrong output for ground truth in instance db2csv/course_teach/0016_dev (164)
Wrong output for base solution in instance db2csv/course_teach/0006_dev (165)
	EXPECTED OUTPUT ====

	   age                     hometown
	0   26  Farnworth Municipal Borough
	1   29        Bolton County Borough
	2   32      Blackrod Urban District
	3   33       Horwich Urban District
	4   39        Turton Urban District
	5   41  Little Lever Urban District
	6   45      Kearsley Urban District
	ACTUAL OUTPUT ====

		SELECT Age,
		       Hometown
		FROM teacher

	  age                     hometown
	0  26  Farnworth Municipal Borough
	1  29        Bolton County Borough
	2  32      Blackrod Urban District
	3  33       Horwich Urban District
	4  39        Turton Urban District
	5  41  Little Lever Urban District
	6  45      Kearsley Urban District
Wrong output for ground truth in instance db2csv/course_teach/0006_dev (165)
Wrong output for base solution in instance db2csv/course_teach/0010_dev (166)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM teacher
		WHERE Age = 32
		  OR Age = 33

	          name
	0  John Deloor
	1  Joseph Huts
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM teacher
		   WHERE (age >= 32.0))
		WHERE (age <= 33.0)
		ORDER BY name
		
		

	          name
	0  John Deloor
Wrong output for fuzzied solution in instance db2csv/course_teach/0027_dev (167)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM course_arrange AS T1
		JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID
		GROUP BY T2.Name
		HAVING COUNT(*) >= 2

	               name
	0     Gustaaf Deloo
	1    Gustaaf Deloor
	2       John Deloor
	3  John DeloorX1ZRi
	4    Kearsley Brown
	5     earsley Brown
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.teacher_id AS teacher_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.hometown AS hometown,
		          RHS.n AS n
		   FROM teacher AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT teacher_id,
		                COUNT() AS n
		         FROM course_arrange
		         GROUP BY teacher_id)
		      WHERE (n = 2.0)) AS RHS ON (LHS.teacher_id = RHS.teacher_id))
		ORDER BY name
		
		

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for base solution in instance db2csv/course_teach/0005_dev (169)
	EXPECTED OUTPUT ====

	   age                     hometown
	0   26  Farnworth Municipal Borough
	1   29        Bolton County Borough
	2   32      Blackrod Urban District
	3   33       Horwich Urban District
	4   39        Turton Urban District
	5   41  Little Lever Urban District
	6   45      Kearsley Urban District
	ACTUAL OUTPUT ====

		SELECT Age,
		       Hometown
		FROM teacher

	  age                     hometown
	0  26  Farnworth Municipal Borough
	1  29        Bolton County Borough
	2  32      Blackrod Urban District
	3  33       Horwich Urban District
	4  39        Turton Urban District
	5  41  Little Lever Urban District
	6  45      Kearsley Urban District
Wrong output for ground truth in instance db2csv/course_teach/0005_dev (169)
No solution for instance db2csv/course_teach/0007_dev (170)
Wrong output for base solution in instance db2csv/course_teach/0015_dev (171)
	EXPECTED OUTPUT ====

	                  hometown
	0  Blackrod Urban District
	ACTUAL OUTPUT ====

		SELECT Hometown
		FROM teacher
		GROUP BY Hometown
		ORDER BY COUNT(*) DESC
		LIMIT 1

	                hometown
	0  Turton Urban District
Wrong output for ground truth in instance db2csv/course_teach/0015_dev (171)
Wrong output for fuzzied solution in instance db2csv/course_teach/0012_dev (172)
	EXPECTED OUTPUT ====

		SELECT Hometown
		FROM teacher
		ORDER BY Age ASC
		LIMIT 1

	                hometown
	0  Bolton County Borough
	ACTUAL OUTPUT ====

		
		SELECT hometown
		FROM
		  (SELECT LHS.teacher_id AS teacher_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.hometown AS hometown
		   FROM teacher AS LHS
		   INNER JOIN
		     (SELECT MIN(age) AS minage
		      FROM teacher) AS RHS ON (LHS.age = RHS.minage))
		ORDER BY hometown
		
		

	                      hometown
	0        Bolton County Borough
	1  mxfhcHorwich Urban District
Error while executing solution for instance db2csv/course_teach/0002_dev (174)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT hometown) OVER () AS count___
FROM teacher
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for base solution in instance db2csv/course_teach/0009_dev (175)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM teacher
		WHERE Age = 32
		  OR Age = 33

	          name
	0  John Deloor
	1  Joseph Huts
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM teacher
		   WHERE (age >= 32.0))
		WHERE (age <= 33.0)
		ORDER BY name
		
		

	          name
	0  John Deloor
No solution for instance db2csv/course_teach/0017_dev (177)
No solution for instance db2csv/course_teach/0018_dev (180)
No solution for instance db2csv/course_teach/0024_dev (183)
Error while executing solution for instance db2csv/cre_Doc_Template_Mgt/0063_dev (184)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT COUNT(DISTINCT `document_name`) OVER () AS `count___`
FROM `documents`
WHERE (`document_name` = 'Summer Show')
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0064_dev (186)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Paragraphs AS T1
		JOIN Documents AS T2 ON T1.document_ID = T2.document_ID
		WHERE T2.document_name = 'Summer Show'

	   count(*)
	0        49
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `documents`
		      WHERE (`document_name` = 'Summer Show')))
		ORDER BY count___
		
		

	   count___
	0        15
Error while executing solution for instance db2csv/cre_Doc_Template_Mgt/0047_dev (188)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT template_type_code
FROM
  (SELECT LHS.template_id AS template_id,
          LHS.version_number AS version_number,
          LHS.template_type_code AS template_type_code,
          LHS.date_effective_from AS date_effective_from,
          LHS.date_effective_to AS date_effective_to,
          LHS.template_details AS template_details,
          LHS.document_id AS document_id,
          LHS.document_name AS document_name,
          LHS.document_description AS document_description,
          LHS.other_details AS other_details,
          RHS.n_distinct AS n_distinct
   FROM
     (SELECT LHS.template_id AS template_id,
             LHS.version_number AS version_number,
             LHS.template_type_code AS template_type_code,
             LHS.date_effective_from AS date_effective_from,
             LHS.date_effective_to AS date_effective_to,
             LHS.template_details AS template_details,
             RHS.document_id AS document_id,
             RHS.document_name AS document_name,
             RHS.document_description AS document_description,
             RHS.other_details AS other_details
      FROM templates AS LHS
      INNER JOIN documents AS RHS ON (LHS.template_id = RHS.template_id)) AS LHS
   INNER JOIN
     (SELECT document_id,
             COUNT(DISTINCT document_id) OVER () AS n_distinct
      FROM
        (SELECT MAX(document_id) AS document_id
         FROM paragraphs)) AS RHS ON (LHS.document_id = RHS.document_id))
ORDER BY template_type_code

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/cre_Doc_Template_Mgt/0078_dev (190)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0011_dev (191)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Documents AS T1
		JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
		WHERE T2.Template_Type_Code = 'PPT'

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `templates`
		      WHERE (`template_type_code` = 'PPT')))
		ORDER BY count___
		
		

	   count___
	0         3
Error while executing solution for instance db2csv/cre_Doc_Template_Mgt/0061_dev (195)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT document_id) OVER () AS count___
FROM documents
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/cre_Doc_Template_Mgt/0028_dev (196)
Wrong output for base solution in instance db2csv/cre_Doc_Template_Mgt/0066_dev (197)
	EXPECTED OUTPUT ====

	Empty DataFrame
	Columns: [other_details]
	Index: []
	ACTUAL OUTPUT ====

		select other_details
		from paragraphs
		where paragraph_text like 'korea'

	  other_details
	0          None
	1          None
Wrong output for ground truth in instance db2csv/cre_Doc_Template_Mgt/0066_dev (197)
Wrong output for base solution in instance db2csv/cre_Doc_Template_Mgt/0035_dev (198)
	EXPECTED OUTPUT ====

	  template_type_code
	0                 BK
	ACTUAL OUTPUT ====

		SELECT template_type_code
		FROM Templates
		GROUP BY template_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  template_type_code
	0                 PP
Wrong output for ground truth in instance db2csv/cre_Doc_Template_Mgt/0035_dev (198)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0084_dev (200)
	EXPECTED OUTPUT ====

		SELECT document_id
		FROM Paragraphs
		WHERE paragraph_text = 'Brazil' INTERSECT
		  SELECT document_id
		  FROM Paragraphs WHERE paragraph_text = 'Ireland'

	Empty DataFrame
	Columns: [document_id]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `document_id`
		FROM
		  (SELECT *
		   FROM `paragraphs`
		   WHERE (`paragraph_text` = 'Ireland'))
		WHERE (`paragraph_text` != 'Brazil')
		ORDER BY document_id
		
		

	   document_id
	0           76
No solution for instance db2csv/cre_Doc_Template_Mgt/0077_dev (204)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0083_dev (207)
	EXPECTED OUTPUT ====

		SELECT document_id
		FROM Paragraphs
		WHERE paragraph_text = 'Brazil' INTERSECT
		  SELECT document_id
		  FROM Paragraphs WHERE paragraph_text = 'Ireland'

	Empty DataFrame
	Columns: [document_id]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `document_id`
		FROM
		  (SELECT *
		   FROM `paragraphs`
		   WHERE (`paragraph_text` = 'Ireland'))
		WHERE (`paragraph_text` != 'Brazil')
		ORDER BY document_id
		
		

	   document_id
	0           76
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0050_dev (209)
	EXPECTED OUTPUT ====

		SELECT template_type_code
		FROM Templates
		EXCEPT
		SELECT template_type_code
		FROM Templates AS T1
		JOIN Documents AS T2 ON T1.template_id = T2.template_id

	Empty DataFrame
	Columns: [template_type_code]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT template_type_code
		FROM
		  (SELECT *
		   FROM ref_template_types AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM templates AS LHS
		           WHERE EXISTS
		               (SELECT 1
		                FROM documents AS RHS
		                WHERE (LHS.template_id = RHS.template_id) )) AS RHS
		        WHERE (LHS.template_type_code = RHS.template_type_code) ))
		ORDER BY template_type_code
		
		

	  template_type_code
	0                  B
	1                 CV
	2                 N0
	3                 TQ
Wrong output for base solution in instance db2csv/cre_Doc_Template_Mgt/0016_dev (214)
	EXPECTED OUTPUT ====

	   template_id template_type_code
	0           11                 BK
	ACTUAL OUTPUT ====

		SELECT T1.template_id,
		       T2.Template_Type_Code
		FROM Documents AS T1
		JOIN Templates AS T2 ON T1.template_id = T2.template_id
		GROUP BY T1.template_id
		ORDER BY count(*) DESC
		LIMIT 1

	   template_id template_type_code
	0           25                 PP
Wrong output for ground truth in instance db2csv/cre_Doc_Template_Mgt/0016_dev (214)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0006_dev (216)
	EXPECTED OUTPUT ====

		SELECT document_name,
		       template_id
		FROM Documents
		WHERE Document_Description LIKE "%w%"

	            document_name  template_id
	0       How to write a CV            6
	1       How to write a CV           23
	2       How to write a CV           24
	3  How to write a CVg5tVP            5
	4         Nv)Data baseNAK           17
	5                ata base           18
	6                ata base           26
	ACTUAL OUTPUT ====

		
		SELECT `document_name`,
		       `template_id`
		FROM `documents`
		WHERE (`document_description` = 'w')
		ORDER BY document_name
		
		

	       document_name  template_id
	0  How to write a CV            6
	1  How to write a CV           24
	2           ata base           18
Error while executing solution for instance db2csv/cre_Doc_Template_Mgt/0010_dev (217)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT template_id) OVER () AS count_distinct_template_id_
FROM documents
ORDER BY count_distinct_template_id_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0037_dev (220)
	EXPECTED OUTPUT ====

		SELECT template_type_code
		FROM Templates
		GROUP BY template_type_code
		HAVING count(*) < 3

	  template_type_code
	0            BKm3p7S
	1                Bfa
	2               E1jV
	3                PPT
	4           RfvCVhb1
	5          cZVUQyAuB
	6                 fJ
	7                g n
	8           j4HUFPPT
	9           sCa5ieE2
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT template_type_code
		FROM
		  (SELECT *
		   FROM templates AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT LHS.document_id AS document_id,
		                  LHS.template_id AS template_id,
		                  LHS.document_name AS document_name,
		                  LHS.document_description AS document_description,
		                  LHS.other_details AS other_details,
		                  RHS.version_number AS version_number,
		                  RHS.template_type_code AS template_type_code,
		                  RHS.date_effective_from AS date_effective_from,
		                  RHS.date_effective_to AS date_effective_to,
		                  RHS.template_details AS template_details
		           FROM documents AS LHS
		           INNER JOIN templates AS RHS ON (LHS.template_id = RHS.template_id)) AS RHS
		        WHERE (LHS.template_type_code = RHS.template_type_code) ))
		ORDER BY template_type_code
		
		

	Empty DataFrame
	Columns: [template_type_code]
	Index: []
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0040_dev (221)
	EXPECTED OUTPUT ====

		SELECT min(Version_Number),
		       template_type_code
		FROM Templates

	   min(version_number) template_type_code
	0                    0            BKm3p7S
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT version_number AS min_version_number_,
		                template_type_code
		FROM
		  (SELECT LHS.template_id AS template_id,
		          LHS.version_number AS version_number,
		          LHS.template_type_code AS template_type_code,
		          LHS.date_effective_from AS date_effective_from,
		          LHS.date_effective_to AS date_effective_to,
		          LHS.template_details AS template_details,
		          LHS.paragraph_id AS paragraph_id,
		          LHS.document_id AS document_id,
		          LHS.paragraph_text AS paragraph_text,
		          LHS.other_details AS other_details
		   FROM
		     (SELECT LHS.template_id AS template_id,
		             LHS.version_number AS version_number,
		             LHS.template_type_code AS template_type_code,
		             LHS.date_effective_from AS date_effective_from,
		             LHS.date_effective_to AS date_effective_to,
		             LHS.template_details AS template_details,
		             RHS.paragraph_id AS paragraph_id,
		             RHS.document_id AS document_id,
		             RHS.paragraph_text AS paragraph_text,
		             RHS.other_details AS other_details
		      FROM templates AS LHS
		      CROSS JOIN paragraphs AS RHS) AS LHS
		   INNER JOIN
		     (SELECT MIN(version_number) AS version_number
		      FROM templates) AS RHS ON (LHS.version_number = RHS.version_number))
		ORDER BY min_version_number_
		
		

	   min_version_number_ template_type_code
	0                    0            BKm3p7S
	1                    0            CVd9nyX
No solution for instance db2csv/cre_Doc_Template_Mgt/0027_dev (222)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0005_dev (225)
	EXPECTED OUTPUT ====

		SELECT document_name,
		       template_id
		FROM Documents
		WHERE Document_Description LIKE "%w%"

	            document_name  template_id
	0       How to write a CV            6
	1       How to write a CV           23
	2       How to write a CV           24
	3  How to write a CVg5tVP            5
	4         Nv)Data baseNAK           17
	5                ata base           18
	6                ata base           26
	ACTUAL OUTPUT ====

		
		SELECT `document_name`,
		       `template_id`
		FROM `documents`
		WHERE (`document_description` = 'w')
		ORDER BY document_name
		
		

	       document_name  template_id
	0  How to write a CV            6
	1  How to write a CV           24
	2           ata base           18
Wrong output for base solution in instance db2csv/cre_Doc_Template_Mgt/0015_dev (228)
	EXPECTED OUTPUT ====

	   template_id template_type_code
	0           11                 BK
	ACTUAL OUTPUT ====

		SELECT T1.template_id,
		       T2.Template_Type_Code
		FROM Documents AS T1
		JOIN Templates AS T2 ON T1.template_id = T2.template_id
		GROUP BY T1.template_id
		ORDER BY count(*) DESC
		LIMIT 1

	   template_id template_type_code
	0           25                 PP
Wrong output for ground truth in instance db2csv/cre_Doc_Template_Mgt/0015_dev (228)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0012_dev (230)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Documents AS T1
		JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
		WHERE T2.Template_Type_Code = 'PPT'

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `templates`
		      WHERE (`template_type_code` = 'PPT')))
		ORDER BY count___
		
		

	   count___
	0         3
Wrong output for base solution in instance db2csv/cre_Doc_Template_Mgt/0065_dev (233)
	EXPECTED OUTPUT ====

	Empty DataFrame
	Columns: [other_details]
	Index: []
	ACTUAL OUTPUT ====

		select other_details
		from paragraphs
		where paragraph_text like 'korea'

	  other_details
	0          None
	1          None
Wrong output for ground truth in instance db2csv/cre_Doc_Template_Mgt/0065_dev (233)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0038_dev (234)
	EXPECTED OUTPUT ====

		SELECT template_type_code
		FROM Templates
		GROUP BY template_type_code
		HAVING count(*) < 3

	  template_type_code
	0            BKm3p7S
	1                Bfa
	2               E1jV
	3                PPT
	4           RfvCVhb1
	5          cZVUQyAuB
	6                 fJ
	7                g n
	8           j4HUFPPT
	9           sCa5ieE2
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT template_type_code
		FROM
		  (SELECT *
		   FROM templates AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM templates AS LHS
		           WHERE EXISTS
		               (SELECT 1
		                FROM documents AS RHS
		                WHERE (LHS.template_id = RHS.template_id) )) AS RHS
		        WHERE (LHS.template_type_code = RHS.template_type_code) ))
		ORDER BY template_type_code
		
		

	Empty DataFrame
	Columns: [template_type_code]
	Index: []
Wrong output for base solution in instance db2csv/cre_Doc_Template_Mgt/0036_dev (238)
	EXPECTED OUTPUT ====

	  template_type_code
	0                 BK
	ACTUAL OUTPUT ====

		SELECT template_type_code
		FROM Templates
		GROUP BY template_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  template_type_code
	0                 PP
Wrong output for ground truth in instance db2csv/cre_Doc_Template_Mgt/0036_dev (238)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0039_dev (240)
	EXPECTED OUTPUT ====

		SELECT min(Version_Number),
		       template_type_code
		FROM Templates

	   min(version_number) template_type_code
	0                    0            BKm3p7S
	ACTUAL OUTPUT ====

		
		SELECT version_number AS min_version_number_,
		       template_type_code
		FROM
		  (SELECT LHS.template_id AS template_id,
		          LHS.version_number AS version_number,
		          LHS.template_type_code AS template_type_code,
		          LHS.date_effective_from AS date_effective_from,
		          LHS.date_effective_to AS date_effective_to,
		          LHS.template_details AS template_details
		   FROM templates AS LHS
		   INNER JOIN
		     (SELECT MIN(version_number) AS version_number
		      FROM templates) AS RHS ON (LHS.version_number = RHS.version_number))
		ORDER BY min_version_number_
		
		

	   min_version_number_ template_type_code
	0                    0            BKm3p7S
	1                    0            CVd9nyX
Error while executing solution for instance db2csv/cre_Doc_Template_Mgt/0002_dev (243)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT document_id) OVER () AS count___
FROM documents
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Error while executing solution for instance db2csv/cre_Doc_Template_Mgt/0009_dev (244)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT template_id) OVER () AS count_distinct_template_id_
FROM documents
ORDER BY count_distinct_template_id_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Error while executing solution for instance db2csv/cre_Doc_Template_Mgt/0001_dev (245)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT document_id) OVER () AS count___
FROM documents
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/cre_Doc_Template_Mgt/0042_dev (248)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0079_dev (250)
	EXPECTED OUTPUT ====

		SELECT document_id
		FROM Paragraphs
		GROUP BY document_id
		ORDER BY count(*) ASC
		LIMIT 1

	   document_id
	0       651510
	ACTUAL OUTPUT ====

		
		SELECT document_id
		FROM
		  (SELECT LHS.document_id AS document_id,
		          LHS.n_distinct AS n_distinct,
		          RHS.document_id AS document_id_other
		   FROM
		     (SELECT document_id,
		             COUNT(DISTINCT paragraph_id) AS n_distinct
		      FROM
		        (SELECT paragraph_id,
		                document_id,
		                paragraph_text,
		                other_details,
		                MIN(paragraph_id) OVER () AS minparagraph_id
		         FROM paragraphs)
		      GROUP BY document_id) AS LHS
		   INNER JOIN
		     (SELECT document_id,
		             COUNT(DISTINCT paragraph_id) AS n_distinct
		      FROM
		        (SELECT paragraph_id,
		                document_id,
		                paragraph_text,
		                other_details,
		                MIN(paragraph_id) OVER () AS minparagraph_id
		         FROM paragraphs)
		      GROUP BY document_id) AS RHS ON (LHS.document_id = RHS.n_distinct))
		ORDER BY document_id
		
		

	   document_id
	0            1
	1            1
	2            1
	3            1
	4            1
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0049_dev (254)
	EXPECTED OUTPUT ====

		SELECT template_type_code
		FROM Templates
		EXCEPT
		SELECT template_type_code
		FROM Templates AS T1
		JOIN Documents AS T2 ON T1.template_id = T2.template_id

	Empty DataFrame
	Columns: [template_type_code]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT template_type_code
		FROM
		  (SELECT *
		   FROM ref_template_types AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM templates AS LHS
		           WHERE EXISTS
		               (SELECT 1
		                FROM documents AS RHS
		                WHERE (LHS.template_id = RHS.template_id) )) AS RHS
		        WHERE (LHS.template_type_code = RHS.template_type_code) ))
		ORDER BY template_type_code
		
		

	  template_type_code
	0                  B
	1                 CV
	2                 N0
	3                 TQ
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0048_dev (256)
	EXPECTED OUTPUT ====

		SELECT T1.template_type_code
		FROM Templates AS T1
		JOIN Documents AS T2 ON T1.template_id = T2.template_id
		GROUP BY T1.template_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  template_type_code
	0                 AD
	ACTUAL OUTPUT ====

		
		SELECT template_type_code
		FROM
		  (SELECT LHS.template_id AS template_id,
		          LHS.version_number AS version_number,
		          LHS.template_type_code AS template_type_code,
		          LHS.date_effective_from AS date_effective_from,
		          LHS.date_effective_to AS date_effective_to,
		          LHS.template_details AS template_details
		   FROM templates AS LHS
		   INNER JOIN
		     (SELECT COUNT() AS n
		      FROM templates) AS RHS ON (LHS.template_id = RHS.n))
		ORDER BY template_type_code
		
		

	Empty DataFrame
	Columns: [template_type_code]
	Index: []
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0018_dev (258)
	EXPECTED OUTPUT ====

		SELECT template_id
		FROM Documents
		GROUP BY template_id
		HAVING count(*) > 1

	   template_id
	0            7
	1           13
	2           17
	3           21
	ACTUAL OUTPUT ====

		
		SELECT template_id_other AS template_id
		FROM
		  (SELECT LHS.document_id AS document_id,
		          LHS.template_id AS template_id,
		          LHS.document_name AS document_name,
		          LHS.document_description AS document_description,
		          LHS.other_details AS other_details,
		          RHS.template_id AS template_id_other
		   FROM documents AS LHS
		   INNER JOIN
		     (SELECT template_id,
		             COUNT() AS n
		      FROM
		        (SELECT LHS.document_id AS document_id,
		                LHS.template_id AS template_id,
		                LHS.document_name AS document_name,
		                LHS.document_description AS document_description,
		                LHS.other_details AS other_details,
		                RHS.template_type_code AS template_type_code,
		                RHS.template_type_description AS template_type_description
		         FROM documents AS LHS
		         CROSS JOIN ref_template_types AS RHS)
		      GROUP BY template_id) AS RHS ON (LHS.template_id = RHS.n))
		ORDER BY template_id
		
		

	Empty DataFrame
	Columns: [template_id]
	Index: []
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0080_dev (265)
	EXPECTED OUTPUT ====

		SELECT document_id
		FROM Paragraphs
		GROUP BY document_id
		ORDER BY count(*) ASC
		LIMIT 1

	   document_id
	0       651510
	ACTUAL OUTPUT ====

		
		SELECT document_id
		FROM
		  (SELECT LHS.paragraph_id AS paragraph_id,
		          LHS.document_id AS document_id,
		          LHS.paragraph_text AS paragraph_text,
		          LHS.other_details AS other_details,
		          RHS.document_id AS document_id_other
		   FROM
		     (SELECT MIN(paragraph_id) OVER () AS paragraph_id,
		                                    document_id,
		                                    paragraph_text,
		                                    other_details
		      FROM paragraphs) AS LHS
		   INNER JOIN
		     (SELECT document_id,
		             COUNT() AS n
		      FROM paragraphs
		      GROUP BY document_id) AS RHS ON (LHS.document_id = RHS.n))
		ORDER BY document_id
		
		

	   document_id
	0            1
	1            1
	2            1
	3            1
	4            1
	5            1
	6            1
	7            1
	8            1
	9            1
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0063_dev (268)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Owners
		WHERE owner_id NOT IN
		    (SELECT owner_id
		     FROM Dogs)

	   count(*)
	0         3
	ACTUAL OUTPUT ====

		
		SELECT treatment_id AS count___
		FROM
		  (SELECT dog_id,
		          owner_id,
		          abandoned_yn,
		          breed_code,
		          size_code,
		          name,
		          age,
		          date_of_birth,
		          gender,
		          weight,
		          date_arrived,
		          date_adopted,
		          date_departed,
		          treatment_id,
		          treatment_type_code,
		          date_of_treatment,
		          cost_of_treatment,
		          dog_id AS professional_id
		   FROM
		     (SELECT owner_id AS dog_id,
		             owner_id,
		             abandoned_yn,
		             breed_code,
		             size_code,
		             name,
		             age,
		             date_of_birth,
		             gender,
		             weight,
		             date_arrived,
		             date_adopted,
		             date_departed,
		             treatment_id,
		             treatment_type_code,
		             date_of_treatment,
		             cost_of_treatment
		      FROM
		        (SELECT LHS.dog_id AS dog_id,
		                LHS.owner_id AS owner_id,
		                LHS.abandoned_yn AS abandoned_yn,
		                LHS.breed_code AS breed_code,
		                LHS.size_code AS size_code,
		                LHS.name AS name,
		                LHS.age AS age,
		                LHS.date_of_birth AS date_of_birth,
		                LHS.gender AS gender,
		                LHS.weight AS weight,
		                LHS.date_arrived AS date_arrived,
		                LHS.date_adopted AS date_adopted,
		                LHS.date_departed AS date_departed,
		                RHS.treatment_id AS treatment_id,
		                RHS.treatment_type_code AS treatment_type_code,
		                RHS.date_of_treatment AS date_of_treatment,
		                RHS.cost_of_treatment AS cost_of_treatment
		         FROM dogs AS LHS
		         INNER JOIN treatments AS RHS ON (LHS.owner_id = RHS.dog_id
		                                             AND LHS.dog_id = RHS.professional_id))))
		ORDER BY count___
		
		

	   count___
	0         1
Wrong output for base solution in instance db2csv/dog_kennels/0067_dev (269)
	EXPECTED OUTPUT ====

	         name  age  weight
	0  Evangeline    1    4.01
	1       Lyric    4    4.36
	2       Kacey    6    7.57
	ACTUAL OUTPUT ====

		SELECT name,
		       age,
		       weight
		FROM Dogs
		WHERE abandoned_yn = 1

	         name age weight
	0  Evangeline   1   4.01
	1       Lyric   4   4.36
	2       Kacey   6   7.57
Wrong output for ground truth in instance db2csv/dog_kennels/0067_dev (269)
Error while executing solution for instance db2csv/dog_kennels/0064_dev (270)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT owner_id) OVER () AS count___
FROM
  (SELECT *
   FROM owners AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM dogs AS RHS
        WHERE (LHS.owner_id = RHS.owner_id) ))
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/dog_kennels/0025_dev (271)
Wrong output for base solution in instance db2csv/dog_kennels/0047_dev (272)
	EXPECTED OUTPUT ====

	          date_arrived       date_departed
	0  2017-04-15 09:25:31 2018-03-25 13:07:04
	1  2017-04-20 00:58:55 2018-03-24 19:12:22
	2  2017-05-06 08:03:52 2018-03-25 06:29:10
	3  2017-06-18 19:45:38 2018-03-24 23:48:59
	4  2017-06-25 10:14:05 2018-03-25 10:25:46
	5  2017-07-25 15:19:07 2018-03-25 15:05:16
	6  2017-09-08 20:10:13 2018-03-25 06:58:44
	7  2017-10-16 20:06:21 2018-03-25 02:47:40
	8  2017-10-24 04:45:13 2018-03-25 14:15:41
	9  2017-10-25 00:55:34 2018-03-25 04:50:22
	10 2017-12-22 05:02:02 2018-03-25 02:11:32
	11 2017-12-29 06:08:26 2018-03-25 04:42:14
	12 2017-12-29 23:24:13 2018-03-24 19:36:59
	13 2018-01-02 03:15:29 2018-03-25 05:07:47
	14 2018-01-17 11:44:16 2018-03-25 06:46:07
	ACTUAL OUTPUT ====

		SELECT date_arrived,
		       date_departed
		FROM Dogs

	           date_arrived        date_departed
	0   2017-04-15 09:25:31  2018-03-25 13:07:04
	1   2017-04-20 00:58:55  2018-03-24 19:12:22
	2   2017-05-06 08:03:52  2018-03-25 06:29:10
	3   2017-06-18 19:45:38  2018-03-24 23:48:59
	4   2017-06-25 10:14:05  2018-03-25 10:25:46
	5   2017-07-25 15:19:07  2018-03-25 15:05:16
	6   2017-09-08 20:10:13  2018-03-25 06:58:44
	7   2017-10-16 20:06:21  2018-03-25 02:47:40
	8   2017-10-24 04:45:13  2018-03-25 14:15:41
	9   2017-10-25 00:55:34  2018-03-25 04:50:22
	10  2017-12-22 05:02:02  2018-03-25 02:11:32
	11  2017-12-29 06:08:26  2018-03-25 04:42:14
	12  2017-12-29 23:24:13  2018-03-24 19:36:59
	13  2018-01-02 03:15:29  2018-03-25 05:07:47
	14  2018-01-17 11:44:16  2018-03-25 06:46:07
Wrong output for ground truth in instance db2csv/dog_kennels/0047_dev (272)
No solution for instance db2csv/dog_kennels/0008_dev (273)
No solution for instance db2csv/dog_kennels/0019_dev (277)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_5944.sqlite3'
No solution for instance db2csv/dog_kennels/0043_dev (283)
Wrong output for base solution in instance db2csv/dog_kennels/0041_dev (284)
	EXPECTED OUTPUT ====

	         date_arrived       date_departed
	0 2017-04-20 00:58:55 2018-03-24 19:12:22
	1 2017-05-06 08:03:52 2018-03-25 06:29:10
	2 2017-06-18 19:45:38 2018-03-24 23:48:59
	3 2017-09-08 20:10:13 2018-03-25 06:58:44
	4 2017-10-24 04:45:13 2018-03-25 14:15:41
	5 2017-12-22 05:02:02 2018-03-25 02:11:32
	6 2017-12-29 06:08:26 2018-03-25 04:42:14
	7 2017-12-29 23:24:13 2018-03-24 19:36:59
	8 2018-01-02 03:15:29 2018-03-25 05:07:47
	ACTUAL OUTPUT ====

		SELECT DISTINCT T1.date_arrived,
		                T1.date_departed
		FROM Dogs AS T1
		JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id

	          date_arrived        date_departed
	0  2017-04-20 00:58:55  2018-03-24 19:12:22
	1  2017-05-06 08:03:52  2018-03-25 06:29:10
	2  2017-06-18 19:45:38  2018-03-24 23:48:59
	3  2017-09-08 20:10:13  2018-03-25 06:58:44
	4  2017-10-24 04:45:13  2018-03-25 14:15:41
	5  2017-12-22 05:02:02  2018-03-25 02:11:32
	6  2017-12-29 06:08:26  2018-03-25 04:42:14
	7  2017-12-29 23:24:13  2018-03-24 19:36:59
	8  2018-01-02 03:15:29  2018-03-25 05:07:47
Wrong output for ground truth in instance db2csv/dog_kennels/0041_dev (284)
Wrong output for base solution in instance db2csv/dog_kennels/0030_dev (285)
	EXPECTED OUTPUT ====

	     date_of_treatment first_name
	0  2018-02-26 09:08:53     Karley
	1  2018-02-28 17:09:43      Velva
	2  2018-03-01 04:14:46     Karley
	3  2018-03-04 20:33:43      Monte
	4  2018-03-08 05:26:23    Vernice
	5  2018-03-10 11:45:58     Sigurd
	6  2018-03-11 04:23:15    Vernice
	7  2018-03-13 12:22:58      Danny
	8  2018-03-14 19:10:40   Domenica
	9  2018-03-15 19:10:02      Ruben
	10 2018-03-15 20:25:34   Domenica
	11 2018-03-16 10:27:36      Monte
	12 2018-03-19 04:39:54      Monte
	13 2018-03-23 13:52:10     Sigurd
	14 2018-03-24 22:25:58      Ruben
	ACTUAL OUTPUT ====

		SELECT T1.date_of_treatment,
		       T2.first_name
		FROM Treatments AS T1
		JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id

	      date_of_treatment first_name
	0   2018-02-26 09:08:53     Karley
	1   2018-02-28 17:09:43      Velva
	2   2018-03-01 04:14:46     Karley
	3   2018-03-04 20:33:43      Monte
	4   2018-03-08 05:26:23    Vernice
	5   2018-03-10 11:45:58     Sigurd
	6   2018-03-11 04:23:15    Vernice
	7   2018-03-13 12:22:58      Danny
	8   2018-03-14 19:10:40   Domenica
	9   2018-03-15 19:10:02      Ruben
	10  2018-03-15 20:25:34   Domenica
	11  2018-03-16 10:27:36      Monte
	12  2018-03-19 04:39:54      Monte
	13  2018-03-23 13:52:10     Sigurd
	14  2018-03-24 22:25:58      Ruben
Wrong output for ground truth in instance db2csv/dog_kennels/0030_dev (285)
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0022_dev (288)
	EXPECTED OUTPUT ====

		SELECT T1.treatment_type_description
		FROM Treatment_types AS T1
		JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code
		GROUP BY T1.treatment_type_code
		ORDER BY sum(cost_of_treatment) ASC
		LIMIT 1

	  treatment_type_description
	0       Physical examination
	ACTUAL OUTPUT ====

		
		SELECT treatment_type_description
		FROM
		  (SELECT LHS.treatment_type_code AS treatment_type_code,
		          LHS.treatment_type_description AS treatment_type_description,
		          LHS.treatment_id AS treatment_id,
		          LHS.dog_id AS dog_id,
		          LHS.professional_id AS professional_id,
		          LHS.date_of_treatment AS date_of_treatment,
		          LHS.cost_of_treatment AS cost_of_treatment,
		          LHS.sumcost_of_treatment AS sumcost_of_treatment
		   FROM
		     (SELECT LHS.treatment_type_code AS treatment_type_code,
		             LHS.treatment_type_description AS treatment_type_description,
		             RHS.treatment_id AS treatment_id,
		             RHS.dog_id AS dog_id,
		             RHS.professional_id AS professional_id,
		             RHS.date_of_treatment AS date_of_treatment,
		             RHS.cost_of_treatment AS cost_of_treatment,
		             RHS.sumcost_of_treatment AS sumcost_of_treatment
		      FROM treatment_types AS LHS
		      INNER JOIN
		        (SELECT treatment_id,
		                dog_id,
		                professional_id,
		                treatment_type_code,
		                date_of_treatment,
		                cost_of_treatment,
		                SUM(cost_of_treatment) OVER () AS sumcost_of_treatment
		         FROM treatments) AS RHS ON (LHS.treatment_type_code = RHS.treatment_type_code)) AS LHS
		   INNER JOIN
		     (SELECT MIN(cost_of_treatment) AS cost_of_treatment
		      FROM
		        (SELECT treatment_id,
		                dog_id,
		                professional_id,
		                treatment_type_code,
		                date_of_treatment,
		                cost_of_treatment,
		                SUM(cost_of_treatment) OVER () AS sumcost_of_treatment
		         FROM treatments)) AS RHS ON (LHS.cost_of_treatment = RHS.cost_of_treatment))
		ORDER BY treatment_type_description
		
		

	  treatment_type_description
	0  iXpGYPhysical examination
Error while executing solution for instance db2csv/dog_kennels/0050_dev (291)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT dog_id) OVER () AS count_distinct_dog_id_
FROM treatments
ORDER BY count_distinct_dog_id_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for base solution in instance db2csv/dog_kennels/0023_dev (292)
	EXPECTED OUTPUT ====

	   owner_id  zip_code
	0         3      2647
	ACTUAL OUTPUT ====

		SELECT T1.owner_id,
		       T1.zip_code
		FROM Owners AS T1
		JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
		JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id
		GROUP BY T1.owner_id
		ORDER BY sum(T3.cost_of_treatment) DESC
		LIMIT 1

	   owner_id zip_code
	0         3    02647
Wrong output for ground truth in instance db2csv/dog_kennels/0023_dev (292)
Wrong output for base solution in instance db2csv/dog_kennels/0029_dev (293)
	EXPECTED OUTPUT ====

	     date_of_treatment first_name
	0  2018-02-26 09:08:53     Karley
	1  2018-02-28 17:09:43      Velva
	2  2018-03-01 04:14:46     Karley
	3  2018-03-04 20:33:43      Monte
	4  2018-03-08 05:26:23    Vernice
	5  2018-03-10 11:45:58     Sigurd
	6  2018-03-11 04:23:15    Vernice
	7  2018-03-13 12:22:58      Danny
	8  2018-03-14 19:10:40   Domenica
	9  2018-03-15 19:10:02      Ruben
	10 2018-03-15 20:25:34   Domenica
	11 2018-03-16 10:27:36      Monte
	12 2018-03-19 04:39:54      Monte
	13 2018-03-23 13:52:10     Sigurd
	14 2018-03-24 22:25:58      Ruben
	ACTUAL OUTPUT ====

		SELECT T1.date_of_treatment,
		       T2.first_name
		FROM Treatments AS T1
		JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id

	      date_of_treatment first_name
	0   2018-02-26 09:08:53     Karley
	1   2018-02-28 17:09:43      Velva
	2   2018-03-01 04:14:46     Karley
	3   2018-03-04 20:33:43      Monte
	4   2018-03-08 05:26:23    Vernice
	5   2018-03-10 11:45:58     Sigurd
	6   2018-03-11 04:23:15    Vernice
	7   2018-03-13 12:22:58      Danny
	8   2018-03-14 19:10:40   Domenica
	9   2018-03-15 19:10:02      Ruben
	10  2018-03-15 20:25:34   Domenica
	11  2018-03-16 10:27:36      Monte
	12  2018-03-19 04:39:54      Monte
	13  2018-03-23 13:52:10     Sigurd
	14  2018-03-24 22:25:58      Ruben
Wrong output for ground truth in instance db2csv/dog_kennels/0029_dev (293)
No solution for instance db2csv/dog_kennels/0055_dev (295)
No solution for instance db2csv/dog_kennels/0016_dev (296)
No solution for instance db2csv/dog_kennels/0053_dev (297)
No solution for instance db2csv/dog_kennels/0006_dev (298)
No solution for instance db2csv/dog_kennels/0010_dev (299)
No solution for instance db2csv/dog_kennels/0054_dev (301)
Wrong output for base solution in instance db2csv/dog_kennels/0037_dev (302)
	EXPECTED OUTPUT ====

	      name   date_of_treatment
	0    Lyric 2018-03-08 05:26:23
	1    Lyric 2018-03-14 19:10:40
	2    Kacey 2018-03-15 19:10:02
	3  Houston 2018-03-15 20:25:34
	4    Lyric 2018-03-19 04:39:54
	ACTUAL OUTPUT ====

		SELECT T1.name,
		       T2.date_of_treatment
		FROM Dogs AS T1
		JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
		WHERE T1.breed_code =
		    (SELECT breed_code
		     FROM Dogs
		     GROUP BY breed_code
		     ORDER BY count(*) ASC
		     LIMIT 1)

	      name    date_of_treatment
	0    Lyric  2018-03-08 05:26:23
	1    Lyric  2018-03-14 19:10:40
	2    Kacey  2018-03-15 19:10:02
	3  Houston  2018-03-15 20:25:34
	4    Lyric  2018-03-19 04:39:54
Wrong output for ground truth in instance db2csv/dog_kennels/0037_dev (302)
No solution for instance db2csv/dog_kennels/0027_dev (304)
No solution for instance db2csv/dog_kennels/0020_dev (305)
No solution for instance db2csv/dog_kennels/0044_dev (306)
No solution for instance db2csv/dog_kennels/0005_dev (307)
No solution for instance db2csv/dog_kennels/0007_dev (308)
No solution for instance db2csv/dog_kennels/0056_dev (309)
No solution for instance db2csv/dog_kennels/0015_dev (310)
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0045_dev (311)
	EXPECTED OUTPUT ====

		SELECT email_address
		FROM Professionals
		WHERE state = 'Hawaii'
		  OR state = 'Wisconsin'

	                         email_address
	0   BMqxschneider.kathryne@example.org
	1    ddMV)jerrod.bahringer@example.org
	2                jeichmann@example.com
	3         jerrod.bahringer@example.org
	ACTUAL OUTPUT ====

		
		SELECT `email_address`
		FROM
		  (SELECT *
		   FROM `professionals` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT *
		              FROM `professionals`
		              WHERE (`state` != 'Wisconsin'))
		           WHERE (`state` != 'Hawaii')) AS RHS
		        WHERE (LHS.email_address = RHS.email_address
		               AND LHS.home_phone = RHS.home_phone) ))
		ORDER BY email_address
		
		

	                         email_address
	0   BMqxschneider.kathryne@example.org
	1    ddMV)jerrod.bahringer@example.org
	2                jeichmann@example.com
No solution for instance db2csv/dog_kennels/0060_dev (314)
Wrong output for base solution in instance db2csv/dog_kennels/0038_dev (316)
	EXPECTED OUTPUT ====

	      name   date_of_treatment
	0    Lyric 2018-03-08 05:26:23
	1    Lyric 2018-03-14 19:10:40
	2    Kacey 2018-03-15 19:10:02
	3  Houston 2018-03-15 20:25:34
	4    Lyric 2018-03-19 04:39:54
	ACTUAL OUTPUT ====

		SELECT T1.name,
		       T2.date_of_treatment
		FROM Dogs AS T1
		JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
		WHERE T1.breed_code =
		    (SELECT breed_code
		     FROM Dogs
		     GROUP BY breed_code
		     ORDER BY count(*) ASC
		     LIMIT 1)

	      name    date_of_treatment
	0    Lyric  2018-03-08 05:26:23
	1    Lyric  2018-03-14 19:10:40
	2    Kacey  2018-03-15 19:10:02
	3  Houston  2018-03-15 20:25:34
	4    Lyric  2018-03-19 04:39:54
Wrong output for ground truth in instance db2csv/dog_kennels/0038_dev (316)
Wrong output for base solution in instance db2csv/dog_kennels/0068_dev (319)
	EXPECTED OUTPUT ====

	         name  age  weight
	0  Evangeline    1    4.01
	1       Lyric    4    4.36
	2       Kacey    6    7.57
	ACTUAL OUTPUT ====

		SELECT name,
		       age,
		       weight
		FROM Dogs
		WHERE abandoned_yn = 1

	         name age weight
	0  Evangeline   1   4.01
	1       Lyric   4   4.36
	2       Kacey   6   7.57
Wrong output for ground truth in instance db2csv/dog_kennels/0068_dev (319)
Wrong output for base solution in instance db2csv/dog_kennels/0072_dev (321)
	EXPECTED OUTPUT ====

	   max_age_
	0         9
	ACTUAL OUTPUT ====

		SELECT max(age)
		FROM Dogs

	  max(age)
	0        9
Wrong output for ground truth in instance db2csv/dog_kennels/0072_dev (321)
No solution for instance db2csv/dog_kennels/0013_dev (324)
No solution for instance db2csv/dog_kennels/0009_dev (326)
No solution for instance db2csv/dog_kennels/0017_dev (328)
Error while executing solution for instance db2csv/dog_kennels/0051_dev (329)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT professional_id) OVER () AS count_distinct_professional_id_
FROM treatments
ORDER BY count_distinct_professional_id_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for base solution in instance db2csv/dog_kennels/0042_dev (330)
	EXPECTED OUTPUT ====

	         date_arrived       date_departed
	0 2017-04-20 00:58:55 2018-03-24 19:12:22
	1 2017-05-06 08:03:52 2018-03-25 06:29:10
	2 2017-06-18 19:45:38 2018-03-24 23:48:59
	3 2017-09-08 20:10:13 2018-03-25 06:58:44
	4 2017-10-24 04:45:13 2018-03-25 14:15:41
	5 2017-12-22 05:02:02 2018-03-25 02:11:32
	6 2017-12-29 06:08:26 2018-03-25 04:42:14
	7 2017-12-29 23:24:13 2018-03-24 19:36:59
	8 2018-01-02 03:15:29 2018-03-25 05:07:47
	ACTUAL OUTPUT ====

		SELECT DISTINCT T1.date_arrived,
		                T1.date_departed
		FROM Dogs AS T1
		JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id

	          date_arrived        date_departed
	0  2017-04-20 00:58:55  2018-03-24 19:12:22
	1  2017-05-06 08:03:52  2018-03-25 06:29:10
	2  2017-06-18 19:45:38  2018-03-24 23:48:59
	3  2017-09-08 20:10:13  2018-03-25 06:58:44
	4  2017-10-24 04:45:13  2018-03-25 14:15:41
	5  2017-12-22 05:02:02  2018-03-25 02:11:32
	6  2017-12-29 06:08:26  2018-03-25 04:42:14
	7  2017-12-29 23:24:13  2018-03-24 19:36:59
	8  2018-01-02 03:15:29  2018-03-25 05:07:47
Wrong output for ground truth in instance db2csv/dog_kennels/0042_dev (330)
Error while executing solution for instance db2csv/dog_kennels/0057_dev (331)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT age AS count___
FROM
  (SELECT dog_id,
          owner_id,
          abandoned_yn,
          breed_code,
          size_code,
          name,
          age,
          date_of_birth,
          gender,
          weight,
          date_arrived,
          date_adopted,
          date_departed,
          COUNT(DISTINCT age) OVER () AS n_distinct
   FROM dogs)
WHERE (n_distinct < age)
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_5944.sqlite3'
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0034_dev (333)
	EXPECTED OUTPUT ====

		SELECT T1.first_name,
		       T1.last_name,
		       T2.size_code
		FROM Owners AS T1
		JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id

	        first_name   last_name  size_code
	0        2xiGayh3T    ugBlqjH3   MEDaQxpg
	1        2xiGayh3T    ugBlqjH3         SM
	2     6V8xCDS8mnz4       Haley         SM
	3     6V8xCDS8mnz4       Haley         SM
	4     6V8xCDS8mnz4       Haley  ba9MED5pt
	5             Cind       Haley        MED
	6             Cind       Haley  ba9MED5pt
	7             Cind       Haley       oqgh
	8            Cindy        Feil   MEDaQxpg
	9            Cindy      Hamill         ME
	10           Cindy      Hamill  ba9MED5pt
	11   K4BMTRachelle         eil        SML
	12     OLIokAdelle        Feil         SM
	13  QnARachellehlO  f2uLwPrice  ba9MED5pt
	14  QnARachellehlO  f2uLwPrice       oqgh
	15        Rachelle     Nicolas         ME
	16        Rachelle     Nicolas        SML
	17        Rachelle     Nicolas  ba9MED5pt
	18        Rachelle       Price   MEDaQxpg
	19        Rachelle       Price       oqgh
	20        Rachelle        aley   xG2R SML
	21         kZ6Uis1      Hamill         SM
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT first_name,
		                last_name,
		                size_code
		FROM
		  (SELECT LHS.owner_id AS owner_id,
		          LHS.first_name AS first_name,
		          LHS.last_name AS last_name,
		          LHS.street AS street,
		          LHS.city AS city,
		          LHS.state AS state,
		          LHS.zip_code AS zip_code,
		          LHS.email_address AS email_address,
		          LHS.home_phone AS home_phone,
		          LHS.cell_number AS cell_number,
		          LHS.dog_id AS dog_id,
		          LHS.abandoned_yn AS abandoned_yn,
		          LHS.breed_code AS breed_code,
		          LHS.size_code AS size_code,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.date_of_birth AS date_of_birth,
		          LHS.gender AS gender,
		          LHS.weight AS weight,
		          LHS.date_arrived AS date_arrived,
		          LHS.date_adopted AS date_adopted,
		          LHS.date_departed AS date_departed,
		          RHS.treatment_type_code AS treatment_type_code,
		          RHS.treatment_type_description AS treatment_type_description
		   FROM
		     (SELECT LHS.owner_id AS owner_id,
		             LHS.first_name AS first_name,
		             LHS.last_name AS last_name,
		             LHS.street AS street,
		             LHS.city AS city,
		             LHS.state AS state,
		             LHS.zip_code AS zip_code,
		             LHS.email_address AS email_address,
		             LHS.home_phone AS home_phone,
		             LHS.cell_number AS cell_number,
		             RHS.dog_id AS dog_id,
		             RHS.abandoned_yn AS abandoned_yn,
		             RHS.breed_code AS breed_code,
		             RHS.size_code AS size_code,
		             RHS.name AS name,
		             RHS.age AS age,
		             RHS.date_of_birth AS date_of_birth,
		             RHS.gender AS gender,
		             RHS.weight AS weight,
		             RHS.date_arrived AS date_arrived,
		             RHS.date_adopted AS date_adopted,
		             RHS.date_departed AS date_departed
		      FROM owners AS LHS
		      INNER JOIN dogs AS RHS ON (LHS.owner_id = RHS.owner_id)) AS LHS
		   CROSS JOIN treatment_types AS RHS)
		ORDER BY first_name
		
		

	        first_name   last_name  size_code
	0        2xiGayh3T    ugBlqjH3   MEDaQxpg
	1        2xiGayh3T    ugBlqjH3         SM
	2     6V8xCDS8mnz4       Haley         SM
	3     6V8xCDS8mnz4       Haley  ba9MED5pt
	4             Cind       Haley        MED
	5             Cind       Haley  ba9MED5pt
	6             Cind       Haley       oqgh
	7            Cindy        Feil   MEDaQxpg
	8            Cindy      Hamill         ME
	9            Cindy      Hamill  ba9MED5pt
	10   K4BMTRachelle         eil        SML
	11     OLIokAdelle        Feil         SM
	12  QnARachellehlO  f2uLwPrice  ba9MED5pt
	13  QnARachellehlO  f2uLwPrice       oqgh
	14        Rachelle     Nicolas         ME
	15        Rachelle     Nicolas        SML
	16        Rachelle     Nicolas  ba9MED5pt
	17        Rachelle       Price   MEDaQxpg
	18        Rachelle       Price       oqgh
	19        Rachelle        aley   xG2R SML
	20         kZ6Uis1      Hamill         SM
Error while executing solution for instance db2csv/dog_kennels/0058_dev (335)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT age AS count___
FROM
  (SELECT dog_id,
          owner_id,
          abandoned_yn,
          breed_code,
          size_code,
          name,
          age,
          date_of_birth,
          gender,
          weight,
          date_arrived,
          date_adopted,
          date_departed,
          COUNT(DISTINCT age) OVER () AS n_distinct
   FROM dogs)
WHERE (n_distinct < age)
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_5944.sqlite3'
Error while executing solution for instance db2csv/dog_kennels/0049_dev (336)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT dog_id) OVER () AS count_distinct_dog_id_
FROM treatments
ORDER BY count_distinct_dog_id_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/dog_kennels/0014_dev (337)
Wrong output for base solution in instance db2csv/dog_kennels/0048_dev (338)
	EXPECTED OUTPUT ====

	          date_arrived       date_departed
	0  2017-04-15 09:25:31 2018-03-25 13:07:04
	1  2017-04-20 00:58:55 2018-03-24 19:12:22
	2  2017-05-06 08:03:52 2018-03-25 06:29:10
	3  2017-06-18 19:45:38 2018-03-24 23:48:59
	4  2017-06-25 10:14:05 2018-03-25 10:25:46
	5  2017-07-25 15:19:07 2018-03-25 15:05:16
	6  2017-09-08 20:10:13 2018-03-25 06:58:44
	7  2017-10-16 20:06:21 2018-03-25 02:47:40
	8  2017-10-24 04:45:13 2018-03-25 14:15:41
	9  2017-10-25 00:55:34 2018-03-25 04:50:22
	10 2017-12-22 05:02:02 2018-03-25 02:11:32
	11 2017-12-29 06:08:26 2018-03-25 04:42:14
	12 2017-12-29 23:24:13 2018-03-24 19:36:59
	13 2018-01-02 03:15:29 2018-03-25 05:07:47
	14 2018-01-17 11:44:16 2018-03-25 06:46:07
	ACTUAL OUTPUT ====

		SELECT date_arrived,
		       date_departed
		FROM Dogs

	           date_arrived        date_departed
	0   2017-04-15 09:25:31  2018-03-25 13:07:04
	1   2017-04-20 00:58:55  2018-03-24 19:12:22
	2   2017-05-06 08:03:52  2018-03-25 06:29:10
	3   2017-06-18 19:45:38  2018-03-24 23:48:59
	4   2017-06-25 10:14:05  2018-03-25 10:25:46
	5   2017-07-25 15:19:07  2018-03-25 15:05:16
	6   2017-09-08 20:10:13  2018-03-25 06:58:44
	7   2017-10-16 20:06:21  2018-03-25 02:47:40
	8   2017-10-24 04:45:13  2018-03-25 14:15:41
	9   2017-10-25 00:55:34  2018-03-25 04:50:22
	10  2017-12-22 05:02:02  2018-03-25 02:11:32
	11  2017-12-29 06:08:26  2018-03-25 04:42:14
	12  2017-12-29 23:24:13  2018-03-24 19:36:59
	13  2018-01-02 03:15:29  2018-03-25 05:07:47
	14  2018-01-17 11:44:16  2018-03-25 06:46:07
Wrong output for ground truth in instance db2csv/dog_kennels/0048_dev (338)
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0018_dev (340)
	EXPECTED OUTPUT ====

		SELECT T1.breed_name
		FROM Breeds AS T1
		JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code
		GROUP BY T1.breed_name
		ORDER BY count(*) DESC
		LIMIT 1

	  breed_name
	0     Eskimo
	ACTUAL OUTPUT ====

		
		SELECT breed_name
		FROM
		  (SELECT dog_id,
		          owner_id,
		          abandoned_yn,
		          breed_code,
		          size_code,
		          name,
		          age,
		          date_of_birth,
		          gender,
		          weight,
		          date_arrived,
		          date_adopted,
		          date_departed,
		          breed_name,
		          dog_id AS n
		   FROM
		     (SELECT LHS.dog_id AS dog_id,
		             LHS.owner_id AS owner_id,
		             LHS.abandoned_yn AS abandoned_yn,
		             LHS.breed_code AS breed_code,
		             LHS.size_code AS size_code,
		             LHS.name AS name,
		             LHS.age AS age,
		             LHS.date_of_birth AS date_of_birth,
		             LHS.gender AS gender,
		             LHS.weight AS weight,
		             LHS.date_arrived AS date_arrived,
		             LHS.date_adopted AS date_adopted,
		             LHS.date_departed AS date_departed,
		             RHS.breed_name AS breed_name
		      FROM dogs AS LHS
		      INNER JOIN
		        (SELECT breed_code,
		                breed_name,
		                COUNT(*) OVER () AS n
		         FROM breeds) AS RHS ON (LHS.dog_id = RHS.n
		                                    AND LHS.breed_code = RHS.breed_code)))
		ORDER BY breed_name
		
		

	  breed_name
	0     ulldog
No solution for instance db2csv/dog_kennels/0059_dev (341)
Wrong output for base solution in instance db2csv/dog_kennels/0071_dev (343)
	EXPECTED OUTPUT ====

	   max_age_
	0         9
	ACTUAL OUTPUT ====

		SELECT max(age)
		FROM Dogs

	  max(age)
	0        9
Wrong output for ground truth in instance db2csv/dog_kennels/0071_dev (343)
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0046_dev (344)
	EXPECTED OUTPUT ====

		SELECT email_address
		FROM Professionals
		WHERE state = 'Hawaii'
		  OR state = 'Wisconsin'

	                         email_address
	0   BMqxschneider.kathryne@example.org
	1    ddMV)jerrod.bahringer@example.org
	2                jeichmann@example.com
	3         jerrod.bahringer@example.org
	ACTUAL OUTPUT ====

		
		SELECT `email_address`
		FROM
		  (SELECT *
		   FROM `professionals` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT *
		              FROM `professionals`
		              WHERE (`state` != 'Wisconsin'))
		           WHERE (`state` != 'Hawaii')) AS RHS
		        WHERE (LHS.email_address = RHS.email_address
		               AND LHS.home_phone = RHS.home_phone) ))
		ORDER BY email_address
		
		

	                         email_address
	0   BMqxschneider.kathryne@example.org
	1    ddMV)jerrod.bahringer@example.org
	2                jeichmann@example.com
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0021_dev (345)
	EXPECTED OUTPUT ====

		SELECT T1.treatment_type_description
		FROM Treatment_types AS T1
		JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code
		GROUP BY T1.treatment_type_code
		ORDER BY sum(cost_of_treatment) ASC
		LIMIT 1

	  treatment_type_description
	0       Physical examination
	ACTUAL OUTPUT ====

		
		SELECT treatment_type_description
		FROM
		  (SELECT LHS.treatment_type_code AS treatment_type_code,
		          LHS.treatment_type_description AS treatment_type_description,
		          LHS.treatment_id AS treatment_id,
		          LHS.dog_id AS dog_id,
		          LHS.professional_id AS professional_id,
		          LHS.date_of_treatment AS date_of_treatment,
		          LHS.cost_of_treatment AS cost_of_treatment,
		          LHS.sumcost_of_treatment AS sumcost_of_treatment
		   FROM
		     (SELECT LHS.treatment_type_code AS treatment_type_code,
		             LHS.treatment_type_description AS treatment_type_description,
		             RHS.treatment_id AS treatment_id,
		             RHS.dog_id AS dog_id,
		             RHS.professional_id AS professional_id,
		             RHS.date_of_treatment AS date_of_treatment,
		             RHS.cost_of_treatment AS cost_of_treatment,
		             RHS.sumcost_of_treatment AS sumcost_of_treatment
		      FROM treatment_types AS LHS
		      INNER JOIN
		        (SELECT treatment_id,
		                dog_id,
		                professional_id,
		                treatment_type_code,
		                date_of_treatment,
		                cost_of_treatment,
		                SUM(cost_of_treatment) OVER () AS sumcost_of_treatment
		         FROM treatments) AS RHS ON (LHS.treatment_type_code = RHS.treatment_type_code)) AS LHS
		   INNER JOIN
		     (SELECT treatment_id,
		             dog_id,
		             professional_id,
		             treatment_type_code,
		             date_of_treatment,
		             MIN(cost_of_treatment) OVER () AS cost_of_treatment
		      FROM treatments) AS RHS ON (LHS.treatment_type_code = RHS.treatment_type_code
		                                     AND LHS.treatment_id = RHS.treatment_id
		                                     AND LHS.dog_id = RHS.dog_id
		                                     AND LHS.professional_id = RHS.professional_id
		                                     AND LHS.date_of_treatment = RHS.date_of_treatment
		                                     AND LHS.cost_of_treatment = RHS.cost_of_treatment))
		ORDER BY treatment_type_description
		
		

	  treatment_type_description
	0  iXpGYPhysical examination
Wrong output for base solution in instance db2csv/dog_kennels/0024_dev (346)
	EXPECTED OUTPUT ====

	   owner_id  zip_code
	0         3      2647
	ACTUAL OUTPUT ====

		SELECT T1.owner_id,
		       T1.zip_code
		FROM Owners AS T1
		JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
		JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id
		GROUP BY T1.owner_id
		ORDER BY sum(T3.cost_of_treatment) DESC
		LIMIT 1

	   owner_id zip_code
	0         3    02647
Wrong output for ground truth in instance db2csv/dog_kennels/0024_dev (346)
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0062_dev (348)
	EXPECTED OUTPUT ====

		select count(*)
		from dogs
		where dog_id not in
		    (select dog_id
		     from treatments)

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT *
		   FROM dogs AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM treatments AS RHS
		        WHERE (LHS.dog_id = RHS.dog_id) ))
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0025_dev (350)
	EXPECTED OUTPUT ====

		SELECT t2.name
		FROM hiring AS t1
		JOIN shop AS t2 ON t1.shop_id = t2.shop_id
		GROUP BY t1.shop_id
		ORDER BY count(*) DESC
		LIMIT 1

	       name
	0  FC Lahti
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.shop_id AS shop_id,
		          LHS.name AS name,
		          LHS.location AS LOCATION,
		          LHS.district AS district,
		          LHS.number_products AS number_products,
		          LHS.manager_name AS manager_name,
		          RHS.shop_id AS shop_id_other
		   FROM shop AS LHS
		   INNER JOIN
		     (SELECT shop_id,
		             COUNT() AS n
		      FROM shop
		      GROUP BY shop_id) AS RHS ON (LHS.shop_id = RHS.n))
		ORDER BY name
		
		

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0008_dev (351)
	EXPECTED OUTPUT ====

		SELECT city
		FROM employee
		WHERE age < 30
		GROUP BY city
		HAVING count(*) > 1

	     city
	0    Bath
	1   Wasps
	2  ristol
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT city
		FROM
		  (SELECT LHS.employee_id AS employee_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.city AS city,
		          RHS.shop_id AS shop_id,
		          RHS.employee_id AS employee_id_other,
		          RHS.start_from AS start_from,
		          RHS.is_full_time AS is_full_time
		   FROM employee AS LHS
		   INNER JOIN
		     (SELECT shop_id,
		             employee_id,
		             start_from,
		             is_full_time,
		             COUNT(*) OVER () AS n
		      FROM hiring) AS RHS ON (LHS.employee_id = RHS.n))
		ORDER BY city
		
		

	Empty DataFrame
	Columns: [city]
	Index: []
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0011_dev (352)
	EXPECTED OUTPUT ====

		SELECT manager_name,
		       district
		FROM shop
		ORDER BY number_products DESC
		LIMIT 1

	   manager_name       district
	0  Pekka Lyyski  Magnum Areena
	ACTUAL OUTPUT ====

		
		SELECT manager_name,
		       district
		FROM
		  (SELECT LHS.shop_id AS shop_id,
		          LHS.name AS name,
		          LHS.location AS LOCATION,
		          LHS.district AS district,
		          LHS.number_products AS number_products,
		          LHS.manager_name AS manager_name
		   FROM shop AS LHS
		   INNER JOIN
		     (SELECT shop_id,
		             name,
		             LOCATION,
		             district,
		             MAX(number_products) OVER () AS number_products,
		                                       manager_name
		      FROM shop) AS RHS ON (LHS.shop_id = RHS.shop_id
		                               AND LHS.name = RHS.name
		                               AND LHS.location = RHS.location
		                               AND LHS.district = RHS.district
		                               AND LHS.number_products = RHS.number_products
		                               AND LHS.manager_name = RHS.manager_name))
		ORDER BY manager_name
		
		

	   manager_name        district
	0  Pekka Lyyski   Magnum Areena
	1  Ilkka Mäkelä  Veritas Stadio
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0019_dev (354)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM employee AS t1
		JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID
		GROUP BY t2.Employee_ID
		ORDER BY count(*) DESC
		LIMIT 1

	                  name
	0  NzFGeorge ChuterUkJ
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.employee_id AS employee_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.city AS city,
		          RHS.employee_id AS employee_id_other
		   FROM employee AS LHS
		   INNER JOIN
		     (SELECT employee_id,
		             COUNT() AS n
		      FROM hiring
		      GROUP BY employee_id) AS RHS ON (LHS.employee_id = RHS.n))
		ORDER BY name
		
		

	                    name
	0  RDXSteve BorthwickNfP
No solution for instance db2csv/employee_hire_evaluation/0035_dev (356)
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0030_dev (357)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       t2.name
		FROM hiring AS t1
		JOIN shop AS t2 ON t1.shop_id = t2.shop_id
		GROUP BY t2.name

	   count(*)           name
	0         2         FF Jar
	1         2   FF JarokALi9
	2         2  tArF5rk9)XY1)
	3         3   FF Jaro77G2m
	4         3  IFK Mariehamn
	5         3             JK
	6         4    C KooTeePee
	7         4        FF Jaro
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___,
		                name
		FROM
		  (SELECT LHS.shop_id AS shop_id,
		          LHS.name AS name,
		          LHS.location AS LOCATION,
		          LHS.district AS district,
		          LHS.number_products AS number_products,
		          LHS.manager_name AS manager_name,
		          LHS.employee_id AS employee_id,
		          LHS.start_from AS start_from,
		          LHS.is_full_time AS is_full_time,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.shop_id AS shop_id,
		             LHS.name AS name,
		             LHS.location AS LOCATION,
		             LHS.district AS district,
		             LHS.number_products AS number_products,
		             LHS.manager_name AS manager_name,
		             RHS.employee_id AS employee_id,
		             RHS.start_from AS start_from,
		             RHS.is_full_time AS is_full_time
		      FROM shop AS LHS
		      INNER JOIN hiring AS RHS ON (LHS.shop_id = RHS.shop_id)) AS LHS
		   INNER JOIN
		     (SELECT shop_id,
		             COUNT() AS n
		      FROM hiring
		      GROUP BY shop_id) AS RHS ON (LHS.shop_id = RHS.shop_id))
		ORDER BY count___
		
		

	   count___           name
	0         1        FF Jaro
	1         1  IFK Mariehamn
	2         1  tArF5rk9)XY1)
	3         2    C KooTeePee
	4         2         FF Jar
	5         2   FF JarokALi9
	6         2  IFK Mariehamn
	7         3        FF Jaro
	8         3   FF Jaro77G2m
	9         3             JK
Wrong output for base solution in instance db2csv/employee_hire_evaluation/0033_dev (358)
	EXPECTED OUTPUT ====

	   shop_id  employee_id  start_from is_full_time
	0        1            1        2009            T
	1        1            2        2003            T
	2        8            3        2011            F
	3        4            4        2012            T
	4        5            5        2013            T
	5        2            6        2010            F
	6        6            7        2008            T
	ACTUAL OUTPUT ====

		SELECT *
		FROM hiring

	   shop_id  employee_id start_from is_full_time
	0        1            1       2009            T
	1        1            2       2003            T
	2        8            3       2011            F
	3        4            4       2012            T
	4        5            5       2013            T
	5        2            6       2010            F
	6        6            7       2008            T
Wrong output for ground truth in instance db2csv/employee_hire_evaluation/0033_dev (358)
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0022_dev (359)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM employee AS t1
		JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID
		ORDER BY t2.bonus DESC
		LIMIT 1

	        name
	0  Tim Payne
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.employee_id AS employee_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.city AS city,
		          LHS.year_awarded AS year_awarded,
		          LHS.bonus AS bonus
		   FROM
		     (SELECT LHS.employee_id AS employee_id,
		             LHS.name AS name,
		             LHS.age AS age,
		             LHS.city AS city,
		             RHS.year_awarded AS year_awarded,
		             RHS.bonus AS bonus
		      FROM employee AS LHS
		      INNER JOIN evaluation AS RHS ON (LHS.employee_id = RHS.employee_id)) AS LHS
		   INNER JOIN
		     (SELECT MAX(bonus) AS bonus
		      FROM evaluation) AS RHS ON (LHS.bonus = RHS.bonus))
		ORDER BY name
		
		

	                   name
	0             Tim Payne
	1  ZiiO5Andrew Sheridan
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0026_dev (360)
	EXPECTED OUTPUT ====

		SELECT t2.name
		FROM hiring AS t1
		JOIN shop AS t2 ON t1.shop_id = t2.shop_id
		GROUP BY t1.shop_id
		ORDER BY count(*) DESC
		LIMIT 1

	       name
	0  FC Lahti
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.shop_id AS shop_id,
		          LHS.name AS name,
		          LHS.location AS LOCATION,
		          LHS.district AS district,
		          LHS.number_products AS number_products,
		          LHS.manager_name AS manager_name,
		          RHS.shop_id AS shop_id_other
		   FROM shop AS LHS
		   INNER JOIN
		     (SELECT shop_id,
		             COUNT() AS n
		      FROM shop
		      GROUP BY shop_id) AS RHS ON (LHS.shop_id = RHS.n))
		ORDER BY name
		
		

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0029_dev (362)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       t2.name
		FROM hiring AS t1
		JOIN shop AS t2 ON t1.shop_id = t2.shop_id
		GROUP BY t2.name

	   count(*)           name
	0         2         FF Jar
	1         2   FF JarokALi9
	2         2  tArF5rk9)XY1)
	3         3   FF Jaro77G2m
	4         3  IFK Mariehamn
	5         3             JK
	6         4    C KooTeePee
	7         4        FF Jaro
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___,
		                name
		FROM
		  (SELECT LHS.shop_id AS shop_id,
		          LHS.name AS name,
		          LHS.location AS LOCATION,
		          LHS.district AS district,
		          LHS.number_products AS number_products,
		          LHS.manager_name AS manager_name,
		          LHS.employee_id AS employee_id,
		          LHS.start_from AS start_from,
		          LHS.is_full_time AS is_full_time,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.shop_id AS shop_id,
		             LHS.name AS name,
		             LHS.location AS LOCATION,
		             LHS.district AS district,
		             LHS.number_products AS number_products,
		             LHS.manager_name AS manager_name,
		             RHS.employee_id AS employee_id,
		             RHS.start_from AS start_from,
		             RHS.is_full_time AS is_full_time
		      FROM shop AS LHS
		      INNER JOIN hiring AS RHS ON (LHS.shop_id = RHS.shop_id)) AS LHS
		   INNER JOIN
		     (SELECT shop_id,
		             COUNT() AS n
		      FROM hiring
		      GROUP BY shop_id) AS RHS ON (LHS.shop_id = RHS.shop_id))
		ORDER BY count___
		
		

	   count___           name
	0         1        FF Jaro
	1         1  IFK Mariehamn
	2         1  tArF5rk9)XY1)
	3         2    C KooTeePee
	4         2         FF Jar
	5         2   FF JarokALi9
	6         2  IFK Mariehamn
	7         3        FF Jaro
	8         3   FF Jaro77G2m
	9         3             JK
Error while executing solution for instance db2csv/employee_hire_evaluation/0037_dev (367)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT shop_id) OVER () AS count_distinct_location_
FROM shop
ORDER BY count_distinct_location_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0020_dev (369)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM employee AS t1
		JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID
		GROUP BY t2.Employee_ID
		ORDER BY count(*) DESC
		LIMIT 1

	                  name
	0  NzFGeorge ChuterUkJ
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.employee_id AS employee_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.city AS city,
		          RHS.employee_id AS employee_id_other
		   FROM employee AS LHS
		   INNER JOIN
		     (SELECT employee_id,
		             COUNT() AS n
		      FROM employee
		      GROUP BY employee_id) AS RHS ON (LHS.employee_id = RHS.n))
		ORDER BY name
		
		

	                    name
	0  RDXSteve BorthwickNfP
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0007_dev (371)
	EXPECTED OUTPUT ====

		SELECT city
		FROM employee
		WHERE age < 30
		GROUP BY city
		HAVING count(*) > 1

	     city
	0    Bath
	1   Wasps
	2  ristol
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT city
		FROM
		  (SELECT LHS.employee_id AS employee_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.city AS city,
		          RHS.shop_id AS shop_id,
		          RHS.employee_id AS employee_id_other,
		          RHS.start_from AS start_from,
		          RHS.is_full_time AS is_full_time
		   FROM employee AS LHS
		   INNER JOIN
		     (SELECT shop_id,
		             employee_id,
		             start_from,
		             is_full_time,
		             COUNT(*) OVER () AS n
		      FROM hiring) AS RHS ON (LHS.employee_id = RHS.n))
		ORDER BY city
		
		

	Empty DataFrame
	Columns: [city]
	Index: []
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0012_dev (373)
	EXPECTED OUTPUT ====

		SELECT manager_name,
		       district
		FROM shop
		ORDER BY number_products DESC
		LIMIT 1

	   manager_name       district
	0  Pekka Lyyski  Magnum Areena
	ACTUAL OUTPUT ====

		
		SELECT manager_name,
		       district
		FROM
		  (SELECT LHS.shop_id AS shop_id,
		          LHS.name AS name,
		          LHS.location AS LOCATION,
		          LHS.district AS district,
		          LHS.number_products AS number_products,
		          LHS.manager_name AS manager_name
		   FROM shop AS LHS
		   INNER JOIN
		     (SELECT shop_id,
		             name,
		             LOCATION,
		             district,
		             MAX(number_products) OVER () AS number_products,
		                                       manager_name
		      FROM shop) AS RHS ON (LHS.shop_id = RHS.shop_id
		                               AND LHS.name = RHS.name
		                               AND LHS.location = RHS.location
		                               AND LHS.district = RHS.district
		                               AND LHS.number_products = RHS.number_products
		                               AND LHS.manager_name = RHS.manager_name))
		ORDER BY manager_name
		
		

	   manager_name        district
	0  Pekka Lyyski   Magnum Areena
	1  Ilkka Mäkelä  Veritas Stadio
Error while executing solution for instance db2csv/employee_hire_evaluation/0038_dev (374)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT shop_id) OVER () AS count_distinct_location_
FROM shop
ORDER BY count_distinct_location_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/employee_hire_evaluation/0036_dev (375)
No solution for instance db2csv/employee_hire_evaluation/0013_dev (376)
Error while executing solution for instance db2csv/employee_hire_evaluation/0002_dev (377)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT name) OVER () AS count___
FROM employee
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_5944.sqlite3'
Wrong output for base solution in instance db2csv/employee_hire_evaluation/0034_dev (381)
	EXPECTED OUTPUT ====

	   shop_id  employee_id  start_from is_full_time
	0        1            1        2009            T
	1        1            2        2003            T
	2        8            3        2011            F
	3        4            4        2012            T
	4        5            5        2013            T
	5        2            6        2010            F
	6        6            7        2008            T
	ACTUAL OUTPUT ====

		SELECT *
		FROM hiring

	   shop_id  employee_id start_from is_full_time
	0        1            1       2009            T
	1        1            2       2003            T
	2        8            3       2011            F
	3        4            4       2012            T
	4        5            5       2013            T
	5        2            6       2010            F
	6        6            7       2008            T
Wrong output for ground truth in instance db2csv/employee_hire_evaluation/0034_dev (381)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_5944.sqlite3'
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0021_dev (386)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM employee AS t1
		JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID
		ORDER BY t2.bonus DESC
		LIMIT 1

	        name
	0  Tim Payne
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.employee_id AS employee_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.city AS city,
		          LHS.year_awarded AS year_awarded,
		          LHS.bonus AS bonus
		   FROM
		     (SELECT LHS.employee_id AS employee_id,
		             LHS.name AS name,
		             LHS.age AS age,
		             LHS.city AS city,
		             RHS.year_awarded AS year_awarded,
		             RHS.bonus AS bonus
		      FROM employee AS LHS
		      INNER JOIN evaluation AS RHS ON (LHS.employee_id = RHS.employee_id)) AS LHS
		   INNER JOIN
		     (SELECT MAX(bonus) AS bonus
		      FROM evaluation) AS RHS ON (LHS.bonus = RHS.bonus))
		WHERE (bonus != 1.0)
		ORDER BY name
		
		

	                   name
	0             Tim Payne
	1  ZiiO5Andrew Sheridan
Wrong output for fuzzied solution in instance db2csv/flight_2/0063_dev (388)
	EXPECTED OUTPUT ====

		SELECT T1.Airline
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline
		GROUP BY T1.Airline
		HAVING count(*) > 10

	          airline
	0  Delta Airlines
	1  Virgin America
	ACTUAL OUTPUT ====

		
		SELECT airline
		FROM airlines
		ORDER BY airline
		
		

	                   airline
	0           Delta Airlines
	1           Delta Airlines
	2        Frontier Airlines
	3        Frontier Airlines
	4        Frontier Airlines
	5   Frontier Airlinesu4)1C
	6            Virgin Americ
	7           Virgin America
	8           Virgin America
	9           Virgin America
	10          Virgin America
	11    kIUDelta AirlinesLo5
	12        rontier Airlines
No solution for instance db2csv/flight_2/0067_dev (389)
Wrong output for fuzzied solution in instance db2csv/flight_2/0064_dev (390)
	EXPECTED OUTPUT ====

		SELECT T1.Airline
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline
		GROUP BY T1.Airline
		HAVING count(*) > 10

	          airline
	0  Delta Airlines
	1  Virgin America
	ACTUAL OUTPUT ====

		
		SELECT airline
		FROM
		  (SELECT airline,
		          COUNT() AS n
		   FROM airlines
		   GROUP BY airline)
		WHERE (n <= 10.0)
		ORDER BY airline
		
		

	                  airline
	0          Delta Airlines
	1       Frontier Airlines
	2  Frontier Airlinesu4)1C
	3           Virgin Americ
	4          Virgin America
	5    kIUDelta AirlinesLo5
	6        rontier Airlines
Wrong output for fuzzied solution in instance db2csv/flight_2/0025_dev (391)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS
		WHERE SourceAirport = "APG"

	   count(*)
	0         5
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT country
		      FROM airlines INTERSECT SELECT country
		      FROM airports))
		ORDER BY count___
		
		

	   count___
	0         0
No solution for instance db2csv/flight_2/0047_dev (392)
No solution for instance db2csv/flight_2/0008_dev (393)
No solution for instance db2csv/flight_2/0078_dev (394)
Error while executing solution for instance db2csv/flight_2/0011_dev (395)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT destairport) OVER () AS count___
FROM flights
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for fuzzied solution in instance db2csv/flight_2/0031_dev (396)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode
		WHERE T2.City = "Aberdeen"

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT city) AS n_distinct
		   FROM
		     (SELECT LHS.city AS city,
		             LHS.airportcode AS airportcode,
		             LHS.airportname AS airportname,
		             LHS.country AS country,
		             LHS.countryabbrev AS countryabbrev,
		             RHS.uid AS UID,
		             RHS.airline AS airline,
		             RHS.abbreviation AS abbreviation
		      FROM airports AS LHS
		      INNER JOIN airlines AS RHS ON (LHS.country = RHS.country)))
		ORDER BY count___
		
		

	   count___
	0         0
No solution for instance db2csv/flight_2/0019_dev (397)
No solution for instance db2csv/flight_2/0069_dev (398)
No solution for instance db2csv/flight_2/0061_dev (399)
Wrong output for fuzzied solution in instance db2csv/flight_2/0028_dev (400)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS
		WHERE DestAirport = "ATO"

	   count(*)
	0         6
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM airlines AS LHS
		      WHERE EXISTS
		          (SELECT 1
		           FROM airports AS RHS
		           WHERE (LHS.country = RHS.country) )))
		ORDER BY count___
		
		

	   count___
	0         0
Wrong output for fuzzied solution in instance db2csv/flight_2/0066_dev (401)
	EXPECTED OUTPUT ====

		SELECT T1.Airline
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline
		GROUP BY T1.Airline
		HAVING count(*) < 200

	             airline
	0     Delta Airlines
	1  Frontier Airlines
	2     Virgin America
	3   rontier Airlines
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT airline
		FROM
		  (SELECT LHS.uid AS UID,
		          LHS.airline AS airline,
		          LHS.abbreviation AS abbreviation,
		          LHS.country AS country,
		          RHS.flightno AS flightno
		   FROM airlines AS LHS
		   CROSS JOIN
		     (SELECT flightno
		      FROM flights INTERSECT SELECT flightno
		      FROM flights) AS RHS)
		WHERE (flightno > 200.0)
		ORDER BY airline
		
		

	                  airline
	0          Delta Airlines
	1       Frontier Airlines
	2  Frontier Airlinesu4)1C
	3           Virgin Americ
	4          Virgin America
	5    kIUDelta AirlinesLo5
	6        rontier Airlines
No solution for instance db2csv/flight_2/0035_dev (402)
No solution for instance db2csv/flight_2/0043_dev (403)
Wrong output for fuzzied solution in instance db2csv/flight_2/0041_dev (404)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode
		JOIN AIRLINES AS T3 ON T3.uid = T1.Airline
		WHERE T2.City = "Aberdeen"
		  AND T3.Airline = "United Airlines"

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `airline`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM `flights`
		      WHERE (`airline` = 'United Airlines')))
		ORDER BY count___
		
		

	   count___
	0         0
Wrong output for fuzzied solution in instance db2csv/flight_2/0030_dev (405)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode
		WHERE T2.City = "Aberdeen"

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT LHS.city AS city,
		             LHS.airportcode AS airportcode,
		             LHS.airportname AS airportname,
		             LHS.country AS country,
		             LHS.countryabbrev AS countryabbrev,
		             RHS.uid AS UID,
		             RHS.airline AS airline,
		             RHS.abbreviation AS abbreviation
		      FROM airports AS LHS
		      INNER JOIN airlines AS RHS ON (LHS.country = RHS.country)))
		ORDER BY count___
		
		

	   count___
	0         0
Wrong output for fuzzied solution in instance db2csv/flight_2/0033_dev (406)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode
		JOIN AIRPORTS AS T3 ON T1.SourceAirport = T3.AirportCode
		WHERE T2.City = "Ashley"
		  AND T3.City = "Aberdeen"

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT country
		      FROM airports INTERSECT SELECT country
		      FROM airlines))
		ORDER BY count___
		
		

	   count___
	0         0
Wrong output for fuzzied solution in instance db2csv/flight_2/0077_dev (407)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Flights AS T1
		JOIN Airports AS T2 ON T1.DestAirport = T2.AirportCode
		WHERE T2.city = "Aberdeen"
		  OR T2.city = "Abilene"

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT country) AS n_distinct
		   FROM
		     (SELECT country
		      FROM airports INTERSECT SELECT country
		      FROM airlines))
		ORDER BY count___
		
		

	   count___
	0         0
Wrong output for fuzzied solution in instance db2csv/flight_2/0026_dev (409)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS
		WHERE SourceAirport = "APG"

	   count(*)
	0         5
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM airports AS LHS
		      WHERE EXISTS
		          (SELECT 1
		           FROM airlines AS RHS
		           WHERE (LHS.country = RHS.country) )))
		ORDER BY count___
		
		

	   count___
	0         0
No solution for instance db2csv/flight_2/0050_dev (410)
No solution for instance db2csv/flight_2/0023_dev (411)
Wrong output for fuzzied solution in instance db2csv/flight_2/0029_dev (412)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode
		WHERE T2.City = "Aberdeen"

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT city) AS n_distinct
		   FROM
		     (SELECT LHS.city AS city,
		             LHS.airportcode AS airportcode,
		             LHS.airportname AS airportname,
		             LHS.country AS country,
		             LHS.countryabbrev AS countryabbrev,
		             RHS.uid AS UID,
		             RHS.airline AS airline,
		             RHS.abbreviation AS abbreviation
		      FROM airports AS LHS
		      INNER JOIN airlines AS RHS ON (LHS.country = RHS.country)))
		ORDER BY count___
		
		

	   count___
	0         0
Wrong output for fuzzied solution in instance db2csv/flight_2/0032_dev (413)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode
		WHERE T2.City = "Aberdeen"

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT LHS.city AS city,
		             LHS.airportcode AS airportcode,
		             LHS.airportname AS airportname,
		             LHS.country AS country,
		             LHS.countryabbrev AS countryabbrev,
		             RHS.uid AS UID,
		             RHS.airline AS airline,
		             RHS.abbreviation AS abbreviation
		      FROM airports AS LHS
		      INNER JOIN airlines AS RHS ON (LHS.country = RHS.country)))
		ORDER BY count___
		
		

	   count___
	0         0
No solution for instance db2csv/flight_2/0055_dev (414)
No solution for instance db2csv/flight_2/0053_dev (416)
No solution for instance db2csv/flight_2/0074_dev (419)
No solution for instance db2csv/flight_2/0054_dev (420)
Wrong output for fuzzied solution in instance db2csv/flight_2/0037_dev (421)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid
		WHERE T1.Airline = "United Airlines"
		  AND T2.DestAirport = "ASY"

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `sourceairport`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM `flights`
		      WHERE (`airline` = 'United Airlines')))
		ORDER BY count___
		
		

	   count___
	0         0
Wrong output for fuzzied solution in instance db2csv/flight_2/0040_dev (422)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid
		WHERE T1.Airline = "United Airlines"
		  AND T2.SourceAirport = "AHD"

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `airline`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM `flights`
		      WHERE (`airline` = 'United Airlines')))
		ORDER BY count___
		
		

	   count___
	0         0
Wrong output for fuzzied solution in instance db2csv/flight_2/0027_dev (423)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS
		WHERE DestAirport = "ATO"

	   count(*)
	0         6
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT LHS.city AS city,
		             LHS.airportcode AS airportcode,
		             LHS.airportname AS airportname,
		             LHS.country AS country,
		             LHS.countryabbrev AS countryabbrev,
		             RHS.uid AS UID,
		             RHS.airline AS airline,
		             RHS.abbreviation AS abbreviation
		      FROM airports AS LHS
		      INNER JOIN airlines AS RHS ON (LHS.country = RHS.country)))
		ORDER BY count___
		
		

	   count___
	0         0
No solution for instance db2csv/flight_2/0020_dev (424)
No solution for instance db2csv/flight_2/0044_dev (425)
Error while getting results...

while parsing a block collection
  in "tests/db2csv/flight_2/0005_dev.yaml", line 84, column 3
expected <block end>, but found '<scalar>'
  in "tests/db2csv/flight_2/0005_dev.yaml", line 106, column 6
No solution for instance db2csv/flight_2/0007_dev (427)
No solution for instance db2csv/flight_2/0056_dev (428)
No solution for instance db2csv/flight_2/0045_dev (430)
Error while executing solution for instance db2csv/flight_2/0012_dev (431)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT destairport) OVER () AS count___
FROM flights
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/flight_2/0076_dev (432)
No solution for instance db2csv/flight_2/0060_dev (433)
Wrong output for fuzzied solution in instance db2csv/flight_2/0065_dev (434)
	EXPECTED OUTPUT ====

		SELECT T1.Airline
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline
		GROUP BY T1.Airline
		HAVING count(*) < 200

	             airline
	0     Delta Airlines
	1  Frontier Airlines
	2     Virgin America
	3   rontier Airlines
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT airline
		FROM
		  (SELECT LHS.uid AS UID,
		          LHS.airline AS airline,
		          LHS.abbreviation AS abbreviation,
		          LHS.country AS country,
		          RHS.flightno AS flightno
		   FROM airlines AS LHS
		   CROSS JOIN
		     (SELECT flightno
		      FROM flights INTERSECT SELECT flightno
		      FROM flights) AS RHS)
		WHERE (flightno > 200.0)
		ORDER BY airline
		
		

	                  airline
	0          Delta Airlines
	1       Frontier Airlines
	2  Frontier Airlinesu4)1C
	3           Virgin Americ
	4          Virgin America
	5    kIUDelta AirlinesLo5
	6        rontier Airlines
Wrong output for fuzzied solution in instance db2csv/flight_2/0038_dev (435)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid
		WHERE T1.Airline = "United Airlines"
		  AND T2.DestAirport = "ASY"

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `airline`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM `flights`
		      WHERE (`airline` = 'United Airlines')))
		ORDER BY count___
		
		

	   count___
	0         0
No solution for instance db2csv/flight_2/0075_dev (436)
No solution for instance db2csv/flight_2/0068_dev (437)
Wrong output for fuzzied solution in instance db2csv/flight_2/0036_dev (438)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRLINES AS T2 ON T1.Airline = T2.uid
		WHERE T2.Airline = "JetBlue Airways"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`uid` AS `uid`,
		          `LHS`.`airline` AS `airline`,
		          `LHS`.`abbreviation` AS `abbreviation`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`uid` AS `uid`,
		             `LHS`.`airline` AS `airline`,
		             `LHS`.`abbreviation` AS `abbreviation`,
		             `LHS`.`country` AS `country`,
		             `RHS`.`n` AS `n`
		      FROM `airlines` AS `LHS`
		      CROSS JOIN
		        (SELECT COUNT() AS `n`
		         FROM `airports`) AS `RHS`) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `airlines`
		      WHERE (`airline` = 'JetBlue Airways')) AS RHS ON (LHS.uid = RHS.uid
		                                                        AND LHS.airline = RHS.airline
		                                                        AND LHS.abbreviation = RHS.abbreviation
		                                                        AND LHS.country = RHS.country))
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance db2csv/flight_2/0072_dev (439)
Wrong output for fuzzied solution in instance db2csv/flight_2/0039_dev (440)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid
		WHERE T1.Airline = "United Airlines"
		  AND T2.SourceAirport = "AHD"

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `sourceairport`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM `flights`
		      WHERE (`airline` = 'United Airlines')))
		ORDER BY count___
		
		

	   count___
	0         0
Wrong output for base solution in instance db2csv/flight_2/0052_dev (441)
	EXPECTED OUTPUT ====

	           airline
	0  AirTran Airways
	ACTUAL OUTPUT ====

		SELECT T1.Airline
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline
		GROUP BY T1.Airline
		ORDER BY count(*) DESC
		LIMIT 1

	          airline
	0  Virgin America
Wrong output for ground truth in instance db2csv/flight_2/0052_dev (441)
Wrong output for fuzzied solution in instance db2csv/flight_2/0001_dev (445)
	EXPECTED OUTPUT ====

		SELECT Country
		FROM AIRLINES
		WHERE Airline = "JetBlue Airways"

	Empty DataFrame
	Columns: [country]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `country`
		FROM `airlines`
		WHERE (`airline` != 'JetBlue Airways')
		ORDER BY country
		
		

	    country
	0  )YpBXUSA
	1        SA
	2        US
	3       USA
	4  f55TDUSA
	5  fy)jFUSA
Wrong output for fuzzied solution in instance db2csv/flight_2/0017_dev (446)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM AIRLINES
		WHERE Country = "USA"

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `uid`,
		          `airline`,
		          `abbreviation`,
		          `country`,
		          COUNT(*) OVER () AS `n`
		   FROM `airlines`)
		WHERE (`country` = 'USA')
		ORDER BY count___
		
		

	   count___
	0        13
Wrong output for base solution in instance db2csv/flight_2/0051_dev (447)
	EXPECTED OUTPUT ====

	           airline
	0  AirTran Airways
	ACTUAL OUTPUT ====

		SELECT T1.Airline
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline
		GROUP BY T1.Airline
		ORDER BY count(*) DESC
		LIMIT 1

	          airline
	0  Virgin America
Wrong output for ground truth in instance db2csv/flight_2/0051_dev (447)
Wrong output for fuzzied solution in instance db2csv/flight_2/0042_dev (448)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode
		JOIN AIRLINES AS T3 ON T3.uid = T1.Airline
		WHERE T2.City = "Aberdeen"
		  AND T3.Airline = "United Airlines"

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `airline`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM `flights`
		      WHERE (`airline` = 'United Airlines')))
		ORDER BY count___
		
		

	   count___
	0         0
No solution for instance db2csv/flight_2/0057_dev (449)
Wrong output for fuzzied solution in instance db2csv/flight_2/0079_dev (450)
	EXPECTED OUTPUT ====

		SELECT AirportName
		FROM Airports
		WHERE AirportCode NOT IN
		    (SELECT SourceAirport
		     FROM Flights
		     UNION SELECT DestAirport
		     FROM Flights)

	Empty DataFrame
	Columns: [airportname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT airportname
		FROM airports
		ORDER BY airportname
		
		

	                                  airportname
	0                                     Alpine 
	1                                     Alpine 
	2                                Alpine ofpNz
	3   GtWn8Rick Husband Amarillo International 
	4                                LAqWeAlpine 
	5                            Outagamie County
	6                           Outagamie County 
	7        Rick Husband Amarillo International 
	8        Rick Husband Amarillo International 
	9        Rick Husband Amarillo International 
	10                    hc2Outagamie County K71
	11                                     lpine 
	12  ow(T2Rick Husband Amarillo International 
	13  swCDhRick Husband Amarillo International 
Wrong output for fuzzied solution in instance db2csv/flight_2/0034_dev (451)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode
		JOIN AIRPORTS AS T3 ON T1.SourceAirport = T3.AirportCode
		WHERE T2.City = "Ashley"
		  AND T3.City = "Aberdeen"

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM airlines AS LHS
		      WHERE EXISTS
		          (SELECT 1
		           FROM airports AS RHS
		           WHERE (LHS.country = RHS.country) )))
		ORDER BY count___
		
		

	   count___
	0         0
No solution for instance db2csv/flight_2/0070_dev (452)
No solution for instance db2csv/flight_2/0058_dev (453)
No solution for instance db2csv/flight_2/0049_dev (454)
No solution for instance db2csv/flight_2/0048_dev (456)
Wrong output for fuzzied solution in instance db2csv/flight_2/0018_dev (458)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM AIRLINES
		WHERE Country = "USA"

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `uid`,
		          `airline`,
		          `abbreviation`,
		          `country`,
		          COUNT(*) OVER () AS `n`
		   FROM `airlines`)
		WHERE (`country` = 'USA')
		ORDER BY count___
		
		

	   count___
	0        13
No solution for instance db2csv/flight_2/0059_dev (459)
No solution for instance db2csv/flight_2/0071_dev (461)
No solution for instance db2csv/flight_2/0046_dev (462)
No solution for instance db2csv/flight_2/0024_dev (464)
Wrong output for fuzzied solution in instance db2csv/flight_2/0080_dev (465)
	EXPECTED OUTPUT ====

		SELECT AirportName
		FROM Airports
		WHERE AirportCode NOT IN
		    (SELECT SourceAirport
		     FROM Flights
		     UNION SELECT DestAirport
		     FROM Flights)

	Empty DataFrame
	Columns: [airportname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT airportname
		FROM airports
		ORDER BY airportname
		
		

	                                  airportname
	0                                     Alpine 
	1                                     Alpine 
	2                                Alpine ofpNz
	3   GtWn8Rick Husband Amarillo International 
	4                                LAqWeAlpine 
	5                            Outagamie County
	6                           Outagamie County 
	7        Rick Husband Amarillo International 
	8        Rick Husband Amarillo International 
	9        Rick Husband Amarillo International 
	10                    hc2Outagamie County K71
	11                                     lpine 
	12  ow(T2Rick Husband Amarillo International 
	13  swCDhRick Husband Amarillo International 
No solution for instance db2csv/flight_2/0062_dev (466)
No solution for instance db2csv/flight_2/0073_dev (467)
No solution for instance db2csv/museum_visit/0008_dev (468)
Wrong output for fuzzied solution in instance db2csv/museum_visit/0011_dev (469)
	EXPECTED OUTPUT ====

		SELECT t2.Museum_ID,
		       t1.name
		FROM museum AS t1
		JOIN visit AS t2 ON t1.Museum_ID = t2.Museum_ID
		GROUP BY t2.Museum_ID
		ORDER BY count(*) DESC
		LIMIT 1

	   museum_id                                     name
	0          3  entral City District Residential Museum
	ACTUAL OUTPUT ====

		
		SELECT museum_id,
		       name
		FROM
		  (SELECT LHS.museum_id AS museum_id,
		          LHS.visitor_id AS visitor_id,
		          LHS.num_of_ticket AS num_of_ticket,
		          LHS.total_spent AS total_spent,
		          LHS.name AS name,
		          LHS.num_of_staff AS num_of_staff,
		          LHS.open_year AS open_year
		   FROM
		     (SELECT LHS.museum_id AS museum_id,
		             LHS.visitor_id AS visitor_id,
		             LHS.num_of_ticket AS num_of_ticket,
		             LHS.total_spent AS total_spent,
		             RHS.name AS name,
		             RHS.num_of_staff AS num_of_staff,
		             RHS.open_year AS open_year
		      FROM visit AS LHS
		      INNER JOIN museum AS RHS ON (LHS.museum_id = RHS.museum_id)) AS LHS
		   INNER JOIN
		     (SELECT MAX(num_of_ticket) AS num_of_ticket
		      FROM visit) AS RHS ON (LHS.num_of_ticket = RHS.num_of_ticket))
		ORDER BY museum_id
		
		

	   museum_id                   name
	0          4  ZirMed Gateway Museum
Wrong output for base solution in instance db2csv/museum_visit/0016_dev (470)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM visitor AS t1
		JOIN visit AS t2 ON t1.id = t2.visitor_id
		JOIN museum AS t3 ON t3.Museum_ID = t2.Museum_ID
		WHERE t3.open_year < 2009 INTERSECT
		  SELECT t1.name
		  FROM visitor AS t1
		  JOIN visit AS t2 ON t1.id = t2.visitor_id
		  JOIN museum AS t3 ON t3.Museum_ID = t2.Museum_ID WHERE t3.open_year > 2011

	            name
	0  Fernando Gago
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT id,
		          name,
		          level_of_membership,
		          age,
		          museum_id,
		          name_other,
		          num_of_staff,
		          open_year,
		          num_of_ticket,
		          total_spent,
		          id AS visitor_id
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.name AS name,
		             LHS.level_of_membership AS level_of_membership,
		             LHS.age AS age,
		             RHS.museum_id AS museum_id,
		             RHS.name AS name_other,
		             RHS.num_of_staff AS num_of_staff,
		             RHS.open_year AS open_year,
		             RHS.num_of_ticket AS num_of_ticket,
		             RHS.total_spent AS total_spent
		      FROM visitor AS LHS
		      INNER JOIN
		        (SELECT LHS.museum_id AS museum_id,
		                LHS.name AS name,
		                LHS.num_of_staff AS num_of_staff,
		                LHS.open_year AS open_year,
		                LHS.visitor_id AS visitor_id,
		                LHS.num_of_ticket AS num_of_ticket,
		                LHS.total_spent AS total_spent
		         FROM
		           (SELECT LHS.museum_id AS museum_id,
		                   LHS.name AS name,
		                   LHS.num_of_staff AS num_of_staff,
		                   LHS.open_year AS open_year,
		                   RHS.visitor_id AS visitor_id,
		                   RHS.num_of_ticket AS num_of_ticket,
		                   RHS.total_spent AS total_spent
		            FROM museum AS LHS
		            INNER JOIN visit AS RHS ON (LHS.museum_id = RHS.museum_id)) AS LHS
		         INNER JOIN
		           (SELECT *
		            FROM museum
		            WHERE (open_year < 2009.0)) AS RHS ON (LHS.museum_id = RHS.museum_id
		                                                   AND LHS.name = RHS.name
		                                                   AND LHS.num_of_staff = RHS.num_of_staff
		                                                   AND LHS.open_year = RHS.open_year)) AS RHS ON (LHS.id = RHS.visitor_id)))
		WHERE (open_year < 2011.0)
		ORDER BY name
		
		

	                   name
	0         Fernando Gago
	1  Rafael van der Vaart
Wrong output for base solution in instance db2csv/museum_visit/0006_dev (471)
	EXPECTED OUTPUT ====

		SELECT avg(num_of_staff)
		FROM museum
		WHERE open_year < 2009

	   avg(num_of_staff)
	0          31.333333
	ACTUAL OUTPUT ====

		
		SELECT meannum_of_staff AS avg_num_of_staff_
		FROM
		  (SELECT AVG(num_of_staff) AS meannum_of_staff
		   FROM
		     (SELECT *
		      FROM museum
		      WHERE (open_year < 2009.0)))
		ORDER BY avg_num_of_staff_
		
		

	   avg_num_of_staff_
	0               26.5
Wrong output for base solution in instance db2csv/museum_visit/0010_dev (472)
	EXPECTED OUTPUT ====

	   visitor_id          name  level_of_membership
	0           3  Arjen Robben                    1
	ACTUAL OUTPUT ====

		SELECT t2.visitor_id,
		       t1.name,
		       t1.Level_of_membership
		FROM visitor AS t1
		JOIN visit AS t2 ON t1.id = t2.visitor_id
		GROUP BY t2.visitor_id
		ORDER BY sum(t2.Total_spent) DESC
		LIMIT 1

	  visitor_id          name  level_of_membership
	0          3  Arjen Robben                    1
Wrong output for ground truth in instance db2csv/museum_visit/0010_dev (472)
Wrong output for fuzzied solution in instance db2csv/museum_visit/0005_dev (473)
	EXPECTED OUTPUT ====

		SELECT museum_id,
		       name
		FROM museum
		ORDER BY num_of_staff DESC
		LIMIT 1

	   museum_id                  name
	0          5  Capital Plaza Museum
	ACTUAL OUTPUT ====

		
		SELECT museum_id,
		       name
		FROM
		  (SELECT *
		   FROM
		     (SELECT museum_id,
		             name,
		             MAX(num_of_staff) OVER () AS num_of_staff,
		                                    open_year
		      FROM museum) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM museum AS RHS
		        WHERE (LHS.museum_id = RHS.museum_id
		               AND LHS.name = RHS.name
		               AND LHS.num_of_staff = RHS.num_of_staff
		               AND LHS.open_year = RHS.open_year) ))
		ORDER BY museum_id
		
		

	   museum_id                                     name
	0          3  entral City District Residential Museum
	1          5                     Capital Plaza Museum
Wrong output for base solution in instance db2csv/museum_visit/0007_dev (474)
	EXPECTED OUTPUT ====

	   num_of_staff  open_year
	0            62       2000
	ACTUAL OUTPUT ====

		SELECT Num_of_Staff,
		       Open_Year
		FROM museum
		WHERE name = 'Plaza Museum'

	   num_of_staff open_year
	0            62      2000
Wrong output for ground truth in instance db2csv/museum_visit/0007_dev (474)
Wrong output for fuzzied solution in instance db2csv/museum_visit/0015_dev (475)
	EXPECTED OUTPUT ====

		SELECT sum(t2.Total_spent)
		FROM visitor AS t1
		JOIN visit AS t2 ON t1.id = t2.visitor_id
		WHERE t1.Level_of_membership = 1

	  sum(t2.total_spent)
	0                None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT SUM(total_spent) OVER () AS sum_t2_total_spent_
		FROM
		  (SELECT museum_id,
		          visitor_id,
		          num_of_ticket,
		          total_spent,
		          name,
		          level_of_membership,
		          age,
		          visitor_id AS id
		   FROM
		     (SELECT LHS.museum_id AS museum_id,
		             LHS.visitor_id AS visitor_id,
		             LHS.num_of_ticket AS num_of_ticket,
		             LHS.total_spent AS total_spent,
		             RHS.name AS name,
		             RHS.level_of_membership AS level_of_membership,
		             RHS.age AS age
		      FROM visit AS LHS
		      INNER JOIN visitor AS RHS ON (LHS.visitor_id = RHS.id)))
		WHERE (level_of_membership <= 1.0)
		ORDER BY sum_t2_total_spent_
		
		

	Empty DataFrame
	Columns: [sum_t2_total_spent_]
	Index: []
Wrong output for fuzzied solution in instance db2csv/museum_visit/0013_dev (477)
	EXPECTED OUTPUT ====

		SELECT t1.name,
		       t1.age
		FROM visitor AS t1
		JOIN visit AS t2 ON t1.id = t2.visitor_id
		ORDER BY t2.num_of_ticket DESC
		LIMIT 1

	           name  age
	0  Arjen Robben   55
	ACTUAL OUTPUT ====

		
		SELECT name,
		       age
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.level_of_membership AS level_of_membership,
		          LHS.age AS age,
		          RHS.visitor_id AS visitor_id
		   FROM visitor AS LHS
		   INNER JOIN
		     (SELECT visitor_id,
		             MAX(num_of_ticket) AS num_of_ticket
		      FROM visit
		      GROUP BY visitor_id) AS RHS ON (LHS.id = RHS.num_of_ticket))
		ORDER BY name
		
		

	           name  age
	0   Arjen Robbe   27
	1   Arjen Robbe   27
	2  Arjen Robben   55
Wrong output for fuzzied solution in instance db2csv/museum_visit/0002_dev (478)
	EXPECTED OUTPUT ====

		SELECT name
		FROM visitor
		WHERE Level_of_membership > 4
		ORDER BY Level_of_membership DESC

	                   name
	0          Arjen Robben
	1  Rafael van der Vaart
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM visitor
		WHERE (level_of_membership >= 4.0)
		ORDER BY name
		
		

	                   name
	0          Arjen Robben
	1   Rafael van der Vaar
	2  Rafael van der Vaart
Wrong output for base solution in instance db2csv/museum_visit/0009_dev (479)
	EXPECTED OUTPUT ====

		SELECT t1.id,
		       t1.name,
		       t1.age
		FROM visitor AS t1
		JOIN visit AS t2 ON t1.id = t2.visitor_id
		GROUP BY t1.id
		HAVING count(*) > 1

	   id                  name  age
	0   6  Rafael van der Vaart   25
	1   3          Arjen Robben   27
	2   5         Fernando Gago   36
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT visitor_id AS id,
		                name,
		                age
		FROM
		  (SELECT LHS.museum_id AS museum_id,
		          LHS.visitor_id AS visitor_id,
		          LHS.num_of_ticket AS num_of_ticket,
		          LHS.total_spent AS total_spent,
		          RHS.museum_id AS museum_id_other,
		          RHS.visitor_id AS visitor_id_other,
		          RHS.num_of_ticket AS num_of_ticket_other,
		          RHS.total_spent AS total_spent_other,
		          RHS.name AS name,
		          RHS.level_of_membership AS level_of_membership,
		          RHS.age AS age,
		          RHS.n AS n
		   FROM visit AS LHS
		   INNER JOIN
		     (SELECT LHS.museum_id AS museum_id,
		             LHS.visitor_id AS visitor_id,
		             LHS.num_of_ticket AS num_of_ticket,
		             LHS.total_spent AS total_spent,
		             LHS.id AS id,
		             LHS.name AS name,
		             LHS.level_of_membership AS level_of_membership,
		             LHS.age AS age,
		             RHS.n AS n
		      FROM
		        (SELECT LHS.museum_id AS museum_id,
		                LHS.visitor_id AS visitor_id,
		                LHS.num_of_ticket AS num_of_ticket,
		                LHS.total_spent AS total_spent,
		                RHS.id AS id,
		                RHS.name AS name,
		                RHS.level_of_membership AS level_of_membership,
		                RHS.age AS age
		         FROM visit AS LHS
		         CROSS JOIN visitor AS RHS) AS LHS
		      CROSS JOIN
		        (SELECT COUNT() AS n
		         FROM museum) AS RHS) AS RHS ON (LHS.visitor_id = RHS.id))
		ORDER BY id
		
		

	  id                  name  age
	0  6  Rafael van der Vaart   25
	1  3          Arjen Robben   27
	2  5         Fernando Gago   36
Error while executing solution for instance db2csv/museum_visit/0001_dev (480)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT age) OVER () AS count___
FROM visitor
WHERE (age > 30.0)
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Error while executing solution for instance db2csv/museum_visit/0017_dev (481)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT n_distinct AS count___
FROM
  (SELECT LHS.museum_id AS museum_id,
          LHS.visitor_id AS visitor_id,
          LHS.num_of_ticket AS num_of_ticket,
          LHS.total_spent AS total_spent,
          RHS.name AS name,
          RHS.num_of_staff AS num_of_staff,
          RHS.open_year AS open_year,
          RHS.n_distinct AS n_distinct
   FROM visit AS LHS
   INNER JOIN
     (SELECT museum_id,
             name,
             num_of_staff,
             open_year,
             COUNT(DISTINCT open_year) OVER () AS n_distinct
      FROM museum
      WHERE (open_year < 2010.0)) AS RHS ON (LHS.museum_id = RHS.museum_id))
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for base solution in instance db2csv/museum_visit/0003_dev (483)
	EXPECTED OUTPUT ====

		SELECT avg(age)
		FROM visitor
		WHERE Level_of_membership <= 4

	   avg(age)
	0      36.0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT age AS avg_age_
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.level_of_membership AS level_of_membership,
		          LHS.age AS age,
		          RHS.museum_id AS museum_id,
		          RHS.num_of_ticket AS num_of_ticket,
		          RHS.total_spent AS total_spent
		   FROM
		     (SELECT *
		      FROM visitor
		      WHERE (level_of_membership > 4.0)) AS LHS
		   INNER JOIN visit AS RHS ON (LHS.id = RHS.visitor_id))
		ORDER BY avg_age_
		
		

	   avg_age_
	0        36
Error while executing solution for instance db2csv/museum_visit/0018_dev (484)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT museum_id AS count___
FROM
  (SELECT *
   FROM
     (SELECT museum_id,
             name,
             num_of_staff,
             open_year,
             COUNT(DISTINCT num_of_staff) OVER () AS n_distinct
      FROM museum)
   WHERE (num_of_staff < 2013.0))
WHERE (open_year < 2008.0)
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/network_1/0025_dev (486)
No solution for instance db2csv/network_1/0047_dev (487)
Wrong output for fuzzied solution in instance db2csv/network_1/0031_dev (490)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		WHERE T2.name = "Kyle"

	   count(*)
	0        16
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `highschooler`
		      WHERE (`name` = 'Kyle')))
		ORDER BY count___
		
		

	   count___
	0         4
Wrong output for fuzzied solution in instance db2csv/network_1/0019_dev (491)
	EXPECTED OUTPUT ====

		SELECT grade
		FROM Highschooler
		GROUP BY grade
		HAVING count(*) >= 4

	   grade
	0     12
	ACTUAL OUTPUT ====

		
		SELECT grade
		FROM
		  (SELECT grade,
		          COUNT() AS n
		   FROM highschooler
		   GROUP BY grade)
		WHERE (n <= 4.0)
		ORDER BY grade
		
		

	   grade
	0     10
	1     11
Wrong output for fuzzied solution in instance db2csv/network_1/0028_dev (492)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		GROUP BY T1.student_id
		HAVING count(*) >= 3

	             name
	0    7odNXJessica
	1     A2cCcJordan
	2       Cassandra
	3          Jordan
	4     JordanWS9Ei
	5   eB5JessicaveW
	6    gNjjNJessica
	7           ordan
	8  vuGvICassandra
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT student_id,
		          name,
		          COUNT(DISTINCT friend_id) AS n_distinct
		   FROM
		     (SELECT student_id,
		             friend_id,
		             name,
		             grade,
		             student_id AS id
		      FROM
		        (SELECT LHS.student_id AS student_id,
		                LHS.friend_id AS friend_id,
		                RHS.name AS name,
		                RHS.grade AS grade
		         FROM friend AS LHS
		         INNER JOIN highschooler AS RHS ON (LHS.student_id = RHS.id)))
		   GROUP BY student_id,
		            name)
		WHERE (n_distinct = 3.0)
		ORDER BY name
		
		

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance db2csv/network_1/0035_dev (493)
	EXPECTED OUTPUT ====

		SELECT name
		FROM Highschooler
		EXCEPT
		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id

	               name
	0            )7(V2F
	1     2ElN9h1MdJ83C
	2        3S122Haley
	3   4MMn1g5tVPJYXOL
	4            4t5npO
	5               AT3
	6             Austi
	7       AustinPCOHG
	8     BrittanyaRp1W
	9        HaleyuLgo2
	10              Kri
	11       Rc5JeINREC
	12   XuHG9cu8ohwim6
	13    YTyY4Brittany
	14   ey4Brittany9XL
	15      gVTHaley3EM
	16     q2rQOrcE(9el
	17      vZ1Haley8)t
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM highschooler AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT student_id,
		                  friend_id,
		                  name,
		                  grade,
		                  student_id AS id
		           FROM
		             (SELECT LHS.student_id AS student_id,
		                     LHS.friend_id AS friend_id,
		                     RHS.name AS name,
		                     RHS.grade AS grade
		              FROM friend AS LHS
		              INNER JOIN highschooler AS RHS ON (LHS.student_id = RHS.id))) AS RHS
		        WHERE (LHS.name = RHS.name) ))
		ORDER BY name
		
		

	               name
	0            )7(V2F
	1     2ElN9h1MdJ83C
	2        3S122Haley
	3   4MMn1g5tVPJYXOL
	4            4t5npO
	5               AT3
	6             Austi
	7             Austi
	8       AustinPCOHG
	9     BrittanyaRp1W
	10       HaleyuLgo2
	11              Kri
	12       Rc5JeINREC
	13   XuHG9cu8ohwim6
	14    YTyY4Brittany
	15   ey4Brittany9XL
	16      gVTHaley3EM
	17     q2rQOrcE(9el
	18      vZ1Haley8)t
Wrong output for fuzzied solution in instance db2csv/network_1/0043_dev (494)
	EXPECTED OUTPUT ====

		SELECT T2.name,
		       count(*)
		FROM Likes AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		GROUP BY T1.student_id

	               name  count(*)
	0            4t5npO         1
	1            Austin         1
	2       AustinN3F9X         1
	3           Brittan         1
	4          Brittany         1
	5             Haley         1
	6             Haley         1
	7        HaleyuLgo2         1
	8            NOl8R0         1
	9              aley         1
	10   ey4Brittany9XL         1
	11     q2rQOrcE(9el         1
	12          rittany         1
	13          rittany         1
	14           )7(V2F         2
	15  4MMn1g5tVPJYXOL         2
	16              AT3         2
	17            Austi         2
	18            Austi         2
	19           Austin         2
	20           Austin         2
	21           Austin         2
	22      AustinPCOHG         2
	23         Brittany         2
	24    BrittanyaRp1W         2
	25            Haley         2
	26            Haley         2
	27             Kris         2
	28             Kris         2
	29    YTyY4Brittany         2
	30             aley         2
	31       knmXrHaley         2
	32          rittany         2
	33           Austin         3
	34         Brittany         3
	35         Brittany         3
	36            Haley         3
	37            Haley         3
	38         Y Y8CNci         3
	39          Brittan         4
	40            Haley         4
	41              Kri         4
	42       Rc5JeINREC         4
	ACTUAL OUTPUT ====

		
		SELECT name,
		       n AS count___
		FROM
		  (SELECT name,
		          grade,
		          COUNT() AS n
		   FROM
		     (SELECT id,
		             name,
		             grade,
		             liked_id,
		             id AS student_id
		      FROM
		        (SELECT LHS.id AS id,
		                LHS.name AS name,
		                LHS.grade AS grade,
		                RHS.liked_id AS liked_id
		         FROM highschooler AS LHS
		         INNER JOIN likes AS RHS ON (LHS.id = RHS.student_id)))
		   GROUP BY name,
		            grade)
		ORDER BY name
		
		

	               name  count___
	0            4t5npO         1
	1            Austin         1
	2       AustinN3F9X         1
	3           Brittan         1
	4          Brittany         1
	5             Haley         1
	6        HaleyuLgo2         1
	7            NOl8R0         1
	8    ey4Brittany9XL         1
	9      q2rQOrcE(9el         1
	10          rittany         1
	11          rittany         1
	12           )7(V2F         2
	13  4MMn1g5tVPJYXOL         2
	14              AT3         2
	15            Austi         2
	16            Austi         2
	17           Austin         2
	18           Austin         2
	19           Austin         2
	20      AustinPCOHG         2
	21         Brittany         2
	22    BrittanyaRp1W         2
	23            Haley         2
	24             Kris         2
	25             Kris         2
	26    YTyY4Brittany         2
	27       knmXrHaley         2
	28          rittany         2
	29           Austin         3
	30         Brittany         3
	31         Brittany         3
	32            Haley         3
	33         Y Y8CNci         3
	34             aley         3
	35          Brittan         4
	36            Haley         4
	37              Kri         4
	38       Rc5JeINREC         4
	39            Haley         6
No solution for instance db2csv/network_1/0030_dev (496)
Wrong output for fuzzied solution in instance db2csv/network_1/0033_dev (497)
	EXPECTED OUTPUT ====

		SELECT id
		FROM Highschooler
		EXCEPT
		SELECT student_id
		FROM Friend

	            id
	0  -6115187299
	1         1245
	2         1246
	3         1247
	4         1248
	5         1467
	6         1470
	7         1641
	8         1643
	9         1932
	10        1933
	11        1934
	12        1935
	13   475740334
	14   637595015
	15  1058120563
	16  1147278804
	17  1344060759
	18  1414976102
	19  1509726688
	20  2730147058
	21  3385800325
	22  3600098751
	23  3915794227
	24  4824916051
	25  7072521824
	26  8219704865
	27  8490803137
	28  8781681371
	29  8837255771
	30  9504859140
	31  9549819029
	32  9776782479
	ACTUAL OUTPUT ====

		
		SELECT student_id AS id
		FROM
		  (SELECT *
		   FROM likes AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM friend AS RHS
		        WHERE (LHS.student_id = RHS.student_id) ))
		ORDER BY id
		
		

	            id
	0  -6115187299
	1  -6115187299
	2         1246
	3         1246
	4         1246
	5         1247
	6         1247
	7         1248
	8         1248
	9         1467
	10        1641
	11        1641
	12        1641
	13        1641
	14        1643
	15        1643
	16        1932
	17        1932
	18        1933
	19        1933
	20        1934
	21        1935
	22        1935
	23   637595015
	24  1058120563
	25  1058120563
	26  1147278804
	27  1147278804
	28  1344060759
	29  1344060759
	30  1344060759
	31  1344060759
	32  1414976102
	33  1414976102
	34  1414976102
	35  1509726688
	36  1509726688
	37  1509726688
	38  1509726688
	39  3385800325
	40  3385800325
	41  3600098751
	42  3600098751
	43  3915794227
	44  3915794227
	45  4824916051
	46  7072521824
	47  7072521824
	48  7072521824
	49  7072521824
	50  8219704865
	51  8219704865
	52  8837255771
	53  8837255771
	54  9504859140
	55  9549819029
	56  9776782479
No solution for instance db2csv/network_1/0026_dev (499)
Wrong output for fuzzied solution in instance db2csv/network_1/0050_dev (500)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		WHERE T2.grade > 5
		GROUP BY T1.student_id
		HAVING count(*) >= 2

	               name
	0    9rnPfCassandra
	1         Cassandra
	2         Cassandra
	3         Cassandra
	4           Jessica
	5              Loga
	6             Logan
	7        ZKcuzLogan
	8   eB5CassandraveW
	9            essica
	10   gNjjNCassandra
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT name,
		             COUNT() AS n
		      FROM
		        (SELECT student_id,
		                friend_id,
		                name,
		                grade,
		                student_id AS id
		         FROM
		           (SELECT LHS.student_id AS student_id,
		                   LHS.friend_id AS friend_id,
		                   RHS.name AS name,
		                   RHS.grade AS grade
		            FROM friend AS LHS
		            INNER JOIN highschooler AS RHS ON (LHS.student_id = RHS.id)))
		      GROUP BY name)
		   WHERE (n >= 2.0))
		WHERE (n < 5.0)
		ORDER BY name
		
		

	             name
	0           Logan
	1          essica
	2  gNjjNCassandra
No solution for instance db2csv/network_1/0029_dev (502)
Error while executing solution for instance db2csv/network_1/0032_dev (503)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT COUNT(DISTINCT `name`) OVER () AS `count___`
FROM `highschooler`
WHERE (`name` = 'Kyle')
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for fuzzied solution in instance db2csv/network_1/0055_dev (504)
	EXPECTED OUTPUT ====

		SELECT min(grade)
		FROM Highschooler
		WHERE id NOT IN
		    (SELECT T1.student_id
		     FROM Friend AS T1
		     JOIN Highschooler AS T2 ON T1.student_id = T2.id)

	  min(grade)
	0       None
	ACTUAL OUTPUT ====

		
		SELECT grade AS min_grade_
		FROM
		  (SELECT student_id,
		          liked_id,
		          name,
		          grade,
		          student_id AS minid
		   FROM
		     (SELECT LHS.student_id AS student_id,
		             LHS.liked_id AS liked_id,
		             RHS.name AS name,
		             RHS.grade AS grade
		      FROM likes AS LHS
		      INNER JOIN
		        (SELECT id,
		                name,
		                grade,
		                MIN(id) OVER () AS minid
		         FROM highschooler) AS RHS ON (LHS.student_id = RHS.minid
		                                          AND LHS.liked_id = RHS.id)))
		ORDER BY min_grade_
		
		

	   min_grade_
	0          10
	1          10
	2          12
	3          12
	4          12
	5          12
Wrong output for fuzzied solution in instance db2csv/network_1/0053_dev (506)
	EXPECTED OUTPUT ====

		SELECT avg(grade)
		FROM Highschooler
		WHERE id IN
		    (SELECT T1.student_id
		     FROM Friend AS T1
		     JOIN Highschooler AS T2 ON T1.student_id = T2.id)

	   avg(grade)
	0   11.222222
	ACTUAL OUTPUT ====

		
		SELECT meangrade AS avg_grade_
		FROM
		  (SELECT AVG(grade) AS meangrade
		   FROM
		     (SELECT *
		      FROM
		        (SELECT id,
		                name,
		                grade,
		                AVG(id) OVER () AS meanid
		         FROM highschooler)
		      WHERE (meanid <= id)))
		ORDER BY avg_grade_
		
		

	   avg_grade_
	0        11.0
Wrong output for fuzzied solution in instance db2csv/network_1/0037_dev (510)
	EXPECTED OUTPUT ====

		SELECT student_id
		FROM Friend INTERSECT
		SELECT liked_id
		FROM Likes

	    student_id
	0         1249
	1         1468
	2         1469
	3         1639
	4         1640
	5         1936
	6   1313454559
	7   1684712976
	8   2039105923
	9   3255847073
	10  3543219886
	11  3895011354
	12  5731738841
	13  6020305831
	14  7986557522
	15  8611432755
	16  9232778310
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT liked_id AS student_id
		FROM likes
		ORDER BY student_id
		
		

	    student_id
	0  -6115187299
	1         1245
	2         1246
	3         1247
	4         1248
	5         1249
	6         1467
	7         1468
	8         1469
	9         1470
	10        1639
	11        1640
	12        1641
	13        1643
	14        1932
	15        1933
	16        1934
	17        1936
	18   475740334
	19   637595015
	20  1058120563
	21  1147278804
	22  1313454559
	23  1344060759
	24  1414976102
	25  1509726688
	26  1684712976
	27  2039105923
	28  3255847073
	29  3385800325
	30  3543219886
	31  3895011354
	32  3915794227
	33  4824916051
	34  5731738841
	35  6020305831
	36  7072521824
	37  7986557522
	38  8219704865
	39  8490803137
	40  8611432755
	41  8837255771
	42  9232778310
	43  9504859140
	44  9549819029
	45  9776782479
Wrong output for fuzzied solution in instance db2csv/network_1/0040_dev (511)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id INTERSECT
		SELECT T2.name
		FROM Likes AS T1
		JOIN Highschooler AS T2 ON T1.liked_id = T2.id

	           name
	0        Austin
	1   AustinN3F9X
	2       Brittan
	3      Brittany
	4         Haley
	5          Kris
	6        NOl8R0
	7       TPvTFPD
	8           ZQn
	9          aley
	10      rittany
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.grade AS grade,
		          RHS.student_id AS student_id
		   FROM highschooler AS LHS
		   INNER JOIN likes AS RHS ON (LHS.id = RHS.liked_id))
		ORDER BY name
		
		

	               name
	0            )7(V2F
	1     2ElN9h1MdJ83C
	2        3S122Haley
	3   4MMn1g5tVPJYXOL
	4            4t5npO
	5             Austi
	6            Austin
	7       AustinN3F9X
	8       AustinPCOHG
	9           Brittan
	10         Brittany
	11    BrittanyaRp1W
	12            Haley
	13       HaleyuLgo2
	14              Kri
	15             Kris
	16           NOl8R0
	17       Rc5JeINREC
	18          TPvTFPD
	19    YTyY4Brittany
	20              ZQn
	21             aley
	22   ey4Brittany9XL
	23      gVTHaley3EM
	24     q2rQOrcE(9el
	25          rittany
	26      vZ1Haley8)t
No solution for instance db2csv/network_1/0027_dev (512)
Wrong output for fuzzied solution in instance db2csv/network_1/0020_dev (513)
	EXPECTED OUTPUT ====

		SELECT grade
		FROM Highschooler
		GROUP BY grade
		HAVING count(*) >= 4

	   grade
	0     12
	ACTUAL OUTPUT ====

		
		SELECT grade
		FROM
		  (SELECT grade,
		          COUNT(DISTINCT id) AS n_distinct
		   FROM highschooler
		   GROUP BY grade)
		ORDER BY grade
		
		

	   grade
	0     10
	1     11
	2     12
Wrong output for fuzzied solution in instance db2csv/network_1/0056_dev (517)
	EXPECTED OUTPUT ====

		SELECT min(grade)
		FROM Highschooler
		WHERE id NOT IN
		    (SELECT T1.student_id
		     FROM Friend AS T1
		     JOIN Highschooler AS T2 ON T1.student_id = T2.id)

	  min(grade)
	0       None
	ACTUAL OUTPUT ====

		
		SELECT grade AS min_grade_
		FROM
		  (SELECT student_id,
		          liked_id,
		          name,
		          grade,
		          student_id AS minid
		   FROM
		     (SELECT LHS.student_id AS student_id,
		             LHS.liked_id AS liked_id,
		             RHS.name AS name,
		             RHS.grade AS grade
		      FROM likes AS LHS
		      INNER JOIN
		        (SELECT id,
		                name,
		                grade,
		                MIN(id) OVER () AS minid
		         FROM highschooler) AS RHS ON (LHS.student_id = RHS.minid
		                                          AND LHS.liked_id = RHS.id)))
		ORDER BY min_grade_
		
		

	   min_grade_
	0          10
	1          10
	2          12
	3          12
	4          12
	5          12
No solution for instance db2csv/network_1/0045_dev (519)
No solution for instance db2csv/network_1/0012_dev (520)
Wrong output for fuzzied solution in instance db2csv/network_1/0038_dev (521)
	EXPECTED OUTPUT ====

		SELECT student_id
		FROM Friend INTERSECT
		SELECT liked_id
		FROM Likes

	    student_id
	0         1249
	1         1468
	2         1469
	3         1639
	4         1640
	5         1936
	6   1313454559
	7   1684712976
	8   2039105923
	9   3255847073
	10  3543219886
	11  3895011354
	12  5731738841
	13  6020305831
	14  7986557522
	15  8611432755
	16  9232778310
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT liked_id AS student_id
		FROM likes
		ORDER BY student_id
		
		

	    student_id
	0  -6115187299
	1         1245
	2         1246
	3         1247
	4         1248
	5         1249
	6         1467
	7         1468
	8         1469
	9         1470
	10        1639
	11        1640
	12        1641
	13        1643
	14        1932
	15        1933
	16        1934
	17        1936
	18   475740334
	19   637595015
	20  1058120563
	21  1147278804
	22  1313454559
	23  1344060759
	24  1414976102
	25  1509726688
	26  1684712976
	27  2039105923
	28  3255847073
	29  3385800325
	30  3543219886
	31  3895011354
	32  3915794227
	33  4824916051
	34  5731738841
	35  6020305831
	36  7072521824
	37  7986557522
	38  8219704865
	39  8490803137
	40  8611432755
	41  8837255771
	42  9232778310
	43  9504859140
	44  9549819029
	45  9776782479
Wrong output for fuzzied solution in instance db2csv/network_1/0036_dev (522)
	EXPECTED OUTPUT ====

		SELECT name
		FROM Highschooler
		EXCEPT
		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id

	               name
	0            )7(V2F
	1     2ElN9h1MdJ83C
	2        3S122Haley
	3   4MMn1g5tVPJYXOL
	4            4t5npO
	5               AT3
	6             Austi
	7       AustinPCOHG
	8     BrittanyaRp1W
	9        HaleyuLgo2
	10              Kri
	11       Rc5JeINREC
	12   XuHG9cu8ohwim6
	13    YTyY4Brittany
	14   ey4Brittany9XL
	15      gVTHaley3EM
	16     q2rQOrcE(9el
	17      vZ1Haley8)t
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM highschooler AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT student_id,
		                  friend_id,
		                  name,
		                  grade,
		                  student_id AS id
		           FROM
		             (SELECT LHS.student_id AS student_id,
		                     LHS.friend_id AS friend_id,
		                     RHS.name AS name,
		                     RHS.grade AS grade
		              FROM friend AS LHS
		              INNER JOIN highschooler AS RHS ON (LHS.student_id = RHS.id))) AS RHS
		        WHERE (LHS.name = RHS.name) ))
		ORDER BY name
		
		

	               name
	0            )7(V2F
	1     2ElN9h1MdJ83C
	2        3S122Haley
	3   4MMn1g5tVPJYXOL
	4            4t5npO
	5               AT3
	6             Austi
	7             Austi
	8       AustinPCOHG
	9     BrittanyaRp1W
	10       HaleyuLgo2
	11              Kri
	12       Rc5JeINREC
	13   XuHG9cu8ohwim6
	14    YTyY4Brittany
	15   ey4Brittany9XL
	16      gVTHaley3EM
	17     q2rQOrcE(9el
	18      vZ1Haley8)t
Wrong output for fuzzied solution in instance db2csv/network_1/0039_dev (523)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id INTERSECT
		SELECT T2.name
		FROM Likes AS T1
		JOIN Highschooler AS T2 ON T1.liked_id = T2.id

	           name
	0        Austin
	1   AustinN3F9X
	2       Brittan
	3      Brittany
	4         Haley
	5          Kris
	6        NOl8R0
	7       TPvTFPD
	8           ZQn
	9          aley
	10      rittany
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.grade AS grade,
		          RHS.student_id AS student_id
		   FROM highschooler AS LHS
		   INNER JOIN likes AS RHS ON (LHS.id = RHS.liked_id))
		ORDER BY name
		
		

	               name
	0            )7(V2F
	1     2ElN9h1MdJ83C
	2        3S122Haley
	3   4MMn1g5tVPJYXOL
	4            4t5npO
	5             Austi
	6            Austin
	7       AustinN3F9X
	8       AustinPCOHG
	9           Brittan
	10         Brittany
	11    BrittanyaRp1W
	12            Haley
	13       HaleyuLgo2
	14              Kri
	15             Kris
	16           NOl8R0
	17       Rc5JeINREC
	18          TPvTFPD
	19    YTyY4Brittany
	20              ZQn
	21             aley
	22   ey4Brittany9XL
	23      gVTHaley3EM
	24     q2rQOrcE(9el
	25          rittany
	26      vZ1Haley8)t
Wrong output for fuzzied solution in instance db2csv/network_1/0052_dev (524)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Likes AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		WHERE T2.name = "Kyle"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT COUNT(*) OVER () AS `count___`
		FROM `highschooler`
		WHERE (`name` = 'Kyle')
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance db2csv/network_1/0013_dev (525)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Highschooler
		WHERE grade = 9
		  OR grade = 10

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___
		FROM
		  (SELECT id,
		          name,
		          grade,
		          COUNT(*) OVER () AS n
		   FROM
		     (SELECT *
		      FROM highschooler
		      WHERE (grade <= 10.0)))
		WHERE (grade >= 9.0)
		ORDER BY count___
		
		

	   count___
	0         6
Wrong output for base solution in instance db2csv/network_1/0017_dev (529)
	EXPECTED OUTPUT ====

	   grade
	0      9
	ACTUAL OUTPUT ====

		SELECT grade
		FROM Highschooler
		GROUP BY grade
		ORDER BY count(*) DESC
		LIMIT 1

	   grade
	0     12
Wrong output for ground truth in instance db2csv/network_1/0017_dev (529)
Wrong output for fuzzied solution in instance db2csv/network_1/0051_dev (530)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Likes AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		WHERE T2.name = "Kyle"

	   count(*)
	0        16
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `name`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM `highschooler`
		      WHERE (`name` = 'Kyle')))
		ORDER BY count___
		
		

	   count___
	0         1
Wrong output for fuzzied solution in instance db2csv/network_1/0034_dev (532)
	EXPECTED OUTPUT ====

		SELECT id
		FROM Highschooler
		EXCEPT
		SELECT student_id
		FROM Friend

	            id
	0  -6115187299
	1         1245
	2         1246
	3         1247
	4         1248
	5         1467
	6         1470
	7         1641
	8         1643
	9         1932
	10        1933
	11        1934
	12        1935
	13   475740334
	14   637595015
	15  1058120563
	16  1147278804
	17  1344060759
	18  1414976102
	19  1509726688
	20  2730147058
	21  3385800325
	22  3600098751
	23  3915794227
	24  4824916051
	25  7072521824
	26  8219704865
	27  8490803137
	28  8781681371
	29  8837255771
	30  9504859140
	31  9549819029
	32  9776782479
	ACTUAL OUTPUT ====

		
		SELECT student_id AS id
		FROM
		  (SELECT *
		   FROM likes AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM friend AS RHS
		        WHERE (LHS.student_id = RHS.student_id) ))
		ORDER BY id
		
		

	            id
	0  -6115187299
	1  -6115187299
	2         1246
	3         1246
	4         1246
	5         1247
	6         1247
	7         1248
	8         1248
	9         1467
	10        1641
	11        1641
	12        1641
	13        1641
	14        1643
	15        1643
	16        1932
	17        1932
	18        1933
	19        1933
	20        1934
	21        1935
	22        1935
	23   637595015
	24  1058120563
	25  1058120563
	26  1147278804
	27  1147278804
	28  1344060759
	29  1344060759
	30  1344060759
	31  1344060759
	32  1414976102
	33  1414976102
	34  1414976102
	35  1509726688
	36  1509726688
	37  1509726688
	38  1509726688
	39  3385800325
	40  3385800325
	41  3600098751
	42  3600098751
	43  3915794227
	44  3915794227
	45  4824916051
	46  7072521824
	47  7072521824
	48  7072521824
	49  7072521824
	50  8219704865
	51  8219704865
	52  8837255771
	53  8837255771
	54  9504859140
	55  9549819029
	56  9776782479
No solution for instance db2csv/network_1/0049_dev (533)
Wrong output for fuzzied solution in instance db2csv/network_1/0014_dev (534)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Highschooler
		WHERE grade = 9
		  OR grade = 10

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___
		FROM
		  (SELECT id,
		          name,
		          grade,
		          COUNT(*) OVER () AS n
		   FROM
		     (SELECT *
		      FROM highschooler
		      WHERE (grade <= 10.0)))
		WHERE (grade >= 9.0)
		ORDER BY count___
		
		

	   count___
	0         6
No solution for instance db2csv/network_1/0048_dev (535)
Wrong output for base solution in instance db2csv/network_1/0018_dev (537)
	EXPECTED OUTPUT ====

	   grade
	0      9
	ACTUAL OUTPUT ====

		SELECT grade
		FROM Highschooler
		GROUP BY grade
		ORDER BY count(*) DESC
		LIMIT 1

	   grade
	0     12
Wrong output for ground truth in instance db2csv/network_1/0018_dev (537)
No solution for instance db2csv/network_1/0046_dev (539)
Wrong output for fuzzied solution in instance db2csv/orchestra/0025_dev (542)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM conductor AS T1
		JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
		WHERE Year_of_Founded > 2008

	                    name
	0     8C Antal DorátiRJC
	1  Michael Tilson Thomas
	2  Michael Tilson Thomas
	3          Pierre Boulez
	4         Valeri Gergiev
	5         Valeri Gergiev
	6         Valeri Gergiev
	7         Valeri Gergiev
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM conductor AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM orchestra
		           WHERE (year_of_founded <= 2008.0)) AS RHS
		        WHERE (LHS.conductor_id = RHS.conductor_id) ))
		ORDER BY name
		
		

	                    name
	0  Michael Tilson Thomas
	1         Valeri Gergiev
	2           ierre Boulez
No solution for instance db2csv/orchestra/0011_dev (544)
Wrong output for fuzzied solution in instance db2csv/orchestra/0031_dev (545)
	EXPECTED OUTPUT ====

		SELECT Record_Company
		FROM orchestra
		GROUP BY Record_Company
		ORDER BY COUNT(*) DESC
		LIMIT 1

	             record_company
	0  Philips Classics Records
	ACTUAL OUTPUT ====

		
		SELECT record_company
		FROM
		  (SELECT *
		   FROM orchestra AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT record_company,
		                  orchestra_id,
		                  COUNT(*) OVER () AS n
		           FROM
		             (SELECT record_company,
		                     MAX(orchestra_id) AS orchestra_id
		              FROM orchestra
		              GROUP BY record_company)) AS RHS
		        WHERE (LHS.orchestra_id = RHS.orchestra_id
		               AND LHS.record_company = RHS.record_company) ))
		ORDER BY record_company
		
		

	                 record_company
	0                  Decca Record
	1  Koch Records / Naxos Records
	2  Koch Records / Naxos Records
	3      Philips Classics Records
	4      Philips Classics Records
No solution for instance db2csv/orchestra/0035_dev (548)
No solution for instance db2csv/orchestra/0022_dev (551)
Wrong output for base solution in instance db2csv/orchestra/0023_dev (553)
	EXPECTED OUTPUT ====

	           name
	0  Antal Doráti
	ACTUAL OUTPUT ====

		SELECT T1.Name
		FROM conductor AS T1
		JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
		GROUP BY T2.Conductor_ID
		ORDER BY COUNT(*) DESC
		LIMIT 1

	                    name
	0  Michael Tilson Thomas
Wrong output for ground truth in instance db2csv/orchestra/0023_dev (553)
Wrong output for fuzzied solution in instance db2csv/orchestra/0032_dev (555)
	EXPECTED OUTPUT ====

		SELECT Record_Company
		FROM orchestra
		GROUP BY Record_Company
		ORDER BY COUNT(*) DESC
		LIMIT 1

	             record_company
	0  Philips Classics Records
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT record_company
		FROM
		  (SELECT LHS.conductor_id AS conductor_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.nationality AS nationality,
		          LHS.year_of_work AS year_of_work,
		          LHS.record_company AS record_company,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.conductor_id AS conductor_id,
		             LHS.name AS name,
		             LHS.age AS age,
		             LHS.nationality AS nationality,
		             LHS.year_of_work AS year_of_work,
		             RHS.record_company AS record_company,
		             RHS.n AS n
		      FROM conductor AS LHS
		      CROSS JOIN
		        (SELECT record_company,
		                COUNT() AS n
		         FROM orchestra
		         GROUP BY record_company) AS RHS) AS LHS
		   INNER JOIN
		     (SELECT MAX(n) AS n
		      FROM
		        (SELECT record_company,
		                COUNT() AS n
		         FROM orchestra
		         GROUP BY record_company)) AS RHS ON (LHS.n = RHS.n))
		ORDER BY record_company
		
		

	                 record_company
	0  Koch Records / Naxos Records
	1      Philips Classics Records
Wrong output for fuzzied solution in instance db2csv/orchestra/0037_dev (559)
	EXPECTED OUTPUT ====

		SELECT COUNT(*)
		FROM orchestra
		WHERE Major_Record_Format = "CD"
		  OR Major_Record_Format = "DVD"

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `orchestra_id`,
		          `orchestra`,
		          `conductor_id`,
		          `record_company`,
		          `year_of_founded`,
		          `major_record_format`,
		          COUNT(*) OVER () AS `n`
		   FROM
		     (SELECT *
		      FROM `orchestra`
		      WHERE (`major_record_format` != 'DVD')))
		WHERE (`major_record_format` != 'CD')
		ORDER BY count___
		
		

	   count___
	0        13
	1        13
	2        13
	3        13
	4        13
	5        13
	6        13
No solution for instance db2csv/orchestra/0040_dev (560)
Wrong output for fuzzied solution in instance db2csv/orchestra/0020_dev (562)
	EXPECTED OUTPUT ====

		SELECT T1.Name,
		       T2.Orchestra
		FROM conductor AS T1
		JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID

	                     name                              orchestra
	0      8C Antal DorátiRJC              London Symphony Orchestra
	1      8C Antal DorátiRJC                     Orchestre de Paris
	2      8C Antal DorátiRJC                 Royal Danish Orchestra
	3   Michael Tilson Thomas                 Royal Danish Orchestra
	4   Michael Tilson Thomas                 Royal Danish Orchestra
	5   Michael Tilson Thomas  re3UeSan Francisco Symphony Orchestra
	6           Pierre Boulez            DUiRgRoyal Danish Orchestra
	7           Pierre Boulez                     Orchestre de Paris
	8           Pierre Boulez            Royal Danish OrchestraK7f)i
	9          Valeri Gergiev                  Royal Danish Orchestr
	10         Valeri Gergiev                 Royal Danish Orchestra
	11     ugFAntal DorátiGi4           A3KRoyal Danish OrchestraF9)
	12     ugFAntal DorátiGi4                 Royal Danish Orchestra
	ACTUAL OUTPUT ====

		
		SELECT name,
		       orchestra
		FROM
		  (SELECT LHS.orchestra_id AS orchestra_id,
		          LHS.orchestra AS orchestra,
		          LHS.conductor_id AS conductor_id,
		          LHS.record_company AS record_company,
		          LHS.year_of_founded AS year_of_founded,
		          LHS.major_record_format AS major_record_format,
		          RHS.name AS name,
		          RHS.age AS age,
		          RHS.nationality AS nationality,
		          RHS.year_of_work AS year_of_work
		   FROM orchestra AS LHS
		   INNER JOIN conductor AS RHS ON (LHS.orchestra_id = RHS.conductor_id))
		ORDER BY name
		
		

	                    name                     orchestra
	0     8C Antal DorátiRJC  A3KRoyal Danish OrchestraF9)
	1  Michael Tilson Thomas        Royal Danish Orchestra
	2          Pierre Boulez        Royal Danish Orchestra
	3         Valeri Gergiev        Royal Danish Orchestra
	4           ierre Boulez            Orchestre de Paris
	5     ugFAntal DorátiGi4            Orchestre de Paris
No solution for instance db2csv/orchestra/0012_dev (566)
Wrong output for fuzzied solution in instance db2csv/orchestra/0038_dev (567)
	EXPECTED OUTPUT ====

		SELECT COUNT(*)
		FROM orchestra
		WHERE Major_Record_Format = "CD"
		  OR Major_Record_Format = "DVD"

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `orchestra_id`,
		          `orchestra`,
		          `conductor_id`,
		          `record_company`,
		          `year_of_founded`,
		          `major_record_format`,
		          COUNT(*) OVER () AS `n`
		   FROM
		     (SELECT *
		      FROM `orchestra`
		      WHERE (`major_record_format` != 'DVD')))
		WHERE (`major_record_format` != 'CD')
		ORDER BY count___
		
		

	   count___
	0        13
	1        13
	2        13
	3        13
	4        13
	5        13
	6        13
No solution for instance db2csv/orchestra/0036_dev (568)
No solution for instance db2csv/orchestra/0039_dev (569)
Error while executing solution for instance db2csv/orchestra/0013_dev (570)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT nationality) OVER () AS count_distinct_nationality_
FROM conductor
ORDER BY count_distinct_nationality_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for fuzzied solution in instance db2csv/orchestra/0017_dev (574)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM conductor
		ORDER BY Year_of_Work DESC
		LIMIT 1

	          name
	0  ntal Doráti
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.conductor_id AS conductor_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.nationality AS nationality,
		          LHS.year_of_work AS year_of_work,
		          LHS.show_id AS show_id,
		          LHS.performance_id AS performance_id,
		          LHS.if_first_show AS if_first_show,
		          LHS.result AS RESULT,
		          LHS.attendance AS attendance
		   FROM
		     (SELECT LHS.conductor_id AS conductor_id,
		             LHS.name AS name,
		             LHS.age AS age,
		             LHS.nationality AS nationality,
		             LHS.year_of_work AS year_of_work,
		             RHS.show_id AS show_id,
		             RHS.performance_id AS performance_id,
		             RHS.if_first_show AS if_first_show,
		             RHS.result AS RESULT,
		             RHS.attendance AS attendance
		      FROM conductor AS LHS
		      CROSS JOIN show AS RHS) AS LHS
		   INNER JOIN
		     (SELECT MAX(year_of_work) AS year_of_work
		      FROM conductor) AS RHS ON (LHS.year_of_work = RHS.year_of_work))
		ORDER BY name
		
		

	            name
	0  harles Dutoit
	1    ntal Doráti
Wrong output for fuzzied solution in instance db2csv/orchestra/0018_dev (578)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM conductor
		ORDER BY Year_of_Work DESC
		LIMIT 1

	          name
	0  ntal Doráti
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.conductor_id AS conductor_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.nationality AS nationality,
		          LHS.year_of_work AS year_of_work
		   FROM conductor AS LHS
		   INNER JOIN
		     (SELECT MAX(year_of_work) AS year_of_work
		      FROM conductor) AS RHS ON (LHS.year_of_work = RHS.year_of_work))
		ORDER BY name
		
		

	            name
	0  harles Dutoit
	1    ntal Doráti
No solution for instance db2csv/orchestra/0021_dev (580)
Wrong output for base solution in instance db2csv/orchestra/0024_dev (581)
	EXPECTED OUTPUT ====

	           name
	0  Antal Doráti
	ACTUAL OUTPUT ====

		SELECT T1.Name
		FROM conductor AS T1
		JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
		GROUP BY T2.Conductor_ID
		ORDER BY COUNT(*) DESC
		LIMIT 1

	                    name
	0  Michael Tilson Thomas
Wrong output for ground truth in instance db2csv/orchestra/0024_dev (581)
Wrong output for fuzzied solution in instance db2csv/pets_1/0008_dev (583)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		WHERE T1.age > 20

	   count(*)
	0        28
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT age) AS n_distinct
		   FROM
		     (SELECT *
		      FROM
		        (SELECT stuid,
		                lname,
		                fname,
		                age,
		                sex,
		                major,
		                advisor,
		                city_code,
		                COUNT(*) OVER () AS n
		         FROM student)
		      WHERE (n <= 20.0)))
		ORDER BY count___
		
		

	   count___
	0         9
Error while executing solution for instance db2csv/pets_1/0011_dev (584)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT stuid) OVER () AS count_distinct_pettype_
FROM has_pet
ORDER BY count_distinct_pettype_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/pets_1/0019_dev (586)
No solution for instance db2csv/pets_1/0028_dev (587)
No solution for instance db2csv/pets_1/0022_dev (592)
Wrong output for fuzzied solution in instance db2csv/pets_1/0023_dev (594)
	EXPECTED OUTPUT ====

		SELECT pettype,
		       weight
		FROM pets
		ORDER BY pet_age
		LIMIT 1

	  pettype  weight
	0     cat   13.39
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT pettype,
		                weight
		FROM
		  (SELECT LHS.petid AS petid,
		          LHS.pettype AS pettype,
		          LHS.pet_age AS pet_age,
		          LHS.weight AS weight,
		          LHS.stuid AS stuid,
		          LHS.lname AS lname,
		          LHS.fname AS fname,
		          LHS.age AS age,
		          LHS.sex AS sex,
		          LHS.major AS major,
		          LHS.advisor AS advisor,
		          LHS.city_code AS city_code
		   FROM
		     (SELECT LHS.petid AS petid,
		             LHS.pettype AS pettype,
		             LHS.pet_age AS pet_age,
		             LHS.weight AS weight,
		             RHS.stuid AS stuid,
		             RHS.lname AS lname,
		             RHS.fname AS fname,
		             RHS.age AS age,
		             RHS.sex AS sex,
		             RHS.major AS major,
		             RHS.advisor AS advisor,
		             RHS.city_code AS city_code
		      FROM pets AS LHS
		      CROSS JOIN student AS RHS) AS LHS
		   INNER JOIN
		     (SELECT MIN(pet_age) AS pet_age
		      FROM pets) AS RHS ON (LHS.pet_age = RHS.pet_age))
		ORDER BY pettype
		
		

	  pettype  weight
	0     cat   12.00
	1     cat   13.39
No solution for instance db2csv/pets_1/0016_dev (597)
Error while executing solution for instance db2csv/pets_1/0010_dev (599)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT n_distinct AS count___
FROM
  (SELECT LHS.petid AS petid,
          LHS.pettype AS pettype,
          LHS.pet_age AS pet_age,
          LHS.weight AS weight,
          LHS.stuid AS stuid,
          RHS.lname AS lname,
          RHS.fname AS fname,
          RHS.age AS age,
          RHS.sex AS sex,
          RHS.major AS major,
          RHS.advisor AS advisor,
          RHS.city_code AS city_code,
          RHS.n_distinct AS n_distinct
   FROM
     (SELECT LHS.petid AS petid,
             LHS.pettype AS pettype,
             LHS.pet_age AS pet_age,
             LHS.weight AS weight,
             RHS.stuid AS stuid
      FROM pets AS LHS
      INNER JOIN has_pet AS RHS ON (LHS.petid = RHS.petid)) AS LHS
   INNER JOIN
     (SELECT stuid,
             lname,
             fname,
             age,
             sex,
             major,
             advisor,
             city_code,
             COUNT(DISTINCT sex) OVER () AS n_distinct
      FROM student) AS RHS ON (LHS.stuid = RHS.stuid))
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/pets_1/0037_dev (600)
No solution for instance db2csv/pets_1/0040_dev (601)
No solution for instance db2csv/pets_1/0020_dev (603)
Wrong output for fuzzied solution in instance db2csv/pets_1/0007_dev (605)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		WHERE T1.age > 20

	   count(*)
	0        28
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM pets
		      WHERE (pet_age = 20.0)))
		ORDER BY count___
		
		

	   count___
	0         0
No solution for instance db2csv/pets_1/0015_dev (606)
Error while executing solution for instance db2csv/pets_1/0012_dev (607)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT pettype) OVER () AS count_distinct_pettype_
FROM pets
ORDER BY count_distinct_pettype_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/pets_1/0038_dev (608)
No solution for instance db2csv/pets_1/0039_dev (610)
Wrong output for fuzzied solution in instance db2csv/pets_1/0013_dev (611)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.Fname
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		JOIN pets AS T3 ON T3.petid = T2.petid
		WHERE T3.pettype = 'cat'
		  OR T3.pettype = 'dog'

	        fname
	0       Sarah
	1       Stacy
	2  fQNwqSarah
	3  pxGLisaN L
	4         ric
	5        tacy
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT fname
		FROM
		  (SELECT LHS.stuid AS stuid,
		          LHS.lname AS lname,
		          LHS.fname AS fname,
		          LHS.age AS age,
		          LHS.sex AS sex,
		          LHS.major AS major,
		          LHS.advisor AS advisor,
		          LHS.city_code AS city_code,
		          LHS.petid AS petid,
		          LHS.pettype AS pettype,
		          LHS.pet_age AS pet_age,
		          LHS.weight AS weight
		   FROM
		     (SELECT LHS.stuid AS stuid,
		             LHS.lname AS lname,
		             LHS.fname AS fname,
		             LHS.age AS age,
		             LHS.sex AS sex,
		             LHS.major AS major,
		             LHS.advisor AS advisor,
		             LHS.city_code AS city_code,
		             RHS.petid AS petid,
		             RHS.pettype AS pettype,
		             RHS.pet_age AS pet_age,
		             RHS.weight AS weight
		      FROM student AS LHS
		      CROSS JOIN pets AS RHS) AS LHS
		   INNER JOIN has_pet AS RHS ON (LHS.stuid = RHS.stuid
		                                    AND LHS.petid = RHS.petid))
		ORDER BY fname
		
		

	        fname
	0        Eric
	1        Lisa
	2        Sara
	3       Sarah
	4       Stacy
	5  fQNwqSarah
	6  pxGLisaN L
	7         ric
	8        tacy
	9  u2FISSarah
Wrong output for fuzzied solution in instance db2csv/pets_1/0002_dev (612)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM pets
		WHERE weight > 10

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM pets
		WHERE (weight >= 10.0)
		ORDER BY count___
		
		

	   count___
	0         1
Wrong output for fuzzied solution in instance db2csv/pets_1/0009_dev (613)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		JOIN pets AS T3 ON T2.petid = T3.petid
		WHERE T1.sex = 'F'
		  AND T3.pettype = 'dog'

	   count(*)
	0        18
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `stuid`) AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`petid` AS `petid`,
		             `LHS`.`pettype` AS `pettype`,
		             `LHS`.`pet_age` AS `pet_age`,
		             `LHS`.`weight` AS `weight`,
		             `RHS`.`lname` AS `lname`,
		             `RHS`.`fname` AS `fname`,
		             `RHS`.`age` AS `age`,
		             `RHS`.`sex` AS `sex`,
		             `RHS`.`major` AS `major`,
		             `RHS`.`advisor` AS `advisor`,
		             `RHS`.`city_code` AS `city_code`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`petid` AS `petid`,
		                `RHS`.`pettype` AS `pettype`,
		                `RHS`.`pet_age` AS `pet_age`,
		                `RHS`.`weight` AS `weight`
		         FROM `has_pet` AS `LHS`
		         INNER JOIN `pets` AS `RHS` ON (`LHS`.`petid` = `RHS`.`petid`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `student`
		         WHERE (`sex` = 'F')) AS RHS ON (LHS.stuid = RHS.stuid)))
		ORDER BY count___
		
		

	   count___
	0         6
Wrong output for fuzzied solution in instance db2csv/pets_1/0001_dev (614)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM pets
		WHERE weight > 10

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT weight) AS n_distinct
		   FROM
		     (SELECT *
		      FROM pets
		      WHERE (weight > 10.0)))
		ORDER BY count___
		
		

	   count___
	0         5
No solution for instance db2csv/pets_1/0017_dev (615)
Wrong output for fuzzied solution in instance db2csv/pets_1/0014_dev (618)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.Fname
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		JOIN pets AS T3 ON T3.petid = T2.petid
		WHERE T3.pettype = 'cat'
		  OR T3.pettype = 'dog'

	        fname
	0       Sarah
	1       Stacy
	2  fQNwqSarah
	3  pxGLisaN L
	4         ric
	5        tacy
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT fname
		FROM
		  (SELECT LHS.petid AS petid,
		          LHS.pettype AS pettype,
		          LHS.pet_age AS pet_age,
		          LHS.weight AS weight,
		          LHS.stuid AS stuid,
		          LHS.lname AS lname,
		          LHS.fname AS fname,
		          LHS.age AS age,
		          LHS.sex AS sex,
		          LHS.major AS major,
		          LHS.advisor AS advisor,
		          LHS.city_code AS city_code
		   FROM
		     (SELECT LHS.petid AS petid,
		             LHS.pettype AS pettype,
		             LHS.pet_age AS pet_age,
		             LHS.weight AS weight,
		             RHS.stuid AS stuid,
		             RHS.lname AS lname,
		             RHS.fname AS fname,
		             RHS.age AS age,
		             RHS.sex AS sex,
		             RHS.major AS major,
		             RHS.advisor AS advisor,
		             RHS.city_code AS city_code
		      FROM pets AS LHS
		      CROSS JOIN student AS RHS) AS LHS
		   INNER JOIN has_pet AS RHS ON (LHS.petid = RHS.petid
		                                    AND LHS.stuid = RHS.stuid))
		ORDER BY fname
		
		

	        fname
	0        Eric
	1        Lisa
	2        Sara
	3       Sarah
	4       Stacy
	5  fQNwqSarah
	6  pxGLisaN L
	7         ric
	8        tacy
	9  u2FISSarah
Wrong output for fuzzied solution in instance db2csv/pets_1/0003_dev (619)
	EXPECTED OUTPUT ====

		SELECT weight
		FROM pets
		ORDER BY pet_age
		LIMIT 1

	   weight
	0   13.39
	ACTUAL OUTPUT ====

		
		SELECT weight
		FROM
		  (SELECT LHS.petid AS petid,
		          LHS.pettype AS pettype,
		          LHS.pet_age AS pet_age,
		          LHS.weight AS weight,
		          RHS.pettype AS pettype_other,
		          RHS.pet_age AS pet_age_other,
		          RHS.weight AS weight_other
		   FROM pets AS LHS
		   INNER JOIN
		     (SELECT petid,
		             pettype,
		             pet_age,
		             weight,
		             MIN(pet_age) OVER () AS minpet_age
		      FROM pets) AS RHS ON (LHS.petid = RHS.petid
		                               AND LHS.pet_age = RHS.minpet_age))
		ORDER BY weight
		
		

	   weight
	0   12.00
	1   13.39
No solution for instance db2csv/pets_1/0018_dev (620)
Wrong output for fuzzied solution in instance db2csv/pets_1/0004_dev (621)
	EXPECTED OUTPUT ====

		SELECT weight
		FROM pets
		ORDER BY pet_age
		LIMIT 1

	   weight
	0   13.39
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT MIN(weight) OVER () AS weight
		FROM pets
		ORDER BY weight
		
		

	   weight
	0    12.0
No solution for instance db2csv/pets_1/0021_dev (622)
Wrong output for fuzzied solution in instance db2csv/pets_1/0024_dev (623)
	EXPECTED OUTPUT ====

		SELECT pettype,
		       weight
		FROM pets
		ORDER BY pet_age
		LIMIT 1

	  pettype  weight
	0     dog    9.29
	ACTUAL OUTPUT ====

		
		SELECT pettype,
		       weight
		FROM
		  (SELECT LHS.petid AS petid,
		          LHS.pettype AS pettype,
		          LHS.pet_age AS pet_age,
		          LHS.weight AS weight
		   FROM pets AS LHS
		   INNER JOIN
		     (SELECT MIN(weight) AS weight
		      FROM pets) AS RHS ON (LHS.weight = RHS.weight))
		ORDER BY pettype
		
		

	    pettype  weight
	0       dog    9.29
	1  doglaXI6    9.29
Wrong output for fuzzied solution in instance db2csv/poker_player/0025_dev (624)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T2.Earnings DESC

	                      name
	0           Sergey Grankin
	1           Sergey Grankin
	2           Sergey Grankin
	3           Sergey Grankin
	4           Sergey Grankin
	5          Teodor Salparov
	6       Yevgeni Sivozhelez
	7  kJl4lYevgeni Sivozhelez
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM poker_player AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY name
		
		

	                      name
	0           Sergey Grankin
	1           Sergey Grankin
	2           Sergey Grankin
	3          Teodor Salparov
	4       Yevgeni Sivozhelez
	5  kJl4lYevgeni Sivozhelez
Wrong output for fuzzied solution in instance db2csv/poker_player/0011_dev (626)
	EXPECTED OUTPUT ====

		SELECT max(Final_Table_Made)
		FROM poker_player
		WHERE Earnings < 200000

	   max(final_table_made)
	0           3.175671e+08
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT MAX(final_table_made) OVER () AS max_final_table_made_
		FROM poker_player
		WHERE (earnings <= 200000.0)
		ORDER BY max_final_table_made_
		
		

	   max_final_table_made_
	0           7.612801e+09
Wrong output for fuzzied solution in instance db2csv/poker_player/0031_dev (627)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM people
		GROUP BY Nationality
		HAVING COUNT(*) >= 2

	  nationality
	0      Russia
	ACTUAL OUTPUT ====

		
		SELECT nationality
		FROM people
		WHERE (people_id < 2.0)
		ORDER BY nationality
		
		

	  nationality
	0      Russia
	1     ulgaria
Wrong output for base solution in instance db2csv/poker_player/0019_dev (628)
	EXPECTED OUTPUT ====

	  birth_date
	0 1986-08-08
	ACTUAL OUTPUT ====

		SELECT T1.Birth_Date
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T2.Earnings ASC
		LIMIT 1

	       birth_date
	0  August 8, 1986
Wrong output for ground truth in instance db2csv/poker_player/0019_dev (628)
Wrong output for fuzzied solution in instance db2csv/poker_player/0030_dev (631)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM people
		GROUP BY Nationality
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  nationality
	0      Russia
	ACTUAL OUTPUT ====

		
		SELECT nationality
		FROM
		  (SELECT LHS.n AS n,
		          RHS.nationality AS nationality,
		          RHS.name AS name,
		          RHS.birth_date AS birth_date,
		          RHS.height AS height
		   FROM
		     (SELECT COUNT() AS n
		      FROM
		        (SELECT MAX(birth_date) AS maxbirth_date
		         FROM people)) AS LHS
		   INNER JOIN people AS RHS ON (LHS.n = RHS.people_id))
		ORDER BY nationality
		
		

	  nationality
	0     ulgaria
Wrong output for base solution in instance db2csv/poker_player/0033_dev (632)
	EXPECTED OUTPUT ====

	                 name birth_date
	0    Semen Poltavskiy 1981-02-08
	1     Teodor Salparov 1982-08-16
	2        Maksim Botin 1983-07-14
	3   Aleksey Ostapenko 1986-05-26
	4  Yevgeni Sivozhelez 1986-08-08
	5      Sergey Grankin 1987-01-22
	6        Roman Bragin 1987-04-17
	ACTUAL OUTPUT ====

		SELECT Name,
		       Birth_Date
		FROM people
		ORDER BY Name ASC

	                 name        birth_date
	0        Roman Bragin    April 17, 1987
	1     Teodor Salparov   August 16, 1982
	2  Yevgeni Sivozhelez    August 8, 1986
	3    Semen Poltavskiy  February 8, 1981
	4      Sergey Grankin  January 22, 1987
	5        Maksim Botin     July 14, 1983
	6   Aleksey Ostapenko      May 26, 1986
Wrong output for ground truth in instance db2csv/poker_player/0033_dev (632)
Wrong output for fuzzied solution in instance db2csv/poker_player/0022_dev (633)
	EXPECTED OUTPUT ====

		SELECT T2.Money_Rank
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T1.Height DESC
		LIMIT 1

	   money_rank
	0      166.01
	ACTUAL OUTPUT ====

		
		SELECT money_rank
		FROM
		  (SELECT LHS.people_id AS people_id,
		          LHS.nationality AS nationality,
		          LHS.name AS name,
		          LHS.birth_date AS birth_date,
		          LHS.height AS height,
		          LHS.poker_player_id AS poker_player_id,
		          LHS.final_table_made AS final_table_made,
		          LHS.best_finish AS best_finish,
		          LHS.money_rank AS money_rank,
		          LHS.earnings AS earnings
		   FROM
		     (SELECT LHS.people_id AS people_id,
		             LHS.nationality AS nationality,
		             LHS.name AS name,
		             LHS.birth_date AS birth_date,
		             LHS.height AS height,
		             RHS.poker_player_id AS poker_player_id,
		             RHS.final_table_made AS final_table_made,
		             RHS.best_finish AS best_finish,
		             RHS.money_rank AS money_rank,
		             RHS.earnings AS earnings
		      FROM people AS LHS
		      INNER JOIN poker_player AS RHS ON (LHS.people_id = RHS.people_id)) AS LHS
		   INNER JOIN
		     (SELECT MAX(height) AS height
		      FROM people) AS RHS ON (LHS.height = RHS.height))
		ORDER BY money_rank
		
		

	   money_rank
	0       58.00
	1      166.01
Wrong output for fuzzied solution in instance db2csv/poker_player/0023_dev (635)
	EXPECTED OUTPUT ====

		SELECT avg(T2.Earnings)
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		WHERE T1.Height > 200

	   avg(t2.earnings)
	0      1.108260e+09
	ACTUAL OUTPUT ====

		
		SELECT meanearnings AS avg_t2_earnings_
		FROM
		  (SELECT AVG(earnings) AS meanearnings
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.poker_player_id AS poker_player_id,
		                LHS.people_id AS people_id,
		                LHS.final_table_made AS final_table_made,
		                LHS.best_finish AS best_finish,
		                LHS.money_rank AS money_rank,
		                LHS.earnings AS earnings,
		                RHS.nationality AS nationality,
		                RHS.name AS name,
		                RHS.birth_date AS birth_date,
		                RHS.height AS height
		         FROM poker_player AS LHS
		         INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))
		      WHERE (height >= 200.0)))
		ORDER BY avg_t2_earnings_
		
		

	   avg_t2_earnings_
	0      1.306721e+09
Wrong output for base solution in instance db2csv/poker_player/0029_dev (636)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM people
		GROUP BY Nationality
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  nationality
	0      Russia
	ACTUAL OUTPUT ====

		
		SELECT nationality
		FROM
		  (SELECT *
		   FROM
		     (SELECT nationality,
		             birth_date,
		             COUNT() AS n
		      FROM people
		      GROUP BY nationality,
		               birth_date) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT people_id,
		                  height,
		                  COUNT() AS n
		           FROM people
		           GROUP BY people_id,
		                    height) AS RHS
		        WHERE (LHS.n = RHS.n) ))
		ORDER BY nationality
		
		

	Empty DataFrame
	Columns: [nationality]
	Index: []
Wrong output for fuzzied solution in instance db2csv/poker_player/0032_dev (637)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM people
		GROUP BY Nationality
		HAVING COUNT(*) >= 2

	  nationality
	0      Russia
	ACTUAL OUTPUT ====

		
		SELECT nationality
		FROM people
		WHERE (people_id < 2.0)
		ORDER BY nationality
		
		

	  nationality
	0      Russia
	1     ulgaria
Wrong output for fuzzied solution in instance db2csv/poker_player/0016_dev (638)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		WHERE T2.Earnings > 300000

	                    name
	0       Aleksey Ostapenk
	1      Aleksey Ostapenko
	2      Aleksey Ostapenko
	3      Aleksey Ostapenko
	4      Aleksey Ostapenko
	5      Aleksey Ostapenko
	6      Aleksey Ostapenko
	7           Maksim Botin
	8           Maksim Botin
	9           Maksim Botin
	10          Maksim Botin
	11        Sergey Grankin
	12        Sergey Grankin
	13        Sergey Grankin
	14       Teodor Salparov
	15       Teodor Salparov
	16       Teodor Salparov
	17       Teodor Salparov
	18  Teodor SalparovA7Y(m
	19  Teodor SalparovA7Y(m
	20         ergey Grankin
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM poker_player
		           WHERE (earnings >= 300000.0)) AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY name
		
		

	                    name
	0       Aleksey Ostapenk
	1      Aleksey Ostapenko
	2      Aleksey Ostapenko
	3      Aleksey Ostapenko
	4      Aleksey Ostapenko
	5           Maksim Botin
	6           Maksim Botin
	7         Sergey Grankin
	8         Sergey Grankin
	9        Teodor Salparov
	10       Teodor Salparov
	11  Teodor SalparovA7Y(m
	12         ergey Grankin
Wrong output for fuzzied solution in instance db2csv/poker_player/0010_dev (640)
	EXPECTED OUTPUT ====

		SELECT Money_Rank
		FROM poker_player
		ORDER BY Earnings DESC
		LIMIT 1

	   money_rank
	0      166.01
	ACTUAL OUTPUT ====

		
		SELECT money_rank
		FROM
		  (SELECT LHS.poker_player_id AS poker_player_id,
		          LHS.people_id AS people_id,
		          LHS.final_table_made AS final_table_made,
		          LHS.best_finish AS best_finish,
		          LHS.money_rank AS money_rank,
		          LHS.earnings AS earnings,
		          LHS.maxearnings AS maxearnings,
		          RHS.people_id AS people_id_other,
		          RHS.final_table_made AS final_table_made_other,
		          RHS.best_finish AS best_finish_other,
		          RHS.money_rank AS money_rank_other,
		          RHS.maxearnings AS maxearnings_other
		   FROM
		     (SELECT poker_player_id,
		             people_id,
		             final_table_made,
		             best_finish,
		             money_rank,
		             earnings,
		             MAX(earnings) OVER () AS maxearnings
		      FROM poker_player) AS LHS
		   INNER JOIN
		     (SELECT poker_player_id,
		             people_id,
		             final_table_made,
		             best_finish,
		             money_rank,
		             earnings,
		             MAX(earnings) OVER () AS maxearnings
		      FROM poker_player) AS RHS ON (LHS.poker_player_id = RHS.poker_player_id
		                                       AND LHS.maxearnings = RHS.earnings))
		ORDER BY money_rank
		
		

	   money_rank
	0      165.98
	1      166.01
Wrong output for base solution in instance db2csv/poker_player/0020_dev (644)
	EXPECTED OUTPUT ====

	  birth_date
	0 1986-08-08
	ACTUAL OUTPUT ====

		SELECT T1.Birth_Date
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T2.Earnings ASC
		LIMIT 1

	       birth_date
	0  August 8, 1986
Wrong output for ground truth in instance db2csv/poker_player/0020_dev (644)
Wrong output for fuzzied solution in instance db2csv/poker_player/0015_dev (647)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		WHERE T2.Earnings > 300000

	                       name
	0            )oCEiSsCH9KaqR
	1         8LI04Maksim Botin
	2          LED7tvSsI6KtgILL
	3              QDYo2PhGoyte
	4          Semen Poltavskiy
	5      Teodor SalparovUrPDl
	6      Teodor SalparovUrPDl
	7        Yevgeni Sivozhelez
	8        Yevgeni Sivozhelez
	9   Yevgeni Sivozhelez2oCnO
	10    d)KoPSemen Poltavskiy
	11           eodor Salparov
	12          mMqB)W4fZYW)6tB
	13          mMqB)W4fZYW)6tB
	14   oUFSemen Poltavskiyph8
	15   oUFSemen Poltavskiyph8
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.poker_player_id AS poker_player_id,
		          LHS.people_id AS people_id,
		          LHS.final_table_made AS final_table_made,
		          LHS.best_finish AS best_finish,
		          LHS.money_rank AS money_rank,
		          LHS.earnings AS earnings,
		          LHS.nationality AS nationality,
		          LHS.name AS name,
		          LHS.birth_date AS birth_date,
		          LHS.height AS height
		   FROM
		     (SELECT LHS.poker_player_id AS poker_player_id,
		             LHS.people_id AS people_id,
		             LHS.final_table_made AS final_table_made,
		             LHS.best_finish AS best_finish,
		             LHS.money_rank AS money_rank,
		             LHS.earnings AS earnings,
		             RHS.nationality AS nationality,
		             RHS.name AS name,
		             RHS.birth_date AS birth_date,
		             RHS.height AS height
		      FROM poker_player AS LHS
		      INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM poker_player
		      WHERE (earnings >= 300000.0)) AS RHS ON (LHS.poker_player_id = RHS.poker_player_id
		                                               AND LHS.people_id = RHS.people_id
		                                               AND LHS.final_table_made = RHS.final_table_made
		                                               AND LHS.best_finish = RHS.best_finish
		                                               AND LHS.money_rank = RHS.money_rank
		                                               AND LHS.earnings = RHS.earnings))
		ORDER BY name
		
		

	                       name
	0            )oCEiSsCH9KaqR
	1         8LI04Maksim Botin
	2          LED7tvSsI6KtgILL
	3              QDYo2PhGoyte
	4          Semen Poltavskiy
	5      Teodor SalparovU8O41
	6      Teodor SalparovUrPDl
	7      Teodor SalparovUrPDl
	8        Yevgeni Sivozhelez
	9        Yevgeni Sivozhelez
	10  Yevgeni Sivozhelez2oCnO
	11    d)KoPSemen Poltavskiy
	12           eodor Salparov
	13          mMqB)W4fZYW)6tB
	14          mMqB)W4fZYW)6tB
	15   oUFSemen Poltavskiyph8
	16   oUFSemen Poltavskiyph8
Wrong output for fuzzied solution in instance db2csv/poker_player/0012_dev (648)
	EXPECTED OUTPUT ====

		SELECT max(Final_Table_Made)
		FROM poker_player
		WHERE Earnings < 200000

	   max(final_table_made)
	0           3.175671e+08
	ACTUAL OUTPUT ====

		
		SELECT final_table_made AS max_final_table_made_
		FROM
		  (SELECT MAX(final_table_made) AS final_table_made
		   FROM
		     (SELECT *
		      FROM poker_player
		      WHERE (earnings <= 200000.0)))
		ORDER BY max_final_table_made_
		
		

	   max_final_table_made_
	0           7.612801e+09
Wrong output for fuzzied solution in instance db2csv/poker_player/0009_dev (654)
	EXPECTED OUTPUT ====

		SELECT Money_Rank
		FROM poker_player
		ORDER BY Earnings DESC
		LIMIT 1

	   money_rank
	0      166.01
	ACTUAL OUTPUT ====

		
		SELECT money_rank
		FROM
		  (SELECT *
		   FROM poker_player AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT poker_player_id,
		                  people_id,
		                  final_table_made,
		                  best_finish,
		                  money_rank,
		                  MAX(earnings) OVER () AS earnings
		           FROM poker_player) AS RHS
		        WHERE (LHS.poker_player_id = RHS.poker_player_id
		               AND LHS.people_id = RHS.people_id
		               AND LHS.final_table_made = RHS.final_table_made
		               AND LHS.best_finish = RHS.best_finish
		               AND LHS.money_rank = RHS.money_rank
		               AND LHS.earnings = RHS.earnings) ))
		ORDER BY money_rank
		
		

	   money_rank
	0      165.98
	1      166.01
Wrong output for base solution in instance db2csv/poker_player/0034_dev (657)
	EXPECTED OUTPUT ====

	                 name birth_date
	0    Semen Poltavskiy 1981-02-08
	1     Teodor Salparov 1982-08-16
	2        Maksim Botin 1983-07-14
	3   Aleksey Ostapenko 1986-05-26
	4  Yevgeni Sivozhelez 1986-08-08
	5      Sergey Grankin 1987-01-22
	6        Roman Bragin 1987-04-17
	ACTUAL OUTPUT ====

		SELECT Name,
		       Birth_Date
		FROM people
		ORDER BY Name ASC

	                 name        birth_date
	0        Roman Bragin    April 17, 1987
	1     Teodor Salparov   August 16, 1982
	2  Yevgeni Sivozhelez    August 8, 1986
	3    Semen Poltavskiy  February 8, 1981
	4      Sergey Grankin  January 22, 1987
	5        Maksim Botin     July 14, 1983
	6   Aleksey Ostapenko      May 26, 1986
Wrong output for ground truth in instance db2csv/poker_player/0034_dev (657)
Wrong output for fuzzied solution in instance db2csv/poker_player/0021_dev (662)
	EXPECTED OUTPUT ====

		SELECT T2.Money_Rank
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T1.Height DESC
		LIMIT 1

	   money_rank
	0      166.01
	ACTUAL OUTPUT ====

		
		SELECT money_rank
		FROM
		  (SELECT LHS.poker_player_id AS poker_player_id,
		          LHS.people_id AS people_id,
		          LHS.final_table_made AS final_table_made,
		          LHS.best_finish AS best_finish,
		          LHS.money_rank AS money_rank,
		          LHS.earnings AS earnings,
		          LHS.nationality AS nationality,
		          LHS.name AS name,
		          LHS.birth_date AS birth_date,
		          LHS.height AS height
		   FROM
		     (SELECT LHS.poker_player_id AS poker_player_id,
		             LHS.people_id AS people_id,
		             LHS.final_table_made AS final_table_made,
		             LHS.best_finish AS best_finish,
		             LHS.money_rank AS money_rank,
		             LHS.earnings AS earnings,
		             RHS.nationality AS nationality,
		             RHS.name AS name,
		             RHS.birth_date AS birth_date,
		             RHS.height AS height
		      FROM poker_player AS LHS
		      INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id)) AS LHS
		   INNER JOIN
		     (SELECT MAX(height) AS height
		      FROM people) AS RHS ON (LHS.height = RHS.height))
		ORDER BY money_rank
		
		

	   money_rank
	0       58.00
	1      166.01
Wrong output for fuzzied solution in instance db2csv/poker_player/0024_dev (663)
	EXPECTED OUTPUT ====

		SELECT avg(T2.Earnings)
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		WHERE T1.Height > 200

	   avg(t2.earnings)
	0      1.108260e+09
	ACTUAL OUTPUT ====

		
		SELECT meanearnings AS avg_t2_earnings_
		FROM
		  (SELECT AVG(earnings) AS meanearnings
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.poker_player_id AS poker_player_id,
		                LHS.people_id AS people_id,
		                LHS.final_table_made AS final_table_made,
		                LHS.best_finish AS best_finish,
		                LHS.money_rank AS money_rank,
		                LHS.earnings AS earnings,
		                RHS.nationality AS nationality,
		                RHS.name AS name,
		                RHS.birth_date AS birth_date,
		                RHS.height AS height
		         FROM poker_player AS LHS
		         INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))
		      WHERE (height >= 200.0)))
		ORDER BY avg_t2_earnings_
		
		

	   avg_t2_earnings_
	0      1.306721e+09
Wrong output for fuzzied solution in instance db2csv/real_estate_properties/0002_dev (664)
	EXPECTED OUTPUT ====

		SELECT T2.feature_type_name
		FROM Other_Available_Features AS T1
		JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code
		WHERE T1.feature_name = "AirCon"

	             feature_type_name
	0  Securiyt, eg Burglar Alarm.
	1  Securiyt, eg Burglar Alarm.
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `feature_type_name`
		FROM
		  (SELECT `LHS`.`feature_type_code` AS `feature_type_code`,
		          `LHS`.`feature_type_name` AS `feature_type_name`,
		          `LHS`.`feature_id` AS `feature_id`,
		          `LHS`.`feature_name` AS `feature_name`,
		          `LHS`.`feature_description` AS `feature_description`,
		          `RHS`.`property_type_code` AS `property_type_code`,
		          `RHS`.`property_type_description` AS `property_type_description`
		   FROM
		     (SELECT `LHS`.`feature_type_code` AS `feature_type_code`,
		             `LHS`.`feature_type_name` AS `feature_type_name`,
		             `RHS`.`feature_id` AS `feature_id`,
		             `RHS`.`feature_name` AS `feature_name`,
		             `RHS`.`feature_description` AS `feature_description`
		      FROM `ref_feature_types` AS `LHS`
		      INNER JOIN `other_available_features` AS `RHS` ON (`LHS`.`feature_type_code` = `RHS`.`feature_type_code`)) AS `LHS`
		   CROSS JOIN `ref_property_types` AS `RHS`)
		WHERE (`feature_name` = 'AirCon')
		ORDER BY feature_type_name
		
		

	             feature_type_name
	0  Securiyt, eg Burglar Alarm.
Wrong output for fuzzied solution in instance db2csv/real_estate_properties/0003_dev (666)
	EXPECTED OUTPUT ====

		SELECT T2.property_type_description
		FROM Properties AS T1
		JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code
		GROUP BY T1.property_type_code

	     property_type_description
	0         House, Bungalow, etc
	1         House, Bungalow, etc
	2   SXvflHouse, Bungalow, etc.
	3          Shop, Retail Outlet
	4          Shop, Retail Outlet
	5         Shop, Retail Outlet.
	6         Shop, Retail Outlet.
	7         Shop, Retail Outlet.
	8         Shop, Retail Outlet.
	9         Shop, Retail Outlet.
	10  mxfhcHouse, Bungalow, etc.
	ACTUAL OUTPUT ====

		
		SELECT property_type_description
		FROM ref_property_types
		ORDER BY property_type_description
		
		

	      property_type_description
	0    BkfShop, Retail Outlet.ba8
	1          House, Bungalow, etc
	2          House, Bungalow, etc
	3          House, Bungalow, etc
	4          House, Bungalow, etc
	5         House, Bungalow, etc.
	6         House, Bungalow, etc.
	7         House, Bungalow, etc.
	8         House, Bungalow, etc.
	9         House, Bungalow, etc.
	10   SXvflHouse, Bungalow, etc.
	11          Shop, Retail Outlet
	12          Shop, Retail Outlet
	13         Shop, Retail Outlet.
	14         Shop, Retail Outlet.
	15         Shop, Retail Outlet.
	16         Shop, Retail Outlet.
	17         Shop, Retail Outlet.
	18         Shop, Retail Outlet.
	19         Shop, Retail Outlet.
	20         Shop, Retail Outlet.
	21         Shop, Retail Outlet.
	22         Shop, Retail Outlet.
	23         Shop, Retail Outlet.
	24         Shop, Retail Outlet.
	25    Shop, Retail Outlet.3cv)u
	26    Shop, Retail Outlet.Mbehq
	27  X1ZHouse, Bungalow, etc.Ri(
	28   mxfhcHouse, Bungalow, etc.
	29         ouse, Bungalow, etc.
	30   vDEShop, Retail Outlet.K6X
Wrong output for fuzzied solution in instance db2csv/real_estate_properties/0004_dev (667)
	EXPECTED OUTPUT ====

		SELECT property_name
		FROM Properties
		WHERE property_type_code = "House"
		UNION
		SELECT property_name
		FROM Properties
		WHERE property_type_code = "Apartment"
		  AND room_count > 1

	   property_name
	0  parc coliseum
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT property_name_other AS property_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT LHS.property_id AS property_id,
		             LHS.property_type_code AS property_type_code,
		             LHS.date_on_market AS date_on_market,
		             LHS.date_sold AS date_sold,
		             LHS.property_name AS property_name,
		             LHS.property_address AS property_address,
		             LHS.room_count AS room_count,
		             LHS.vendor_requested_price AS vendor_requested_price,
		             LHS.buyer_offered_price AS buyer_offered_price,
		             LHS.agreed_selling_price AS agreed_selling_price,
		             LHS.apt_feature_1 AS apt_feature_1,
		             LHS.apt_feature_2 AS apt_feature_2,
		             LHS.apt_feature_3 AS apt_feature_3,
		             LHS.fld_feature_1 AS fld_feature_1,
		             LHS.fld_feature_2 AS fld_feature_2,
		             LHS.fld_feature_3 AS fld_feature_3,
		             LHS.hse_feature_1 AS hse_feature_1,
		             LHS.hse_feature_2 AS hse_feature_2,
		             LHS.hse_feature_3 AS hse_feature_3,
		             LHS.oth_feature_1 AS oth_feature_1,
		             LHS.oth_feature_2 AS oth_feature_2,
		             LHS.oth_feature_3 AS oth_feature_3,
		             LHS.shp_feature_1 AS shp_feature_1,
		             LHS.shp_feature_2 AS shp_feature_2,
		             LHS.shp_feature_3 AS shp_feature_3,
		             LHS.other_property_details AS other_property_details,
		             RHS.property_id AS property_id_other,
		             RHS.date_on_market AS date_on_market_other,
		             RHS.date_sold AS date_sold_other,
		             RHS.property_name AS property_name_other,
		             RHS.property_address AS property_address_other,
		             RHS.room_count AS room_count_other,
		             RHS.vendor_requested_price AS vendor_requested_price_other,
		             RHS.buyer_offered_price AS buyer_offered_price_other,
		             RHS.agreed_selling_price AS agreed_selling_price_other,
		             RHS.apt_feature_1 AS apt_feature_1_other,
		             RHS.apt_feature_2 AS apt_feature_2_other,
		             RHS.apt_feature_3 AS apt_feature_3_other,
		             RHS.fld_feature_1 AS fld_feature_1_other,
		             RHS.fld_feature_2 AS fld_feature_2_other,
		             RHS.fld_feature_3 AS fld_feature_3_other,
		             RHS.hse_feature_1 AS hse_feature_1_other,
		             RHS.hse_feature_2 AS hse_feature_2_other,
		             RHS.hse_feature_3 AS hse_feature_3_other,
		             RHS.oth_feature_1 AS oth_feature_1_other,
		             RHS.oth_feature_2 AS oth_feature_2_other,
		             RHS.oth_feature_3 AS oth_feature_3_other,
		             RHS.shp_feature_1 AS shp_feature_1_other,
		             RHS.shp_feature_2 AS shp_feature_2_other,
		             RHS.shp_feature_3 AS shp_feature_3_other,
		             RHS.other_property_details AS other_property_details_other
		      FROM properties AS LHS
		      INNER JOIN properties AS RHS ON (LHS.property_type_code = RHS.property_type_code)) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM other_property_features AS RHS
		        WHERE (LHS.property_id = RHS.property_id) ))
		ORDER BY property_name
		
		

	Empty DataFrame
	Columns: [property_name]
	Index: []
Wrong output for fuzzied solution in instance db2csv/singer/0025_dev (668)
	EXPECTED OUTPUT ====

		SELECT T1.Name,
		       sum(T2.Sales)
		FROM singer AS T1
		JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID
		GROUP BY T1.Name

	                       name  sum(t2.sales)
	0  FZjIjLiliane Bettencourt      275000.02
	1           Jacqueline Mars      291999.98
	2       Liliane Bettencourt     1193999.97
	3              ris Fontbona      596000.00
	ACTUAL OUTPUT ====

		
		SELECT name,
		       sumsales AS sum_t2_sales_
		FROM
		  (SELECT name,
		          singer_id,
		          SUM(sales) AS sumsales
		   FROM
		     (SELECT LHS.song_id AS song_id,
		             LHS.title AS title,
		             LHS.singer_id AS singer_id,
		             LHS.sales AS sales,
		             LHS.highest_position AS highest_position,
		             RHS.name AS name,
		             RHS.birth_year AS birth_year,
		             RHS.net_worth_millions AS net_worth_millions,
		             RHS.citizenship AS citizenship
		      FROM song AS LHS
		      INNER JOIN singer AS RHS ON (LHS.singer_id = RHS.singer_id))
		   GROUP BY name,
		            singer_id)
		ORDER BY name
		
		

	                       name  sum_t2_sales_
	0  FZjIjLiliane Bettencourt      275000.02
	1           Jacqueline Mars      291999.98
	2       Liliane Bettencourt      291999.98
	3       Liliane Bettencourt      901999.99
	4              ris Fontbona      596000.00
No solution for instance db2csv/singer/0008_dev (669)
Wrong output for fuzzied solution in instance db2csv/singer/0030_dev (673)
	EXPECTED OUTPUT ====

		SELECT Citizenship
		FROM singer
		WHERE Birth_Year < 1945 INTERSECT
		  SELECT Citizenship
		  FROM singer WHERE Birth_Year > 1955

	Empty DataFrame
	Columns: [citizenship]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT citizenship
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM singer
		      WHERE (birth_year >= 1945.0)) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM song AS RHS
		        WHERE (LHS.singer_id = RHS.singer_id) ))
		WHERE (birth_year > 1955.0)
		ORDER BY citizenship
		
		

	          citizenship
	0  zING4United States
Wrong output for fuzzied solution in instance db2csv/singer/0023_dev (676)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM singer AS T1
		JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID
		GROUP BY T1.Name
		HAVING COUNT(*) > 1

	                  name
	0  Liliane Bettencourt
	1         ris Fontbona
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.singer_id AS singer_id,
		          LHS.name AS name,
		          LHS.birth_year AS birth_year,
		          LHS.net_worth_millions AS net_worth_millions,
		          LHS.citizenship AS citizenship,
		          RHS.singer_id AS singer_id_other
		   FROM singer AS LHS
		   INNER JOIN
		     (SELECT singer_id,
		             COUNT() AS n
		      FROM song
		      GROUP BY singer_id) AS RHS ON (LHS.singer_id = RHS.n))
		ORDER BY name
		
		

	                        name
	0  5bYLiliane BettencourtRvH
	1               ris Fontbona
Wrong output for fuzzied solution in instance db2csv/singer/0029_dev (677)
	EXPECTED OUTPUT ====

		SELECT Citizenship
		FROM singer
		WHERE Birth_Year < 1945 INTERSECT
		  SELECT Citizenship
		  FROM singer WHERE Birth_Year > 1955

	Empty DataFrame
	Columns: [citizenship]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT citizenship
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM singer
		      WHERE (birth_year >= 1945.0)) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM song AS RHS
		        WHERE (LHS.singer_id = RHS.singer_id) ))
		WHERE (birth_year > 1955.0)
		ORDER BY citizenship
		
		

	          citizenship
	0  zING4United States
Error while executing solution for instance db2csv/singer/0016_dev (678)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT citizenship
FROM
  (SELECT LHS.singer_id AS singer_id,
          LHS.name AS name,
          LHS.birth_year AS birth_year,
          LHS.net_worth_millions AS net_worth_millions,
          LHS.citizenship AS citizenship,
          LHS.n_distinct AS n_distinct
   FROM
     (SELECT singer_id,
             name,
             birth_year,
             net_worth_millions,
             citizenship,
             COUNT(DISTINCT singer_id) OVER () AS n_distinct
      FROM singer) AS LHS
   INNER JOIN
     (SELECT MAX(singer_id) OVER () AS singer_id,
                                 name,
                                 birth_year,
                                 net_worth_millions,
                                 citizenship,
                                 n_distinct
      FROM
        (SELECT singer_id,
                name,
                birth_year,
                net_worth_millions,
                citizenship,
                COUNT(DISTINCT singer_id) OVER () AS n_distinct
         FROM singer)) AS RHS ON (LHS.singer_id = RHS.singer_id
                                     AND LHS.name = RHS.name
                                     AND LHS.birth_year = RHS.birth_year
                                     AND LHS.net_worth_millions = RHS.net_worth_millions
                                     AND LHS.citizenship = RHS.citizenship
                                     AND LHS.n_distinct = RHS.n_distinct))
ORDER BY citizenship

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for fuzzied solution in instance db2csv/singer/0010_dev (680)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM singer
		WHERE Birth_Year = 1948
		  OR Birth_Year = 1949

	                       name
	0  3qN5guK6xYyLOopp8gXThn6I
	1      Jacqueline Marsm3p7S
	2          RxFrlfmtNO(7cXWE
	3  Uex1CLiliane Bettencourt
	4             XpIWelSjY78uZ
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM singer
		   WHERE (birth_year >= 1948.0))
		WHERE (birth_year <= 1949.0)
		ORDER BY name
		
		

	                       name
	0  3qN5guK6xYyLOopp8gXThn6I
	1           Jacqueline Mars
	2      Jacqueline Marsm3p7S
	3          RxFrlfmtNO(7cXWE
	4  Uex1CLiliane Bettencourt
	5             XpIWelSjY78uZ
	6            YyCt9pS9nw)NmM
Wrong output for fuzzied solution in instance db2csv/singer/0015_dev (685)
	EXPECTED OUTPUT ====

		SELECT Citizenship
		FROM singer
		GROUP BY Citizenship
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  citizenship
	0      France
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT citizenship
		FROM
		  (SELECT LHS.citizenship AS citizenship,
		          LHS.singer_id AS singer_id,
		          LHS.n AS n,
		          RHS.citizenship AS citizenship_other,
		          RHS.singer_id AS singer_id_other
		   FROM
		     (SELECT citizenship,
		             singer_id,
		             MAX(n) AS n
		      FROM
		        (SELECT singer_id,
		                name,
		                birth_year,
		                net_worth_millions,
		                citizenship,
		                COUNT(*) OVER () AS n
		         FROM singer)
		      GROUP BY citizenship,
		               singer_id) AS LHS
		   INNER JOIN
		     (SELECT citizenship,
		             singer_id,
		             MAX(n) AS n
		      FROM
		        (SELECT singer_id,
		                name,
		                birth_year,
		                net_worth_millions,
		                citizenship,
		                COUNT(*) OVER () AS n
		         FROM singer)
		      GROUP BY citizenship,
		               singer_id) AS RHS ON (LHS.singer_id = RHS.n))
		ORDER BY citizenship
		
		

	Empty DataFrame
	Columns: [citizenship]
	Index: []
Wrong output for fuzzied solution in instance db2csv/singer/0009_dev (689)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM singer
		WHERE Birth_Year = 1948
		  OR Birth_Year = 1949

	                       name
	0  3qN5guK6xYyLOopp8gXThn6I
	1      Jacqueline Marsm3p7S
	2          RxFrlfmtNO(7cXWE
	3  Uex1CLiliane Bettencourt
	4             XpIWelSjY78uZ
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM singer
		   WHERE (birth_year <= 1949.0))
		WHERE (birth_year >= 1948.0)
		ORDER BY name
		
		

	                       name
	0  3qN5guK6xYyLOopp8gXThn6I
	1           Jacqueline Mars
	2      Jacqueline Marsm3p7S
	3          RxFrlfmtNO(7cXWE
	4  Uex1CLiliane Bettencourt
	5             XpIWelSjY78uZ
	6            YyCt9pS9nw)NmM
Wrong output for fuzzied solution in instance db2csv/singer/0024_dev (697)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM singer AS T1
		JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID
		GROUP BY T1.Name
		HAVING COUNT(*) > 1

	                  name
	0  Liliane Bettencourt
	1         ris Fontbona
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.singer_id AS singer_id,
		          LHS.name AS name,
		          LHS.birth_year AS birth_year,
		          LHS.net_worth_millions AS net_worth_millions,
		          LHS.citizenship AS citizenship,
		          RHS.singer_id AS singer_id_other
		   FROM singer AS LHS
		   INNER JOIN
		     (SELECT singer_id,
		             COUNT() AS n
		      FROM song
		      GROUP BY singer_id) AS RHS ON (LHS.singer_id = RHS.n))
		ORDER BY name
		
		

	                        name
	0  5bYLiliane BettencourtRvH
	1               ris Fontbona
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0063_dev (698)
	EXPECTED OUTPUT ====

	      transcript_date
	0 2013-06-30 13:01:40
	ACTUAL OUTPUT ====

		SELECT transcript_date
		FROM Transcripts
		ORDER BY transcript_date DESC
		LIMIT 1

	       transcript_date
	0  2013-06-30 13:01:40
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0063_dev (698)
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0067_dev (699)
	EXPECTED OUTPUT ====

	      transcript_date  transcript_id
	0 1975-10-28 15:16:51              2
	ACTUAL OUTPUT ====

		SELECT T2.transcript_date,
		       T1.transcript_id
		FROM Transcript_Contents AS T1
		JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id
		GROUP BY T1.transcript_id
		ORDER BY count(*) ASC
		LIMIT 1

	       transcript_date  transcript_id
	0  1975-10-28 15:16:51              2
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0067_dev (699)
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0064_dev (700)
	EXPECTED OUTPUT ====

	      transcript_date
	0 2013-06-30 13:01:40
	ACTUAL OUTPUT ====

		SELECT transcript_date
		FROM Transcripts
		ORDER BY transcript_date DESC
		LIMIT 1

	       transcript_date
	0  2013-06-30 13:01:40
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0064_dev (700)
No solution for instance db2csv/student_transcripts_tracking/0025_dev (701)
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0008_dev (703)
	EXPECTED OUTPUT ====

	   zip_postcode
	0           148
	ACTUAL OUTPUT ====

		SELECT zip_postcode
		FROM Addresses
		WHERE city = 'Port Chelsea'

	  zip_postcode
	0          148
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0008_dev (703)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0078_dev (704)
	EXPECTED OUTPUT ====

		select t1.first_name
		from students as t1
		join addresses as t2 on t1.permanent_address_id = t2.address_id
		where t2.country = 'haiti'
		  or t1.cell_mobile_number = '09700166582'

	       first_name
	0         Timmoth
	1        Timmothy
	2  Z 5Timmothyugq
	3    aaykxNV1gZBu
	ACTUAL OUTPUT ====

		
		SELECT `first_name`
		FROM
		  (SELECT `LHS`.`student_id` AS `student_id`,
		          `LHS`.`current_address_id` AS `current_address_id`,
		          `LHS`.`permanent_address_id` AS `permanent_address_id`,
		          `LHS`.`first_name` AS `first_name`,
		          `LHS`.`middle_name` AS `middle_name`,
		          `LHS`.`last_name` AS `last_name`,
		          `LHS`.`cell_mobile_number` AS `cell_mobile_number`,
		          `LHS`.`email_address` AS `email_address`,
		          `LHS`.`ssn` AS `ssn`,
		          `LHS`.`date_first_registered` AS `date_first_registered`,
		          `LHS`.`date_left` AS `date_left`,
		          `LHS`.`other_student_details` AS `other_student_details`,
		          `RHS`.`address_id` AS `address_id`,
		          `RHS`.`line_1` AS `line_1`,
		          `RHS`.`line_2` AS `line_2`,
		          `RHS`.`line_3` AS `line_3`,
		          `RHS`.`city` AS `city`,
		          `RHS`.`zip_postcode` AS `zip_postcode`,
		          `RHS`.`state_province_county` AS `state_province_county`,
		          `RHS`.`country` AS `country`,
		          `RHS`.`other_address_details` AS `other_address_details`
		   FROM
		     (SELECT `LHS`.`student_id` AS `student_id`,
		             `LHS`.`current_address_id` AS `current_address_id`,
		             `LHS`.`permanent_address_id` AS `permanent_address_id`,
		             `LHS`.`first_name` AS `first_name`,
		             `LHS`.`middle_name` AS `middle_name`,
		             `LHS`.`last_name` AS `last_name`,
		             `LHS`.`cell_mobile_number` AS `cell_mobile_number`,
		             `LHS`.`email_address` AS `email_address`,
		             `LHS`.`ssn` AS `ssn`,
		             `LHS`.`date_first_registered` AS `date_first_registered`,
		             `LHS`.`date_left` AS `date_left`,
		             `LHS`.`other_student_details` AS `other_student_details`
		      FROM `students` AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `students`
		         WHERE (`cell_mobile_number` = '09700166582')) AS `RHS` ON (`LHS`.`student_id` = `RHS`.`student_id`
		                                                                    AND `LHS`.`current_address_id` = `RHS`.`current_address_id`
		                                                                    AND `LHS`.`permanent_address_id` = `RHS`.`permanent_address_id`
		                                                                    AND `LHS`.`first_name` = `RHS`.`first_name`
		                                                                    AND `LHS`.`middle_name` = `RHS`.`middle_name`
		                                                                    AND `LHS`.`last_name` = `RHS`.`last_name`
		                                                                    AND `LHS`.`cell_mobile_number` = `RHS`.`cell_mobile_number`
		                                                                    AND `LHS`.`email_address` = `RHS`.`email_address`
		                                                                    AND `LHS`.`ssn` = `RHS`.`ssn`
		                                                                    AND `LHS`.`date_first_registered` = `RHS`.`date_first_registered`
		                                                                    AND `LHS`.`date_left` = `RHS`.`date_left`
		                                                                    AND `LHS`.`other_student_details` = `RHS`.`other_student_details`)) AS `LHS`
		   CROSS JOIN
		     (SELECT *
		      FROM `addresses`
		      WHERE (`country` = 'Haiti')) AS RHS)
		ORDER BY first_name
		
		

	       first_name
	0         Timmoth
	1  Z 5Timmothyugq
Error while executing solution for instance db2csv/student_transcripts_tracking/0011_dev (705)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT department_id) OVER () AS count_distinct_department_id_
FROM degree_programs
ORDER BY count_distinct_department_id_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/student_transcripts_tracking/0031_dev (706)
No solution for instance db2csv/student_transcripts_tracking/0019_dev (707)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0069_dev (708)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.semester_id
		FROM Degree_Programs AS T1
		JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id
		WHERE degree_summary_name = 'Master' INTERSECT
		  SELECT DISTINCT T2.semester_id
		  FROM Degree_Programs AS T1
		  JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Bachelor'

	Empty DataFrame
	Columns: [semester_id]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `department_id` AS `semester_id`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `degree_programs`
		      WHERE (`degree_summary_name` != 'Bachelor')) AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM `student_enrolment` AS `RHS`
		        WHERE (`LHS`.`degree_program_id` = `RHS`.`degree_program_id`) ))
		WHERE (`degree_summary_name` = 'Master')
		ORDER BY semester_id
		
		

	   semester_id
	0           13
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0061_dev (709)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Transcripts

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM departments
		ORDER BY count___
		
		

	   count___
	0        12
No solution for instance db2csv/student_transcripts_tracking/0028_dev (710)
No solution for instance db2csv/student_transcripts_tracking/0066_dev (711)
Error while checking ground truth in instance db2csv/student_transcripts_tracking/0035_dev (712)

Duplicate names are not allowed.
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0043_dev (713)
	EXPECTED OUTPUT ====

		SELECT T1.last_name
		FROM Students AS T1
		JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id
		WHERE T2.state_province_county = 'NorthCarolina'
		EXCEPT
		SELECT DISTINCT T3.last_name
		FROM Students AS T3
		JOIN Student_Enrolment AS T4 ON T3.student_id = T4.student_id

	     last_name
	0  vyyOaKemmer
	ACTUAL OUTPUT ====

		
		SELECT `last_name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT `student_id`,
		             `current_address_id`,
		             `permanent_address_id`,
		             `first_name`,
		             `middle_name`,
		             `last_name`,
		             `cell_mobile_number`,
		             `email_address`,
		             `ssn`,
		             `date_first_registered`,
		             `date_left`,
		             `other_student_details`,
		             `line_1`,
		             `line_2`,
		             `line_3`,
		             `city`,
		             `zip_postcode`,
		             `state_province_county`,
		             `country`,
		             `other_address_details`,
		             `current_address_id` AS `address_id`
		      FROM
		        (SELECT `LHS`.`student_id` AS `student_id`,
		                `LHS`.`current_address_id` AS `current_address_id`,
		                `LHS`.`permanent_address_id` AS `permanent_address_id`,
		                `LHS`.`first_name` AS `first_name`,
		                `LHS`.`middle_name` AS `middle_name`,
		                `LHS`.`last_name` AS `last_name`,
		                `LHS`.`cell_mobile_number` AS `cell_mobile_number`,
		                `LHS`.`email_address` AS `email_address`,
		                `LHS`.`ssn` AS `ssn`,
		                `LHS`.`date_first_registered` AS `date_first_registered`,
		                `LHS`.`date_left` AS `date_left`,
		                `LHS`.`other_student_details` AS `other_student_details`,
		                `RHS`.`line_1` AS `line_1`,
		                `RHS`.`line_2` AS `line_2`,
		                `RHS`.`line_3` AS `line_3`,
		                `RHS`.`city` AS `city`,
		                `RHS`.`zip_postcode` AS `zip_postcode`,
		                `RHS`.`state_province_county` AS `state_province_county`,
		                `RHS`.`country` AS `country`,
		                `RHS`.`other_address_details` AS `other_address_details`
		         FROM `students` AS `LHS`
		         INNER JOIN `addresses` AS `RHS` ON (`LHS`.`current_address_id` = `RHS`.`address_id`))) AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM `student_enrolment` AS `RHS`
		        WHERE (`LHS`.`student_id` = `RHS`.`student_id`) ))
		WHERE (`state_province_county` = 'NorthCarolina')
		ORDER BY last_name
		
		

	     last_name
	0       Rempel
	1  vyyOaKemmer
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0041_dev (714)
	EXPECTED OUTPUT ====

	  course_name
	0          la
	ACTUAL OUTPUT ====

		SELECT T1.course_name
		FROM Courses AS T1
		JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
		GROUP BY T1.course_name
		ORDER BY count(*) DESC
		LIMIT 1

	  course_name
	0          rs
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0041_dev (714)
No solution for instance db2csv/student_transcripts_tracking/0030_dev (715)
No solution for instance db2csv/student_transcripts_tracking/0033_dev (716)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0077_dev (717)
	EXPECTED OUTPUT ====

		select t1.first_name
		from students as t1
		join addresses as t2 on t1.permanent_address_id = t2.address_id
		where t2.country = 'haiti'
		  or t1.cell_mobile_number = '09700166582'

	       first_name
	0         Timmoth
	1        Timmothy
	2  Z 5Timmothyugq
	3    aaykxNV1gZBu
	ACTUAL OUTPUT ====

		
		SELECT `first_name`
		FROM
		  (SELECT `LHS`.`student_id` AS `student_id`,
		          `LHS`.`current_address_id` AS `current_address_id`,
		          `LHS`.`permanent_address_id` AS `permanent_address_id`,
		          `LHS`.`first_name` AS `first_name`,
		          `LHS`.`middle_name` AS `middle_name`,
		          `LHS`.`last_name` AS `last_name`,
		          `LHS`.`cell_mobile_number` AS `cell_mobile_number`,
		          `LHS`.`email_address` AS `email_address`,
		          `LHS`.`ssn` AS `ssn`,
		          `LHS`.`date_first_registered` AS `date_first_registered`,
		          `LHS`.`date_left` AS `date_left`,
		          `LHS`.`other_student_details` AS `other_student_details`,
		          `RHS`.`line_1` AS `line_1`,
		          `RHS`.`line_2` AS `line_2`,
		          `RHS`.`line_3` AS `line_3`,
		          `RHS`.`city` AS `city`,
		          `RHS`.`zip_postcode` AS `zip_postcode`,
		          `RHS`.`state_province_county` AS `state_province_county`,
		          `RHS`.`country` AS `country`,
		          `RHS`.`other_address_details` AS `other_address_details`
		   FROM
		     (SELECT *
		      FROM `students`
		      WHERE (`cell_mobile_number` = '09700166582')) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `addresses`
		      WHERE (`country` != 'Haiti')) AS RHS ON (LHS.current_address_id = RHS.address_id))
		ORDER BY first_name
		
		

	       first_name
	0         Timmoth
	1  Z 5Timmothyugq
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0026_dev (719)
	EXPECTED OUTPUT ====

		SELECT department_description
		FROM Departments
		WHERE department_name LIKE '%computer%'

	  department_description
	0          QeJdoloremQqv
	1             XIfnisiByM
	2                  natus
	3             natusB6nZC
	4                   nisi
	ACTUAL OUTPUT ====

		
		SELECT department_description
		FROM
		  (SELECT LHS.department_id AS department_id,
		          LHS.department_name AS department_name,
		          LHS.department_description AS department_description,
		          LHS.other_details AS other_details,
		          RHS.degree_program_id AS degree_program_id,
		          RHS.semester_id AS semester_id,
		          RHS.student_id AS student_id,
		          RHS.other_details AS other_details_other,
		          RHS.permanent_address_id AS permanent_address_id,
		          RHS.first_name AS first_name,
		          RHS.middle_name AS middle_name,
		          RHS.last_name AS last_name,
		          RHS.cell_mobile_number AS cell_mobile_number,
		          RHS.email_address AS email_address,
		          RHS.ssn AS ssn,
		          RHS.date_first_registered AS date_first_registered,
		          RHS.date_left AS date_left,
		          RHS.other_student_details AS other_student_details,
		          RHS.current_address_id AS current_address_id
		   FROM departments AS LHS
		   INNER JOIN
		     (SELECT student_enrolment_id,
		             degree_program_id,
		             semester_id,
		             student_id,
		             other_details,
		             permanent_address_id,
		             first_name,
		             middle_name,
		             last_name,
		             cell_mobile_number,
		             email_address,
		             ssn,
		             date_first_registered,
		             date_left,
		             other_student_details,
		             student_id AS current_address_id
		      FROM
		        (SELECT student_enrolment_id,
		                degree_program_id,
		                semester_id,
		                degree_program_id AS student_id,
		                other_details,
		                permanent_address_id,
		                first_name,
		                middle_name,
		                last_name,
		                cell_mobile_number,
		                email_address,
		                ssn,
		                date_first_registered,
		                date_left,
		                other_student_details
		         FROM
		           (SELECT LHS.student_enrolment_id AS student_enrolment_id,
		                   LHS.degree_program_id AS degree_program_id,
		                   LHS.semester_id AS semester_id,
		                   LHS.student_id AS student_id,
		                   LHS.other_details AS other_details,
		                   RHS.permanent_address_id AS permanent_address_id,
		                   RHS.first_name AS first_name,
		                   RHS.middle_name AS middle_name,
		                   RHS.last_name AS last_name,
		                   RHS.cell_mobile_number AS cell_mobile_number,
		                   RHS.email_address AS email_address,
		                   RHS.ssn AS ssn,
		                   RHS.date_first_registered AS date_first_registered,
		                   RHS.date_left AS date_left,
		                   RHS.other_student_details AS other_student_details
		            FROM student_enrolment AS LHS
		            INNER JOIN students AS RHS ON (LHS.degree_program_id = RHS.student_id
		                                              AND LHS.student_id = RHS.current_address_id)))) AS RHS ON (LHS.department_id = RHS.student_enrolment_id))
		ORDER BY department_description
		
		

	Empty DataFrame
	Columns: [department_description]
	Index: []
No solution for instance db2csv/student_transcripts_tracking/0050_dev (720)
No solution for instance db2csv/student_transcripts_tracking/0023_dev (721)
No solution for instance db2csv/student_transcripts_tracking/0029_dev (722)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0032_dev (723)
	EXPECTED OUTPUT ====

		SELECT T1.degree_summary_name
		FROM Degree_Programs AS T1
		JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id
		GROUP BY T1.degree_summary_name
		ORDER BY count(*) DESC
		LIMIT 1

	  degree_summary_name
	0              Master
	ACTUAL OUTPUT ====

		
		SELECT degree_summary_name
		FROM
		  (SELECT LHS.student_course_id AS student_course_id,
		          LHS.course_id AS course_id,
		          LHS.student_enrolment_id AS student_enrolment_id,
		          RHS.degree_summary_name AS degree_summary_name,
		          RHS.degree_summary_description AS degree_summary_description
		   FROM student_enrolment_courses AS LHS
		   INNER JOIN
		     (SELECT degree_summary_name,
		             degree_summary_description,
		             COUNT() AS n
		      FROM degree_programs
		      GROUP BY degree_summary_name,
		               degree_summary_description) AS RHS ON (LHS.student_enrolment_id = RHS.n))
		ORDER BY degree_summary_name
		
		

	Empty DataFrame
	Columns: [degree_summary_name]
	Index: []
No solution for instance db2csv/student_transcripts_tracking/0055_dev (724)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0016_dev (725)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Departments AS T1
		JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id
		WHERE T1.department_name = 'engineer'

	   count(*)
	0        13
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM student_enrolment_courses AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM courses AS RHS
		           WHERE (LHS.course_id = RHS.course_id) )))
		ORDER BY count___
		
		

	   count___
	0         0
No solution for instance db2csv/student_transcripts_tracking/0053_dev (726)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0006_dev (727)
	EXPECTED OUTPUT ====

		SELECT course_description
		FROM Courses
		WHERE course_name = 'math'

	  course_description
	0            Lm8(BrW
	1                  p
	ACTUAL OUTPUT ====

		
		SELECT course_description
		FROM
		  (SELECT LHS.course_id AS course_id,
		          LHS.course_name AS course_name,
		          LHS.course_description AS course_description,
		          LHS.other_details AS other_details,
		          RHS.student_course_id AS student_course_id,
		          RHS.course_id AS course_id_other,
		          RHS.student_enrolment_id AS student_enrolment_id,
		          RHS.permanent_address_id AS permanent_address_id,
		          RHS.first_name AS first_name,
		          RHS.middle_name AS middle_name,
		          RHS.last_name AS last_name,
		          RHS.cell_mobile_number AS cell_mobile_number,
		          RHS.email_address AS email_address,
		          RHS.ssn AS ssn,
		          RHS.date_first_registered AS date_first_registered,
		          RHS.date_left AS date_left,
		          RHS.other_student_details AS other_student_details,
		          RHS.current_address_id AS current_address_id
		   FROM courses AS LHS
		   INNER JOIN
		     (SELECT student_course_id,
		             course_id,
		             student_enrolment_id,
		             permanent_address_id,
		             first_name,
		             middle_name,
		             last_name,
		             cell_mobile_number,
		             email_address,
		             ssn,
		             date_first_registered,
		             date_left,
		             other_student_details,
		             current_address_id,
		             student_enrolment_id AS student_id
		      FROM
		        (SELECT student_course_id,
		                course_id,
		                student_enrolment_id,
		                permanent_address_id,
		                first_name,
		                middle_name,
		                last_name,
		                cell_mobile_number,
		                email_address,
		                ssn,
		                date_first_registered,
		                date_left,
		                other_student_details,
		                student_course_id AS current_address_id
		         FROM
		           (SELECT LHS.student_course_id AS student_course_id,
		                   LHS.course_id AS course_id,
		                   LHS.student_enrolment_id AS student_enrolment_id,
		                   RHS.permanent_address_id AS permanent_address_id,
		                   RHS.first_name AS first_name,
		                   RHS.middle_name AS middle_name,
		                   RHS.last_name AS last_name,
		                   RHS.cell_mobile_number AS cell_mobile_number,
		                   RHS.email_address AS email_address,
		                   RHS.ssn AS ssn,
		                   RHS.date_first_registered AS date_first_registered,
		                   RHS.date_left AS date_left,
		                   RHS.other_student_details AS other_student_details
		            FROM student_enrolment_courses AS LHS
		            INNER JOIN students AS RHS ON (LHS.student_course_id = RHS.current_address_id
		                                              AND LHS.student_enrolment_id = RHS.student_id)))) AS RHS ON (LHS.course_id = RHS.student_id))
		ORDER BY course_description
		
		

	Empty DataFrame
	Columns: [course_description]
	Index: []
No solution for instance db2csv/student_transcripts_tracking/0010_dev (728)
No solution for instance db2csv/student_transcripts_tracking/0027_dev (733)
No solution for instance db2csv/student_transcripts_tracking/0020_dev (734)
No solution for instance db2csv/student_transcripts_tracking/0044_dev (735)
No solution for instance db2csv/student_transcripts_tracking/0005_dev (736)
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0007_dev (737)
	EXPECTED OUTPUT ====

	   zip_postcode
	0           148
	ACTUAL OUTPUT ====

		SELECT zip_postcode
		FROM Addresses
		WHERE city = 'Port Chelsea'

	  zip_postcode
	0          148
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0007_dev (737)
No solution for instance db2csv/student_transcripts_tracking/0056_dev (738)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0015_dev (739)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Departments AS T1
		JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id
		WHERE T1.department_name = 'engineer'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT degree_program_id) AS n_distinct
		   FROM
		     (SELECT LHS.degree_program_id AS degree_program_id,
		             LHS.department_id AS department_id,
		             LHS.degree_summary_name AS degree_summary_name,
		             LHS.degree_summary_description AS degree_summary_description,
		             LHS.other_details AS other_details,
		             RHS.n AS n
		      FROM degree_programs AS LHS
		      INNER JOIN
		        (SELECT degree_program_id,
		                department_id,
		                degree_summary_name,
		                degree_summary_description,
		                other_details,
		                COUNT(*) OVER () AS n
		         FROM degree_programs) AS RHS ON (LHS.degree_program_id = RHS.degree_program_id
		                                             AND LHS.department_id = RHS.department_id
		                                             AND LHS.degree_summary_name = RHS.degree_summary_name
		                                             AND LHS.degree_summary_description = RHS.degree_summary_description
		                                             AND LHS.other_details = RHS.other_details)))
		ORDER BY count___
		
		

	   count___
	0        12
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0045_dev (740)
	EXPECTED OUTPUT ====

	      transcript_date  transcript_id
	0 1975-05-06 12:04:47              8
	1 1998-11-22 12:18:29             15
	2 2010-12-13 10:55:15              6
	3 2013-06-30 13:01:40              5
	ACTUAL OUTPUT ====

		SELECT T2.transcript_date,
		       T1.transcript_id
		FROM Transcript_Contents AS T1
		JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id
		GROUP BY T1.transcript_id
		HAVING count(*) >= 2

	       transcript_date  transcript_id
	0  1975-05-06 12:04:47              8
	1  1998-11-22 12:18:29             15
	2  2010-12-13 10:55:15              6
	3  2013-06-30 13:01:40              5
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0045_dev (740)
Error while executing solution for instance db2csv/student_transcripts_tracking/0012_dev (741)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT department_id) OVER () AS count_distinct_department_id_
FROM degree_programs
ORDER BY count_distinct_department_id_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0076_dev (742)
	EXPECTED OUTPUT ====

		SELECT section_description
		FROM Sections
		WHERE section_name = 'h'

	  section_description
	0          doloremque
	ACTUAL OUTPUT ====

		
		SELECT other_student_details AS section_description
		FROM
		  (SELECT student_course_id,
		          course_id,
		          student_enrolment_id,
		          permanent_address_id,
		          first_name,
		          middle_name,
		          last_name,
		          cell_mobile_number,
		          email_address,
		          ssn,
		          date_first_registered,
		          date_left,
		          other_student_details,
		          course_id AS current_address_id
		   FROM
		     (SELECT LHS.student_course_id AS student_course_id,
		             LHS.course_id AS course_id,
		             LHS.student_enrolment_id AS student_enrolment_id,
		             RHS.permanent_address_id AS permanent_address_id,
		             RHS.first_name AS first_name,
		             RHS.middle_name AS middle_name,
		             RHS.last_name AS last_name,
		             RHS.cell_mobile_number AS cell_mobile_number,
		             RHS.email_address AS email_address,
		             RHS.ssn AS ssn,
		             RHS.date_first_registered AS date_first_registered,
		             RHS.date_left AS date_left,
		             RHS.other_student_details AS other_student_details
		      FROM student_enrolment_courses AS LHS
		      INNER JOIN students AS RHS ON (LHS.course_id = RHS.current_address_id
		                                        AND LHS.student_enrolment_id = RHS.student_id)))
		ORDER BY section_description
		
		

	Empty DataFrame
	Columns: [section_description]
	Index: []
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0060_dev (743)
	EXPECTED OUTPUT ====

	      transcript_date  other_details
	0 1975-05-06 12:04:47            NaN
	ACTUAL OUTPUT ====

		SELECT transcript_date,
		       other_details
		FROM Transcripts
		ORDER BY transcript_date ASC
		LIMIT 1

	       transcript_date other_details
	0  1975-05-06 12:04:47          None
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0060_dev (743)
No solution for instance db2csv/student_transcripts_tracking/0065_dev (744)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0075_dev (746)
	EXPECTED OUTPUT ====

		SELECT section_description
		FROM Sections
		WHERE section_name = 'h'

	  section_description
	0          doloremque
	ACTUAL OUTPUT ====

		
		SELECT degree_summary_description AS section_description
		FROM
		  (SELECT degree_program_id,
		          department_id,
		          degree_summary_name,
		          degree_summary_description,
		          other_details,
		          student_enrolment_id,
		          degree_program_id AS course_id
		   FROM
		     (SELECT LHS.degree_program_id AS degree_program_id,
		             LHS.department_id AS department_id,
		             LHS.degree_summary_name AS degree_summary_name,
		             LHS.degree_summary_description AS degree_summary_description,
		             LHS.other_details AS other_details,
		             RHS.student_enrolment_id AS student_enrolment_id
		      FROM degree_programs AS LHS
		      INNER JOIN student_enrolment_courses AS RHS ON (LHS.degree_program_id = RHS.course_id
		                                                         AND LHS.department_id = RHS.student_course_id)))
		ORDER BY section_description
		
		

	  section_description
	0          architecto
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0068_dev (747)
	EXPECTED OUTPUT ====

	      transcript_date  transcript_id
	0 1975-10-28 15:16:51              2
	ACTUAL OUTPUT ====

		SELECT T2.transcript_date,
		       T1.transcript_id
		FROM Transcript_Contents AS T1
		JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id
		GROUP BY T1.transcript_id
		ORDER BY count(*) ASC
		LIMIT 1

	       transcript_date  transcript_id
	0  1975-10-28 15:16:51              2
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0068_dev (747)
Error while checking ground truth in instance db2csv/student_transcripts_tracking/0036_dev (748)

Duplicate names are not allowed.
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0072_dev (749)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT current_address_id)
		FROM Students

	   count(distinct current_address_id)
	0                                   9
	ACTUAL OUTPUT ====

		
		SELECT current_address_id AS count_distinct_current_address_id_
		FROM
		  (SELECT *
		   FROM
		     (SELECT student_id,
		             current_address_id,
		             permanent_address_id,
		             first_name,
		             middle_name,
		             last_name,
		             cell_mobile_number,
		             email_address,
		             ssn,
		             date_first_registered,
		             date_left,
		             other_student_details,
		             line_1,
		             line_2,
		             line_3,
		             city,
		             zip_postcode,
		             state_province_county,
		             country,
		             other_address_details,
		             current_address_id AS address_id
		      FROM
		        (SELECT LHS.student_id AS student_id,
		                LHS.current_address_id AS current_address_id,
		                LHS.permanent_address_id AS permanent_address_id,
		                LHS.first_name AS first_name,
		                LHS.middle_name AS middle_name,
		                LHS.last_name AS last_name,
		                LHS.cell_mobile_number AS cell_mobile_number,
		                LHS.email_address AS email_address,
		                LHS.ssn AS ssn,
		                LHS.date_first_registered AS date_first_registered,
		                LHS.date_left AS date_left,
		                LHS.other_student_details AS other_student_details,
		                RHS.line_1 AS line_1,
		                RHS.line_2 AS line_2,
		                RHS.line_3 AS line_3,
		                RHS.city AS city,
		                RHS.zip_postcode AS zip_postcode,
		                RHS.state_province_county AS state_province_county,
		                RHS.country AS country,
		                RHS.other_address_details AS other_address_details
		         FROM students AS LHS
		         INNER JOIN addresses AS RHS ON (LHS.current_address_id = RHS.address_id))) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM students AS RHS
		        WHERE (LHS.student_id = RHS.student_id
		               AND LHS.current_address_id = RHS.current_address_id
		               AND LHS.permanent_address_id = RHS.permanent_address_id
		               AND LHS.first_name = RHS.first_name
		               AND LHS.middle_name = RHS.middle_name
		               AND LHS.last_name = RHS.last_name
		               AND LHS.cell_mobile_number = RHS.cell_mobile_number
		               AND LHS.email_address = RHS.email_address
		               AND LHS.ssn = RHS.ssn
		               AND LHS.date_first_registered = RHS.date_first_registered
		               AND LHS.date_left = RHS.date_left
		               AND LHS.other_student_details = RHS.other_student_details) ))
		ORDER BY count_distinct_current_address_id_
		
		

	Empty DataFrame
	Columns: [count_distinct_current_address_id_]
	Index: []
No solution for instance db2csv/student_transcripts_tracking/0052_dev (751)
Error while executing solution for instance db2csv/student_transcripts_tracking/0013_dev (752)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT degree_summary_name) OVER () AS count_distinct_degree_summary_name_
FROM degree_programs
ORDER BY count_distinct_degree_summary_name_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/student_transcripts_tracking/0009_dev (754)
No solution for instance db2csv/student_transcripts_tracking/0051_dev (757)
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0042_dev (758)
	EXPECTED OUTPUT ====

	  course_name
	0          la
	ACTUAL OUTPUT ====

		SELECT T1.course_name
		FROM Courses AS T1
		JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
		GROUP BY T1.course_name
		ORDER BY count(*) DESC
		LIMIT 1

	  course_name
	0          rs
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0042_dev (758)
No solution for instance db2csv/student_transcripts_tracking/0057_dev (759)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0034_dev (760)
	EXPECTED OUTPUT ====

		SELECT T1.degree_program_id,
		       T1.degree_summary_name
		FROM Degree_Programs AS T1
		JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id
		GROUP BY T1.degree_program_id
		ORDER BY count(*) DESC
		LIMIT 1

	   degree_program_id degree_summary_name
	0                 10              Master
	ACTUAL OUTPUT ====

		
		SELECT degree_program_id,
		       degree_summary_name
		FROM
		  (SELECT LHS.degree_program_id AS degree_program_id,
		          LHS.department_id AS department_id,
		          LHS.degree_summary_name AS degree_summary_name,
		          LHS.degree_summary_description AS degree_summary_description,
		          LHS.other_details AS other_details,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.degree_program_id AS degree_program_id,
		             LHS.department_id AS department_id,
		             LHS.degree_summary_name AS degree_summary_name,
		             LHS.degree_summary_description AS degree_summary_description,
		             LHS.other_details AS other_details,
		             RHS.n AS n
		      FROM degree_programs AS LHS
		      INNER JOIN
		        (SELECT degree_program_id,
		                COUNT() AS n
		         FROM student_enrolment
		         GROUP BY degree_program_id) AS RHS ON (LHS.degree_program_id = RHS.degree_program_id)) AS LHS
		   INNER JOIN
		     (SELECT degree_program_id,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT degree_program_id,
		                COUNT() AS n
		         FROM student_enrolment
		         GROUP BY degree_program_id)) AS RHS ON (LHS.degree_program_id = RHS.degree_program_id
		                                                 AND LHS.n = RHS.n))
		ORDER BY degree_program_id
		
		

	   degree_program_id degree_summary_name
	0                  2            Bachelor
	1                  3        gL(MasterS(q
	2                 10              Master
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0070_dev (761)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.semester_id
		FROM Degree_Programs AS T1
		JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id
		WHERE degree_summary_name = 'Master' INTERSECT
		  SELECT DISTINCT T2.semester_id
		  FROM Degree_Programs AS T1
		  JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Bachelor'

	Empty DataFrame
	Columns: [semester_id]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT semester_id
		FROM
		  (SELECT *
		   FROM student_enrolment AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM student_enrolment
		           WHERE (student_id > semester_id)) AS RHS
		        WHERE (LHS.degree_program_id = RHS.degree_program_id) ))
		ORDER BY semester_id
		
		

	   semester_id
	0            8
	1            9
	2            9
	3           10
	4           10
	5           13
	6           15
No solution for instance db2csv/student_transcripts_tracking/0058_dev (762)
No solution for instance db2csv/student_transcripts_tracking/0049_dev (763)
No solution for instance db2csv/student_transcripts_tracking/0048_dev (765)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0003_dev (766)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Courses

	   count(*)
	0         9
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM student_enrolment_courses
		ORDER BY count___
		
		

	   count___
	0        15
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0059_dev (768)
	EXPECTED OUTPUT ====

	      transcript_date  other_details
	0 1975-05-06 12:04:47            NaN
	ACTUAL OUTPUT ====

		SELECT transcript_date,
		       other_details
		FROM Transcripts
		ORDER BY transcript_date ASC
		LIMIT 1

	       transcript_date other_details
	0  1975-05-06 12:04:47          None
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0059_dev (768)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0004_dev (769)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Courses

	   count(*)
	0         9
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM departments
		ORDER BY count___
		
		

	   count___
	0        12
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0046_dev (771)
	EXPECTED OUTPUT ====

	      transcript_date  transcript_id
	0 1975-05-06 12:04:47              8
	1 1998-11-22 12:18:29             15
	2 2010-12-13 10:55:15              6
	3 2013-06-30 13:01:40              5
	ACTUAL OUTPUT ====

		SELECT T2.transcript_date,
		       T1.transcript_id
		FROM Transcript_Contents AS T1
		JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id
		GROUP BY T1.transcript_id
		HAVING count(*) >= 2

	       transcript_date  transcript_id
	0  1975-05-06 12:04:47              8
	1  1998-11-22 12:18:29             15
	2  2010-12-13 10:55:15              6
	3  2013-06-30 13:01:40              5
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0046_dev (771)
No solution for instance db2csv/student_transcripts_tracking/0024_dev (773)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0062_dev (774)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Transcripts

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM departments
		ORDER BY count___
		
		

	   count___
	0        12
Error while executing solution for instance db2csv/tvshow/0047_dev (777)

(sqlite3.OperationalError) no such column: RHS.col_18_49_rating_share
[SQL: 
SELECT package_option,
       series_name
FROM
  (SELECT *
   FROM tv_channel AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT id,
                  series_name,
                  country,
                  LANGUAGE,
                  content,
                  pixel_aspect_ratio_par,
                  hight_definition_tv,
                  pay_per_view_ppv,
                  package_option,
                  id_other,
                  episode,
                  air_date,
                  rating,
                  SHARE,
                  col_18_49_rating_share,
                  viewers_m,
                  weekly_rank,
                  id AS channel
           FROM
             (SELECT LHS.id AS id,
                     LHS.series_name AS series_name,
                     LHS.country AS country,
                     LHS.language AS LANGUAGE,
                     LHS.content AS content,
                     LHS.pixel_aspect_ratio_par AS pixel_aspect_ratio_par,
                     LHS.hight_definition_tv AS hight_definition_tv,
                     LHS.pay_per_view_ppv AS pay_per_view_ppv,
                     LHS.package_option AS package_option,
                     RHS.id AS id_other,
                     RHS.episode AS episode,
                     RHS.air_date AS air_date,
                     RHS.rating AS rating,
                     RHS.share AS SHARE,
                     RHS.col_18_49_rating_share AS col_18_49_rating_share,
                     RHS.viewers_m AS viewers_m,
                     RHS.weekly_rank AS weekly_rank
              FROM tv_channel AS LHS
              INNER JOIN tv_series AS RHS ON (LHS.id = RHS.channel))) AS RHS
        WHERE (LHS.content = RHS.content
               AND LHS.package_option = RHS.package_option) ))
ORDER BY package_option

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for fuzzied solution in instance db2csv/tvshow/0011_dev (779)
	EXPECTED OUTPUT ====

		SELECT Country,
		       count(*)
		FROM TV_Channel
		GROUP BY Country
		ORDER BY count(*) DESC
		LIMIT 1;

	  country  count(*)
	0    taly         2
	ACTUAL OUTPUT ====

		
		SELECT country,
		       n AS count___
		FROM
		  (SELECT country,
		          n,
		          MAX(n) OVER () AS maxn
		   FROM
		     (SELECT country,
		             COUNT() AS n
		      FROM tv_channel
		      GROUP BY country))
		WHERE (maxn = n)
		ORDER BY country
		
		

	  country  count___
	0   Italy         2
	1    taly         2
Wrong output for base solution in instance db2csv/tvshow/0031_dev (780)
	EXPECTED OUTPUT ====

	                episode  rating
	0  A Love of a Lifetime     5.8
	1        Friendly Skies     5.3
	2            Game Three     4.4
	ACTUAL OUTPUT ====

		SELECT Episode,
		       Rating
		FROM TV_series
		ORDER BY Rating DESC
		LIMIT 3;

	                episode rating
	0  A Love of a Lifetime    5.8
	1        Friendly Skies    5.3
	2            Game Three    4.4
Wrong output for ground truth in instance db2csv/tvshow/0031_dev (780)
Error while executing solution for instance db2csv/tvshow/0019_dev (781)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT `n_distinct` AS `count___`
FROM
  (SELECT `id`,
          `series_name`,
          `country`,
          `language`,
          `content`,
          `pixel_aspect_ratio_par`,
          `hight_definition_tv`,
          `pay_per_view_ppv`,
          `package_option`,
          COUNT(DISTINCT `country`) OVER () AS `n_distinct`
   FROM `tv_channel`)
WHERE (`language` = 'English')
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for fuzzied solution in instance db2csv/tvshow/0061_dev (782)
	EXPECTED OUTPUT ====

		SELECT package_option
		FROM TV_Channel
		WHERE id NOT IN
		    (SELECT channel
		     FROM cartoon
		     WHERE directed_by = 'Ben Jones')

	       package_option
	0    B9qno ( FTV ) dV
	1        Sky Famiglia
	2        Sky Famiglia
	3          no ( FTV )
	4          no ( FTV )
	5  o52Sky FamigliaGa6
	ACTUAL OUTPUT ====

		
		SELECT `package_option`
		FROM
		  (SELECT *
		   FROM `tv_channel` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT `channel` AS `id`,
		                     `title`,
		                     `directed_by`,
		                     `written_by`,
		                     `original_air_date`,
		                     `production_code`,
		                     `channel`,
		                     `series_name`,
		                     `country`,
		                     `language`,
		                     `content`,
		                     `pixel_aspect_ratio_par`,
		                     `hight_definition_tv`,
		                     `pay_per_view_ppv`,
		                     `package_option`
		              FROM
		                (SELECT `LHS`.`id` AS `id`,
		                        `LHS`.`title` AS `title`,
		                        `LHS`.`directed_by` AS `directed_by`,
		                        `LHS`.`written_by` AS `written_by`,
		                        `LHS`.`original_air_date` AS `original_air_date`,
		                        `LHS`.`production_code` AS `production_code`,
		                        `LHS`.`channel` AS `channel`,
		                        `RHS`.`series_name` AS `series_name`,
		                        `RHS`.`country` AS `country`,
		                        `RHS`.`language` AS `language`,
		                        `RHS`.`content` AS `content`,
		                        `RHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
		                        `RHS`.`hight_definition_tv` AS `hight_definition_tv`,
		                        `RHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
		                        `RHS`.`package_option` AS `package_option`
		                 FROM `cartoon` AS `LHS`
		                 INNER JOIN `tv_channel` AS `RHS` ON (`LHS`.`channel` = `RHS`.`id`)))
		           WHERE (`directed_by` = 'Ben Jones')) AS RHS
		        WHERE (LHS.country = RHS.country
		               AND LHS.series_name = RHS.series_name) ))
		ORDER BY package_option
		
		

	       package_option
	0        Sky Famiglia
	1        Sky Famiglia
	2          no ( FTV )
	3          no ( FTV )
	4  o52Sky FamigliaGa6
Wrong output for base solution in instance db2csv/tvshow/0035_dev (784)
	EXPECTED OUTPUT ====

	    air_date
	0 2007-09-24
	ACTUAL OUTPUT ====

		SELECT Air_Date
		FROM TV_series
		WHERE Episode = "A Love of a Lifetime";

	             air_date
	0  September 24, 2007
Wrong output for ground truth in instance db2csv/tvshow/0035_dev (784)
Error while executing solution for instance db2csv/tvshow/0041_dev (786)

(sqlite3.OperationalError) no such column: RHS.col_18_49_rating_share
[SQL: 
SELECT `episode`
FROM
  (SELECT `id`,
          `series_name`,
          `country`,
          `language`,
          `content`,
          `pixel_aspect_ratio_par`,
          `hight_definition_tv`,
          `pay_per_view_ppv`,
          `package_option`,
          `id_other`,
          `episode`,
          `air_date`,
          `rating`,
          `share`,
          `col_18_49_rating_share`,
          `viewers_m`,
          `weekly_rank`,
          `id` AS `channel`
   FROM
     (SELECT `LHS`.`id` AS `id`,
             `LHS`.`series_name` AS `series_name`,
             `LHS`.`country` AS `country`,
             `LHS`.`language` AS `language`,
             `LHS`.`content` AS `content`,
             `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
             `LHS`.`hight_definition_tv` AS `hight_definition_tv`,
             `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
             `LHS`.`package_option` AS `package_option`,
             `RHS`.`id` AS `id_other`,
             `RHS`.`episode` AS `episode`,
             `RHS`.`air_date` AS `air_date`,
             `RHS`.`rating` AS `rating`,
             `RHS`.`share` AS `share`,
             `RHS`.`col_18_49_rating_share` AS `col_18_49_rating_share`,
             `RHS`.`viewers_m` AS `viewers_m`,
             `RHS`.`weekly_rank` AS `weekly_rank`
      FROM `tv_channel` AS `LHS`
      INNER JOIN `tv_series` AS `RHS` ON (`LHS`.`id` = `RHS`.`channel`)))
WHERE (`series_name` = 'Sky Radio')
ORDER BY episode

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/tvshow/0033_dev (788)
Wrong output for fuzzied solution in instance db2csv/tvshow/0022_dev (789)
	EXPECTED OUTPUT ====

		SELECT LANGUAGE,
		       count(*)
		FROM TV_Channel
		GROUP BY LANGUAGE
		ORDER BY count(*) ASC
		LIMIT 1;

	        language  count(*)
	0  4jXEnglishhay         1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT LANGUAGE,
		                n AS count___
		FROM
		  (SELECT LHS.id AS id,
		          LHS.title AS title,
		          LHS.directed_by AS directed_by,
		          LHS.written_by AS written_by,
		          LHS.original_air_date AS original_air_date,
		          LHS.production_code AS production_code,
		          LHS.channel AS channel,
		          LHS.language AS LANGUAGE,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.title AS title,
		             LHS.directed_by AS directed_by,
		             LHS.written_by AS written_by,
		             LHS.original_air_date AS original_air_date,
		             LHS.production_code AS production_code,
		             LHS.channel AS channel,
		             RHS.language AS LANGUAGE,
		             RHS.n AS n
		      FROM cartoon AS LHS
		      CROSS JOIN
		        (SELECT LANGUAGE,
		                COUNT() AS n
		         FROM tv_channel
		         GROUP BY LANGUAGE) AS RHS) AS LHS
		   INNER JOIN
		     (SELECT LANGUAGE,
		             MIN(n) OVER () AS n
		      FROM
		        (SELECT LANGUAGE,
		                COUNT() AS n
		         FROM tv_channel
		         GROUP BY LANGUAGE)) AS RHS ON (LHS.language = RHS.language
		                                        AND LHS.n = RHS.n))
		ORDER BY LANGUAGE
		
		

	         language  count___
	0   4jXEnglishhay         1
	1    BnkvbEnglish         1
	2    EnglishGweS8         1
	3    EnglishX)Qfd         1
	4    EnglishdFA2N         1
	5    Englishy0TVi         1
	6    Italian4)l(R         1
	7    ItalianJSP1H         1
	8    ItalianUrEXP         1
	9    Italiani42lo         1
	10   Italianm3p7S         1
	11  QhMItaliank6C         1
	12   RfvhbEnglish         1
	13  S4sItalian1Bu         1
	14  WXmEnglishWQb         1
	15  a( EnglisheFo         1
	16   a6T8RItalian         1
	17  jxTItalianwx0         1
	18         nglish         1
	19   p)imSItalian         1
	20  u GEnglishTLP         1
	21   xBw(FEnglish         1
	22  xwEItalian6sK         1
Wrong output for fuzzied solution in instance db2csv/tvshow/0023_dev (792)
	EXPECTED OUTPUT ====

		SELECT LANGUAGE,
		       count(*)
		FROM TV_Channel
		GROUP BY LANGUAGE

	         language  count(*)
	0   4jXEnglishhay         1
	1    BnkvbEnglish         1
	2    EnglishGweS8         1
	3    EnglishX)Qfd         1
	4    EnglishdFA2N         1
	5    Englishy0TVi         1
	6    Italian4)l(R         1
	7    ItalianJSP1H         1
	8    ItalianUrEXP         1
	9    Italiani42lo         1
	10   Italianm3p7S         1
	11  QhMItaliank6C         1
	12   RfvhbEnglish         1
	13  S4sItalian1Bu         1
	14  WXmEnglishWQb         1
	15  a( EnglisheFo         1
	16   a6T8RItalian         1
	17  jxTItalianwx0         1
	18         nglish         1
	19   p)imSItalian         1
	20  u GEnglishTLP         1
	21   xBw(FEnglish         1
	22  xwEItalian6sK         1
	23         Italia         4
	24         talian         4
	25        English        10
	26        Italian        24
	ACTUAL OUTPUT ====

		
		SELECT LANGUAGE,
		       n_distinct AS count___
		FROM
		  (SELECT LANGUAGE,
		          COUNT(DISTINCT series_name) AS n_distinct
		   FROM tv_channel
		   GROUP BY LANGUAGE)
		ORDER BY LANGUAGE
		
		

	         language  count___
	0   4jXEnglishhay         1
	1    BnkvbEnglish         1
	2         English         6
	3    EnglishGweS8         1
	4    EnglishX)Qfd         1
	5    EnglishdFA2N         1
	6    Englishy0TVi         1
	7          Italia         4
	8         Italian        13
	9    Italian4)l(R         1
	10   ItalianJSP1H         1
	11   ItalianUrEXP         1
	12   Italiani42lo         1
	13   Italianm3p7S         1
	14  QhMItaliank6C         1
	15   RfvhbEnglish         1
	16  S4sItalian1Bu         1
	17  WXmEnglishWQb         1
	18  a( EnglisheFo         1
	19   a6T8RItalian         1
	20  jxTItalianwx0         1
	21         nglish         1
	22   p)imSItalian         1
	23         talian         4
	24  u GEnglishTLP         1
	25   xBw(FEnglish         1
	26  xwEItalian6sK         1
Wrong output for base solution in instance db2csv/tvshow/0032_dev (794)
	EXPECTED OUTPUT ====

	                episode  rating
	0  A Love of a Lifetime     5.8
	1        Friendly Skies     5.3
	2            Game Three     4.4
	ACTUAL OUTPUT ====

		SELECT Episode,
		       Rating
		FROM TV_series
		ORDER BY Rating DESC
		LIMIT 3;

	                episode rating
	0  A Love of a Lifetime    5.8
	1        Friendly Skies    5.3
	2            Game Three    4.4
Wrong output for ground truth in instance db2csv/tvshow/0032_dev (794)
Wrong output for base solution in instance db2csv/tvshow/0055_dev (795)
	EXPECTED OUTPUT ====

	   pixel_aspect_ratio_par country
	0                     NaT   Italy
	1                     NaT   Italy
	2                     NaT   Italy
	3                     NaT   Italy
	4                     NaT   Italy
	5                     NaT   Italy
	6                     NaT   Italy
	7                     NaT   Italy
	8                     NaT   Italy
	9                     NaT   Italy
	10                    NaT   Italy
	11                    NaT   Italy
	ACTUAL OUTPUT ====

		SELECT Pixel_aspect_ratio_PAR,
		       country
		FROM tv_channel
		WHERE LANGUAGE != 'English'

	   pixel_aspect_ratio_par country
	0                    16:9   Italy
	1                    16:9   Italy
	2                    16:9   Italy
	3                     4:3   Italy
	4                     4:3   Italy
	5                     4:3   Italy
	6                     4:3   Italy
	7                     4:3   Italy
	8                     4:3   Italy
	9              4:3 / 16:9   Italy
	10             4:3 / 16:9   Italy
	11             4:3 / 16:9   Italy
Wrong output for ground truth in instance db2csv/tvshow/0055_dev (795)
Wrong output for fuzzied solution in instance db2csv/tvshow/0016_dev (796)
	EXPECTED OUTPUT ====

		SELECT Content
		FROM TV_Channel
		WHERE series_name = "Sky Radio";

	       content
	0  aUVmusicUkX
	1        music
	2        music
	3        music
	4        music
	5   music)voPW
	6   musicX(H4c
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `content`
		FROM `tv_channel`
		WHERE (`series_name` != 'Sky Radio')
		ORDER BY content
		
		

	        content
	0    04N)emusic
	1   5dwmusicpes
	2   6 kmusic6e2
	3   AgKmusicDts
	4    D8u1Ymusic
	5   Esnmusic0XC
	6   IEHmusicjPF
	7   K3Kmusic)36
	8   RKimusicCvs
	9   WyZmusicdF8
	10   Xj4NPmusic
	11  fDBmusicIE2
	12   fr)NVmusic
	13  l6BmusicorW
	14   lfmtNmusic
	15  mkdmusicDQE
	16         musi
	17        music
	18   music0qwy)
	19   music6)CaO
	20   musicDkG0C
	21   musicOAu3z
	22   musicQJA8s
	23   musicaAmhL
	24   musicaw6nB
	25   musiccHUB 
	26   musicfMLeP
	27   musichOurg
	28   musicoAwYZ
	29   musicpj01W
	30         usic
	31  w()music0gt
	32   yRb14music
	33   z577emusic
No solution for instance db2csv/tvshow/0053_dev (797)
Wrong output for fuzzied solution in instance db2csv/tvshow/0006_dev (798)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Cartoon
		WHERE Written_by = "Joseph Kuhr";

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `cartoon`
		WHERE (`written_by` = 'Joseph Kuhr')
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance db2csv/tvshow/0010_dev (799)
No solution for instance db2csv/tvshow/0054_dev (800)
Error while executing solution for instance db2csv/tvshow/0040_dev (802)

(sqlite3.OperationalError) no such column: LHS.col_18_49_rating_share
[SQL: 
SELECT `series_name`
FROM
  (SELECT `channel` AS `id`,
          `episode`,
          `air_date`,
          `rating`,
          `share`,
          `col_18_49_rating_share`,
          `viewers_m`,
          `weekly_rank`,
          `channel`,
          `series_name`,
          `country`,
          `language`,
          `content`,
          `pixel_aspect_ratio_par`,
          `hight_definition_tv`,
          `pay_per_view_ppv`,
          `package_option`
   FROM
     (SELECT `LHS`.`id` AS `id`,
             `LHS`.`episode` AS `episode`,
             `LHS`.`air_date` AS `air_date`,
             `LHS`.`rating` AS `rating`,
             `LHS`.`share` AS `share`,
             `LHS`.`col_18_49_rating_share` AS `col_18_49_rating_share`,
             `LHS`.`viewers_m` AS `viewers_m`,
             `LHS`.`weekly_rank` AS `weekly_rank`,
             `LHS`.`channel` AS `channel`,
             `RHS`.`series_name` AS `series_name`,
             `RHS`.`country` AS `country`,
             `RHS`.`language` AS `language`,
             `RHS`.`content` AS `content`,
             `RHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
             `RHS`.`hight_definition_tv` AS `hight_definition_tv`,
             `RHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
             `RHS`.`package_option` AS `package_option`
      FROM `tv_series` AS `LHS`
      INNER JOIN `tv_channel` AS `RHS` ON (`LHS`.`channel` = `RHS`.`id`)))
WHERE (`episode` = 'A Love of a Lifetime')
ORDER BY series_name

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Error while executing solution for instance db2csv/tvshow/0005_dev (806)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `title`) OVER () AS `count___`
FROM `cartoon`
WHERE (`written_by` = 'Joseph Kuhr')
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for base solution in instance db2csv/tvshow/0056_dev (808)
	EXPECTED OUTPUT ====

	   pixel_aspect_ratio_par country
	0                     NaT   Italy
	1                     NaT   Italy
	2                     NaT   Italy
	3                     NaT   Italy
	4                     NaT   Italy
	5                     NaT   Italy
	6                     NaT   Italy
	7                     NaT   Italy
	8                     NaT   Italy
	9                     NaT   Italy
	10                    NaT   Italy
	11                    NaT   Italy
	ACTUAL OUTPUT ====

		SELECT Pixel_aspect_ratio_PAR,
		       country
		FROM tv_channel
		WHERE LANGUAGE != 'English'

	   pixel_aspect_ratio_par country
	0                    16:9   Italy
	1                    16:9   Italy
	2                    16:9   Italy
	3                     4:3   Italy
	4                     4:3   Italy
	5                     4:3   Italy
	6                     4:3   Italy
	7                     4:3   Italy
	8                     4:3   Italy
	9              4:3 / 16:9   Italy
	10             4:3 / 16:9   Italy
	11             4:3 / 16:9   Italy
Wrong output for ground truth in instance db2csv/tvshow/0056_dev (808)
Wrong output for base solution in instance db2csv/tvshow/0045_dev (810)
	EXPECTED OUTPUT ====

	   production_code  channel
	0            102.0      701
	ACTUAL OUTPUT ====

		select production_code,
		       channel
		from cartoon
		order by original_air_date desc
		limit 1

	   production_code channel
	0            102.0     701
Wrong output for ground truth in instance db2csv/tvshow/0045_dev (810)
No solution for instance db2csv/tvshow/0012_dev (811)
Wrong output for base solution in instance db2csv/tvshow/0060_dev (812)
	EXPECTED OUTPUT ====

	     id
	0   701
	1   703
	2   705
	3   706
	4   708
	5   709
	6   713
	7   714
	8   715
	9   717
	10  719
	ACTUAL OUTPUT ====

		SELECT id
		FROM TV_Channel
		EXCEPT
		SELECT channel
		FROM cartoon
		WHERE directed_by = 'Ben Jones'

	     id
	0   701
	1   703
	2   705
	3   706
	4   708
	5   709
	6   713
	7   714
	8   715
	9   717
	10  719
Wrong output for ground truth in instance db2csv/tvshow/0060_dev (812)
Wrong output for base solution in instance db2csv/tvshow/0036_dev (814)
	EXPECTED OUTPUT ====

	    air_date
	0 2007-09-24
	ACTUAL OUTPUT ====

		SELECT Air_Date
		FROM TV_series
		WHERE Episode = "A Love of a Lifetime";

	             air_date
	0  September 24, 2007
Wrong output for ground truth in instance db2csv/tvshow/0036_dev (814)
Error while executing solution for instance db2csv/tvshow/0039_dev (815)

(sqlite3.OperationalError) no such column: LHS.col_18_49_rating_share
[SQL: 
SELECT `series_name`
FROM
  (SELECT `LHS`.`id` AS `id`,
          `LHS`.`episode` AS `episode`,
          `LHS`.`air_date` AS `air_date`,
          `LHS`.`rating` AS `rating`,
          `LHS`.`share` AS `share`,
          `LHS`.`col_18_49_rating_share` AS `col_18_49_rating_share`,
          `LHS`.`viewers_m` AS `viewers_m`,
          `LHS`.`weekly_rank` AS `weekly_rank`,
          `LHS`.`channel` AS `channel`,
          `RHS`.`series_name` AS `series_name`,
          `RHS`.`country` AS `country`,
          `RHS`.`language` AS `language`,
          `RHS`.`content` AS `content`,
          `RHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
          `RHS`.`hight_definition_tv` AS `hight_definition_tv`,
          `RHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
          `RHS`.`package_option` AS `package_option`
   FROM
     (SELECT *
      FROM `tv_series`
      WHERE (`episode` = 'A Love of a Lifetime')) AS LHS
   INNER JOIN tv_channel AS RHS ON (LHS.channel = RHS.id))
ORDER BY series_name

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Error while executing solution for instance db2csv/tvshow/0052_dev (816)

(sqlite3.OperationalError) no such column: LHS.col_18_49_rating_share
[SQL: 
SELECT country
FROM
  (SELECT *
   FROM tv_channel AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT channel AS id,
                  episode,
                  air_date,
                  rating,
                  SHARE,
                  col_18_49_rating_share,
                  viewers_m,
                  weekly_rank,
                  channel,
                  series_name,
                  country,
                  LANGUAGE,
                  content,
                  pixel_aspect_ratio_par,
                  hight_definition_tv,
                  pay_per_view_ppv,
                  package_option
           FROM
             (SELECT LHS.id AS id,
                     LHS.episode AS episode,
                     LHS.air_date AS air_date,
                     LHS.rating AS rating,
                     LHS.share AS SHARE,
                     LHS.col_18_49_rating_share AS col_18_49_rating_share,
                     LHS.viewers_m AS viewers_m,
                     LHS.weekly_rank AS weekly_rank,
                     LHS.channel AS channel,
                     RHS.series_name AS series_name,
                     RHS.country AS country,
                     RHS.language AS LANGUAGE,
                     RHS.content AS content,
                     RHS.pixel_aspect_ratio_par AS pixel_aspect_ratio_par,
                     RHS.hight_definition_tv AS hight_definition_tv,
                     RHS.pay_per_view_ppv AS pay_per_view_ppv,
                     RHS.package_option AS package_option
              FROM tv_series AS LHS
              INNER JOIN tv_channel AS RHS ON (LHS.channel = RHS.id))) AS RHS
        WHERE (LHS.country = RHS.country
               AND LHS.pixel_aspect_ratio_par = RHS.pixel_aspect_ratio_par) ))
ORDER BY country

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for fuzzied solution in instance db2csv/tvshow/0013_dev (817)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT series_name),
		       count(DISTINCT content)
		FROM TV_Channel;

	   count(distinct series_name)  count(distinct content)
	0                           27                       29
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count_distinct_series_name_,
		       COUNT(*) OVER () AS count_distinct_content_
		FROM
		  (SELECT COUNT(DISTINCT series_name) AS n_distinct
		   FROM tv_channel)
		ORDER BY count_distinct_series_name_
		
		

	   count_distinct_series_name_  count_distinct_content_
	0                           27                        1
No solution for instance db2csv/tvshow/0009_dev (819)
Wrong output for fuzzied solution in instance db2csv/tvshow/0051_dev (822)
	EXPECTED OUTPUT ====

		SELECT country
		FROM TV_Channel
		EXCEPT
		SELECT T1.country
		FROM TV_Channel AS T1
		JOIN cartoon AS T2 ON T1.id = T2.Channel
		WHERE T2.written_by = 'Todd Casey'

	        country
	0   (ONItalyJuT
	1    DkiBrItaly
	2    FMf14Italy
	3          Ital
	4    Italy4rWIh
	5    ItalyF1PV3
	6    ItalyTo)4J
	7    ItalyXOejz
	8    ItalyYyYT0
	9   RhPItaly5ul
	10   WBOYLItaly
	11  Zx3ItalymI8
	12  bXmItalyaaw
	13         taly
	14   w 93QItaly
	15  w07Italyyd)
	16   yRb14Italy
	17   yrMm9Italy
	18   z577eItaly
	ACTUAL OUTPUT ====

		
		SELECT `country`
		FROM
		  (SELECT *
		   FROM `tv_channel` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT `channel` AS `id`,
		                  `title`,
		                  `directed_by`,
		                  `written_by`,
		                  `original_air_date`,
		                  `production_code`,
		                  `channel`,
		                  `series_name`,
		                  `country`,
		                  `language`,
		                  `content`,
		                  `pixel_aspect_ratio_par`,
		                  `hight_definition_tv`,
		                  `pay_per_view_ppv`,
		                  `package_option`
		           FROM
		             (SELECT `LHS`.`id` AS `id`,
		                     `LHS`.`title` AS `title`,
		                     `LHS`.`directed_by` AS `directed_by`,
		                     `LHS`.`written_by` AS `written_by`,
		                     `LHS`.`original_air_date` AS `original_air_date`,
		                     `LHS`.`production_code` AS `production_code`,
		                     `LHS`.`channel` AS `channel`,
		                     `RHS`.`series_name` AS `series_name`,
		                     `RHS`.`country` AS `country`,
		                     `RHS`.`language` AS `language`,
		                     `RHS`.`content` AS `content`,
		                     `RHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
		                     `RHS`.`hight_definition_tv` AS `hight_definition_tv`,
		                     `RHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
		                     `RHS`.`package_option` AS `package_option`
		              FROM
		                (SELECT *
		                 FROM `cartoon`
		                 WHERE (`written_by` != 'Todd Casey')) AS LHS
		              INNER JOIN tv_channel AS RHS ON (LHS.channel = RHS.id))) AS RHS
		        WHERE (LHS.content = RHS.content
		               AND LHS.package_option = RHS.package_option) ))
		ORDER BY country
		
		

	        country
	0   (ONItalyJuT
	1    FMf14Italy
	2          Ital
	3          Ital
	4          Ital
	5         Italy
	6         Italy
	7         Italy
	8         Italy
	9         Italy
	10        Italy
	11        Italy
	12        Italy
	13        Italy
	14        Italy
	15        Italy
	16        Italy
	17        Italy
	18        Italy
	19        Italy
	20        Italy
	21        Italy
	22        Italy
	23   ItalyXOejz
	24  RhPItaly5ul
	25  bXmItalyaaw
	26         taly
	27         taly
	28   w 93QItaly
	29   yrMm9Italy
	30   z577eItaly
Error while executing solution for instance db2csv/tvshow/0042_dev (823)

(sqlite3.OperationalError) no such column: LHS.col_18_49_rating_share
[SQL: 
SELECT `episode`
FROM
  (SELECT `channel` AS `id`,
          `episode`,
          `air_date`,
          `rating`,
          `share`,
          `col_18_49_rating_share`,
          `viewers_m`,
          `weekly_rank`,
          `channel`,
          `series_name`,
          `country`,
          `language`,
          `content`,
          `pixel_aspect_ratio_par`,
          `hight_definition_tv`,
          `pay_per_view_ppv`,
          `package_option`
   FROM
     (SELECT `LHS`.`id` AS `id`,
             `LHS`.`episode` AS `episode`,
             `LHS`.`air_date` AS `air_date`,
             `LHS`.`rating` AS `rating`,
             `LHS`.`share` AS `share`,
             `LHS`.`col_18_49_rating_share` AS `col_18_49_rating_share`,
             `LHS`.`viewers_m` AS `viewers_m`,
             `LHS`.`weekly_rank` AS `weekly_rank`,
             `LHS`.`channel` AS `channel`,
             `RHS`.`series_name` AS `series_name`,
             `RHS`.`country` AS `country`,
             `RHS`.`language` AS `language`,
             `RHS`.`content` AS `content`,
             `RHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
             `RHS`.`hight_definition_tv` AS `hight_definition_tv`,
             `RHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
             `RHS`.`package_option` AS `package_option`
      FROM `tv_series` AS `LHS`
      INNER JOIN `tv_channel` AS `RHS` ON (`LHS`.`channel` = `RHS`.`id`)))
WHERE (`series_name` = 'Sky Radio')
ORDER BY episode

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for base solution in instance db2csv/tvshow/0057_dev (824)
	EXPECTED OUTPUT ====

	    id
	0  728
	ACTUAL OUTPUT ====

		SELECT id
		FROM tv_channel
		GROUP BY country
		HAVING count(*) > 2

	    id
	0  700
Wrong output for ground truth in instance db2csv/tvshow/0057_dev (824)
Error while executing solution for instance db2csv/tvshow/0034_dev (825)

(sqlite3.OperationalError) no such column: col_18_49_rating_share
[SQL: 
SELECT DISTINCT MAX(SHARE) OVER () AS max_share_,
                                minshare AS min_share_
FROM
  (SELECT id,
          episode,
          air_date,
          rating,
          SHARE,
          col_18_49_rating_share,
          viewers_m,
          weekly_rank,
          channel,
          MIN(SHARE) OVER () AS minshare
   FROM tv_series)
ORDER BY max_share_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for base solution in instance db2csv/tvshow/0058_dev (826)
	EXPECTED OUTPUT ====

	    id
	0  728
	ACTUAL OUTPUT ====

		SELECT id
		FROM tv_channel
		GROUP BY country
		HAVING count(*) > 2

	    id
	0  700
Wrong output for ground truth in instance db2csv/tvshow/0058_dev (826)
Wrong output for fuzzied solution in instance db2csv/tvshow/0049_dev (827)
	EXPECTED OUTPUT ====

		SELECT T1.country
		FROM TV_Channel AS T1
		JOIN cartoon AS T2 ON T1.id = T2.Channel
		WHERE T2.written_by = 'Todd Casey'

	  country
	0   Italy
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `country`
		FROM
		  (SELECT `channel` AS `id`,
		          `title`,
		          `directed_by`,
		          `written_by`,
		          `original_air_date`,
		          `production_code`,
		          `channel`,
		          `series_name`,
		          `country`,
		          `language`,
		          `content`,
		          `pixel_aspect_ratio_par`,
		          `hight_definition_tv`,
		          `pay_per_view_ppv`,
		          `package_option`
		   FROM
		     (SELECT `LHS`.`id` AS `id`,
		             `LHS`.`title` AS `title`,
		             `LHS`.`directed_by` AS `directed_by`,
		             `LHS`.`written_by` AS `written_by`,
		             `LHS`.`original_air_date` AS `original_air_date`,
		             `LHS`.`production_code` AS `production_code`,
		             `LHS`.`channel` AS `channel`,
		             `RHS`.`series_name` AS `series_name`,
		             `RHS`.`country` AS `country`,
		             `RHS`.`language` AS `language`,
		             `RHS`.`content` AS `content`,
		             `RHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
		             `RHS`.`hight_definition_tv` AS `hight_definition_tv`,
		             `RHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
		             `RHS`.`package_option` AS `package_option`
		      FROM `cartoon` AS `LHS`
		      INNER JOIN `tv_channel` AS `RHS` ON (`LHS`.`channel` = `RHS`.`id`)))
		WHERE (`written_by` != 'Todd Casey')
		ORDER BY country
		
		

	      country
	0  DkiBrItaly
	1        Ital
	2       Italy
	3  Italy4rWIh
	4  ItalyTo)4J
	5        taly
Wrong output for fuzzied solution in instance db2csv/tvshow/0014_dev (828)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT series_name),
		       count(DISTINCT content)
		FROM TV_Channel;

	   count(distinct series_name)  count(distinct content)
	0                           27                       29
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count_distinct_series_name_,
		       COUNT(*) OVER () AS count_distinct_content_
		FROM
		  (SELECT COUNT(DISTINCT series_name) AS n_distinct
		   FROM tv_channel)
		ORDER BY count_distinct_series_name_
		
		

	   count_distinct_series_name_  count_distinct_content_
	0                           27                        1
Error while executing solution for instance db2csv/tvshow/0048_dev (829)

(sqlite3.OperationalError) no such column: RHS.col_18_49_rating_share
[SQL: 
SELECT package_option,
       series_name
FROM
  (SELECT *
   FROM tv_channel AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT id,
                  series_name,
                  country,
                  LANGUAGE,
                  content,
                  pixel_aspect_ratio_par,
                  hight_definition_tv,
                  pay_per_view_ppv,
                  package_option,
                  id_other,
                  episode,
                  air_date,
                  rating,
                  SHARE,
                  col_18_49_rating_share,
                  viewers_m,
                  weekly_rank,
                  id AS channel
           FROM
             (SELECT LHS.id AS id,
                     LHS.series_name AS series_name,
                     LHS.country AS country,
                     LHS.language AS LANGUAGE,
                     LHS.content AS content,
                     LHS.pixel_aspect_ratio_par AS pixel_aspect_ratio_par,
                     LHS.hight_definition_tv AS hight_definition_tv,
                     LHS.pay_per_view_ppv AS pay_per_view_ppv,
                     LHS.package_option AS package_option,
                     RHS.id AS id_other,
                     RHS.episode AS episode,
                     RHS.air_date AS air_date,
                     RHS.rating AS rating,
                     RHS.share AS SHARE,
                     RHS.col_18_49_rating_share AS col_18_49_rating_share,
                     RHS.viewers_m AS viewers_m,
                     RHS.weekly_rank AS weekly_rank
              FROM tv_channel AS LHS
              INNER JOIN tv_series AS RHS ON (LHS.id = RHS.channel))) AS RHS
        WHERE (LHS.content = RHS.content
               AND LHS.package_option = RHS.package_option) ))
ORDER BY package_option

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for base solution in instance db2csv/tvshow/0059_dev (832)
	EXPECTED OUTPUT ====

	     id
	0   701
	1   703
	2   705
	3   706
	4   708
	5   709
	6   713
	7   714
	8   715
	9   717
	10  719
	ACTUAL OUTPUT ====

		SELECT id
		FROM TV_Channel
		EXCEPT
		SELECT channel
		FROM cartoon
		WHERE directed_by = 'Ben Jones'

	     id
	0   701
	1   703
	2   705
	3   706
	4   708
	5   709
	6   713
	7   714
	8   715
	9   717
	10  719
Wrong output for ground truth in instance db2csv/tvshow/0059_dev (832)
Wrong output for base solution in instance db2csv/tvshow/0046_dev (834)
	EXPECTED OUTPUT ====

	   production_code  channel
	0            102.0      701
	ACTUAL OUTPUT ====

		select production_code,
		       channel
		from cartoon
		order by original_air_date desc
		limit 1

	   production_code channel
	0            102.0     701
Wrong output for ground truth in instance db2csv/tvshow/0046_dev (834)
No solution for instance db2csv/tvshow/0021_dev (835)
Wrong output for fuzzied solution in instance db2csv/voter_1/0008_dev (838)
	EXPECTED OUTPUT ====

		SELECT T1.contestant_number,
		       T1.contestant_name
		FROM contestants AS T1
		JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number
		GROUP BY T1.contestant_number
		HAVING count(*) >= 2

	   contestant_number                     contestant_name
	0                  7        Loraine NygrenTania Mattioli
	1                  8        Loraine NygrenTania Mattioli
	2                 12                Tabatha Gehlingkbt(B
	3                  9  mSvLoraine NygrenTania Mattioliz1N
	4         1485624507         oraine NygrenTania Mattioli
	ACTUAL OUTPUT ====

		
		SELECT contestant_number,
		       contestant_name
		FROM
		  (SELECT LHS.contestant_number AS contestant_number,
		          LHS.n AS n,
		          RHS.contestant_name AS contestant_name
		   FROM
		     (SELECT *
		      FROM
		        (SELECT contestant_number,
		                COUNT() AS n
		         FROM votes
		         GROUP BY contestant_number)
		      WHERE (n = 2.0)) AS LHS
		   INNER JOIN contestants AS RHS ON (LHS.contestant_number = RHS.contestant_number))
		ORDER BY contestant_number
		
		

	   contestant_number                     contestant_name
	0                  8        Loraine NygrenTania Mattioli
	1                  9  mSvLoraine NygrenTania Mattioliz1N
	2         1485624507         oraine NygrenTania Mattioli
Wrong output for fuzzied solution in instance db2csv/voter_1/0011_dev (839)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM contestants
		WHERE contestant_number NOT IN
		    (SELECT contestant_number
		     FROM votes)

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT *
		   FROM contestants AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM votes AS RHS
		        WHERE (LHS.contestant_number = RHS.contestant_number) ))
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
Error while executing solution for instance db2csv/voter_1/0010_dev (841)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT `vote_id` AS `count___`
FROM
  (SELECT `vote_id`,
          `phone_number`,
          `state`,
          `contestant_number`,
          `created`,
          COUNT(DISTINCT `vote_id`) OVER () AS `n_distinct`
   FROM
     (SELECT *
      FROM `votes`
      WHERE (`state` != 'NY')))
WHERE (`state` = 'CA')
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for base solution in instance db2csv/voter_1/0005_dev (842)
	EXPECTED OUTPUT ====

	         max_created_
	0 2018-03-09 19:03:39
	ACTUAL OUTPUT ====

		SELECT max(created)
		FROM votes
		WHERE state = 'CA'

	          max(created)
	0  2018-03-09 19:03:39
Wrong output for ground truth in instance db2csv/voter_1/0005_dev (842)
Wrong output for base solution in instance db2csv/voter_1/0007_dev (843)
	EXPECTED OUTPUT ====

	  state             created
	0    NY 2018-03-09 19:03:21
	1    NY 2018-03-09 19:03:36
	2    CA 2018-03-09 19:03:39
	3  NJ\n 2018-03-09 19:03:40
	ACTUAL OUTPUT ====

		SELECT DISTINCT state,
		                created
		FROM votes

	  state              created
	0    NY  2018-03-09 19:03:21
	1    NY  2018-03-09 19:03:36
	2    CA  2018-03-09 19:03:39
	3  NJ\n  2018-03-09 19:03:40
Wrong output for ground truth in instance db2csv/voter_1/0007_dev (843)
No solution for instance db2csv/voter_1/0015_dev (844)
No solution for instance db2csv/voter_1/0012_dev (845)
Wrong output for base solution in instance db2csv/voter_1/0013_dev (846)
	EXPECTED OUTPUT ====

	              created state  phone_number
	0 2018-03-09 19:03:21    NY    7182887233
	ACTUAL OUTPUT ====

		SELECT T2.created,
		       T2.state,
		       T2.phone_number
		FROM contestants AS T1
		JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number
		WHERE T1.contestant_name = 'Tabatha Gehling'

	               created state  phone_number
	0  2018-03-09 19:03:21    NY    7182887233
Wrong output for ground truth in instance db2csv/voter_1/0013_dev (846)
Wrong output for fuzzied solution in instance db2csv/voter_1/0009_dev (848)
	EXPECTED OUTPUT ====

		SELECT T1.contestant_number,
		       T1.contestant_name
		FROM contestants AS T1
		JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number
		GROUP BY T1.contestant_number
		ORDER BY count(*) ASC
		LIMIT 1

	   contestant_number     contestant_name
	0                  5  Ericka DietercNCkC
	ACTUAL OUTPUT ====

		
		SELECT contestant_number,
		       contestant_name
		FROM
		  (SELECT LHS.vote_id AS vote_id,
		          LHS.phone_number AS phone_number,
		          LHS.state AS state,
		          LHS.contestant_number AS contestant_number,
		          LHS.created AS created,
		          LHS.contestant_name AS contestant_name
		   FROM
		     (SELECT LHS.vote_id AS vote_id,
		             LHS.phone_number AS phone_number,
		             LHS.state AS state,
		             LHS.contestant_number AS contestant_number,
		             LHS.created AS created,
		             RHS.contestant_name AS contestant_name
		      FROM votes AS LHS
		      INNER JOIN contestants AS RHS ON (LHS.contestant_number = RHS.contestant_number)) AS LHS
		   INNER JOIN
		     (SELECT MIN(vote_id) AS vote_id
		      FROM votes) AS RHS ON (LHS.vote_id = RHS.vote_id))
		ORDER BY contestant_number
		
		

	   contestant_number contestant_name
	0                  1   Ericka Dieter
Wrong output for fuzzied solution in instance db2csv/voter_1/0014_dev (850)
	EXPECTED OUTPUT ====

		SELECT T3.area_code
		FROM contestants AS T1
		JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number
		JOIN area_code_state AS T3 ON T2.state = T3.state
		WHERE T1.contestant_name = 'Tabatha Gehling' INTERSECT
		  SELECT T3.area_code
		  FROM contestants AS T1
		  JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number
		  JOIN area_code_state AS T3 ON T2.state = T3.state WHERE T1.contestant_name = 'Kelly Clauss'

	Empty DataFrame
	Columns: [area_code]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `area_code`
		FROM
		  (SELECT *
		   FROM
		     (SELECT `LHS`.`area_code` AS `area_code`,
		             `LHS`.`state` AS `state`,
		             `LHS`.`vote_id` AS `vote_id`,
		             `LHS`.`phone_number` AS `phone_number`,
		             `LHS`.`contestant_number` AS `contestant_number`,
		             `LHS`.`created` AS `created`,
		             `RHS`.`contestant_name` AS `contestant_name`
		      FROM
		        (SELECT `LHS`.`area_code` AS `area_code`,
		                `LHS`.`state` AS `state`,
		                `RHS`.`vote_id` AS `vote_id`,
		                `RHS`.`phone_number` AS `phone_number`,
		                `RHS`.`contestant_number` AS `contestant_number`,
		                `RHS`.`created` AS `created`
		         FROM `area_code_state` AS `LHS`
		         INNER JOIN `votes` AS `RHS` ON (`LHS`.`state` = `RHS`.`state`)) AS `LHS`
		      INNER JOIN `contestants` AS `RHS` ON (`LHS`.`contestant_number` = `RHS`.`contestant_number`))
		   WHERE (`contestant_name` != 'Kelly Clauss'))
		WHERE (`contestant_name` = 'Tabatha Gehling')
		ORDER BY area_code
		
		

	   area_code
	0        928
No solution for instance db2csv/world_1/0063_dev (853)
Wrong output for fuzzied solution in instance db2csv/world_1/0114_dev (854)
	EXPECTED OUTPUT ====

		SELECT LANGUAGE
		FROM countrylanguage
		GROUP BY LANGUAGE
		ORDER BY count(*) DESC
		LIMIT 1

	        language
	0  Songhai-zerma
	ACTUAL OUTPUT ====

		
		SELECT LANGUAGE
		FROM
		  (SELECT *
		   FROM countrylanguage AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM city AS RHS
		        WHERE (LHS.countrycode = RHS.countrycode) ))
		ORDER BY LANGUAGE
		
		

	               language
	0            1yvwgTamil
	1            2BnBUTamil
	2            6Ni8hTamil
	3            7KcAkanbak
	4                   Aka
	5                  Akan
	6                  Akan
	7                   Bug
	8                  Bugi
	9                  Bugi
	10                 Bugi
	11            Bugi4MNYS
	12               Burmes
	13              Burmese
	14              Burmese
	15  KamSonghai-zermarKn
	16   MCKkjSonghai-zerma
	17         Songhai-zerm
	18        Songhai-zerma
	19        Songhai-zerma
	20        Songhai-zerma
	21        Songhai-zerma
	22   Songhai-zerma(Am)c
	23   Songhai-zermawO sw
	24                Tamil
	25                Tamil
	26                Tamil
	27                Tamil
	28           TamilBt9VI
	29   ZZmAOSonghai-zerma
	30         ZhCMRBurmese
	31                 amil
	32                  kan
	33         onghai-zerma
	34               urmese
	35               urmese
No solution for instance db2csv/world_1/0100_dev (855)
No solution for instance db2csv/world_1/0067_dev (856)
No solution for instance db2csv/world_1/0064_dev (857)
No solution for instance db2csv/world_1/0025_dev (858)
No solution for instance db2csv/world_1/0047_dev (859)
No solution for instance db2csv/world_1/0011_dev (862)
Error while executing solution for instance db2csv/world_1/0031_dev (863)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT LANGUAGE) OVER () AS count_distinct_language_
FROM countrylanguage
ORDER BY count_distinct_language_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/world_1/0019_dev (864)
No solution for instance db2csv/world_1/0069_dev (865)
No solution for instance db2csv/world_1/0061_dev (866)
No solution for instance db2csv/world_1/0066_dev (868)
No solution for instance db2csv/world_1/0035_dev (869)
Wrong output for fuzzied solution in instance db2csv/world_1/0043_dev (870)
	EXPECTED OUTPUT ====

		SELECT COUNT(*)
		FROM
		  (SELECT T1.Name
		   FROM country AS T1
		   JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		   WHERE T2.Language = "English" INTERSECT
		     SELECT T1.Name
		     FROM country AS T1
		     JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = "Dutch")

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT `countrycode`
		   FROM `countrylanguage`
		   WHERE (`language` = 'English') INTERSECT
		     SELECT `countrycode`
		     FROM `countrylanguage` WHERE (`language` = 'Dutch'))
		ORDER BY count___
		
		

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance db2csv/world_1/0084_dev (871)
Error while executing solution for instance db2csv/world_1/0041_dev (872)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT continent
FROM
  (SELECT *
   FROM
     (SELECT code,
             name,
             continent,
             region,
             surfacearea,
             indepyear,
             population,
             lifeexpectancy,
             gnp,
             gnpold,
             localname,
             governmentform,
             headofstate,
             capital,
             code2,
             COUNT(DISTINCT continent) OVER () AS n_distinct
      FROM country) AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM country AS RHS
        WHERE (LHS.code2 = RHS.code2) ))
ORDER BY continent

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/world_1/0093_dev (873)
Error while executing solution for instance db2csv/world_1/0118_dev (874)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT COUNT(DISTINCT `language`) OVER () AS `count___`,
                                       `percentage` AS `max_percentage_`
FROM `countrylanguage`
WHERE (`language` = 'Spanish')
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/world_1/0030_dev (875)
Error while executing solution for instance db2csv/world_1/0033_dev (876)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `governmentform`) OVER () AS `count_distinct_governmentform_`
FROM `country`
WHERE (`continent` = 'Africa')
ORDER BY count_distinct_governmentform_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/world_1/0022_dev (878)
Wrong output for fuzzied solution in instance db2csv/world_1/0113_dev (879)
	EXPECTED OUTPUT ====

		SELECT LANGUAGE
		FROM countrylanguage
		GROUP BY LANGUAGE
		ORDER BY count(*) DESC
		LIMIT 1

	        language
	0  Songhai-zerma
	ACTUAL OUTPUT ====

		
		SELECT LANGUAGE
		FROM
		  (SELECT *
		   FROM countrylanguage AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM city AS RHS
		        WHERE (LHS.countrycode = RHS.countrycode) ))
		ORDER BY LANGUAGE
		
		

	               language
	0            1yvwgTamil
	1            2BnBUTamil
	2            6Ni8hTamil
	3            7KcAkanbak
	4                   Aka
	5                  Akan
	6                  Akan
	7                   Bug
	8                  Bugi
	9                  Bugi
	10                 Bugi
	11            Bugi4MNYS
	12               Burmes
	13              Burmese
	14              Burmese
	15  KamSonghai-zermarKn
	16   MCKkjSonghai-zerma
	17         Songhai-zerm
	18        Songhai-zerma
	19        Songhai-zerma
	20        Songhai-zerma
	21        Songhai-zerma
	22   Songhai-zerma(Am)c
	23   Songhai-zermawO sw
	24                Tamil
	25                Tamil
	26                Tamil
	27                Tamil
	28           TamilBt9VI
	29   ZZmAOSonghai-zerma
	30         ZhCMRBurmese
	31                 amil
	32                  kan
	33         onghai-zerma
	34               urmese
	35               urmese
No solution for instance db2csv/world_1/0082_dev (880)
No solution for instance db2csv/world_1/0083_dev (881)
No solution for instance db2csv/world_1/0095_dev (883)
Wrong output for fuzzied solution in instance db2csv/world_1/0026_dev (884)
	EXPECTED OUTPUT ====

		SELECT sum(SurfaceArea)
		FROM country
		WHERE Continent = "Asia"
		  OR Continent = "Europe"

	   sum(surfacearea)
	0        2878867.97
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT SUM(`surfacearea`) OVER () AS `sum_surfacearea_`
		FROM
		  (SELECT *
		   FROM `country` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT *
		              FROM `country`
		              WHERE (`continent` != 'Asia'))
		           WHERE (`continent` != 'Europe')) AS RHS
		        WHERE (LHS.name = RHS.name
		               AND LHS.surfacearea = RHS.surfacearea) ))
		ORDER BY sum_surfacearea_
		
		

	   sum_surfacearea_
	0        2556404.95
No solution for instance db2csv/world_1/0096_dev (885)
No solution for instance db2csv/world_1/0023_dev (887)
No solution for instance db2csv/world_1/0029_dev (889)
Error while executing solution for instance db2csv/world_1/0032_dev (890)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT LANGUAGE) OVER () AS count_distinct_language_
FROM countrylanguage
ORDER BY count_distinct_language_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/world_1/0055_dev (891)
No solution for instance db2csv/world_1/0111_dev (892)
No solution for instance db2csv/world_1/0053_dev (894)
No solution for instance db2csv/world_1/0092_dev (895)
No solution for instance db2csv/world_1/0006_dev (896)
No solution for instance db2csv/world_1/0074_dev (898)
No solution for instance db2csv/world_1/0097_dev (899)
No solution for instance db2csv/world_1/0085_dev (900)
No solution for instance db2csv/world_1/0054_dev (901)
No solution for instance db2csv/world_1/0037_dev (902)
Wrong output for base solution in instance db2csv/world_1/0040_dev (903)
	EXPECTED OUTPUT ====

	     name
	0  Canada
	ACTUAL OUTPUT ====

		SELECT T1.Name
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		GROUP BY T1.Name
		ORDER BY COUNT(*) DESC
		LIMIT 1

	            name
	0  United States
Wrong output for ground truth in instance db2csv/world_1/0040_dev (903)
No solution for instance db2csv/world_1/0101_dev (904)
No solution for instance db2csv/world_1/0086_dev (905)
No solution for instance db2csv/world_1/0020_dev (907)
Wrong output for base solution in instance db2csv/world_1/0087_dev (908)
	EXPECTED OUTPUT ====

	         name  surfacearea  indepyear
	0  Antarctica   13120000.0        NaN
	ACTUAL OUTPUT ====

		SELECT Name,
		       SurfaceArea,
		       IndepYear
		FROM country
		ORDER BY Population
		LIMIT 1

	         name  surfacearea indepyear
	0  Antarctica   13120000.0      None
Wrong output for ground truth in instance db2csv/world_1/0087_dev (908)
No solution for instance db2csv/world_1/0044_dev (909)
Error while getting results...

while parsing a block collection
  in "tests/db2csv/world_1/0005_dev.yaml", line 87, column 3
expected <block end>, but found '<scalar>'
  in "tests/db2csv/world_1/0005_dev.yaml", line 111, column 6
No solution for instance db2csv/world_1/0116_dev (911)
No solution for instance db2csv/world_1/0056_dev (913)
No solution for instance db2csv/world_1/0099_dev (914)
No solution for instance db2csv/world_1/0094_dev (916)
No solution for instance db2csv/world_1/0045_dev (917)
Error while executing solution for instance db2csv/world_1/0117_dev (918)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT COUNT(DISTINCT `language`) OVER () AS `count___`,
                                       `percentage` AS `max_percentage_`
FROM `countrylanguage`
WHERE (`language` = 'Spanish')
ORDER BY count___

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/world_1/0012_dev (919)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_5944.sqlite3'
No solution for instance db2csv/world_1/0060_dev (921)
Wrong output for base solution in instance db2csv/world_1/0088_dev (922)
	EXPECTED OUTPUT ====

	         name  surfacearea  indepyear
	0  Antarctica   13120000.0        NaN
	ACTUAL OUTPUT ====

		SELECT Name,
		       SurfaceArea,
		       IndepYear
		FROM country
		ORDER BY Population
		LIMIT 1

	         name  surfacearea indepyear
	0  Antarctica   13120000.0      None
Wrong output for ground truth in instance db2csv/world_1/0088_dev (922)
Wrong output for base solution in instance db2csv/world_1/0110_dev (923)
	EXPECTED OUTPUT ====

	   sum_population_  avg_surfacearea_
	0              NaN               NaN
	ACTUAL OUTPUT ====

		select sum(population),
		       avg(surfacearea)
		from country
		where continent = "north america"
		  and surfacearea > 3000

	  sum(population) avg(surfacearea)
	0            None             None
Wrong output for ground truth in instance db2csv/world_1/0110_dev (923)
No solution for instance db2csv/world_1/0065_dev (924)
No solution for instance db2csv/world_1/0104_dev (925)
No solution for instance db2csv/world_1/0038_dev (926)
No solution for instance db2csv/world_1/0075_dev (927)
No solution for instance db2csv/world_1/0081_dev (928)
No solution for instance db2csv/world_1/0068_dev (929)
No solution for instance db2csv/world_1/0108_dev (930)
No solution for instance db2csv/world_1/0103_dev (931)
No solution for instance db2csv/world_1/0090_dev (932)
Wrong output for fuzzied solution in instance db2csv/world_1/0036_dev (933)
	EXPECTED OUTPUT ====

		SELECT COUNT(T2.Language)
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		WHERE T1.Name = "Aruba"

	   count(t2.language)
	0                   0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count_t2_language_`
		FROM
		  (SELECT `countrycode`,
		          `language`,
		          `isofficial`,
		          `percentage`,
		          `name`,
		          `continent`,
		          `region`,
		          `surfacearea`,
		          `indepyear`,
		          `population`,
		          `lifeexpectancy`,
		          `gnp`,
		          `gnpold`,
		          `localname`,
		          `governmentform`,
		          `headofstate`,
		          `capital`,
		          `code2`,
		          `countrycode` AS `code`
		   FROM
		     (SELECT `LHS`.`countrycode` AS `countrycode`,
		             `LHS`.`language` AS `language`,
		             `LHS`.`isofficial` AS `isofficial`,
		             `LHS`.`percentage` AS `percentage`,
		             `RHS`.`name` AS `name`,
		             `RHS`.`continent` AS `continent`,
		             `RHS`.`region` AS `region`,
		             `RHS`.`surfacearea` AS `surfacearea`,
		             `RHS`.`indepyear` AS `indepyear`,
		             `RHS`.`population` AS `population`,
		             `RHS`.`lifeexpectancy` AS `lifeexpectancy`,
		             `RHS`.`gnp` AS `gnp`,
		             `RHS`.`gnpold` AS `gnpold`,
		             `RHS`.`localname` AS `localname`,
		             `RHS`.`governmentform` AS `governmentform`,
		             `RHS`.`headofstate` AS `headofstate`,
		             `RHS`.`capital` AS `capital`,
		             `RHS`.`code2` AS `code2`
		      FROM `countrylanguage` AS `LHS`
		      INNER JOIN `country` AS `RHS` ON (`LHS`.`countrycode` = `RHS`.`code`)))
		WHERE (`name` = 'Aruba')
		ORDER BY count_t2_language_
		
		

	Empty DataFrame
	Columns: [count_t2_language_]
	Index: []
No solution for instance db2csv/world_1/0072_dev (934)
Wrong output for fuzzied solution in instance db2csv/world_1/0091_dev (935)
	EXPECTED OUTPUT ====

		SELECT COUNT(T2.Language),
		       T1.Name
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		GROUP BY T1.Name
		HAVING COUNT(*) > 2

	   count(t2.language)                 name
	0                   3        ThailandgJNG5
	1                   4       2CqThailandp21
	2                   6   Antigua and Barbud
	3                   7     Marshall Islands
	4                   9  Antigua and Barbuda
	5                   9             Thailand
	6                  19              Ireland
	ACTUAL OUTPUT ====

		
		SELECT n AS count_t2_language_,
		       name
		FROM
		  (SELECT code,
		          name,
		          continent,
		          region,
		          surfacearea,
		          indepyear,
		          population,
		          lifeexpectancy,
		          gnp,
		          gnpold,
		          localname,
		          governmentform,
		          headofstate,
		          capital,
		          code2,
		          n,
		          code AS countrycode
		   FROM
		     (SELECT LHS.code AS code,
		             LHS.name AS name,
		             LHS.continent AS continent,
		             LHS.region AS region,
		             LHS.surfacearea AS surfacearea,
		             LHS.indepyear AS indepyear,
		             LHS.population AS population,
		             LHS.lifeexpectancy AS lifeexpectancy,
		             LHS.gnp AS gnp,
		             LHS.gnpold AS gnpold,
		             LHS.localname AS localname,
		             LHS.governmentform AS governmentform,
		             LHS.headofstate AS headofstate,
		             LHS.capital AS capital,
		             LHS.code2 AS code2,
		             RHS.n AS n
		      FROM country AS LHS
		      INNER JOIN
		        (SELECT countrycode,
		                COUNT() AS n
		         FROM countrylanguage
		         GROUP BY countrycode) AS RHS ON (LHS.code = RHS.countrycode)))
		WHERE (n >= 3.0)
		ORDER BY count_t2_language_
		
		

	    count_t2_language_                 name
	0                    3   Antigua and Barbud
	1                    3   Antigua and Barbud
	2                    3              Ireland
	3                    3     Marshall Islands
	4                    3     Marshall Islands
	5                    3             Thailand
	6                    3        ThailandgJNG5
	7                    4       2CqThailandp21
	8                    4              Ireland
	9                    4              Ireland
	10                   4              Ireland
	11                   6  Antigua and Barbuda
Wrong output for fuzzied solution in instance db2csv/world_1/0089_dev (936)
	EXPECTED OUTPUT ====

		SELECT Name,
		       population,
		       HeadOfState
		FROM country
		ORDER BY SurfaceArea DESC
		LIMIT 1

	                 name  population        headofstate
	0  Antigua and Barbud      473001  yRb14Margrethe II
	ACTUAL OUTPUT ====

		
		SELECT name,
		       population,
		       headofstate
		FROM
		  (SELECT LHS.code AS code,
		          LHS.name AS name,
		          LHS.continent AS continent,
		          LHS.region AS region,
		          LHS.surfacearea AS surfacearea,
		          LHS.indepyear AS indepyear,
		          LHS.population AS population,
		          LHS.lifeexpectancy AS lifeexpectancy,
		          LHS.gnp AS gnp,
		          LHS.gnpold AS gnpold,
		          LHS.localname AS localname,
		          LHS.governmentform AS governmentform,
		          LHS.headofstate AS headofstate,
		          LHS.capital AS capital,
		          LHS.code2 AS code2
		   FROM country AS LHS
		   INNER JOIN
		     (SELECT code,
		             name,
		             continent,
		             region,
		             MAX(surfacearea) OVER () AS surfacearea,
		                                   indepyear,
		                                   population,
		                                   lifeexpectancy,
		                                   gnp,
		                                   gnpold,
		                                   localname,
		                                   governmentform,
		                                   headofstate,
		                                   capital,
		                                   code2
		      FROM country) AS RHS ON (LHS.code = RHS.code
		                                  AND LHS.name = RHS.name
		                                  AND LHS.continent = RHS.continent
		                                  AND LHS.region = RHS.region
		                                  AND LHS.surfacearea = RHS.surfacearea
		                                  AND LHS.indepyear = RHS.indepyear
		                                  AND LHS.population = RHS.population
		                                  AND LHS.lifeexpectancy = RHS.lifeexpectancy
		                                  AND LHS.gnp = RHS.gnp
		                                  AND LHS.gnpold = RHS.gnpold
		                                  AND LHS.localname = RHS.localname
		                                  AND LHS.governmentform = RHS.governmentform
		                                  AND LHS.headofstate = RHS.headofstate
		                                  AND LHS.capital = RHS.capital
		                                  AND LHS.code2 = RHS.code2))
		ORDER BY name
		
		

	                  name  population         headofstate
	0  Antigua and Barbuda    66590999  gAZm3Tarja Halonen
	1   Antigua and Barbud      473001   yRb14Margrethe II
Wrong output for base solution in instance db2csv/world_1/0039_dev (937)
	EXPECTED OUTPUT ====

	     name
	0  Canada
	ACTUAL OUTPUT ====

		SELECT T1.Name
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		GROUP BY T1.Name
		ORDER BY COUNT(*) DESC
		LIMIT 1

	            name
	0  United States
Wrong output for ground truth in instance db2csv/world_1/0039_dev (937)
No solution for instance db2csv/world_1/0052_dev (938)
Wrong output for fuzzied solution in instance db2csv/world_1/0002_dev (940)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM country
		WHERE IndepYear > 1950

	                      name
	0           2CqThailandp21
	1       Antigua and Barbud
	2       Antigua and Barbud
	3      Antigua and Barbuda
	4      Antigua and Barbuda
	5      Antigua and Barbuda
	6      Antigua and Barbuda
	7      Antigua and Barbuda
	8                  Colombi
	9                 Colombia
	10                Colombia
	11           EWSGaThailand
	12  GZJMarshall IslandsTj2
	13   GsIUJMarshall Islands
	14                 Ireland
	15                 Ireland
	16                 Ireland
	17                 Ireland
	18            IrelandA7Y(m
	19  KAqMarshall IslandsCKn
	20        Marshall Islands
	21        Marshall Islands
	22        Marshall Islands
	23        Marshall Islands
	24  OgNMarshall Islandsf0n
	25                 Thailan
	26                Thailand
	27                Thailand
	28                Thailand
	29                Thailand
	30                Thailand
	31           ThailandTsXhj
	32           ThailandZso3B
	33                 hailand
	34            kxG42Ireland
	35                 olombia
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM country
		WHERE (indepyear >= 1950.0)
		ORDER BY name
		
		

	                         name
	0              2CqThailandp21
	1          Antigua and Barbud
	2          Antigua and Barbud
	3         Antigua and Barbuda
	4         Antigua and Barbuda
	5         Antigua and Barbuda
	6         Antigua and Barbuda
	7         Antigua and Barbuda
	8                     Colombi
	9                    Colombia
	10                   Colombia
	11              EWSGaThailand
	12     GZJMarshall IslandsTj2
	13      GsIUJMarshall Islands
	14                    Ireland
	15                    Ireland
	16                    Ireland
	17                    Ireland
	18               IrelandA7Y(m
	19     KAqMarshall IslandsCKn
	20           Marshall Islands
	21           Marshall Islands
	22           Marshall Islands
	23           Marshall Islands
	24     OgNMarshall Islandsf0n
	25  RM8Antigua and Barbuda)EB
	26                    Thailan
	27                   Thailand
	28                   Thailand
	29                   Thailand
	30                   Thailand
	31                   Thailand
	32              ThailandTsXhj
	33              ThailandZso3B
	34                    hailand
	35               kxG42Ireland
	36      nv)gWMarshall Islands
	37                    olombia
No solution for instance db2csv/world_1/0115_dev (942)
Wrong output for base solution in instance db2csv/world_1/0109_dev (946)
	EXPECTED OUTPUT ====

	   sum_population_  avg_surfacearea_
	0              NaN               NaN
	ACTUAL OUTPUT ====

		select sum(population),
		       avg(surfacearea)
		from country
		where continent = "north america"
		  and surfacearea > 3000

	  sum(population) avg(surfacearea)
	0            None             None
Wrong output for ground truth in instance db2csv/world_1/0109_dev (946)
No solution for instance db2csv/world_1/0051_dev (947)
No solution for instance db2csv/world_1/0042_dev (948)
No solution for instance db2csv/world_1/0057_dev (949)
Error while executing solution for instance db2csv/world_1/0034_dev (951)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `governmentform`) OVER () AS `count_distinct_governmentform_`
FROM `country`
WHERE (`continent` = 'Africa')
ORDER BY count_distinct_governmentform_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/world_1/0070_dev (952)
No solution for instance db2csv/world_1/0058_dev (954)
No solution for instance db2csv/world_1/0102_dev (955)
No solution for instance db2csv/world_1/0107_dev (956)
No solution for instance db2csv/world_1/0014_dev (958)
No solution for instance db2csv/world_1/0048_dev (959)
No solution for instance db2csv/world_1/0003_dev (960)
Wrong output for fuzzied solution in instance db2csv/world_1/0018_dev (961)
	EXPECTED OUTPUT ====

		SELECT avg(LifeExpectancy)
		FROM country
		WHERE Region = "Central Africa"

	  avg(lifeexpectancy)
	0                None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(`lifeexpectancy`) OVER () AS `avg_lifeexpectancy_`
		FROM `country`
		WHERE (`region` = 'Central Africa')
		ORDER BY avg_lifeexpectancy_
		
		

	Empty DataFrame
	Columns: [avg_lifeexpectancy_]
	Index: []
No solution for instance db2csv/world_1/0059_dev (962)
No solution for instance db2csv/world_1/0098_dev (963)
No solution for instance db2csv/world_1/0004_dev (964)
No solution for instance db2csv/world_1/0071_dev (965)
No solution for instance db2csv/world_1/0046_dev (966)
No solution for instance db2csv/world_1/0021_dev (967)
Error while getting results...

while parsing a block collection
  in "tests/db2csv/world_1/0106_dev.yaml", line 91, column 3
expected <block end>, but found '<scalar>'
  in "tests/db2csv/world_1/0106_dev.yaml", line 114, column 6
No solution for instance db2csv/world_1/0024_dev (969)
No solution for instance db2csv/world_1/0062_dev (971)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_5944.sqlite3'
No solution for instance db2csv/wta_1/0025_dev (973)
No solution for instance db2csv/wta_1/0047_dev (974)
No solution for instance db2csv/wta_1/0008_dev (975)
No solution for instance db2csv/wta_1/0011_dev (976)
No solution for instance db2csv/wta_1/0031_dev (977)
No solution for instance db2csv/wta_1/0019_dev (978)
Wrong output for base solution in instance db2csv/wta_1/0061_dev (979)
	EXPECTED OUTPUT ====

	   count___ hand
	0       487    L
	1       954  NaN
	2      5028    R
	3     14193    U
	ACTUAL OUTPUT ====

		SELECT count(*),
		       hand
		FROM players
		GROUP BY hand

	   count(*) hand
	0       487    L
	1       954     
	2      5028    R
	3     14193    U
Wrong output for ground truth in instance db2csv/wta_1/0061_dev (979)
Error while executing solution for instance db2csv/wta_1/0028_dev (980)

(sqlite3.OperationalError) Could not decode to UTF-8 column 'last_name' with text 'Treyes Albarrac��N'
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Error while checking ground truth in instance db2csv/wta_1/0028_dev (980)
Wrong output for base solution in instance db2csv/wta_1/0035_dev (981)
	EXPECTED OUTPUT ====

	        winner_name  winner_rank_points
	0  Angelique Kerber                7340
	ACTUAL OUTPUT ====

		SELECT winner_name,
		       winner_rank_points
		FROM matches
		GROUP BY winner_name
		ORDER BY count(*) DESC
		LIMIT 1

	        winner_name  winner_rank_points
	0  Angelique Kerber                3715
Wrong output for ground truth in instance db2csv/wta_1/0035_dev (981)
No solution for instance db2csv/wta_1/0041_dev (983)
No solution for instance db2csv/wta_1/0030_dev (984)
No solution for instance db2csv/wta_1/0033_dev (985)
Wrong output for fuzzied solution in instance db2csv/wta_1/0022_dev (986)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM matches
		WHERE YEAR = 2013
		  OR YEAR = 2016

	   count(*)
	0         9
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___
		FROM
		  (SELECT best_of,
		          draw_size,
		          loser_age,
		          loser_entry,
		          loser_hand,
		          loser_ht,
		          loser_id,
		          loser_ioc,
		          loser_name,
		          loser_rank,
		          loser_rank_points,
		          loser_seed,
		          match_num,
		          minutes,
		          round,
		          score,
		          surface,
		          tourney_date,
		          tourney_id,
		          tourney_level,
		          tourney_name,
		          winner_age,
		          winner_entry,
		          winner_hand,
		          winner_ht,
		          winner_id,
		          winner_ioc,
		          winner_name,
		          winner_rank,
		          winner_rank_points,
		          winner_seed,
		          YEAR,
		          COUNT(*) OVER () AS n
		   FROM
		     (SELECT *
		      FROM matches
		      WHERE (YEAR <= 2016.0)))
		WHERE (YEAR <= 2013.0)
		ORDER BY count___
		
		

	   count___
	0        27
No solution for instance db2csv/wta_1/0026_dev (987)
No solution for instance db2csv/wta_1/0050_dev (988)
No solution for instance db2csv/wta_1/0023_dev (989)
No solution for instance db2csv/wta_1/0032_dev (991)
No solution for instance db2csv/wta_1/0055_dev (992)
Error while executing solution for instance db2csv/wta_1/0016_dev (993)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT loser_name) OVER () AS count_distinct_loser_name_
FROM matches
ORDER BY count_distinct_loser_name_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Wrong output for base solution in instance db2csv/wta_1/0006_dev (995)
	EXPECTED OUTPUT ====

	     first_name  birth_date
	0       Pauline  19190806.0
	1      Gertrude  19230908.0
	2         Betty  19250415.0
	3         Doris  19250620.0
	4       Dorothy  19250703.0
	...         ...         ...
	2212        NaN         NaN
	2213        NaN         NaN
	2214        NaN         NaN
	2215        NaN         NaN
	2216        NaN         NaN
	
	[2217 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT first_name,
		       birth_date
		FROM players
		WHERE country_code = 'USA'

	     first_name birth_date
	0       Pauline   19190806
	1      Gertrude   19230908
	2         Betty   19250415
	3         Doris   19250620
	4       Dorothy   19250703
	...         ...        ...
	2212   Victoria           
	2213       Vija           
	2214   Virginia           
	2215      Wendy           
	2216      Wendy           
	
	[2217 rows x 2 columns]
Wrong output for ground truth in instance db2csv/wta_1/0006_dev (995)
No solution for instance db2csv/wta_1/0037_dev (998)
No solution for instance db2csv/wta_1/0040_dev (999)
Error while executing solution for instance db2csv/wta_1/0027_dev (1000)

(sqlite3.OperationalError) Could not decode to UTF-8 column 'last_name' with text 'Treyes Albarrac��N'
(Background on this error at: http://sqlalche.me/e/14/e3q8)
Error while checking ground truth in instance db2csv/wta_1/0027_dev (1000)
No solution for instance db2csv/wta_1/0020_dev (1001)
No solution for instance db2csv/wta_1/0044_dev (1002)
Wrong output for base solution in instance db2csv/wta_1/0005_dev (1003)
	EXPECTED OUTPUT ====

	     first_name  birth_date
	0       Pauline  19190806.0
	1      Gertrude  19230908.0
	2         Betty  19250415.0
	3         Doris  19250620.0
	4       Dorothy  19250703.0
	...         ...         ...
	2212        NaN         NaN
	2213        NaN         NaN
	2214        NaN         NaN
	2215        NaN         NaN
	2216        NaN         NaN
	
	[2217 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT first_name,
		       birth_date
		FROM players
		WHERE country_code = 'USA'

	     first_name birth_date
	0       Pauline   19190806
	1      Gertrude   19230908
	2         Betty   19250415
	3         Doris   19250620
	4       Dorothy   19250703
	...         ...        ...
	2212   Victoria           
	2213       Vija           
	2214   Virginia           
	2215      Wendy           
	2216      Wendy           
	
	[2217 rows x 2 columns]
Wrong output for ground truth in instance db2csv/wta_1/0005_dev (1003)
No solution for instance db2csv/wta_1/0007_dev (1004)
No solution for instance db2csv/wta_1/0056_dev (1005)
Error while executing solution for instance db2csv/wta_1/0015_dev (1006)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT loser_id) OVER () AS count_distinct_loser_name_
FROM matches
ORDER BY count_distinct_loser_name_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/wta_1/0060_dev (1009)
No solution for instance db2csv/wta_1/0038_dev (1010)
Wrong output for base solution in instance db2csv/wta_1/0036_dev (1011)
	EXPECTED OUTPUT ====

	        winner_name  winner_rank_points
	0  Angelique Kerber                7340
	ACTUAL OUTPUT ====

		SELECT winner_name,
		       winner_rank_points
		FROM matches
		GROUP BY winner_name
		ORDER BY count(*) DESC
		LIMIT 1

	        winner_name  winner_rank_points
	0  Angelique Kerber                3715
Wrong output for ground truth in instance db2csv/wta_1/0036_dev (1011)
Wrong output for fuzzied solution in instance db2csv/wta_1/0039_dev (1012)
	EXPECTED OUTPUT ====

		SELECT winner_name,
		       loser_name
		FROM matches
		ORDER BY minutes DESC
		LIMIT 1

	          winner_name           loser_name
	0  Petra KvitovalnGjk  Svetlana Kuznetsova
	ACTUAL OUTPUT ====

		
		SELECT winner_name,
		       loser_name
		FROM
		  (SELECT *
		   FROM matches AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT MAX(minutes) AS minutes
		           FROM matches) AS RHS
		        WHERE (LHS.minutes = RHS.minutes) ))
		ORDER BY winner_name
		
		

	                winner_name           loser_name
	0   Anastasia Pavlyuchenkov     Angelique Kerber
	1  Anastasia Pavlyuchenkova     Angelique Kerber
	2  Anastasia Pavlyuchenkova     Angelique Kerber
	3        Petra KvitovalnGjk  Svetlana Kuznetsova
	4               Sara Errani  Svetlana Kuznetsova
	5           Johanna Larsson      ngelique Kerber
No solution for instance db2csv/wta_1/0052_dev (1013)
No solution for instance db2csv/wta_1/0051_dev (1019)
Wrong output for fuzzied solution in instance db2csv/wta_1/0057_dev (1021)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT winner_name)
		FROM matches
		WHERE tourney_name = 'WTA Championships'
		  AND winner_hand = 'L'

	   count(distinct winner_name)
	0                            5
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count_distinct_winner_name_`
		FROM
		  (SELECT COUNT(DISTINCT `winner_hand`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM `matches`
		      WHERE (`tourney_name` != 'WTA Championships')))
		ORDER BY count_distinct_winner_name_
		
		

	   count_distinct_winner_name_
	0                           35
No solution for instance db2csv/wta_1/0034_dev (1022)
Error while executing solution for instance db2csv/wta_1/0058_dev (1023)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `winner_hand`) OVER () AS `count_distinct_winner_name_`
FROM `matches`
WHERE (`tourney_name` = 'WTA Championships')
ORDER BY count_distinct_winner_name_

]
(Background on this error at: http://sqlalche.me/e/14/e3q8)
No solution for instance db2csv/wta_1/0049_dev (1024)
No solution for instance db2csv/wta_1/0048_dev (1026)
No solution for instance db2csv/wta_1/0018_dev (1028)
No solution for instance db2csv/wta_1/0059_dev (1029)
Wrong output for fuzzied solution in instance db2csv/wta_1/0021_dev (1032)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM matches
		WHERE YEAR = 2013
		  OR YEAR = 2016

	   count(*)
	0         9
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___
		FROM
		  (SELECT best_of,
		          draw_size,
		          loser_age,
		          loser_entry,
		          loser_hand,
		          loser_ht,
		          loser_id,
		          loser_ioc,
		          loser_name,
		          loser_rank,
		          loser_rank_points,
		          loser_seed,
		          match_num,
		          minutes,
		          round,
		          score,
		          surface,
		          tourney_date,
		          tourney_id,
		          tourney_level,
		          tourney_name,
		          winner_age,
		          winner_entry,
		          winner_hand,
		          winner_ht,
		          winner_id,
		          winner_ioc,
		          winner_name,
		          winner_rank,
		          winner_rank_points,
		          winner_seed,
		          YEAR,
		          COUNT(*) OVER () AS n
		   FROM
		     (SELECT *
		      FROM matches
		      WHERE (YEAR <= 2016.0)))
		WHERE (YEAR <= 2013.0)
		ORDER BY count___
		
		

	   count___
	0        27
No solution for instance db2csv/wta_1/0024_dev (1033)
Wrong output for base solution in instance db2csv/wta_1/0062_dev (1034)
	EXPECTED OUTPUT ====

	   count___ hand
	0       487    L
	1       954  NaN
	2      5028    R
	3     14193    U
	ACTUAL OUTPUT ====

		SELECT count(*),
		       hand
		FROM players
		GROUP BY hand

	   count(*) hand
	0       487    L
	1       954     
	2      5028    R
	3     14193    U
Wrong output for ground truth in instance db2csv/wta_1/0062_dev (1034)
