Starting log for run c62_16_full
No database for instance scythe/recent_posts/011 (1)
No database for instance scythe/recent_posts/022 (2)
No solution for instance scythe/recent_posts/026 (3)
No solution for instance scythe/recent_posts/033 (4)
No solution for instance scythe/recent_posts/046 (5)
No solution for instance scythe/recent_posts/051 (6)
No solution for instance scythe/recent_posts/050 (7)
No solution for instance scythe/recent_posts/012 (8)
No solution for instance scythe/recent_posts/039 (9)
No database for instance scythe/recent_posts/040 (10)
No solution for instance scythe/recent_posts/020 (11)
No database for instance scythe/recent_posts/003 (12)
No solution for instance scythe/recent_posts/002 (13)
No solution for instance scythe/recent_posts/016 (14)
No database for instance scythe/recent_posts/045 (15)
No database for instance scythe/recent_posts/005 (16)
No database for instance scythe/recent_posts/028 (17)
No solution for instance scythe/recent_posts/024 (18)
No database for instance scythe/recent_posts/004 (19)
No database for instance scythe/recent_posts/032 (20)
No solution for instance scythe/recent_posts/027 (21)
No solution for instance scythe/recent_posts/037 (22)
No solution for instance scythe/recent_posts/017 (23)
No solution for instance scythe/recent_posts/014 (24)
No solution for instance scythe/recent_posts/035 (25)
No solution for instance scythe/recent_posts/019 (26)
No database for instance scythe/recent_posts/043 (27)
No solution for instance scythe/recent_posts/013 (28)
No solution for instance scythe/recent_posts/015 (29)
No solution for instance scythe/recent_posts/049 (30)
No database for instance scythe/recent_posts/021 (31)
No solution for instance scythe/recent_posts/023 (32)
No solution for instance scythe/recent_posts/006 (33)
No database for instance scythe/recent_posts/031 (34)
No solution for instance scythe/recent_posts/030 (35)
No solution for instance scythe/recent_posts/047 (36)
No solution for instance scythe/recent_posts/010 (37)
No solution for instance scythe/recent_posts/025 (38)
No database for instance scythe/recent_posts/007 (39)
No solution for instance scythe/recent_posts/001 (40)
No solution for instance scythe/recent_posts/008 (41)
No solution for instance scythe/recent_posts/048 (42)
No solution for instance scythe/recent_posts/029 (43)
No database for instance scythe/recent_posts/034 (44)
No database for instance scythe/recent_posts/044 (45)
No solution for instance scythe/recent_posts/041 (46)
No database for instance scythe/recent_posts/009 (47)
No database for instance scythe/recent_posts/042 (48)
No database for instance scythe/recent_posts/036 (49)
No database for instance scythe/recent_posts/038 (50)
No solution for instance scythe/recent_posts/018 (51)
No database for instance scythe/top_rated_posts/011 (52)
No database for instance scythe/top_rated_posts/022 (53)
No solution for instance scythe/top_rated_posts/026 (54)
No solution for instance scythe/top_rated_posts/033 (55)
No ground truth for instance scythe/top_rated_posts/046 (56)
No database for instance scythe/top_rated_posts/051 (57)
No database for instance scythe/top_rated_posts/050 (58)
No solution for instance scythe/top_rated_posts/012 (59)
No database for instance scythe/top_rated_posts/039 (60)
No solution for instance scythe/top_rated_posts/052 (61)
No solution for instance scythe/top_rated_posts/056 (62)
No database for instance scythe/top_rated_posts/040 (63)
No database for instance scythe/top_rated_posts/057 (64)
No solution for instance scythe/top_rated_posts/020 (65)
No database for instance scythe/top_rated_posts/003 (66)
No database for instance scythe/top_rated_posts/002 (67)
No database for instance scythe/top_rated_posts/016 (68)
No database for instance scythe/top_rated_posts/045 (69)
No database for instance scythe/top_rated_posts/005 (70)
No solution for instance scythe/top_rated_posts/055 (71)
No database for instance scythe/top_rated_posts/028 (72)
No solution for instance scythe/top_rated_posts/024 (73)
No database for instance scythe/top_rated_posts/004 (74)
No database for instance scythe/top_rated_posts/032 (75)
No database for instance scythe/top_rated_posts/027 (76)
No database for instance scythe/top_rated_posts/037 (77)
No solution for instance scythe/top_rated_posts/017 (78)
No database for instance scythe/top_rated_posts/014 (79)
No solution for instance scythe/top_rated_posts/035 (80)
No database for instance scythe/top_rated_posts/019 (81)
No database for instance scythe/top_rated_posts/043 (82)
No database for instance scythe/top_rated_posts/013 (83)
No solution for instance scythe/top_rated_posts/015 (84)
No database for instance scythe/top_rated_posts/049 (85)
No database for instance scythe/top_rated_posts/021 (86)
No database for instance scythe/top_rated_posts/023 (87)
No database for instance scythe/top_rated_posts/006 (88)
No solution for instance scythe/top_rated_posts/031 (89)
No solution for instance scythe/top_rated_posts/030 (90)
No database for instance scythe/top_rated_posts/047 (91)
No database for instance scythe/top_rated_posts/010 (92)
No database for instance scythe/top_rated_posts/025 (93)
No solution for instance scythe/top_rated_posts/007 (94)
No database for instance scythe/top_rated_posts/001 (95)
No solution for instance scythe/top_rated_posts/008 (96)
No database for instance scythe/top_rated_posts/048 (97)
No database for instance scythe/top_rated_posts/029 (98)
No solution for instance scythe/top_rated_posts/034 (99)
No solution for instance scythe/top_rated_posts/053 (100)
No database for instance scythe/top_rated_posts/044 (101)
No solution for instance scythe/top_rated_posts/041 (102)
No database for instance scythe/top_rated_posts/009 (103)
No solution for instance scythe/top_rated_posts/042 (104)
No database for instance scythe/top_rated_posts/036 (105)
No solution for instance scythe/top_rated_posts/054 (106)
No database for instance scythe/top_rated_posts/038 (107)
No solution for instance scythe/top_rated_posts/018 (108)
No solution for instance 55-tests/46 (109)
No database for instance 55-tests/1 (110)
No database for instance 55-tests/12 (111)
No ground truth for instance 55-tests/24 (112)
No ground truth for instance 55-tests/43 (113)
No ground truth for instance 55-tests/27 (114)
No database for instance 55-tests/14 (115)
No ground truth for instance 55-tests/23 (116)
No ground truth for instance 55-tests/40 (117)
No database for instance 55-tests/4 (118)
No ground truth for instance 55-tests/20 (119)
No database for instance 55-tests/8 (120)
No ground truth for instance 55-tests/44 (121)
No ground truth for instance 55-tests/35 (122)
No database for instance 55-tests/16 (123)
No database for instance 55-tests/10 (124)
No ground truth for instance 55-tests/21 (125)
No database for instance 55-tests/18 (126)
No ground truth for instance 55-tests/52 (127)
No database for instance 55-tests/3 (128)
No ground truth for instance 55-tests/29 (129)
No ground truth for instance 55-tests/36 (130)
No ground truth for instance 55-tests/37 (131)
No database for instance 55-tests/6 (132)
No ground truth for instance 55-tests/55 (133)
No ground truth for instance 55-tests/30 (134)
No ground truth for instance 55-tests/39 (135)
No ground truth for instance 55-tests/38 (136)
No ground truth for instance 55-tests/53 (137)
No ground truth for instance 55-tests/54 (138)
No solution for instance 55-tests/25 (139)
No database for instance 55-tests/11 (140)
No database for instance 55-tests/7 (141)
No database for instance 55-tests/5 (142)
No ground truth for instance 55-tests/51 (143)
No ground truth for instance 55-tests/32 (144)
No ground truth for instance 55-tests/48 (145)
No ground truth for instance 55-tests/28 (146)
No ground truth for instance 55-tests/47 (147)
No database for instance 55-tests/13 (148)
No ground truth for instance 55-tests/33 (149)
No ground truth for instance 55-tests/34 (150)
No ground truth for instance 55-tests/26 (151)
No ground truth for instance 55-tests/45 (152)
No ground truth for instance 55-tests/42 (153)
No database for instance 55-tests/2 (154)
No ground truth for instance 55-tests/41 (155)
No database for instance 55-tests/17 (156)
No ground truth for instance 55-tests/49 (157)
No solution for instance 55-tests/22 (158)
No database for instance 55-tests/19 (159)
No database for instance 55-tests/15 (160)
No ground truth for instance 55-tests/31 (161)
No database for instance 55-tests/9 (162)
No ground truth for instance 55-tests/50 (163)
Wrong output for fuzzied solution in instance spider/club_1/0033 (164)
	EXPECTED OUTPUT ====

		SELECT avg(t3.age)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t1.clubname = "Bootup Baltimore"

	  avg(t3.age)
	0        None
	ACTUAL OUTPUT ====

		
		SELECT `meanage` AS `avg_t3_age_`
		FROM
		  (SELECT `clubname`,
		          `major`,
		          AVG(`age`) AS `meanage`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`clubid` AS `clubid`,
		             `LHS`.`clubname` AS `clubname`,
		             `LHS`.`clubdesc` AS `clubdesc`,
		             `LHS`.`clublocation` AS `clublocation`,
		             `LHS`.`position` AS `position`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `LHS`.`clubid` AS `clubid`,
		                `LHS`.`clubname` AS `clubname`,
		                `LHS`.`clubdesc` AS `clubdesc`,
		                `LHS`.`clublocation` AS `clublocation`,
		                `RHS`.`position` AS `position`
		         FROM
		           (SELECT `LHS`.`stuid` AS `stuid`,
		                   `LHS`.`lname` AS `lname`,
		                   `LHS`.`fname` AS `fname`,
		                   `LHS`.`age` AS `age`,
		                   `LHS`.`sex` AS `sex`,
		                   `LHS`.`major` AS `major`,
		                   `LHS`.`advisor` AS `advisor`,
		                   `LHS`.`city_code` AS `city_code`,
		                   `RHS`.`clubid` AS `clubid`,
		                   `RHS`.`clubname` AS `clubname`,
		                   `RHS`.`clubdesc` AS `clubdesc`,
		                   `RHS`.`clublocation` AS `clublocation`
		            FROM `student` AS `LHS`
		            CROSS JOIN `club` AS `RHS`) AS `LHS`
		         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                                     AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `club`
		         WHERE (`clubname` = 'Bootup Baltimore')) AS RHS ON (LHS.clubid = RHS.clubid
		                                                             AND LHS.clubname = RHS.clubname
		                                                             AND LHS.clubdesc = RHS.clubdesc
		                                                             AND LHS.clublocation = RHS.clublocation))
		   GROUP BY clubname,
		            major)
		ORDER BY avg_t3_age_

	Empty DataFrame
	Columns: [avg_t3_age_]
	Index: []
Wrong output for fuzzied solution in instance spider/club_1/0002 (165)
	EXPECTED OUTPUT ====

		SELECT clubname
		FROM club

	               clubname
	0     B1ETennis Clubfy)
	1  Pen and Paper Gaming
	2  Pen and Paper Gaming
	3           Tennis Club
	4   en and Paper Gaming
	5      p9IqtTennis Club
	ACTUAL OUTPUT ====

		
		SELECT clubname
		FROM
		  (SELECT clubname
		   FROM club INTERSECT SELECT clubname
		   FROM club)
		ORDER BY clubname

	               clubname
	0     B1ETennis Clubfy)
	1  Pen and Paper Gaming
	2           Tennis Club
	3   en and Paper Gaming
	4      p9IqtTennis Club
Wrong output for fuzzied solution in instance spider/club_1/0027 (169)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t1.clubname = "Bootup Baltimore"
		  AND t3.age < 18

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT `clublocation`,
		          COUNT(DISTINCT `age`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `LHS`.`clubid` AS `clubid`,
		                `LHS`.`clubname` AS `clubname`,
		                `LHS`.`clubdesc` AS `clubdesc`,
		                `LHS`.`clublocation` AS `clublocation`,
		                `RHS`.`position` AS `position`
		         FROM
		           (SELECT `LHS`.`stuid` AS `stuid`,
		                   `LHS`.`lname` AS `lname`,
		                   `LHS`.`fname` AS `fname`,
		                   `LHS`.`age` AS `age`,
		                   `LHS`.`sex` AS `sex`,
		                   `LHS`.`major` AS `major`,
		                   `LHS`.`advisor` AS `advisor`,
		                   `LHS`.`city_code` AS `city_code`,
		                   `RHS`.`clubid` AS `clubid`,
		                   `RHS`.`clubname` AS `clubname`,
		                   `RHS`.`clubdesc` AS `clubdesc`,
		                   `RHS`.`clublocation` AS `clublocation`
		            FROM `student` AS `LHS`
		            CROSS JOIN `club` AS `RHS`) AS `LHS`
		         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                                     AND `LHS`.`clubid` = `RHS`.`clubid`))
		      WHERE (`clubname` = 'Bootup Baltimore'
		             AND age = 18))
		   GROUP BY clublocation)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/club_1/0022 (170)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM club
		WHERE clublocation = "HHH"

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `clubid`,
		          `clublocation`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `club`
		      WHERE (`clublocation` = 'HHH'))
		   GROUP BY clubid,
		            clublocation)
		ORDER BY count___

	   count___
	0         1
	1         1
Wrong output for fuzzied solution in instance spider/club_1/0030 (171)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT t1.clubname)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t3.fname = "Eric"
		  AND t3.lname = "Tai"

	   count(distinct t1.clubname)
	0                            4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count_distinct_t1_clubname_`
		FROM
		  (SELECT `LHS`.`clubid` AS `clubid`,
		          `LHS`.`clubname` AS `clubname`,
		          `LHS`.`clubdesc` AS `clubdesc`,
		          `LHS`.`clublocation` AS `clublocation`,
		          `LHS`.`stuid` AS `stuid`,
		          `LHS`.`position` AS `position`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`clubid` AS `clubid`,
		             `LHS`.`clubname` AS `clubname`,
		             `LHS`.`clubdesc` AS `clubdesc`,
		             `LHS`.`clublocation` AS `clublocation`,
		             `RHS`.`stuid` AS `stuid`,
		             `RHS`.`position` AS `position`
		      FROM `club` AS `LHS`
		      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`
		   CROSS JOIN
		     (SELECT COUNT() AS `n`
		      FROM `student`
		      WHERE (`fname` != 'Eric'
		             AND `lname` = 'Tai')) AS RHS)
		ORDER BY count_distinct_t1_clubname_

	   count_distinct_t1_clubname_
	0                            0
Wrong output for fuzzied solution in instance spider/club_1/0013 (172)
	EXPECTED OUTPUT ====

		SELECT t3.fname,
		       t3.lname
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t1.clubname = "Bootup Baltimore"
		  AND t3.major = "600"

	   fname   lname
	0     Ia     Pan
	1     Ia     Pan
	2  Sarah  Wilson
	ACTUAL OUTPUT ====

		
		SELECT `fname`,
		       `lname`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`clubid` AS `clubid`,
		                `RHS`.`clubname` AS `clubname`,
		                `RHS`.`clubdesc` AS `clubdesc`,
		                `RHS`.`clublocation` AS `clublocation`
		         FROM `student` AS `LHS`
		         CROSS JOIN `club` AS `RHS`)
		      WHERE (`clubname` = 'Bootup Baltimore'
		             OR major < 600)) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM member_of_club AS RHS
		        WHERE (LHS.stuid = RHS.stuid
		               AND LHS.clubid = RHS.clubid) ))
		ORDER BY fname

	         fname           lname
	0       Arthur  YMCLeightonMrg
	1         Eric             Lee
	2         Eric       bPoTqPang
	3    GFRIanUVZ           Wilso
	4    GFRIanUVZ           Wilso
	5    GFRIanUVZ           Wilso
	6    GFRIanUVZ           Wilso
	7    GFRIanUVZ           Wilso
	8           Ia             Pan
	9        Jandy        gUdkrLee
	10       Jandy        gUdkrLee
	11       Jandy        gUdkrLee
	12       Jandy        gUdkrLee
	13       Jandy        gUdkrLee
	14       Jandy        gUdkrLee
	15       Sarah        LeeGsfSj
	16       Sarah        LeeGsfSj
	17       Sarah        LeeGsfSj
	18       Sarah        LeeGsfSj
	19       Sarah        LeeGsfSj
	20       Sarah  TITLeighton7FE
	21       Sarah  TITLeighton7FE
	22       Sarah  TITLeighton7FE
	23       Sarah  TITLeighton7FE
	24       Sarah  TITLeighton7FE
	25       Sarah  TITLeighton7FE
	26       Sarah          Wilson
	27  SarahW9jZ1             Lee
Wrong output for fuzzied solution in instance spider/club_1/0026 (175)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t1.clubname = "Bootup Baltimore"
		  AND t3.age > 18

	   count(*)
	0        20
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `age`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `LHS`.`clubid` AS `clubid`,
		                `LHS`.`clubname` AS `clubname`,
		                `LHS`.`clubdesc` AS `clubdesc`,
		                `LHS`.`clublocation` AS `clublocation`,
		                `RHS`.`position` AS `position`
		         FROM
		           (SELECT `LHS`.`stuid` AS `stuid`,
		                   `LHS`.`lname` AS `lname`,
		                   `LHS`.`fname` AS `fname`,
		                   `LHS`.`age` AS `age`,
		                   `LHS`.`sex` AS `sex`,
		                   `LHS`.`major` AS `major`,
		                   `LHS`.`advisor` AS `advisor`,
		                   `LHS`.`city_code` AS `city_code`,
		                   `RHS`.`clubid` AS `clubid`,
		                   `RHS`.`clubname` AS `clubname`,
		                   `RHS`.`clubdesc` AS `clubdesc`,
		                   `RHS`.`clublocation` AS `clublocation`
		            FROM `student` AS `LHS`
		            CROSS JOIN `club` AS `RHS`) AS `LHS`
		         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                                     AND `LHS`.`clubid` = `RHS`.`clubid`))
		      WHERE (`clubname` = 'Bootup Baltimore'
		             AND age > 18)))
		ORDER BY count___

	   count___
	0         8
Wrong output for fuzzied solution in instance spider/club_1/0015 (176)
	EXPECTED OUTPUT ====

		SELECT t1.clubname
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t3.sex = "F"
		GROUP BY t1.clubname
		ORDER BY count(*) DESC
		LIMIT 1

	      clubname
	0  Tennis Club
	ACTUAL OUTPUT ====

		
		SELECT `clubname`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`clubid` AS `clubid`,
		          `LHS`.`clubname` AS `clubname`,
		          `LHS`.`clubdesc` AS `clubdesc`,
		          `LHS`.`clublocation` AS `clublocation`,
		          `LHS`.`position` AS `position`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`clubid` AS `clubid`,
		             `LHS`.`clubname` AS `clubname`,
		             `LHS`.`clubdesc` AS `clubdesc`,
		             `LHS`.`clublocation` AS `clublocation`,
		             `RHS`.`position` AS `position`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`clubid` AS `clubid`,
		                `RHS`.`clubname` AS `clubname`,
		                `RHS`.`clubdesc` AS `clubdesc`,
		                `RHS`.`clublocation` AS `clublocation`
		         FROM `student` AS `LHS`
		         CROSS JOIN `club` AS `RHS`) AS `LHS`
		      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                                  AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`
		   INNER JOIN
		     (SELECT `city_code`,
		             `sex`,
		             COUNT() AS `n`
		      FROM `student`
		      GROUP BY `city_code`,
		               `sex`) AS `RHS` ON (`LHS`.`sex` = `RHS`.`sex`
		                                   AND `LHS`.`city_code` = `RHS`.`city_code`))
		WHERE (`sex` = 'F'
		       AND n = 1)
		ORDER BY clubname

	               clubname
	0   Pen and Paper Gamin
	1   Pen and Paper Gamin
	2   Pen and Paper Gamin
	3   Pen and Paper Gamin
	4   Pen and Paper Gamin
	5   Pen and Paper Gamin
	6   Pen and Paper Gamin
	7   Pen and Paper Gamin
	8           Tennis Club
	9           Tennis Club
	10          Tennis Club
	11          Tennis Club
	12          Tennis Club
	13          Tennis Club
	14          Tennis Club
	15          Tennis Club
	16          Tennis Club
	17          Tennis Club
	18          Tennis Club
	19          Tennis Club
	20  en and Paper Gaming
	21  en and Paper Gaming
	22  en and Paper Gaming
	23  en and Paper Gaming
	24           ennis Club
	25           ennis Club
Wrong output for fuzzied solution in instance spider/club_1/0032 (179)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t1.clubname
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t3.advisor = 1121

	                 clubname
	0   8Olk8Bootup Baltimore
	1        Bootup Baltimore
	2  QJrBootup BaltimoreHXR
	3   ZDEBqBootup Baltimore
	4        cHdUlO0S72GkK795
	5  d0MBootup BaltimorewrP
	ACTUAL OUTPUT ====

		
		SELECT clubname
		FROM
		  (SELECT LHS.clubid AS clubid,
		          LHS.clubname AS clubname,
		          LHS.clubdesc AS clubdesc,
		          LHS.clublocation AS clublocation,
		          LHS.stuid AS stuid,
		          LHS.position AS POSITION,
		          RHS.lname AS lname,
		          RHS.fname AS fname,
		          RHS.age AS age,
		          RHS.sex AS sex,
		          RHS.major AS major,
		          RHS.advisor AS advisor,
		          RHS.city_code AS city_code
		   FROM
		     (SELECT LHS.clubid AS clubid,
		             LHS.clubname AS clubname,
		             LHS.clubdesc AS clubdesc,
		             LHS.clublocation AS clublocation,
		             RHS.stuid AS stuid,
		             RHS.position AS POSITION
		      FROM club AS LHS
		      INNER JOIN member_of_club AS RHS ON (LHS.clubid = RHS.clubid)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM student
		      WHERE (advisor <= 1121)) AS RHS ON (LHS.stuid = RHS.stuid))
		ORDER BY clubname

	                  clubname
	0    8Olk8Bootup Baltimore
	1         Bootup Baltimore
	2         Bootup Baltimore
	3         Bootup Baltimore
	4         Bootup Baltimore
	5         Bootup Baltimore
	6    Bootup BaltimoreCeWVR
	7    Bootup BaltimoreCeWVR
	8    I0OvSBootup Baltimore
	9   QJrBootup BaltimoreHXR
	10   ZDEBqBootup Baltimore
	11        cHdUlO0S72GkK795
	12  d0MBootup BaltimorewrP
	13  isOBootup BaltimoreNQq
Wrong output for fuzzied solution in instance spider/club_1/0035 (181)
	EXPECTED OUTPUT ====

		SELECT avg(t3.age)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t1.clubname = "Tennis Club"

	   avg(t3.age)
	0      17.6875
	ACTUAL OUTPUT ====

		
		SELECT `age` AS `avg_t3_age_`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`clubid` AS `clubid`,
		          `LHS`.`clubname` AS `clubname`,
		          `LHS`.`clubdesc` AS `clubdesc`,
		          `LHS`.`clublocation` AS `clublocation`,
		          `LHS`.`position` AS `position`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`clubid` AS `clubid`,
		             `LHS`.`clubname` AS `clubname`,
		             `LHS`.`clubdesc` AS `clubdesc`,
		             `LHS`.`clublocation` AS `clublocation`,
		             `RHS`.`position` AS `position`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`clubid` AS `clubid`,
		                `RHS`.`clubname` AS `clubname`,
		                `RHS`.`clubdesc` AS `clubdesc`,
		                `RHS`.`clublocation` AS `clublocation`
		         FROM `student` AS `LHS`
		         CROSS JOIN `club` AS `RHS`) AS `LHS`
		      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                                  AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `club`
		      WHERE (`clubname` = 'Tennis Club')) AS RHS ON (LHS.clubid = RHS.clubid
		                                                     AND LHS.clubname = RHS.clubname
		                                                     AND LHS.clubdesc = RHS.clubdesc
		                                                     AND LHS.clublocation = RHS.clublocation))
		ORDER BY avg_t3_age_

	    avg_t3_age_
	0            15
	1            15
	2            15
	3            17
	4            17
	5            17
	6            17
	7            17
	8            18
	9            18
	10           19
	11           19
	12           19
	13           20
	14           20
	15           20
Wrong output for fuzzied solution in instance spider/club_1/0020 (182)
	EXPECTED OUTPUT ====

		SELECT clublocation
		FROM club
		WHERE clubname = "Hopkins Student Enterprises"

	  clublocation
	0          HHH
	1          HHH
	2    p1)HHH5zQ
	ACTUAL OUTPUT ====

		
		SELECT `clublocation`
		FROM
		  (SELECT `clublocation`
		   FROM `club`
		   WHERE (`clubname` = 'Hopkins Student Enterprises') INTERSECT
		     SELECT `clublocation`
		     FROM `club` WHERE (`clubname` = 'Hopkins Student Enterprises'))
		ORDER BY clublocation

	  clublocation
	0          HHH
	1    p1)HHH5zQ
Wrong output for fuzzied solution in instance spider/club_1/0019 (183)
	EXPECTED OUTPUT ====

		SELECT clublocation
		FROM club
		WHERE clubname = "Pen and Paper Gaming"

	  clublocation
	0           AK
	1          AKW
	2          AKW
	3     AKWXUcul
	4    ywaAKWNsx
	ACTUAL OUTPUT ====

		
		SELECT `clublocation`
		FROM
		  (SELECT `clublocation`
		   FROM `club`
		   WHERE (`clubname` = 'Pen and Paper Gaming') INTERSECT
		     SELECT `clublocation`
		     FROM `club` WHERE (`clubname` = 'Pen and Paper Gaming'))
		ORDER BY clublocation

	  clublocation
	0           AK
	1          AKW
	2     AKWXUcul
	3    ywaAKWNsx
Wrong output for fuzzied solution in instance spider/club_1/0007 (184)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t1.clubname = "Tennis Club"

	   count(*)
	0        16
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT `position`,
		          COUNT(DISTINCT `clubname`) AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`clubid` AS `clubid`,
		             `LHS`.`clubname` AS `clubname`,
		             `LHS`.`clubdesc` AS `clubdesc`,
		             `LHS`.`clublocation` AS `clublocation`,
		             `LHS`.`position` AS `position`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `LHS`.`clubid` AS `clubid`,
		                `LHS`.`clubname` AS `clubname`,
		                `LHS`.`clubdesc` AS `clubdesc`,
		                `LHS`.`clublocation` AS `clublocation`,
		                `RHS`.`position` AS `position`
		         FROM
		           (SELECT `LHS`.`stuid` AS `stuid`,
		                   `LHS`.`lname` AS `lname`,
		                   `LHS`.`fname` AS `fname`,
		                   `LHS`.`age` AS `age`,
		                   `LHS`.`sex` AS `sex`,
		                   `LHS`.`major` AS `major`,
		                   `LHS`.`advisor` AS `advisor`,
		                   `LHS`.`city_code` AS `city_code`,
		                   `RHS`.`clubid` AS `clubid`,
		                   `RHS`.`clubname` AS `clubname`,
		                   `RHS`.`clubdesc` AS `clubdesc`,
		                   `RHS`.`clublocation` AS `clublocation`
		            FROM `student` AS `LHS`
		            CROSS JOIN `club` AS `RHS`) AS `LHS`
		         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                                     AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `club`
		         WHERE (`clubname` = 'Tennis Club')) AS RHS ON (LHS.clubid = RHS.clubid
		                                                        AND LHS.clubname = RHS.clubname
		                                                        AND LHS.clubdesc = RHS.clubdesc
		                                                        AND LHS.clublocation = RHS.clublocation))
		   GROUP BY POSITION)
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
	3         1
	4         1
	5         1
	6         1
	7         1
	8         1
Wrong output for fuzzied solution in instance spider/club_1/0034 (185)
	EXPECTED OUTPUT ====

		SELECT avg(t3.age)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t1.clubname = "Hopkins Student Enterprises"

	  avg(t3.age)
	0        None
	ACTUAL OUTPUT ====

		
		SELECT `age` AS `avg_t3_age_`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`clubid` AS `clubid`,
		          `LHS`.`clubname` AS `clubname`,
		          `LHS`.`clubdesc` AS `clubdesc`,
		          `LHS`.`clublocation` AS `clublocation`,
		          `LHS`.`position` AS `position`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`clubid` AS `clubid`,
		             `LHS`.`clubname` AS `clubname`,
		             `LHS`.`clubdesc` AS `clubdesc`,
		             `LHS`.`clublocation` AS `clublocation`,
		             `RHS`.`position` AS `position`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`clubid` AS `clubid`,
		                `RHS`.`clubname` AS `clubname`,
		                `RHS`.`clubdesc` AS `clubdesc`,
		                `RHS`.`clublocation` AS `clublocation`
		         FROM `student` AS `LHS`
		         CROSS JOIN `club` AS `RHS`) AS `LHS`
		      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                                  AND `LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `club`
		      WHERE (`clubname` = 'Hopkins Student Enterprises')) AS RHS ON (LHS.clubid = RHS.clubid
		                                                                     AND LHS.clubname = RHS.clubname
		                                                                     AND LHS.clubdesc = RHS.clubdesc
		                                                                     AND LHS.clublocation = RHS.clublocation))
		ORDER BY avg_t3_age_

	Empty DataFrame
	Columns: [avg_t3_age_]
	Index: []
Wrong output for fuzzied solution in instance spider/club_1/0001 (189)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM club

	   count(*)
	0        40
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT clubdesc,
		          clubname,
		          COUNT() AS n
		   FROM club
		   GROUP BY clubdesc,
		            clubname)
		ORDER BY count___

	   count___
	0        29
Wrong output for fuzzied solution in instance spider/club_1/0014 (190)
	EXPECTED OUTPUT ====

		SELECT t1.clubname
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t3.major = "600"
		GROUP BY t1.clubname
		ORDER BY count(*) DESC
		LIMIT 1

	           clubname
	0  Bootup Baltimore
	ACTUAL OUTPUT ====

		
		SELECT clubname
		FROM
		  (SELECT clublocation,
		          clubname,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.stuid AS stuid,
		             LHS.lname AS lname,
		             LHS.fname AS fname,
		             LHS.age AS age,
		             LHS.sex AS sex,
		             LHS.major AS major,
		             LHS.advisor AS advisor,
		             LHS.city_code AS city_code,
		             LHS.clubid AS clubid,
		             LHS.clubname AS clubname,
		             LHS.clubdesc AS clubdesc,
		             LHS.clublocation AS clublocation,
		             RHS.position AS POSITION
		      FROM
		        (SELECT LHS.stuid AS stuid,
		                LHS.lname AS lname,
		                LHS.fname AS fname,
		                LHS.age AS age,
		                LHS.sex AS sex,
		                LHS.major AS major,
		                LHS.advisor AS advisor,
		                LHS.city_code AS city_code,
		                RHS.clubid AS clubid,
		                RHS.clubname AS clubname,
		                RHS.clubdesc AS clubdesc,
		                RHS.clublocation AS clublocation
		         FROM student AS LHS
		         CROSS JOIN club AS RHS) AS LHS
		      INNER JOIN member_of_club AS RHS ON (LHS.stuid = RHS.stuid
		                                              AND LHS.clubid = RHS.clubid))
		   GROUP BY clublocation,
		            clubname)
		WHERE (n < 600
		       AND n > 1)
		ORDER BY clubname

	                clubname
	0       Bootup Baltimore
	1       Bootup Baltimore
	2       Bootup Baltimore
	3  Bootup Baltimorejx5W)
	4  Bootup Baltimorew9Rpc
	5  QF67VBootup Baltimore
Wrong output for fuzzied solution in instance spider/club_1/0009 (191)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t3.fname = "Linda"
		  AND t3.lname = "Smith"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `position`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `LHS`.`clubid` AS `clubid`,
		                `LHS`.`clubname` AS `clubname`,
		                `LHS`.`clubdesc` AS `clubdesc`,
		                `LHS`.`clublocation` AS `clublocation`,
		                `RHS`.`position` AS `position`
		         FROM
		           (SELECT `LHS`.`stuid` AS `stuid`,
		                   `LHS`.`lname` AS `lname`,
		                   `LHS`.`fname` AS `fname`,
		                   `LHS`.`age` AS `age`,
		                   `LHS`.`sex` AS `sex`,
		                   `LHS`.`major` AS `major`,
		                   `LHS`.`advisor` AS `advisor`,
		                   `LHS`.`city_code` AS `city_code`,
		                   `RHS`.`clubid` AS `clubid`,
		                   `RHS`.`clubname` AS `clubname`,
		                   `RHS`.`clubdesc` AS `clubdesc`,
		                   `RHS`.`clublocation` AS `clublocation`
		            FROM `student` AS `LHS`
		            CROSS JOIN `club` AS `RHS`) AS `LHS`
		         INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                                     AND `LHS`.`clubid` = `RHS`.`clubid`))
		      WHERE (`fname` = 'Linda'
		             AND `lname` = 'Smith'))
		   GROUP BY POSITION)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/club_1/0025 (192)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT t2.position)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		WHERE t1.clubname = "Bootup Baltimore"

	   count(distinct t2.position)
	0                            0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count_distinct_t2_position_`
		FROM
		  (SELECT *
		   FROM `member_of_club` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `club`
		           WHERE (`clubname` != 'Bootup Baltimore')) AS RHS
		        WHERE (LHS.clubid = RHS.clubid) ))
		ORDER BY count_distinct_t2_position_

	Empty DataFrame
	Columns: [count_distinct_t2_position_]
	Index: []
Wrong output for fuzzied solution in instance spider/club_1/0011 (193)
	EXPECTED OUTPUT ====

		SELECT t3.fname,
		       t3.lname
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t1.clubname = "Bootup Baltimore"
		  AND t3.sex = "F"

	        fname        lname
	0   aB1B4Eric        Adams
	1   aB1B4Eric        Adams
	2   aB1B4Eric        Adams
	3   aB1B4Eric        Adams
	4  xR6Ericu9V  yQyWoodsmQ6
	5  xR6Ericu9V  yQyWoodsmQ6
	6  xR6Ericu9V  yQyWoodsmQ6
	ACTUAL OUTPUT ====

		
		SELECT `fname`,
		       `lname`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`clubid` AS `clubid`,
		                `RHS`.`clubname` AS `clubname`,
		                `RHS`.`clubdesc` AS `clubdesc`,
		                `RHS`.`clublocation` AS `clublocation`
		         FROM `student` AS `LHS`
		         CROSS JOIN `club` AS `RHS`)
		      WHERE (`clubname` = 'Bootup Baltimore'
		             AND `sex` = 'F')) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM member_of_club AS RHS
		        WHERE (LHS.stuid = RHS.stuid
		               AND LHS.clubid = RHS.clubid) ))
		ORDER BY fname

	        fname        lname
	0   aB1B4Eric        Adams
	1   aB1B4Eric        Adams
	2  xR6Ericu9V  yQyWoodsmQ6
	3  xR6Ericu9V  yQyWoodsmQ6
	4  xR6Ericu9V  yQyWoodsmQ6
Wrong output for fuzzied solution in instance spider/club_1/0029 (194)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t1.clubname
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t3.city_code = "HOU"

	               clubname
	0   Pen and Paper Gamin
	1  Pen and Paper Gaming
	2           Tennis Club
	3   en and Paper Gaming
	ACTUAL OUTPUT ====

		
		SELECT `clubname`
		FROM
		  (SELECT `LHS`.`clubid` AS `clubid`,
		          `LHS`.`clubname` AS `clubname`,
		          `LHS`.`clubdesc` AS `clubdesc`,
		          `LHS`.`clublocation` AS `clublocation`,
		          `LHS`.`stuid` AS `stuid`,
		          `LHS`.`position` AS `position`,
		          `RHS`.`lname` AS `lname`,
		          `RHS`.`fname` AS `fname`,
		          `RHS`.`age` AS `age`,
		          `RHS`.`sex` AS `sex`,
		          `RHS`.`major` AS `major`,
		          `RHS`.`advisor` AS `advisor`,
		          `RHS`.`city_code` AS `city_code`
		   FROM
		     (SELECT `LHS`.`clubid` AS `clubid`,
		             `LHS`.`clubname` AS `clubname`,
		             `LHS`.`clubdesc` AS `clubdesc`,
		             `LHS`.`clublocation` AS `clublocation`,
		             `RHS`.`stuid` AS `stuid`,
		             `RHS`.`position` AS `position`
		      FROM `club` AS `LHS`
		      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `student`
		      WHERE (`city_code` = 'HOU')) AS RHS ON (LHS.stuid = RHS.stuid))
		ORDER BY clubname

	               clubname
	0   Pen and Paper Gamin
	1  Pen and Paper Gaming
	2  Pen and Paper Gaming
	3  Pen and Paper Gaming
	4  Pen and Paper Gaming
	5  Pen and Paper Gaming
	6           Tennis Club
	7   en and Paper Gaming
Wrong output for fuzzied solution in instance spider/club_1/0010 (195)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t3.fname = "Tracy"
		  AND t3.lname = "Kim"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`clubid` AS `clubid`,
		          `LHS`.`clubname` AS `clubname`,
		          `LHS`.`clubdesc` AS `clubdesc`,
		          `LHS`.`clublocation` AS `clublocation`,
		          `LHS`.`stuid` AS `stuid`,
		          `LHS`.`position` AS `position`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`clubid` AS `clubid`,
		             `LHS`.`clubname` AS `clubname`,
		             `LHS`.`clubdesc` AS `clubdesc`,
		             `LHS`.`clublocation` AS `clublocation`,
		             `RHS`.`stuid` AS `stuid`,
		             `RHS`.`position` AS `position`
		      FROM `club` AS `LHS`
		      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`
		   CROSS JOIN
		     (SELECT COUNT() AS `n`
		      FROM `student`
		      WHERE (`fname` != 'Tracy'
		             AND `lname` = 'Kim')) AS RHS)
		ORDER BY count___

	   count___
	0         1
Wrong output for fuzzied solution in instance spider/club_1/0028 (196)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t1.clubname
		FROM club AS t1
		JOIN member_of_club AS t2 ON t1.clubid = t2.clubid
		JOIN student AS t3 ON t2.stuid = t3.stuid
		WHERE t3.city_code = "BAL"

	               clubname
	0   Pen and Paper Gamin
	1  Pen and Paper Gaming
	2           Tennis Club
	3   en and Paper Gaming
	ACTUAL OUTPUT ====

		
		SELECT `clubname`
		FROM
		  (SELECT `LHS`.`clubid` AS `clubid`,
		          `LHS`.`clubname` AS `clubname`,
		          `LHS`.`clubdesc` AS `clubdesc`,
		          `LHS`.`clublocation` AS `clublocation`,
		          `LHS`.`stuid` AS `stuid`,
		          `LHS`.`position` AS `position`,
		          `RHS`.`lname` AS `lname`,
		          `RHS`.`fname` AS `fname`,
		          `RHS`.`age` AS `age`,
		          `RHS`.`sex` AS `sex`,
		          `RHS`.`major` AS `major`,
		          `RHS`.`advisor` AS `advisor`,
		          `RHS`.`city_code` AS `city_code`
		   FROM
		     (SELECT `LHS`.`clubid` AS `clubid`,
		             `LHS`.`clubname` AS `clubname`,
		             `LHS`.`clubdesc` AS `clubdesc`,
		             `LHS`.`clublocation` AS `clublocation`,
		             `RHS`.`stuid` AS `stuid`,
		             `RHS`.`position` AS `position`
		      FROM `club` AS `LHS`
		      INNER JOIN `member_of_club` AS `RHS` ON (`LHS`.`clubid` = `RHS`.`clubid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `student`
		      WHERE (`city_code` = 'BAL')) AS RHS ON (LHS.stuid = RHS.stuid))
		ORDER BY clubname

	               clubname
	0   Pen and Paper Gamin
	1  Pen and Paper Gaming
	2  Pen and Paper Gaming
	3  Pen and Paper Gaming
	4  Pen and Paper Gaming
	5  Pen and Paper Gaming
	6           Tennis Club
	7   en and Paper Gaming
Wrong output for fuzzied solution in instance spider/decoration_competition/0006 (201)
	EXPECTED OUTPUT ====

		SELECT Country
		FROM member
		GROUP BY Country
		ORDER BY COUNT(*) DESC
		LIMIT 1

	         country
	0  United States
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT college_id,
		                country,
		                COUNT() AS n
		         FROM member
		         GROUP BY college_id,
		                  country)
		      ORDER BY country DESC)
		   LIMIT 1)

	              country
	0  z577eUnited States
Wrong output for fuzzied solution in instance spider/decoration_competition/0007 (206)
	EXPECTED OUTPUT ====

		SELECT Country
		FROM member
		GROUP BY Country
		HAVING COUNT(*) > 2

	Empty DataFrame
	Columns: [country]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT country,
		                COUNT() AS n
		         FROM member
		         GROUP BY country)
		      ORDER BY country)
		   LIMIT 2)

	  country
	0  Canada
Wrong output for fuzzied solution in instance spider/decoration_competition/0001 (207)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM member

	   count(*)
	0        28
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT college_id,
		          name,
		          COUNT() AS n
		   FROM member
		   GROUP BY college_id,
		            name)
		ORDER BY count___

	   count___
	0        26
Error while executing solution for instance spider/decoration_competition/0009 (209)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/decoration_competition/0009 (209)
Wrong output for fuzzied solution in instance spider/swimming/0002 (212)
	EXPECTED OUTPUT ====

		SELECT name
		FROM event
		ORDER BY YEAR DESC

	           name
	0     0u2IPCsCX
	1           IPC
	2        Pacifi
	3       Pacific
	4       Pacific
	5       Pacific
	6  World Master
	7  World Master
	8  World Master
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT name
		   FROM event INTERSECT SELECT name
		   FROM event)
		ORDER BY name

	           name
	0     0u2IPCsCX
	1           IPC
	2        Pacifi
	3       Pacific
	4  World Master
Wrong output for fuzzied solution in instance spider/swimming/0003 (215)
	EXPECTED OUTPUT ====

		SELECT name
		FROM event
		ORDER BY YEAR DESC
		LIMIT 1

	           name
	0  World Master
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM event
		      ORDER BY name)
		   LIMIT 1)

	        name
	0  0u2IPCsCX
No solution for instance spider/swimming/0027 (216)
Wrong output for fuzzied solution in instance spider/swimming/0022 (217)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM swimmer AS t1
		JOIN record AS t2 ON t1.id = t2.swimmer_id
		GROUP BY t2.swimmer_id
		ORDER BY count(*) DESC
		LIMIT 1

	                 name
	0  Grant HackettjqKdE
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.id AS id,
		                LHS.name AS name,
		                LHS.nationality AS nationality,
		                LHS.meter_100 AS meter_100,
		                LHS.meter_200 AS meter_200,
		                LHS.meter_300 AS meter_300,
		                LHS.meter_400 AS meter_400,
		                LHS.meter_500 AS meter_500,
		                LHS.meter_600 AS meter_600,
		                LHS.meter_700 AS meter_700,
		                LHS.time AS TIME,
		                LHS.result AS RESULT,
		                LHS.swimmer_id AS swimmer_id,
		                LHS.event_id AS event_id,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.id AS id,
		                   LHS.name AS name,
		                   LHS.nationality AS nationality,
		                   LHS.meter_100 AS meter_100,
		                   LHS.meter_200 AS meter_200,
		                   LHS.meter_300 AS meter_300,
		                   LHS.meter_400 AS meter_400,
		                   LHS.meter_500 AS meter_500,
		                   LHS.meter_600 AS meter_600,
		                   LHS.meter_700 AS meter_700,
		                   LHS.time AS TIME,
		                   RHS.result AS RESULT,
		                   RHS.swimmer_id AS swimmer_id,
		                   RHS.event_id AS event_id
		            FROM swimmer AS LHS
		            INNER JOIN record AS RHS ON (LHS.id = RHS.id)) AS LHS
		         INNER JOIN
		           (SELECT id,
		                   RESULT,
		                   swimmer_id,
		                   event_id,
		                   COUNT(*) OVER () AS n
		            FROM record) AS RHS ON (LHS.id = RHS.id
		                                       AND LHS.result = RHS.result
		                                       AND LHS.swimmer_id = RHS.swimmer_id
		                                       AND LHS.event_id = RHS.event_id))
		      ORDER BY name)
		   LIMIT 1)

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance spider/swimming/0030 (218)
	EXPECTED OUTPUT ====

		SELECT avg(capacity)
		FROM stadium
		WHERE opening_year = 2005

	   avg(capacity)
	0        58019.0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(capacity) OVER () AS avg_capacity_
		FROM stadium
		WHERE (opening_year = 2005
		       OR opening_year > capacity)
		ORDER BY avg_capacity_

	   avg_capacity_
	0        60722.8
Error while executing solution for instance spider/swimming/0013 (219)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT `n_distinct` AS `count___`
FROM
  (SELECT `id`,
          `name`,
          `capacity`,
          `city`,
          `country`,
          `opening_year`,
          COUNT(DISTINCT `country`) OVER () AS `n_distinct`
   FROM `stadium`)
WHERE (`country` = 'Russia')
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Wrong output for fuzzied solution in instance spider/swimming/0004 (221)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM stadium

	   count(*)
	0        10
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT city,
		          COUNT() AS n
		   FROM stadium
		   GROUP BY city)
		ORDER BY count___

	   count___
	0         8
Wrong output for fuzzied solution in instance spider/swimming/0026 (223)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM swimmer AS t1
		JOIN record AS t2 ON t1.id = t2.swimmer_id
		WHERE RESULT = 'Win' INTERSECT
		  SELECT t1.name
		  FROM swimmer AS t1
		  JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Loss'

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `name`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`nationality` AS `nationality`,
		          `LHS`.`meter_100` AS `meter_100`,
		          `LHS`.`meter_200` AS `meter_200`,
		          `LHS`.`meter_300` AS `meter_300`,
		          `LHS`.`meter_400` AS `meter_400`,
		          `LHS`.`meter_500` AS `meter_500`,
		          `LHS`.`meter_600` AS `meter_600`,
		          `LHS`.`meter_700` AS `meter_700`,
		          `LHS`.`time` AS `time`,
		          `RHS`.`id` AS `id_other`,
		          `RHS`.`result` AS `result`,
		          `RHS`.`swimmer_id` AS `swimmer_id`
		   FROM `swimmer` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `record`
		      WHERE (`result` != 'Win'
		             OR `result` = 'Loss')) AS RHS ON (LHS.id = RHS.event_id))
		ORDER BY name

	                    name
	0  dOdsGOussama Mellouli
Error while executing solution for instance spider/swimming/0015 (224)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT nationality) OVER () AS count_distinct_nationality_
FROM swimmer
ORDER BY count_distinct_nationality_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/swimming/0005 (225)
	EXPECTED OUTPUT ====

		SELECT name
		FROM stadium
		ORDER BY capacity DESC
		LIMIT 1

	                name
	0  tade des Lumières
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM stadium
		      ORDER BY opening_year)
		   LIMIT 1)

	                   name
	0  Baku Olympic Stadium
Wrong output for fuzzied solution in instance spider/swimming/0019 (229)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM stadium AS t1
		JOIN event AS t2 ON t1.id = t2.stadium_id
		GROUP BY t2.stadium_id
		ORDER BY count(*) DESC
		LIMIT 1

	                        name
	0  2vw5TBaku Olympic Stadium
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.capacity AS capacity,
		          LHS.city AS city,
		          LHS.country AS country,
		          LHS.opening_year AS opening_year
		   FROM stadium AS LHS
		   INNER JOIN
		     (SELECT COUNT() AS n
		      FROM
		        (SELECT *
		         FROM stadium AS LHS
		         WHERE NOT EXISTS
		             (SELECT 1
		              FROM event AS RHS
		              WHERE (LHS.id = RHS.id
		                     AND LHS.name = RHS.name) ))) AS RHS ON (LHS.id = RHS.n))
		ORDER BY name

	                name
	0  tade des Lumières
Wrong output for fuzzied solution in instance spider/swimming/0007 (230)
	EXPECTED OUTPUT ====

		SELECT country
		FROM stadium
		GROUP BY country
		ORDER BY count(*) DESC
		LIMIT 1

	  country
	0   Spain
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT country,
		                id,
		                COUNT() AS n
		         FROM stadium
		         GROUP BY country,
		                  id)
		      ORDER BY id DESC)
		   LIMIT 1)

	  country
	0   Russi
Wrong output for fuzzied solution in instance spider/swimming/0023 (233)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM swimmer AS t1
		JOIN record AS t2 ON t1.id = t2.swimmer_id
		GROUP BY t2.swimmer_id
		HAVING count(*) >= 2

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.nationality AS nationality,
		          LHS.meter_100 AS meter_100,
		          LHS.meter_200 AS meter_200,
		          LHS.meter_300 AS meter_300,
		          LHS.meter_400 AS meter_400,
		          LHS.meter_500 AS meter_500,
		          LHS.meter_600 AS meter_600,
		          LHS.meter_700 AS meter_700,
		          LHS.time AS TIME,
		          RHS.swimmer_id AS swimmer_id
		   FROM swimmer AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT swimmer_id,
		                COUNT() AS n
		         FROM record
		         GROUP BY swimmer_id)
		      WHERE (n != 2)) AS RHS ON (LHS.id = RHS.n))
		ORDER BY name

	            name
	0  Ryan Cochrane
Wrong output for fuzzied solution in instance spider/swimming/0009 (236)
	EXPECTED OUTPUT ====

		SELECT country
		FROM stadium
		WHERE capacity > 60000 INTERSECT
		  SELECT country
		  FROM stadium WHERE capacity < 50000

	Empty DataFrame
	Columns: [country]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT country
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.capacity AS capacity,
		          LHS.city AS city,
		          LHS.country AS country,
		          LHS.opening_year AS opening_year
		   FROM stadium AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM stadium
		      WHERE (capacity < 60000
		             AND capacity < 50000)) AS RHS ON (LHS.id = RHS.id
		                                               AND LHS.name = RHS.name
		                                               AND LHS.capacity = RHS.capacity
		                                               AND LHS.city = RHS.city
		                                               AND LHS.country = RHS.country
		                                               AND LHS.opening_year = RHS.opening_year))
		ORDER BY country

	       country
	0  Russiai4)4z
No solution for instance spider/swimming/0025 (237)
Wrong output for fuzzied solution in instance spider/swimming/0010 (240)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT city)
		FROM stadium
		WHERE opening_year < 2006

	   count(distinct city)
	0                     4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count_distinct_city_
		FROM stadium
		WHERE (opening_year < 2006)
		ORDER BY count_distinct_city_

	   count_distinct_city_
	0                     5
Wrong output for fuzzied solution in instance spider/swimming/0028 (241)
	EXPECTED OUTPUT ====

		SELECT t3.name
		FROM record AS t1
		JOIN event AS t2 ON t1.event_id = t2.id
		JOIN stadium AS t3 ON t3.id = t2.stadium_id
		GROUP BY t2.stadium_id
		ORDER BY count(*) DESC
		LIMIT 1

	                         name
	0  YKeBaku Olympic Stadiumde 
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.id AS id,
		                LHS.name AS name,
		                LHS.capacity AS capacity,
		                LHS.city AS city,
		                LHS.country AS country,
		                LHS.opening_year AS opening_year,
		                LHS.result AS RESULT,
		                LHS.swimmer_id AS swimmer_id,
		                LHS.event_id AS event_id,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.id AS id,
		                   LHS.name AS name,
		                   LHS.capacity AS capacity,
		                   LHS.city AS city,
		                   LHS.country AS country,
		                   LHS.opening_year AS opening_year,
		                   RHS.result AS RESULT,
		                   RHS.swimmer_id AS swimmer_id,
		                   RHS.event_id AS event_id
		            FROM stadium AS LHS
		            INNER JOIN record AS RHS ON (LHS.id = RHS.id)) AS LHS
		         CROSS JOIN
		           (SELECT COUNT() AS n
		            FROM event) AS RHS)
		      ORDER BY RESULT DESC)
		   LIMIT 1)

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance spider/perpetrator/0008 (244)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM people AS T1
		JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID
		WHERE T2.Country != "China"

	         name
	0   John Moor
	1  Ron Baxter
	2  Ron Baxter
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM `people` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `perpetrator`
		           WHERE (`country` != 'China')) AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY name

	         name
	0   John Moor
	1  Ron Baxter
Wrong output for fuzzied solution in instance spider/perpetrator/0003 (245)
	EXPECTED OUTPUT ====

		SELECT Injured
		FROM perpetrator
		ORDER BY Injured ASC

	   injured
	0        5
	1       16
	2       16
	3       80
	4       80
	5       82
	6       82
	ACTUAL OUTPUT ====

		
		SELECT injured
		FROM
		  (SELECT injured
		   FROM perpetrator INTERSECT SELECT injured
		   FROM perpetrator)
		ORDER BY injured

	   injured
	0        5
	1       16
	2       80
	3       82
Wrong output for fuzzied solution in instance spider/perpetrator/0012 (249)
	EXPECTED OUTPUT ====

		SELECT T1.Height
		FROM people AS T1
		JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T2.Injured DESC

	   height
	0    6.08
	1    6.08
	2    6.09
	3    6.11
	4    6.11
	5    6.48
	6    6.48
	ACTUAL OUTPUT ====

		
		SELECT height
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM perpetrator AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY height

	   height
	0    6.08
	1    6.08
	2    6.09
	3    6.11
	4    6.48
Wrong output for fuzzied solution in instance spider/perpetrator/0005 (251)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM perpetrator
		ORDER BY Killed DESC
		LIMIT 1

	         location
	0  ruGZhaodongb1e
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM perpetrator
		      ORDER BY perpetrator_id)
		   LIMIT 1)

	  location
	0  Zhaodon
Wrong output for fuzzied solution in instance spider/perpetrator/0016 (252)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM people AS T1
		JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T2.Year DESC

	            name
	0  Henry Johnson
	1     Jim Krivac
	2     Jim Krivac
	3    Jim Krivacs
	4      John Moor
	5      John Moor
	6   enry Johnson
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM perpetrator AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY name

	            name
	0  Henry Johnson
	1     Jim Krivac
	2    Jim Krivacs
	3      John Moor
	4   enry Johnson
Wrong output for fuzzied solution in instance spider/perpetrator/0018 (253)
	EXPECTED OUTPUT ====

		SELECT Country
		FROM perpetrator
		WHERE Injured > 50 INTERSECT
		  SELECT Country
		  FROM perpetrator WHERE Injured < 20

	Empty DataFrame
	Columns: [country]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT country
		FROM
		  (SELECT LHS.perpetrator_id AS perpetrator_id,
		          LHS.people_id AS people_id,
		          LHS.date AS date,
		          LHS.year AS YEAR,
		          LHS.location AS LOCATION,
		          LHS.country AS country,
		          LHS.killed AS killed,
		          LHS.injured AS injured,
		          RHS.perpetrator_id AS perpetrator_id_other,
		          RHS.people_id AS people_id_other,
		          RHS.date AS date_other,
		          RHS.year AS year_other,
		          RHS.location AS location_other,
		          RHS.country AS country_other,
		          RHS.killed AS killed_other,
		          RHS.injured AS injured_other
		   FROM
		     (SELECT *
		      FROM perpetrator
		      WHERE (injured > 50
		             OR injured = 20)) AS LHS
		   CROSS JOIN perpetrator AS RHS)
		WHERE (injured != injured_other)
		ORDER BY country

	  country
	0    hina
Error while executing solution for instance spider/perpetrator/0020 (254)

(sqlite3.OperationalError) no such column: RHS.home_town
[SQL: 
SELECT date
FROM
  (SELECT *
   FROM
     (SELECT *
      FROM
        (SELECT LHS.perpetrator_id AS perpetrator_id,
                LHS.people_id AS people_id,
                LHS.date AS date,
                LHS.year AS YEAR,
                LHS.location AS LOCATION,
                LHS.country AS country,
                LHS.killed AS killed,
                LHS.injured AS injured,
                RHS.name AS name,
                RHS.height AS height,
                RHS.weight AS weight,
                RHS.home_town AS home_town
         FROM perpetrator AS LHS
         INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))
      ORDER BY home_town DESC)
   LIMIT 1)]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/perpetrator/0019 (255)
Wrong output for fuzzied solution in instance spider/perpetrator/0007 (256)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM people AS T1
		JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID

	            name
	0  Henry Johnson
	1     Jim Krivac
	2     Jim Krivac
	3    Jim Krivacs
	4      John Moor
	5      John Moor
	6   enry Johnson
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM perpetrator AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY name

	            name
	0  Henry Johnson
	1     Jim Krivac
	2    Jim Krivacs
	3      John Moor
	4   enry Johnson
Wrong output for fuzzied solution in instance spider/perpetrator/0001 (258)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM perpetrator

	   count(*)
	0        36
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT date, YEAR,
		                COUNT() AS n
		   FROM perpetrator
		   GROUP BY date, YEAR)
		ORDER BY count___

	   count___
	0        35
Wrong output for fuzzied solution in instance spider/perpetrator/0014 (259)
	EXPECTED OUTPUT ====

		SELECT Country,
		       COUNT(*)
		FROM perpetrator
		GROUP BY Country
		ORDER BY COUNT(*) DESC
		LIMIT 1

	       country  count(*)
	0  South Korea         3
	ACTUAL OUTPUT ====

		
		SELECT country,
		       perpetrator_id AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT country,
		                perpetrator_id,
		                COUNT() AS n
		         FROM perpetrator
		         GROUP BY country,
		                  perpetrator_id)
		      ORDER BY n DESC)
		   LIMIT 1)

	  country  count___
	0   China         3
Error while executing solution for instance spider/perpetrator/0009 (260)

(sqlite3.OperationalError) no such column: RHS.home_town
[SQL: 
SELECT name
FROM
  (SELECT *
   FROM
     (SELECT *
      FROM
        (SELECT LHS.perpetrator_id AS perpetrator_id,
                LHS.people_id AS people_id,
                LHS.date AS date,
                LHS.year AS YEAR,
                LHS.location AS LOCATION,
                LHS.country AS country,
                LHS.killed AS killed,
                LHS.injured AS injured,
                RHS.name AS name,
                RHS.height AS height,
                RHS.weight AS weight,
                RHS.home_town AS home_town
         FROM perpetrator AS LHS
         INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))
      ORDER BY country)
   LIMIT 1)]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/perpetrator/0011 (261)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM people AS T1
		JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID
		WHERE T2.Country = "China"
		  OR T2.Country = "Japan"

	             name
	0  Rob Cunningham
	1       Ron Baxte
	2      Ron Baxter
	3      Ron Baxter
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM `people` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `perpetrator`
		           WHERE (`country` = 'China'
		                  OR `country` = 'Japan')) AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY name

	             name
	0  Rob Cunningham
	1       Ron Baxte
	2      Ron Baxter
Error while executing solution for instance spider/perpetrator/0010 (262)

(sqlite3.OperationalError) no such column: LHS.home_town
[SQL: 
SELECT DISTINCT SUM(`killed`) OVER () AS `sum_t2_killed_`
FROM
  (SELECT `LHS`.`people_id` AS `people_id`,
          `LHS`.`name` AS `name`,
          `LHS`.`height` AS `height`,
          `LHS`.`weight` AS `weight`,
          `LHS`.`home_town` AS `home_town`,
          `RHS`.`perpetrator_id` AS `perpetrator_id`,
          `RHS`.`date` AS `date`,
          `RHS`.`year` AS `year`,
          `RHS`.`location` AS `location`,
          `RHS`.`country` AS `country`,
          `RHS`.`killed` AS `killed`,
          `RHS`.`injured` AS `injured`
   FROM `people` AS `LHS`
   INNER JOIN
     (SELECT *
      FROM `perpetrator`
      WHERE (`killed` != '1.84')) AS RHS ON (LHS.people_id = RHS.people_id))
ORDER BY sum_t2_killed_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0033 (263)
	EXPECTED OUTPUT ====

		SELECT document_id,
		       count(DISTINCT employee_id)
		FROM Circulation_History
		GROUP BY document_id;

	    document_id  count(distinct employee_id)
	0             1                            1
	1            21                            1
	2            25                            1
	3             2                            2
	4            14                            2
	5            22                            2
	6            12                            3
	7            23                            3
	8             5                            4
	9            15                            4
	10           16                            4
	11            0                            5
	12           17                            6
	13            3                            7
	ACTUAL OUTPUT ====

		
		SELECT document_id,
		       n_distinct AS count_distinct_employee_id_
		FROM
		  (SELECT copy_number,
		          document_id,
		          COUNT(DISTINCT employee_id) AS n_distinct
		   FROM circulation_history
		   GROUP BY copy_number,
		            document_id)
		ORDER BY document_id

	    document_id  count_distinct_employee_id_
	0             0                            1
	1             0                            1
	2             0                            1
	3             0                            1
	4             1                            1
	5             2                            1
	6             2                            1
	7             3                            1
	8             3                            1
	9             3                            1
	10            5                            1
	11            5                            1
	12           12                            1
	13           12                            1
	14           12                            1
	15           14                            1
	16           14                            1
	17           15                            1
	18           15                            1
	19           15                            1
	20           15                            1
	21           16                            1
	22           16                            1
	23           17                            1
	24           17                            1
	25           21                            1
	26           22                            1
	27           22                            1
	28           23                            1
	29           25                            1
	30           25                            1
	31            0                            2
	32            3                            2
	33            3                            2
	34           15                            2
	35           16                            2
	36           17                            2
	37           23                            2
	38            0                            3
	39            3                            3
	40            5                            3
	41           17                            3
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0027 (268)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Draft_Copies
		WHERE document_id = 2;

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT document_id AS count___
		FROM
		  (SELECT document_id,
		          COUNT() AS n
		   FROM draft_copies
		   GROUP BY document_id)
		WHERE (n = 2
		       AND n <= document_id)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0015 (276)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Documents
		WHERE document_status_code = "done";

	   count(*)
	0         6
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `document_status_code`,
		          `document_type_code`,
		          COUNT() AS `n`
		   FROM `documents`
		   GROUP BY `document_status_code`,
		            `document_type_code`)
		WHERE (`document_status_code` = 'done')
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
	3         3
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0032 (279)
	EXPECTED OUTPUT ====

		SELECT Employees.employee_name,
		       count(*)
		FROM Employees
		JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id
		GROUP BY Circulation_History.document_id,
		         Circulation_History.draft_number,
		         Circulation_History.copy_number
		ORDER BY count(*) DESC
		LIMIT 1;

	  employee_name  count(*)
	0   KenyonrpAQr         2
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT employee_name,
		                employee_id AS count___
		FROM
		  (SELECT LHS.employee_id AS employee_id,
		          LHS.role_code AS role_code,
		          LHS.employee_name AS employee_name,
		          LHS.other_details AS other_details,
		          RHS.copy_number AS copy_number
		   FROM employees AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT copy_number,
		                COUNT() AS n
		         FROM circulation_history
		         GROUP BY copy_number)
		      WHERE (n = 1)) AS RHS ON (LHS.employee_id = RHS.n))
		ORDER BY employee_name

	  employee_name  count___
	0         Kenyo         1
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0020 (281)
	EXPECTED OUTPUT ====

		SELECT Ref_Shipping_Agents.shipping_agent_name,
		       count(Documents.document_id)
		FROM Ref_Shipping_Agents
		JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code
		GROUP BY Ref_Shipping_Agents.shipping_agent_code
		ORDER BY count(Documents.document_id) DESC
		LIMIT 1;

	  shipping_agent_name  count(documents.document_id)
	0                Ship                             2
	ACTUAL OUTPUT ====

		
		SELECT shipping_agent_name,
		       n AS count_documents_document_id_
		FROM
		  (SELECT LHS.shipping_agent_code AS shipping_agent_code,
		          LHS.shipping_agent_name AS shipping_agent_name,
		          LHS.shipping_agent_description AS shipping_agent_description,
		          LHS.document_id AS document_id,
		          LHS.document_status_code AS document_status_code,
		          LHS.document_type_code AS document_type_code,
		          LHS.receipt_date AS receipt_date,
		          LHS.receipt_number AS receipt_number,
		          LHS.other_details AS other_details,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.shipping_agent_code AS shipping_agent_code,
		             LHS.shipping_agent_name AS shipping_agent_name,
		             LHS.shipping_agent_description AS shipping_agent_description,
		             RHS.document_id AS document_id,
		             RHS.document_status_code AS document_status_code,
		             RHS.document_type_code AS document_type_code,
		             RHS.receipt_date AS receipt_date,
		             RHS.receipt_number AS receipt_number,
		             RHS.other_details AS other_details
		      FROM ref_shipping_agents AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM documents
		         WHERE (document_id <= 1)) AS RHS ON (LHS.shipping_agent_code = RHS.shipping_agent_code)) AS LHS
		   INNER JOIN
		     (SELECT shipping_agent_code,
		             COUNT() AS n
		      FROM documents
		      GROUP BY shipping_agent_code) AS RHS ON (LHS.shipping_agent_code = RHS.shipping_agent_code))
		ORDER BY shipping_agent_name

	  shipping_agent_name  count_documents_document_id_
	0        z577eAirline                             1
	1             Airline                             2
	2                Ship                             2
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0019 (282)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Ref_Shipping_Agents
		JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code
		WHERE Ref_Shipping_Agents.shipping_agent_name = "USPS";

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT *
		   FROM `documents` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `ref_shipping_agents`
		           WHERE (`shipping_agent_name` != 'USPS')) AS RHS
		        WHERE (LHS.shipping_agent_code = RHS.shipping_agent_code) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0024 (284)
	EXPECTED OUTPUT ====

		SELECT document_id
		FROM Documents
		WHERE document_status_code = "done"
		  AND document_type_code = "Paper"
		EXCEPT
		SELECT document_id
		FROM Documents
		JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code
		WHERE Ref_Shipping_Agents.shipping_agent_name = "USPS";

	Empty DataFrame
	Columns: [document_id]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `document_id`
		FROM
		  (SELECT `LHS`.`shipping_agent_code` AS `shipping_agent_code`,
		          `LHS`.`shipping_agent_name` AS `shipping_agent_name`,
		          `LHS`.`shipping_agent_description` AS `shipping_agent_description`,
		          `LHS`.`document_id` AS `document_id`,
		          `LHS`.`document_status_code` AS `document_status_code`,
		          `LHS`.`document_type_code` AS `document_type_code`,
		          `LHS`.`receipt_date` AS `receipt_date`,
		          `LHS`.`receipt_number` AS `receipt_number`,
		          `LHS`.`other_details` AS `other_details`
		   FROM
		     (SELECT `LHS`.`shipping_agent_code` AS `shipping_agent_code`,
		             `LHS`.`shipping_agent_name` AS `shipping_agent_name`,
		             `LHS`.`shipping_agent_description` AS `shipping_agent_description`,
		             `RHS`.`document_id` AS `document_id`,
		             `RHS`.`document_status_code` AS `document_status_code`,
		             `RHS`.`document_type_code` AS `document_type_code`,
		             `RHS`.`receipt_date` AS `receipt_date`,
		             `RHS`.`receipt_number` AS `receipt_number`,
		             `RHS`.`other_details` AS `other_details`
		      FROM `ref_shipping_agents` AS `LHS`
		      INNER JOIN `documents` AS `RHS` ON (`LHS`.`shipping_agent_code` = `RHS`.`shipping_agent_code`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `documents`
		      WHERE (`document_status_code` = 'done'
		             OR `document_type_code` != 'Paper')) AS `RHS` ON (`LHS`.`shipping_agent_code` = `RHS`.`shipping_agent_code`
		                                                               AND `LHS`.`document_id` = `RHS`.`document_id`
		                                                               AND `LHS`.`document_status_code` = `RHS`.`document_status_code`
		                                                               AND `LHS`.`document_type_code` = `RHS`.`document_type_code`
		                                                               AND `LHS`.`receipt_date` = `RHS`.`receipt_date`
		                                                               AND `LHS`.`receipt_number` = `RHS`.`receipt_number`
		                                                               AND `LHS`.`other_details` = `RHS`.`other_details`))
		WHERE (`document_status_code` = 'done'
		       AND `shipping_agent_name` != 'USPS')
		ORDER BY document_id

	   document_id
	0            4
Wrong output for base solution in instance spider/cre_Doc_Control_Systems/0014 (288)
	EXPECTED OUTPUT ====

		SELECT Ref_Document_Status.document_status_description
		FROM Ref_Document_Status
		JOIN Documents ON Documents.document_status_code = Ref_Document_Status.document_status_code
		WHERE Documents.document_id = 1;

	  document_status_description
	0        currently working on
	ACTUAL OUTPUT ====

		
		SELECT document_status_description
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.document_status_code AS document_status_code,
		                LHS.document_status_description AS document_status_description,
		                RHS.document_id AS document_id,
		                RHS.document_type_code AS document_type_code,
		                RHS.shipping_agent_code AS shipping_agent_code,
		                RHS.receipt_date AS receipt_date,
		                RHS.receipt_number AS receipt_number,
		                RHS.other_details AS other_details
		         FROM ref_document_status AS LHS
		         INNER JOIN documents AS RHS ON (LHS.document_status_code = RHS.document_status_code))
		      ORDER BY document_type_code DESC)
		   LIMIT 1)

	  document_status_description
	0                      mailed
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0025 (290)
	EXPECTED OUTPUT ====

		SELECT document_id
		FROM Documents
		WHERE document_status_code = "done"
		  AND document_type_code = "Paper" INTERSECT
		  SELECT document_id
		  FROM Documents
		  JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = "USPS";

	Empty DataFrame
	Columns: [document_id]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `document_id`
		FROM
		  (SELECT `LHS`.`shipping_agent_code` AS `shipping_agent_code`,
		          `LHS`.`shipping_agent_name` AS `shipping_agent_name`,
		          `LHS`.`shipping_agent_description` AS `shipping_agent_description`,
		          `LHS`.`document_id` AS `document_id`,
		          `LHS`.`document_status_code` AS `document_status_code`,
		          `LHS`.`document_type_code` AS `document_type_code`,
		          `LHS`.`receipt_date` AS `receipt_date`,
		          `LHS`.`receipt_number` AS `receipt_number`,
		          `LHS`.`other_details` AS `other_details`
		   FROM
		     (SELECT `LHS`.`shipping_agent_code` AS `shipping_agent_code`,
		             `LHS`.`shipping_agent_name` AS `shipping_agent_name`,
		             `LHS`.`shipping_agent_description` AS `shipping_agent_description`,
		             `LHS`.`document_id` AS `document_id`,
		             `LHS`.`document_status_code` AS `document_status_code`,
		             `LHS`.`document_type_code` AS `document_type_code`,
		             `LHS`.`receipt_date` AS `receipt_date`,
		             `LHS`.`receipt_number` AS `receipt_number`,
		             `LHS`.`other_details` AS `other_details`
		      FROM
		        (SELECT `LHS`.`shipping_agent_code` AS `shipping_agent_code`,
		                `LHS`.`shipping_agent_name` AS `shipping_agent_name`,
		                `LHS`.`shipping_agent_description` AS `shipping_agent_description`,
		                `RHS`.`document_id` AS `document_id`,
		                `RHS`.`document_status_code` AS `document_status_code`,
		                `RHS`.`document_type_code` AS `document_type_code`,
		                `RHS`.`receipt_date` AS `receipt_date`,
		                `RHS`.`receipt_number` AS `receipt_number`,
		                `RHS`.`other_details` AS `other_details`
		         FROM `ref_shipping_agents` AS `LHS`
		         INNER JOIN `documents` AS `RHS` ON (`LHS`.`shipping_agent_code` = `RHS`.`shipping_agent_code`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `ref_shipping_agents`
		         WHERE (`shipping_agent_name` = 'USPS')) AS `RHS` ON (`LHS`.`shipping_agent_code` = `RHS`.`shipping_agent_code`
		                                                              AND `LHS`.`shipping_agent_name` = `RHS`.`shipping_agent_name`
		                                                              AND `LHS`.`shipping_agent_description` = `RHS`.`shipping_agent_description`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `documents`
		      WHERE (`document_status_code` = 'done'
		             OR `document_type_code` = 'Paper')) AS RHS ON (LHS.shipping_agent_code = RHS.shipping_agent_code
		                                                            AND LHS.document_id = RHS.document_id
		                                                            AND LHS.document_status_code = RHS.document_status_code
		                                                            AND LHS.document_type_code = RHS.document_type_code
		                                                            AND LHS.receipt_date = RHS.receipt_date
		                                                            AND LHS.receipt_number = RHS.receipt_number
		                                                            AND LHS.other_details = RHS.other_details))
		ORDER BY document_id

	   document_id
	0           18
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0029 (292)
	EXPECTED OUTPUT ====

		SELECT document_id,
		       count(*)
		FROM Draft_Copies
		GROUP BY document_id
		HAVING count(*) > 1;

	    document_id  count(*)
	0             1         4
	1             2         5
	2            22         5
	3            21         6
	4            16         7
	5            25         8
	6            12         9
	7            -1        11
	8            14        14
	9            17        15
	10           23        15
	11            5        16
	12           15        16
	13            0        22
	14            3        27
	ACTUAL OUTPUT ====

		
		SELECT document_id,
		       document_id_other AS count___
		FROM
		  (SELECT LHS.document_id AS document_id,
		          LHS.draft_number AS draft_number,
		          LHS.copy_number AS copy_number,
		          RHS.document_id AS document_id_other
		   FROM draft_copies AS LHS
		   INNER JOIN
		     (SELECT copy_number,
		             document_id,
		             COUNT() AS n
		      FROM draft_copies
		      GROUP BY copy_number,
		               document_id) AS RHS ON (LHS.draft_number = RHS.n
		                                       AND LHS.copy_number = RHS.copy_number))
		ORDER BY document_id

	Empty DataFrame
	Columns: [document_id, count___]
	Index: []
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0028 (294)
	EXPECTED OUTPUT ====

		SELECT document_id,
		       count(copy_number)
		FROM Draft_Copies
		GROUP BY document_id
		ORDER BY count(copy_number) DESC
		LIMIT 1;

	   document_id  count(copy_number)
	0            3                  27
	ACTUAL OUTPUT ====

		
		SELECT document_id,
		       n_distinct AS count_copy_number_
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT document_id,
		                COUNT(DISTINCT copy_number) AS n_distinct
		         FROM draft_copies
		         GROUP BY document_id)
		      ORDER BY n_distinct DESC)
		   LIMIT 1)

	   document_id  count_copy_number_
	0            0                  10
Wrong output for fuzzied solution in instance spider/cre_Doc_Control_Systems/0031 (295)
	EXPECTED OUTPUT ====

		SELECT employee_name
		FROM Employees
		EXCEPT
		SELECT Employees.employee_name
		FROM Employees
		JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id

	Empty DataFrame
	Columns: [employee_name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT employee_name
		FROM
		  (SELECT *
		   FROM employees AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM circulation_history AS RHS
		        WHERE (LHS.employee_id = RHS.employee_id) ))
		ORDER BY employee_name

	  employee_name
	0        Jordyn
Wrong output for fuzzied solution in instance spider/pilot_record/0008 (297)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM pilot
		GROUP BY Nationality
		ORDER BY COUNT(*) DESC
		LIMIT 1

	     nationality
	0  United States
	ACTUAL OUTPUT ====

		
		SELECT nationality
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT nationality,
		                pilot_id,
		                COUNT() AS n
		         FROM pilot
		         GROUP BY nationality,
		                  pilot_id)
		      ORDER BY pilot_id)
		   LIMIT 1)

	          nationality
	0  tW3ZpUnited States
No solution for instance spider/pilot_record/0003 (298)
Wrong output for fuzzied solution in instance spider/pilot_record/0013 (299)
	EXPECTED OUTPUT ====

		SELECT T2.Pilot_name,
		       COUNT(*)
		FROM pilot_record AS T1
		JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID
		GROUP BY T2.Pilot_name

	              pilot_name  count(*)
	0       (cNemI(u GTLPGxB         3
	1   biw(2Hakeem Olajuwon         4
	2  o67Hakeem OlajuwonGW6         4
	3          an O'Sullivan         5
	4   cmhehHakeem Olajuwon         6
	5         Dan O'Sullivan         8
	6         Hakeem Olajuwo         9
	7        Hakeem Olajuwon        31
	ACTUAL OUTPUT ====

		
		SELECT pilot_name,
		       n AS count___
		FROM
		  (SELECT nationality,
		          pilot_name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.pilot_id AS pilot_id,
		             LHS.pilot_name AS pilot_name,
		             LHS.rank AS rank,
		             LHS.age AS age,
		             LHS.nationality AS nationality,
		             LHS.position AS POSITION,
		             LHS.join_year AS join_year,
		             LHS.team AS team,
		             RHS.record_id AS record_id,
		             RHS.aircraft_id AS aircraft_id,
		             RHS.date AS date
		      FROM pilot AS LHS
		      INNER JOIN pilot_record AS RHS ON (LHS.pilot_id = RHS.pilot_id))
		   GROUP BY nationality,
		            pilot_name)
		ORDER BY pilot_name

	               pilot_name  count___
	0          Dan O'Sullivan         2
	1        (cNemI(u GTLPGxB         3
	2    biw(2Hakeem Olajuwon         4
	3   o67Hakeem OlajuwonGW6         4
	4         Hakeem Olajuwon         5
	5           an O'Sullivan         5
	6          Dan O'Sullivan         6
	7         Hakeem Olajuwon         6
	8    cmhehHakeem Olajuwon         6
	9         Hakeem Olajuwon         8
	10         Hakeem Olajuwo         9
	11        Hakeem Olajuwon        12
Wrong output for fuzzied solution in instance spider/pilot_record/0012 (302)
	EXPECTED OUTPUT ====

		SELECT T2.Fleet_Series
		FROM pilot_record AS T1
		JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID
		JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID
		WHERE T3.Age < 34

	        fleet_series
	0         465-467 (3
	1        465-467 (3)
	2        465-467 (3)
	3        465-467 (3)
	4         474-481 (8
	5        474-481 (8)
	6        474-481 (8)
	7   474-481 (8)YyYT0
	8   474-481 (8)YyYT0
	9       482-492 (11)
	10      482-492 (11)
	11      482-492 (11)
	12      482-492 (11)
	13      482-492 (11)
	14  cZVUQ474-481 (8)
	ACTUAL OUTPUT ====

		
		SELECT fleet_series
		FROM
		  (SELECT LHS.aircraft_id AS aircraft_id,
		          LHS.order_year AS order_year,
		          LHS.manufacturer AS manufacturer,
		          LHS.model AS model,
		          LHS.fleet_series AS fleet_series,
		          LHS.powertrain AS powertrain,
		          LHS.fuel_propulsion AS fuel_propulsion,
		          LHS.record_id AS record_id,
		          LHS.pilot_id AS pilot_id,
		          LHS.date AS date,
		          RHS.pilot_name AS pilot_name,
		          RHS.rank AS rank,
		          RHS.age AS age,
		          RHS.nationality AS nationality,
		          RHS.position AS POSITION,
		          RHS.join_year AS join_year,
		          RHS.team AS team
		   FROM
		     (SELECT LHS.aircraft_id AS aircraft_id,
		             LHS.order_year AS order_year,
		             LHS.manufacturer AS manufacturer,
		             LHS.model AS model,
		             LHS.fleet_series AS fleet_series,
		             LHS.powertrain AS powertrain,
		             LHS.fuel_propulsion AS fuel_propulsion,
		             RHS.record_id AS record_id,
		             RHS.pilot_id AS pilot_id,
		             RHS.date AS date
		      FROM aircraft AS LHS
		      INNER JOIN pilot_record AS RHS ON (LHS.aircraft_id = RHS.aircraft_id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM pilot
		      WHERE (age <= 34)) AS RHS ON (LHS.pilot_id = RHS.pilot_id))
		ORDER BY fleet_series

	        fleet_series
	0         465-467 (3
	1        465-467 (3)
	2        465-467 (3)
	3        465-467 (3)
	4        465-467 (3)
	5         474-481 (8
	6         474-481 (8
	7        474-481 (8)
	8        474-481 (8)
	9   474-481 (8)ABdw 
	10  474-481 (8)ABdw 
	11  474-481 (8)ABdw 
	12  474-481 (8)YyYT0
	13  474-481 (8)YyYT0
	14  474-481 (8)YyYT0
	15      482-492 (11)
	16      482-492 (11)
	17      482-492 (11)
	18      482-492 (11)
	19      482-492 (11)
	20      482-492 (11)
	21      482-492 (11)
	22  cZVUQ474-481 (8)
	23  cZVUQ474-481 (8)
	24  cZVUQ474-481 (8)
	25  cZVUQ474-481 (8)
	26  cZVUQ474-481 (8)
Wrong output for fuzzied solution in instance spider/pilot_record/0005 (304)
	EXPECTED OUTPUT ====

		SELECT Pilot_name
		FROM pilot
		WHERE Team = "Bradley"
		  OR Team = "Fordham"

	              pilot_name
	0         Charles Oakley
	1          Dan O'Sulliva
	2         Dan O'Sullivan
	3    Dan O'Sullivanac2aS
	4        Jermaine O'Neal
	5   Jermaine O'NealfykOt
	6       Patrick O'Bryant
	7    TT20OCharles Oakley
	8        atrick O'Bryant
	9        atrick O'Bryant
	10        ermaine O'Neal
	ACTUAL OUTPUT ====

		
		SELECT `pilot_name`
		FROM
		  (SELECT `pilot_name`
		   FROM `pilot`
		   WHERE (`team` = 'Bradley'
		          OR `team` = 'Fordham') INTERSECT
		     SELECT pilot_name
		     FROM pilot)
		ORDER BY pilot_name

	             pilot_name
	0        Charles Oakley
	1         Dan O'Sulliva
	2        Dan O'Sullivan
	3   Dan O'Sullivanac2aS
	4       Jermaine O'Neal
	5  Jermaine O'NealfykOt
	6      Patrick O'Bryant
	7   TT20OCharles Oakley
	8       atrick O'Bryant
	9        ermaine O'Neal
Wrong output for fuzzied solution in instance spider/pilot_record/0001 (306)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM pilot

	   count(*)
	0         6
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT join_year,
		          team,
		          COUNT() AS n
		   FROM pilot
		   GROUP BY join_year,
		            team)
		ORDER BY count___

	   count___
	0         5
Wrong output for fuzzied solution in instance spider/pilot_record/0014 (307)
	EXPECTED OUTPUT ====

		SELECT T2.Pilot_name,
		       COUNT(*)
		FROM pilot_record AS T1
		JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID
		GROUP BY T2.Pilot_name
		HAVING COUNT(*) > 1

	              pilot_name  count(*)
	0  Patrick O'BryantPCOHG        13
	1          harles Oakley        13
	2          Charles Oakle        14
	3         Charles Oakley        14
	4    Dan O'Sullivan)78Pv        16
	5          Dan O'Sulliva        17
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT pilot_name,
		                COUNT(*) OVER () AS count___
		FROM
		  (SELECT record_id,
		          pilot_id,
		          pilot_id AS aircraft_id, date, pilot_name,
		                                         rank,
		                                         age,
		                                         nationality,
		                                         POSITION,
		                                         join_year,
		                                         team,
		                                         record_id_other,
		                                         pilot_id_other,
		                                         date_other,
		                                         pilot_name_other,
		                                         age_other,
		                                         nationality_other,
		                                         position_other,
		                                         join_year_other,
		                                         team_other
		   FROM
		     (SELECT LHS.record_id AS record_id,
		             LHS.pilot_id AS pilot_id,
		             LHS.aircraft_id AS aircraft_id,
		             LHS.date AS date,
		             LHS.pilot_name AS pilot_name,
		             LHS.rank AS rank,
		             LHS.age AS age,
		             LHS.nationality AS nationality,
		             LHS.position AS POSITION,
		             LHS.join_year AS join_year,
		             LHS.team AS team,
		             RHS.record_id AS record_id_other,
		             RHS.pilot_id AS pilot_id_other,
		             RHS.date AS date_other,
		             RHS.pilot_name AS pilot_name_other,
		             RHS.age AS age_other,
		             RHS.nationality AS nationality_other,
		             RHS.position AS position_other,
		             RHS.join_year AS join_year_other,
		             RHS.team AS team_other
		      FROM
		        (SELECT LHS.record_id AS record_id,
		                LHS.pilot_id AS pilot_id,
		                LHS.aircraft_id AS aircraft_id,
		                LHS.date AS date,
		                RHS.pilot_name AS pilot_name,
		                RHS.rank AS rank,
		                RHS.age AS age,
		                RHS.nationality AS nationality,
		                RHS.position AS POSITION,
		                RHS.join_year AS join_year,
		                RHS.team AS team
		         FROM pilot_record AS LHS
		         LEFT JOIN pilot AS RHS ON (LHS.pilot_id = RHS.pilot_id)) AS LHS
		      INNER JOIN
		        (SELECT LHS.record_id AS record_id,
		                LHS.pilot_id AS pilot_id,
		                LHS.aircraft_id AS aircraft_id,
		                LHS.date AS date,
		                RHS.pilot_name AS pilot_name,
		                RHS.rank AS rank,
		                RHS.age AS age,
		                RHS.nationality AS nationality,
		                RHS.position AS POSITION,
		                RHS.join_year AS join_year,
		                RHS.team AS team
		         FROM pilot_record AS LHS
		         LEFT JOIN pilot AS RHS ON (LHS.pilot_id = RHS.pilot_id)) AS RHS ON (LHS.pilot_id = RHS.aircraft_id
		                                                                                AND LHS.rank = RHS.rank)))
		ORDER BY pilot_name

	       pilot_name  count___
	0   Charles Oakle       174
	1  Charles Oakley       174
	2   Dan O'Sulliva       174
	3   harles Oakley       174
Wrong output for fuzzied solution in instance spider/pilot_record/0009 (308)
	EXPECTED OUTPUT ====

		SELECT POSITION
		FROM pilot
		WHERE Join_Year < 2000 INTERSECT
		  SELECT POSITION
		  FROM pilot WHERE Join_Year > 2005

	Empty DataFrame
	Columns: [position]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT POSITION
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM pilot
		      WHERE (join_year <= 2000
		             AND join_year != 2005)) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM pilot AS RHS
		        WHERE (LHS.pilot_id = RHS.pilot_id
		               AND LHS.pilot_name = RHS.pilot_name
		               AND LHS.rank = RHS.rank
		               AND LHS.age = RHS.age
		               AND LHS.nationality = RHS.nationality
		               AND LHS.position = RHS.position
		               AND LHS.join_year = RHS.join_year
		               AND LHS.team = RHS.team) ))
		ORDER BY POSITION

	                   position
	0  Forward-Center TeamQFZ5H
No solution for instance spider/local_govt_in_alabama/0008 (312)
Wrong output for fuzzied solution in instance spider/local_govt_in_alabama/0013 (314)
	EXPECTED OUTPUT ====

		SELECT T1.service_type_code
		FROM services AS T1
		JOIN EVENTS AS T2 ON T1.service_id = T2.service_id
		WHERE T2.event_details = 'Success' INTERSECT
		  SELECT T1.service_type_code
		  FROM services AS T1
		  JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Fail'

	   service_type_code
	0         Birth Proo
	1   Birth Proof0KlSO
	2   Birth Proof7gMmG
	3   E9)EUDeath Proof
	4           Marriage
	5  u6XBirth ProofNLU
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `service_type_code`
		FROM
		  (SELECT `LHS`.`service_id` AS `service_id`,
		          `LHS`.`service_type_code` AS `service_type_code`,
		          `LHS`.`event_id` AS `event_id`,
		          `LHS`.`event_details` AS `event_details`
		   FROM
		     (SELECT `LHS`.`service_id` AS `service_id`,
		             `LHS`.`service_type_code` AS `service_type_code`,
		             `RHS`.`event_id` AS `event_id`,
		             `RHS`.`event_details` AS `event_details`
		      FROM `services` AS `LHS`
		      INNER JOIN `events` AS `RHS` ON (`LHS`.`service_id` = `RHS`.`service_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `events`
		      WHERE (`event_details` = 'Success'
		             AND `event_details` != 'Fail')) AS RHS ON (LHS.service_id = RHS.service_id
		                                                        AND LHS.event_id = RHS.event_id
		                                                        AND LHS.event_details = RHS.event_details))
		ORDER BY service_type_code

	   service_type_code
	0       w8hkMarriage
	1         Birth Proo
	2   Birth Proof0KlSO
	3   Birth Proof7gMmG
	4   E9)EUDeath Proof
	5           Marriage
	6  u6XBirth ProofNLU
Wrong output for fuzzied solution in instance spider/local_govt_in_alabama/0006 (315)
	EXPECTED OUTPUT ====

		SELECT service_type_code
		FROM services
		ORDER BY service_type_code

	  service_type_code
	0       Birth Proof
	1       Birth Proof
	2           Marriag
	3    Property Chang
	4           arriage
	5           arriage
	6    roperty Change
	7  rqrHJBirth Proof
	ACTUAL OUTPUT ====

		
		SELECT service_type_code
		FROM
		  (SELECT service_type_code
		   FROM services INTERSECT SELECT service_type_code
		   FROM services)
		ORDER BY service_type_code

	  service_type_code
	0       Birth Proof
	1           Marriag
	2    Property Chang
	3           arriage
	4    roperty Change
	5  rqrHJBirth Proof
Wrong output for fuzzied solution in instance spider/local_govt_in_alabama/0005 (319)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM participants
		WHERE participant_type_code = 'Organizer'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `participants`
		WHERE (`participant_type_code` = 'Organizer')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/local_govt_in_alabama/0014 (322)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM EVENTS
		WHERE event_id NOT IN
		    (SELECT event_id
		     FROM Participants_in_Events)

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT *
		   FROM events AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM participants_in_events AS RHS
		        WHERE (LHS.event_id = RHS.event_id) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/local_govt_in_alabama/0009 (323)
	EXPECTED OUTPUT ====

		SELECT participant_type_code
		FROM participants
		GROUP BY participant_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  participant_type_code
	0              Organize
	ACTUAL OUTPUT ====

		
		SELECT participant_type_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT participant_details,
		                participant_type_code,
		                COUNT() AS n
		         FROM participants
		         GROUP BY participant_details,
		                  participant_type_code)
		      ORDER BY n DESC)
		   LIMIT 1)

	  participant_type_code
	0        SaQ5dOrganizer
Wrong output for fuzzied solution in instance spider/local_govt_in_alabama/0011 (324)
	EXPECTED OUTPUT ====

		SELECT Event_ID
		FROM Participants_in_Events
		GROUP BY Event_ID
		ORDER BY count(*) DESC
		LIMIT 1

	   event_id
	0        61
	ACTUAL OUTPUT ====

		
		SELECT event_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT event_id,
		                participant_id,
		                COUNT() AS n
		         FROM participants_in_events
		         GROUP BY event_id,
		                  participant_id)
		      ORDER BY participant_id DESC)
		   LIMIT 1)

	   event_id
	0        14
Wrong output for fuzzied solution in instance spider/local_govt_in_alabama/0010 (325)
	EXPECTED OUTPUT ====

		SELECT T3.service_id,
		       T4.Service_Type_Code
		FROM participants AS T1
		JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID
		JOIN EVENTS AS T3 ON T2.Event_ID = T3.Event_ID
		JOIN services AS T4 ON T3.service_id = T4.service_id
		GROUP BY T3.service_id
		ORDER BY count(*) ASC
		LIMIT 1

	   service_id service_type_code
	0           8    Property Chang
	ACTUAL OUTPUT ====

		
		SELECT service_id,
		       service_type_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT service_id,
		                service_type_code,
		                COUNT() AS n
		         FROM
		           (SELECT LHS.service_id AS service_id,
		                   LHS.service_type_code AS service_type_code,
		                   LHS.participant_id AS participant_id,
		                   LHS.participant_type_code AS participant_type_code,
		                   LHS.participant_details AS participant_details,
		                   LHS.event_id AS event_id,
		                   LHS.event_details AS event_details
		            FROM
		              (SELECT LHS.service_id AS service_id,
		                      LHS.service_type_code AS service_type_code,
		                      LHS.participant_id AS participant_id,
		                      LHS.participant_type_code AS participant_type_code,
		                      LHS.participant_details AS participant_details,
		                      RHS.event_id AS event_id,
		                      RHS.event_details AS event_details
		               FROM
		                 (SELECT LHS.service_id AS service_id,
		                         LHS.service_type_code AS service_type_code,
		                         RHS.participant_id AS participant_id,
		                         RHS.participant_type_code AS participant_type_code,
		                         RHS.participant_details AS participant_details
		                  FROM services AS LHS
		                  CROSS JOIN participants AS RHS) AS LHS
		               INNER JOIN events AS RHS ON (LHS.service_id = RHS.service_id)) AS LHS
		            INNER JOIN participants_in_events AS RHS ON (LHS.participant_id = RHS.participant_id
		                                                            AND LHS.event_id = RHS.event_id))
		         GROUP BY service_id,
		                  service_type_code)
		      ORDER BY service_type_code)
		   LIMIT 1)

	   service_id service_type_code
	0           9       Birth Proof
No solution for instance spider/architecture/0017 (327)
Wrong output for fuzzied solution in instance spider/architecture/0008 (328)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.type
		FROM mill AS T1
		JOIN architect AS t2 ON T1.architect_id = T2.id
		WHERE T2.nationality = 'American'
		  OR T2.nationality = 'Canadian'

	Empty DataFrame
	Columns: [type]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `type`
		FROM
		  (SELECT `LHS`.`architect_id` AS `architect_id`,
		          `LHS`.`id` AS `id`,
		          `LHS`.`location` AS `location`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`type` AS `type`,
		          `LHS`.`built_year` AS `built_year`,
		          `LHS`.`notes` AS `notes`,
		          `RHS`.`id` AS `id_other`,
		          `RHS`.`name` AS `name_other`,
		          `RHS`.`type` AS `type_other`,
		          `RHS`.`built_year` AS `built_year_other`,
		          `RHS`.`notes` AS `notes_other`
		   FROM
		     (SELECT *
		      FROM `mill` AS `LHS`
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM `architect`
		              WHERE (`nationality` != 'American'
		                     AND `nationality` != 'Canadian')) AS `RHS`
		           WHERE (`LHS`.`name` = `RHS`.`name`) )) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `mill` AS `LHS`
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM `architect`
		              WHERE (`nationality` != 'American'
		                     AND `nationality` != 'Canadian')) AS RHS
		           WHERE (LHS.name = RHS.name) )) AS RHS ON (LHS.id = RHS.architect_id
		                                                     AND LHS.location = RHS.location))
		ORDER BY TYPE

	          type
	0  Grondzeiler
No solution for instance spider/architecture/0003 (329)
No solution for instance spider/architecture/0013 (330)
No solution for instance spider/architecture/0006 (331)
Wrong output for fuzzied solution in instance spider/architecture/0004 (332)
	EXPECTED OUTPUT ====

		SELECT avg(length_feet)
		FROM bridge

	   avg(length_feet)
	0      5.752078e+08
	ACTUAL OUTPUT ====

		
		SELECT meanlength_feet AS avg_length_feet_
		FROM
		  (SELECT AVG(length_feet) AS meanlength_feet
		   FROM
		     (SELECT length_feet,
		             LOCATION,
		             AVG(length_feet) AS meanlength_feet
		      FROM bridge
		      GROUP BY length_feet,
		               LOCATION))
		ORDER BY avg_length_feet_

	   avg_length_feet_
	0      6.194545e+08
Wrong output for fuzzied solution in instance spider/architecture/0015 (334)
	EXPECTED OUTPUT ====

		SELECT TYPE,
		       count(*)
		FROM mill
		GROUP BY TYPE
		ORDER BY count(*) DESC
		LIMIT 1

	          type  count(*)
	0  Grondzeiler         3
	ACTUAL OUTPUT ====

		
		SELECT TYPE,
		       n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT notes,
		                TYPE,
		                COUNT() AS n
		         FROM mill
		         GROUP BY notes,
		                  TYPE)
		      ORDER BY n DESC)
		   LIMIT 1)

	               type  count___
	0  GrondzeilerZxezF         1
Wrong output for fuzzied solution in instance spider/architecture/0016 (336)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM architect
		WHERE id NOT IN
		    (SELECT architect_id
		     FROM mill
		     WHERE built_year < 1850 );

	   count(*)
	0        80
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n_distinct AS count___
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.nationality AS nationality,
		          LHS.gender AS gender,
		          RHS.n_distinct AS n_distinct
		   FROM architect AS LHS
		   CROSS JOIN
		     (SELECT COUNT(DISTINCT id) AS n_distinct
		      FROM mill
		      WHERE (built_year > 1850
		             AND built_year != id)) AS RHS)
		ORDER BY count___

	   count___
	0         5
Wrong output for fuzzied solution in instance spider/architecture/0007 (337)
	EXPECTED OUTPUT ====

		SELECT name
		FROM mill
		WHERE LOCATION != 'Donceel'

	                    name
	0   JmMoulin BertrandhS9
	1  1cnMoulin BertrandwFc
	2    Le Vieux MolenJSP1H
	3        Moulin Bertrand
	4        Moulin Bertrand
	5   agMLe Vieux MolenqXj
	6          e Vieux Molen
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `name`
		   FROM `mill` INTERSECT SELECT `name`
		   FROM `mill`
		   WHERE (`location` != 'Donceel'))
		ORDER BY name

	                    name
	0   JmMoulin BertrandhS9
	1  1cnMoulin BertrandwFc
	2    Le Vieux MolenJSP1H
	3        Moulin Bertrand
	4   agMLe Vieux MolenqXj
	5          e Vieux Molen
Wrong output for fuzzied solution in instance spider/architecture/0001 (338)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM architect
		WHERE gender = 'female'

	   count(*)
	0        17
	ACTUAL OUTPUT ====

		
		SELECT COUNT(*) OVER () AS `count___`
		FROM `architect`
		WHERE (`gender` = 'female')
		ORDER BY count___

	    count___
	0         17
	1         17
	2         17
	3         17
	4         17
	5         17
	6         17
	7         17
	8         17
	9         17
	10        17
	11        17
	12        17
	13        17
	14        17
	15        17
	16        17
Wrong output for fuzzied solution in instance spider/architecture/0014 (339)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.name
		FROM mill AS T1
		JOIN architect AS t2 ON T1.architect_id = T2.id
		JOIN bridge AS T3 ON T3.architect_id = T2.id
		WHERE T3.length_meters > 80

	                       name
	0          27AQEwKw4ONvvWYB
	1            Moulin Bertran
	2           Moulin Bertrand
	3      Moulin Bertrande8Vmd
	4          Moulin de Momall
	5      RjXLe Vieux Molen9e 
	6  whtyH(DF4vbBEED61LUKque9
	7      z8ntUMoulin Bertrand
	ACTUAL OUTPUT ====

		
		SELECT name_other AS name
		FROM
		  (SELECT LHS.architect_id AS architect_id,
		          LHS.id AS id,
		          LHS.name AS name,
		          LHS.location AS LOCATION,
		          LHS.length_meters AS length_meters,
		          LHS.length_feet AS length_feet,
		          RHS.id AS id_other,
		          RHS.location AS location_other,
		          RHS.name AS name_other,
		          RHS.type AS TYPE,
		          RHS.built_year AS built_year,
		          RHS.notes AS notes
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM bridge
		         WHERE (length_meters > 80.0)) AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM architect AS RHS
		           WHERE (LHS.name = RHS.name) )) AS LHS
		   INNER JOIN mill AS RHS ON (LHS.architect_id = RHS.architect_id))
		ORDER BY name

	                        name
	0           27AQEwKw4ONvvWYB
	1             Moulin Bertran
	2             Moulin Bertran
	3            Moulin Bertrand
	4            Moulin Bertrand
	5            Moulin Bertrand
	6       Moulin Bertrande8Vmd
	7           Moulin de Momall
	8       RjXLe Vieux Molen9e 
	9   whtyH(DF4vbBEED61LUKque9
	10  whtyH(DF4vbBEED61LUKque9
	11      z8ntUMoulin Bertrand
Wrong output for fuzzied solution in instance spider/architecture/0009 (340)
	EXPECTED OUTPUT ====

		SELECT T1.id,
		       T1.name
		FROM architect AS T1
		JOIN bridge AS T2 ON T1.id = T2.architect_id
		GROUP BY T1.id
		HAVING count(*) >= 3

	Empty DataFrame
	Columns: [id, name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT id,
		       name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.id AS id,
		                LHS.name AS name,
		                LHS.nationality AS nationality,
		                LHS.gender AS gender,
		                RHS.n AS n
		         FROM architect AS LHS
		         CROSS JOIN
		           (SELECT COUNT() AS n
		            FROM bridge) AS RHS)
		      ORDER BY name)
		   LIMIT 3)

	       id                      name
	0       4   )YpBXFrank Lloyd Wright
	1  6O15Cv         4vVgVLe Corbusier
	2  vKSCA2  6P9Frank Lloyd WrightYBv
No solution for instance spider/architecture/0011 (341)
Wrong output for fuzzied solution in instance spider/architecture/0010 (342)
	EXPECTED OUTPUT ====

		SELECT T1.id,
		       T1.name,
		       T1.nationality
		FROM architect AS T1
		JOIN mill AS T2 ON T1.id = T2.architect_id
		GROUP BY T1.id
		ORDER BY count(*) DESC
		LIMIT 1

	  id        name         nationality
	0  3  Zaha Hadid  Swiss, FrenchEun2W
	ACTUAL OUTPUT ====

		
		SELECT id,
		       name,
		       nationality
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM architect AS LHS
		         WHERE NOT EXISTS
		             (SELECT 1
		              FROM
		                (SELECT name,
		                        COUNT() AS n
		                 FROM mill
		                 GROUP BY name) AS RHS
		              WHERE (LHS.name = RHS.name) ))
		      ORDER BY nationality)
		   LIMIT 1)

	        id                name           nationality
	0  nW33Oa6  Frank Lloyd Wright  0J2Iraqi, BritishQ9B
Wrong output for fuzzied solution in instance spider/election_representative/0017 (344)
	EXPECTED OUTPUT ====

		SELECT State
		FROM representative
		GROUP BY State
		HAVING COUNT(*) >= 2

	       state
	0  Minnesota
	ACTUAL OUTPUT ====

		
		SELECT state
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT representative_id,
		                state,
		                COUNT() AS n
		         FROM representative
		         GROUP BY representative_id,
		                  state)
		      ORDER BY representative_id DESC)
		   LIMIT 2)

	          state
	0  Indiana9awO)
	1      Minnesot
Wrong output for fuzzied solution in instance spider/election_representative/0013 (347)
	EXPECTED OUTPUT ====

		SELECT avg(T1.Votes)
		FROM election AS T1
		JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID
		WHERE T2.Party = "Republican"

	  avg(t1.votes)
	0          None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(`votes`) OVER () AS `avg_t1_votes_`
		FROM
		  (SELECT *
		   FROM `election` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `representative`
		           WHERE (`party` != 'Republican')) AS RHS
		        WHERE (LHS.representative_id = RHS.representative_id) ))
		ORDER BY avg_t1_votes_

	Empty DataFrame
	Columns: [avg_t1_votes_]
	Index: []
Wrong output for fuzzied solution in instance spider/election_representative/0012 (350)
	EXPECTED OUTPUT ====

		SELECT T2.Lifespan
		FROM election AS T1
		JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID
		ORDER BY Vote_Percent DESC

	         lifespan
	0  1916–2003Bl)T2
	1           1918–
	2           1918–
	3           1918–
	4           1918–
	5        916–2003
	6            918–
	ACTUAL OUTPUT ====

		
		SELECT lifespan
		FROM
		  (SELECT *
		   FROM representative AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM election AS RHS
		        WHERE (LHS.representative_id = RHS.representative_id) ))
		ORDER BY lifespan

	         lifespan
	0  1916–2003Bl)T2
	1           1918–
	2           1918–
	3           1918–
	4        916–2003
	5            918–
Wrong output for fuzzied solution in instance spider/election_representative/0015 (351)
	EXPECTED OUTPUT ====

		SELECT Party,
		       COUNT(*)
		FROM representative
		GROUP BY Party
		ORDER BY COUNT(*) DESC
		LIMIT 1

	        party  count(*)
	0  Republican         6
	ACTUAL OUTPUT ====

		
		SELECT party,
		       n AS count___
		FROM
		  (SELECT LHS.party AS party,
		          LHS.n AS n,
		          RHS.party AS party_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT party,
		             COUNT() AS n
		      FROM representative
		      GROUP BY party) AS LHS
		   CROSS JOIN
		     (SELECT party,
		             COUNT() AS n
		      FROM representative
		      GROUP BY party) AS RHS)
		WHERE (n > n_other)
		ORDER BY party

	        party  count___
	0  Democratic         2
	1  Democratic         2
	2  Democratic         2
	3  Republican         6
	4  Republican         6
	5  Republican         6
	6  Republican         6
Wrong output for fuzzied solution in instance spider/election_representative/0016 (353)
	EXPECTED OUTPUT ====

		SELECT Party
		FROM representative
		GROUP BY Party
		HAVING COUNT(*) >= 3

	        party
	0  Republican
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT party
		FROM
		  (SELECT representative_id,
		          name,
		          state,
		          party,
		          lifespan,
		          COUNT(*) OVER () AS n
		   FROM representative)
		WHERE (n >= 3)
		ORDER BY party

	              party
	0  8fERepublicanbcN
	1  B1ERepublicanfy)
	2        Democratic
	3        Republican
	4         epublican
Wrong output for fuzzied solution in instance spider/election_representative/0019 (356)
	EXPECTED OUTPUT ====

		SELECT Party
		FROM representative
		WHERE State = "New York" INTERSECT
		  SELECT Party
		  FROM representative WHERE State = "Pennsylvania"

	Empty DataFrame
	Columns: [party]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `party`
		FROM
		  (SELECT `party`
		   FROM `representative` INTERSECT SELECT `party`
		   FROM `representative`
		   WHERE (`state` != 'New York'
		          AND `state` = 'Pennsylvania'))
		ORDER BY party

	             party
	0       Democratic
	1  YcY(2Democratic
Wrong output for fuzzied solution in instance spider/election_representative/0001 (358)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM election

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT representative_id,
		          vote_percent,
		          COUNT() AS n
		   FROM election
		   GROUP BY representative_id,
		            vote_percent)
		ORDER BY count___

	   count___
	0         6
Wrong output for fuzzied solution in instance spider/election_representative/0011 (361)
	EXPECTED OUTPUT ====

		SELECT T2.Party
		FROM election AS T1
		JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID
		ORDER BY votes ASC
		LIMIT 1

	        party
	0  Republican
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT party
		FROM
		  (SELECT *
		   FROM representative AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM election AS RHS
		        WHERE (LHS.representative_id = RHS.representative_id) ))
		ORDER BY party

	              party
	0  8fERepublicanbcN
	1        Republican
Wrong output for fuzzied solution in instance spider/election_representative/0010 (362)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM election AS T1
		JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID
		ORDER BY votes DESC

	                    name
	0  Crox James M. Quigley
	1         James L. Quinn
	2          Jimmy Quillen
	3          Jimmy Quillen
	4          Jimmy Quillen
	5       John QuayleMbehq
	6    nViJimmy QuillenU)d
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM representative AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM election AS RHS
		        WHERE (LHS.representative_id = RHS.representative_id) ))
		ORDER BY name

	                    name
	0  Crox James M. Quigley
	1         James L. Quinn
	2          Jimmy Quillen
	3          Jimmy Quillen
	4       John QuayleMbehq
	5    nViJimmy QuillenU)d
Wrong output for fuzzied solution in instance spider/student_assessment/0002 (363)
	EXPECTED OUTPUT ====

		SELECT student_id
		FROM student_course_registrations
		GROUP BY student_id
		ORDER BY count(*)
		LIMIT 1

	   student_id
	0         121
	ACTUAL OUTPUT ====

		
		SELECT student_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT course_id,
		                student_id,
		                COUNT() AS n
		         FROM student_course_registrations
		         GROUP BY course_id,
		                  student_id)
		      ORDER BY n DESC)
		   LIMIT 1)

	   student_id
	0         109
Wrong output for fuzzied solution in instance spider/student_assessment/0017 (364)
	EXPECTED OUTPUT ====

		SELECT student_id
		FROM student_course_attendance
		WHERE course_id = 301

	Empty DataFrame
	Columns: [student_id]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT student_id
		FROM student_course_attendance
		WHERE (course_id <= 301)
		ORDER BY student_id

	   student_id
	0         120
	1         169
	2         169
Wrong output for fuzzied solution in instance spider/student_assessment/0008 (365)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM courses AS T1
		JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id
		WHERE T1.course_name = "English"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT *
		   FROM
		     (SELECT `student_id`,
		             COUNT() AS `n`
		      FROM `student_course_attendance`
		      GROUP BY `student_id`) AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT `course_name`,
		                     `other_details`,
		                     COUNT() AS `n`
		              FROM `courses`
		              GROUP BY `course_name`,
		                       `other_details`)
		           WHERE (`course_name` != 'English')) AS RHS
		        WHERE (LHS.n = RHS.n) ))
		ORDER BY count___

	   count___
	0         3
	1         4
	2         5
	3         6
	4         7
	5         9
	6        10
Wrong output for fuzzied solution in instance spider/student_assessment/0003 (366)
	EXPECTED OUTPUT ====

		SELECT T2.first_name,
		       T2.last_name
		FROM candidates AS T1
		JOIN people AS T2 ON T1.candidate_id = T2.person_id

	       first_name         last_name
	0     jpu2i2Vsfzx            Bednar
	1      39)NovaMa4            Senger
	2          DBmA3s            1EAyti
	3    EpiVhbiE vUK        XHE0mXIe(O
	4           Lizet       M5WHCSenger
	5          Lizeth             Grant
	6          Lizeth             Grant
	7          Lizeth       aOcGrantIZ 
	8          Lizeth       x0NGrantip5
	9     LizethVzjn2       5HCIaBednar
	10            Nov        Wintheiser
	11            Nov           eV uSWt
	12           Nova       PeBb EXvoAq
	13         ODMUAW          rnEPUsg)
	14         Shanno            Bednar
	15         Shanno             Grant
	16         Shanno   e71ClWintheiser
	17        Shannon        7C56kGrant
	18        Shannon             Bedna
	19        Shannon            Bednar
	20        Shannon       BednarUQlc(
	21        Shannon             Grant
	22        Shannon             Grant
	23        Shannon   PqfPWWintheiser
	24        Shannon      UTDSengerT(T
	25        Shannon        Wintheiser
	26        Shannon        Wintheiser
	27        Shannon        Wintheiser
	28        Shannon        Wintheiser
	29   Shannong(YzC             EAyti
	30   ShannonlnGjk            Senger
	31           T Zc       SengerlBkJ(
	32   U0TnQShannon      3kwSengerUHO
	33        Virgini             Grant
	34        Virgini        Wintheiser
	35        Virgini       jnoGrantR8j
	36       Virginie  6dG9ofwbQQeBMsqD
	37       Virginie             Bedna
	38       Virginie             Senge
	39       Virginie         ZZjmRFDmn
	40       Virginie       rTDKFnk6yAC
	41  Virginie8D Tr            Senger
	42  Virginieyjyqk       zL4Grant46l
	43           W7RZ      VU4BednarQAC
	44   ZPGxeShannon         Wintheise
	45  ZXZgHqNpVodxJ            fq3ext
	46      cYXfH2fab             Grant
	47         hannon             Grant
	48        irginie            Senger
	49        irginie            uFkmK)
	50          izeth           66soZyE
	51   j3r4jShannon             Bedna
	52    nNmfFyDt1i8       GYhrgSenger
	53         na CoD             Grant
	54    vTMTASEwO4d             Grant
	55      vVsS)Nova             Grant
	ACTUAL OUTPUT ====

		
		SELECT first_name,
		       last_name
		FROM people
		ORDER BY first_name

	       first_name         last_name
	0     jpu2i2Vsfzx            Bednar
	1      39)NovaMa4            Senger
	2          DBmA3s            1EAyti
	3    EpiVhbiE vUK        XHE0mXIe(O
	4           Lizet       M5WHCSenger
	5          Lizeth             Grant
	6          Lizeth             Grant
	7          Lizeth       aOcGrantIZ 
	8          Lizeth       x0NGrantip5
	9     LizethVzjn2       5HCIaBednar
	10            Nov        Wintheiser
	11            Nov           eV uSWt
	12           Nova         LiRzm(BC6
	13           Nova       PeBb EXvoAq
	14         ODMUAW          rnEPUsg)
	15         Shanno            Bednar
	16         Shanno             Grant
	17         Shanno        Wintheiser
	18         Shanno   e71ClWintheiser
	19        Shannon        7C56kGrant
	20        Shannon             Bedna
	21        Shannon            Bednar
	22        Shannon       BednarUQlc(
	23        Shannon             Grant
	24        Shannon             Grant
	25        Shannon   PqfPWWintheiser
	26        Shannon      UTDSengerT(T
	27        Shannon        Wintheiser
	28        Shannon        Wintheiser
	29        Shannon        Wintheiser
	30        Shannon        Wintheiser
	31   Shannong(YzC             EAyti
	32   ShannonlnGjk            Senger
	33  Sq y1Virginie            Bednar
	34           T Zc       SengerlBkJ(
	35   U0TnQShannon      3kwSengerUHO
	36        Virgini             Grant
	37        Virgini        Wintheiser
	38        Virgini       jnoGrantR8j
	39       Virginie  6dG9ofwbQQeBMsqD
	40       Virginie             Bedna
	41       Virginie             Senge
	42       Virginie        Wintheiser
	43       Virginie         ZZjmRFDmn
	44       Virginie       rTDKFnk6yAC
	45  Virginie8D Tr            Senger
	46  Virginieyjyqk       zL4Grant46l
	47           W7RZ      VU4BednarQAC
	48   ZPGxeShannon         Wintheise
	49  ZXZgHqNpVodxJ            fq3ext
	50      cYXfH2fab             Grant
	51         hannon             Grant
	52        irginie            Senger
	53        irginie            uFkmK)
	54          izeth           66soZyE
	55   j3r4jShannon             Bedna
	56    nNmfFyDt1i8       GYhrgSenger
	57         na CoD             Grant
	58    vTMTASEwO4d             Grant
	59      vVsS)Nova             Grant
No solution for instance spider/student_assessment/0027 (367)
No solution for instance spider/student_assessment/0006 (370)
Wrong output for fuzzied solution in instance spider/student_assessment/0012 (372)
	EXPECTED OUTPUT ====

		SELECT T1.student_details
		FROM students AS T1
		JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id
		GROUP BY T1.student_id
		ORDER BY count(*) DESC
		LIMIT 1

	  student_details
	0     G53Nancyrxw
	ACTUAL OUTPUT ====

		
		SELECT student_details
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.student_id AS student_id,
		                LHS.course_id AS course_id,
		                LHS.registration_date AS registration_date,
		                RHS.student_details AS student_details,
		                RHS.n AS n
		         FROM student_course_registrations AS LHS
		         INNER JOIN
		           (SELECT student_details,
		                   student_id,
		                   COUNT() AS n
		            FROM students
		            GROUP BY student_details,
		                     student_id) AS RHS ON (LHS.student_id = RHS.student_id))
		      ORDER BY registration_date)
		   LIMIT 1)

	  student_details
	0    ZZqNikhilByc
No solution for instance spider/student_assessment/0026 (373)
Wrong output for fuzzied solution in instance spider/student_assessment/0016 (376)
	EXPECTED OUTPUT ====

		SELECT T3.cell_mobile_number
		FROM candidates AS T1
		JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id
		JOIN people AS T3 ON T1.candidate_id = T3.person_id
		WHERE T2.asessment_outcome_code = "Fail"

	         cell_mobile_number
	0         (262)347-9364x516
	1   )bptO1-372-548-7538x314
	2        1-372-548-7538x314
	3        1-372-548-7538x314
	4  R)v1-372-548-7538x314dsG
	5    oMm1F(262)347-9364x516
	ACTUAL OUTPUT ====

		
		SELECT `cell_mobile_number`
		FROM
		  (SELECT `LHS`.`person_id` AS `person_id`,
		          `LHS`.`first_name` AS `first_name`,
		          `LHS`.`middle_name` AS `middle_name`,
		          `LHS`.`last_name` AS `last_name`,
		          `LHS`.`cell_mobile_number` AS `cell_mobile_number`,
		          `LHS`.`email_address` AS `email_address`,
		          `LHS`.`login_name` AS `login_name`,
		          `LHS`.`password` AS `password`,
		          `LHS`.`candidate_id` AS `candidate_id`,
		          `LHS`.`candidate_details` AS `candidate_details`,
		          `LHS`.`qualification` AS `qualification`,
		          `LHS`.`assessment_date` AS `assessment_date`,
		          `LHS`.`asessment_outcome_code` AS `asessment_outcome_code`,
		          `RHS`.`first_name` AS `first_name_other`,
		          `RHS`.`middle_name` AS `middle_name_other`,
		          `RHS`.`cell_mobile_number` AS `cell_mobile_number_other`,
		          `RHS`.`email_address` AS `email_address_other`,
		          `RHS`.`login_name` AS `login_name_other`,
		          `RHS`.`password` AS `password_other`,
		          `RHS`.`candidate_id` AS `candidate_id_other`,
		          `RHS`.`candidate_details` AS `candidate_details_other`,
		          `RHS`.`qualification` AS `qualification_other`,
		          `RHS`.`assessment_date` AS `assessment_date_other`,
		          `RHS`.`asessment_outcome_code` AS `asessment_outcome_code_other`
		   FROM
		     (SELECT `LHS`.`person_id` AS `person_id`,
		             `LHS`.`first_name` AS `first_name`,
		             `LHS`.`middle_name` AS `middle_name`,
		             `LHS`.`last_name` AS `last_name`,
		             `LHS`.`cell_mobile_number` AS `cell_mobile_number`,
		             `LHS`.`email_address` AS `email_address`,
		             `LHS`.`login_name` AS `login_name`,
		             `LHS`.`password` AS `password`,
		             `LHS`.`candidate_id` AS `candidate_id`,
		             `LHS`.`candidate_details` AS `candidate_details`,
		             `LHS`.`qualification` AS `qualification`,
		             `LHS`.`assessment_date` AS `assessment_date`,
		             `LHS`.`asessment_outcome_code` AS `asessment_outcome_code`
		      FROM
		        (SELECT `LHS`.`person_id` AS `person_id`,
		                `LHS`.`first_name` AS `first_name`,
		                `LHS`.`middle_name` AS `middle_name`,
		                `LHS`.`last_name` AS `last_name`,
		                `LHS`.`cell_mobile_number` AS `cell_mobile_number`,
		                `LHS`.`email_address` AS `email_address`,
		                `LHS`.`login_name` AS `login_name`,
		                `LHS`.`password` AS `password`,
		                `LHS`.`candidate_id` AS `candidate_id`,
		                `LHS`.`candidate_details` AS `candidate_details`,
		                `RHS`.`qualification` AS `qualification`,
		                `RHS`.`assessment_date` AS `assessment_date`,
		                `RHS`.`asessment_outcome_code` AS `asessment_outcome_code`
		         FROM
		           (SELECT `LHS`.`person_id` AS `person_id`,
		                   `LHS`.`first_name` AS `first_name`,
		                   `LHS`.`middle_name` AS `middle_name`,
		                   `LHS`.`last_name` AS `last_name`,
		                   `LHS`.`cell_mobile_number` AS `cell_mobile_number`,
		                   `LHS`.`email_address` AS `email_address`,
		                   `LHS`.`login_name` AS `login_name`,
		                   `LHS`.`password` AS `password`,
		                   `RHS`.`candidate_id` AS `candidate_id`,
		                   `RHS`.`candidate_details` AS `candidate_details`
		            FROM `people` AS `LHS`
		            CROSS JOIN `candidates` AS `RHS`) AS `LHS`
		         INNER JOIN `candidate_assessments` AS `RHS` ON (`LHS`.`candidate_id` = `RHS`.`candidate_id`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `candidate_assessments`
		         WHERE (`asessment_outcome_code` = 'Fail')) AS `RHS` ON (`LHS`.`candidate_id` = `RHS`.`candidate_id`
		                                                                 AND `LHS`.`qualification` = `RHS`.`qualification`
		                                                                 AND `LHS`.`assessment_date` = `RHS`.`assessment_date`
		                                                                 AND `LHS`.`asessment_outcome_code` = `RHS`.`asessment_outcome_code`)) AS `LHS`
		   INNER JOIN
		     (SELECT `LHS`.`person_id` AS `person_id`,
		             `LHS`.`first_name` AS `first_name`,
		             `LHS`.`middle_name` AS `middle_name`,
		             `LHS`.`last_name` AS `last_name`,
		             `LHS`.`cell_mobile_number` AS `cell_mobile_number`,
		             `LHS`.`email_address` AS `email_address`,
		             `LHS`.`login_name` AS `login_name`,
		             `LHS`.`password` AS `password`,
		             `LHS`.`candidate_id` AS `candidate_id`,
		             `LHS`.`candidate_details` AS `candidate_details`,
		             `LHS`.`qualification` AS `qualification`,
		             `LHS`.`assessment_date` AS `assessment_date`,
		             `LHS`.`asessment_outcome_code` AS `asessment_outcome_code`
		      FROM
		        (SELECT `LHS`.`person_id` AS `person_id`,
		                `LHS`.`first_name` AS `first_name`,
		                `LHS`.`middle_name` AS `middle_name`,
		                `LHS`.`last_name` AS `last_name`,
		                `LHS`.`cell_mobile_number` AS `cell_mobile_number`,
		                `LHS`.`email_address` AS `email_address`,
		                `LHS`.`login_name` AS `login_name`,
		                `LHS`.`password` AS `password`,
		                `LHS`.`candidate_id` AS `candidate_id`,
		                `LHS`.`candidate_details` AS `candidate_details`,
		                `RHS`.`qualification` AS `qualification`,
		                `RHS`.`assessment_date` AS `assessment_date`,
		                `RHS`.`asessment_outcome_code` AS `asessment_outcome_code`
		         FROM
		           (SELECT `LHS`.`person_id` AS `person_id`,
		                   `LHS`.`first_name` AS `first_name`,
		                   `LHS`.`middle_name` AS `middle_name`,
		                   `LHS`.`last_name` AS `last_name`,
		                   `LHS`.`cell_mobile_number` AS `cell_mobile_number`,
		                   `LHS`.`email_address` AS `email_address`,
		                   `LHS`.`login_name` AS `login_name`,
		                   `LHS`.`password` AS `password`,
		                   `RHS`.`candidate_id` AS `candidate_id`,
		                   `RHS`.`candidate_details` AS `candidate_details`
		            FROM `people` AS `LHS`
		            CROSS JOIN `candidates` AS `RHS`) AS `LHS`
		         INNER JOIN `candidate_assessments` AS `RHS` ON (`LHS`.`candidate_id` = `RHS`.`candidate_id`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `candidate_assessments`
		         WHERE (`asessment_outcome_code` = 'Fail')) AS RHS ON (LHS.candidate_id = RHS.candidate_id
		                                                               AND LHS.qualification = RHS.qualification
		                                                               AND LHS.assessment_date = RHS.assessment_date
		                                                               AND LHS.asessment_outcome_code = RHS.asessment_outcome_code)) AS RHS ON (LHS.candidate_id = RHS.person_id
		                                                                                                                                        AND LHS.last_name = RHS.last_name))
		ORDER BY cell_mobile_number

	         cell_mobile_number
	0         (262)347-9364x516
	1         (262)347-9364x516
	2         (262)347-9364x516
	3         (262)347-9364x516
	4         (262)347-9364x516
	..                      ...
	133  oMm1F(262)347-9364x516
	134  oMm1F(262)347-9364x516
	135  oMm1F(262)347-9364x516
	136  oMm1F(262)347-9364x516
	137  oMm1F(262)347-9364x516
	
	[138 rows x 1 columns]
Wrong output for fuzzied solution in instance spider/student_assessment/0018 (377)
	EXPECTED OUTPUT ====

		SELECT student_id
		FROM student_course_attendance
		WHERE course_id = 301
		ORDER BY date_of_attendance DESC
		LIMIT 1

	Empty DataFrame
	Columns: [student_id]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT student_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM student_course_attendance
		         WHERE (course_id <= 301
		                AND course_id >= 1))
		      ORDER BY student_id DESC)
		   LIMIT 1)

	   student_id
	0         169
Wrong output for fuzzied solution in instance spider/student_assessment/0020 (378)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.city
		FROM addresses AS T1
		JOIN people_addresses AS T2 ON T1.address_id = T2.address_id
		JOIN students AS T3 ON T2.person_id = T3.student_id

	                   city
	0          'Connellview
	1   5CXO'ConnellviewJjB
	2        EzbeWmKap5VhEu
	3     HsxsVuclXqib50nL 
	4            Lake Devon
	5   ML8O'Connellview7VP
	6         O'Connellview
	7    O'ConnellviewkOUMn
	8    PbpCMO'Connellview
	9             ake Devon
	10     iMFjY2ZuqbEl78gJ
	11       muQldBP th X1D
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT city
		FROM
		  (SELECT LHS.address_id AS address_id,
		          LHS.line_1 AS line_1,
		          LHS.line_2 AS line_2,
		          LHS.city AS city,
		          LHS.zip_postcode AS zip_postcode,
		          LHS.state_province_county AS state_province_county,
		          LHS.country AS country,
		          LHS.student_id AS student_id,
		          LHS.student_details AS student_details,
		          RHS.person_address_id AS person_address_id,
		          RHS.person_id AS person_id,
		          RHS.date_from AS date_from,
		          RHS.date_to AS date_to
		   FROM
		     (SELECT LHS.address_id AS address_id,
		             LHS.line_1 AS line_1,
		             LHS.line_2 AS line_2,
		             LHS.city AS city,
		             LHS.zip_postcode AS zip_postcode,
		             LHS.state_province_county AS state_province_county,
		             LHS.country AS country,
		             RHS.student_id AS student_id,
		             RHS.student_details AS student_details
		      FROM addresses AS LHS
		      CROSS JOIN students AS RHS) AS LHS
		   INNER JOIN people_addresses AS RHS ON (LHS.address_id = RHS.address_id))
		ORDER BY city

	                     city
	0            'Connellview
	1     5CXO'ConnellviewJjB
	2          EzbeWmKap5VhEu
	3       HsxsVuclXqib50nL 
	4               Lake Devo
	5              Lake Devon
	6     ML8O'Connellview7VP
	7           O'Connellview
	8      O'ConnellviewgFxPF
	9      O'ConnellviewkOUMn
	10     PbpCMO'Connellview
	11              ake Devon
	12  iASSouth Naomiburypxr
	13       iMFjY2ZuqbEl78gJ
	14         muQldBP th X1D
Wrong output for fuzzied solution in instance spider/student_assessment/0019 (379)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.city
		FROM addresses AS T1
		JOIN people_addresses AS T2 ON T1.address_id = T2.address_id

	                city
	0         Lake Devon
	1    Lake Devonzk2jW
	2            New Alt
	3      New Altatzwd2
	4       South Keenan
	5  South KeenanSYslD
	6    ahe5KLake Devon
	7     gFoNew Alta49D
	ACTUAL OUTPUT ====

		
		SELECT city
		FROM
		  (SELECT LHS.address_id AS address_id,
		          LHS.line_1 AS line_1,
		          LHS.line_2 AS line_2,
		          LHS.city AS city,
		          LHS.zip_postcode AS zip_postcode,
		          LHS.state_province_county AS state_province_county,
		          LHS.country AS country,
		          RHS.person_address_id AS person_address_id,
		          RHS.person_id AS person_id,
		          RHS.date_from AS date_from,
		          RHS.date_to AS date_to
		   FROM addresses AS LHS
		   INNER JOIN people_addresses AS RHS ON (LHS.address_id = RHS.address_id))
		ORDER BY city

	                 city
	0          Lake Devon
	1     Lake Devonzk2jW
	2             New Alt
	3       New Altatzwd2
	4        South Keenan
	5        South Keenan
	6        South Keenan
	7   South KeenanSYslD
	8   South KeenanSYslD
	9   South KeenanSYslD
	10    ahe5KLake Devon
	11     gFoNew Alta49D
Error while executing ground truth for instance spider/student_assessment/0024 (381)

'<' not supported between instances of 'str' and 'int'
No solution for instance spider/student_assessment/0001 (384)
No solution for instance spider/student_assessment/0014 (385)
Wrong output for fuzzied solution in instance spider/student_assessment/0009 (386)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM courses AS T1
		JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id
		WHERE T2.student_id = 171

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___
		FROM
		  (SELECT LHS.student_id AS student_id,
		          LHS.course_id AS course_id,
		          LHS.date_of_attendance AS date_of_attendance,
		          RHS.course_description AS course_description,
		          RHS.course_name AS course_name,
		          RHS.n AS n
		   FROM
		     (SELECT *
		      FROM student_course_attendance
		      WHERE (student_id >= 171)) AS LHS
		   CROSS JOIN
		     (SELECT course_description,
		             course_name,
		             COUNT() AS n
		      FROM courses
		      GROUP BY course_description,
		               course_name) AS RHS)
		ORDER BY count___

	   count___
	0         1
	1         2
	2         3
	3         4
Wrong output for fuzzied solution in instance spider/student_assessment/0025 (387)
	EXPECTED OUTPUT ====

		SELECT *
		FROM student_course_registrations
		WHERE student_id NOT IN
		    (SELECT student_id
		     FROM student_course_attendance)

	Empty DataFrame
	Columns: [student_id, course_id, registration_date]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT student_id,
		       course_id,
		       registration_date
		FROM
		  (SELECT *
		   FROM student_course_registrations AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM student_course_attendance AS RHS
		        WHERE (LHS.student_id = RHS.student_id
		               AND LHS.course_id = RHS.course_id) ))
		ORDER BY student_id

	    student_id  course_id    registration_date
	0          169          0  2008-11-07 01:31:36
	1          110          0  2008-11-09 02:42:48
	2          181          0  2008-11-11 11:18:20
	3          119          1  2008-11-05 06:01:15
	4          110          1  2008-11-10 16:06:20
	..         ...        ...                  ...
	70         122  rss300Ezd  2008-11-12 16:20:01
	71         121  thy302ZQH  2008-11-04 16:38:54
	72         121   vKSCA306  2008-11-04 23:10:44
	73         169   vKSCA306  2008-11-07 13:22:24
	74         109   vKSCA306  2008-11-12 02:42:42
	
	[75 rows x 3 columns]
Wrong output for fuzzied solution in instance spider/student_assessment/0010 (389)
	EXPECTED OUTPUT ====

		SELECT T2.candidate_id
		FROM people AS T1
		JOIN candidates AS T2 ON T1.person_id = T2.candidate_id
		WHERE T1.email_address = "stanley.monahan@example.org"

	   candidate_id
	0           120
	1           121
	2           132
	3           140
	4           143
	5           149
	6    2636405564
	7    6931036863
	8    7631686647
	9    8210495626
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `person_id` AS `candidate_id`
		FROM
		  (SELECT `LHS`.`candidate_id` AS `candidate_id`,
		          `LHS`.`candidate_details` AS `candidate_details`,
		          `RHS`.`person_id` AS `person_id`,
		          `RHS`.`first_name` AS `first_name`,
		          `RHS`.`middle_name` AS `middle_name`,
		          `RHS`.`last_name` AS `last_name`,
		          `RHS`.`cell_mobile_number` AS `cell_mobile_number`,
		          `RHS`.`email_address` AS `email_address`,
		          `RHS`.`login_name` AS `login_name`,
		          `RHS`.`password` AS `password`
		   FROM `candidates` AS `LHS`
		   CROSS JOIN
		     (SELECT *
		      FROM `people`
		      WHERE (`email_address` = 'stanley.monahan@example.org')) AS RHS)
		ORDER BY candidate_id

	    candidate_id
	0            120
	1            121
	2            132
	3            140
	4            142
	5            143
	6            149
	7     2636405564
	8     6931036863
	9     7631686647
	10    8210495626
Wrong output for fuzzied solution in instance spider/customers_campaigns_ecommerce/0015 (397)
	EXPECTED OUTPUT ====

		SELECT T1.customer_name
		FROM customers AS T1
		JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id
		WHERE shipping_method_code = 'FedEx'
		  AND order_status_code = 'Paid'

	  customer_name
	0        Leanna
	1      Q0U0aWU4
	2      Q0U0aWU4
	ACTUAL OUTPUT ====

		
		SELECT `customer_name`
		FROM
		  (SELECT *
		   FROM `customers` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `customer_orders`
		           WHERE (`shipping_method_code` = 'FedEx'
		                  AND `order_status_code` = 'Paid')) AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY customer_name

	  customer_name
	0        Leanna
	1      Q0U0aWU4
Wrong output for fuzzied solution in instance spider/customers_campaigns_ecommerce/0001 (400)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM premises

	   count(*)
	0        48
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT premise_details,
		          premises_type,
		          COUNT() AS n
		   FROM premises
		   GROUP BY premise_details,
		            premises_type)
		ORDER BY count___

	   count___
	0        47
Wrong output for fuzzied solution in instance spider/customers_campaigns_ecommerce/0009 (402)
	EXPECTED OUTPUT ====

		SELECT T2.customer_name
		FROM mailshot_customers AS T1
		JOIN customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE outcome_code = 'Order'
		GROUP BY T1.customer_id
		HAVING count(*) >= 2

	   customer_name
	0   )3(DonnieWdg
	1       Carlotta
	2         Donnie
	3           Kyle
	4           Kyle
	5           Kyle
	6    M7tzzStella
	7    OqKrrStella
	8         Shanel
	9         Shanel
	10        Stella
	ACTUAL OUTPUT ====

		
		SELECT `customer_name`
		FROM
		  (SELECT `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`payment_method` AS `payment_method`,
		          `LHS`.`customer_name` AS `customer_name`,
		          `LHS`.`customer_phone` AS `customer_phone`,
		          `LHS`.`customer_email` AS `customer_email`,
		          `LHS`.`customer_address` AS `customer_address`,
		          `LHS`.`customer_login` AS `customer_login`,
		          `LHS`.`customer_password` AS `customer_password`,
		          `RHS`.`outcome_code` AS `outcome_code`,
		          `RHS`.`n` AS `n`
		   FROM `customers` AS `LHS`
		   INNER JOIN
		     (SELECT `customer_id`,
		             `outcome_code`,
		             COUNT() AS `n`
		      FROM `mailshot_customers`
		      GROUP BY `customer_id`,
		               `outcome_code`) AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))
		WHERE (`outcome_code` = 'Order'
		       AND n = 2)
		ORDER BY customer_name

	Empty DataFrame
	Columns: [customer_name]
	Index: []
No solution for instance spider/customers_campaigns_ecommerce/0011 (403)
Wrong output for fuzzied solution in instance spider/customers_campaigns_ecommerce/0010 (404)
	EXPECTED OUTPUT ====

		SELECT T2.customer_name
		FROM mailshot_customers AS T1
		JOIN customers AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T1.customer_id
		ORDER BY count(*) DESC
		LIMIT 1

	  customer_name
	0          Kyle
	ACTUAL OUTPUT ====

		
		SELECT customer_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.mailshot_id AS mailshot_id,
		                LHS.customer_id AS customer_id,
		                LHS.outcome_code AS outcome_code,
		                LHS.mailshot_customer_date AS mailshot_customer_date,
		                RHS.payment_method AS payment_method,
		                RHS.customer_name AS customer_name,
		                RHS.customer_phone AS customer_phone,
		                RHS.customer_email AS customer_email,
		                RHS.customer_address AS customer_address,
		                RHS.customer_login AS customer_login,
		                RHS.customer_password AS customer_password,
		                RHS.n AS n
		         FROM mailshot_customers AS LHS
		         INNER JOIN
		           (SELECT customer_id,
		                   payment_method,
		                   customer_name,
		                   customer_phone,
		                   customer_email,
		                   customer_address,
		                   customer_login,
		                   customer_password,
		                   COUNT(*) OVER () AS n
		            FROM customers) AS RHS ON (LHS.customer_id = RHS.customer_id))
		      ORDER BY customer_email)
		   LIMIT 1)

	  customer_name
	0        Shanel
Wrong output for fuzzied solution in instance spider/csu_1/0033 (405)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM campuses

	   count(*)
	0        20
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT LHS.id AS id,
		          LHS.campus AS campus,
		          LHS.location AS LOCATION,
		          LHS.county AS county,
		          LHS.year AS YEAR,
		          LHS.n AS n,
		          RHS.campus AS campus_other,
		          RHS.location AS location_other,
		          RHS.year AS year_other
		   FROM
		     (SELECT id,
		             campus,
		             LOCATION,
		             county,
		             YEAR,
		             COUNT(*) OVER () AS n
		      FROM campuses) AS LHS
		   INNER JOIN campuses AS RHS ON (LHS.n = RHS.id
		                                     AND LHS.county = RHS.county))
		ORDER BY count___

	   count___
	0        20
	1        20
No solution for instance spider/csu_1/0017 (407)
Wrong output for fuzzied solution in instance spider/csu_1/0008 (408)
	EXPECTED OUTPUT ====

		SELECT campusfee
		FROM campuses AS T1
		JOIN csu_fees AS T2 ON T1.id = t2.campus
		WHERE t1.campus = "San Francisco State University"
		  AND T2.year = 1996

	   campusfee
	0       1886
	ACTUAL OUTPUT ====

		
		SELECT `campusfee`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`campus` AS `campus`,
		          `LHS`.`location` AS `location`,
		          `LHS`.`county` AS `county`,
		          `LHS`.`year` AS `year`,
		          `RHS`.`year` AS `year_other`,
		          `RHS`.`campusfee` AS `campusfee`
		   FROM
		     (SELECT *
		      FROM `campuses`
		      WHERE (`campus` = 'San Francisco State University'
		             AND YEAR < 1996)) AS LHS
		   INNER JOIN csu_fees AS RHS ON (LHS.id = RHS.campus))
		ORDER BY campusfee

	Empty DataFrame
	Columns: [campusfee]
	Index: []
Wrong output for fuzzied solution in instance spider/csu_1/0003 (409)
	EXPECTED OUTPUT ====

		SELECT campus
		FROM campuses
		WHERE YEAR = 1958

	                                         campus
	0        California State University-Stanislaus
	1   California State University-StanislauskZfPK
	2  LXvCalifornia State University-SacramentoG1I
	3                   Long Beach State University
	4                   Long Beach State University
	5  X6aCalifornia State University-StanislausOMG
	6               vAFoSpIAaWwIi0da448Li(DU or3WGN
	ACTUAL OUTPUT ====

		
		SELECT campus
		FROM
		  (SELECT campus
		   FROM campuses
		   WHERE (YEAR = 1958) INTERSECT
		     SELECT campus
		     FROM campuses)
		ORDER BY campus

	                                         campus
	0        California State University-Stanislaus
	1   California State University-StanislauskZfPK
	2  LXvCalifornia State University-SacramentoG1I
	3                   Long Beach State University
	4  X6aCalifornia State University-StanislausOMG
	5               vAFoSpIAaWwIi0da448Li(DU or3WGN
No solution for instance spider/csu_1/0027 (410)
No solution for instance spider/csu_1/0022 (411)
No solution for instance spider/csu_1/0030 (412)
No solution for instance spider/csu_1/0013 (413)
Wrong output for fuzzied solution in instance spider/csu_1/0006 (414)
	EXPECTED OUTPUT ====

		SELECT campus
		FROM campuses
		WHERE LOCATION = "Northridge"
		  AND county = "Los Angeles"
		UNION
		SELECT campus
		FROM campuses
		WHERE LOCATION = "San Francisco"
		  AND county = "San Francisco"

	Empty DataFrame
	Columns: [campus]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `campus`
		FROM
		  (SELECT *
		   FROM `campuses`
		   WHERE (`location` = 'Northridge'
		          OR `location` = 'San Francisco'))
		WHERE (`county` != 'Los Angeles'
		       OR `county` != 'San Francisco')
		ORDER BY campus

	                                            campus
	0  4V)FICalifornia State University-San Bernardino
	1       California State University-San Bernardino
Wrong output for fuzzied solution in instance spider/csu_1/0012 (415)
	EXPECTED OUTPUT ====

		SELECT campus
		FROM degrees
		GROUP BY campus
		ORDER BY sum(degrees) DESC
		LIMIT 1

	   campus
	0      25
	ACTUAL OUTPUT ====

		
		SELECT campus
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT campus,
		                YEAR,
		                SUM(degrees) AS sumdegrees
		         FROM degrees
		         GROUP BY campus,
		                  YEAR)
		      ORDER BY sumdegrees DESC)
		   LIMIT 1)

	   campus
	0      13
Wrong output for fuzzied solution in instance spider/csu_1/0015 (416)
	EXPECTED OUTPUT ====

		SELECT avg(campusfee)
		FROM csu_fees
		WHERE YEAR = 2005

	   avg(campusfee)
	0          1885.0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT YEAR AS avg_campusfee_
		FROM
		  (SELECT LHS.campus AS campus,
		          LHS.meancampusfee AS meancampusfee,
		          RHS.year AS YEAR,
		          RHS.campusfee AS campusfee
		   FROM
		     (SELECT campus,
		             AVG(campusfee) AS meancampusfee
		      FROM csu_fees
		      GROUP BY campus) AS LHS
		   LEFT JOIN
		     (SELECT *
		      FROM csu_fees
		      WHERE (YEAR > 2005
		             AND campusfee != 2005)) AS RHS ON (LHS.campus = RHS.campus))
		ORDER BY avg_campusfee_

	   avg_campusfee_
	0          2006.0
	1          2007.0
	2             NaN
Wrong output for fuzzied solution in instance spider/csu_1/0005 (417)
	EXPECTED OUTPUT ====

		SELECT campus
		FROM campuses
		WHERE YEAR >= 1935
		  AND YEAR <= 1939

	                                         campus
	0  8C California State University-NorthridgeRJC
	1                       Fresno State University
	ACTUAL OUTPUT ====

		
		SELECT campus
		FROM
		  (SELECT campus
		   FROM campuses
		   WHERE (YEAR >= 1935
		          AND YEAR < 1939) INTERSECT
		     SELECT campus
		     FROM campuses)
		ORDER BY campus

	                                         campus
	0  8C California State University-NorthridgeRJC
No solution for instance spider/csu_1/0016 (418)
No solution for instance spider/csu_1/0018 (419)
No solution for instance spider/csu_1/0019 (421)
Wrong output for fuzzied solution in instance spider/csu_1/0007 (422)
	EXPECTED OUTPUT ====

		SELECT campusfee
		FROM campuses AS T1
		JOIN csu_fees AS T2 ON T1.id = t2.campus
		WHERE t1.campus = "San Jose State University"
		  AND T2.year = 1996

	   campusfee
	0       1886
	ACTUAL OUTPUT ====

		
		SELECT `campusfee`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`campus` AS `campus`,
		          `LHS`.`location` AS `location`,
		          `LHS`.`county` AS `county`,
		          `LHS`.`year` AS `year`,
		          `RHS`.`year` AS `year_other`,
		          `RHS`.`campusfee` AS `campusfee`
		   FROM
		     (SELECT *
		      FROM `campuses`
		      WHERE (`campus` = 'San Jose State University'
		             AND YEAR < 1996)) AS LHS
		   INNER JOIN csu_fees AS RHS ON (LHS.id = RHS.campus))
		ORDER BY campusfee

	Empty DataFrame
	Columns: [campusfee]
	Index: []
No solution for instance spider/csu_1/0024 (423)
No solution for instance spider/csu_1/0021 (424)
Wrong output for fuzzied solution in instance spider/csu_1/0023 (425)
	EXPECTED OUTPUT ====

		SELECT sum(faculty)
		FROM faculty
		WHERE YEAR = 2002

	   sum(faculty)
	0      32562.67
	ACTUAL OUTPUT ====

		
		SELECT sumfaculty AS sum_faculty_
		FROM
		  (SELECT YEAR,
		          SUM(faculty) AS sumfaculty
		   FROM
		     (SELECT *
		      FROM faculty
		      WHERE (YEAR <= 2002
		             AND faculty != YEAR))
		   GROUP BY YEAR)
		ORDER BY sum_faculty_

	   sum_faculty_
	0      11634.10
	1      14806.73
	2      32562.67
Wrong output for fuzzied solution in instance spider/csu_1/0014 (427)
	EXPECTED OUTPUT ====

		SELECT avg(campusfee)
		FROM csu_fees
		WHERE YEAR = 1996

	   avg(campusfee)
	0     1868.166667
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(campusfee) OVER () AS avg_campusfee_
		FROM csu_fees
		WHERE (YEAR <= 1996
		       AND campusfee != YEAR)
		ORDER BY avg_campusfee_

	   avg_campusfee_
	0     1851.363636
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
No solution for instance spider/csu_1/0025 (429)
Wrong output for fuzzied solution in instance spider/csu_1/0011 (430)
	EXPECTED OUTPUT ====

		SELECT YEAR
		FROM degrees
		GROUP BY YEAR
		ORDER BY sum(degrees) DESC
		LIMIT 1

	   year
	0  1991
	ACTUAL OUTPUT ====

		
		SELECT YEAR
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT campus,
		                YEAR,
		                SUM(degrees) AS sumdegrees
		         FROM degrees
		         GROUP BY campus,
		                  YEAR)
		      ORDER BY YEAR DESC)
		   LIMIT 1)

	   year
	0  2006
No solution for instance spider/csu_1/0029 (431)
Wrong output for fuzzied solution in instance spider/farm/0003 (435)
	EXPECTED OUTPUT ====

		SELECT Hosts
		FROM farm_competition
		WHERE Theme != 'Aliens'

	                                       hosts
	0                                Alicia Keys
	1                                Alicia Keys
	2                                Alicia Keys
	3                                Alicia Keys
	4                           Alicia KeysJwSb1
	5        Miley Cyrus Jared Leto and Karen Mo
	6       Miley Cyrus Jared Leto and Karen Mok
	7  Miley Cyrus Jared Leto and Karen MokoCBL(
	8  OuwMHMiley Cyrus Jared Leto and Karen Mok
	ACTUAL OUTPUT ====

		
		SELECT `hosts`
		FROM
		  (SELECT `hosts`
		   FROM `farm_competition`
		   WHERE (`theme` != 'Aliens') INTERSECT
		     SELECT hosts
		     FROM farm_competition)
		ORDER BY hosts

	                                       hosts
	0                                Alicia Keys
	1                           Alicia KeysJwSb1
	2        Miley Cyrus Jared Leto and Karen Mo
	3       Miley Cyrus Jared Leto and Karen Mok
	4  Miley Cyrus Jared Leto and Karen MokoCBL(
	5  OuwMHMiley Cyrus Jared Leto and Karen Mok
Wrong output for fuzzied solution in instance spider/farm/0013 (436)
	EXPECTED OUTPUT ====

		SELECT T2.Theme
		FROM city AS T1
		JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID
		WHERE T1.Population > 1000

	              theme
	0  KYKq1JX1UN9ND0M)
	1          MTV Cube
	2    P1WMTV CubegKw
	3   Valentine's Day
	ACTUAL OUTPUT ====

		
		SELECT theme
		FROM
		  (SELECT LHS.city_id AS city_id,
		          LHS.official_name AS official_name,
		          LHS.status AS status,
		          LHS.area_km_2 AS area_km_2,
		          LHS.population AS population,
		          LHS.census_ranking AS census_ranking,
		          RHS.competition_id AS competition_id,
		          RHS.year AS YEAR,
		          RHS.theme AS theme,
		          RHS.hosts AS hosts
		   FROM
		     (SELECT *
		      FROM city
		      WHERE (population >= 1000.0)) AS LHS
		   INNER JOIN farm_competition AS RHS ON (LHS.city_id = RHS.host_city_id))
		ORDER BY theme

	              theme
	0  KYKq1JX1UN9ND0M)
	1          MTV Cube
	2          MTV Cube
	3          MTV Cube
	4    P1WMTV CubegKw
	5   Valentine's Day
	6   Valentine's Day
Wrong output for fuzzied solution in instance spider/farm/0004 (438)
	EXPECTED OUTPUT ====

		SELECT Theme
		FROM farm_competition
		ORDER BY YEAR ASC

	               theme
	0   5WSCqCodehunters
	1  7tvSsMTV Asia Aid
	2        Codehunters
	3   CodehuntersU8O41
	4       MTV Asia Aid
	5       MTV Asia Aid
	6            TV Cube
	7    Valentine's Day
	8  d)KoPMTV Asia Aid
	ACTUAL OUTPUT ====

		
		SELECT theme
		FROM
		  (SELECT theme
		   FROM farm_competition INTERSECT SELECT theme
		   FROM farm_competition)
		ORDER BY theme

	               theme
	0   5WSCqCodehunters
	1  7tvSsMTV Asia Aid
	2        Codehunters
	3   CodehuntersU8O41
	4       MTV Asia Aid
	5            TV Cube
	6    Valentine's Day
	7  d)KoPMTV Asia Aid
Wrong output for fuzzied solution in instance spider/farm/0012 (439)
	EXPECTED OUTPUT ====

		SELECT T1.Status
		FROM city AS T1
		JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID
		GROUP BY T2.Host_city_ID
		ORDER BY COUNT(*) DESC
		LIMIT 1

	    status
	0  Village
	ACTUAL OUTPUT ====

		
		SELECT status
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.city_id AS city_id,
		                LHS.official_name AS official_name,
		                LHS.status AS status,
		                LHS.area_km_2 AS area_km_2,
		                LHS.population AS population,
		                LHS.census_ranking AS census_ranking,
		                LHS.competition_id AS competition_id,
		                LHS.year AS YEAR,
		                LHS.theme AS theme,
		                LHS.host_city_id AS host_city_id,
		                LHS.hosts AS hosts,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.city_id AS city_id,
		                   LHS.official_name AS official_name,
		                   LHS.status AS status,
		                   LHS.area_km_2 AS area_km_2,
		                   LHS.population AS population,
		                   LHS.census_ranking AS census_ranking,
		                   RHS.competition_id AS competition_id,
		                   RHS.year AS YEAR,
		                   RHS.theme AS theme,
		                   RHS.host_city_id AS host_city_id,
		                   RHS.hosts AS hosts
		            FROM city AS LHS
		            CROSS JOIN farm_competition AS RHS) AS LHS
		         INNER JOIN
		           (SELECT competition_id,
		                   YEAR,
		                   theme,
		                   host_city_id,
		                   hosts,
		                   COUNT(*) OVER () AS n
		            FROM farm_competition) AS RHS ON (LHS.competition_id = RHS.competition_id
		                                                 AND LHS.year = RHS.year
		                                                 AND LHS.theme = RHS.theme
		                                                 AND LHS.host_city_id = RHS.host_city_id
		                                                 AND LHS.hosts = RHS.hosts))
		      ORDER BY population)
		   LIMIT 1)

	   status
	0  Villag
Wrong output for base solution in instance spider/farm/0005 (441)
	EXPECTED OUTPUT ====

	   avg_working_horses_
	0              3977.75
	ACTUAL OUTPUT ====

		SELECT avg(Working_Horses)
		FROM farm
		WHERE Total_Horses > 5000

	   avg(working_horses)
	0              3977.75
Wrong output for ground truth in instance spider/farm/0005 (441)
Wrong output for fuzzied solution in instance spider/farm/0016 (442)
	EXPECTED OUTPUT ====

		SELECT Status
		FROM city
		GROUP BY Status
		ORDER BY COUNT(*) DESC
		LIMIT 1

	    status
	0  Village
	ACTUAL OUTPUT ====

		
		SELECT status
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT area_km_2,
		                status,
		                COUNT() AS n
		         FROM city
		         GROUP BY area_km_2,
		                  status)
		      ORDER BY status DESC)
		   LIMIT 1)

	         status
	0  re3UeVillage
Wrong output for fuzzied solution in instance spider/farm/0018 (443)
	EXPECTED OUTPUT ====

		SELECT Status
		FROM city
		WHERE Population > 1500 INTERSECT
		  SELECT Status
		  FROM city WHERE Population < 500

	Empty DataFrame
	Columns: [status]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT status
		FROM city
		WHERE (population < 1500.0
		       OR population <= 500.0)
		ORDER BY status

	         status
	0        Villag
	1       Village
	2  Village3UNZE
Wrong output for fuzzied solution in instance spider/farm/0001 (447)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM farm

	   count(*)
	0        10
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT total_cattle,
		          YEAR,
		          COUNT() AS n
		   FROM farm
		   GROUP BY total_cattle,
		            YEAR)
		ORDER BY count___

	   count___
	0         9
Wrong output for fuzzied solution in instance spider/farm/0009 (449)
	EXPECTED OUTPUT ====

		SELECT Official_Name,
		       Status
		FROM city
		ORDER BY Population DESC
		LIMIT 1

	  official_name        status
	0      Drummond  re3UeVillage
	ACTUAL OUTPUT ====

		
		SELECT official_name,
		       status
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM city
		      ORDER BY city_id)
		   LIMIT 1)

	  official_name   status
	0     Aroostook  Village
Wrong output for fuzzied solution in instance spider/farm/0011 (450)
	EXPECTED OUTPUT ====

		SELECT T1.Official_Name
		FROM city AS T1
		JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID
		GROUP BY T2.Host_city_ID
		HAVING COUNT(*) > 1

	  official_name
	0      Drummond
	1      Drummond
	2       rummond
	ACTUAL OUTPUT ====

		
		SELECT official_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.city_id AS city_id,
		                LHS.official_name AS official_name,
		                LHS.status AS status,
		                LHS.area_km_2 AS area_km_2,
		                LHS.population AS population,
		                LHS.census_ranking AS census_ranking,
		                LHS.competition_id AS competition_id,
		                LHS.year AS YEAR,
		                LHS.theme AS theme,
		                LHS.host_city_id AS host_city_id,
		                LHS.hosts AS hosts,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.city_id AS city_id,
		                   LHS.official_name AS official_name,
		                   LHS.status AS status,
		                   LHS.area_km_2 AS area_km_2,
		                   LHS.population AS population,
		                   LHS.census_ranking AS census_ranking,
		                   RHS.competition_id AS competition_id,
		                   RHS.year AS YEAR,
		                   RHS.theme AS theme,
		                   RHS.host_city_id AS host_city_id,
		                   RHS.hosts AS hosts
		            FROM city AS LHS
		            CROSS JOIN farm_competition AS RHS) AS LHS
		         INNER JOIN
		           (SELECT competition_id,
		                   YEAR,
		                   theme,
		                   host_city_id,
		                   hosts,
		                   COUNT(*) OVER () AS n
		            FROM farm_competition) AS RHS ON (LHS.competition_id = RHS.competition_id
		                                                 AND LHS.year = RHS.year
		                                                 AND LHS.theme = RHS.theme
		                                                 AND LHS.host_city_id = RHS.host_city_id
		                                                 AND LHS.hosts = RHS.hosts))
		      ORDER BY population)
		   LIMIT 1)

	  official_name
	0     Aroostook
No solution for instance spider/train_station/0002 (452)
Wrong output for fuzzied solution in instance spider/train_station/0017 (453)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM train_station AS T1
		JOIN station AS T2 ON T1.station_id = T2.station_id
		GROUP BY T1.station_id
		ORDER BY count(*) DESC
		LIMIT 1

	                name
	0  London St Pancras
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT name,
		          station_id,
		          station_id AS n
		   FROM
		     (SELECT LHS.name AS name,
		             LHS.station_id AS station_id,
		             LHS.n AS n
		      FROM
		        (SELECT name,
		                station_id,
		                COUNT() AS n
		         FROM station
		         GROUP BY name,
		                  station_id) AS LHS
		      INNER JOIN
		        (SELECT train_id,
		                COUNT() AS n
		         FROM train_station
		         GROUP BY train_id) AS RHS ON (LHS.station_id = RHS.n
		                                       AND LHS.n = RHS.train_id)))
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance spider/train_station/0008 (454)
	EXPECTED OUTPUT ====

		SELECT DISTINCT LOCATION
		FROM station
		WHERE number_of_platforms >= 15
		  AND total_passengers > 25

	  location
	0   London
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT LOCATION
		FROM
		  (SELECT LHS.station_id AS station_id,
		          LHS.name AS name,
		          LHS.annual_entry_exit AS annual_entry_exit,
		          LHS.annual_interchanges AS annual_interchanges,
		          LHS.total_passengers AS total_passengers,
		          LHS.location AS LOCATION,
		          LHS.main_services AS main_services,
		          LHS.number_of_platforms AS number_of_platforms
		   FROM station AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM station
		      WHERE (number_of_platforms > 15
		             OR total_passengers < 25.0)) AS RHS ON (LHS.station_id = RHS.station_id
		                                                     AND LHS.name = RHS.name
		                                                     AND LHS.annual_entry_exit = RHS.annual_entry_exit
		                                                     AND LHS.annual_interchanges = RHS.annual_interchanges
		                                                     AND LHS.total_passengers = RHS.total_passengers
		                                                     AND LHS.location = RHS.location
		                                                     AND LHS.main_services = RHS.main_services
		                                                     AND LHS.number_of_platforms = RHS.number_of_platforms))
		ORDER BY LOCATION

	  location
	0   London
	1    ondon
Wrong output for fuzzied solution in instance spider/train_station/0022 (456)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM train_station AS T1
		JOIN train AS T2 ON T1.train_id = T2.train_id
		WHERE T1.station_id NOT IN
		    (SELECT T4.station_id
		     FROM train_station AS T3
		     JOIN station AS T4 ON T3.station_id = T4.station_id
		     WHERE t4.location = "London")

	                             name
	0                Guruvayur Expres
	1                Guruvayur Expres
	2               Guruvayur Express
	3               Guruvayur Express
	4               Guruvayur Express
	5               Guruvayur Express
	6               Guruvayur Express
	7               Guruvayur Express
	8               Guruvayur Express
	9               Guruvayur Express
	10              Guruvayur Express
	11  Jayanthi Janatha ExpresstDdnG
	12  Jayanthi Janatha ExpresstDdnG
	13  Jayanthi Janatha ExpresstDdnG
	14  Jayanthi Janatha ExpresstDdnG
	15  Jayanthi Janatha ExpresstDdnG
	16              Parasuram Express
	17              Parasuram Express
	18              Parasuram Express
	19          Quilon Fast Passenger
	20          Quilon Fast Passenger
	21          Quilon Fast Passenger
	22          Quilon Fast Passenger
	23          Quilon Fast Passenger
	24          Quilon Fast Passenger
	25          Quilon Fast Passenger
	26          Quilon Fast Passenger
	27          Quilon Fast Passenger
	28          Quilon Fast Passenger
	29          Quilon Fast Passenger
	30    V8RQuilon Fast PassengerX5o
	31    V8RQuilon Fast PassengerX5o
	32    V8RQuilon Fast PassengerX5o
	33    V8RQuilon Fast PassengerX5o
	34    V8RQuilon Fast PassengerX5o
	35    V8RQuilon Fast PassengerX5o
	36    V8RQuilon Fast PassengerX5o
	37        ruGParasuram Expressb1e
	38        ruGParasuram Expressb1e
	39        ruGParasuram Expressb1e
	40        ruGParasuram Expressb1e
	41        ruGParasuram Expressb1e
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM `train` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `train_station` AS `LHS`
		           WHERE EXISTS
		               (SELECT 1
		                FROM
		                  (SELECT *
		                   FROM `station`
		                   WHERE (`location` = 'London')) AS RHS
		                WHERE (LHS.station_id = RHS.station_id) )) AS RHS
		        WHERE (LHS.train_id = RHS.train_id) ))
		ORDER BY name

	                            name
	0              Guruvayur Express
	1  Jayanthi Janatha ExpresstDdnG
	2          Quilon Fast Passenger
Wrong output for base solution in instance spider/train_station/0006 (458)
	EXPECTED OUTPUT ====

	   avg_total_passengers_  max_total_passengers_
	0                 48.015                103.534
	ACTUAL OUTPUT ====

		SELECT avg(total_passengers),
		       max(total_passengers)
		FROM station
		WHERE LOCATION = 'London'
		  OR LOCATION = 'Glasgow'

	   avg(total_passengers)  max(total_passengers)
	0                 48.015                103.534
Wrong output for ground truth in instance spider/train_station/0006 (458)
Wrong output for base solution in instance spider/train_station/0004 (459)
	EXPECTED OUTPUT ====

	                    name  total_passengers
	0  Birmingham New Street            36.331
	1        Glasgow Central            29.658
	ACTUAL OUTPUT ====

		SELECT name,
		       total_passengers
		FROM station
		WHERE LOCATION != 'London'

	                    name  total_passengers
	0  Birmingham New Street            36.331
	1        Glasgow Central            29.658
Wrong output for ground truth in instance spider/train_station/0004 (459)
Wrong output for fuzzied solution in instance spider/train_station/0012 (460)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM train

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT service,
		          COUNT() AS n
		   FROM train
		   GROUP BY service)
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
	3         1
	4         1
	5         3
Error while executing solution for instance spider/train_station/0015 (461)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/train_station/0015 (461)
Wrong output for fuzzied solution in instance spider/train_station/0005 (462)
	EXPECTED OUTPUT ====

		SELECT name,
		       main_services
		FROM station
		ORDER BY total_passengers DESC
		LIMIT 3

	                    name                                      main_services
	0      London St Pancras         E2nBrighton Main Line Chatham Main Line9VQ
	1       ondon St Pancras  South Western Main Line West of England Main Line
	2  Birmingham New Street            West Coast Main Line Cross Country Rout
	ACTUAL OUTPUT ====

		
		SELECT name,
		       main_services
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM station
		      ORDER BY station_id)
		   LIMIT 3)

	                    name                               main_services
	0      London St Pancras        Brighton Main Line Chatham Main Line
	1      London St Pancras  E2nBrighton Main Line Chatham Main Line9VQ
	2  Birmingham New Street     West Coast Main Line Cross Country Rout
Wrong output for fuzzied solution in instance spider/train_station/0016 (463)
	EXPECTED OUTPUT ====

		SELECT T3.name,
		       T3.time
		FROM train_station AS T1
		JOIN station AS T2 ON T1.station_id = T2.station_id
		JOIN train AS T3 ON T3.train_id = T1.train_id
		WHERE T2.location = 'London'
		ORDER BY T3.time DESC

	                          name         time
	0             Guruvayur Expres  Yo816:59ntX
	1            Guruvayur Express        11:15
	2            Parasuram Express        11:15
	3            Parasuram Express        11:15
	4        Quilon Fast Passenger  3Mm11:15DJI
	5  V8RQuilon Fast PassengerX5o    ht I16:59
	6      ruGParasuram Expressb1e  0K(11:15BR9
	ACTUAL OUTPUT ====

		
		SELECT `name`,
		       `time`
		FROM
		  (SELECT *
		   FROM `train` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `train_station` AS `LHS`
		           WHERE EXISTS
		               (SELECT 1
		                FROM
		                  (SELECT *
		                   FROM `station`
		                   WHERE (`location` != 'London')) AS RHS
		                WHERE (LHS.station_id = RHS.station_id) )) AS RHS
		        WHERE (LHS.train_id = RHS.train_id) ))
		ORDER BY name

	Empty DataFrame
	Columns: [name, time]
	Index: []
Wrong output for fuzzied solution in instance spider/train_station/0019 (466)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM station
		GROUP BY LOCATION
		HAVING count(*) = 1

	        location
	0  1C4GlasgowCdY
	1   2y(nXGlasgow
	2         Glasgo
	3    LondonFHAwK
	4          ondon
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT LOCATION,
		          number_of_platforms,
		          COUNT() AS n
		   FROM station
		   GROUP BY LOCATION,
		            number_of_platforms)
		WHERE (n <= 1)
		ORDER BY LOCATION

	        location
	0  1C4GlasgowCdY
	1   2y(nXGlasgow
	2         Glasgo
	3        Glasgow
	4        Glasgow
	5         London
	6         London
	7         London
	8    LondonFHAwK
	9          ondon
Wrong output for base solution in instance spider/train_station/0007 (467)
	EXPECTED OUTPUT ====

	     location  sum_number_of_platforms_  sum_total_passengers_
	0  Birmingham                        13                 36.331
	1     Glasgow                        17                 29.658
	2      London                       140                498.507
	ACTUAL OUTPUT ====

		SELECT LOCATION,
		       sum(number_of_platforms),
		       sum(total_passengers)
		FROM station
		GROUP BY LOCATION

	     location  sum(number_of_platforms)  sum(total_passengers)
	0  Birmingham                        13                 36.331
	1     Glasgow                        17                 29.658
	2      London                       140                498.507
Wrong output for ground truth in instance spider/train_station/0007 (467)
Wrong output for fuzzied solution in instance spider/train_station/0021 (468)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM train_station AS T1
		JOIN station AS T2 ON T1.station_id = T2.station_id
		JOIN train AS T3 ON T3.train_id = T1.train_id
		WHERE T3.Name = "Ananthapuri Express" INTERSECT
		  SELECT T2.name
		  FROM train_station AS T1
		  JOIN station AS T2 ON T1.station_id = T2.station_id
		  JOIN train AS T3 ON T3.train_id = T1.train_id WHERE T3.Name = "Guruvayur Express"

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM `station` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `train_station` AS `LHS`
		           WHERE EXISTS
		               (SELECT 1
		                FROM
		                  (SELECT *
		                   FROM `train`
		                   WHERE (`name` != 'Ananthapuri Express'
		                          AND `name` = 'Guruvayur Express')) AS RHS
		                WHERE (LHS.train_id = RHS.train_id) )) AS RHS
		        WHERE (LHS.station_id = RHS.station_id) ))
		ORDER BY name

	                          name
	0         Birmingham New Stree
	1          London King's Cross
	2            London St Pancras
	3            London St Pancras
	4            London St Pancras
	5       N2)TPLondon St Pancras
	6   Vv6kpBirmingham New Street
	7  lD9Birmingham New StreetawO
	8             ondon St Pancras
	9   zING4Birmingham New Street
Wrong output for fuzzied solution in instance spider/train_station/0014 (471)
	EXPECTED OUTPUT ====

		SELECT T2.name,
		       count(*)
		FROM train_station AS T1
		JOIN station AS T2 ON T1.station_id = T2.station_id
		GROUP BY T1.station_id

	                          name  count(*)
	0        Birmingham New Street         1
	1        Birmingham New Street         1
	2                London Bridge         1
	3                London Bridge         1
	4                London Euston         1
	5                London Euston         1
	6           London EustonWu))k         1
	7              London Waterloo         1
	8   Q552QBirmingham New Street         1
	9      Y09London St PancrasG5d         1
	10          zoBplLondon Euston         1
	11                London Bridg         2
	12               London Bridge         2
	13    Ml92MzdxdK241FRKrEG7LER(         2
	14       Birmingham New Street         3
	15           London St Pancras         3
	16         Ml92MzdxdK241FRKrEG         3
	17         Ml92MzdxdK241FRKrEG         3
	18          5J0APLondon Euston         4
	19             London Waterloo         4
	ACTUAL OUTPUT ====

		
		SELECT name,
		       n AS count___
		FROM
		  (SELECT name,
		          total_passengers,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.station_id AS station_id,
		             LHS.name AS name,
		             LHS.annual_entry_exit AS annual_entry_exit,
		             LHS.annual_interchanges AS annual_interchanges,
		             LHS.total_passengers AS total_passengers,
		             LHS.location AS LOCATION,
		             LHS.main_services AS main_services,
		             LHS.number_of_platforms AS number_of_platforms,
		             RHS.train_id AS train_id
		      FROM station AS LHS
		      INNER JOIN train_station AS RHS ON (LHS.station_id = RHS.station_id))
		   GROUP BY name,
		            total_passengers)
		ORDER BY name

	                          name  count___
	0        Birmingham New Street         1
	1        Birmingham New Street         1
	2                London Bridge         1
	3                London Euston         1
	4                London Euston         1
	5           London EustonWu))k         1
	6              London Waterloo         1
	7   Q552QBirmingham New Street         1
	8      Y09London St PancrasG5d         1
	9           zoBplLondon Euston         1
	10                London Bridg         2
	11    Ml92MzdxdK241FRKrEG7LER(         2
	12       Birmingham New Street         3
	13               London Bridge         3
	14           London St Pancras         3
	15         Ml92MzdxdK241FRKrEG         3
	16         Ml92MzdxdK241FRKrEG         3
	17          5J0APLondon Euston         4
	18             London Waterloo         4
Wrong output for fuzzied solution in instance spider/train_station/0009 (472)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM station
		EXCEPT
		SELECT LOCATION
		FROM station
		WHERE number_of_platforms >= 15

	       location
	0        Glasgo
	1  eB5LondonveW
	2        lasgow
	3         ondon
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT *
		   FROM station AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM station
		           WHERE (number_of_platforms > 15)) AS RHS
		        WHERE (LHS.location = RHS.location) ))
		ORDER BY LOCATION

	       location
	0        Glasgo
	1         Londo
	2  eB5LondonveW
	3        lasgow
	4         ondon
Wrong output for fuzzied solution in instance spider/train_station/0010 (474)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM station
		GROUP BY LOCATION
		ORDER BY count(*) DESC
		LIMIT 1

	  location
	0   London
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LOCATION,
		                name,
		                COUNT() AS n
		         FROM station
		         GROUP BY LOCATION,
		                  name)
		      ORDER BY name DESC)
		   LIMIT 1)

	  location
	0    Londo
Wrong output for fuzzied solution in instance spider/manufacturer/0002 (475)
	EXPECTED OUTPUT ====

		SELECT name,
		       furniture_id
		FROM furniture
		ORDER BY market_rate DESC
		LIMIT 1

	             name  furniture_id
	0  E2nBookcase9VQ             7
	ACTUAL OUTPUT ====

		
		SELECT name,
		       furniture_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM furniture
		      ORDER BY num_of_component DESC)
		   LIMIT 1)

	         name  furniture_id
	0  Dining set             3
Wrong output for fuzzied solution in instance spider/manufacturer/0008 (476)
	EXPECTED OUTPUT ====

		SELECT avg(Num_of_Factories)
		FROM manufacturer
		WHERE num_of_shops > 20

	   avg(num_of_factories)
	0               7.333333
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(num_of_factories) OVER () AS avg_num_of_factories_
		FROM manufacturer
		WHERE (num_of_factories != 20
		       AND num_of_shops > 20)
		ORDER BY avg_num_of_factories_

	   avg_num_of_factories_
	0                    1.0
Wrong output for fuzzied solution in instance spider/manufacturer/0013 (478)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       t1.name
		FROM manufacturer AS t1
		JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id
		GROUP BY t1.manufacturer_id

	   count(*)                   name
	0         5              Chevrolet
	1         6         3Yx74Ford Make
	2         6              Chevrolet
	3         6         Chevrolet49XLS
	4         6               Ford Mak
	5         6        VPJFord MakeYbX
	6         7              Ford Make
	7         7                  Jiaju
	8         7  Nv)Chevrolet HouseNAK
	9         7  vZ1Chevrolet House8)t
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       name
		FROM
		  (SELECT name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.manufacturer_id AS manufacturer_id,
		             LHS.open_year AS open_year,
		             LHS.name AS name,
		             LHS.num_of_factories AS num_of_factories,
		             LHS.num_of_shops AS num_of_shops,
		             RHS.furniture_id AS furniture_id,
		             RHS.price_in_dollar AS price_in_dollar
		      FROM manufacturer AS LHS
		      INNER JOIN furniture_manufacte AS RHS ON (LHS.manufacturer_id = RHS.manufacturer_id))
		   GROUP BY name)
		ORDER BY count___

	   count___                   name
	0         6         3Yx74Ford Make
	1         6         Chevrolet49XLS
	2         6               Ford Mak
	3         6        VPJFord MakeYbX
	4         7              Ford Make
	5         7                  Jiaju
	6         7  Nv)Chevrolet HouseNAK
	7         7  vZ1Chevrolet House8)t
	8        11              Chevrolet
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Wrong output for fuzzied solution in instance spider/manufacturer/0004 (480)
	EXPECTED OUTPUT ====

		SELECT Num_of_Component,
		       name
		FROM furniture
		WHERE Num_of_Component > 10

	Empty DataFrame
	Columns: [num_of_component, name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT num_of_component,
		       name
		FROM furniture
		WHERE (num_of_component >= 10)
		ORDER BY num_of_component

	   num_of_component                  name
	0                10  Four-poster bedcNCkC
	1                10           RwxBench4th
Wrong output for fuzzied solution in instance spider/manufacturer/0012 (481)
	EXPECTED OUTPUT ====

		SELECT t1.manufacturer_id,
		       t1.num_of_shops
		FROM manufacturer AS t1
		JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id
		ORDER BY t2.Price_in_Dollar DESC
		LIMIT 1

	   manufacturer_id  num_of_shops
	0                2            36
	ACTUAL OUTPUT ====

		
		SELECT manufacturer_id,
		       num_of_shops
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.manufacturer_id AS manufacturer_id,
		                LHS.open_year AS open_year,
		                LHS.name AS name,
		                LHS.num_of_factories AS num_of_factories,
		                LHS.num_of_shops AS num_of_shops,
		                RHS.furniture_id AS furniture_id,
		                RHS.price_in_dollar AS price_in_dollar
		         FROM manufacturer AS LHS
		         INNER JOIN furniture_manufacte AS RHS ON (LHS.manufacturer_id = RHS.manufacturer_id))
		      ORDER BY furniture_id DESC)
		   LIMIT 1)

	   manufacturer_id  num_of_shops
	0               -1             5
Wrong output for fuzzied solution in instance spider/manufacturer/0016 (484)
	EXPECTED OUTPUT ====

		SELECT t3.name
		FROM furniture AS t1
		JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID
		JOIN manufacturer AS t3 ON t2.manufacturer_id = t3.manufacturer_id
		WHERE t1.num_of_component < 6 INTERSECT
		  SELECT t3.name
		  FROM furniture AS t1
		  JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID
		  JOIN manufacturer AS t3 ON t2.manufacturer_id = t3.manufacturer_id WHERE t1.num_of_component > 10

	                   name
	0             Chevrolet
	1       Chevrolet House
	2             Ford Make
	3  q9Bp2Chevrolet House
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.manufacturer_id AS manufacturer_id,
		          LHS.open_year AS open_year,
		          LHS.name AS name,
		          LHS.num_of_factories AS num_of_factories,
		          LHS.num_of_shops AS num_of_shops,
		          LHS.furniture_id AS furniture_id,
		          LHS.price_in_dollar AS price_in_dollar,
		          RHS.furniture_id AS furniture_id_other,
		          RHS.name AS name_other,
		          RHS.market_rate AS market_rate
		   FROM
		     (SELECT LHS.manufacturer_id AS manufacturer_id,
		             LHS.open_year AS open_year,
		             LHS.name AS name,
		             LHS.num_of_factories AS num_of_factories,
		             LHS.num_of_shops AS num_of_shops,
		             RHS.furniture_id AS furniture_id,
		             RHS.price_in_dollar AS price_in_dollar
		      FROM manufacturer AS LHS
		      INNER JOIN furniture_manufacte AS RHS ON (LHS.manufacturer_id = RHS.manufacturer_id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM furniture
		      WHERE (num_of_component != 6
		             OR num_of_component < 10)) AS RHS ON (LHS.num_of_factories = RHS.num_of_component))
		ORDER BY name

	                   name
	0             Ford Make
	1  q9Bp2Chevrolet House
Wrong output for fuzzied solution in instance spider/manufacturer/0007 (485)
	EXPECTED OUTPUT ====

		SELECT open_year,
		       name
		FROM manufacturer
		ORDER BY num_of_shops DESC
		LIMIT 1

	   open_year            name
	0    1990.99  3Yx74Ford Make
	ACTUAL OUTPUT ====

		
		SELECT open_year,
		       name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM manufacturer
		      ORDER BY num_of_factories)
		   LIMIT 1)

	   open_year       name
	0    1989.98  Ford Make
Wrong output for fuzzied solution in instance spider/manufacturer/0001 (486)
	EXPECTED OUTPUT ====

		SELECT sum(num_of_component)
		FROM furniture

	   sum(num_of_component)
	0                     96
	ACTUAL OUTPUT ====

		
		SELECT sumnum_of_component AS sum_num_of_component_
		FROM
		  (SELECT SUM(num_of_component) AS sumnum_of_component
		   FROM
		     (SELECT market_rate,
		             num_of_component,
		             SUM(num_of_component) AS sumnum_of_component
		      FROM furniture
		      GROUP BY market_rate,
		               num_of_component))
		ORDER BY sum_num_of_component_

	   sum_num_of_component_
	0                     82
No solution for instance spider/manufacturer/0011 (489)
Wrong output for fuzzied solution in instance spider/manufacturer/0010 (490)
	EXPECTED OUTPUT ====

		SELECT name,
		       open_year
		FROM manufacturer
		WHERE num_of_shops > 10
		  OR Num_of_Factories < 10

	                    name     open_year
	0              8gXThn6Ih -3.755289e+09
	1         Chevrolet Hous  1.991010e+03
	2        Chevrolet House  1.399664e+09
	3          FhNmNTomorrow  1.980010e+03
	4              Ford Make  1.980010e+03
	5              Ford Make  1.990980e+03
	6              Ford Make  1.990980e+03
	7              Ford Make  1.991010e+03
	8              Ford Make  1.991020e+03
	9              Ford Make  4.481593e+09
	10       GhhFeTlvxyyf)b   2.000000e+03
	11              Tomorrow  1.991000e+03
	12  UUl5al3pxGN LMzTqBn2  7.849098e+09
	13       YjZFord MakeasC -1.200377e+09
	14             ZZIy9TW)o  1.980020e+03
	15  cZVUQl3pxGN LMzTqBn2  1.990980e+03
	16      hKhlVTo)4JehIRSF  1.999980e+03
	17        z577eFord Make  1.980020e+03
	ACTUAL OUTPUT ====

		
		SELECT name,
		       open_year
		FROM
		  (SELECT *
		   FROM manufacturer AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM manufacturer
		           WHERE (num_of_factories <= 10
		                  OR num_of_shops >= 10)) AS RHS
		        WHERE (LHS.manufacturer_id = RHS.manufacturer_id
		               AND LHS.open_year = RHS.open_year
		               AND LHS.name = RHS.name
		               AND LHS.num_of_factories = RHS.num_of_factories
		               AND LHS.num_of_shops = RHS.num_of_shops) ))
		ORDER BY name

	                    name     open_year
	0         8CmTomorroww46  1.990980e+03
	1              8gXThn6Ih -3.755289e+09
	2         Chevrolet Hous  1.991010e+03
	3        Chevrolet House  1.399664e+09
	4          FhNmNTomorrow  1.980010e+03
	5               Ford Mak  1.990980e+03
	6              Ford Make  1.980010e+03
	7              Ford Make  1.990980e+03
	8              Ford Make  1.990980e+03
	9              Ford Make  1.991010e+03
	10             Ford Make  1.991020e+03
	11             Ford Make  4.481593e+09
	12        Ford MakeQJA8s  1.664812e+09
	13       GhhFeTlvxyyf)b   2.000000e+03
	14              Tomorrow  1.991000e+03
	15  UUl5al3pxGN LMzTqBn2  7.849098e+09
	16       YjZFord MakeasC -1.200377e+09
	17             ZZIy9TW)o  1.980020e+03
	18  cZVUQl3pxGN LMzTqBn2  1.990980e+03
	19      hKhlVTo)4JehIRSF  1.999980e+03
	20        l3pxGN LMzTqBn -4.973206e+08
	21        z577eFord Make  1.980020e+03
Wrong output for fuzzied solution in instance spider/twitter_1/0002 (491)
	EXPECTED OUTPUT ====

		SELECT partitionid
		FROM user_profiles
		WHERE name = 'Iron Man'

	   partitionid
	0           11
	ACTUAL OUTPUT ====

		
		SELECT `uid` AS `partitionid`
		FROM `user_profiles`
		WHERE (`name` = 'Iron Man')
		ORDER BY partitionid

	   partitionid
	0            2
No solution for instance spider/twitter_1/0008 (493)
Wrong output for fuzzied solution in instance spider/twitter_1/0003 (494)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM user_profiles

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT email,
		             COUNT() AS n
		      FROM user_profiles
		      GROUP BY email))
		ORDER BY count___

	   count___
	0         6
Wrong output for fuzzied solution in instance spider/twitter_1/0013 (497)
	EXPECTED OUTPUT ====

		SELECT T1.name,
		       T1.email
		FROM user_profiles AS T1
		JOIN follows AS T2 ON T1.uid = T2.f1
		GROUP BY T2.f1
		HAVING count(*) > 1

	                     name                    email
	0                    Mary            4F62gs(U)LWl2
	1            jOXBue4BZoNC   7wscd@superstar.comawN
	2             Tyler Swift     AQ4k2TvxnTx(k52GQYVP
	3        Tyler SwiftDp65b           ArF5rk9)XY1)27
	4                    Mary          HJvKRleqqXPR7vL
	5        Tyler Swiftw35Lx  IbNsusan@gmail.com\nDg(
	6               a5ue1CG3y    Ih8Jg9O15CvfZGyOv00Gq
	7             Tyler Swift      QmAOuts@richest.com
	8              2mzI81HnPt   WCL4KDOFtuGF d1YCrjYIb
	9         Natalie Portman         bw@superhero.com
	10             Tyler Swif         bw@superhero.com
	11        Natalie Portman         cd@superstar.com
	12        Natalie Portman         cd@superstar.com
	13            Tyler Swift         cd@superstar.com
	14             XIfMaryByM    dOdsGcd@superstar.com
	15            Tyler Swift           k6aFqYXCJxBulQ
	16               Iron Man            qeJITasbi52YN
	17  6dhNatalie PortmanIg7        susan@gmail.com\n
	18            Tyler Swift            ts@richest.co
	19               Iron Man           ts@richest.com
	ACTUAL OUTPUT ====

		
		SELECT name,
		       email
		FROM
		  (SELECT email,
		          name,
		          COUNT() AS n
		   FROM
		     (SELECT f1,
		             f2,
		             name,
		             email,
		             partitionid,
		             followers,
		             f1 AS UID
		      FROM
		        (SELECT LHS.f1 AS f1,
		                LHS.f2 AS f2,
		                RHS.name AS name,
		                RHS.email AS email,
		                RHS.partitionid AS partitionid,
		                RHS.followers AS followers
		         FROM follows AS LHS
		         INNER JOIN user_profiles AS RHS ON (LHS.f1 = RHS.uid)))
		   GROUP BY email,
		            name)
		WHERE (n > 1)
		ORDER BY name

	                     name                    email
	0                    Mary            4F62gs(U)LWl2
	1            jOXBue4BZoNC   7wscd@superstar.comawN
	2             Tyler Swift     AQ4k2TvxnTx(k52GQYVP
	3        Tyler SwiftDp65b           ArF5rk9)XY1)27
	4                    Mary          HJvKRleqqXPR7vL
	5        Tyler Swiftw35Lx  IbNsusan@gmail.com\nDg(
	6               a5ue1CG3y    Ih8Jg9O15CvfZGyOv00Gq
	7             Tyler Swift      QmAOuts@richest.com
	8              2mzI81HnPt   WCL4KDOFtuGF d1YCrjYIb
	9         Natalie Portman         bw@superhero.com
	10             Tyler Swif         bw@superhero.com
	11        Natalie Portman         cd@superstar.com
	12            Tyler Swift         cd@superstar.com
	13             XIfMaryByM    dOdsGcd@superstar.com
	14            Tyler Swift           k6aFqYXCJxBulQ
	15               Iron Man            qeJITasbi52YN
	16  6dhNatalie PortmanIg7        susan@gmail.com\n
	17            Tyler Swift            ts@richest.co
	18               Iron Man           ts@richest.com
Wrong output for fuzzied solution in instance spider/twitter_1/0006 (498)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM tweets

	   count(*)
	0        36
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT createdate, text, COUNT() AS n
		   FROM tweets
		   GROUP BY createdate, text)
		ORDER BY count___

	   count___
	0        35
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Error while executing solution for instance spider/twitter_1/0007 (507)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT UID) OVER () AS count_distinct_uid_
FROM tweets
ORDER BY count_distinct_uid_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/twitter_1/0024 (508)
	EXPECTED OUTPUT ====

		SELECT T1.name,
		       count(*)
		FROM user_profiles AS T1
		JOIN tweets AS T2 ON T1.uid = T2.uid
		GROUP BY T2.uid
		HAVING count(*) > 1

	                     name  count(*)
	0   6dhNatalie PortmanIg7         2
	1         Natalie Portman         2
	2              Tyler Swif         2
	3             Tyler Swift         2
	4              XIfMaryByM         2
	5                Iron Man         3
	6             Tyler Swift         3
	7             Tyler Swift         3
	8        Tyler SwiftDp65b         3
	9        Tyler Swiftw35Lx         3
	10            Tyler Swift         4
	ACTUAL OUTPUT ====

		
		SELECT name,
		       n AS count___
		FROM
		  (SELECT email,
		          name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.uid AS UID,
		             LHS.text AS text,
		             LHS.createdate AS createdate,
		             RHS.name AS name,
		             RHS.email AS email,
		             RHS.partitionid AS partitionid,
		             RHS.followers AS followers
		      FROM tweets AS LHS
		      INNER JOIN user_profiles AS RHS ON (LHS.uid = RHS.uid))
		   GROUP BY email,
		            name)
		WHERE (n > 1)
		ORDER BY name

	                     name  count___
	0   6dhNatalie PortmanIg7         2
	1              Tyler Swif         2
	2             Tyler Swift         2
	3              XIfMaryByM         2
	4                Iron Man         3
	5         Natalie Portman         3
	6             Tyler Swift         3
	7             Tyler Swift         3
	8        Tyler SwiftDp65b         3
	9        Tyler Swiftw35Lx         3
	10            Tyler Swift         4
Wrong output for fuzzied solution in instance spider/twitter_1/0023 (510)
	EXPECTED OUTPUT ====

		SELECT T1.name,
		       T1.partitionid
		FROM user_profiles AS T1
		JOIN tweets AS T2 ON T1.uid = T2.uid
		GROUP BY T2.uid
		HAVING count(*) < 2

	          name  partitionid
	0  Celine Dion            5
	1        Susan            5
	2        Susan            5
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name,
		                partitionid
		FROM
		  (SELECT LHS.uid AS UID,
		          LHS.name AS name,
		          LHS.email AS email,
		          LHS.partitionid AS partitionid,
		          LHS.followers AS followers,
		          LHS.n AS n,
		          RHS.uid_other AS uid_other,
		          RHS.n_other AS n_other
		   FROM
		     (SELECT LHS.uid AS UID,
		             LHS.name AS name,
		             LHS.email AS email,
		             LHS.partitionid AS partitionid,
		             LHS.followers AS followers,
		             RHS.n AS n
		      FROM user_profiles AS LHS
		      INNER JOIN
		        (SELECT UID,
		                COUNT() AS n
		         FROM tweets
		         GROUP BY UID) AS RHS ON (LHS.uid = RHS.uid)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT LHS.uid AS UID,
		                LHS.n AS n,
		                RHS.uid AS uid_other,
		                RHS.n AS n_other
		         FROM
		           (SELECT UID,
		                   COUNT() AS n
		            FROM tweets
		            GROUP BY UID) AS LHS
		         CROSS JOIN
		           (SELECT UID,
		                   COUNT() AS n
		            FROM tweets
		            GROUP BY UID) AS RHS)
		      WHERE (n < n_other)) AS RHS ON (LHS.uid = RHS.uid
		                                      AND LHS.n = RHS.n))
		ORDER BY name

	          name  partitionid
	0  Celine Dion            5
	1        Susan            5
No solution for instance spider/twitter_1/0009 (513)
Wrong output for fuzzied solution in instance spider/twitter_1/0025 (514)
	EXPECTED OUTPUT ====

		SELECT avg(followers)
		FROM user_profiles
		WHERE UID NOT IN
		    (SELECT UID
		     FROM tweets)

	  avg(followers)
	0           None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(followers) OVER () AS avg_followers_
		FROM
		  (SELECT *
		   FROM user_profiles AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM tweets AS RHS
		        WHERE (LHS.uid = RHS.uid) ))
		ORDER BY avg_followers_

	Empty DataFrame
	Columns: [avg_followers_]
	Index: []
No solution for instance spider/twitter_1/0010 (516)
Wrong output for fuzzied solution in instance spider/party_host/0008 (518)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM HOST
		GROUP BY Nationality
		ORDER BY COUNT(*) DESC
		LIMIT 1

	     nationality
	0  United States
	ACTUAL OUTPUT ====

		
		SELECT nationality
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT host_id,
		                nationality,
		                COUNT() AS n
		         FROM host
		         GROUP BY host_id,
		                  nationality)
		      ORDER BY host_id)
		   LIMIT 1)

	          nationality
	0  United StatesBIQ)G
Wrong output for fuzzied solution in instance spider/party_host/0013 (520)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM party_host AS T1
		JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID
		JOIN party AS T3 ON T1.Party_ID = T3.Party_ID
		WHERE T3.Number_of_hosts > 20

	                   name
	0        19I3yuXd(GX)aL
	1        19I3yuXd(GX)aL
	2         3U1C6Fft5tREw
	3         Carlos Delfin
	4         Carlos Delfin
	..                  ...
	63  nRYM0 NwfRBD7vh)6ZY
	64         oQqbFM46myG6
	65          ornel David
	66          ornel David
	67  uuplpCarlos Delfino
	
	[68 rows x 1 columns]
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.host_id AS host_id,
		          LHS.name AS name,
		          LHS.nationality AS nationality,
		          LHS.age AS age,
		          LHS.party_id AS party_id,
		          LHS.is_main_in_charge AS is_main_in_charge,
		          RHS.party_theme AS party_theme,
		          RHS.location AS LOCATION,
		          RHS.first_year AS first_year,
		          RHS.last_year AS last_year,
		          RHS.number_of_hosts AS number_of_hosts
		   FROM
		     (SELECT LHS.host_id AS host_id,
		             LHS.name AS name,
		             LHS.nationality AS nationality,
		             LHS.age AS age,
		             RHS.party_id AS party_id,
		             RHS.is_main_in_charge AS is_main_in_charge
		      FROM host AS LHS
		      INNER JOIN party_host AS RHS ON (LHS.host_id = RHS.host_id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM party
		      WHERE (number_of_hosts >= 20)) AS RHS ON (LHS.party_id = RHS.party_id))
		ORDER BY name

	                   name
	0        19I3yuXd(GX)aL
	1        19I3yuXd(GX)aL
	2         3U1C6Fft5tREw
	3         3U1C6Fft5tREw
	4         Carlos Delfin
	..                  ...
	74          ornel David
	75          ornel David
	76          ornel David
	77  uuplpCarlos Delfino
	78        xF68wnFzUPXZR
	
	[79 rows x 1 columns]
Wrong output for fuzzied solution in instance spider/party_host/0012 (523)
	EXPECTED OUTPUT ====

		SELECT T3.Location
		FROM party_host AS T1
		JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID
		JOIN party AS T3 ON T1.Party_ID = T3.Party_ID
		WHERE T2.Age > 50

	                         location
	0    Heineken Music Hall Amsterda
	1    Heineken Music Hall Amsterda
	2    Heineken Music Hall Amsterda
	3   Heineken Music Hall Amsterdam
	4   Heineken Music Hall Amsterdam
	5   Heineken Music Hall Amsterdam
	6              Hemkade 48 Zaandam
	7              Hemkade 48 Zaandam
	8              Hemkade 48 Zaandam
	9         N2)TPHemkade 48 Zaandam
	10        N2)TPHemkade 48 Zaandam
	11        N2)TPHemkade 48 Zaandam
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT LOCATION
		FROM
		  (SELECT number_of_hosts AS party_id,
		          party_theme,
		          LOCATION,
		          first_year,
		          last_year,
		          number_of_hosts,
		          party_theme_other,
		          location_other,
		          last_year_other,
		          number_of_hosts_other,
		          host_id,
		          name,
		          nationality,
		          age,
		          is_main_in_charge
		   FROM
		     (SELECT LHS.party_id AS party_id,
		             LHS.party_theme AS party_theme,
		             LHS.location AS LOCATION,
		             LHS.first_year AS first_year,
		             LHS.last_year AS last_year,
		             LHS.number_of_hosts AS number_of_hosts,
		             RHS.party_theme AS party_theme_other,
		             RHS.location AS location_other,
		             RHS.last_year AS last_year_other,
		             RHS.number_of_hosts AS number_of_hosts_other,
		             RHS.host_id AS host_id,
		             RHS.name AS name,
		             RHS.nationality AS nationality,
		             RHS.age AS age,
		             RHS.is_main_in_charge AS is_main_in_charge
		      FROM party AS LHS
		      INNER JOIN
		        (SELECT LHS.party_id AS party_id,
		                LHS.party_theme AS party_theme,
		                LHS.location AS LOCATION,
		                LHS.first_year AS first_year,
		                LHS.last_year AS last_year,
		                LHS.number_of_hosts AS number_of_hosts,
		                LHS.host_id AS host_id,
		                LHS.name AS name,
		                LHS.nationality AS nationality,
		                LHS.age AS age,
		                RHS.is_main_in_charge AS is_main_in_charge
		         FROM
		           (SELECT LHS.party_id AS party_id,
		                   LHS.party_theme AS party_theme,
		                   LHS.location AS LOCATION,
		                   LHS.first_year AS first_year,
		                   LHS.last_year AS last_year,
		                   LHS.number_of_hosts AS number_of_hosts,
		                   RHS.host_id AS host_id,
		                   RHS.name AS name,
		                   RHS.nationality AS nationality,
		                   RHS.age AS age
		            FROM party AS LHS
		            CROSS JOIN host AS RHS) AS LHS
		         INNER JOIN party_host AS RHS ON (LHS.party_id = RHS.party_id
		                                             AND LHS.host_id = RHS.host_id)) AS RHS ON (LHS.number_of_hosts = RHS.party_id
		                                                                                        AND LHS.last_year = RHS.first_year)))
		ORDER BY LOCATION

	Empty DataFrame
	Columns: [location]
	Index: []
Wrong output for fuzzied solution in instance spider/party_host/0014 (528)
	EXPECTED OUTPUT ====

		SELECT Name,
		       Nationality
		FROM HOST
		ORDER BY Age DESC
		LIMIT 1

	                   name    nationality
	0  DIeCarlos Delfinov)D  United States
	ACTUAL OUTPUT ====

		
		SELECT name,
		       nationality
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM host
		      ORDER BY host_id DESC)
		   LIMIT 1)

	        name       nationality
	0  Gc6YDYaF1  VkpUFKNpv Bzk2jW
Wrong output for fuzzied solution in instance spider/party_host/0009 (529)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM HOST
		WHERE Age > 45 INTERSECT
		  SELECT Nationality
		  FROM HOST WHERE Age < 35

	     nationality
	0  United States
	1   nited States
	ACTUAL OUTPUT ====

		
		SELECT nationality
		FROM
		  (SELECT nationality
		   FROM host
		   WHERE (age = 45) INTERSECT
		     SELECT nationality
		     FROM host WHERE (age = 45))
		ORDER BY nationality

	           nationality
	0         4KDOFtuGF d1
	1         United State
	2        United States
	3  sNrUnited Statess e
Wrong output for fuzzied solution in instance spider/school_player/0012 (538)
	EXPECTED OUTPUT ====

		SELECT T2.Denomination
		FROM player AS T1
		JOIN school AS T2 ON T1.School_ID = T2.School_ID
		GROUP BY T1.School_ID
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  denomination
	0      Anglica
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT denomination
		FROM
		  (SELECT LHS.school_id AS school_id,
		          LHS.school AS school,
		          LHS.location AS LOCATION,
		          LHS.enrollment AS enrollment,
		          LHS.founded AS founded,
		          LHS.denomination AS denomination,
		          LHS.boys_or_girls AS boys_or_girls,
		          LHS.day_or_boarding AS day_or_boarding,
		          LHS.year_entered_competition AS year_entered_competition,
		          LHS.school_colors AS school_colors,
		          RHS.age AS age,
		          RHS.team AS team
		   FROM school AS LHS
		   INNER JOIN
		     (SELECT age,
		             team,
		             COUNT() AS n
		      FROM player
		      GROUP BY age,
		               team) AS RHS ON (LHS.school_id = RHS.n))
		ORDER BY denomination

	    denomination
	0  AnglicanX1ZRi
Wrong output for base solution in instance spider/school_player/0005 (540)
	EXPECTED OUTPUT ====

	   avg_enrollment_
	0      1663.333333
	ACTUAL OUTPUT ====

		SELECT avg(Enrollment)
		FROM school

	   avg(enrollment)
	0      1663.333333
Wrong output for ground truth in instance spider/school_player/0005 (540)
Wrong output for fuzzied solution in instance spider/school_player/0016 (541)
	EXPECTED OUTPUT ====

		SELECT School_Colors
		FROM school
		ORDER BY Enrollment DESC
		LIMIT 1

	         school_colors
	0  Royal Blue and Gold
	ACTUAL OUTPUT ====

		
		SELECT school_colors
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM school
		      ORDER BY school)
		   LIMIT 1)

	     school_colors
	0  Green and White
Wrong output for fuzzied solution in instance spider/school_player/0018 (542)
	EXPECTED OUTPUT ====

		SELECT Denomination
		FROM school
		WHERE Founded < 1890 INTERSECT
		  SELECT Denomination
		  FROM school WHERE Founded > 1900

	Empty DataFrame
	Columns: [denomination]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT denomination
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM school
		      WHERE (founded < 1890.0
		             AND founded <= 1900.0)) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM school AS RHS
		        WHERE (LHS.school_id = RHS.school_id
		               AND LHS.school = RHS.school
		               AND LHS.location = RHS.location
		               AND LHS.enrollment = RHS.enrollment
		               AND LHS.founded = RHS.founded
		               AND LHS.denomination = RHS.denomination
		               AND LHS.boys_or_girls = RHS.boys_or_girls
		               AND LHS.day_or_boarding = RHS.day_or_boarding
		               AND LHS.year_entered_competition = RHS.year_entered_competition
		               AND LHS.school_colors = RHS.school_colors) ))
		ORDER BY denomination

	  denomination
	0     mz1GeAsa
Wrong output for fuzzied solution in instance spider/school_player/0020 (543)
	EXPECTED OUTPUT ====

		SELECT Denomination
		FROM school
		GROUP BY Denomination
		HAVING COUNT(*) > 1

	  denomination
	0      Anglica
	1     Anglican
	ACTUAL OUTPUT ====

		
		SELECT denomination
		FROM
		  (SELECT boys_or_girls,
		          denomination,
		          COUNT() AS n
		   FROM school
		   GROUP BY boys_or_girls,
		            denomination)
		WHERE (n != 1)
		ORDER BY denomination

	Empty DataFrame
	Columns: [denomination]
	Index: []
Wrong output for fuzzied solution in instance spider/school_player/0001 (546)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM school

	   count(*)
	0        14
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT school,
		          year_entered_competition,
		          COUNT() AS n
		   FROM school
		   GROUP BY school,
		            year_entered_competition)
		ORDER BY count___

	   count___
	0        13
Wrong output for fuzzied solution in instance spider/school_player/0011 (549)
	EXPECTED OUTPUT ====

		SELECT T2.Location
		FROM player AS T1
		JOIN school AS T2 ON T1.School_ID = T2.School_ID
		GROUP BY T1.School_ID
		HAVING COUNT(*) > 1

	               location
	0            3ngCNnK3q7
	1   5lXBellevue HillwJf
	2      8k)9WSummer Hill
	3          Bellevue Hil
	4          Bellevue Hil
	5         Bellevue Hill
	6         Bellevue Hill
	7         Bellevue Hill
	8    Bellevue Hillvm5b)
	9     LMGSummer Hill2 W
	10         MA3V8t2Iw(gr
	11   Milsons PointTD6fI
	12          Summer Hill
	13         ellevue Hill
	14         ellevue Hill
	15         oDxSK5O2aN)j
	16     pW)pJSummer Hill
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT LOCATION,
		          school_colors,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.school_id AS school_id,
		             LHS.school AS school,
		             LHS.location AS LOCATION,
		             LHS.enrollment AS enrollment,
		             LHS.founded AS founded,
		             LHS.denomination AS denomination,
		             LHS.boys_or_girls AS boys_or_girls,
		             LHS.day_or_boarding AS day_or_boarding,
		             LHS.year_entered_competition AS year_entered_competition,
		             LHS.school_colors AS school_colors,
		             RHS.player_id AS player_id,
		             RHS.player AS player,
		             RHS.team AS team,
		             RHS.age AS age,
		             RHS.position AS POSITION
		      FROM school AS LHS
		      INNER JOIN player AS RHS ON (LHS.school_id = RHS.school_id))
		   GROUP BY LOCATION,
		            school_colors)
		WHERE (n != 1)
		ORDER BY LOCATION

	               location
	0            3ngCNnK3q7
	1   5lXBellevue HillwJf
	2      8k)9WSummer Hill
	3          Bellevue Hil
	4          Bellevue Hil
	5         Bellevue Hill
	6         Bellevue Hill
	7         Bellevue Hill
	8         Bellevue Hill
	9    Bellevue Hillvm5b)
	10    LMGSummer Hill2 W
	11         MA3V8t2Iw(gr
	12   Milsons PointTD6fI
	13          Summer Hill
	14         ellevue Hill
	15         ellevue Hill
	16         oDxSK5O2aN)j
	17     pW)pJSummer Hill
No solution for instance spider/customers_and_invoices/0033 (551)
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0037 (552)
	EXPECTED OUTPUT ====

		SELECT product_id,
		       count(DISTINCT order_id)
		FROM Order_items
		GROUP BY product_id

	   product_id  count(distinct order_id)
	0           4                         1
	1          10                         1
	2          11                         1
	3           5                         2
	4           8                         2
	5           9                         3
	6          12                         3
	ACTUAL OUTPUT ====

		
		SELECT product_id,
		       n_distinct AS count_distinct_order_id_
		FROM
		  (SELECT other_order_item_details,
		          product_id,
		          COUNT(DISTINCT order_id) AS n_distinct
		   FROM order_items
		   GROUP BY other_order_item_details,
		            product_id)
		ORDER BY product_id

	    product_id  count_distinct_order_id_
	0            4                         1
	1            5                         1
	2            5                         1
	3            8                         1
	4            8                         1
	5            9                         1
	6            9                         1
	7            9                         1
	8           10                         1
	9           11                         1
	10          12                         1
	11          12                         1
	12          12                         1
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0017 (555)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       account_id
		FROM Financial_transactions

	   count(*)  account_id
	0      1009           4
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       account_id
		FROM
		  (SELECT account_id,
		          transaction_comment,
		          COUNT() AS n
		   FROM
		     (SELECT transaction_id,
		             account_id,
		             invoice_number,
		             transaction_type,
		             transaction_date,
		             transaction_amount,
		             transaction_comment,
		             other_transaction_details,
		             transaction_comment_other,
		             transaction_date_other,
		             transaction_id AS n
		      FROM
		        (SELECT LHS.transaction_id AS transaction_id,
		                LHS.account_id AS account_id,
		                LHS.invoice_number AS invoice_number,
		                LHS.transaction_type AS transaction_type,
		                LHS.transaction_date AS transaction_date,
		                LHS.transaction_amount AS transaction_amount,
		                LHS.transaction_comment AS transaction_comment,
		                LHS.other_transaction_details AS other_transaction_details,
		                RHS.transaction_comment AS transaction_comment_other,
		                RHS.transaction_date AS transaction_date_other
		         FROM financial_transactions AS LHS
		         INNER JOIN
		           (SELECT transaction_comment,
		                   transaction_date,
		                   COUNT() AS n
		            FROM financial_transactions
		            GROUP BY transaction_comment,
		                     transaction_date) AS RHS ON (LHS.transaction_id = RHS.n)))
		   GROUP BY account_id,
		            transaction_comment)
		ORDER BY count___

	     count___  account_id
	0           1          -1
	1           1          -1
	2           1          -1
	3           1          -1
	4           1          -1
	..        ...         ...
	555       969          11
	556       969          11
	557       969          11
	558       969          11
	559       969          11
	
	[560 rows x 2 columns]
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0039 (557)
	EXPECTED OUTPUT ====

		SELECT order_id,
		       count(DISTINCT product_id)
		FROM Order_items
		GROUP BY order_id

	   order_id  count(distinct product_id)
	0         1                           1
	1         4                           1
	2         6                           1
	3         9                           1
	4        10                           1
	5         3                           2
	6         7                           2
	7        12                           2
	8        13                           2
	ACTUAL OUTPUT ====

		
		SELECT order_id,
		       n_distinct AS count_distinct_product_id_
		FROM
		  (SELECT *
		   FROM
		     (SELECT order_id,
		             other_order_item_details,
		             COUNT(DISTINCT product_id) AS n_distinct
		      FROM order_items
		      GROUP BY order_id,
		               other_order_item_details) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM order_items AS RHS
		        WHERE (LHS.order_id = RHS.order_id
		               AND LHS.other_order_item_details = RHS.other_order_item_details) ))
		ORDER BY order_id

	Empty DataFrame
	Columns: [order_id, count_distinct_product_id_]
	Index: []
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0038 (558)
	EXPECTED OUTPUT ====

		SELECT T2.product_name,
		       count(*)
		FROM Order_items AS T1
		JOIN Products AS T2 ON T1.product_id = T2.product_id
		JOIN Orders AS T3 ON T3.order_id = T1.order_id
		GROUP BY T2.product_name

	          product_name  count(*)
	0            Hard Driv         1
	1       Harry Potter 2         1
	2           Beer Menus         2
	3  Harry Potter 2RQcbB         2
	4      GDxChocolateAYh         3
	5            Chocolate         4
	ACTUAL OUTPUT ====

		
		SELECT product_name,
		       n AS count___
		FROM
		  (SELECT product_id,
		          product_name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.order_id AS order_id,
		             LHS.customer_id AS customer_id,
		             LHS.date_order_placed AS date_order_placed,
		             LHS.order_details AS order_details,
		             LHS.product_id AS product_id,
		             LHS.parent_product_id AS parent_product_id,
		             LHS.production_type_code AS production_type_code,
		             LHS.unit_price AS unit_price,
		             LHS.product_name AS product_name,
		             LHS.product_color AS product_color,
		             LHS.product_size AS product_size,
		             RHS.order_item_id AS order_item_id,
		             RHS.product_quantity AS product_quantity,
		             RHS.other_order_item_details AS other_order_item_details
		      FROM
		        (SELECT LHS.order_id AS order_id,
		                LHS.customer_id AS customer_id,
		                LHS.date_order_placed AS date_order_placed,
		                LHS.order_details AS order_details,
		                RHS.product_id AS product_id,
		                RHS.parent_product_id AS parent_product_id,
		                RHS.production_type_code AS production_type_code,
		                RHS.unit_price AS unit_price,
		                RHS.product_name AS product_name,
		                RHS.product_color AS product_color,
		                RHS.product_size AS product_size
		         FROM orders AS LHS
		         CROSS JOIN products AS RHS) AS LHS
		      INNER JOIN order_items AS RHS ON (LHS.order_id = RHS.order_id
		                                           AND LHS.product_id = RHS.product_id))
		   GROUP BY product_id,
		            product_name)
		ORDER BY product_name

	          product_name  count___
	0            Chocolate         1
	1            Hard Driv         1
	2       Harry Potter 2         1
	3           Beer Menus         2
	4  Harry Potter 2RQcbB         2
	5            Chocolate         3
	6      GDxChocolateAYh         3
No solution for instance spider/customers_and_invoices/0003 (559)
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0027 (560)
	EXPECTED OUTPUT ====

		SELECT invoice_number,
		       count(*)
		FROM Financial_transactions
		GROUP BY invoice_number

	   invoice_number  count(*)
	0               7       126
	1               9       133
	2               4       144
	3               3       147
	4               6       150
	5               8       152
	6               5       157
	ACTUAL OUTPUT ====

		
		SELECT invoice_number,
		       n AS count___
		FROM
		  (SELECT invoice_number,
		          COUNT() AS n
		   FROM
		     (SELECT invoice_number,
		             transaction_date,
		             COUNT() AS n
		      FROM financial_transactions
		      GROUP BY invoice_number,
		               transaction_date)
		   GROUP BY invoice_number)
		ORDER BY invoice_number

	   invoice_number  count___
	0               3         7
	1               4         7
	2               5         7
	3               6         7
	4               7         7
	5               8         7
	6               9         7
No solution for instance spider/customers_and_invoices/0012 (566)
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0015 (568)
	EXPECTED OUTPUT ====

		SELECT gender,
		       count(*)
		FROM Customers
		GROUP BY gender

	   gender  count(*)
	0       -         1
	1      -1         1
	2       0         1
	3  1aDie8         1
	4       2         2
	5                 3
	6       1         4
	ACTUAL OUTPUT ====

		
		SELECT gender,
		       n AS count___
		FROM
		  (SELECT gender,
		          COUNT() AS n
		   FROM
		     (SELECT customer_last_name,
		             gender,
		             COUNT() AS n
		      FROM customers
		      GROUP BY customer_last_name,
		               gender)
		   GROUP BY gender)
		ORDER BY gender

	   gender  count___
	0       -         1
	1      -1         1
	2       0         1
	3  1aDie8         1
	4       2         2
	5                 3
	6       1         3
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0005 (569)
	EXPECTED OUTPUT ====

		SELECT T1.account_name,
		       T1.other_account_details
		FROM Accounts AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.customer_first_name = "Meaghan"
		  AND T2.customer_last_name = "Keeling"

	Empty DataFrame
	Columns: [account_name, other_account_details]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `account_name`,
		       `other_account_details`
		FROM
		  (SELECT *
		   FROM `accounts` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `customers`
		           WHERE (`customer_first_name` = 'Meaghan'
		                  OR `customer_last_name` = 'Keeling')) AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY account_name

	  account_name other_account_details
	0     322qLx3m                   VIP
	1          710                   VIP
	2           89              VIPqhgTy
	3          901               Regular
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0016 (570)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Financial_transactions

	   count(*)
	0      1009
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT transaction_comment,
		          COUNT() AS n
		   FROM financial_transactions
		   GROUP BY transaction_comment)
		ORDER BY count___

	     count___
	0           1
	1           1
	2           1
	3           1
	4           1
	..        ...
	963         2
	964         2
	965         2
	966         2
	967        38
	
	[968 rows x 1 columns]
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0032 (571)
	EXPECTED OUTPUT ====

		SELECT T2.order_id,
		       T2.order_details
		FROM Invoices AS T1
		JOIN Orders AS T2 ON T1.order_id = T2.order_id
		GROUP BY T2.order_id
		HAVING count(*) > 2

	   order_id  order_details
	0         1         2p1vzI
	1         3        F(Wz5tB
	2         4  j8uI6Jl2 w)ry
	ACTUAL OUTPUT ====

		
		SELECT order_id_other AS order_id,
		       order_details
		FROM
		  (SELECT LHS.order_id AS order_id,
		          LHS.customer_id AS customer_id,
		          LHS.date_order_placed AS date_order_placed,
		          LHS.order_details AS order_details,
		          RHS.order_id AS order_id_other
		   FROM orders AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT order_id,
		                COUNT() AS n
		         FROM invoices
		         GROUP BY order_id)
		      WHERE (n > 2)) AS RHS ON (LHS.order_id = RHS.n))
		ORDER BY order_id

	   order_id   order_details
	0         1         F(Wz5tB
	1         3         F(Wz5tB
	2         4  d)bUnwMOp3nfyk
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0018 (572)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Financial_transactions AS T1
		JOIN Accounts AS T2 ON T1.account_id = T2.account_id
		WHERE T2.account_name = "337"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT *
		   FROM financial_transactions AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM accounts
		           WHERE (account_name != 337)) AS RHS
		        WHERE (LHS.account_id = RHS.account_id) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Error while executing solution for instance spider/customers_and_invoices/0041 (573)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT product_id) OVER () AS count___
FROM
  (SELECT *
   FROM products AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM order_items AS RHS
        WHERE (LHS.product_id = RHS.product_id) ))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for base solution in instance spider/customers_and_invoices/0035 (574)
	EXPECTED OUTPUT ====

	       product_name sum_t1_product_quantity_
	0              Arts                        5
	1        Beer Menus                        2
	2         Chocolate                        1
	3              Fans                        9
	4        Hard Drive                       10
	5    Harry Potter 2                        8
	6    Harry Potter 3                       15
	7    Harry Potter 4                        3
	8  Learning English                        5
	9                TV                        7
	ACTUAL OUTPUT ====

		SELECT T2.product_name,
		       sum(T1.product_quantity)
		FROM Order_items AS T1
		JOIN Products AS T2 ON T1.product_id = T2.product_id
		GROUP BY T2.product_name

	       product_name  sum(t1.product_quantity)
	0              Arts                         5
	1        Beer Menus                         2
	2         Chocolate                         1
	3              Fans                         9
	4        Hard Drive                        10
	5    Harry Potter 2                         8
	6    Harry Potter 3                        15
	7    Harry Potter 4                         3
	8  Learning English                         5
	9                TV                         7
Wrong output for ground truth in instance spider/customers_and_invoices/0035 (574)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Wrong output for base solution in instance spider/customers_and_invoices/0019 (576)
	EXPECTED OUTPUT ====

	   avg_transaction_amount_  min_transaction_amount_  max_transaction_amount_  sum_transaction_amount_
	0                 1329.056                   368.46                  1979.66                 19935.84
	ACTUAL OUTPUT ====

		SELECT avg(transaction_amount),
		       min(transaction_amount),
		       max(transaction_amount),
		       sum(transaction_amount)
		FROM Financial_transactions

	   avg(transaction_amount)  min(transaction_amount)  max(transaction_amount)  sum(transaction_amount)
	0                 1329.056                   368.46                  1979.66                 19935.84
Wrong output for ground truth in instance spider/customers_and_invoices/0019 (576)
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0034 (578)
	EXPECTED OUTPUT ====

		SELECT product_name
		FROM Products
		EXCEPT
		SELECT T1.product_name
		FROM Products AS T1
		JOIN Order_items AS T2 ON T1.product_id = T2.product_id

	  product_name
	0        Menus
	ACTUAL OUTPUT ====

		
		SELECT product_name
		FROM
		  (SELECT *
		   FROM products AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM order_items AS RHS
		        WHERE (LHS.product_id = RHS.product_id) ))
		ORDER BY product_name

	     product_name
	0       Hard Driv
	1  Harry Potter 2
	2           Menus
Wrong output for base solution in instance spider/customers_and_invoices/0021 (580)
	EXPECTED OUTPUT ====

	  transaction_type  sum_transaction_amount_
	0          Payment                  8743.15
	1           Refund                 11192.69
	ACTUAL OUTPUT ====

		SELECT transaction_type,
		       sum(transaction_amount)
		FROM Financial_transactions
		GROUP BY transaction_type

	  transaction_type  sum(transaction_amount)
	0          Payment                  8743.15
	1           Refund                 11192.69
Wrong output for ground truth in instance spider/customers_and_invoices/0021 (580)
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0023 (581)
	EXPECTED OUTPUT ====

		SELECT account_id
		FROM Financial_transactions
		GROUP BY account_id
		ORDER BY count(*) DESC
		LIMIT 1

	   account_id
	0           0
	ACTUAL OUTPUT ====

		
		SELECT n AS account_id
		FROM
		  (SELECT other_transaction_details,
		          COUNT() AS n
		   FROM
		     (SELECT invoice_number,
		             other_transaction_details,
		             COUNT() AS n
		      FROM financial_transactions
		      GROUP BY invoice_number,
		               other_transaction_details)
		   GROUP BY other_transaction_details)
		ORDER BY account_id

	     account_id
	0             1
	1             1
	2             1
	3             1
	4             1
	..          ...
	958           2
	959           2
	960           2
	961           2
	962           7
	
	[963 rows x 1 columns]
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0014 (583)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Customers

	   count(*)
	0        13
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT customer_first_name,
		             customer_last_name,
		             COUNT() AS n
		      FROM customers
		      GROUP BY customer_first_name,
		               customer_last_name))
		ORDER BY count___

	   count___
	0        11
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0011 (586)
	EXPECTED OUTPUT ====

		SELECT T1.customer_id,
		       T2.customer_first_name,
		       T2.customer_last_name
		FROM Accounts AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T1.customer_id
		ORDER BY count(*) DESC
		LIMIT 1

	   customer_id customer_first_name customer_last_name
	0           16                Murl              Hauck
	ACTUAL OUTPUT ====

		
		SELECT customer_id,
		       customer_first_name,
		       customer_last_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.customer_first_name AS customer_first_name,
		                LHS.customer_middle_initial AS customer_middle_initial,
		                LHS.customer_last_name AS customer_last_name,
		                LHS.gender AS gender,
		                LHS.email_address AS email_address,
		                LHS.login_name AS login_name,
		                LHS.login_password AS login_password,
		                LHS.phone_number AS phone_number,
		                LHS.town_city AS town_city,
		                LHS.state_county_province AS state_county_province,
		                LHS.country AS country,
		                LHS.account_id AS account_id,
		                LHS.date_account_opened AS date_account_opened,
		                LHS.account_name AS account_name,
		                LHS.other_account_details AS other_account_details,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.customer_id AS customer_id,
		                   LHS.customer_first_name AS customer_first_name,
		                   LHS.customer_middle_initial AS customer_middle_initial,
		                   LHS.customer_last_name AS customer_last_name,
		                   LHS.gender AS gender,
		                   LHS.email_address AS email_address,
		                   LHS.login_name AS login_name,
		                   LHS.login_password AS login_password,
		                   LHS.phone_number AS phone_number,
		                   LHS.town_city AS town_city,
		                   LHS.state_county_province AS state_county_province,
		                   LHS.country AS country,
		                   RHS.account_id AS account_id,
		                   RHS.date_account_opened AS date_account_opened,
		                   RHS.account_name AS account_name,
		                   RHS.other_account_details AS other_account_details
		            FROM customers AS LHS
		            INNER JOIN accounts AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS
		         INNER JOIN
		           (SELECT customer_id,
		                   customer_first_name,
		                   customer_middle_initial,
		                   customer_last_name,
		                   gender,
		                   email_address,
		                   login_name,
		                   login_password,
		                   phone_number,
		                   town_city,
		                   state_county_province,
		                   country,
		                   COUNT(*) OVER () AS n
		            FROM customers) AS RHS ON (LHS.customer_id = RHS.customer_id
		                                          AND LHS.customer_first_name = RHS.customer_first_name
		                                          AND LHS.customer_middle_initial = RHS.customer_middle_initial
		                                          AND LHS.customer_last_name = RHS.customer_last_name
		                                          AND LHS.gender = RHS.gender
		                                          AND LHS.email_address = RHS.email_address
		                                          AND LHS.login_name = RHS.login_name
		                                          AND LHS.login_password = RHS.login_password
		                                          AND LHS.phone_number = RHS.phone_number
		                                          AND LHS.town_city = RHS.town_city
		                                          AND LHS.state_county_province = RHS.state_county_province
		                                          AND LHS.country = RHS.country))
		      ORDER BY phone_number)
		   LIMIT 1)

	   customer_id customer_first_name customer_last_name
	0           11          V8RMurlX5o             Muller
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0029 (587)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Invoices

	   count(*)
	0        75
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT invoice_date,
		          order_id,
		          COUNT() AS n
		   FROM invoices
		   GROUP BY invoice_date,
		            order_id)
		ORDER BY count___

	   count___
	0        71
Wrong output for base solution in instance spider/customers_and_invoices/0040 (589)
	EXPECTED OUTPUT ====

	   order_id sum_product_quantity_
	0         1                    12
	1         2                     3
	2         4                    17
	3        10                     4
	4        12                     1
	5        13                    18
	6        14                     1
	7        15                     9
	ACTUAL OUTPUT ====

		SELECT order_id,
		       sum(product_quantity)
		FROM Order_items
		GROUP BY order_id

	   order_id  sum(product_quantity)
	0         1                     12
	1         2                      3
	2         4                     17
	3        10                      4
	4        12                      1
	5        13                     18
	6        14                      1
	7        15                      9
Wrong output for ground truth in instance spider/customers_and_invoices/0040 (589)
Wrong output for fuzzied solution in instance spider/customers_and_invoices/0028 (590)
	EXPECTED OUTPUT ====

		SELECT T2.invoice_number,
		       T2.invoice_date
		FROM Financial_transactions AS T1
		JOIN Invoices AS T2 ON T1.invoice_number = T2.invoice_number
		GROUP BY T1.invoice_number
		ORDER BY count(*) DESC
		LIMIT 1

	   invoice_number         invoice_date
	0               5  2018-03-14 22:00:34
	ACTUAL OUTPUT ====

		
		SELECT invoice_number,
		       invoice_date
		FROM
		  (SELECT LHS.invoice_number AS invoice_number,
		          LHS.transaction_type AS transaction_type,
		          LHS.n AS n,
		          RHS.invoice_date AS invoice_date
		   FROM
		     (SELECT invoice_number,
		             transaction_type,
		             COUNT() AS n
		      FROM financial_transactions
		      GROUP BY invoice_number,
		               transaction_type) AS LHS
		   INNER JOIN invoices AS RHS ON (LHS.invoice_number = RHS.invoice_number
		                                     AND LHS.n = RHS.order_id))
		ORDER BY invoice_number

	   invoice_number         invoice_date
	0               7  2018-03-02 03:37:25
	1               6  2018-03-04 03:00:59
	2               6  2018-03-04 03:00:59
No solution for instance spider/ship_1/0003 (595)
Wrong output for fuzzied solution in instance spider/ship_1/0022 (596)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM ship AS t1
		JOIN captain AS t2 ON t1.ship_id = t2.ship_id
		ORDER BY t2.age
		LIMIT 1

	               name
	0  mfT0lHMS Manxman
	ACTUAL OUTPUT ====

		
		SELECT name_other AS name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT captain_id,
		                name,
		                captain_id AS ship_id,
		                age,
		                CLASS,
		                rank,
		                name_other,
		                TYPE,
		                built_year,
		                class_other,
		                flag
		         FROM
		           (SELECT LHS.captain_id AS captain_id,
		                   LHS.name AS name,
		                   LHS.ship_id AS ship_id,
		                   LHS.age AS age,
		                   LHS.class AS CLASS,
		                   LHS.rank AS rank,
		                   RHS.name AS name_other,
		                   RHS.type AS TYPE,
		                   RHS.built_year AS built_year,
		                   RHS.class AS class_other,
		                   RHS.flag AS flag
		            FROM captain AS LHS
		            INNER JOIN ship AS RHS ON (LHS.captain_id = RHS.ship_id)))
		      ORDER BY age)
		   LIMIT 1)

	            name
	0  HMS Phalarope
Wrong output for fuzzied solution in instance spider/ship_1/0013 (597)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM ship

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT name,
		          COUNT() AS n
		   FROM ship
		   GROUP BY name)
		ORDER BY count___

	   count___
	0         4
Wrong output for fuzzied solution in instance spider/ship_1/0006 (598)
	EXPECTED OUTPUT ====

		SELECT rank
		FROM captain
		GROUP BY rank
		ORDER BY count(*) DESC
		LIMIT 1

	        rank
	0  Midshipma
	ACTUAL OUTPUT ====

		
		SELECT rank
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT name,
		                rank,
		                COUNT() AS n
		         FROM captain
		         GROUP BY name,
		                  rank)
		      ORDER BY n)
		   LIMIT 1)

	         rank
	0  Midshipman
Wrong output for fuzzied solution in instance spider/ship_1/0004 (599)
	EXPECTED OUTPUT ====

		SELECT name
		FROM captain
		ORDER BY age DESC

	                              name
	0             Captain Beves Conway
	1           Captain Henry Dumaresq
	2           Captain Henry Dumaresq
	3      Captain Henry DumaresqjfNTN
	4  FF9owLieutenant Montagu Verling
	5       Lieutenant Montagu Verling
	6       Lieutenant Montagu Verling
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT name
		   FROM captain INTERSECT SELECT name
		   FROM captain)
		ORDER BY name

	                              name
	0             Captain Beves Conway
	1           Captain Henry Dumaresq
	2      Captain Henry DumaresqjfNTN
	3  FF9owLieutenant Montagu Verling
	4       Lieutenant Montagu Verling
Wrong output for fuzzied solution in instance spider/ship_1/0012 (600)
	EXPECTED OUTPUT ====

		SELECT name
		FROM captain
		ORDER BY age
		LIMIT 1

	                          name
	0  Captain Henry DumaresqjfNTN
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM captain
		      ORDER BY ship_id DESC)
		   LIMIT 1)

	                   name
	0  Captain Beves Conway
Wrong output for fuzzied solution in instance spider/ship_1/0016 (603)
	EXPECTED OUTPUT ====

		SELECT flag
		FROM ship
		GROUP BY flag
		ORDER BY count(*) DESC
		LIMIT 1

	     flag
	0  Panama
	ACTUAL OUTPUT ====

		
		SELECT flag
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT flag,
		                ship_id,
		                COUNT() AS n
		         FROM ship
		         GROUP BY flag,
		                  ship_id)
		      ORDER BY flag DESC)
		   LIMIT 1)

	    flag
	0  anama
Wrong output for fuzzied solution in instance spider/ship_1/0018 (604)
	EXPECTED OUTPUT ====

		SELECT TYPE
		FROM ship
		WHERE flag = 'Panama' INTERSECT
		  SELECT TYPE
		  FROM ship WHERE flag = 'Malta'

	     type
	0  anamax
	ACTUAL OUTPUT ====

		
		SELECT `type`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `ship`
		      WHERE (`flag` != 'Panama'
		             AND `flag` = 'Malta')) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM ship AS RHS
		        WHERE (LHS.ship_id = RHS.ship_id
		               AND LHS.name = RHS.name
		               AND LHS.type = RHS.type
		               AND LHS.built_year = RHS.built_year
		               AND LHS.class = RHS.class
		               AND LHS.flag = RHS.flag) ))
		ORDER BY TYPE

	      type
	0  Panamax
	1  Panamax
	2   anamax
	3   anamax
Wrong output for fuzzied solution in instance spider/ship_1/0019 (606)
	EXPECTED OUTPUT ====

		SELECT built_year
		FROM ship
		GROUP BY built_year
		ORDER BY count(*) DESC
		LIMIT 1

	   built_year
	0      1998.0
	ACTUAL OUTPUT ====

		
		SELECT built_year
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT built_year,
		                TYPE,
		                COUNT() AS n
		         FROM ship
		         GROUP BY built_year,
		                  TYPE)
		      ORDER BY TYPE DESC)
		   LIMIT 1)

	   built_year
	0     1997.98
Wrong output for fuzzied solution in instance spider/ship_1/0007 (607)
	EXPECTED OUTPUT ====

		SELECT CLASS
		FROM captain
		GROUP BY CLASS
		HAVING count(*) > 2

	                         class
	0                      Frigate
	1  Third-rate ship of the line
	ACTUAL OUTPUT ====

		
		SELECT CLASS
		FROM
		  (SELECT CLASS,
		          COUNT() AS n
		   FROM captain
		   GROUP BY CLASS)
		WHERE (n >= 2)
		ORDER BY CLASS

	                         class
	0                      Frigate
	1  Third-rate ship of the line
	2   hird-rate ship of the line
No solution for instance spider/ship_1/0024 (608)
Wrong output for base solution in instance spider/ship_1/0009 (613)
	EXPECTED OUTPUT ====

	    avg_age_ min_age_                        class
	0  38.000000       38                      Frigate
	1  38.000000       38                 Sloop-of-war
	2  43.000000       43                       Cutter
	3  45.000000       45               Armed schooner
	4  51.333333       40  Third-rate ship of the line
	ACTUAL OUTPUT ====

		SELECT avg(age),
		       min(age),
		       CLASS
		FROM captain
		GROUP BY CLASS

	    avg(age) min(age)                        class
	0  45.000000       45               Armed schooner
	1  43.000000       43                       Cutter
	2  38.000000       38                      Frigate
	3  38.000000       38                 Sloop-of-war
	4  51.333333       40  Third-rate ship of the line
Wrong output for ground truth in instance spider/ship_1/0009 (613)
Wrong output for fuzzied solution in instance spider/ship_1/0011 (614)
	EXPECTED OUTPUT ====

		SELECT rank
		FROM captain
		EXCEPT
		SELECT rank
		FROM captain
		WHERE CLASS = 'Third-rate ship of the line'

	         rank
	0  Lieutenant
	1  Midshipman
	ACTUAL OUTPUT ====

		
		SELECT `rank`
		FROM
		  (SELECT *
		   FROM `captain` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `captain`
		           WHERE (`class` = 'Third-rate ship of the line')) AS `RHS`
		        WHERE (`LHS`.`rank` = `RHS`.`rank`) ))
		WHERE (`class` != 'Third-rate ship of the line')
		ORDER BY rank

	         rank
	0  Lieutenant
	1  Lieutenant
	2  Midshipman
Wrong output for fuzzied solution in instance spider/ship_1/0010 (615)
	EXPECTED OUTPUT ====

		SELECT rank
		FROM captain
		WHERE CLASS = 'Cutter' INTERSECT
		  SELECT rank
		  FROM captain WHERE CLASS = 'Armed schooner'

	Empty DataFrame
	Columns: [rank]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `rank`
		FROM
		  (SELECT `rank`
		   FROM `captain`
		   WHERE (`class` = 'Cutter'
		          OR `class` = 'Armed schooner') INTERSECT
		     SELECT `rank`
		     FROM `captain` WHERE (`class` = 'Cutter'
		                              OR `class` = 'Armed schooner'))
		ORDER BY rank

	               rank
	0       546nya5Z(z4
	1  6MHLieutenant7FQ
	2         Midshipma
	3   gd)jELieutenant
No solution for instance spider/baseball_1/0033 (616)
No solution for instance spider/baseball_1/0037 (617)
Wrong output for base solution in instance spider/baseball_1/0002 (618)
	EXPECTED OUTPUT ====

	   avg_t1_salary_
	0    2.856617e+06
	ACTUAL OUTPUT ====

		SELECT avg(T1.salary)
		FROM salary AS T1
		JOIN team AS T2 ON T1.team_id = T2.team_id_br
		WHERE T2.name = 'Boston Red Stockings'

	   avg(t1.salary)
	0    2.856617e+06
Wrong output for ground truth in instance spider/baseball_1/0002 (618)
No solution for instance spider/baseball_1/0036 (619)
Wrong output for base solution in instance spider/baseball_1/0017 (620)
	EXPECTED OUTPUT ====

	      name_first name_last
	0          A. J.    Achter
	1          A. J.   Burnett
	2          A. J.      Cole
	3          A. J.     Ellis
	4          A. J.   Griffin
	...          ...       ...
	18223        NaN  Stoddard
	18224        NaN  Sullivan
	18225        NaN  Sweigert
	18226        NaN     Wills
	18227        NaN      Wood
	
	[18228 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT T1.name_first,
		       T1.name_last
		FROM player AS T1
		JOIN player_award AS T2
		WHERE T2.year = 1960 INTERSECT
		  SELECT T1.name_first,
		         T1.name_last
		  FROM player AS T1
		  JOIN player_award AS T2 WHERE T2.year = 1961

	      name_first  name_last
	0                    Boland
	1                     Booth
	2                   Carroll
	3                   Collins
	4                   Edwards
	...          ...        ...
	18223       Zinn       Beck
	18224        Zip    Collins
	18225        Zip      Zabel
	18226      Zoilo    Almonte
	18227      Zoilo  Versalles
	
	[18228 rows x 2 columns]
Wrong output for ground truth in instance spider/baseball_1/0017 (620)
No solution for instance spider/baseball_1/0008 (621)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
No solution for instance spider/baseball_1/0022 (626)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Wrong output for base solution in instance spider/baseball_1/0006 (629)
	EXPECTED OUTPUT ====

	     year  avg_attendance_
	0    1873     0.000000e+00
	1    1876     0.000000e+00
	2    1877     0.000000e+00
	3    1878     0.000000e+00
	4    1879     0.000000e+00
	..    ...              ...
	139  2009     2.447340e+06
	140  2007     2.484490e+06
	141  2005     2.497233e+06
	142  1993     2.509234e+06
	143  2006     2.534516e+06
	
	[144 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT YEAR,
		       avg(attendance)
		FROM home_game
		GROUP BY YEAR;

	     year  avg(attendance)
	0    1873     0.000000e+00
	1    1876     0.000000e+00
	2    1877     0.000000e+00
	3    1878     0.000000e+00
	4    1879     0.000000e+00
	..    ...              ...
	139  2009     2.447340e+06
	140  2007     2.484490e+06
	141  2005     2.497233e+06
	142  1993     2.509234e+06
	143  2006     2.534516e+06
	
	[144 rows x 2 columns]
Wrong output for ground truth in instance spider/baseball_1/0006 (629)
No solution for instance spider/baseball_1/0004 (630)
Wrong output for base solution in instance spider/baseball_1/0012 (631)
	EXPECTED OUTPUT ====

	     name_first name_last
	0         A. J.    Achter
	1         A. J.   Burnett
	2         A. J.      Cole
	3         A. J.     Ellis
	4         A. J.   Griffin
	...         ...       ...
	9505        NaN  Stoddard
	9506        NaN  Sullivan
	9507        NaN  Sweigert
	9508        NaN     Wills
	9509        NaN      Wood
	
	[9510 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT name_first,
		       name_last
		FROM player
		WHERE death_year = '';

	     name_first name_last
	0                  Boland
	1                   Booth
	2                 Carroll
	3                 Collins
	4                 Edwards
	...         ...       ...
	9505        Zak   Shinall
	9506       Zane     Smith
	9507       Zeke   Spruill
	9508     Zelous   Wheeler
	9509      Zoilo   Almonte
	
	[9510 rows x 2 columns]
Wrong output for ground truth in instance spider/baseball_1/0012 (631)
No solution for instance spider/baseball_1/0026 (632)
No solution for instance spider/baseball_1/0015 (633)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
No solution for instance spider/baseball_1/0016 (635)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Wrong output for base solution in instance spider/baseball_1/0018 (637)
	EXPECTED OUTPUT ====

	      name_first   name_last
	0          A. J.     Burnett
	1          A. J.       Ellis
	2          A. J.     Griffin
	3          A. J.       Hinch
	4          A. J.  Pierzynski
	...          ...         ...
	16044        NaN    Stoddard
	16045        NaN    Sullivan
	16046        NaN    Sweigert
	16047        NaN       Wills
	16048        NaN        Wood
	
	[16049 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT name_first,
		       name_last
		FROM player
		WHERE weight > 220
		  OR height < 75

	      name_first  name_last
	0                    Boland
	1                     Booth
	2                   Carroll
	3                   Collins
	4                   Edwards
	...          ...        ...
	16044       Zinn       Beck
	16045        Zip    Collins
	16046        Zip      Zabel
	16047      Zoilo    Almonte
	16048      Zoilo  Versalles
	
	[16049 rows x 2 columns]
Wrong output for ground truth in instance spider/baseball_1/0018 (637)
No solution for instance spider/baseball_1/0041 (638)
No solution for instance spider/baseball_1/0035 (639)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
No solution for instance spider/baseball_1/0007 (642)
No solution for instance spider/baseball_1/0034 (643)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
No solution for instance spider/baseball_1/0021 (645)
No solution for instance spider/baseball_1/0001 (646)
Wrong output for base solution in instance spider/baseball_1/0014 (647)
	EXPECTED OUTPUT ====

	   avg_t1_height_
	0       59.135593
	ACTUAL OUTPUT ====

		SELECT avg(T1.height)
		FROM player AS T1
		JOIN player_college AS T2 ON T1.player_id = T2.player_id
		JOIN college AS T3 ON T3.college_id = T2.college_id
		WHERE T3.name_full = 'Yale University';

	   avg(t1.height)
	0       59.135593
Wrong output for ground truth in instance spider/baseball_1/0014 (647)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
No solution for instance spider/baseball_1/0025 (649)
No solution for instance spider/baseball_1/0011 (650)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
No solution for instance spider/baseball_1/0010 (652)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Wrong output for fuzzied solution in instance spider/entertainment_awards/0017 (657)
	EXPECTED OUTPUT ====

		SELECT TYPE
		FROM artwork
		GROUP BY TYPE
		ORDER BY COUNT(*) DESC
		LIMIT 1

	                           type
	0  Presenter Music/Variety Show
	ACTUAL OUTPUT ====

		
		SELECT TYPE
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT artwork_id,
		                TYPE,
		                COUNT() AS n
		         FROM artwork
		         GROUP BY artwork_id,
		                  TYPE)
		      ORDER BY n DESC)
		   LIMIT 1)

	                                type
	0  6zZZ2Presenter Music/Variety Show
Wrong output for fuzzied solution in instance spider/entertainment_awards/0006 (661)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM festival_detail
		ORDER BY Num_of_Audience DESC
		LIMIT 1

	             location
	0  United StatesBIQ)G
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT LOCATION
		   FROM festival_detail INTERSECT SELECT LOCATION
		   FROM festival_detail)
		ORDER BY LOCATION

	              location
	0  8C United StatesRJC
	1         United State
	2        United States
	3   United StatesBIQ)G
	4   United StatesWS9Ei
	5  eB5United StatesveW
	6   gNjjNUnited States
	7  kIUUnited StatesLo5
Wrong output for fuzzied solution in instance spider/entertainment_awards/0018 (667)
	EXPECTED OUTPUT ====

		SELECT YEAR
		FROM festival_detail
		GROUP BY YEAR
		HAVING COUNT(*) > 1

	   year
	0  2008
	1  2010
	ACTUAL OUTPUT ====

		
		SELECT YEAR
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT festival_name,
		                YEAR,
		                COUNT() AS n
		         FROM festival_detail
		         GROUP BY festival_name,
		                  YEAR)
		      ORDER BY festival_name)
		   LIMIT 1)

	   year
	0  2008
Wrong output for fuzzied solution in instance spider/entertainment_awards/0020 (668)
	EXPECTED OUTPUT ====

		SELECT Num_of_Audience
		FROM festival_detail
		WHERE YEAR = 2008
		  OR YEAR = 2010

	   num_of_audience
	0              152
	1              152
	2              152
	3              152
	ACTUAL OUTPUT ====

		
		SELECT num_of_audience
		FROM festival_detail
		WHERE (YEAR >= 2008
		       OR YEAR >= 2010)
		ORDER BY num_of_audience

	   num_of_audience
	0              152
	1              152
	2              152
	3              152
	4              153
	5              158
Wrong output for fuzzied solution in instance spider/entertainment_awards/0014 (673)
	EXPECTED OUTPUT ====

		SELECT T1.Festival_ID,
		       T3.Festival_Name
		FROM nomination AS T1
		JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID
		JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID
		GROUP BY T1.Festival_ID
		HAVING COUNT(*) >= 2

	   festival_id  festival_name
	0           -1  Flower Awards
	1            1  Cherry Awards
	2            3   Gobel Awards
	3            4  Flower Awards
	4            5   Gobel Awards
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT festival_id,
		                festival_name
		FROM
		  (SELECT festival_id,
		          festival_name,
		          chair_name,
		          LOCATION,
		          YEAR,
		          num_of_audience,
		          artwork_id,
		          TYPE,
		          name,
		          RESULT,
		          COUNT(*) OVER () AS n
		   FROM
		     (SELECT LHS.festival_id AS festival_id,
		             LHS.festival_name AS festival_name,
		             LHS.chair_name AS chair_name,
		             LHS.location AS LOCATION,
		             LHS.year AS YEAR,
		             LHS.num_of_audience AS num_of_audience,
		             LHS.artwork_id AS artwork_id,
		             LHS.type AS TYPE,
		             LHS.name AS name,
		             RHS.result AS RESULT
		      FROM
		        (SELECT LHS.festival_id AS festival_id,
		                LHS.festival_name AS festival_name,
		                LHS.chair_name AS chair_name,
		                LHS.location AS LOCATION,
		                LHS.year AS YEAR,
		                LHS.num_of_audience AS num_of_audience,
		                RHS.artwork_id AS artwork_id,
		                RHS.type AS TYPE,
		                RHS.name AS name
		         FROM festival_detail AS LHS
		         CROSS JOIN artwork AS RHS) AS LHS
		      INNER JOIN nomination AS RHS ON (LHS.festival_id = RHS.festival_id
		                                          AND LHS.artwork_id = RHS.artwork_id)))
		WHERE (n > 2)
		ORDER BY festival_id

	   festival_id       festival_name
	0           -1       Flower Awards
	1            0   Hqn0zGobel Awards
	2            1       Cherry Awards
	3            2       Cherry Awards
	4            3        Gobel Awards
	5            4       Flower Awards
	6            5        Gobel Awards
	7            6   Gobel Awards8zCr2
	8            7  OZLFMFlower Awards
Wrong output for fuzzied solution in instance spider/store_product/0002 (677)
	EXPECTED OUTPUT ====

		SELECT max_page_size
		FROM product
		GROUP BY max_page_size
		HAVING count(*) > 3

	Empty DataFrame
	Columns: [max_page_size]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT max_page_size
		FROM
		  (SELECT max_page_size,
		          COUNT() AS n
		   FROM product
		   GROUP BY max_page_size)
		WHERE (n >= 3)
		ORDER BY max_page_size

	  max_page_size
	0            A4
Wrong output for fuzzied solution in instance spider/store_product/0017 (678)
	EXPECTED OUTPUT ====

		SELECT product
		FROM product
		WHERE max_page_size = "A4"
		  OR pages_per_minute_color < 5

	                         product
	0                 Canon DR-2080C
	1                 Canon DR-2080C
	2                 Canon DR-2080C
	3  Xerox Travel Scanner 100npOO(
	ACTUAL OUTPUT ====

		
		SELECT `product`
		FROM
		  (SELECT *
		   FROM `product` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `product`
		           WHERE (`max_page_size` = 'A4'
		                  AND pages_per_minute_color != 5.0)) AS RHS
		        WHERE (LHS.product_id = RHS.product_id
		               AND LHS.product = RHS.product
		               AND LHS.dimensions = RHS.dimensions
		               AND LHS.dpi = RHS.dpi
		               AND LHS.pages_per_minute_color = RHS.pages_per_minute_color
		               AND LHS.max_page_size = RHS.max_page_size
		               AND LHS.interface = RHS.interface) ))
		ORDER BY product

	Empty DataFrame
	Columns: [product]
	Index: []
Wrong output for fuzzied solution in instance spider/store_product/0008 (679)
	EXPECTED OUTPUT ====

		SELECT TYPE,
		       count(*)
		FROM store
		GROUP BY TYPE

	                 type  count(*)
	0  Village Storef)GAy         1
	1        Village Stor         2
	2       Village Store         5
	ACTUAL OUTPUT ====

		
		SELECT TYPE,
		       n AS count___
		FROM
		  (SELECT TYPE,
		          COUNT() AS n
		   FROM
		     (SELECT number_of_product_category,
		             TYPE,
		             COUNT() AS n
		      FROM store
		      GROUP BY number_of_product_category,
		               TYPE)
		   GROUP BY TYPE)
		ORDER BY TYPE

	                 type  count___
	0        Village Stor         1
	1       Village Store         5
	2  Village Storef)GAy         1
Wrong output for fuzzied solution in instance spider/store_product/0022 (681)
	EXPECTED OUTPUT ====

		SELECT t3.District_name
		FROM store AS t1
		JOIN store_district AS t2 ON t1.store_id = t2.store_id
		JOIN district AS t3 ON t2.district_id = t3.district_id
		WHERE t1.Type = "City Mall" INTERSECT
		  SELECT t3.District_name
		  FROM store AS t1
		  JOIN store_district AS t2 ON t1.store_id = t2.store_id
		  JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.Type = "Village Store"

	              district_name
	0           Attock District
	1  Dera Ghazi Khan District
	ACTUAL OUTPUT ====

		
		SELECT `district_name_other` AS `district_name`
		FROM
		  (SELECT `LHS`.`store_id` AS `store_id`,
		          `LHS`.`store_name` AS `store_name`,
		          `LHS`.`type` AS `type`,
		          `LHS`.`area_size` AS `area_size`,
		          `LHS`.`number_of_product_category` AS `number_of_product_category`,
		          `LHS`.`ranking` AS `ranking`,
		          `LHS`.`district_id` AS `district_id`,
		          `LHS`.`district_name` AS `district_name`,
		          `LHS`.`headquartered_city` AS `headquartered_city`,
		          `LHS`.`city_population` AS `city_population`,
		          `LHS`.`city_area` AS `city_area`,
		          `RHS`.`store_id` AS `store_id_other`,
		          `RHS`.`store_name` AS `store_name_other`,
		          `RHS`.`area_size` AS `area_size_other`,
		          `RHS`.`number_of_product_category` AS `number_of_product_category_other`,
		          `RHS`.`district_id` AS `district_id_other`,
		          `RHS`.`district_name` AS `district_name_other`,
		          `RHS`.`headquartered_city` AS `headquartered_city_other`,
		          `RHS`.`city_population` AS `city_population_other`,
		          `RHS`.`city_area` AS `city_area_other`
		   FROM
		     (SELECT `LHS`.`store_id` AS `store_id`,
		             `LHS`.`store_name` AS `store_name`,
		             `LHS`.`type` AS `type`,
		             `LHS`.`area_size` AS `area_size`,
		             `LHS`.`number_of_product_category` AS `number_of_product_category`,
		             `LHS`.`ranking` AS `ranking`,
		             `LHS`.`district_id` AS `district_id`,
		             `LHS`.`district_name` AS `district_name`,
		             `LHS`.`headquartered_city` AS `headquartered_city`,
		             `LHS`.`city_population` AS `city_population`,
		             `LHS`.`city_area` AS `city_area`
		      FROM
		        (SELECT `LHS`.`store_id` AS `store_id`,
		                `LHS`.`store_name` AS `store_name`,
		                `LHS`.`type` AS `type`,
		                `LHS`.`area_size` AS `area_size`,
		                `LHS`.`number_of_product_category` AS `number_of_product_category`,
		                `LHS`.`ranking` AS `ranking`,
		                `LHS`.`district_id` AS `district_id`,
		                `LHS`.`district_name` AS `district_name`,
		                `LHS`.`headquartered_city` AS `headquartered_city`,
		                `LHS`.`city_population` AS `city_population`,
		                `LHS`.`city_area` AS `city_area`
		         FROM
		           (SELECT `LHS`.`store_id` AS `store_id`,
		                   `LHS`.`store_name` AS `store_name`,
		                   `LHS`.`type` AS `type`,
		                   `LHS`.`area_size` AS `area_size`,
		                   `LHS`.`number_of_product_category` AS `number_of_product_category`,
		                   `LHS`.`ranking` AS `ranking`,
		                   `RHS`.`district_id` AS `district_id`,
		                   `RHS`.`district_name` AS `district_name`,
		                   `RHS`.`headquartered_city` AS `headquartered_city`,
		                   `RHS`.`city_population` AS `city_population`,
		                   `RHS`.`city_area` AS `city_area`
		            FROM `store` AS `LHS`
		            CROSS JOIN `district` AS `RHS`) AS `LHS`
		         INNER JOIN `store_district` AS `RHS` ON (`LHS`.`store_id` = `RHS`.`store_id`
		                                                     AND `LHS`.`district_id` = `RHS`.`district_id`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `store`
		         WHERE (`type` != 'City Mall'
		                AND `type` = 'Village Store')) AS `RHS` ON (`LHS`.`store_id` = `RHS`.`store_id`
		                                                            AND `LHS`.`store_name` = `RHS`.`store_name`
		                                                            AND `LHS`.`type` = `RHS`.`type`
		                                                            AND `LHS`.`area_size` = `RHS`.`area_size`
		                                                            AND `LHS`.`number_of_product_category` = `RHS`.`number_of_product_category`
		                                                            AND `LHS`.`ranking` = `RHS`.`ranking`)) AS `LHS`
		   INNER JOIN
		     (SELECT `LHS`.`store_id` AS `store_id`,
		             `LHS`.`store_name` AS `store_name`,
		             `LHS`.`type` AS `type`,
		             `LHS`.`area_size` AS `area_size`,
		             `LHS`.`number_of_product_category` AS `number_of_product_category`,
		             `LHS`.`ranking` AS `ranking`,
		             `LHS`.`district_id` AS `district_id`,
		             `LHS`.`district_name` AS `district_name`,
		             `LHS`.`headquartered_city` AS `headquartered_city`,
		             `LHS`.`city_population` AS `city_population`,
		             `LHS`.`city_area` AS `city_area`
		      FROM
		        (SELECT `LHS`.`store_id` AS `store_id`,
		                `LHS`.`store_name` AS `store_name`,
		                `LHS`.`type` AS `type`,
		                `LHS`.`area_size` AS `area_size`,
		                `LHS`.`number_of_product_category` AS `number_of_product_category`,
		                `LHS`.`ranking` AS `ranking`,
		                `LHS`.`district_id` AS `district_id`,
		                `LHS`.`district_name` AS `district_name`,
		                `LHS`.`headquartered_city` AS `headquartered_city`,
		                `LHS`.`city_population` AS `city_population`,
		                `LHS`.`city_area` AS `city_area`
		         FROM
		           (SELECT `LHS`.`store_id` AS `store_id`,
		                   `LHS`.`store_name` AS `store_name`,
		                   `LHS`.`type` AS `type`,
		                   `LHS`.`area_size` AS `area_size`,
		                   `LHS`.`number_of_product_category` AS `number_of_product_category`,
		                   `LHS`.`ranking` AS `ranking`,
		                   `RHS`.`district_id` AS `district_id`,
		                   `RHS`.`district_name` AS `district_name`,
		                   `RHS`.`headquartered_city` AS `headquartered_city`,
		                   `RHS`.`city_population` AS `city_population`,
		                   `RHS`.`city_area` AS `city_area`
		            FROM `store` AS `LHS`
		            CROSS JOIN `district` AS `RHS`) AS `LHS`
		         INNER JOIN `store_district` AS `RHS` ON (`LHS`.`store_id` = `RHS`.`store_id`
		                                                     AND `LHS`.`district_id` = `RHS`.`district_id`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `store`
		         WHERE (`type` != 'City Mall'
		                AND `type` = 'Village Store')) AS RHS ON (LHS.store_id = RHS.store_id
		                                                          AND LHS.store_name = RHS.store_name
		                                                          AND LHS.type = RHS.type
		                                                          AND LHS.area_size = RHS.area_size
		                                                          AND LHS.number_of_product_category = RHS.number_of_product_category
		                                                          AND LHS.ranking = RHS.ranking)) AS RHS ON (LHS.store_id = RHS.ranking
		                                                                                                     AND LHS.type = RHS.type))
		ORDER BY district_name

	      district_name
	0   Attock District
	1  Bhakkar District
Wrong output for fuzzied solution in instance spider/store_product/0013 (682)
	EXPECTED OUTPUT ====

		SELECT t3.headquartered_city
		FROM store AS t1
		JOIN store_district AS t2 ON t1.store_id = t2.store_id
		JOIN district AS t3 ON t2.district_id = t3.district_id
		GROUP BY t3.headquartered_city
		ORDER BY count(*) DESC
		LIMIT 1

	     headquartered_city
	0  QVboXGujranwala City
	ACTUAL OUTPUT ====

		
		SELECT headquartered_city
		FROM
		  (SELECT store_id,
		          store_name,
		          TYPE,
		          area_size,
		          number_of_product_category,
		          ranking,
		          district_id,
		          district_name,
		          headquartered_city,
		          city_population,
		          city_area,
		          headquartered_city_other,
		          store_id AS n
		   FROM
		     (SELECT LHS.store_id AS store_id,
		             LHS.store_name AS store_name,
		             LHS.type AS TYPE,
		             LHS.area_size AS area_size,
		             LHS.number_of_product_category AS number_of_product_category,
		             LHS.ranking AS ranking,
		             LHS.district_id AS district_id,
		             LHS.district_name AS district_name,
		             LHS.headquartered_city AS headquartered_city,
		             LHS.city_population AS city_population,
		             LHS.city_area AS city_area,
		             RHS.headquartered_city AS headquartered_city_other
		      FROM
		        (SELECT LHS.store_id AS store_id,
		                LHS.store_name AS store_name,
		                LHS.type AS TYPE,
		                LHS.area_size AS area_size,
		                LHS.number_of_product_category AS number_of_product_category,
		                LHS.ranking AS ranking,
		                LHS.district_id AS district_id,
		                LHS.district_name AS district_name,
		                LHS.headquartered_city AS headquartered_city,
		                LHS.city_population AS city_population,
		                LHS.city_area AS city_area
		         FROM
		           (SELECT LHS.store_id AS store_id,
		                   LHS.store_name AS store_name,
		                   LHS.type AS TYPE,
		                   LHS.area_size AS area_size,
		                   LHS.number_of_product_category AS number_of_product_category,
		                   LHS.ranking AS ranking,
		                   RHS.district_id AS district_id,
		                   RHS.district_name AS district_name,
		                   RHS.headquartered_city AS headquartered_city,
		                   RHS.city_population AS city_population,
		                   RHS.city_area AS city_area
		            FROM store AS LHS
		            CROSS JOIN district AS RHS) AS LHS
		         INNER JOIN store_district AS RHS ON (LHS.store_id = RHS.store_id
		                                                 AND LHS.district_id = RHS.district_id)) AS LHS
		      INNER JOIN
		        (SELECT headquartered_city,
		                store_id,
		                COUNT() AS n
		         FROM
		           (SELECT LHS.store_id AS store_id,
		                   LHS.store_name AS store_name,
		                   LHS.type AS TYPE,
		                   LHS.area_size AS area_size,
		                   LHS.number_of_product_category AS number_of_product_category,
		                   LHS.ranking AS ranking,
		                   LHS.district_id AS district_id,
		                   LHS.district_name AS district_name,
		                   LHS.headquartered_city AS headquartered_city,
		                   LHS.city_population AS city_population,
		                   LHS.city_area AS city_area
		            FROM
		              (SELECT LHS.store_id AS store_id,
		                      LHS.store_name AS store_name,
		                      LHS.type AS TYPE,
		                      LHS.area_size AS area_size,
		                      LHS.number_of_product_category AS number_of_product_category,
		                      LHS.ranking AS ranking,
		                      RHS.district_id AS district_id,
		                      RHS.district_name AS district_name,
		                      RHS.headquartered_city AS headquartered_city,
		                      RHS.city_population AS city_population,
		                      RHS.city_area AS city_area
		               FROM store AS LHS
		               CROSS JOIN district AS RHS) AS LHS
		            INNER JOIN store_district AS RHS ON (LHS.store_id = RHS.store_id
		                                                    AND LHS.district_id = RHS.district_id))
		         GROUP BY headquartered_city,
		                  store_id) AS RHS ON (LHS.store_id = RHS.n
		                                       AND LHS.ranking = RHS.store_id)))
		ORDER BY headquartered_city

	Empty DataFrame
	Columns: [headquartered_city]
	Index: []
Wrong output for fuzzied solution in instance spider/store_product/0004 (684)
	EXPECTED OUTPUT ====

		SELECT district_name
		FROM district
		WHERE city_area > 10
		  OR City_Population > 100000

	                     district_name
	0    OaDera Ghazi Khan DistrictUVU
	1                   Attock Distric
	2                  Attock District
	3         Bhj1IGujranwala District
	4              Faisalabad District
	5              Faisalabad District
	6              Gujranwala District
	7              Gujranwala District
	8         Gujranwala DistrictNwq O
	9                    Kasur Distric
	10        QfkqrGujranwala District
	11                   asur District
	ACTUAL OUTPUT ====

		
		SELECT district_name
		FROM district
		WHERE (city_population > 10.0
		       OR city_area = 100000.0)
		ORDER BY district_name

	                     district_name
	0    OaDera Ghazi Khan DistrictUVU
	1                   Attock Distric
	2                  Attock District
	3         Bhj1IGujranwala District
	4              Faisalabad District
	5              Faisalabad District
	6              Gujranwala District
	7              Gujranwala District
	8              Gujranwala District
	9         Gujranwala DistrictNwq O
	10                   Kasur Distric
	11        QfkqrGujranwala District
	12                   asur District
Wrong output for fuzzied solution in instance spider/store_product/0012 (685)
	EXPECTED OUTPUT ====

		SELECT t3.headquartered_city,
		       count(*)
		FROM store AS t1
		JOIN store_district AS t2 ON t1.store_id = t2.store_id
		JOIN district AS t3 ON t2.district_id = t3.district_id
		GROUP BY t3.headquartered_city

	          headquartered_city  count(*)
	0            Faisalabad City         1
	1                 Gujrat Cit         1
	2  dxa2IDera Ghazi Khan City         1
	3          gISGujrat City(zA         1
	4       GtXxVFaisalabad City         2
	5       Dera Ghazi Khan City         3
	6                Gujrat City         6
	ACTUAL OUTPUT ====

		
		SELECT headquartered_city,
		       n AS count___
		FROM
		  (SELECT city_population,
		          headquartered_city,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.store_id AS store_id,
		             LHS.store_name AS store_name,
		             LHS.type AS TYPE,
		             LHS.area_size AS area_size,
		             LHS.number_of_product_category AS number_of_product_category,
		             LHS.ranking AS ranking,
		             LHS.district_id AS district_id,
		             LHS.district_name AS district_name,
		             LHS.headquartered_city AS headquartered_city,
		             LHS.city_population AS city_population,
		             LHS.city_area AS city_area
		      FROM
		        (SELECT LHS.store_id AS store_id,
		                LHS.store_name AS store_name,
		                LHS.type AS TYPE,
		                LHS.area_size AS area_size,
		                LHS.number_of_product_category AS number_of_product_category,
		                LHS.ranking AS ranking,
		                RHS.district_id AS district_id,
		                RHS.district_name AS district_name,
		                RHS.headquartered_city AS headquartered_city,
		                RHS.city_population AS city_population,
		                RHS.city_area AS city_area
		         FROM store AS LHS
		         CROSS JOIN district AS RHS) AS LHS
		      INNER JOIN store_district AS RHS ON (LHS.store_id = RHS.store_id
		                                              AND LHS.district_id = RHS.district_id))
		   GROUP BY city_population,
		            headquartered_city)
		ORDER BY headquartered_city

	          headquartered_city  count___
	0            Faisalabad City         1
	1                 Gujrat Cit         1
	2                Gujrat City         1
	3                Gujrat City         1
	4  dxa2IDera Ghazi Khan City         1
	5          gISGujrat City(zA         1
	6       GtXxVFaisalabad City         2
	7       Dera Ghazi Khan City         3
	8                Gujrat City         4
Wrong output for fuzzied solution in instance spider/store_product/0016 (688)
	EXPECTED OUTPUT ====

		SELECT product
		FROM product
		WHERE max_page_size = "A4"
		  AND pages_per_minute_color < 5

	Empty DataFrame
	Columns: [product]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `product`
		FROM
		  (SELECT `LHS`.`product_id` AS `product_id`,
		          `LHS`.`product` AS `product`,
		          `LHS`.`dimensions` AS `dimensions`,
		          `LHS`.`dpi` AS `dpi`,
		          `LHS`.`pages_per_minute_color` AS `pages_per_minute_color`,
		          `LHS`.`max_page_size` AS `max_page_size`,
		          `LHS`.`interface` AS `interface`
		   FROM `product` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `product`
		      WHERE (`max_page_size` = 'A4'
		             AND pages_per_minute_color <= 5.0)) AS RHS ON (LHS.product_id = RHS.product_id
		                                                            AND LHS.product = RHS.product
		                                                            AND LHS.dimensions = RHS.dimensions
		                                                            AND LHS.dpi = RHS.dpi
		                                                            AND LHS.pages_per_minute_color = RHS.pages_per_minute_color
		                                                            AND LHS.max_page_size = RHS.max_page_size
		                                                            AND LHS.interface = RHS.interface))
		ORDER BY product

	                   product
	0  mI(u GTLPGxBnuGpzfr5oFw
No solution for instance spider/store_product/0018 (689)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Wrong output for fuzzied solution in instance spider/store_product/0019 (691)
	EXPECTED OUTPUT ====

		SELECT max_page_size
		FROM product
		GROUP BY max_page_size
		ORDER BY count(*) DESC
		LIMIT 1

	  max_page_size
	0            A4
	ACTUAL OUTPUT ====

		
		SELECT max_page_size
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT dimensions,
		                max_page_size,
		                COUNT() AS n
		         FROM product
		         GROUP BY dimensions,
		                  max_page_size)
		      ORDER BY max_page_size DESC)
		   LIMIT 1)

	  max_page_size
	0       OtJiUA4
Wrong output for fuzzied solution in instance spider/store_product/0007 (692)
	EXPECTED OUTPUT ====

		SELECT sum(city_population)
		FROM district
		ORDER BY city_area DESC
		LIMIT 3

	   sum(city_population)
	0          1.950575e+09
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT SUM(city_population) OVER () AS sum_city_population_
		FROM district
		WHERE (city_population > 3.0)
		ORDER BY sum_city_population_

	   sum_city_population_
	0          8.975946e+09
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Wrong output for fuzzied solution in instance spider/store_product/0001 (694)
	EXPECTED OUTPUT ====

		SELECT DISTINCT District_name
		FROM district
		ORDER BY city_area DESC

	            district_name
	0   3qSJhelum Districtofg
	1          Attock Distric
	2         Attock District
	3    Attock DistricthIFvg
	4         Bhakkar Distric
	5   Bhakkar District6luW7
	6    DFC6CAttock District
	7          Jhang District
	8     Jhang DistricthmUUm
	9         Jhelum District
	10   UkgIrAttock District
	11   Yng1VJhelum District
	12   dzWJhang Districtl62
	ACTUAL OUTPUT ====

		
		SELECT district_name
		FROM district
		ORDER BY district_name

	            district_name
	0   3qSJhelum Districtofg
	1          Attock Distric
	2         Attock District
	3         Attock District
	4         Attock District
	5    Attock DistricthIFvg
	6         Bhakkar Distric
	7   Bhakkar District6luW7
	8    DFC6CAttock District
	9          Jhang District
	10         Jhang District
	11    Jhang DistricthmUUm
	12        Jhelum District
	13   UkgIrAttock District
	14   Yng1VJhelum District
	15   dzWJhang Districtl62
Wrong output for fuzzied solution in instance spider/store_product/0014 (695)
	EXPECTED OUTPUT ====

		SELECT avg(pages_per_minute_color)
		FROM product

	   avg(pages_per_minute_color)
	0                    13.997778
	ACTUAL OUTPUT ====

		
		SELECT meanpages_per_minute_color AS avg_pages_per_minute_color_
		FROM
		  (SELECT interface,
		          AVG(pages_per_minute_color) AS meanpages_per_minute_color
		   FROM product
		   GROUP BY interface)
		ORDER BY avg_pages_per_minute_color_

	   avg_pages_per_minute_color_
	0                        9.992
	1                       10.010
	2                       27.990
	3                       28.010
Wrong output for fuzzied solution in instance spider/department_management/0008 (699)
	EXPECTED OUTPUT ====

		SELECT born_state
		FROM head
		GROUP BY born_state
		HAVING count(*) >= 3

	  born_state
	0    Alabama
	1   Delaware
	ACTUAL OUTPUT ====

		
		SELECT born_state
		FROM
		  (SELECT born_state
		   FROM
		     (SELECT born_state,
		             COUNT() AS n
		      FROM head
		      GROUP BY born_state) INTERSECT SELECT born_state
		   FROM
		     (SELECT born_state,
		             COUNT() AS n
		      FROM head
		      GROUP BY born_state)
		   WHERE (n > 3))
		ORDER BY born_state

	  born_state
	0    Alabama
Wrong output for fuzzied solution in instance spider/department_management/0013 (701)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.age
		FROM management AS T2
		JOIN head AS T1 ON T1.head_id = T2.head_id
		WHERE T2.temporary_acting = 'Yes'

	     age
	0  49.99
	1  50.00
	ACTUAL OUTPUT ====

		
		SELECT `age`
		FROM
		  (SELECT `LHS`.`head_id` AS `head_id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`born_state` AS `born_state`,
		          `LHS`.`age` AS `age`,
		          `RHS`.`department_id` AS `department_id`,
		          `RHS`.`temporary_acting` AS `temporary_acting`
		   FROM `head` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `management`
		      WHERE (`temporary_acting` = 'Yes')) AS RHS ON (LHS.head_id = RHS.head_id))
		ORDER BY age

	     age
	0  49.99
	1  49.99
	2  50.00
Error while executing solution for instance spider/department_management/0012 (704)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT department_id) OVER () AS count___
FROM
  (SELECT *
   FROM department AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM management AS RHS
        WHERE (LHS.department_id = RHS.department_id) ))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/department_management/0015 (705)
	EXPECTED OUTPUT ====

		SELECT T1.department_id,
		       T1.name,
		       count(*)
		FROM management AS T2
		JOIN department AS T1 ON T1.department_id = T2.department_id
		GROUP BY T1.department_id
		HAVING count(*) > 1

	   department_id              name  count(*)
	0              7         Education         2
	1             10    Transportation         2
	2             13         Education         2
	3              9  Veterans Affairs         4
	4             11    Transportation         4
	ACTUAL OUTPUT ====

		
		SELECT department_id,
		       name,
		       ranking AS count___
		FROM
		  (SELECT LHS.department_id AS department_id,
		          LHS.name AS name,
		          LHS.creation AS creation,
		          LHS.ranking AS ranking,
		          LHS.budget_in_billions AS budget_in_billions,
		          LHS.num_employees AS num_employees
		   FROM department AS LHS
		   INNER JOIN
		     (SELECT department_id,
		             COUNT() AS n
		      FROM management
		      GROUP BY department_id) AS RHS ON (LHS.department_id = RHS.department_id
		                                         AND LHS.ranking = RHS.n))
		ORDER BY department_id

	   department_id       name  count___
	0             13  Education         2
Wrong output for base solution in instance spider/department_management/0005 (706)
	EXPECTED OUTPUT ====

	   avg_num_employees_
	0       105468.166667
	ACTUAL OUTPUT ====

		SELECT avg(num_employees)
		FROM department
		WHERE ranking BETWEEN 10 AND 15

	   avg(num_employees)
	0       105468.166667
Wrong output for ground truth in instance spider/department_management/0005 (706)
No solution for instance spider/department_management/0016 (707)
Wrong output for fuzzied solution in instance spider/department_management/0007 (708)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.creation
		FROM department AS T1
		JOIN management AS T2 ON T1.department_id = T2.department_id
		JOIN head AS T3 ON T2.head_id = T3.head_id
		WHERE T3.born_state = 'Alabama'

	     creation
	0  (VG1990FiH
	1        1903
	2        1904
	3        1988
	4  M 61989GSQ
	5  RKi1902Cvs
	6  aUV1789UkX
	ACTUAL OUTPUT ====

		
		SELECT `creation`
		FROM
		  (SELECT `LHS`.`department_id` AS `department_id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`creation` AS `creation`,
		          `LHS`.`ranking` AS `ranking`,
		          `LHS`.`budget_in_billions` AS `budget_in_billions`,
		          `LHS`.`num_employees` AS `num_employees`,
		          `RHS`.`head_id` AS `head_id`,
		          `RHS`.`temporary_acting` AS `temporary_acting`
		   FROM `department` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `management` AS `LHS`
		      WHERE EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM `head`
		              WHERE (`born_state` = 'Alabama')) AS RHS
		           WHERE (LHS.head_id = RHS.head_id) )) AS RHS ON (LHS.department_id = RHS.department_id))
		ORDER BY creation

	      creation
	0   (VG1990FiH
	1         1903
	2         1903
	3         1903
	4         1904
	5         1904
	6         1904
	7         1904
	8         1988
	9         1988
	10        1988
	11        1988
	12        1988
	13  M 61989GSQ
	14  M 61989GSQ
	15  RKi1902Cvs
	16  aUV1789UkX
	17  aUV1789UkX
Wrong output for fuzzied solution in instance spider/department_management/0001 (709)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM head
		WHERE age > 56

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM head
		      WHERE (age <= 56.0)))
		ORDER BY count___

	   count___
	0         7
Wrong output for fuzzied solution in instance spider/department_management/0014 (710)
	EXPECTED OUTPUT ====

		SELECT T3.born_state
		FROM department AS T1
		JOIN management AS T2 ON T1.department_id = T2.department_id
		JOIN head AS T3 ON T2.head_id = T3.head_id
		WHERE T1.name = 'Treasury' INTERSECT
		  SELECT T3.born_state
		  FROM department AS T1
		  JOIN management AS T2 ON T1.department_id = T2.department_id
		  JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Homeland Security'

	Empty DataFrame
	Columns: [born_state]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `born_state`
		FROM
		  (SELECT `LHS`.`department_id` AS `department_id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`creation` AS `creation`,
		          `LHS`.`ranking` AS `ranking`,
		          `LHS`.`budget_in_billions` AS `budget_in_billions`,
		          `LHS`.`num_employees` AS `num_employees`,
		          `RHS`.`name` AS `name_other`,
		          `RHS`.`born_state` AS `born_state`,
		          `RHS`.`age` AS `age`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM `department`
		         WHERE (`name` = 'Treasury'
		                OR `name` = 'Homeland Security')) AS LHS
		      WHERE EXISTS
		          (SELECT 1
		           FROM management AS RHS
		           WHERE (LHS.department_id = RHS.department_id) )) AS LHS
		   INNER JOIN head AS RHS ON (LHS.ranking = RHS.head_id))
		ORDER BY born_state

	         born_state
	0         Californi
	1  vDECaliforniaK6X
Wrong output for fuzzied solution in instance spider/department_management/0009 (711)
	EXPECTED OUTPUT ====

		SELECT creation
		FROM department
		GROUP BY creation
		ORDER BY count(*) DESC
		LIMIT 1

	  creation
	0     1953
	ACTUAL OUTPUT ====

		
		SELECT creation
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT creation,
		                department_id,
		                COUNT() AS n
		         FROM department
		         GROUP BY creation,
		                  department_id)
		      ORDER BY n DESC)
		   LIMIT 1)

	  creation
	0     1788
Error while executing solution for instance spider/department_management/0011 (712)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT temporary_acting) OVER () AS count_distinct_temporary_acting_
FROM management
ORDER BY count_distinct_temporary_acting_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Error while executing solution for instance spider/small_bank_1/0008 (716)

The column label 'balance' is not unique.
Error while checking ground truth in instance spider/small_bank_1/0008 (716)
Wrong output for fuzzied solution in instance spider/small_bank_1/0003 (717)
	EXPECTED OUTPUT ====

		SELECT sum(balance)
		FROM checking

	   sum(balance)
	0       17014.0
	ACTUAL OUTPUT ====

		
		SELECT sumbalance AS sum_balance_
		FROM
		  (SELECT SUM(balance) AS sumbalance
		   FROM
		     (SELECT balance,
		             custid,
		             SUM(balance) AS sumbalance
		      FROM checking
		      GROUP BY balance,
		               custid))
		ORDER BY sum_balance_

	   sum_balance_
	0       17014.0
Error while executing solution for instance spider/small_bank_1/0022 (718)

The column label 'balance' is not unique.
Error while checking ground truth in instance spider/small_bank_1/0022 (718)
No solution for instance spider/small_bank_1/0013 (719)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Wrong output for fuzzied solution in instance spider/small_bank_1/0004 (721)
	EXPECTED OUTPUT ====

		SELECT avg(balance)
		FROM checking

	   avg(balance)
	0        4253.5
	ACTUAL OUTPUT ====

		
		SELECT meanbalance AS avg_balance_
		FROM
		  (SELECT AVG(balance) AS meanbalance
		   FROM
		     (SELECT balance,
		             custid,
		             AVG(balance) AS meanbalance
		      FROM checking
		      GROUP BY balance,
		               custid))
		ORDER BY avg_balance_

	   avg_balance_
	0        4253.5
Wrong output for fuzzied solution in instance spider/small_bank_1/0012 (722)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM accounts AS T1
		JOIN checking AS T2 ON T1.custid = T2.custid
		JOIN savings AS T3 ON T1.custid = T3.custid
		ORDER BY T2.balance + T3.balance
		LIMIT 1

	       name
	0  O'mahony
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.custid AS custid,
		                LHS.balance AS balance,
		                RHS.name AS name
		         FROM
		           (SELECT *
		            FROM savings AS LHS
		            WHERE NOT EXISTS
		                (SELECT 1
		                 FROM checking AS RHS
		                 WHERE (LHS.balance = RHS.balance
		                        AND LHS.custid = RHS.custid) )) AS LHS
		         LEFT JOIN accounts AS RHS ON (LHS.custid = RHS.custid))
		      ORDER BY custid DESC)
		   LIMIT 1)

	   name
	0  Brow
Wrong output for fuzzied solution in instance spider/small_bank_1/0015 (723)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.name
		FROM accounts AS T1
		JOIN checking AS T2 ON T1.custid = T2.custid
		GROUP BY T1.name

	   count(*)            name
	0         1            Brow
	1         1      BrownVl3nu
	2         1  NzFO'mahonyUkJ
	3         1             ang
	4         1            rown
	5         2            Wang
	6         3        O'mahony
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       name
		FROM
		  (SELECT LHS.custid AS custid,
		          LHS.n AS n,
		          RHS.name AS name
		   FROM
		     (SELECT custid,
		             COUNT() AS n
		      FROM checking
		      GROUP BY custid) AS LHS
		   INNER JOIN accounts AS RHS ON (LHS.custid = RHS.custid))
		ORDER BY count___

	   count___            name
	0         1            Brow
	1         1      BrownVl3nu
	2         1  NzFO'mahonyUkJ
	3         1        O'mahony
	4         1        O'mahony
	5         1        O'mahony
	6         1            Wang
	7         1            Wang
	8         1             ang
	9         1            rown
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Wrong output for fuzzied solution in instance spider/small_bank_1/0016 (725)
	EXPECTED OUTPUT ====

		SELECT sum(T2.balance),
		       T1.name
		FROM accounts AS T1
		JOIN savings AS T2 ON T1.custid = T2.custid
		GROUP BY T1.name

	   sum(t2.balance)            name
	0        230000.00            Brow
	1           240.01      BrownVl3nu
	2        229999.99  NzFO'mahonyUkJ
	3        460240.02        O'mahony
	4        459999.99            Wang
	5        230000.00             ang
	6        230000.01            rown
	ACTUAL OUTPUT ====

		
		SELECT balance AS sum_t2_balance_,
		       name
		FROM
		  (SELECT LHS.balance AS balance,
		          LHS.custid AS custid,
		          LHS.sumbalance AS sumbalance,
		          RHS.name AS name
		   FROM
		     (SELECT balance,
		             custid,
		             SUM(balance) AS sumbalance
		      FROM savings
		      GROUP BY balance,
		               custid) AS LHS
		   LEFT JOIN accounts AS RHS ON (LHS.custid = RHS.custid))
		ORDER BY sum_t2_balance_

	   sum_t2_balance_            name
	0        230000.00            Brow
	1           240.01      BrownVl3nu
	2        229999.99  NzFO'mahonyUkJ
	3           240.00        O'mahony
	4        230000.00        O'mahony
	5        230000.02        O'mahony
	6        229999.98            Wang
	7        230000.01            Wang
	8        230000.00             ang
	9        230000.01            rown
No solution for instance spider/small_bank_1/0018 (726)
Wrong output for fuzzied solution in instance spider/small_bank_1/0020 (727)
	EXPECTED OUTPUT ====

		SELECT T2.balance,
		       T1.name
		FROM accounts AS T1
		JOIN checking AS T2 ON T1.custid = T2.custid
		JOIN savings AS T3 ON T1.custid = T3.custid
		ORDER BY T3.balance
		LIMIT 1

	   balance      name
	0     77.0  O'mahony
	ACTUAL OUTPUT ====

		
		SELECT balance,
		       name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.custid AS custid,
		                LHS.name AS name,
		                RHS.balance AS balance
		         FROM
		           (SELECT *
		            FROM accounts AS LHS
		            WHERE EXISTS
		                (SELECT 1
		                 FROM savings AS RHS
		                 WHERE (LHS.custid = RHS.custid) )) AS LHS
		         LEFT JOIN checking AS RHS ON (LHS.custid = RHS.custid))
		      ORDER BY name DESC)
		   LIMIT 1)

	   balance  name
	0     77.0  rown
No solution for instance spider/small_bank_1/0019 (728)
No solution for instance spider/small_bank_1/0007 (729)
No solution for instance spider/small_bank_1/0024 (730)
Error while executing solution for instance spider/small_bank_1/0021 (731)

The column label 'balance' is not unique.
Error while checking ground truth in instance spider/small_bank_1/0021 (731)
Wrong output for fuzzied solution in instance spider/small_bank_1/0023 (732)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM accounts AS T1
		JOIN checking AS T2 ON T1.custid = T2.custid
		JOIN savings AS T3 ON T1.custid = T3.custid
		WHERE T2.balance > T3.balance

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM accounts AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT LHS.custid AS custid,
		                     LHS.balance AS balance,
		                     RHS.custid AS custid_other,
		                     RHS.balance AS balance_other,
		                     RHS.name AS name
		              FROM savings AS LHS
		              CROSS JOIN
		                (SELECT LHS.custid AS custid,
		                        LHS.balance AS balance,
		                        RHS.name AS name
		                 FROM checking AS LHS
		                 LEFT JOIN accounts AS RHS ON (LHS.custid = RHS.custid)) AS RHS)
		           WHERE (balance <= balance_other)) AS RHS
		        WHERE (LHS.custid = RHS.custid
		               AND LHS.name = RHS.name) ))
		ORDER BY name

	       name
	0  O'mahony
Wrong output for fuzzied solution in instance spider/small_bank_1/0001 (733)
	EXPECTED OUTPUT ====

		SELECT sum(T2.balance)
		FROM accounts AS T1
		JOIN savings AS T2 ON T1.custid = T2.custid
		WHERE T1.name != 'Brown'

	   sum(t2.balance)
	0        310299.98
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT SUM(`balance`) OVER () AS `sum_t2_balance_`
		FROM
		  (SELECT *
		   FROM `savings` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `accounts`
		           WHERE (`name` = 'Brown')) AS RHS
		        WHERE (LHS.custid = RHS.custid) ))
		ORDER BY sum_t2_balance_

	   sum_t2_balance_
	0        310299.98
Wrong output for fuzzied solution in instance spider/small_bank_1/0014 (734)
	EXPECTED OUTPUT ====

		SELECT T1.name,
		       T2.balance
		FROM accounts AS T1
		JOIN checking AS T2 ON T1.custid = T2.custid
		JOIN savings AS T3 ON T1.custid = T3.custid
		ORDER BY T3.balance
		LIMIT 1

	       name  balance
	0  O'mahony     77.0
	ACTUAL OUTPUT ====

		
		SELECT name,
		       balance
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.custid AS custid,
		                LHS.name AS name,
		                LHS.balance AS balance
		         FROM
		           (SELECT LHS.custid AS custid,
		                   LHS.name AS name,
		                   RHS.balance AS balance
		            FROM accounts AS LHS
		            INNER JOIN checking AS RHS ON (LHS.custid = RHS.custid)) AS LHS
		         INNER JOIN
		           (SELECT custid
		            FROM accounts INTERSECT SELECT custid
		            FROM savings) AS RHS ON (LHS.custid = RHS.custid))
		      ORDER BY name DESC)
		   LIMIT 1)

	   name  balance
	0  rown     77.0
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
No solution for instance spider/small_bank_1/0010 (738)
Wrong output for fuzzied solution in instance spider/browser_web/0012 (746)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM web_client_accelerator
		WHERE id NOT IN
		    (SELECT accelerator_id
		     FROM accelerator_compatible_browser);

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT operating_system
		      FROM
		        (SELECT LHS.id AS id,
		                LHS.name AS name,
		                LHS.operating_system AS operating_system,
		                LHS.client AS client,
		                LHS.connection AS CONNECTION,
		                RHS.accelerator_id AS accelerator_id,
		                RHS.browser_id AS browser_id,
		                RHS.compatible_since_year AS compatible_since_year
		         FROM web_client_accelerator AS LHS
		         CROSS JOIN accelerator_compatible_browser AS RHS) INTERSECT SELECT operating_system
		      FROM
		        (SELECT LHS.id AS id,
		                LHS.name AS name,
		                LHS.operating_system AS operating_system,
		                LHS.client AS client,
		                LHS.connection AS CONNECTION,
		                RHS.accelerator_id AS accelerator_id,
		                RHS.browser_id AS browser_id,
		                RHS.compatible_since_year AS compatible_since_year
		         FROM web_client_accelerator AS LHS
		         CROSS JOIN accelerator_compatible_browser AS RHS)))
		ORDER BY count___

	   count___
	0        10
No solution for instance spider/browser_web/0015 (747)
No solution for instance spider/browser_web/0016 (749)
Error while executing solution for instance spider/browser_web/0018 (750)

The column label 'name' is not unique.
Error while checking ground truth in instance spider/browser_web/0018 (750)
Wrong output for fuzzied solution in instance spider/browser_web/0007 (751)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM browser AS T1
		JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id
		JOIN web_client_accelerator AS T3 ON T2.accelerator_id = T3.id
		WHERE T3.name = 'CProxy'
		  AND T2.compatible_since_year > 1998

	          name
	0  B4HOperaQ(o
	1  FFhwSSafari
	2         Oper
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM `browser` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT `id`,
		                     `name`,
		                     `operating_system`,
		                     `client`,
		                     `connection`,
		                     `accelerator_id`,
		                     `compatible_since_year`,
		                     `id` AS `browser_id`
		              FROM
		                (SELECT `LHS`.`id` AS `id`,
		                        `LHS`.`name` AS `name`,
		                        `LHS`.`operating_system` AS `operating_system`,
		                        `LHS`.`client` AS `client`,
		                        `LHS`.`connection` AS `connection`,
		                        `RHS`.`accelerator_id` AS `accelerator_id`,
		                        `RHS`.`compatible_since_year` AS `compatible_since_year`
		                 FROM `web_client_accelerator` AS `LHS`
		                 INNER JOIN `accelerator_compatible_browser` AS `RHS` ON (`LHS`.`id` = `RHS`.`browser_id`)))
		           WHERE (`name` = 'CProxy'
		                  OR compatible_since_year <= 1998)) AS RHS
		        WHERE (LHS.id = RHS.id) ))
		ORDER BY name

	          name
	0  B4HOperaQ(o
	1  FFhwSSafari
	2   p2lydOpera
Wrong output for fuzzied solution in instance spider/browser_web/0001 (752)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM browser
		WHERE market_share >= 5

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM browser
		WHERE (market_share > 5.0)
		ORDER BY count___

	   count___
	0         3
Wrong output for fuzzied solution in instance spider/browser_web/0014 (753)
	EXPECTED OUTPUT ====

		SELECT T3.name
		FROM web_client_accelerator AS T1
		JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id
		JOIN browser AS T3 ON T2.browser_id = T3.id
		WHERE T1.name = 'CACHEbox' INTERSECT
		  SELECT T3.name
		  FROM web_client_accelerator AS T1
		  JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id
		  JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'Fasterfox'

	           name
	0         Opera
	1         Safar
	2  oBkSafarifba
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`market_share` AS `market_share`,
		          `RHS`.`id` AS `id_other`,
		          `RHS`.`name` AS `name_other`,
		          `RHS`.`operating_system` AS `operating_system`,
		          `RHS`.`client` AS `client`,
		          `RHS`.`connection` AS `connection`,
		          `RHS`.`compatible_since_year` AS `compatible_since_year`,
		          `RHS`.`accelerator_id` AS `accelerator_id`
		   FROM `browser` AS `LHS`
		   INNER JOIN
		     (SELECT `id`,
		             `name`,
		             `operating_system`,
		             `client`,
		             `connection`,
		             `browser_id`,
		             `compatible_since_year`,
		             `id` AS `accelerator_id`
		      FROM
		        (SELECT `LHS`.`id` AS `id`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`operating_system` AS `operating_system`,
		                `LHS`.`client` AS `client`,
		                `LHS`.`connection` AS `connection`,
		                `RHS`.`browser_id` AS `browser_id`,
		                `RHS`.`compatible_since_year` AS `compatible_since_year`
		         FROM
		           (SELECT *
		            FROM `web_client_accelerator`
		            WHERE (`name` = 'CACHEbox'
		                   AND `name` != 'Fasterfox')) AS LHS
		         INNER JOIN accelerator_compatible_browser AS RHS ON (LHS.id = RHS.accelerator_id))) AS RHS ON (LHS.id = RHS.browser_id))
		ORDER BY name

	           name
	0         Opera
	1         Opera
	2         Safar
	3  oBkSafarifba
Wrong output for fuzzied solution in instance spider/browser_web/0009 (754)
	EXPECTED OUTPUT ====

		SELECT T1.id,
		       T1.name
		FROM browser AS T1
		JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id
		GROUP BY T1.id
		ORDER BY count(*) DESC
		LIMIT 1

	   id        name
	0   3  nbhs Opera
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT id,
		                name
		FROM
		  (SELECT id,
		          name,
		          market_share,
		          id AS n,
		          compatible_since_year
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.name AS name,
		             LHS.market_share AS market_share,
		             LHS.n AS n,
		             RHS.compatible_since_year AS compatible_since_year
		      FROM
		        (SELECT id,
		                name,
		                market_share,
		                COUNT(*) OVER () AS n
		         FROM browser) AS LHS
		      INNER JOIN
		        (SELECT browser_id,
		                compatible_since_year,
		                COUNT() AS n
		         FROM accelerator_compatible_browser
		         GROUP BY browser_id,
		                  compatible_since_year) AS RHS ON (LHS.id = RHS.n
		                                                    AND LHS.n = RHS.browser_id)))
		ORDER BY id

	Empty DataFrame
	Columns: [id, name]
	Index: []
Error while executing solution for instance spider/browser_web/0011 (755)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT client) OVER () AS count_distinct_client_
FROM
  (SELECT client,
          CONNECTION,
          COUNT() AS n
   FROM web_client_accelerator
   GROUP BY client,
            CONNECTION)
ORDER BY count_distinct_client_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/browser_web/0010 (756)
Wrong output for fuzzied solution in instance spider/customer_deliveries/0002 (757)
	EXPECTED OUTPUT ====

		SELECT t1.product_name,
		       t1.product_price
		FROM products AS t1
		JOIN regular_order_products AS t2 ON t1.product_id = t2.product_id
		GROUP BY t2.product_id
		ORDER BY count(*) DESC
		LIMIT 1

	  product_name  product_price
	0        books         7111.7
	ACTUAL OUTPUT ====

		
		SELECT product_name,
		       product_price
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT product_name,
		                product_price,
		                COUNT() AS n
		         FROM
		           (SELECT LHS.regular_order_id AS regular_order_id,
		                   LHS.product_id AS product_id,
		                   RHS.product_name AS product_name,
		                   RHS.product_price AS product_price,
		                   RHS.product_description AS product_description
		            FROM regular_order_products AS LHS
		            INNER JOIN products AS RHS ON (LHS.product_id = RHS.product_id))
		         GROUP BY product_name,
		                  product_price)
		      ORDER BY product_name)
		   LIMIT 1)

	  product_name  product_price
	0  SogbooksXCu        7111.68
Wrong output for fuzzied solution in instance spider/customer_deliveries/0013 (760)
	EXPECTED OUTPUT ====

		SELECT payment_method
		FROM Customers
		GROUP BY payment_method
		ORDER BY count(*) DESC
		LIMIT 1

	  payment_method
	0       Discover
	ACTUAL OUTPUT ====

		
		SELECT payment_method
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT customer_email,
		                payment_method,
		                COUNT() AS n
		         FROM customers
		         GROUP BY customer_email,
		                  payment_method)
		      ORDER BY payment_method DESC)
		   LIMIT 1)

	  payment_method
	0      zING4Visa
Wrong output for fuzzied solution in instance spider/customer_deliveries/0015 (764)
	EXPECTED OUTPUT ====

		SELECT t1.route_name
		FROM Delivery_Routes AS t1
		JOIN Delivery_Route_Locations AS t2 ON t1.route_id = t2.route_id
		GROUP BY t1.route_id
		ORDER BY count(*) DESC
		LIMIT 1

	                  route_name
	0  uel, Armstrong and Senger
	ACTUAL OUTPUT ====

		
		SELECT route_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.location_code AS location_code,
		                LHS.route_id AS route_id,
		                LHS.location_address_id AS location_address_id,
		                LHS.location_name AS location_name,
		                RHS.route_name AS route_name,
		                RHS.n AS n
		         FROM delivery_route_locations AS LHS
		         INNER JOIN
		           (SELECT route_id,
		                   route_name,
		                   COUNT() AS n
		            FROM delivery_routes
		            GROUP BY route_id,
		                     route_name) AS RHS ON (LHS.route_id = RHS.route_id))
		      ORDER BY n DESC)
		   LIMIT 1)

	                        route_name
	0  Huel, Armstrong and Senger2RRj0
Wrong output for fuzzied solution in instance spider/customer_deliveries/0005 (765)
	EXPECTED OUTPUT ====

		SELECT truck_details
		FROM trucks
		ORDER BY truck_licence_number

	   truck_details
	0            Bud
	1         Joanny
	2         Joanny
	3         Joanny
	4            Kay
	5           Kaya
	6           Kaya
	7      KayajfNTN
	8        Laverna
	9     XIfKayaByM
	10           aya
	11  ukHZzLaverna
	ACTUAL OUTPUT ====

		
		SELECT truck_details
		FROM
		  (SELECT truck_details
		   FROM trucks INTERSECT SELECT truck_details
		   FROM trucks)
		ORDER BY truck_details

	  truck_details
	0           Bud
	1        Joanny
	2           Kay
	3          Kaya
	4     KayajfNTN
	5       Laverna
	6    XIfKayaByM
	7           aya
	8  ukHZzLaverna
Wrong output for fuzzied solution in instance spider/customer_deliveries/0016 (766)
	EXPECTED OUTPUT ====

		SELECT t2.state_province_county,
		       count(*)
		FROM customer_addresses AS t1
		JOIN addresses AS t2 ON t1.address_id = t2.address_id
		GROUP BY t2.state_province_county

	  state_province_county  count(*)
	0          assachusetts         4
	1          WyomingnpOO(         6
	2                   Ohi        10
	3                   hio        11
	4                yoming        11
	5         Q)mWyomingvZ1        12
	6           towRWyoming        14
	7             Ohiog5tVP        14
	8              Colorado        16
	9         Massachusetts        21
	ACTUAL OUTPUT ====

		
		SELECT state_province_county,
		       n AS count___
		FROM
		  (SELECT state_province_county,
		          zip_postcode,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.address_id AS address_id,
		             LHS.address_details AS address_details,
		             LHS.city AS city,
		             LHS.zip_postcode AS zip_postcode,
		             LHS.state_province_county AS state_province_county,
		             LHS.country AS country,
		             RHS.customer_id AS customer_id,
		             RHS.date_from AS date_from,
		             RHS.address_type AS address_type,
		             RHS.date_to AS date_to
		      FROM addresses AS LHS
		      INNER JOIN customer_addresses AS RHS ON (LHS.address_id = RHS.address_id))
		   GROUP BY state_province_county,
		            zip_postcode)
		ORDER BY state_province_county

	   state_province_county  count___
	0           assachusetts         4
	1           WyomingnpOO(         6
	2               Colorado         7
	3               Colorado         9
	4          Massachusetts         9
	5                    Ohi        10
	6                    hio        11
	7                 yoming        11
	8          Massachusetts        12
	9          Q)mWyomingvZ1        12
	10           towRWyoming        14
	11             Ohiog5tVP        14
Wrong output for fuzzied solution in instance spider/customer_deliveries/0007 (767)
	EXPECTED OUTPUT ====

		SELECT customer_name
		FROM customers
		EXCEPT
		SELECT t1.customer_name
		FROM customers AS t1
		JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id
		JOIN addresses AS t3 ON t2.address_id = t3.address_id
		WHERE t3.state_province_county = 'California'

	          customer_name
	0  (YoGeovanni Grady8nt
	1  0J2Geovanni GradyQ9B
	2   5ayMaAnnabell Walsh
	3         Annabell Wals
	4        Gabe Schroeder
	5         Geovanni Grad
	6        Geovanni Grady
	7            Rusty Mora
	8           Rusty Morar
	ACTUAL OUTPUT ====

		
		SELECT `customer_name`
		FROM
		  (SELECT *
		   FROM `customers` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `customer_addresses` AS `LHS`
		           WHERE EXISTS
		               (SELECT 1
		                FROM
		                  (SELECT *
		                   FROM `addresses`
		                   WHERE (`state_province_county` = 'California')) AS RHS
		                WHERE (LHS.address_id = RHS.address_id) )) AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY customer_name

	          customer_name
	0  (YoGeovanni Grady8nt
	1  0J2Geovanni GradyQ9B
	2   5ayMaAnnabell Walsh
	3         Annabell Wals
	4        Gabe Schroeder
	5        Gabe Schroeder
	6         Geovanni Grad
	7        Geovanni Grady
	8            Rusty Mora
	9           Rusty Morar
Wrong output for fuzzied solution in instance spider/journal_committee/0002 (773)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM editor
		ORDER BY Age ASC

	                    name
	0     HQCMarek SiudymHFd
	1            Marek Siudy
	2           Marek Siudym
	3      Marek SiudymtYIwj
	4       Mariusz Zalejski
	5       Mariusz Zalejski
	6  QIijVMariusz Zalejski
	7  v6fImMariusz Zalejski
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT name
		   FROM editor INTERSECT SELECT name
		   FROM editor)
		ORDER BY name

	                    name
	0     HQCMarek SiudymHFd
	1            Marek Siudy
	2           Marek Siudym
	3      Marek SiudymtYIwj
	4       Mariusz Zalejski
	5  QIijVMariusz Zalejski
	6  v6fImMariusz Zalejski
Wrong output for fuzzied solution in instance spider/journal_committee/0008 (775)
	EXPECTED OUTPUT ====

		SELECT Age
		FROM editor
		GROUP BY Age
		ORDER BY COUNT(*) DESC
		LIMIT 1

	     age
	0  24.01
	ACTUAL OUTPUT ====

		
		SELECT age
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT age,
		                editor_id,
		                COUNT() AS n
		         FROM editor
		         GROUP BY age,
		                  editor_id)
		      ORDER BY age DESC)
		   LIMIT 1)

	     age
	0  42.98
Wrong output for fuzzied solution in instance spider/journal_committee/0005 (782)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM editor
		WHERE Age = 24
		  OR Age = 25

	                      name
	0            Anna Powierza
	1            Anna Powierza
	2            Anna Powierza
	3       IpXCkAnna Powierza
	4        Władysław Grzywna
	5        Władysław Grzywna
	6        Władysław Grzywna
	7        Władysław Grzywna
	8       cU(dDAnna Powierza
	9            h8VvD9h06VJwA
	10  qKHjZWładysław Grzywna
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.editor_id AS editor_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          RHS.editor_id AS editor_id_other,
		          RHS.age AS age_other
		   FROM editor AS LHS
		   INNER JOIN editor AS RHS ON (LHS.name = RHS.name))
		WHERE (age = 24.0
		       OR age = 25.0)
		ORDER BY name

	                      name
	0            Anna Powierza
	1            Anna Powierza
	2            Anna Powierza
	3            Anna Powierza
	4            Anna Powierza
	..                     ...
	64       Władysław Grzywna
	65       Władysław Grzywna
	66      cU(dDAnna Powierza
	67           h8VvD9h06VJwA
	68  qKHjZWładysław Grzywna
	
	[69 rows x 1 columns]
Wrong output for fuzzied solution in instance spider/journal_committee/0007 (784)
	EXPECTED OUTPUT ====

		SELECT Age,
		       COUNT(*)
		FROM editor
		GROUP BY Age

	     age  count(*)
	0  19.99         1
	1  20.00         2
	2  20.01         1
	3  53.98         1
	4  54.00         1
	5  54.02         2
	ACTUAL OUTPUT ====

		
		SELECT age,
		       n AS count___
		FROM
		  (SELECT age,
		          name,
		          COUNT() AS n
		   FROM editor
		   GROUP BY age,
		            name)
		ORDER BY age

	     age  count___
	0  19.99         1
	1  20.00         1
	2  20.00         1
	3  20.01         1
	4  53.98         1
	5  54.00         1
	6  54.02         1
	7  54.02         1
Wrong output for fuzzied solution in instance spider/journal_committee/0001 (785)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM editor

	   count(*)
	0         5
	ACTUAL OUTPUT ====

		
		SELECT editor_id AS count___
		FROM
		  (SELECT LHS.editor_id AS editor_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          RHS.editor_id AS editor_id_other,
		          RHS.name AS name_other
		   FROM editor AS LHS
		   INNER JOIN
		     (SELECT editor_id,
		             name,
		             age,
		             COUNT(*) OVER () AS n
		      FROM editor) AS RHS ON (LHS.editor_id = RHS.n
		                                 AND LHS.age = RHS.age))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/journal_committee/0014 (786)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM editor AS T1
		JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID
		GROUP BY T1.Name
		HAVING COUNT(*) >= 2

	                    name
	0     HQCMarek SiudymHFd
	1            Marek Siudy
	2           Marek Siudym
	3      Marek SiudymtYIwj
	4       Mariusz Zalejski
	5  QIijVMariusz Zalejski
	6  v6fImMariusz Zalejski
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT age,
		          name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.editor_id AS editor_id,
		             LHS.name AS name,
		             LHS.age AS age,
		             RHS.journal_id AS journal_id,
		             RHS.work_type AS work_type
		      FROM editor AS LHS
		      INNER JOIN journal_committee AS RHS ON (LHS.editor_id = RHS.editor_id))
		   GROUP BY age,
		            name)
		WHERE (n >= 2)
		ORDER BY name

	                    name
	0     HQCMarek SiudymHFd
	1            Marek Siudy
	2           Marek Siudym
	3      Marek SiudymtYIwj
	4       Mariusz Zalejski
	5       Mariusz Zalejski
	6  QIijVMariusz Zalejski
	7  v6fImMariusz Zalejski
Wrong output for fuzzied solution in instance spider/journal_committee/0009 (787)
	EXPECTED OUTPUT ====

		SELECT DISTINCT Theme
		FROM journal

	                        theme
	0      8C Baltimore RavensRJC
	1            Baltimore Ravens
	2         Pittsburgh Steelers
	3       Vv6kpat Detroit Lions
	4        at Cincinnati Bengal
	5       at Cincinnati Bengals
	6  at Cincinnati Bengals9awO)
	7            at Detroit Lions
	8    rqrHJPittsburgh Steelers
	9        t Cincinnati Bengals
	ACTUAL OUTPUT ====

		
		SELECT theme
		FROM journal
		ORDER BY theme

	                         theme
	0       8C Baltimore RavensRJC
	1             Baltimore Ravens
	2          Pittsburgh Steelers
	3        Vv6kpat Detroit Lions
	4         at Cincinnati Bengal
	5        at Cincinnati Bengals
	6        at Cincinnati Bengals
	7   at Cincinnati Bengals9awO)
	8             at Detroit Lions
	9     rqrHJPittsburgh Steelers
	10        t Cincinnati Bengals
Error while executing solution for instance spider/tracking_grants_for_research/0033 (790)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT project_details_other AS project_details
FROM
  (SELECT LHS.project_id AS project_id,
          LHS.organisation_id AS organisation_id,
          LHS.project_details AS project_details,
          LHS.n_distinct AS n_distinct,
          RHS.project_id AS project_id_other,
          RHS.project_details AS project_details_other
   FROM
     (SELECT *
      FROM
        (SELECT project_id,
                organisation_id,
                project_details,
                COUNT(DISTINCT organisation_id) OVER () AS n_distinct
         FROM projects)
      WHERE (n_distinct >= 1
             OR n_distinct = organisation_id)) AS LHS
   INNER JOIN
     (SELECT project_id,
             organisation_id,
             project_details,
             COUNT(DISTINCT organisation_id) OVER () AS n_distinct
      FROM projects) AS RHS ON (LHS.project_id = RHS.n_distinct
                                   AND LHS.organisation_id = RHS.organisation_id))
ORDER BY project_details]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/tracking_grants_for_research/0037 (791)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT DISTINCT `role_code`
FROM `project_staff`
WHERE (`date_from` != parse_datetime('2003-04-19 15:06:20')
       OR `date_from` != parse_datetime('2016-03-15 00:33:18'))
ORDER BY role_code]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/tracking_grants_for_research/0002 (792)
Error while executing solution for instance spider/tracking_grants_for_research/0036 (793)

(sqlite3.OperationalError) no such column: RHS.eg_agree_objectives
[SQL: 
SELECT n AS count___,
       project_details
FROM
  (SELECT project_details,
          task_id,
          COUNT() AS n
   FROM
     (SELECT LHS.project_id AS project_id,
             LHS.organisation_id AS organisation_id,
             LHS.project_details AS project_details,
             RHS.task_id AS task_id,
             RHS.task_details AS task_details,
             RHS.eg_agree_objectives AS eg_agree_objectives
      FROM projects AS LHS
      INNER JOIN tasks AS RHS ON (LHS.project_id = RHS.project_id))
   GROUP BY project_details,
            task_id)
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0008 (795)
	EXPECTED OUTPUT ====

		SELECT T1.sent_date
		FROM documents AS T1
		JOIN Grants AS T2 ON T1.grant_id = T2.grant_id
		JOIN Organisations AS T3 ON T2.organisation_id = T3.organisation_id
		JOIN organisation_Types AS T4 ON T3.organisation_type = T4.organisation_type
		WHERE T2.grant_amount > 5000
		  AND T4.organisation_type_description = 'Research'

	             sent_date
	0  1897-02-03 10:57:06
	1  1897-02-03 10:57:06
	2  1982-01-22 20:42:02
	3  1982-01-22 20:42:02
	4  1999-11-10 19:34:36
	5  2001-02-11 11:53:22
	ACTUAL OUTPUT ====

		
		SELECT `sent_date`
		FROM
		  (SELECT *
		   FROM `documents` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT `LHS`.`grant_id` AS `grant_id`,
		                     `LHS`.`organisation_id` AS `organisation_id`,
		                     `LHS`.`grant_amount` AS `grant_amount`,
		                     `LHS`.`grant_start_date` AS `grant_start_date`,
		                     `LHS`.`grant_end_date` AS `grant_end_date`,
		                     `LHS`.`other_details` AS `other_details`,
		                     `LHS`.`organisation_type` AS `organisation_type`,
		                     `LHS`.`organisation_type_description` AS `organisation_type_description`,
		                     `RHS`.`organisation_details` AS `organisation_details`
		              FROM
		                (SELECT `LHS`.`grant_id` AS `grant_id`,
		                        `LHS`.`organisation_id` AS `organisation_id`,
		                        `LHS`.`grant_amount` AS `grant_amount`,
		                        `LHS`.`grant_start_date` AS `grant_start_date`,
		                        `LHS`.`grant_end_date` AS `grant_end_date`,
		                        `LHS`.`other_details` AS `other_details`,
		                        `RHS`.`organisation_type` AS `organisation_type`,
		                        `RHS`.`organisation_type_description` AS `organisation_type_description`
		                 FROM `grants` AS `LHS`
		                 CROSS JOIN `organisation_types` AS `RHS`) AS `LHS`
		              INNER JOIN `organisations` AS `RHS` ON (`LHS`.`organisation_id` = `RHS`.`organisation_id`
		                                                         AND `LHS`.`organisation_type` = `RHS`.`organisation_type`))
		           WHERE (`organisation_type_description` != 'Research'
		                  OR grant_amount < 5000.0)) AS RHS
		        WHERE (LHS.grant_id = RHS.grant_id) ))
		ORDER BY sent_date

	             sent_date
	0  1897-02-03 10:57:06
	1  1897-02-03 10:57:06
	2  1979-08-23 08:22:34
	3  1982-01-22 20:42:02
	4  1982-01-22 20:42:02
	5  1995-01-04 03:39:37
	6  1995-01-04 03:39:37
	7  1999-11-10 19:34:36
	8  2001-02-11 11:53:22
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0039 (796)
	EXPECTED OUTPUT ====

		SELECT role_code
		FROM Project_Staff
		GROUP BY role_code
		ORDER BY count(*) DESC
		LIMIT 1

	  role_code
	0     leade
	ACTUAL OUTPUT ====

		
		SELECT role_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT role_code,
		                COUNT() AS n
		         FROM project_staff
		         GROUP BY role_code)
		      ORDER BY role_code DESC)
		   LIMIT 1)

	      role_code
	0  qxcleader5f9
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0022 (800)
	EXPECTED OUTPUT ====

		SELECT T1.role_description,
		       T2.staff_id
		FROM Staff_Roles AS T1
		JOIN Project_Staff AS T2 ON T1.role_code = T2.role_code
		JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id
		GROUP BY T2.staff_id
		ORDER BY count(*) DESC
		LIMIT 1

	      role_description    staff_id
	0  VeVj9Project Leader  6065504.98
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT role_description,
		                staff_id
		FROM
		  (SELECT LHS.outcome_code AS outcome_code,
		          LHS.role_description AS role_description,
		          LHS.n AS n,
		          RHS.outcome_details AS outcome_details,
		          RHS.staff_id AS staff_id,
		          RHS.role_code AS role_code,
		          RHS.date_from AS date_from,
		          RHS.date_to AS date_to,
		          RHS.other_details AS other_details,
		          RHS.role_description AS role_description_other
		   FROM
		     (SELECT outcome_code,
		             role_description,
		             COUNT() AS n
		      FROM
		        (SELECT LHS.project_id AS project_id,
		                LHS.outcome_code AS outcome_code,
		                LHS.outcome_details AS outcome_details,
		                LHS.staff_id AS staff_id,
		                LHS.role_code AS role_code,
		                LHS.date_from AS date_from,
		                LHS.date_to AS date_to,
		                LHS.other_details AS other_details,
		                RHS.role_description AS role_description
		         FROM
		           (SELECT LHS.project_id AS project_id,
		                   LHS.outcome_code AS outcome_code,
		                   LHS.outcome_details AS outcome_details,
		                   RHS.staff_id AS staff_id,
		                   RHS.role_code AS role_code,
		                   RHS.date_from AS date_from,
		                   RHS.date_to AS date_to,
		                   RHS.other_details AS other_details
		            FROM project_outcomes AS LHS
		            INNER JOIN project_staff AS RHS ON (LHS.project_id = RHS.project_id)) AS LHS
		         INNER JOIN staff_roles AS RHS ON (LHS.role_code = RHS.role_code))
		      GROUP BY outcome_code,
		               role_description) AS LHS
		   INNER JOIN
		     (SELECT LHS.project_id AS project_id,
		             LHS.outcome_code AS outcome_code,
		             LHS.outcome_details AS outcome_details,
		             LHS.staff_id AS staff_id,
		             LHS.role_code AS role_code,
		             LHS.date_from AS date_from,
		             LHS.date_to AS date_to,
		             LHS.other_details AS other_details,
		             RHS.role_description AS role_description
		      FROM
		        (SELECT LHS.project_id AS project_id,
		                LHS.outcome_code AS outcome_code,
		                LHS.outcome_details AS outcome_details,
		                RHS.staff_id AS staff_id,
		                RHS.role_code AS role_code,
		                RHS.date_from AS date_from,
		                RHS.date_to AS date_to,
		                RHS.other_details AS other_details
		         FROM project_outcomes AS LHS
		         INNER JOIN project_staff AS RHS ON (LHS.project_id = RHS.project_id)) AS LHS
		      INNER JOIN staff_roles AS RHS ON (LHS.role_code = RHS.role_code)) AS RHS ON (LHS.n = RHS.project_id
		                                                                                      AND LHS.outcome_code = RHS.outcome_code))
		ORDER BY role_description

	       role_description     staff_id
	0        Project Leader       778.99
	1        Project Leader       779.00
	2        Project Leader       779.01
	3        Project Leader       779.02
	4        Project Leader    674810.00
	5        Project Leader    674810.01
	6        Project Leader   6065505.00
	7        Project Leader   6065505.01
	8        Project Leader   6065505.02
	9        Project Leader  49698448.98
	10       Project Leader  49698448.99
	11       Project Leader  49698449.00
	12       Project Leader  49698449.01
	13  Project LeaderPCOHG       779.01
	14  Project LeaderPCOHG   6065505.02
	15  Project LeaderPCOHG  49698448.99
	16  Project LeaderPCOHG  49698449.00
	17  VeVj9Project Leader       779.01
	18  VeVj9Project Leader   6065505.02
	19  VeVj9Project Leader  49698448.99
	20  VeVj9Project Leader  49698449.00
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0006 (803)
	EXPECTED OUTPUT ====

		SELECT T1.organisation_type,
		       T1.organisation_id
		FROM Organisations AS T1
		JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id
		GROUP BY T1.organisation_id
		ORDER BY count(*) DESC
		LIMIT 1

	  organisation_type  organisation_id
	0         ruGRESb1e               11
	ACTUAL OUTPUT ====

		
		SELECT organisation_type,
		       organisation_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT organisation_id,
		                organisation_type,
		                organisation_details,
		                staff_id,
		                n,
		                organisation_id AS employer_organisation_id
		         FROM
		           (SELECT LHS.organisation_id AS organisation_id,
		                   LHS.organisation_type AS organisation_type,
		                   LHS.organisation_details AS organisation_details,
		                   RHS.staff_id AS staff_id,
		                   RHS.n AS n
		            FROM organisations AS LHS
		            INNER JOIN
		              (SELECT employer_organisation_id,
		                      staff_id,
		                      COUNT() AS n
		               FROM research_staff
		               GROUP BY employer_organisation_id,
		                        staff_id) AS RHS ON (LHS.organisation_id = RHS.employer_organisation_id)))
		      ORDER BY organisation_details DESC)
		   LIMIT 1)

	  organisation_type  organisation_id
	0          RESXhHOq                8
No solution for instance spider/tracking_grants_for_research/0004 (804)
No solution for instance spider/tracking_grants_for_research/0015 (807)
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0005 (808)
	EXPECTED OUTPUT ====

		SELECT T2.organisation_id,
		       T2.organisation_details
		FROM Grants AS T1
		JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id
		GROUP BY T2.organisation_id
		HAVING sum(T1.grant_amount) > 6000

	   organisation_id organisation_details
	0       5436176993             NO8mYeos
	1       3918165859                   Ws
	2               10                  eiu
	3      -6588531670                   eo
	4       1842642786                  eos
	5       3811377438                  eos
	6               13             eosaQxpg
	7       3555254423                  quo
	8       7787407226                  quo
	9       6773863922             xG2R quo
	ACTUAL OUTPUT ====

		
		SELECT organisation_id,
		       organisation_details
		FROM
		  (SELECT *
		   FROM organisations AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT grant_id,
		                  organisation_id,
		                  grant_amount,
		                  grant_start_date,
		                  grant_end_date,
		                  other_details,
		                  SUM(grant_amount) OVER () AS sumgrant_amount
		           FROM grants
		           WHERE (grant_amount >= 6000.0)) AS RHS
		        WHERE (LHS.organisation_id = RHS.organisation_id) ))
		ORDER BY organisation_id

	   organisation_id organisation_details
	0       5436176993             NO8mYeos
	1       3918165859                   Ws
	2               10                  eiu
	3      -6588531670                   eo
	4       3811377438                  eos
	5       3555254423                  quo
	6       7787407226                  quo
	7       6773863922             xG2R quo
No solution for instance spider/tracking_grants_for_research/0032 (810)
Error while executing solution for instance spider/tracking_grants_for_research/0035 (812)

(sqlite3.OperationalError) no such column: eg_agree_objectives
[SQL: 
SELECT DISTINCT COUNT(*) OVER () AS count___
FROM
  (SELECT eg_agree_objectives,
          task_id,
          COUNT() AS n
   FROM tasks
   GROUP BY eg_agree_objectives,
            task_id)
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0019 (814)
	EXPECTED OUTPUT ====

		SELECT T1.project_details,
		       T1.project_id
		FROM Projects AS T1
		JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id
		GROUP BY T1.project_id
		ORDER BY count(*) DESC
		LIMIT 1

	  project_details  project_id
	0       E3SsedQ L           8
	ACTUAL OUTPUT ====

		
		SELECT project_details,
		       project_id
		FROM
		  (SELECT LHS.project_id AS project_id,
		          LHS.n AS n,
		          RHS.project_details AS project_details
		   FROM
		     (SELECT project_id,
		             COUNT() AS n
		      FROM project_outcomes
		      GROUP BY project_id) AS LHS
		   INNER JOIN projects AS RHS ON (LHS.project_id = RHS.project_id
		                                     AND LHS.n = RHS.organisation_id))
		ORDER BY project_details

	  project_details  project_id
	0           porro          13
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0007 (815)
	EXPECTED OUTPUT ====

		SELECT T1.organisation_type
		FROM Organisations AS T1
		JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id
		GROUP BY T1.organisation_type
		ORDER BY count(*) DESC
		LIMIT 1

	  organisation_type
	0         ruGRESb1e
	ACTUAL OUTPUT ====

		
		SELECT organisation_type
		FROM
		  (SELECT organisation_details,
		          organisation_type,
		          n,
		          employer_organisation_id,
		          n AS staff_id
		   FROM
		     (SELECT LHS.organisation_details AS organisation_details,
		             LHS.organisation_type AS organisation_type,
		             LHS.n AS n,
		             RHS.employer_organisation_id AS employer_organisation_id
		      FROM
		        (SELECT organisation_details,
		                organisation_type,
		                COUNT() AS n
		         FROM organisations
		         GROUP BY organisation_details,
		                  organisation_type) AS LHS
		      INNER JOIN research_staff AS RHS ON (LHS.n = RHS.staff_id
		                                              AND LHS.organisation_details = RHS.staff_details)))
		ORDER BY organisation_type

	Empty DataFrame
	Columns: [organisation_type]
	Index: []
No solution for instance spider/tracking_grants_for_research/0024 (817)
No solution for instance spider/tracking_grants_for_research/0021 (818)
No solution for instance spider/tracking_grants_for_research/0023 (819)
Error while executing solution for instance spider/tracking_grants_for_research/0001 (820)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT DISTINCT `grant_amount`
FROM
  (SELECT `LHS`.`document_id` AS `document_id`,
          `LHS`.`document_type_code` AS `document_type_code`,
          `LHS`.`grant_id` AS `grant_id`,
          `LHS`.`sent_date` AS `sent_date`,
          `LHS`.`response_received_date` AS `response_received_date`,
          `LHS`.`other_details` AS `other_details`,
          `RHS`.`organisation_id` AS `organisation_id`,
          `RHS`.`grant_amount` AS `grant_amount`,
          `RHS`.`grant_start_date` AS `grant_start_date`,
          `RHS`.`grant_end_date` AS `grant_end_date`,
          `RHS`.`other_details` AS `other_details_other`
   FROM `documents` AS `LHS`
   INNER JOIN `grants` AS `RHS` ON (`LHS`.`grant_id` = `RHS`.`grant_id`))
WHERE (`sent_date` < parse_datetime('1986-08-26 20:49:27')
       AND `grant_end_date` > parse_datetime('1989-03-16 18:27:16'))
ORDER BY grant_amount]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for base solution in instance spider/tracking_grants_for_research/0014 (821)
	EXPECTED OUTPUT ====

	   sum_grant_amount_  organisation_id
	0       6.084380e+05                2
	1       2.812446e+02                3
	2       6.107004e+02                5
	3       7.697781e+07                7
	4       4.280610e+01                8
	5       2.531351e+04                9
	6       3.867950e+07               10
	7       3.306339e+02               11
	8       2.001349e+06               12
	9       4.516014e+06               14
	ACTUAL OUTPUT ====

		SELECT sum(grant_amount),
		       organisation_id
		FROM Grants
		GROUP BY organisation_id

	   sum(grant_amount)  organisation_id
	0       6.084380e+05                2
	1       2.812446e+02                3
	2       6.107004e+02                5
	3       7.697781e+07                7
	4       4.280610e+01                8
	5       2.531351e+04                9
	6       3.867950e+07               10
	7       3.306339e+02               11
	8       2.001349e+06               12
	9       4.516014e+06               14
Wrong output for ground truth in instance spider/tracking_grants_for_research/0014 (821)
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0009 (822)
	EXPECTED OUTPUT ====

		SELECT T1.response_received_date
		FROM Documents AS T1
		JOIN Document_Types AS T2 ON T1.document_type_code = T2.document_type_code
		JOIN Grants AS T3 ON T1.grant_id = T3.grant_id
		WHERE T2.document_description = 'Regular'
		  OR T3.grant_amount > 100

	   response_received_date
	0     1801-04-19 17:02:26
	1     1900-06-27 19:50:42
	2     1980-02-24 15:23:44
	3     1980-02-24 15:23:44
	4     1984-06-19 15:53:06
	5     1986-11-16 09:06:05
	6     1987-03-20 16:03:29
	7     1989-06-20 17:46:43
	8     1989-11-12 05:00:39
	9     1990-08-06 23:16:07
	10    1994-08-16 07:40:58
	11    1994-12-15 12:16:32
	12    1995-09-12 13:13:48
	ACTUAL OUTPUT ====

		
		SELECT `response_received_date`
		FROM
		  (SELECT `LHS`.`document_type_code` AS `document_type_code`,
		          `LHS`.`document_description` AS `document_description`,
		          `LHS`.`grant_id` AS `grant_id`,
		          `LHS`.`organisation_id` AS `organisation_id`,
		          `LHS`.`grant_amount` AS `grant_amount`,
		          `LHS`.`grant_start_date` AS `grant_start_date`,
		          `LHS`.`grant_end_date` AS `grant_end_date`,
		          `LHS`.`other_details` AS `other_details`,
		          `RHS`.`document_id` AS `document_id`,
		          `RHS`.`sent_date` AS `sent_date`,
		          `RHS`.`response_received_date` AS `response_received_date`,
		          `RHS`.`other_details` AS `other_details_other`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`document_type_code` AS `document_type_code`,
		                `LHS`.`document_description` AS `document_description`,
		                `RHS`.`grant_id` AS `grant_id`,
		                `RHS`.`organisation_id` AS `organisation_id`,
		                `RHS`.`grant_amount` AS `grant_amount`,
		                `RHS`.`grant_start_date` AS `grant_start_date`,
		                `RHS`.`grant_end_date` AS `grant_end_date`,
		                `RHS`.`other_details` AS `other_details`
		         FROM `document_types` AS `LHS`
		         CROSS JOIN `grants` AS `RHS`)
		      WHERE (`document_description` = 'Regular'
		             OR grant_amount >= 100.0)) AS LHS
		   INNER JOIN documents AS RHS ON (LHS.document_type_code = RHS.document_type_code
		                                      AND LHS.grant_id = RHS.grant_id))
		ORDER BY response_received_date

	   response_received_date
	0     1801-04-19 17:02:26
	1     1814-06-20 20:56:16
	2     1900-06-27 19:50:42
	3     1980-02-24 15:23:44
	4     1980-02-24 15:23:44
	5     1984-06-19 15:53:06
	6     1986-11-16 09:06:05
	7     1987-03-20 16:03:29
	8     1988-01-22 08:06:59
	9     1988-12-24 10:15:49
	10    1989-06-20 17:46:43
	11    1989-11-12 05:00:39
	12    1990-08-06 23:16:07
	13    1994-08-16 07:40:58
	14    1994-12-15 12:16:32
	15    1995-09-12 13:13:48
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0025 (823)
	EXPECTED OUTPUT ====

		SELECT grant_id,
		       count(*)
		FROM Documents
		GROUP BY grant_id
		ORDER BY count(*) DESC
		LIMIT 1

	   grant_id  count(*)
	0        15         3
	ACTUAL OUTPUT ====

		
		SELECT grant_id,
		       n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT grant_id,
		                other_details,
		                COUNT() AS n
		         FROM documents
		         GROUP BY grant_id,
		                  other_details)
		      ORDER BY n DESC)
		   LIMIT 1)

	   grant_id  count___
	0         5         2
No solution for instance spider/tracking_grants_for_research/0011 (824)
Error while executing solution for instance spider/tracking_grants_for_research/0029 (825)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `date_from`) OVER () AS `count___`
FROM `project_staff`
WHERE (`role_code` = 'leader'
       OR `date_from` < parse_datetime('1989-04-24 23:51:54'))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/tracking_grants_for_research/0028 (827)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Project_outcomes
		WHERE outcome_code = 'Patent'

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `outcome_details`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `project_outcomes`
		      WHERE (`outcome_code` = 'Patent'))
		   GROUP BY outcome_details)
		ORDER BY count___

	   count___
	0         1
	1         1
Error while executing solution for instance spider/epinions_1/0008 (831)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT i_id) OVER () AS count_distinct_i_id_
FROM review
ORDER BY count_distinct_i_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/epinions_1/0004 (836)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM useracct

	   count(*)
	0        60
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT u_id AS count___
		FROM
		  (SELECT LHS.u_id AS u_id,
		          LHS.name AS name,
		          LHS.n AS n,
		          RHS.u_id AS u_id_other,
		          RHS.name AS name_other
		   FROM
		     (SELECT u_id,
		             name,
		             COUNT(*) OVER () AS n
		      FROM useracct) AS LHS
		   INNER JOIN
		     (SELECT u_id,
		             name,
		             COUNT(*) OVER () AS n
		      FROM useracct) AS RHS ON (LHS.u_id = RHS.n))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_17981.sqlite3'
Wrong output for fuzzied solution in instance spider/epinions_1/0026 (838)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM useracct AS T1
		JOIN trust AS T2 ON T1.u_id = T2.target_u_id
		ORDER BY trust
		LIMIT 1

	    name
	0  Terry
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT u_id,
		                name,
		                source_u_id,
		                trust,
		                u_id AS target_u_id
		         FROM
		           (SELECT LHS.u_id AS u_id,
		                   LHS.name AS name,
		                   RHS.source_u_id AS source_u_id,
		                   RHS.trust AS trust
		            FROM useracct AS LHS
		            INNER JOIN trust AS RHS ON (LHS.u_id = RHS.target_u_id)))
		      ORDER BY u_id)
		   LIMIT 1)

	  name
	0  ark
Wrong output for fuzzied solution in instance spider/epinions_1/0015 (839)
	EXPECTED OUTPUT ====

		SELECT T1.title
		FROM item AS T1
		JOIN review AS T2 ON T1.i_id = T2.i_id
		WHERE T2.rank > 3 INTERSECT
		  SELECT T1.title
		  FROM item AS T1
		  JOIN review AS T2 ON T1.i_id = T2.i_id
		GROUP BY T2.i_id
		HAVING avg(T2.rating) > 5

	              title
	0  )GVRRblue hoodie
	1       blue hoodie
	ACTUAL OUTPUT ====

		
		SELECT title
		FROM
		  (SELECT *
		   FROM item AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT i_id,
		                  AVG(rank) AS meanrank
		           FROM review
		           WHERE (rank > 3
		                  AND rank != 5)
		           GROUP BY i_id) AS RHS
		        WHERE (LHS.i_id = RHS.i_id) ))
		ORDER BY title

	              title
	0  )GVRRblue hoodie
	1       blue hoodie
	2  blue hoodieEun2W
Wrong output for base solution in instance spider/epinions_1/0005 (840)
	EXPECTED OUTPUT ====

	   avg_rating_  max_rating_
	0     7.142857           10
	ACTUAL OUTPUT ====

		SELECT avg(rating),
		       max(rating)
		FROM review

	   avg(rating)  max(rating)
	0     7.142857           10
Wrong output for ground truth in instance spider/epinions_1/0005 (840)
No solution for instance spider/epinions_1/0016 (841)
Wrong output for fuzzied solution in instance spider/epinions_1/0018 (842)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM useracct AS T1
		JOIN review AS T2 ON T1.u_id = T2.u_id
		GROUP BY T2.u_id
		ORDER BY count(*) DESC
		LIMIT 1

	         name
	0  Rosie6VGpl
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.u_id AS u_id,
		          LHS.name AS name,
		          LHS.n AS n,
		          RHS.i_id AS i_id,
		          RHS.rating AS rating,
		          RHS.rank AS rank
		   FROM
		     (SELECT u_id,
		             name,
		             COUNT(*) OVER () AS n
		      FROM useracct) AS LHS
		   INNER JOIN review AS RHS ON (LHS.u_id = RHS.u_id
		                                   AND LHS.n = RHS.a_id))
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
No solution for instance spider/epinions_1/0020 (843)
Wrong output for fuzzied solution in instance spider/epinions_1/0019 (844)
	EXPECTED OUTPUT ====

		SELECT T1.title,
		       T1.i_id
		FROM item AS T1
		JOIN review AS T2 ON T1.i_id = T2.i_id
		GROUP BY T2.i_id
		ORDER BY avg(T2.rating) DESC
		LIMIT 1

	              title  i_id
	0  )GVRRblue hoodie     7
	ACTUAL OUTPUT ====

		
		SELECT title,
		       i_id
		FROM
		  (SELECT i_id,
		          title,
		          a_id,
		          u_id,
		          rating,
		          a_id AS rank,
		          meanrating
		   FROM
		     (SELECT LHS.i_id AS i_id,
		             LHS.title AS title,
		             LHS.a_id AS a_id,
		             LHS.u_id AS u_id,
		             LHS.rating AS rating,
		             LHS.rank AS rank,
		             RHS.meanrating AS meanrating
		      FROM
		        (SELECT LHS.i_id AS i_id,
		                LHS.title AS title,
		                RHS.a_id AS a_id,
		                RHS.u_id AS u_id,
		                RHS.rating AS rating,
		                RHS.rank AS rank
		         FROM item AS LHS
		         LEFT JOIN review AS RHS ON (LHS.i_id = RHS.i_id)) AS LHS
		      INNER JOIN
		        (SELECT rank,
		                rating,
		                AVG(rating) AS meanrating
		         FROM
		           (SELECT LHS.i_id AS i_id,
		                   LHS.title AS title,
		                   RHS.a_id AS a_id,
		                   RHS.u_id AS u_id,
		                   RHS.rating AS rating,
		                   RHS.rank AS rank
		            FROM item AS LHS
		            LEFT JOIN review AS RHS ON (LHS.i_id = RHS.i_id))
		         GROUP BY rank,
		                  rating) AS RHS ON (LHS.a_id = RHS.rank
		                                     AND LHS.rank = RHS.rating)))
		ORDER BY title

	  title  i_id
	0  comb     9
Wrong output for fuzzied solution in instance spider/epinions_1/0007 (845)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT u_id)
		FROM review

	   count(distinct u_id)
	0                     5
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT u_id AS count_distinct_u_id_
		FROM
		  (SELECT a_id,
		          u_id,
		          COUNT() AS n
		   FROM review
		   GROUP BY a_id,
		            u_id)
		WHERE (n < u_id)
		ORDER BY count_distinct_u_id_

	   count_distinct_u_id_
	0                     3
	1                     4
	2                     5
	3                     6
	4                     7
Wrong output for fuzzied solution in instance spider/epinions_1/0024 (846)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM useracct AS T1
		JOIN trust AS T2 ON T1.u_id = T2.source_u_id
		GROUP BY T2.source_u_id
		ORDER BY avg(trust) DESC
		LIMIT 1

	   name
	0  Terr
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.u_id AS u_id,
		                LHS.name AS name,
		                RHS.source_u_id AS source_u_id,
		                RHS.target_u_id AS target_u_id,
		                RHS.trust AS trust,
		                RHS.meantrust AS meantrust
		         FROM useracct AS LHS
		         CROSS JOIN
		           (SELECT source_u_id,
		                   target_u_id,
		                   trust,
		                   AVG(trust) OVER () AS meantrust
		            FROM trust) AS RHS)
		      ORDER BY name DESC)
		   LIMIT 1)

	  name
	0  ark
Wrong output for base solution in instance spider/epinions_1/0021 (847)
	EXPECTED OUTPUT ====

	    name  avg_t2_rating_
	0   Mark        7.000000
	1  Helen        7.333333
	ACTUAL OUTPUT ====

		SELECT T1.name,
		       avg(T2.rating)
		FROM useracct AS T1
		JOIN review AS T2 ON T1.u_id = T2.u_id
		GROUP BY T2.u_id

	    name  avg(t2.rating)
	0   Mark        7.000000
	1  Helen        7.333333
Wrong output for ground truth in instance spider/epinions_1/0021 (847)
Wrong output for fuzzied solution in instance spider/epinions_1/0023 (848)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM useracct AS T1
		JOIN review AS T2 ON T1.u_id = T2.u_id
		ORDER BY T2.rating DESC
		LIMIT 1

	    name
	0  Helen
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.a_id AS a_id,
		                LHS.u_id AS u_id,
		                LHS.i_id AS i_id,
		                LHS.rating AS rating,
		                LHS.rank AS rank,
		                RHS.name AS name
		         FROM review AS LHS
		         INNER JOIN useracct AS RHS ON (LHS.u_id = RHS.u_id))
		      ORDER BY i_id)
		   LIMIT 1)

	   name
	0  Terr
Wrong output for fuzzied solution in instance spider/epinions_1/0009 (850)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM item
		WHERE i_id NOT IN
		    (SELECT i_id
		     FROM review)

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n_distinct AS count___
		FROM
		  (SELECT u_id,
		          COUNT(DISTINCT i_id) AS n_distinct
		   FROM
		     (SELECT LHS.i_id AS i_id,
		             LHS.title AS title,
		             RHS.a_id AS a_id,
		             RHS.u_id AS u_id,
		             RHS.rating AS rating,
		             RHS.rank AS rank
		      FROM item AS LHS
		      INNER JOIN review AS RHS ON (LHS.i_id = RHS.i_id))
		   GROUP BY u_id)
		ORDER BY count___

	   count___
	0         1
	1         2
Wrong output for fuzzied solution in instance spider/epinions_1/0011 (852)
	EXPECTED OUTPUT ====

		SELECT T1.title
		FROM item AS T1
		JOIN review AS T2 ON T1.i_id = T2.i_id
		WHERE T2.rating = 10

	  title
	0   ear
	ACTUAL OUTPUT ====

		
		SELECT title
		FROM
		  (SELECT *
		   FROM item AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM review
		           WHERE (rating >= 10)) AS RHS
		        WHERE (LHS.i_id = RHS.i_id) ))
		ORDER BY title

	         title
	0        (28Lb
	1   blue hoodi
	2  blue hoodie
	3  blue hoodie
	4          cup
	5          cup
	6          ear
	7          ear
	8           up
Wrong output for fuzzied solution in instance spider/epinions_1/0028 (854)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM useracct
		WHERE u_id NOT IN
		    (SELECT u_id
		     FROM review)

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT *
		   FROM useracct AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM review AS RHS
		        WHERE (LHS.u_id = RHS.u_id) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_19929.sqlite3'
Memout while getting results...


Wrong output for base solution in instance spider/store_1/0037 (858)
	EXPECTED OUTPUT ====

	   sum_t2_total_
	0          37.62
	ACTUAL OUTPUT ====

		SELECT sum(T2.total)
		FROM customers AS T1
		JOIN invoices AS T2 ON T1.id = T2.customer_id
		WHERE T1.first_name = "Lucas"
		  AND T1.last_name = "Mancini";

	   sum(t2.total)
	0          37.62
Wrong output for ground truth in instance spider/store_1/0037 (858)
Wrong output for base solution in instance spider/store_1/0002 (859)
	EXPECTED OUTPUT ====

	  billing_country  sum_total_
	0          Brazil      190.10
	1          Canada      303.96
	2  Czech Republic       90.24
	3          France      195.10
	4         Germany      156.48
	5        Portugal       77.24
	6             USA      523.06
	7  United Kingdom      112.86
	ACTUAL OUTPUT ====

		SELECT billing_country,
		       SUM(total)
		FROM invoices
		GROUP BY billing_country
		ORDER BY SUM(total) DESC
		LIMIT 8;

	  billing_country  sum(total)
	0        Portugal       77.24
	1  Czech Republic       90.24
	2  United Kingdom      112.86
	3         Germany      156.48
	4          Brazil      190.10
	5          France      195.10
	6          Canada      303.96
	7             USA      523.06
Wrong output for ground truth in instance spider/store_1/0002 (859)
Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_20259.sqlite3'
Memout while getting results...


Timeout while getting results...


Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_20620.sqlite3'
Memout while getting results...


Wrong output for base solution in instance spider/store_1/0003 (866)
	EXPECTED OUTPUT ====

	  billing_country  avg_total_
	0          Norway    5.660000
	1             USA    5.747912
	2           India    5.789231
	3     Netherlands    5.802857
	4         Finland    5.945714
	5         Austria    6.088571
	6  Czech Republic    6.445714
	7         Hungary    6.517143
	8         Ireland    6.517143
	9           Chile    6.660000
	ACTUAL OUTPUT ====

		SELECT billing_country,
		       AVG(total)
		FROM invoices
		GROUP BY billing_country
		ORDER BY AVG(total) DESC
		LIMIT 10;

	  billing_country  avg(total)
	0          Norway    5.660000
	1             USA    5.747912
	2           India    5.789231
	3     Netherlands    5.802857
	4         Finland    5.945714
	5         Austria    6.088571
	6  Czech Republic    6.445714
	7         Hungary    6.517143
	8         Ireland    6.517143
	9           Chile    6.660000
Wrong output for ground truth in instance spider/store_1/0003 (866)
Error while getting results...

Abnormal termination
Timeout while getting results...


Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21198.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21198.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Timeout while getting results...


No solution for instance spider/store_1/0004 (874)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_21716.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Timeout while getting results...


Wrong output for base solution in instance spider/store_1/0016 (879)
	EXPECTED OUTPUT ====

	  billing_state  count___  sum_total_
	0            CA        21      115.86
	ACTUAL OUTPUT ====

		SELECT billing_state,
		       COUNT(*),
		       SUM(total)
		FROM invoices
		WHERE billing_state = "CA";

	  billing_state  count(*)  sum(total)
	0            CA        21      115.86
Wrong output for ground truth in instance spider/store_1/0016 (879)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_22272.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_22561.sqlite3'
Memout while getting results...


Timeout while getting results...


Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_23012.sqlite3'
Memout while getting results...


No solution for instance spider/store_1/0007 (888)
Error while getting results...

Abnormal termination
No solution for instance spider/store_1/0024 (890)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_23305.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_23627.sqlite3'
Memout while getting results...


Timeout while getting results...


Error while executing solution for instance spider/store_1/0014 (897)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT `billing_state`,
       `n` AS `count___`
FROM
  (SELECT `billing_state`,
          COUNT() AS `n`
   FROM
     (SELECT `id`,
             `customer_id`,
             `invoice_date`,
             `billing_address`,
             `billing_city`,
             `billing_state`,
             `billing_country`,
             `billing_postal_code`,
             `total`,
             COUNT(DISTINCT `billing_country`) OVER () AS `n_distinct`
      FROM
        (SELECT *
         FROM `invoices`
         WHERE (`billing_country` = 'USA')))
   GROUP BY billing_state)
ORDER BY billing_state]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_23975.sqlite3'
Memout while getting results...


No solution for instance spider/store_1/0025 (899)
No solution for instance spider/store_1/0011 (900)
Error while getting results...

Abnormal termination
No solution for instance spider/store_1/0010 (902)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_24315.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_24601.sqlite3'
Memout while getting results...


Timeout while getting results...


No solution for instance spider/shop_membership/0022 (912)
Wrong output for fuzzied solution in instance spider/shop_membership/0006 (914)
	EXPECTED OUTPUT ====

		SELECT min(membership_amount),
		       max(membership_amount)
		FROM branch
		WHERE open_year = 2011
		  OR city = 'London'

	  min(membership_amount) max(membership_amount)
	0                                    seO1419WVO
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT MIN(`membership_amount`) OVER () AS `min_membership_amount_`,
		                                              `maxmembership_amount` AS `max_membership_amount_`
		FROM
		  (SELECT `branch_id`,
		          `name`,
		          `open_year`,
		          `address_road`,
		          `city`,
		          `membership_amount`,
		          MAX(`membership_amount`) OVER () AS `maxmembership_amount`
		   FROM
		     (SELECT *
		      FROM `branch`
		      WHERE (`city` = 'London')))
		ORDER BY min_membership_amount_

	  min_membership_amount_ max_membership_amount_
	0                     57             seO1419WVO
Wrong output for fuzzied solution in instance spider/shop_membership/0004 (915)
	EXPECTED OUTPUT ====

		SELECT DISTINCT city
		FROM branch
		WHERE membership_amount >= 100

	           city
	0  9gFOxfordE3E
	1         Oxfor
	2        Y8JK6N
	ACTUAL OUTPUT ====

		
		SELECT city
		FROM
		  (SELECT city
		   FROM branch INTERSECT SELECT city
		   FROM branch)
		ORDER BY city

	           city
	0        602TIh
	1  9gFOxfordE3E
	2         Oxfor
	3        Y8JK6N
No solution for instance spider/shop_membership/0012 (916)
Wrong output for fuzzied solution in instance spider/shop_membership/0015 (917)
	EXPECTED OUTPUT ====

		SELECT T2.name,
		       T2.open_year
		FROM membership_register_branch AS T1
		JOIN branch AS T2 ON T1.branch_id = T2.branch_id
		WHERE T1.register_year = 2016
		GROUP BY T2.branch_id
		ORDER BY count(*) DESC
		LIMIT 1

	                    name open_year
	0  bYRBrooke GrevillevH9      2000
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name,
		                open_year
		FROM
		  (SELECT LHS.branch_id AS branch_id,
		          LHS.name AS name,
		          LHS.open_year AS open_year,
		          LHS.address_road AS address_road,
		          LHS.city AS city,
		          LHS.membership_amount AS membership_amount,
		          RHS.branch_id AS branch_id_other,
		          RHS.register_year AS register_year
		   FROM branch AS LHS
		   INNER JOIN
		     (SELECT branch_id,
		             register_year,
		             COUNT(DISTINCT register_year) AS n_distinct
		      FROM membership_register_branch
		      WHERE (register_year = 2016)
		      GROUP BY branch_id,
		               register_year) AS RHS ON (LHS.branch_id = RHS.n_distinct))
		ORDER BY name

	              name open_year
	0  Brooke Greville      2000
Wrong output for fuzzied solution in instance spider/shop_membership/0005 (918)
	EXPECTED OUTPUT ====

		SELECT open_year
		FROM branch
		GROUP BY open_year
		HAVING count(*) >= 2

	  open_year
	0      2000
	1      2002
	ACTUAL OUTPUT ====

		
		SELECT open_year
		FROM
		  (SELECT city,
		          open_year,
		          COUNT() AS n
		   FROM branch
		   GROUP BY city,
		            open_year)
		WHERE (n = 2)
		ORDER BY open_year

	  open_year
	0      2000
Wrong output for fuzzied solution in instance spider/shop_membership/0020 (920)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM purchase AS T1
		JOIN member AS T2 ON T1.member_id = T2.member_id
		WHERE T2.level = 6

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT LHS.member_id AS member_id,
		          LHS.branch_id AS branch_id,
		          LHS.year AS YEAR,
		          LHS.total_pounds AS total_pounds,
		          RHS.card_number AS card_number,
		          RHS.name AS name,
		          RHS.hometown AS hometown,
		          RHS.level AS LEVEL
		   FROM purchase AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM member
		      WHERE (LEVEL = 6)) AS RHS ON (LHS.member_id = RHS.member_id))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for base solution in instance spider/shop_membership/0019 (921)
	EXPECTED OUTPUT ====

	   sum_total_pounds_
	0            3531.59
	ACTUAL OUTPUT ====

		SELECT sum(total_pounds)
		FROM purchase AS T1
		JOIN branch AS T2 ON T1.branch_id = T2.branch_id
		WHERE T2.city = 'London'
		  AND T1.year = 2018

	   sum(total_pounds)
	0            3531.59
Wrong output for ground truth in instance spider/shop_membership/0019 (921)
Wrong output for fuzzied solution in instance spider/shop_membership/0007 (922)
	EXPECTED OUTPUT ====

		SELECT city,
		       count(*)
		FROM branch
		WHERE open_year < 2010
		GROUP BY city

	     city  count(*)
	0  London         1
	1   Oxfor         1
	2  Oxford         2
	ACTUAL OUTPUT ====

		
		SELECT city,
		       COUNT(*) OVER () AS count___
		FROM
		  (SELECT city,
		          COUNT() AS n
		   FROM branch
		   GROUP BY city)
		WHERE (n != 2010)
		ORDER BY city

	          city  count___
	0  2y(nXLondon         5
	1        Londo         5
	2       London         5
	3        Oxfor         5
	4       Oxford         5
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Error while executing solution for instance spider/shop_membership/0011 (926)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/shop_membership/0011 (926)
Wrong output for fuzzied solution in instance spider/shop_membership/0010 (927)
	EXPECTED OUTPUT ====

		SELECT LEVEL
		FROM member
		GROUP BY LEVEL
		ORDER BY count(*) DESC
		LIMIT 1

	   level
	0      8
	ACTUAL OUTPUT ====

		
		SELECT LEVEL
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LEVEL,
		                name,
		                COUNT() AS n
		         FROM member
		         GROUP BY LEVEL,
		                  name)
		      ORDER BY name)
		   LIMIT 1)

	   level
	0      4
No solution for instance spider/movie_1/0037 (930)
No solution for instance spider/movie_1/0036 (932)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/movie_1/0039 (935)
	EXPECTED OUTPUT ====

		SELECT T2.title
		FROM Rating AS T1
		JOIN Movie AS T2 ON T1.mID = T2.mID
		WHERE T1.stars BETWEEN 3 AND 5

	              title
	0            Avatar
	1            Avatar
	2            Avatar
	3              E.T.
	4              E.T.
	5              E.T.
	6              E.T.
	7              E.T.
	8              E.T.
	9            Titani
	10           Titani
	11           Titani
	12           Titani
	13           Titani
	14           Titani
	15          Titanic
	16          Titanic
	17          Titanic
	18     Titanic9awO)
	19     Titanic9awO)
	20     Titanic9awO)
	21     Titanic9awO)
	22  eOAwMSnow White
	23  eOAwMSnow White
	24  eOAwMSnow White
	25  eOAwMSnow White
	26  eOAwMSnow White
	27  eOAwMSnow White
	28           itanic
	29           itanic
	30           itanic
	31           itanic
	32        now White
	33        now White
	34        now White
	35        now White
	ACTUAL OUTPUT ====

		
		SELECT title
		FROM
		  (SELECT LHS.mid AS mid,
		          LHS.title AS title,
		          LHS.year AS YEAR,
		          LHS.director AS director,
		          RHS.rid AS rid,
		          RHS.stars AS stars,
		          RHS.ratingdate AS ratingdate
		   FROM movie AS LHS
		   INNER JOIN rating AS RHS ON (LHS.mid = RHS.mid))
		WHERE (stars >= 3
		       OR stars >= 5)
		ORDER BY title

	              title
	0            Avatar
	1            Avatar
	2            Avatar
	3            Avatar
	4            Avatar
	5            Avatar
	6              E.T.
	7              E.T.
	8              E.T.
	9              E.T.
	10             E.T.
	11             E.T.
	12             E.T.
	13           Titani
	14           Titani
	15           Titani
	16           Titani
	17           Titani
	18           Titani
	19          Titanic
	20          Titanic
	21          Titanic
	22          Titanic
	23          Titanic
	24          Titanic
	25     Titanic9awO)
	26     Titanic9awO)
	27     Titanic9awO)
	28     Titanic9awO)
	29  eOAwMSnow White
	30  eOAwMSnow White
	31  eOAwMSnow White
	32  eOAwMSnow White
	33  eOAwMSnow White
	34  eOAwMSnow White
	35  eOAwMSnow White
	36           itanic
	37           itanic
	38           itanic
	39           itanic
	40        now White
	41        now White
	42        now White
	43        now White
Wrong output for fuzzied solution in instance spider/movie_1/0038 (936)
	EXPECTED OUTPUT ====

		SELECT T2.title,
		       T1.mID
		FROM Rating AS T1
		JOIN Movie AS T2 ON T1.mID = T2.mID
		GROUP BY T1.mID
		ORDER BY count(*) DESC
		LIMIT 1

	  title  mid
	0  E.T.  108
	ACTUAL OUTPUT ====

		
		SELECT title,
		       mid
		FROM
		  (SELECT LHS.mid AS mid,
		          LHS.title AS title,
		          LHS.year AS YEAR,
		          LHS.director AS director,
		          RHS.stars AS stars,
		          RHS.n AS n
		   FROM movie AS LHS
		   LEFT JOIN
		     (SELECT mid,
		             stars,
		             COUNT() AS n
		      FROM rating
		      GROUP BY mid,
		               stars) AS RHS ON (LHS.mid = RHS.mid))
		WHERE (n != 1)
		ORDER BY title

	              title  mid
	0            itanic  100
	1            Avatar  101
	2            Avatar  101
	3            Avatar  101
	4      Titanic9awO)  102
	5      Titanic9awO)  102
	6      Titanic9awO)  102
	7   eOAwMSnow White  104
	8   eOAwMSnow White  104
	9         now White  105
	10          Titanic  106
	11          Titanic  106
	12             E.T.  108
	13             E.T.  108
	14             E.T.  108
	15           Titani  109
Wrong output for fuzzied solution in instance spider/movie_1/0003 (937)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Movie
		WHERE YEAR < 2000

	   count(*)
	0        11
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT YEAR) AS n_distinct
		   FROM
		     (SELECT *
		      FROM movie
		      WHERE (YEAR <= 2000)))
		ORDER BY count___

	   count___
	0        10
Wrong output for fuzzied solution in instance spider/movie_1/0027 (938)
	EXPECTED OUTPUT ====

		SELECT T1.title,
		       T1.director
		FROM Movie AS T1
		JOIN Movie AS T2 ON T1.director = T2.director
		WHERE T1.title != T2.title
		ORDER BY T1.director,
		         T1.title

	             title          director
	0             E.T.      George Lucas
	1             E.T.      George Lucas
	2           Titani      George Lucas
	3           Titani      George Lucas
	4           itanic      George Lucas
	5           itanic      George Lucas
	6             E.T.  Steven Spielberg
	7  eOAwMSnow White  Steven Spielberg
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT title,
		                director
		FROM
		  (SELECT LHS.mid AS mid,
		          LHS.title AS title,
		          LHS.year AS YEAR,
		          LHS.director AS director,
		          LHS.mid_other AS mid_other,
		          LHS.title_other AS title_other,
		          LHS.year_other AS year_other,
		          RHS.mid AS mid_other_other,
		          RHS.title AS title_other_other,
		          RHS.year AS year_other_other,
		          RHS.director AS director_other
		   FROM
		     (SELECT LHS.mid AS mid,
		             LHS.title AS title,
		             LHS.year AS YEAR,
		             LHS.director AS director,
		             RHS.mid AS mid_other,
		             RHS.title AS title_other,
		             RHS.year AS year_other
		      FROM movie AS LHS
		      INNER JOIN movie AS RHS ON (LHS.director = RHS.director)) AS LHS
		   CROSS JOIN movie AS RHS)
		WHERE (title != title_other)
		ORDER BY title

	             title          director
	0             E.T.      George Lucas
	1           Titani      George Lucas
	2           itanic      George Lucas
	3             E.T.  Steven Spielberg
	4  eOAwMSnow White  Steven Spielberg
No solution for instance spider/movie_1/0048 (939)
Wrong output for fuzzied solution in instance spider/movie_1/0030 (941)
	EXPECTED OUTPUT ====

		SELECT director
		FROM Movie
		WHERE director != "null"
		GROUP BY director
		HAVING count(*) = 1

	                 director
	0       )OzKXGeorge Lucas
	1                    9iAJ
	2  F5GSteven SpielbergvdX
	3            George Lucas
	4       George LucasGZPyL
	5                  RX7Cql
	6        cnt)41ekgk3Y2UHq
	7                 eoAXQxM
	8  tEYSteven Spielberg7ve
	ACTUAL OUTPUT ====

		
		SELECT director
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT director,
		                COUNT() AS n
		         FROM movie
		         GROUP BY director)
		      WHERE (n = 1)) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT director,
		                  COUNT() AS n
		           FROM movie
		           GROUP BY director) AS RHS
		        WHERE (LHS.director = RHS.director
		               AND LHS.n = RHS.n) ))
		ORDER BY director

	                 director
	0       )OzKXGeorge Lucas
	1                    9iAJ
	2  F5GSteven SpielbergvdX
	3            George Lucas
	4       George LucasGZPyL
	5                  RX7Cql
	6        cnt)41ekgk3Y2UHq
	7                 eoAXQxM
	8                    null
	9  tEYSteven Spielberg7ve
No solution for instance spider/movie_1/0006 (943)
Wrong output for fuzzied solution in instance spider/movie_1/0004 (944)
	EXPECTED OUTPUT ====

		SELECT director
		FROM Movie
		WHERE title = 'Avatar'

	           director
	0      George Lucas
	1      George Lucas
	2  Steven Spielberg
	3  dU4m2tJoVGBQsCaD
	ACTUAL OUTPUT ====

		
		SELECT `director`
		FROM
		  (SELECT `director`
		   FROM `movie`
		   WHERE (`title` = 'Avatar') INTERSECT
		     SELECT director
		     FROM movie)
		ORDER BY director

	           director
	0      George Lucas
	1  Steven Spielberg
	2  dU4m2tJoVGBQsCaD
Wrong output for fuzzied solution in instance spider/movie_1/0012 (945)
	EXPECTED OUTPUT ====

		SELECT T2.name,
		       avg(T1.stars)
		FROM Rating AS T1
		JOIN Reviewer AS T2 ON T1.rID = T2.rID
		GROUP BY T2.name

	            name  avg(t1.stars)
	0    Daniel Lewi       3.000000
	1   ike Anderson       3.294118
	2  Mike Anderson       3.441176
	3   Daniel Lewis       3.500000
	ACTUAL OUTPUT ====

		
		SELECT name,
		       meanstars AS avg_t1_stars_
		FROM
		  (SELECT name,
		          rid,
		          AVG(stars) AS meanstars
		   FROM
		     (SELECT LHS.rid AS rid,
		             LHS.name AS name,
		             RHS.mid AS mid,
		             RHS.stars AS stars,
		             RHS.ratingdate AS ratingdate
		      FROM reviewer AS LHS
		      INNER JOIN rating AS RHS ON (LHS.rid = RHS.rid))
		   GROUP BY name,
		            rid)
		ORDER BY name

	            name  avg_t1_stars_
	0    Daniel Lewi       3.000000
	1  Mike Anderson       3.000000
	2   ike Anderson       3.294118
	3   Daniel Lewis       3.500000
	4  Mike Anderson       4.153846
Wrong output for fuzzied solution in instance spider/movie_1/0026 (946)
	EXPECTED OUTPUT ====

		SELECT DISTINCT title
		FROM Movie
		EXCEPT
		SELECT T2.title
		FROM Rating AS T1
		JOIN Movie AS T2 ON T1.mID = T2.mID
		JOIN Reviewer AS T3 ON T1.rID = T3.rID
		WHERE T3.name = 'Chris Jackson'

	                        title
	0       0u2u))wI 8KS5YWKETCHc
	1                     4PBCGtW
	2                 AvatarBl)T2
	3   BLNHSBZoNCL4RkijDp65bv52o
	4                Ii6KbI)cZomP
	5           PxC2N3F9Xd)GpKLkv
	6      aiders of the Lost Ark
	7              fyvhoStar Wars
	8             ieqStar Wars XI
	9      ue1ECShc3zYtwDkYfwOCG3
	10     vjOXBFPDFBNNPMa8GDsEuk
	11                     yrd3dD
	12            yuDStar WarslA8
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT *
		   FROM `movie` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `rating` AS `LHS`
		           WHERE EXISTS
		               (SELECT 1
		                FROM
		                  (SELECT *
		                   FROM `reviewer`
		                   WHERE (`name` = 'Chris Jackson')) AS RHS
		                WHERE (LHS.rid = RHS.rid) )) AS RHS
		        WHERE (LHS.mid = RHS.mid) ))
		ORDER BY title

	                        title
	0       0u2u))wI 8KS5YWKETCHc
	1                     4PBCGtW
	2                 AvatarBl)T2
	3   BLNHSBZoNCL4RkijDp65bv52o
	4                Ii6KbI)cZomP
	5           PxC2N3F9Xd)GpKLkv
	6     Raiders of the Lost Ark
	7     Raiders of the Lost Ark
	8     Raiders of the Lost Ark
	9     Raiders of the Lost Ark
	10    Raiders of the Lost Ark
	11    Raiders of the Lost Ark
	12                  Star Wars
	13                  Star Wars
	14     aiders of the Lost Ark
	15             fyvhoStar Wars
	16            ieqStar Wars XI
	17     ue1ECShc3zYtwDkYfwOCG3
	18     vjOXBFPDFBNNPMa8GDsEuk
	19                     yrd3dD
	20            yuDStar WarslA8
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/movie_1/0032 (950)
	EXPECTED OUTPUT ====

		SELECT T2.title,
		       avg(T1.stars)
		FROM Rating AS T1
		JOIN Movie AS T2 ON T1.mID = T2.mID
		GROUP BY T1.mID
		ORDER BY avg(T1.stars) DESC
		LIMIT 1

	     title  avg(t1.stars)
	0  Titanic       4.833333
	ACTUAL OUTPUT ====

		
		SELECT title,
		       meanstars AS avg_t1_stars_
		FROM
		  (SELECT *
		   FROM
		     (SELECT director,
		             title,
		             AVG(stars) AS meanstars
		      FROM
		        (SELECT LHS.mid AS mid,
		                LHS.title AS title,
		                LHS.year AS YEAR,
		                LHS.director AS director,
		                RHS.rid AS rid,
		                RHS.stars AS stars,
		                RHS.ratingdate AS ratingdate
		         FROM movie AS LHS
		         INNER JOIN rating AS RHS ON (LHS.mid = RHS.mid))
		      GROUP BY director,
		               title) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM movie AS RHS
		        WHERE (LHS.director = RHS.director) ))
		ORDER BY title

	Empty DataFrame
	Columns: [title, avg_t1_stars_]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/movie_1/0041 (953)
	EXPECTED OUTPUT ====

		SELECT mID,
		       avg(stars)
		FROM Rating
		WHERE mID NOT IN
		    (SELECT T1.mID
		     FROM Rating AS T1
		     JOIN Reviewer AS T2 ON T1.rID = T2.rID
		     WHERE T2.name = "Brittany Harris")
		GROUP BY mID

	   mid  avg(stars)
	0  100    2.714286
	1  106    2.875000
	2  102    3.000000
	3  101    3.200000
	4  105    3.250000
	5  108    3.250000
	6  104    3.400000
	7  107    3.500000
	8  109    4.200000
	ACTUAL OUTPUT ====

		
		SELECT `mid`,
		       `meanstars` AS `avg_stars_`
		FROM
		  (SELECT `LHS`.`rid` AS `rid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`mid` AS `mid`,
		          `LHS`.`stars` AS `stars`,
		          `LHS`.`ratingdate` AS `ratingdate`,
		          `RHS`.`meanstars` AS `meanstars`
		   FROM
		     (SELECT `LHS`.`rid` AS `rid`,
		             `LHS`.`name` AS `name`,
		             `RHS`.`mid` AS `mid`,
		             `RHS`.`stars` AS `stars`,
		             `RHS`.`ratingdate` AS `ratingdate`
		      FROM `reviewer` AS `LHS`
		      INNER JOIN `rating` AS `RHS` ON (`LHS`.`rid` = `RHS`.`rid`)) AS `LHS`
		   INNER JOIN
		     (SELECT `mid`,
		             AVG(`stars`) AS `meanstars`
		      FROM `rating`
		      GROUP BY `mid`) AS `RHS` ON (`LHS`.`mid` = `RHS`.`mid`))
		WHERE (`name` != 'Brittany Harris'
		       AND meanstars > stars)
		ORDER BY mid

	    mid  avg_stars_
	0   100    2.714286
	1   100    2.714286
	2   100    2.714286
	3   106    2.875000
	4   106    2.875000
	5   106    2.875000
	6   102    3.000000
	7   102    3.000000
	8   102    3.000000
	9   102    3.000000
	10  101    3.200000
	11  101    3.200000
	12  101    3.200000
	13  101    3.200000
	14  105    3.250000
	15  105    3.250000
	16  108    3.250000
	17  108    3.250000
	18  108    3.250000
	19  108    3.250000
	20  108    3.250000
	21  108    3.250000
	22  108    3.250000
	23  104    3.400000
	24  104    3.400000
	25  107    3.500000
	26  107    3.500000
	27  107    3.500000
	28  107    3.500000
	29  109    4.200000
	30  109    4.200000
	31  109    4.200000
	32  109    4.200000
No solution for instance spider/movie_1/0035 (954)
Wrong output for fuzzied solution in instance spider/movie_1/0020 (955)
	EXPECTED OUTPUT ====

		SELECT T3.name,
		       T2.title,
		       T1.stars,
		       T1.ratingDate
		FROM Rating AS T1
		JOIN Movie AS T2 ON T1.mID = T2.mID
		JOIN Reviewer AS T3 ON T1.rID = T3.rID
		ORDER BY T3.name,
		         T2.title,
		         T1.stars

	                      name                         title       stars  ratingdate
	0    (ONBrittany HarrisJuT              b)MaWRmGuzjwWcCZ           2  1829-01-31
	1    (ONBrittany HarrisJuT       Raiders of the Lost Ark           1  2010-04-06
	2    (ONBrittany HarrisJuT                    2CqE.T.p21           3  2011-01-06
	3    (ONBrittany HarrisJuT  kxG42Raiders of the Lost Ark           5  2011-01-15
	4    (ONBrittany HarrisJuT                          E.T.           6  2011-01-22
	..                     ...                           ...         ...         ...
	114      yRb14Ashley White                 BgNsqiu0Iqjyu  1146195505  1906-12-23
	115      yRb14Ashley White        Raiders of the Lost Ar           1  2011-01-22
	116    zhYChris JacksonAB2                    Snow White  9434707334  1823-01-30
	117    zhYChris JacksonAB2       Raiders of the Lost Ark  1838293710  2011-01-02
	118    zhYChris JacksonAB2       Raiders of the Lost Ark  6543471896  2011-01-18
	
	[119 rows x 4 columns]
	ACTUAL OUTPUT ====

		
		SELECT name,
		       title,
		       stars,
		       ratingdate
		FROM
		  (SELECT LHS.rid AS rid,
		          LHS.name AS name,
		          RHS.mid AS mid,
		          RHS.title AS title,
		          RHS.year AS YEAR,
		          RHS.director AS director,
		          RHS.stars AS stars,
		          RHS.ratingdate AS ratingdate
		   FROM reviewer AS LHS
		   LEFT JOIN
		     (SELECT LHS.mid AS mid,
		             LHS.title AS title,
		             LHS.year AS YEAR,
		             LHS.director AS director,
		             RHS.rid AS rid,
		             RHS.stars AS stars,
		             RHS.ratingdate AS ratingdate
		      FROM movie AS LHS
		      LEFT JOIN rating AS RHS ON (LHS.mid = RHS.mid)) AS RHS ON (LHS.rid = RHS.rid))
		ORDER BY name

	                      name                         title         stars  ratingdate
	0    (ONBrittany HarrisJuT              b)MaWRmGuzjwWcCZ  2.000000e+00  1829-01-31
	1    (ONBrittany HarrisJuT       Raiders of the Lost Ark  1.000000e+00  2010-04-06
	2    (ONBrittany HarrisJuT                    2CqE.T.p21  3.000000e+00  2011-01-06
	3    (ONBrittany HarrisJuT  kxG42Raiders of the Lost Ark  5.000000e+00  2011-01-15
	4    (ONBrittany HarrisJuT                          E.T.  6.000000e+00  2011-01-22
	..                     ...                           ...           ...         ...
	116      yRb14Ashley White                 BgNsqiu0Iqjyu  1.146196e+09  1906-12-23
	117      yRb14Ashley White        Raiders of the Lost Ar  1.000000e+00  2011-01-22
	118    zhYChris JacksonAB2                    Snow White  9.434707e+09  1823-01-30
	119    zhYChris JacksonAB2       Raiders of the Lost Ark  1.838294e+09  2011-01-02
	120    zhYChris JacksonAB2       Raiders of the Lost Ark  6.543472e+09  2011-01-18
	
	[121 rows x 4 columns]
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for base solution in instance spider/movie_1/0043 (963)
	EXPECTED OUTPUT ====

	   mid  avg_stars_
	0  103    2.500000
	1  104    2.500000
	2  101    3.000000
	3  108    3.333333
	4  107    4.000000
	5  106    4.500000
	ACTUAL OUTPUT ====

		SELECT mID,
		       avg(stars)
		FROM Rating
		GROUP BY mID
		HAVING count(*) >= 2

	   mid  avg(stars)
	0  103    2.500000
	1  104    2.500000
	2  101    3.000000
	3  108    3.333333
	4  107    4.000000
	5  106    4.500000
Wrong output for ground truth in instance spider/movie_1/0043 (963)
Wrong output for fuzzied solution in instance spider/movie_1/0047 (965)
	EXPECTED OUTPUT ====

		SELECT title
		FROM Movie
		WHERE director = "James Cameron"
		  OR YEAR < 1980

	    title
	0   Avata
	1   Avata
	2  itanic
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT `title`
		   FROM `movie`
		   WHERE (`director` = 'James Cameron'
		          OR `year` < 1980) INTERSECT
		     SELECT `title`
		     FROM `movie` WHERE (`director` = 'James Cameron'
		                            OR YEAR < 1980))
		ORDER BY title

	    title
	0   Avata
	1  itanic
No solution for instance spider/movie_1/0025 (967)
Wrong output for fuzzied solution in instance spider/movie_1/0011 (968)
	EXPECTED OUTPUT ====

		SELECT T1.director,
		       T1.title
		FROM Movie AS T1
		JOIN Rating AS T2 ON T1.mID = T2.mID
		WHERE T2.stars = 5

	                director                         title
	0           George Lucas                        Avatar
	1      George LucasEun2W                    Snow White
	2      George LucasEun2W                    Snow White
	3   RDXVictor FlemingNfP  Raiders of the Lost Ark9awO)
	4       Steven Spielberg                        Avatar
	5       Steven Spielberg                        Avatar
	6       Steven Spielberg                  eOAwMTitanic
	7  Steven SpielbergLbbl                         itanic
	8      ZiiO5George Lucas       Raiders of the Lost Ark
	ACTUAL OUTPUT ====

		
		SELECT director,
		       title
		FROM
		  (SELECT *
		   FROM movie AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM rating
		           WHERE (stars >= 5)) AS RHS
		        WHERE (LHS.mid = RHS.mid) ))
		ORDER BY director

	                director                         title
	0           George Lucas                        Avatar
	1           George Lucas        Raiders of the Lost Ar
	2      George LucasEun2W                    Snow White
	3   RDXVictor FlemingNfP  Raiders of the Lost Ark9awO)
	4       Steven Spielberg                        Avatar
	5       Steven Spielberg                  eOAwMTitanic
	6  Steven SpielbergLbbl                         itanic
	7      ZiiO5George Lucas       Raiders of the Lost Ark
Wrong output for fuzzied solution in instance spider/movie_1/0040 (972)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Rating AS T1
		JOIN Reviewer AS T2 ON T1.rID = T2.rID
		WHERE T1.stars > 3

	                  name
	0      Brittany Harris
	1      Brittany Harris
	2      Brittany Harris
	3      Brittany Harris
	4      Brittany Harris
	5        Chris Jackson
	6        Chris Jackson
	7        Chris Jackson
	8        Chris Jackson
	9        Chris Jackson
	10       Chris Jackson
	11       Chris Jackson
	12       Chris Jackson
	13       Chris Jackson
	14       Chris Jackson
	15       Chris Jackson
	16       Chris Jackson
	17       Chris Jackson
	18       Chris Jackson
	19       Chris Jackson
	20       Chris Jackson
	21       Chris Jackson
	22       Chris Jackson
	23       Chris Jackson
	24  N2)TPChris Jackson
	25  N2)TPChris Jackson
	26  N2)TPChris Jackson
	27  N2)TPChris Jackson
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM reviewer AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM rating
		           WHERE (stars != 3)) AS RHS
		        WHERE (LHS.rid = RHS.rid) ))
		ORDER BY name

	                 name
	0     Brittany Harris
	1     Brittany Harris
	2       Chris Jackson
	3       Chris Jackson
	4       Chris Jackson
	5       Chris Jackson
	6  N2)TPChris Jackson
Wrong output for fuzzied solution in instance spider/movie_1/0028 (973)
	EXPECTED OUTPUT ====

		SELECT T1.title,
		       T1.year
		FROM Movie AS T1
		JOIN Movie AS T2 ON T1.director = T2.director
		WHERE T1.title != T2.title

	             title  year
	0             E.T.  1982
	1             E.T.  1982
	2             E.T.  2010
	3           Titani  1982
	4           Titani  1982
	5  eOAwMSnow White  1983
	6           itanic  2010
	7           itanic  2010
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT title,
		                YEAR
		FROM
		  (SELECT LHS.mid AS mid,
		          LHS.title AS title,
		          LHS.year AS YEAR,
		          LHS.director AS director,
		          LHS.mid_other AS mid_other,
		          LHS.title_other AS title_other,
		          LHS.year_other AS year_other,
		          RHS.mid AS mid_other_other,
		          RHS.title AS title_other_other,
		          RHS.year AS year_other_other,
		          RHS.director AS director_other
		   FROM
		     (SELECT LHS.mid AS mid,
		             LHS.title AS title,
		             LHS.year AS YEAR,
		             LHS.director AS director,
		             RHS.mid AS mid_other,
		             RHS.title AS title_other,
		             RHS.year AS year_other
		      FROM movie AS LHS
		      INNER JOIN movie AS RHS ON (LHS.director = RHS.director)) AS LHS
		   CROSS JOIN movie AS RHS)
		WHERE (title != title_other)
		ORDER BY title

	             title  year
	0             E.T.  1982
	1           Titani  1982
	2  eOAwMSnow White  1983
	3             E.T.  2010
	4           itanic  2010
No solution for instance spider/movie_1/0049 (974)
Wrong output for fuzzied solution in instance spider/book_2/0012 (983)
	EXPECTED OUTPUT ====

		SELECT T1.Title
		FROM book AS T1
		JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID
		ORDER BY T2.Price DESC

	                        title
	0                    BrainBan
	1                   BrainBanx
	2                  Dead Corps
	3           Gemini BloodX1ZRi
	4           Gemini BloodX1ZRi
	5           Gemini BloodX1ZRi
	6        The Dome: Ground Zer
	7                    rainBanx
	8  zING4The Dome: Ground Zero
	9  zING4The Dome: Ground Zero
	ACTUAL OUTPUT ====

		
		SELECT title
		FROM
		  (SELECT *
		   FROM book AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM publication AS RHS
		        WHERE (LHS.book_id = RHS.book_id) ))
		ORDER BY title

	                        title
	0                    BrainBan
	1                   BrainBanx
	2                  Dead Corps
	3           Gemini BloodX1ZRi
	4        The Dome: Ground Zer
	5                    rainBanx
	6  zING4The Dome: Ground Zero
Wrong output for fuzzied solution in instance spider/book_2/0015 (984)
	EXPECTED OUTPUT ====

		SELECT Publication_Date
		FROM publication
		GROUP BY Publication_Date
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  publication_date
	0     October 2005
	ACTUAL OUTPUT ====

		
		SELECT publication_date
		FROM
		  (SELECT publication_date,
		          COUNT() AS n
		   FROM
		     (SELECT publication_id,
		             publication_id AS book_id,
		             publisher,
		             publication_date,
		             price,
		             publication_id_other,
		             publisher_other,
		             publication_date_other
		      FROM
		        (SELECT LHS.publication_id AS publication_id,
		                LHS.book_id AS book_id,
		                LHS.publisher AS publisher,
		                LHS.publication_date AS publication_date,
		                LHS.price AS price,
		                RHS.publication_id AS publication_id_other,
		                RHS.publisher AS publisher_other,
		                RHS.publication_date AS publication_date_other
		         FROM publication AS LHS
		         INNER JOIN publication AS RHS ON (LHS.publication_id = RHS.book_id
		                                              AND LHS.price = RHS.price)))
		   GROUP BY publication_date)
		ORDER BY publication_date

	Empty DataFrame
	Columns: [publication_date]
	Index: []
Wrong output for fuzzied solution in instance spider/book_2/0018 (987)
	EXPECTED OUTPUT ====

		SELECT Publisher
		FROM publication
		WHERE Price > 10000000 INTERSECT
		  SELECT Publisher
		  FROM publication WHERE Price < 5000000

	Empty DataFrame
	Columns: [publisher]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT publisher
		FROM publication
		WHERE (price > 10000000.0
		       AND price > 5000000.0)
		ORDER BY publisher

	        publisher
	0   pcsZLIhoDLdOd
	1  pringer Nature
	2   zA1PearsonxP8
Wrong output for fuzzied solution in instance spider/book_2/0020 (988)
	EXPECTED OUTPUT ====

		SELECT Price
		FROM publication
		WHERE Publisher = "Person"
		  OR Publisher = "Wiley"

	          price
	0  3.000000e+06
	1  1.057664e+09
	ACTUAL OUTPUT ====

		
		SELECT `price`
		FROM
		  (SELECT `price`
		   FROM `publication` INTERSECT SELECT `price`
		   FROM `publication`
		   WHERE (`publisher` = 'Wiley'))
		ORDER BY price

	        price
	0  3000000.01
Wrong output for fuzzied solution in instance spider/book_2/0007 (990)
	EXPECTED OUTPUT ====

		SELECT DISTINCT Publisher
		FROM publication
		WHERE Price > 5000000

	               publisher
	0  F1GThomson Reutersq6V
	1                Pearson
	2        Springer Nature
	3        Thomson Reuters
	ACTUAL OUTPUT ====

		
		SELECT publisher
		FROM publication
		WHERE (price > 5000000.0)
		ORDER BY publisher

	               publisher
	0  F1GThomson Reutersq6V
	1                Pearson
	2                Pearson
	3        Springer Nature
	4        Thomson Reuters
	5        Thomson Reuters
No solution for instance spider/book_2/0014 (992)
Wrong output for fuzzied solution in instance spider/book_2/0011 (994)
	EXPECTED OUTPUT ====

		SELECT T1.Writer
		FROM book AS T1
		JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID
		WHERE T2.Price > 4000000

	                  writer
	0      Dave GibbonsWS9Ei
	1  ZKcuzMichael Moorcock
	2            ave Gibbons
	ACTUAL OUTPUT ====

		
		SELECT writer
		FROM
		  (SELECT LHS.book_id AS book_id,
		          LHS.title AS title,
		          LHS.issues AS issues,
		          LHS.writer AS writer,
		          RHS.publication_id AS publication_id,
		          RHS.publisher AS publisher,
		          RHS.publication_date AS publication_date,
		          RHS.price AS price
		   FROM book AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM publication
		      WHERE (price >= 4000000.0)) AS RHS ON (LHS.book_id = RHS.book_id))
		ORDER BY writer

	                  writer
	0      Dave GibbonsWS9Ei
	1  ZKcuzMichael Moorcock
	2            ave Gibbons
	3      eB5Garth EnnisveW
Wrong output for fuzzied solution in instance spider/student_1/0033 (996)
	EXPECTED OUTPUT ====

		SELECT T2.firstname,
		       T2.lastname
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		GROUP BY T2.firstname,
		         T2.lastname
		ORDER BY count(*) DESC
		LIMIT 1

	  firstname lastname
	0     BILLI  KRIENER
	ACTUAL OUTPUT ====

		
		SELECT firstname,
		       lastname
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.lastname AS lastname,
		                LHS.firstname AS firstname,
		                LHS.classroom AS classroom,
		                RHS.grade AS grade,
		                RHS.n AS n
		         FROM teachers AS LHS
		         INNER JOIN
		           (SELECT classroom,
		                   grade,
		                   COUNT() AS n
		            FROM list
		            GROUP BY classroom,
		                     grade) AS RHS ON (LHS.classroom = RHS.classroom))
		      ORDER BY n DESC)
		   LIMIT 1)

	  firstname     lastname
	0      LEIA  kIUSUGAILo5
No solution for instance spider/student_1/0008 (998)
Wrong output for fuzzied solution in instance spider/student_1/0022 (1001)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE T2.firstname = "TARRING"
		  AND T2.lastname = "LEIA"

	   count(*)
	0         5
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT `classroom`
		      FROM `teachers` INTERSECT SELECT `classroom`
		      FROM `list`
		      WHERE (`lastname` = 'TARRING')))
		ORDER BY count___

	   count___
	0         0
Wrong output for fuzzied solution in instance spider/student_1/0030 (1002)
	EXPECTED OUTPUT ====

		SELECT classroom,
		       count(*)
		FROM list
		GROUP BY classroom

	    classroom  count(*)
	0         101         3
	1         102         1
	2         103         2
	3         104         1
	4         105         2
	5         106         2
	6         107         1
	7         108         3
	8         109         6
	9         110         2
	10        111         1
	11        112         1
	ACTUAL OUTPUT ====

		
		SELECT classroom,
		       n AS count___
		FROM
		  (SELECT classroom,
		          grade,
		          COUNT() AS n
		   FROM list
		   GROUP BY classroom,
		            grade)
		ORDER BY classroom

	    classroom  count___
	0         101         1
	1         101         2
	2         102         1
	3         103         1
	4         103         1
	5         104         1
	6         105         1
	7         105         1
	8         106         1
	9         106         1
	10        107         1
	11        108         1
	12        108         1
	13        108         1
	14        109         1
	15        109         1
	16        109         1
	17        109         1
	18        109         2
	19        110         1
	20        110         1
	21        111         1
	22        112         1
Wrong output for fuzzied solution in instance spider/student_1/0004 (1005)
	EXPECTED OUTPUT ====

		SELECT DISTINCT firstname
		FROM list
		WHERE classroom = 107

	           firstname
	0                 RA
	1           RAYcNCkC
	2  6pgXl GUILLERMINA
	ACTUAL OUTPUT ====

		
		SELECT firstname
		FROM
		  (SELECT LHS.lastname AS lastname,
		          LHS.firstname AS firstname,
		          LHS.grade AS grade,
		          LHS.classroom AS classroom
		   FROM list AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM list
		      WHERE (classroom = 107)) AS RHS ON (LHS.lastname = RHS.lastname
		                                          AND LHS.firstname = RHS.firstname
		                                          AND LHS.grade = RHS.grade
		                                          AND LHS.classroom = RHS.classroom))
		ORDER BY firstname

	           firstname
	0                 RA
	1                 RA
	2           RAYcNCkC
	3  6pgXl GUILLERMINA
Wrong output for fuzzied solution in instance spider/student_1/0026 (1007)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.lastname
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE T1.grade = 3
		  AND T2.firstname != "COVIN"
		  AND T2.lastname != "JEROME"

	  lastname
	0  bbqWm5d
	ACTUAL OUTPUT ====

		
		SELECT `lastname`
		FROM
		  (SELECT `LHS`.`lastname` AS `lastname`,
		          `LHS`.`firstname` AS `firstname`,
		          `LHS`.`grade` AS `grade`,
		          `LHS`.`classroom` AS `classroom`
		   FROM
		     (SELECT *
		      FROM `list`
		      WHERE (`lastname` != 'COVIN'
		             AND grade = 3)) AS LHS
		   LEFT JOIN teachers AS RHS ON (LHS.lastname = RHS.lastname
		                                    AND LHS.firstname = RHS.firstname
		                                    AND LHS.classroom = RHS.classroom))
		ORDER BY lastname

	  lastname
	0     8QUL
	1  bbqWm5d
Wrong output for fuzzied solution in instance spider/student_1/0032 (1010)
	EXPECTED OUTPUT ====

		SELECT classroom,
		       count(*)
		FROM list
		WHERE grade = "4"
		GROUP BY classroom

	   classroom  count(*)
	0        102         1
	1        105         1
	2        107         2
	3        109         2
	4        110         3
	5        112         1
	ACTUAL OUTPUT ====

		
		SELECT classroom,
		       n AS count___
		FROM
		  (SELECT classroom,
		          grade,
		          COUNT() AS n
		   FROM list
		   GROUP BY classroom,
		            grade)
		WHERE (grade = 4
		       OR n = grade)
		ORDER BY classroom

	   classroom  count___
	0        100         1
	1        102         1
	2        105         1
	3        107         2
	4        108         2
	5        109         2
	6        109         2
	7        110         3
	8        111         2
	9        112         1
Wrong output for fuzzied solution in instance spider/student_1/0020 (1011)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE T2.firstname = "LORIA"
		  AND T2.lastname = "ONDERSMA"

	   count(*)
	0        14
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `lastname`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`lastname` AS `lastname`,
		                `LHS`.`firstname` AS `firstname`,
		                `LHS`.`grade` AS `grade`,
		                `LHS`.`classroom` AS `classroom`
		         FROM `list` AS `LHS`
		         INNER JOIN `teachers` AS `RHS` ON (`LHS`.`lastname` = `RHS`.`lastname`
		                                               AND `LHS`.`firstname` = `RHS`.`firstname`
		                                               AND `LHS`.`classroom` = `RHS`.`classroom`))
		      WHERE (`lastname` = 'ONDERSMA')))
		ORDER BY count___

	   count___
	0         0
Wrong output for fuzzied solution in instance spider/student_1/0034 (1013)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       classroom
		FROM list
		GROUP BY classroom

	    count(*)  classroom
	0          3        101
	1          1        102
	2          2        103
	3          1        104
	4          2        105
	5          2        106
	6          1        107
	7          3        108
	8          6        109
	9          2        110
	10         1        111
	11         1        112
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       classroom
		FROM
		  (SELECT classroom,
		          grade,
		          COUNT() AS n
		   FROM list
		   GROUP BY classroom,
		            grade)
		ORDER BY count___

	    count___  classroom
	0          1        101
	1          2        101
	2          1        102
	3          1        103
	4          1        103
	5          1        104
	6          1        105
	7          1        105
	8          1        106
	9          1        106
	10         1        107
	11         1        108
	12         1        108
	13         1        108
	14         1        109
	15         1        109
	16         1        109
	17         1        109
	18         2        109
	19         1        110
	20         1        110
	21         1        111
	22         1        112
Wrong output for fuzzied solution in instance spider/student_1/0024 (1014)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE T1.firstname = "MADLOCK"
		  AND T1.lastname = "RAY"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `firstname`) AS `n_distinct`
		   FROM
		     (SELECT `firstname`
		      FROM `list` INTERSECT SELECT `firstname`
		      FROM `teachers`
		      WHERE (`lastname` != 'MADLOCK')))
		ORDER BY count___

	   count___
	0         1
Wrong output for fuzzied solution in instance spider/student_1/0021 (1015)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE T2.firstname = "KAWA"
		  AND T2.lastname = "GORDON"

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `lastname`) AS `n_distinct`
		   FROM
		     (SELECT `lastname`
		      FROM `teachers` INTERSECT SELECT `lastname`
		      FROM `list`
		      WHERE (`lastname` = 'KAWA')))
		ORDER BY count___

	   count___
	0         0
Wrong output for fuzzied solution in instance spider/student_1/0023 (1016)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE T1.firstname = "CHRISSY"
		  AND T1.lastname = "NABOZNY"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM `teachers`
		         WHERE (`lastname` != 'NABOZNY')) AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM list AS RHS
		           WHERE (LHS.classroom = RHS.classroom) )))
		ORDER BY count___

	   count___
	0         1
Wrong output for fuzzied solution in instance spider/student_1/0025 (1020)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.firstname,
		                T1.lastname
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE T1.grade = 1
		EXCEPT
		SELECT T1.firstname,
		       T1.lastname
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE T2.firstname = "OTHA"
		  AND T2.lastname = "MOYER"

	Empty DataFrame
	Columns: [firstname, lastname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `firstname`,
		       `lastname`
		FROM
		  (SELECT `LHS`.`lastname` AS `lastname`,
		          `LHS`.`firstname` AS `firstname`,
		          `LHS`.`grade` AS `grade`,
		          `LHS`.`classroom` AS `classroom`
		   FROM
		     (SELECT *
		      FROM `list`
		      WHERE (`lastname` != 'MOYER'
		             AND grade = 1)) AS LHS
		   LEFT JOIN teachers AS RHS ON (LHS.lastname = RHS.lastname
		                                    AND LHS.firstname = RHS.firstname
		                                    AND LHS.classroom = RHS.classroom))
		ORDER BY firstname

	  firstname     lastname
	0    RODGER  0URHVFLACHS
Wrong output for fuzzied solution in instance spider/student_1/0011 (1021)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.firstname
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE grade = 1

	        firstname
	0           BILLI
	1          BILLIE
	2     BILLIE3UNZE
	3     BILLIEFZjIj
	4             LEI
	5            LEIA
	6       LEIA3cv)u
	7       LEIA6Mbeh
	8       LEIA9awO)
	9       LEIAFHAwK
	10      LEIANXR0y
	11      LEIAtYIwj
	12      LEIAxSLiv
	13  8C  BILLIERJC
	14     AwM2u LEIA
	15         BILLIE
	16  G4v BILLIET90
	17  GFR BILLIEUVZ
	18    HQC LEIAHFd
	19           LEIA
	20     Ofqe3 LEIA
	21    RDX LEIANfP
	22   SXvfl BILLIE
	23     Vv6kp LEIA
	24   Y8nq4 BILLIE
	25     ZKcuz LEIA
	26    bYR LEIAvH9
	27    eB5 LEIAveW
	28   eu4)1 BILLIE
	29     gNjjN LEIA
	30     i4J85 LEIA
	31     jGwmt LEIA
	32    kIU LEIALo5
	33    lGP LEIAkMe
	34   oMm1F BILLIE
	35   p2lyd BILLIE
	36  pLJ BILLIEFWa
	37   rqrHJ BILLIE
	38    vDE LEIAK6X
	39     z6 Nv LEIA
	ACTUAL OUTPUT ====

		
		SELECT firstname
		FROM
		  (SELECT *
		   FROM teachers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM list AS LHS
		           WHERE EXISTS
		               (SELECT 1
		                FROM
		                  (SELECT *
		                   FROM list
		                   WHERE (grade != 1)) AS RHS
		                WHERE (LHS.lastname = RHS.lastname
		                       AND LHS.firstname = RHS.firstname
		                       AND LHS.grade = RHS.grade
		                       AND LHS.classroom = RHS.classroom) )) AS RHS
		        WHERE (LHS.classroom = RHS.classroom) ))
		ORDER BY firstname

	Empty DataFrame
	Columns: [firstname]
	Index: []
Wrong output for fuzzied solution in instance spider/student_1/0029 (1022)
	EXPECTED OUTPUT ====

		SELECT classroom
		FROM list
		GROUP BY classroom
		ORDER BY count(*) DESC
		LIMIT 1

	   classroom
	0        110
	ACTUAL OUTPUT ====

		
		SELECT classroom
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT classroom,
		                COUNT() AS n
		         FROM list
		         GROUP BY classroom)
		      ORDER BY n DESC)
		   LIMIT 1)

	   classroom
	0        102
Wrong output for fuzzied solution in instance spider/student_1/0010 (1023)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.lastname
		FROM list AS T1
		JOIN teachers AS T2 ON T1.classroom = T2.classroom
		WHERE grade = 5

	          lastname
	0    ()8KRIENER47v
	1    (YoKRIENER8nt
	2    0J2KRIENERQ9B
	3       6btqGSUGAI
	4      6jzSUGAI Df
	5             COVI
	6            COVIN
	7      DIeCOVINv)D
	8    F sqGONDERSMA
	9       K(BR9MOYER
	10          KRIENE
	11         KRIENER
	12    KRIENEROuqno
	13    KRIENERtDdnG
	14     MA6COVINcLn
	15            MOYE
	16           MOYER
	17      MOYERB1Efy
	18      MOYERwHVqK
	19         ONDERSM
	20        ONDERSMA
	21   ONDERSMAfwsK7
	22            OVIN
	23            OYER
	24    OtJiUKRIENER
	25      QF67VMOYER
	26   RFmjfONDERSMA
	27      RHVeiCOVIN
	28          RIENER
	29            SUGA
	30           SUGAI
	31      SUGAIHEAmJ
	32      SUGAIW9jZ1
	33            UGAI
	34  V8RONDERSMAX5o
	35     YMCCOVINMrg
	36    Z6gm7KRIENER
	37     auPCOVINUBs
	38      bPoTqMOYER
	39     c9cCOVINn2R
	40      f55TDCOVIN
	41   gUdkrONDERSMA
	42     gXlMOYERm8f
	43     nViSUGAIU)d
	44     oTbMOYERGgN
	45      re3UeSUGAI
	46     ruGSUGAIb1e
	47      tW3ZpSUGAI
	ACTUAL OUTPUT ====

		
		SELECT lastname
		FROM
		  (SELECT *
		   FROM teachers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT LHS.lastname AS lastname,
		                     LHS.firstname AS firstname,
		                     LHS.grade AS grade,
		                     LHS.classroom AS classroom,
		                     RHS.lastname AS lastname_other,
		                     RHS.firstname AS firstname_other,
		                     RHS.grade AS grade_other,
		                     RHS.classroom AS classroom_other
		              FROM list AS LHS
		              CROSS JOIN
		                (SELECT *
		                 FROM list
		                 WHERE (grade != 5)) AS RHS)
		           WHERE (grade = grade_other)) AS RHS
		        WHERE (LHS.classroom = RHS.classroom) ))
		ORDER BY lastname

	Empty DataFrame
	Columns: [lastname]
	Index: []
Wrong output for fuzzied solution in instance spider/student_1/0028 (1024)
	EXPECTED OUTPUT ====

		SELECT classroom,
		       count(DISTINCT grade)
		FROM list
		GROUP BY classroom

	    classroom  count(distinct grade)
	0         101                      2
	1         102                      1
	2         103                      2
	3         104                      1
	4         105                      2
	5         106                      2
	6         107                      1
	7         108                      3
	8         109                      5
	9         110                      2
	10        111                      1
	11        112                      1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT classroom,
		                n AS count_distinct_grade_
		FROM
		  (SELECT classroom,
		          lastname,
		          COUNT() AS n
		   FROM
		     (SELECT classroom,
		             lastname,
		             COUNT() AS n
		      FROM list
		      GROUP BY classroom,
		               lastname)
		   GROUP BY classroom,
		            lastname)
		ORDER BY classroom

	    classroom  count_distinct_grade_
	0         101                      1
	1         102                      1
	2         103                      1
	3         104                      1
	4         105                      1
	5         106                      1
	6         107                      1
	7         108                      1
	8         109                      1
	9         110                      1
	10        111                      1
	11        112                      1
Wrong output for fuzzied solution in instance spider/student_1/0031 (1025)
	EXPECTED OUTPUT ====

		SELECT classroom,
		       count(*)
		FROM list
		WHERE grade = "0"
		GROUP BY classroom

	   classroom  count(*)
	0        101         1
	1        105         2
	2        108         3
	3        109         5
	4        110         3
	5        111         2
	6        112         1
	ACTUAL OUTPUT ====

		
		SELECT classroom,
		       n AS count___
		FROM
		  (SELECT classroom,
		          grade,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM list
		      WHERE (grade <= 0))
		   GROUP BY classroom,
		            grade)
		ORDER BY classroom

	    classroom  count___
	0         100         1
	1         101         1
	2         102         1
	3         105         1
	4         105         2
	5         106         2
	6         107         2
	7         108         1
	8         108         2
	9         108         3
	10        109         1
	11        109         2
	12        109         5
	13        110         1
	14        110         1
	15        110         3
	16        111         1
	17        111         2
	18        112         1
	19        112         1
No solution for instance spider/cre_Docs_and_Epenses/0042 (1026)
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0036 (1030)
	EXPECTED OUTPUT ====

		SELECT budget_type_code
		FROM Documents_with_expenses
		GROUP BY budget_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  budget_type_code
	0          Vv6kpGV
	ACTUAL OUTPUT ====

		
		SELECT budget_type_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT budget_type_code,
		                document_id,
		                COUNT() AS n
		         FROM documents_with_expenses
		         GROUP BY budget_type_code,
		                  document_id)
		      ORDER BY n DESC)
		   LIMIT 1)

	  budget_type_code
	0                V
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0017 (1031)
	EXPECTED OUTPUT ====

		SELECT document_type_code,
		       count(*)
		FROM Documents
		GROUP BY document_type_code

	  document_type_code  count(*)
	0           FIyCVjv3         1
	1            N2)TPPP         1
	2                 PT         1
	3            mxfhcPT         1
	4            PP3UNZE         2
	5            QIijVPP         2
	6                  C         3
	7                  P         4
	ACTUAL OUTPUT ====

		
		SELECT document_type_code,
		       n AS count___
		FROM
		  (SELECT document_description,
		          document_type_code,
		          COUNT() AS n
		   FROM documents
		   GROUP BY document_description,
		            document_type_code)
		ORDER BY document_type_code

	   document_type_code  count___
	0                   C         1
	1                   C         1
	2                   C         1
	3            FIyCVjv3         1
	4             N2)TPPP         1
	5                   P         1
	6                   P         1
	7                   P         1
	8                   P         1
	9             PP3UNZE         1
	10            PP3UNZE         1
	11                 PT         1
	12            QIijVPP         1
	13            QIijVPP         1
	14            mxfhcPT         1
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0008 (1032)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Documents

	   count(*)
	0        15
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT document_description,
		          COUNT() AS n
		   FROM documents
		   GROUP BY document_description)
		ORDER BY count___

	    count___
	0          1
	1          1
	2          1
	3          1
	4          1
	5          1
	6          1
	7          1
	8          1
	9          2
	10         2
	11         2
No solution for instance spider/cre_Docs_and_Epenses/0039 (1033)
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0027 (1036)
	EXPECTED OUTPUT ====

		SELECT T1.project_details
		FROM Projects AS T1
		JOIN Documents AS T2 ON T1.project_id = T2.project_id
		WHERE T2.document_name = "King Book"

	              project_details
	0      Graph Database project
	1      Graph Database project
	2  Internet of Things project
	3  Internet of Things project
	ACTUAL OUTPUT ====

		
		SELECT `project_details`
		FROM
		  (SELECT *
		   FROM `projects` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `documents`
		           WHERE (`document_name` = 'King Book')) AS RHS
		        WHERE (LHS.project_id = RHS.project_id) ))
		ORDER BY project_details

	              project_details
	0      Graph Database project
	1  Internet of Things project
	2  Internet of Things project
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0026 (1043)
	EXPECTED OUTPUT ====

		SELECT T1.project_id,
		       T1.project_details
		FROM Projects AS T1
		JOIN Documents AS T2 ON T1.project_id = T2.project_id
		GROUP BY T1.project_id
		HAVING count(*) > 2

	   project_id                   project_details
	0         193  gUdkrPopulation Research project
	ACTUAL OUTPUT ====

		
		SELECT project_id,
		       project_details
		FROM
		  (SELECT project_details,
		          project_id,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.project_id AS project_id,
		             LHS.project_details AS project_details,
		             RHS.document_id AS document_id,
		             RHS.document_type_code AS document_type_code,
		             RHS.document_date AS document_date,
		             RHS.document_name AS document_name,
		             RHS.document_description AS document_description,
		             RHS.other_details AS other_details
		      FROM projects AS LHS
		      INNER JOIN documents AS RHS ON (LHS.project_id = RHS.project_id))
		   GROUP BY project_details,
		            project_id)
		WHERE (n >= 2)
		ORDER BY project_id

	   project_id                   project_details
	0          36            Graph Database project
	1         136            Graph Database project
	2          37       Graph Database projectcNCkC
	3          31       K(BR9Graph Database project
	4         193  gUdkrPopulation Research project
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0015 (1044)
	EXPECTED OUTPUT ====

		SELECT project_id
		FROM Documents
		GROUP BY project_id
		ORDER BY count(*) ASC
		LIMIT 1

	   project_id
	0          28
	ACTUAL OUTPUT ====

		
		SELECT project_id
		FROM
		  (SELECT project_id,
		          COUNT() AS n
		   FROM documents
		   GROUP BY project_id)
		WHERE (n = 1)
		ORDER BY project_id

	   project_id
	0          28
	1          29
	2         134
	3         195
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0016 (1046)
	EXPECTED OUTPUT ====

		SELECT project_id
		FROM Documents
		GROUP BY project_id
		HAVING count(*) >= 2

	   project_id
	0          31
	1          36
	2          37
	3         136
	4         193
	ACTUAL OUTPUT ====

		
		SELECT project_id
		FROM
		  (SELECT document_description,
		          project_id,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM
		        (SELECT document_description,
		                project_id,
		                COUNT() AS n
		         FROM documents
		         GROUP BY document_description,
		                  project_id)
		      WHERE (n > 2))
		   GROUP BY document_description,
		            project_id)
		ORDER BY project_id

	Empty DataFrame
	Columns: [project_id]
	Index: []
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0018 (1048)
	EXPECTED OUTPUT ====

		SELECT document_type_code
		FROM Documents
		GROUP BY document_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  document_type_code
	0                  z
	ACTUAL OUTPUT ====

		
		SELECT document_type_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT document_description,
		                document_type_code,
		                COUNT() AS n
		         FROM documents
		         GROUP BY document_description,
		                  document_type_code)
		      ORDER BY document_description DESC)
		   LIMIT 1)

	  document_type_code
	0                 w8
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0035 (1049)
	EXPECTED OUTPUT ====

		SELECT budget_type_code,
		       count(*)
		FROM Documents_with_expenses
		GROUP BY budget_type_code

	   budget_type_code  count(*)
	0                 G         1
	1          G4vSFT90         1
	2                GV         1
	3           GVFHAwK         1
	4           GVqrHJY         1
	5           RvH9dGV         1
	6                 S         2
	7                SF         2
	8           SXvflSF         1
	9                 V         1
	10          Vv6kpGV         2
	11         pLJSFFWa         1
	ACTUAL OUTPUT ====

		
		SELECT budget_type_code,
		       n AS count___
		FROM
		  (SELECT budget_type_code,
		          document_details,
		          COUNT() AS n
		   FROM documents_with_expenses
		   GROUP BY budget_type_code,
		            document_details)
		ORDER BY budget_type_code

	   budget_type_code  count___
	0                 G         1
	1          G4vSFT90         1
	2                GV         1
	3           GVFHAwK         1
	4           GVqrHJY         1
	5           RvH9dGV         1
	6                 S         1
	7                 S         1
	8                SF         1
	9                SF         1
	10          SXvflSF         1
	11                V         1
	12          Vv6kpGV         1
	13          Vv6kpGV         1
	14         pLJSFFWa         1
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0019 (1051)
	EXPECTED OUTPUT ====

		SELECT document_type_code
		FROM Documents
		GROUP BY document_type_code
		HAVING count(*) < 3

	  document_type_code
	0           FIyCVjv3
	1            N2)TPPP
	2            PP3UNZE
	3                 PT
	4            QIijVPP
	5            mxfhcPT
	ACTUAL OUTPUT ====

		
		SELECT document_type_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT document_type_code,
		             other_details,
		             COUNT() AS n
		      FROM documents
		      GROUP BY document_type_code,
		               other_details) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM documents AS RHS
		        WHERE (LHS.other_details = RHS.other_details) ))
		WHERE (n < 3)
		ORDER BY document_type_code

	Empty DataFrame
	Columns: [document_type_code]
	Index: []
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0007 (1052)
	EXPECTED OUTPUT ====

		SELECT T1.statement_id,
		       T2.statement_details
		FROM Accounts AS T1
		JOIN Statements AS T2 ON T1.statement_id = T2.statement_id
		GROUP BY T1.statement_id
		ORDER BY count(*) DESC
		LIMIT 1

	   statement_id statement_details
	0           239   Private Project
	ACTUAL OUTPUT ====

		
		SELECT STATEMENT_ID,
		       statement_details
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT statement_details,
		                STATEMENT_ID,
		                COUNT() AS n
		         FROM
		           (SELECT LHS.statement_id AS STATEMENT_ID,
		                   LHS.statement_details AS statement_details,
		                   RHS.account_id AS account_id,
		                   RHS.account_details AS account_details
		            FROM statements AS LHS
		            INNER JOIN accounts AS RHS ON (LHS.statement_id = RHS.statement_id))
		         GROUP BY statement_details,
		                  STATEMENT_ID)
		      ORDER BY STATEMENT_ID)
		   LIMIT 1)

	   statement_id      statement_details
	0           179  cJTPrivate Project4kS
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0001 (1057)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Accounts

	   count(*)
	0        48
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT account_details,
		          STATEMENT_ID,
		          COUNT() AS n
		   FROM accounts
		   GROUP BY account_details,
		            STATEMENT_ID)
		ORDER BY count___

	   count___
	0        46
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0011 (1061)
	EXPECTED OUTPUT ====

		SELECT document_name,
		       document_id
		FROM Documents
		WHERE document_type_code = "BK"

	             document_name  document_id
	0  dLQUVReview on UK files           27
	1       Review on UK files           29
	2       Review on UK files           40
	3  pnCBHReview on UK files          367
	ACTUAL OUTPUT ====

		
		SELECT `document_name`,
		       `document_id`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `documents`
		      WHERE (`document_type_code` = 'BK')) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM documents AS RHS
		        WHERE (LHS.document_id = RHS.document_id
		               AND LHS.other_details = RHS.other_details) ))
		ORDER BY document_name

	Empty DataFrame
	Columns: [document_name, document_id]
	Index: []
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0040 (1064)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Documents
		WHERE document_id NOT IN
		    (SELECT document_id
		     FROM Documents_with_expenses)

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT *
		   FROM documents AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM documents_with_expenses AS RHS
		        WHERE (LHS.document_id = RHS.document_id) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/cre_Docs_and_Epenses/0028 (1065)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Ref_budget_codes

	   count(*)
	0        14
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT LHS.budget_type_code AS budget_type_code,
		             LHS.budget_type_description AS budget_type_description,
		             RHS.budget_type_code AS budget_type_code_other
		      FROM ref_budget_codes AS LHS
		      INNER JOIN ref_budget_codes AS RHS ON (LHS.budget_type_description = RHS.budget_type_description)))
		ORDER BY count___

	   count___
	0        20
Wrong output for fuzzied solution in instance spider/customers_and_products_contacts/0002 (1067)
	EXPECTED OUTPUT ====

		SELECT DISTINCT city
		FROM addresses

	            city
	0       Estaland
	1  West Kaiatown
	2   est Kaiatown
	3  iNmO9Estaland
	4  qKPY8Estaland
	ACTUAL OUTPUT ====

		
		SELECT city
		FROM addresses
		ORDER BY city

	            city
	0       Estaland
	1       Estaland
	2       Estaland
	3       Estaland
	4  West Kaiatown
	5   est Kaiatown
	6  iNmO9Estaland
	7  qKPY8Estaland
No solution for instance spider/customers_and_products_contacts/0008 (1068)
Wrong output for fuzzied solution in instance spider/customers_and_products_contacts/0003 (1069)
	EXPECTED OUTPUT ====

		SELECT state_province_county,
		       count(*)
		FROM addresses
		GROUP BY state_province_county

	  state_province_county  count(*)
	0              Kentucky         1
	1                 Maine         1
	2            SouthDakot         1
	3      SouthDakotaT00PS         1
	4         YcY(2Oklahoma         1
	5               klahoma         1
	6           SouthDakota         2
	ACTUAL OUTPUT ====

		
		SELECT state_province_county,
		       n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT country,
		             state_province_county,
		             COUNT() AS n
		      FROM addresses
		      GROUP BY country,
		               state_province_county) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM addresses AS RHS
		        WHERE (LHS.country = RHS.country
		               AND LHS.state_province_county = RHS.state_province_county) ))
		ORDER BY state_province_county

	  state_province_county  count___
	0              Kentucky         1
	1                 Maine         1
	2            SouthDakot         1
	3           SouthDakota         1
	4           SouthDakota         1
	5      SouthDakotaT00PS         1
	6         YcY(2Oklahoma         1
	7               klahoma         1
Wrong output for fuzzied solution in instance spider/customers_and_products_contacts/0006 (1071)
	EXPECTED OUTPUT ====

		SELECT product_type_code
		FROM products
		GROUP BY product_type_code
		HAVING count(*) >= 2

	  product_type_code
	0           Clothes
	1          Hardware
	2           ardware
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT product_type_code
		FROM
		  (SELECT *
		   FROM products AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT product_id,
		                  product_price,
		                  COUNT() AS n
		           FROM products
		           GROUP BY product_id,
		                    product_price) AS RHS
		        WHERE (LHS.product_id = RHS.product_id
		               AND LHS.product_price = RHS.product_price) ))
		ORDER BY product_type_code

	  product_type_code
	0      AgWLZClothes
	1           Clothes
	2           Hardwar
	3          Hardware
	4     HardwareACXPS
	5           ardware
	6    bgMHardwareAKF
	7            lothes
No solution for instance spider/customers_and_products_contacts/0012 (1073)
Wrong output for fuzzied solution in instance spider/customers_and_products_contacts/0005 (1075)
	EXPECTED OUTPUT ====

		SELECT T1.customer_name
		FROM customers AS T1
		JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T1.customer_id
		ORDER BY count(*) DESC
		LIMIT 1

	  customer_name
	0       Melissa
	ACTUAL OUTPUT ====

		
		SELECT customer_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.payment_method_code AS payment_method_code,
		                LHS.customer_number AS customer_number,
		                LHS.customer_name AS customer_name,
		                LHS.customer_address AS customer_address,
		                LHS.customer_phone AS customer_phone,
		                LHS.customer_email AS customer_email,
		                LHS.order_id AS order_id,
		                LHS.order_date AS order_date,
		                LHS.order_status_code AS order_status_code,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.customer_id AS customer_id,
		                   LHS.payment_method_code AS payment_method_code,
		                   LHS.customer_number AS customer_number,
		                   LHS.customer_name AS customer_name,
		                   LHS.customer_address AS customer_address,
		                   LHS.customer_phone AS customer_phone,
		                   LHS.customer_email AS customer_email,
		                   RHS.order_id AS order_id,
		                   RHS.order_date AS order_date,
		                   RHS.order_status_code AS order_status_code
		            FROM customers AS LHS
		            INNER JOIN customer_orders AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS
		         INNER JOIN
		           (SELECT customer_id,
		                   payment_method_code,
		                   customer_number,
		                   customer_name,
		                   customer_address,
		                   customer_phone,
		                   customer_email,
		                   COUNT(*) OVER () AS n
		            FROM customers) AS RHS ON (LHS.customer_id = RHS.customer_id
		                                          AND LHS.payment_method_code = RHS.payment_method_code
		                                          AND LHS.customer_number = RHS.customer_number
		                                          AND LHS.customer_name = RHS.customer_name
		                                          AND LHS.customer_address = RHS.customer_address
		                                          AND LHS.customer_phone = RHS.customer_phone
		                                          AND LHS.customer_email = RHS.customer_email))
		      ORDER BY customer_address DESC)
		   LIMIT 1)

	  customer_name
	0  oCd1aMelissa
No solution for instance spider/customers_and_products_contacts/0007 (1076)
Wrong output for fuzzied solution in instance spider/customers_and_products_contacts/0001 (1077)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM addresses
		WHERE country = 'USA'

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `address_id`,
		          `line_1_number_building`,
		          `city`,
		          `zip_postcode`,
		          `state_province_county`,
		          `country`,
		          COUNT(*) OVER () AS `n`
		   FROM `addresses`)
		WHERE (`country` = 'USA')
		ORDER BY count___

	   count___
	0         8
Wrong output for fuzzied solution in instance spider/customers_and_products_contacts/0014 (1078)
	EXPECTED OUTPUT ====

		SELECT T1.customer_name,
		       T1.customer_phone
		FROM customers AS T1
		JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id
		JOIN order_items AS T3 ON T3.order_id = T2.order_id
		GROUP BY T1.customer_id
		ORDER BY sum(T3.order_quantity) DESC
		LIMIT 1

	  customer_name           customer_phone
	0       Melissa  393-750-2077x727793)0CG
	ACTUAL OUTPUT ====

		
		SELECT customer_name,
		       customer_phone
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.payment_method_code AS payment_method_code,
		                LHS.customer_number AS customer_number,
		                LHS.customer_name AS customer_name,
		                LHS.customer_address AS customer_address,
		                LHS.customer_phone AS customer_phone,
		                LHS.customer_email AS customer_email,
		                LHS.order_id AS order_id,
		                LHS.order_date AS order_date,
		                LHS.order_status_code AS order_status_code,
		                RHS.order_item_id AS order_item_id,
		                RHS.product_id AS product_id,
		                RHS.order_quantity AS order_quantity
		         FROM
		           (SELECT LHS.customer_id AS customer_id,
		                   LHS.payment_method_code AS payment_method_code,
		                   LHS.customer_number AS customer_number,
		                   LHS.customer_name AS customer_name,
		                   LHS.customer_address AS customer_address,
		                   LHS.customer_phone AS customer_phone,
		                   LHS.customer_email AS customer_email,
		                   RHS.order_id AS order_id,
		                   RHS.order_date AS order_date,
		                   RHS.order_status_code AS order_status_code
		            FROM customers AS LHS
		            INNER JOIN customer_orders AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS
		         INNER JOIN order_items AS RHS ON (LHS.order_id = RHS.order_id))
		      ORDER BY customer_address DESC)
		   LIMIT 1)

	  customer_name customer_phone
	0  oCd1aMelissa   097-514-4641
Wrong output for base solution in instance spider/customers_and_products_contacts/0009 (1079)
	EXPECTED OUTPUT ====

	  product_name sum_t2_order_quantity_
	0        Apple                     11
	1        Apple                      4
	2        Apple                      8
	3        gucci                     12
	4        gucci                      4
	5        gucci                      5
	6        jcrew                   14.0
	7        jcrew                      8
	8        jcrew                      9
	9        jcrew                      9
	ACTUAL OUTPUT ====

		SELECT T1.product_name,
		       sum(T2.order_quantity)
		FROM products AS T1
		JOIN order_items AS T2 ON T1.product_id = T2.product_id
		GROUP BY T1.product_id

	  product_name  sum(t2.order_quantity)
	0        Apple                     4.0
	1        Apple                     8.0
	2        Apple                    11.0
	3        gucci                     4.0
	4        gucci                     5.0
	5        gucci                    12.0
	6        jcrew                     8.0
	7        jcrew                     9.0
	8        jcrew                     9.0
	9        jcrew                    14.0
Wrong output for ground truth in instance spider/customers_and_products_contacts/0009 (1079)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for base solution in instance spider/bike_1/0042 (1082)
	EXPECTED OUTPUT ====

	                                 name        lat  min_t2_duration_
	0   San Jose Diridon Caltrain Station  37.329732               195
	1                 San Salvador at 1st  37.330165               161
	2               San Jose Civic Center  37.330698               211
	3                    Adobe on Almaden  37.331415               237
	4            Arena Green / SAP Center  37.332692               165
	..                                ...        ...               ...
	65                   Davis at Jackson  37.797280                84
	66    Grant Avenue at Columbus Avenue  37.798522               143
	67          Broadway St at Battery St  37.798541               105
	68             Embarcadero at Vallejo  37.799953               111
	69             Embarcadero at Sansome  37.804770                62
	
	[70 rows x 3 columns]
	ACTUAL OUTPUT ====

		SELECT T1.name,
		       T1.lat,
		       min(T2.duration)
		FROM station AS T1
		JOIN trip AS T2 ON T1.id = T2.end_station_id
		GROUP BY T2.end_station_id

	                                 name        lat  min(t2.duration)
	0   San Jose Diridon Caltrain Station  37.329732               195
	1                 San Salvador at 1st  37.330165               161
	2               San Jose Civic Center  37.330698               211
	3                    Adobe on Almaden  37.331415               237
	4            Arena Green / SAP Center  37.332692               165
	..                                ...        ...               ...
	65                   Davis at Jackson  37.797280                84
	66    Grant Avenue at Columbus Avenue  37.798522               143
	67          Broadway St at Battery St  37.798541               105
	68             Embarcadero at Vallejo  37.799953               111
	69             Embarcadero at Sansome  37.804770                62
	
	[70 rows x 3 columns]
Wrong output for ground truth in instance spider/bike_1/0042 (1082)
Wrong output for base solution in instance spider/bike_1/0037 (1084)
	EXPECTED OUTPUT ====

		SELECT zip_code
		FROM weather
		GROUP BY zip_code
		HAVING avg(mean_visibility_miles) < 10

	   zip_code
	0     94041
	1     94063
	2     94107
	3     95113
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT zip_code
		FROM
		  (SELECT cloud_cover,
		          zip_code,
		          AVG(mean_visibility_miles) AS meanmean_visibility_miles
		   FROM
		     (SELECT *
		      FROM weather
		      WHERE (mean_visibility_miles >= 10))
		   GROUP BY cloud_cover,
		            zip_code)
		WHERE (meanmean_visibility_miles <= 10.0)
		ORDER BY zip_code

	   zip_code
	0     94041
	1     94063
	2     94107
	3     94301
	4     95113
No solution for instance spider/bike_1/0017 (1087)
Wrong output for base solution in instance spider/bike_1/0052 (1088)
	EXPECTED OUTPUT ====

	   avg_t1_lat_  avg_t1_long_
	0    37.746181   -122.361347
	ACTUAL OUTPUT ====

		SELECT avg(T1.lat),
		       avg(T1.long)
		FROM station AS T1
		JOIN trip AS T2 ON T1.id = T2.start_station_id

	   avg(t1.lat)  avg(t1.long)
	0    37.746181   -122.361347
Wrong output for ground truth in instance spider/bike_1/0052 (1088)
No solution for instance spider/bike_1/0008 (1089)
Wrong output for base solution in instance spider/bike_1/0039 (1090)
	EXPECTED OUTPUT ====

	        date  cloud_cover
	0  1/29/2014            8
	1   2/6/2014            8
	2   2/7/2014            8
	3   2/8/2014            8
	4   8/8/2015         <NA>
	ACTUAL OUTPUT ====

		SELECT date , cloud_cover
		FROM weather
		ORDER BY cloud_cover DESC
		LIMIT 5

	        date cloud_cover
	0  1/29/2014           8
	1   2/6/2014           8
	2   2/7/2014           8
	3   2/8/2014           8
	4   8/8/2015            
Wrong output for ground truth in instance spider/bike_1/0039 (1090)
Wrong output for base solution in instance spider/bike_1/0003 (1092)
	EXPECTED OUTPUT ====

	            city   max_lat_
	0  Mountain View  37.406940
	1      Palo Alto  37.448598
	2   Redwood City  37.491269
	3  San Francisco  37.804770
	4       San Jose  37.352601
	ACTUAL OUTPUT ====

		SELECT city,
		       max(lat)
		FROM station
		GROUP BY city

	            city   max(lat)
	0  Mountain View  37.406940
	1      Palo Alto  37.448598
	2   Redwood City  37.491269
	3  San Francisco  37.804770
	4       San Jose  37.352601
Wrong output for ground truth in instance spider/bike_1/0003 (1092)
Wrong output for base solution in instance spider/bike_1/0022 (1095)
	EXPECTED OUTPUT ====

	    avg_long_
	0 -122.167486
	ACTUAL OUTPUT ====

		SELECT avg(long)
		FROM station
		WHERE id NOT IN
		    (SELECT station_id
		     FROM status
		     GROUP BY station_id
		     HAVING max(bikes_available) > 10)

	    avg(long)
	0 -122.167486
Wrong output for ground truth in instance spider/bike_1/0022 (1095)
No solution for instance spider/bike_1/0030 (1096)
No solution for instance spider/bike_1/0013 (1097)
Wrong output for fuzzied solution in instance spider/bike_1/0004 (1099)
	EXPECTED OUTPUT ====

		SELECT start_station_name,
		       end_station_name
		FROM trip
		ORDER BY id
		LIMIT 3

	                       start_station_name                          end_station_name
	0                        San Pedro Square                           Beale at Market
	1        Castro Street and El Camino Real                        Howard at 2ndILLDm
	2  an Francisco Caltrain 2 (330 Townsend)  San Francisco Caltrain (Townsend at 4th)
	ACTUAL OUTPUT ====

		
		SELECT start_station_name,
		       end_station_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM trip
		      ORDER BY start_date)
		   LIMIT 3)

	                        start_station_name                               end_station_name
	0  San Francisco Caltrain 2 (330 Townsend)                                  Howard at 2nd
	1         Castro Street and El Camino Real  Temporary Transbay Terminal (Howard at Beale)
	2               Embarcadero at FolsomhT2eT        an Francisco Caltrain (Townsend at 4th)
No solution for instance spider/bike_1/0026 (1101)
No solution for instance spider/bike_1/0015 (1102)
Wrong output for fuzzied solution in instance spider/bike_1/0005 (1103)
	EXPECTED OUTPUT ====

		SELECT avg(lat),
		       avg(long)
		FROM station
		WHERE city = "San Jose"

	  avg(lat) avg(long)
	0     None      None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `meanlat` AS `avg_lat_`,
		                AVG(`long`) OVER () AS `avg_long_`
		FROM
		  (SELECT `id`,
		          `name`,
		          `lat`,
		          `long`,
		          `dock_count`,
		          `city`,
		          `installation_date`,
		          AVG(`lat`) OVER () AS `meanlat`
		   FROM
		     (SELECT *
		      FROM `station`
		      WHERE (`city` = 'San Jose')))
		ORDER BY avg_lat_

	Empty DataFrame
	Columns: [avg_lat_, avg_long_]
	Index: []
Wrong output for base solution in instance spider/bike_1/0016 (1104)
	EXPECTED OUTPUT ====

	         lat       long           city
	0  37.776617 -122.39526  San Francisco
	ACTUAL OUTPUT ====

		SELECT T1.lat,
		       T1.long,
		       T1.city
		FROM station AS T1
		JOIN trip AS T2 ON T1.id = T2.start_station_id
		ORDER BY T2.duration
		LIMIT 1

	         lat       long           city
	0  37.776617 -122.39526  San Francisco
Wrong output for ground truth in instance spider/bike_1/0016 (1104)
Wrong output for fuzzied solution in instance spider/bike_1/0050 (1105)
	EXPECTED OUTPUT ====

		SELECT name
		FROM station
		WHERE city = "Palo Alto"
		EXCEPT
		SELECT end_station_name
		FROM trip
		GROUP BY end_station_name
		HAVING count(*) > 100

	                            name
	0             DTuAMPark at Olive
	1                   Park at Oliv
	2  Powell at Post (Union Square)
	3                 ost at Kearney
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT `id`,
		             `name`,
		             `lat`,
		             `long`,
		             `dock_count`,
		             `city`,
		             `installation_date`,
		             COUNT(*) OVER () AS `n`
		      FROM `station`) AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM `trip` AS `RHS`
		        WHERE (`LHS`.`id` = `RHS`.`id`) ))
		WHERE (`city` = 'Palo Alto'
		       AND n < 100)
		ORDER BY name

	                            name
	0             DTuAMPark at Olive
	1                   Park at Oliv
	2                   Park at Oliv
	3  Powell at Post (Union Square)
	4  Powell at Post (Union Square)
	5                 ost at Kearney
No solution for instance spider/bike_1/0032 (1106)
No solution for instance spider/bike_1/0045 (1107)
No solution for instance spider/bike_1/0018 (1108)
Wrong output for base solution in instance spider/bike_1/0041 (1109)
	EXPECTED OUTPUT ====

	                             name        long  avg_t2_duration_
	0                      Mezes Park -122.236234        253.333333
	1          Santa Clara at Almaden -121.894902        378.280000
	2    San Antonio Caltrain Station -122.106758        380.409091
	3                   2nd at Folsom -122.396236        399.678733
	4                   Howard at 2nd -122.398108        414.511737
	..                            ...         ...               ...
	64         Embarcadero at Vallejo -122.398525       1817.221649
	65         University and Emerson -122.163093       2643.600000
	66  Redwood City Caltrain Station -122.232089       2643.871795
	67     SJSU - San Salvador at 9th -121.877349       3597.095238
	68              Franklin at Maple -122.226904       3909.000000
	
	[69 rows x 3 columns]
	ACTUAL OUTPUT ====

		SELECT T1.name,
		       T1.long,
		       avg(T2.duration)
		FROM station AS T1
		JOIN trip AS T2 ON T1.id = T2.start_station_id
		GROUP BY T2.start_station_id

	                             name        long  avg(t2.duration)
	0                      Mezes Park -122.236234        253.333333
	1          Santa Clara at Almaden -121.894902        378.280000
	2    San Antonio Caltrain Station -122.106758        380.409091
	3                   2nd at Folsom -122.396236        399.678733
	4                   Howard at 2nd -122.398108        414.511737
	..                            ...         ...               ...
	64         Embarcadero at Vallejo -122.398525       1817.221649
	65         University and Emerson -122.163093       2643.600000
	66  Redwood City Caltrain Station -122.232089       2643.871795
	67     SJSU - San Salvador at 9th -121.877349       3597.095238
	68              Franklin at Maple -122.226904       3909.000000
	
	[69 rows x 3 columns]
Wrong output for ground truth in instance spider/bike_1/0041 (1109)
Wrong output for fuzzied solution in instance spider/bike_1/0051 (1110)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM station AS T1
		JOIN trip AS T2
		JOIN station AS T3
		JOIN trip AS T4 ON T1.id = T2.start_station_id
		AND T2.id = T4.id
		AND T3.id = T4.end_station_id
		WHERE T1.city = "Mountain View"
		  AND T3.city = "Palo Alto"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT *
		   FROM
		     (SELECT `id`,
		             `name`,
		             `lat`,
		             `long`,
		             `dock_count`,
		             `city`,
		             `installation_date`,
		             COUNT(*) OVER () AS `n`
		      FROM `station`
		      WHERE (`city` = 'Mountain View'
		             AND `city` != 'Palo Alto')) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM trip AS RHS
		        WHERE (LHS.id = RHS.id) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for base solution in instance spider/bike_1/0020 (1112)
	EXPECTED OUTPUT ====

		SELECT zip_code
		FROM weather
		GROUP BY zip_code
		ORDER BY avg(mean_sea_level_pressure_inches)
		LIMIT 1

	   zip_code
	0     94301
	ACTUAL OUTPUT ====

		
		SELECT zip_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT precipitation_inches,
		             zip_code,
		             AVG(mean_sea_level_pressure_inches) AS meanmean_sea_level_pressure_inches
		      FROM weather
		      GROUP BY precipitation_inches,
		               zip_code) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM weather AS RHS
		        WHERE (LHS.precipitation_inches = RHS.precipitation_inches
		               AND LHS.zip_code = RHS.zip_code) ))
		ORDER BY zip_code

	Empty DataFrame
	Columns: [zip_code]
	Index: []
Wrong output for fuzzied solution in instance spider/bike_1/0019 (1113)
	EXPECTED OUTPUT ====

		SELECT cloud_cover
		FROM weather
		WHERE zip_code = 94107
		GROUP BY cloud_cover
		ORDER BY COUNT (*) DESC
		LIMIT 3

	   cloud_cover
	0            1
	1            2
	2            3
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS cloud_cover
		FROM
		  (SELECT mean_sea_level_pressure_inches,
		          wind_dir_degrees,
		          COUNT() AS n
		   FROM weather
		   GROUP BY mean_sea_level_pressure_inches,
		            wind_dir_degrees)
		WHERE (n = 94107
		       OR n > 3)
		ORDER BY cloud_cover

	Empty DataFrame
	Columns: [cloud_cover]
	Index: []
No solution for instance spider/bike_1/0007 (1114)
Wrong output for base solution in instance spider/bike_1/0034 (1115)
	EXPECTED OUTPUT ====

		SELECT date , mean_temperature_f,
		              mean_humidity
		FROM weather
		ORDER BY max_gust_speed_mph DESC
		LIMIT 3

	         date  mean_temperature_f  mean_humidity
	0  10/14/2013                  64             49
	1  10/31/2013                  59             54
	2   8/31/2013                  68             72
	ACTUAL OUTPUT ====

		
		SELECT date, mean_temperature_f,
		             mean_humidity
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM weather AS LHS
		         WHERE NOT EXISTS
		             (SELECT 1
		              FROM
		                (SELECT max_gust_speed_mph
		                 FROM weather INTERSECT SELECT max_gust_speed_mph
		                 FROM weather) AS RHS
		              WHERE (LHS.max_gust_speed_mph = RHS.max_gust_speed_mph) ))
		      ORDER BY max_gust_speed_mph)
		   LIMIT 3)

	Empty DataFrame
	Columns: [date, mean_temperature_f, mean_humidity]
	Index: []
No solution for instance spider/bike_1/0024 (1116)
Wrong output for base solution in instance spider/bike_1/0021 (1117)
	EXPECTED OUTPUT ====

	   avg_bikes_available_
	0              7.657901
	ACTUAL OUTPUT ====

		SELECT avg(bikes_available)
		FROM status
		WHERE station_id NOT IN
		    (SELECT id
		     FROM station
		     WHERE city = "Palo Alto")

	   avg(bikes_available)
	0              7.657901
Wrong output for ground truth in instance spider/bike_1/0021 (1117)
No solution for instance spider/bike_1/0023 (1118)
Wrong output for fuzzied solution in instance spider/bike_1/0043 (1120)
	EXPECTED OUTPUT ====

		SELECT DISTINCT start_station_name
		FROM trip
		WHERE duration < 100

	     start_station_name
	0       2nd at Townsend
	1  2nd at Townsend3nfyk
	2    Market at 4thA7XBG
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT start_station_name
		FROM
		  (SELECT LHS.id AS id,
		          LHS.duration AS duration,
		          LHS.start_date AS start_date,
		          LHS.start_station_name AS start_station_name,
		          LHS.start_station_id AS start_station_id,
		          LHS.end_date AS end_date,
		          LHS.end_station_name AS end_station_name,
		          LHS.end_station_id AS end_station_id,
		          LHS.bike_id AS bike_id,
		          LHS.subscription_type AS subscription_type,
		          LHS.zip_code AS zip_code
		   FROM trip AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM trip
		      WHERE (duration <= 100)) AS RHS ON (LHS.id = RHS.id
		                                          AND LHS.duration = RHS.duration
		                                          AND LHS.start_date = RHS.start_date
		                                          AND LHS.start_station_name = RHS.start_station_name
		                                          AND LHS.start_station_id = RHS.start_station_id
		                                          AND LHS.end_date = RHS.end_date
		                                          AND LHS.end_station_name = RHS.end_station_name
		                                          AND LHS.end_station_id = RHS.end_station_id
		                                          AND LHS.bike_id = RHS.bike_id
		                                          AND LHS.subscription_type = RHS.subscription_type
		                                          AND LHS.zip_code = RHS.zip_code))
		ORDER BY start_station_name

	                    start_station_name
	0                      2nd at Townsend
	1                 2nd at Townsend3nfyk
	2                   Market at 4thA7XBG
	3  caQPowell at Post (Union Square)K87
Wrong output for base solution in instance spider/bike_1/0046 (1121)
	EXPECTED OUTPUT ====

		SELECT date
		FROM weather
		WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31

	         date
	0   1/12/2014
	1   1/12/2014
	2   1/12/2014
	3   1/12/2014
	4   1/12/2014
	..        ...
	82  2/24/2015
	83  2/24/2015
	84  2/24/2015
	85   3/5/2015
	86  4/14/2015
	
	[87 rows x 1 columns]
	ACTUAL OUTPUT ====

		
		SELECT `date`
		FROM `weather`
		WHERE (`mean_sea_level_pressure_inches` = 31.0
		       OR `mean_sea_level_pressure_inches` >= '30.3')
		ORDER BY date

	         date
	0   1/12/2014
	1   1/12/2014
	2   1/12/2014
	3   1/12/2014
	4   1/12/2014
	..        ...
	83  2/24/2015
	84  2/24/2015
	85   3/5/2015
	86  4/14/2015
	87   8/8/2015
	
	[88 rows x 1 columns]
Wrong output for base solution in instance spider/bike_1/0047 (1122)
	EXPECTED OUTPUT ====

		SELECT date , max_temperature_f - min_temperature_f
		FROM weather
		ORDER BY max_temperature_f - min_temperature_f
		LIMIT 1

	        date  max_temperature_f - min_temperature_f
	0  4/16/2015                                      0
	ACTUAL OUTPUT ====

		
		SELECT date, cloud_cover AS max_temperature_f___min_temperature_f
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM weather
		      ORDER BY min_temperature_f DESC)
		   LIMIT 1)

	       date max_temperature_f___min_temperature_f
	0  8/8/2015                                      
No solution for instance spider/bike_1/0014 (1123)
Error while executing solution for instance spider/bike_1/0009 (1124)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT bike_id) OVER () AS count_distinct_bike_id_
FROM trip
ORDER BY count_distinct_bike_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/bike_1/0025 (1125)
Wrong output for fuzzied solution in instance spider/bike_1/0029 (1127)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM trip AS T1
		JOIN station AS T2 ON T1.end_station_id = T2.id
		WHERE T2.city != "San Francisco"

	   count(*)
	0        10
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT `id`,
		          `name`,
		          `lat`,
		          `long`,
		          `dock_count`,
		          `city`,
		          `installation_date`,
		          `id_other`,
		          `duration`,
		          `start_date`,
		          `start_station_name`,
		          `start_station_id`,
		          `end_date`,
		          `bike_id`,
		          `subscription_type`,
		          `zip_code`,
		          `end_station_id`,
		          `name` AS `end_station_name`
		   FROM
		     (SELECT `id`,
		             `name`,
		             `lat`,
		             `long`,
		             `dock_count`,
		             `city`,
		             `installation_date`,
		             `id_other`,
		             `duration`,
		             `start_date`,
		             `start_station_name`,
		             `start_station_id`,
		             `end_date`,
		             `bike_id`,
		             `subscription_type`,
		             `zip_code`,
		             `id` AS `end_station_id`
		      FROM
		        (SELECT `LHS`.`id` AS `id`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`lat` AS `lat`,
		                `LHS`.`long` AS `long`,
		                `LHS`.`dock_count` AS `dock_count`,
		                `LHS`.`city` AS `city`,
		                `LHS`.`installation_date` AS `installation_date`,
		                `RHS`.`id` AS `id_other`,
		                `RHS`.`duration` AS `duration`,
		                `RHS`.`start_date` AS `start_date`,
		                `RHS`.`start_station_name` AS `start_station_name`,
		                `RHS`.`start_station_id` AS `start_station_id`,
		                `RHS`.`end_date` AS `end_date`,
		                `RHS`.`bike_id` AS `bike_id`,
		                `RHS`.`subscription_type` AS `subscription_type`,
		                `RHS`.`zip_code` AS `zip_code`
		         FROM
		           (SELECT *
		            FROM `station`
		            WHERE (`city` != 'San Francisco')) AS LHS
		         INNER JOIN trip AS RHS ON (LHS.id = RHS.end_station_id
		                                       AND LHS.name = RHS.end_station_name))))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for base solution in instance spider/bike_1/0044 (1129)
	EXPECTED OUTPUT ====

		SELECT DISTINCT zip_code
		FROM weather
		EXCEPT
		SELECT DISTINCT zip_code
		FROM weather
		WHERE max_dew_point_f >= 70

	   zip_code
	0     94063
	1     94107
	2     95113
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT zip_code
		FROM
		  (SELECT date, max_temperature_f,
		                mean_temperature_f,
		                min_temperature_f,
		                max_dew_point_f,
		                mean_dew_point_f,
		                mean_dew_point_f AS min_dew_point_f,
		                max_humidity,
		                mean_humidity,
		                min_humidity,
		                max_sea_level_pressure_inches,
		                mean_sea_level_pressure_inches,
		                min_sea_level_pressure_inches,
		                max_visibility_miles,
		                mean_visibility_miles,
		                min_visibility_miles,
		                max_wind_speed_mph,
		                mean_wind_speed_mph,
		                max_gust_speed_mph,
		                precipitation_inches,
		                cloud_cover,
		                EVENTS,
		                wind_dir_degrees,
		                zip_code,
		                date_other,
		                max_temperature_f_other,
		                mean_temperature_f_other,
		                min_temperature_f_other,
		                max_dew_point_f_other,
		                mean_dew_point_f_other,
		                max_humidity_other,
		                mean_humidity_other,
		                min_humidity_other,
		                max_sea_level_pressure_inches_other,
		                mean_sea_level_pressure_inches_other,
		                min_sea_level_pressure_inches_other,
		                mean_visibility_miles_other,
		                min_visibility_miles_other,
		                max_wind_speed_mph_other,
		                mean_wind_speed_mph_other,
		                max_gust_speed_mph_other,
		                precipitation_inches_other,
		                cloud_cover_other,
		                events_other,
		                wind_dir_degrees_other,
		                zip_code_other
		   FROM
		     (SELECT LHS.date AS date,
		             LHS.max_temperature_f AS max_temperature_f,
		             LHS.mean_temperature_f AS mean_temperature_f,
		             LHS.min_temperature_f AS min_temperature_f,
		             LHS.max_dew_point_f AS max_dew_point_f,
		             LHS.mean_dew_point_f AS mean_dew_point_f,
		             LHS.min_dew_point_f AS min_dew_point_f,
		             LHS.max_humidity AS max_humidity,
		             LHS.mean_humidity AS mean_humidity,
		             LHS.min_humidity AS min_humidity,
		             LHS.max_sea_level_pressure_inches AS max_sea_level_pressure_inches,
		             LHS.mean_sea_level_pressure_inches AS mean_sea_level_pressure_inches,
		             LHS.min_sea_level_pressure_inches AS min_sea_level_pressure_inches,
		             LHS.max_visibility_miles AS max_visibility_miles,
		             LHS.mean_visibility_miles AS mean_visibility_miles,
		             LHS.min_visibility_miles AS min_visibility_miles,
		             LHS.max_wind_speed_mph AS max_wind_speed_mph,
		             LHS.mean_wind_speed_mph AS mean_wind_speed_mph,
		             LHS.max_gust_speed_mph AS max_gust_speed_mph,
		             LHS.precipitation_inches AS precipitation_inches,
		             LHS.cloud_cover AS cloud_cover,
		             LHS.events AS EVENTS,
		             LHS.wind_dir_degrees AS wind_dir_degrees,
		             LHS.zip_code AS zip_code,
		             RHS.date AS date_other,
		             RHS.max_temperature_f AS max_temperature_f_other,
		             RHS.mean_temperature_f AS mean_temperature_f_other,
		             RHS.min_temperature_f AS min_temperature_f_other,
		             RHS.max_dew_point_f AS max_dew_point_f_other,
		             RHS.mean_dew_point_f AS mean_dew_point_f_other,
		             RHS.max_humidity AS max_humidity_other,
		             RHS.mean_humidity AS mean_humidity_other,
		             RHS.min_humidity AS min_humidity_other,
		             RHS.max_sea_level_pressure_inches AS max_sea_level_pressure_inches_other,
		             RHS.mean_sea_level_pressure_inches AS mean_sea_level_pressure_inches_other,
		             RHS.min_sea_level_pressure_inches AS min_sea_level_pressure_inches_other,
		             RHS.mean_visibility_miles AS mean_visibility_miles_other,
		             RHS.min_visibility_miles AS min_visibility_miles_other,
		             RHS.max_wind_speed_mph AS max_wind_speed_mph_other,
		             RHS.mean_wind_speed_mph AS mean_wind_speed_mph_other,
		             RHS.max_gust_speed_mph AS max_gust_speed_mph_other,
		             RHS.precipitation_inches AS precipitation_inches_other,
		             RHS.cloud_cover AS cloud_cover_other,
		             RHS.events AS events_other,
		             RHS.wind_dir_degrees AS wind_dir_degrees_other,
		             RHS.zip_code AS zip_code_other
		      FROM
		        (SELECT *
		         FROM weather
		         WHERE (max_dew_point_f != 70)) AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM weather
		         WHERE (max_dew_point_f != 70)) AS RHS ON (LHS.mean_dew_point_f = RHS.min_dew_point_f
		                                                   AND LHS.min_dew_point_f = RHS.max_visibility_miles)))
		ORDER BY zip_code

	   zip_code
	0     94041
	1     94063
	2     94107
	3     94301
	4     95113
Wrong output for fuzzied solution in instance spider/bike_1/0028 (1131)
	EXPECTED OUTPUT ====

		SELECT T1.id
		FROM trip AS T1
		JOIN station AS T2 ON T1.start_station_id = T2.id
		ORDER BY T2.dock_count DESC
		LIMIT 1

	       id
	0  901527
	ACTUAL OUTPUT ====

		
		SELECT id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM trip AS LHS
		         WHERE NOT EXISTS
		             (SELECT 1
		              FROM station AS RHS
		              WHERE (LHS.id = RHS.id) ))
		      ORDER BY end_date)
		   LIMIT 1)

	       id
	0  903319
No solution for instance spider/bike_1/0049 (1132)
No solution for instance spider/bike_1/0031 (1133)
No solution for instance spider/flight_company/0002 (1134)
Wrong output for fuzzied solution in instance spider/flight_company/0017 (1135)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       country
		FROM airport
		GROUP BY country

	    count(*)         country
	0          1     3S4VIceland
	1          1      Z7Bu028IG6
	2          1      (Y7GVSpain
	3          1    03J8JBelgium
	4          1        2q4TkVmr
	5          1          Belgiu
	6          1            IUhy
	7          1    Iceland401DU
	8          1    JjzeuIceland
	9          1  Mt3FvmMMPMVjcu
	10         1          NgVVQX
	11         1    QGT XDenmark
	12         1            Spai
	13         1      SpainP4wgq
	14         1      Spainj56GD
	15         1         T(e9Uq)
	16         1    ZXf2pDenmark
	17         1     eaJSpainSj4
	18         1      j5mEKJIUhy
	19         1    n7wICQD4mVWY
	20         1    u7wJ)n7wICQD
	21         2        BMz0tTfK
	22         2         Belgium
	23         3         Denmark
	24         3         Iceland
	25         4           Spain
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       country
		FROM
		  (SELECT country,
		          COUNT() AS n
		   FROM
		     (SELECT city,
		             country,
		             COUNT() AS n
		      FROM airport
		      GROUP BY city,
		               country)
		   GROUP BY country)
		ORDER BY count___

	    count___         country
	0          1     3S4VIceland
	1          1      Z7Bu028IG6
	2          1      (Y7GVSpain
	3          1    03J8JBelgium
	4          1        2q4TkVmr
	5          1        BMz0tTfK
	6          1          Belgiu
	7          1            IUhy
	8          1    Iceland401DU
	9          1    JjzeuIceland
	10         1  Mt3FvmMMPMVjcu
	11         1          NgVVQX
	12         1    QGT XDenmark
	13         1            Spai
	14         1      SpainP4wgq
	15         1      Spainj56GD
	16         1         T(e9Uq)
	17         1    ZXf2pDenmark
	18         1     eaJSpainSj4
	19         1      j5mEKJIUhy
	20         1    n7wICQD4mVWY
	21         1    u7wJ)n7wICQD
	22         2         Belgium
	23         3         Denmark
	24         3         Iceland
	25         3           Spain
Wrong output for fuzzied solution in instance spider/flight_company/0008 (1136)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.type
		FROM operate_company AS T1
		JOIN flight AS t2 ON T1.id = T2.company_id
		WHERE T2.velocity < 200

	            type
	0  Joint Venture
	1     Subsidiary
	ACTUAL OUTPUT ====

		
		SELECT TYPE
		FROM
		  (SELECT *
		   FROM operate_company AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM flight
		           WHERE (velocity != 200.0)) AS RHS
		        WHERE (LHS.id = RHS.id) ))
		ORDER BY TYPE

	                  type
	0   MIJoint VentureCb8
	1        Joint Venture
	2   LJVs(hnW3Oa6E9vKSC
	3           Subsidiary
	4            ubsidiary
	5            ubsidiary
Wrong output for fuzzied solution in instance spider/flight_company/0013 (1138)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM airport
		WHERE id NOT IN
		    (SELECT airport_id
		     FROM flight
		     WHERE pilot = 'Thompson' );

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `pilot`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM `flight` AS `LHS`
		         WHERE NOT EXISTS
		             (SELECT 1
		              FROM `airport` AS `RHS`
		              WHERE (`LHS`.`id` = `RHS`.`id`) ))
		      WHERE (`pilot` = 'Thompson'))
		   GROUP BY pilot)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/flight_company/0012 (1141)
	EXPECTED OUTPUT ====

		SELECT TYPE,
		       count(*)
		FROM operate_company
		GROUP BY TYPE
		ORDER BY count(*) DESC
		LIMIT 1

	         type  count(*)
	0  Subsidiary         3
	ACTUAL OUTPUT ====

		
		SELECT TYPE,
		       n AS count___
		FROM
		  (SELECT group_equity_shareholding,
		          TYPE,
		          COUNT() AS n
		   FROM operate_company
		   GROUP BY group_equity_shareholding,
		            TYPE)
		WHERE (n > 1)
		ORDER BY TYPE

	Empty DataFrame
	Columns: [type, count___]
	Index: []
No solution for instance spider/flight_company/0015 (1142)
Wrong output for fuzzied solution in instance spider/flight_company/0016 (1144)
	EXPECTED OUTPUT ====

		SELECT T3.id,
		       count(*)
		FROM operate_company AS T1
		JOIN flight AS t2 ON T1.id = T2.company_id
		JOIN airport AS T3 ON T2.airport_id = T3.id
		GROUP BY T3.id

	   id  count(*)
	0   6         1
	1   8         1
	2   9         1
	3  10         1
	4   4         2
	5   5         2
	6   1         4
	ACTUAL OUTPUT ====

		
		SELECT airport_id AS id,
		       n AS count___
		FROM
		  (SELECT airport_id,
		          altitude,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.vehicle_flight_number AS vehicle_flight_number,
		             LHS.date AS date,
		             LHS.pilot AS pilot,
		             LHS.velocity AS velocity,
		             LHS.altitude AS altitude,
		             LHS.airport_id AS airport_id,
		             LHS.company_id AS company_id,
		             RHS.city AS city,
		             RHS.country AS country,
		             RHS.iata AS iata,
		             RHS.icao AS icao,
		             RHS.name AS name,
		             RHS.type AS TYPE,
		             RHS.principal_activities AS principal_activities,
		             RHS.incorporated_in AS incorporated_in,
		             RHS.group_equity_shareholding AS group_equity_shareholding
		      FROM flight AS LHS
		      LEFT JOIN
		        (SELECT LHS.id AS id,
		                LHS.city AS city,
		                LHS.country AS country,
		                LHS.iata AS iata,
		                LHS.icao AS icao,
		                LHS.name AS name,
		                LHS.type AS TYPE,
		                LHS.principal_activities AS principal_activities,
		                LHS.incorporated_in AS incorporated_in,
		                LHS.group_equity_shareholding AS group_equity_shareholding,
		                RHS.vehicle_flight_number AS vehicle_flight_number,
		                RHS.date AS date,
		                RHS.pilot AS pilot,
		                RHS.velocity AS velocity,
		                RHS.altitude AS altitude,
		                RHS.airport_id AS airport_id,
		                RHS.company_id AS company_id
		         FROM
		           (SELECT LHS.id AS id,
		                   LHS.city AS city,
		                   LHS.country AS country,
		                   LHS.iata AS iata,
		                   LHS.icao AS icao,
		                   LHS.name AS name,
		                   RHS.type AS TYPE,
		                   RHS.principal_activities AS principal_activities,
		                   RHS.incorporated_in AS incorporated_in,
		                   RHS.group_equity_shareholding AS group_equity_shareholding
		            FROM airport AS LHS
		            INNER JOIN operate_company AS RHS ON (LHS.id = RHS.id
		                                                     AND LHS.name = RHS.name)) AS LHS
		         INNER JOIN flight AS RHS ON (LHS.id = RHS.id)) AS RHS ON (LHS.id = RHS.id
		                                                                      AND LHS.vehicle_flight_number = RHS.vehicle_flight_number
		                                                                      AND LHS.date = RHS.date
		                                                                      AND LHS.pilot = RHS.pilot
		                                                                      AND LHS.velocity = RHS.velocity
		                                                                      AND LHS.altitude = RHS.altitude
		                                                                      AND LHS.airport_id = RHS.airport_id
		                                                                      AND LHS.company_id = RHS.company_id))
		   GROUP BY airport_id,
		            altitude)
		ORDER BY id

	    id  count___
	0    1         1
	1    1         1
	2    4         1
	3    4         1
	4    5         1
	5    5         1
	6    6         1
	7    8         1
	8    9         1
	9   10         1
	10   1         2
Wrong output for fuzzied solution in instance spider/flight_company/0018 (1145)
	EXPECTED OUTPUT ====

		SELECT country
		FROM airport
		GROUP BY country
		HAVING count(*) > 2

	   country
	0  Denmark
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM
		  (SELECT country,
		          COUNT() AS n
		   FROM airport
		   GROUP BY country)
		WHERE (n >= 2)
		ORDER BY country

	         country
	0        Denmark
	1  United States
Wrong output for fuzzied solution in instance spider/flight_company/0019 (1146)
	EXPECTED OUTPUT ====

		SELECT pilot
		FROM flight
		GROUP BY pilot
		ORDER BY count(*) DESC
		LIMIT 1

	      pilot
	0  Thompson
	ACTUAL OUTPUT ====

		
		SELECT pilot
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT date, pilot,
		                      COUNT() AS n
		         FROM flight
		         GROUP BY date, pilot)
		      ORDER BY date DESC)
		   LIMIT 1)

	     pilot
	0  eterson
Wrong output for fuzzied solution in instance spider/flight_company/0007 (1147)
	EXPECTED OUTPUT ====

		SELECT name
		FROM airport
		WHERE country != 'Iceland'

	                            name
	0                Akureyri Airpor
	1               Akureyri Airport
	2               Akureyri Airport
	3          Akureyri AirportTp4XN
	4   Baltimore-Washington Airport
	5   Baltimore-Washington Airport
	6          DaF4oAkureyri Airport
	7                National Airpor
	8                Schiphol Airpor
	9          Schiphol Airporta6p1G
	10         cP0BXAkureyri Airport
	11         hvYWYAkureyri Airport
	12        wCsNational Airport4bE
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `name`
		   FROM `airport` INTERSECT SELECT `name`
		   FROM `airport`
		   WHERE (`country` != 'Iceland'))
		ORDER BY name

	                            name
	0                Akureyri Airpor
	1               Akureyri Airport
	2          Akureyri AirportTp4XN
	3   Baltimore-Washington Airport
	4          DaF4oAkureyri Airport
	5                National Airpor
	6                Schiphol Airpor
	7          Schiphol Airporta6p1G
	8          cP0BXAkureyri Airport
	9          hvYWYAkureyri Airport
	10        wCsNational Airport4bE
Wrong output for fuzzied solution in instance spider/flight_company/0001 (1148)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM flight
		WHERE velocity > 200

	   count(*)
	0        12
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT altitude,
		          velocity,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM flight
		      WHERE (velocity >= 200.0))
		   GROUP BY altitude,
		            velocity)
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
	3         1
	4         1
	5         1
	6         1
	7         1
	8         4
Wrong output for fuzzied solution in instance spider/flight_company/0014 (1149)
	EXPECTED OUTPUT ====

		SELECT T2.pilot
		FROM operate_company AS T1
		JOIN flight AS t2 ON T1.id = T2.company_id
		WHERE T1.principal_activities = 'Cargo' INTERSECT
		  SELECT T2.pilot
		  FROM operate_company AS T1
		  JOIN flight AS t2 ON T1.id = T2.company_id WHERE T1.principal_activities = 'Catering services'

	Empty DataFrame
	Columns: [pilot]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `pilot`
		FROM
		  (SELECT `id`,
		          `name`,
		          `type`,
		          `principal_activities`,
		          `incorporated_in`,
		          `group_equity_shareholding`,
		          `id_other`,
		          `vehicle_flight_number`,
		          `date`,
		          `pilot`,
		          `velocity`,
		          `altitude`,
		          `company_id`,
		          `id` AS `airport_id`
		   FROM
		     (SELECT `LHS`.`id` AS `id`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`type` AS `type`,
		             `LHS`.`principal_activities` AS `principal_activities`,
		             `LHS`.`incorporated_in` AS `incorporated_in`,
		             `LHS`.`group_equity_shareholding` AS `group_equity_shareholding`,
		             `RHS`.`id` AS `id_other`,
		             `RHS`.`vehicle_flight_number` AS `vehicle_flight_number`,
		             `RHS`.`date` AS `date`,
		             `RHS`.`pilot` AS `pilot`,
		             `RHS`.`velocity` AS `velocity`,
		             `RHS`.`altitude` AS `altitude`,
		             `RHS`.`company_id` AS `company_id`
		      FROM `operate_company` AS `LHS`
		      INNER JOIN `flight` AS `RHS` ON (`LHS`.`id` = `RHS`.`airport_id`)))
		WHERE (`principal_activities` = 'Cargo'
		       OR `principal_activities` = 'Catering services')
		ORDER BY pilot

	     pilot
	0  Thompso
Wrong output for fuzzied solution in instance spider/flight_company/0009 (1150)
	EXPECTED OUTPUT ====

		SELECT T1.id,
		       T1.name
		FROM operate_company AS T1
		JOIN flight AS t2 ON T1.id = T2.company_id
		GROUP BY T1.id
		HAVING count(*) > 1

	   id                                  name
	0   3         China Pacific Laundry Service
	1   8  vDEChina Pacific Laundry ServicesK6X
	2   9                              Air Chin
	3  12                          Air Hong Kon
	ACTUAL OUTPUT ====

		
		SELECT id,
		       name
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.type AS TYPE,
		          LHS.principal_activities AS principal_activities,
		          LHS.incorporated_in AS incorporated_in,
		          LHS.group_equity_shareholding AS group_equity_shareholding,
		          RHS.altitude AS altitude,
		          RHS.n AS n
		   FROM operate_company AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT altitude,
		                company_id,
		                COUNT() AS n
		         FROM flight
		         GROUP BY altitude,
		                  company_id)
		      WHERE (n != 1)) AS RHS ON (LHS.id = RHS.company_id))
		ORDER BY id

	   id                                  name
	0   3         China Pacific Laundry Service
	1   8  vDEChina Pacific Laundry ServicesK6X
Wrong output for fuzzied solution in instance spider/flight_company/0011 (1151)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.pilot
		FROM airport AS T1
		JOIN flight AS T2 ON T1.id = T2.airport_id
		WHERE T1.country = 'United States'
		  OR T1.name = 'Billund Airport'

	            pilot
	0  QeJThompsonQqv
	1        Thompson
	2         eterson
	3  qY9ThompsonDdW
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `pilot`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`vehicle_flight_number` AS `vehicle_flight_number`,
		          `LHS`.`date` AS `date`,
		          `LHS`.`pilot` AS `pilot`,
		          `LHS`.`velocity` AS `velocity`,
		          `LHS`.`altitude` AS `altitude`,
		          `LHS`.`airport_id` AS `airport_id`,
		          `LHS`.`company_id` AS `company_id`,
		          `RHS`.`city` AS `city`,
		          `RHS`.`country` AS `country`,
		          `RHS`.`iata` AS `iata`,
		          `RHS`.`icao` AS `icao`,
		          `RHS`.`name` AS `name`
		   FROM `flight` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `airport`
		      WHERE (`country` != 'United States'
		             OR `name` = 'Billund Airport')) AS RHS ON (LHS.id = RHS.id))
		ORDER BY pilot

	      pilot
	0  Peterson
	1  Thompson
	2   eterson
Wrong output for fuzzied solution in instance spider/flight_company/0010 (1152)
	EXPECTED OUTPUT ====

		SELECT T1.id,
		       T1.name,
		       T1.IATA
		FROM airport AS T1
		JOIN flight AS T2 ON T1.id = T2.airport_id
		GROUP BY T2.id
		ORDER BY count(*) DESC
		LIMIT 1

	   id           name iata
	0   1  Bergen Airpor  BCN
	ACTUAL OUTPUT ====

		
		SELECT id,
		       name,
		       iata
		FROM
		  (SELECT LHS.id AS id,
		          LHS.city AS city,
		          LHS.country AS country,
		          LHS.iata AS iata,
		          LHS.icao AS icao,
		          LHS.name AS name,
		          RHS.altitude AS altitude
		   FROM airport AS LHS
		   INNER JOIN
		     (SELECT altitude,
		             COUNT() AS n
		      FROM flight
		      GROUP BY altitude) AS RHS ON (LHS.id = RHS.n))
		ORDER BY id

	   id                              name      iata
	0   1                     Bergen Airpor       BCN
	1   1                     Bergen Airpor       BCN
	2   5                    El Prat Airpor       BGO
	3   2  qtjsBLogan International Airport  p9IqtBGO
Wrong output for base solution in instance spider/insurance_and_eClaims/0017 (1154)
	EXPECTED OUTPUT ====

		SELECT t2.customer_details
		FROM policies AS t1
		JOIN customers AS t2 ON t1.customer_id = t2.customer_id
		GROUP BY t2.customer_details
		ORDER BY count(*) DESC
		LIMIT 1

	  customer_details
	0   Dr. Diana Rath
	ACTUAL OUTPUT ====

		
		SELECT customer_details
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.customer_details AS customer_details,
		                LHS.policy_id AS policy_id,
		                LHS.policy_type_code AS policy_type_code,
		                LHS.start_date AS start_date,
		                LHS.end_date AS end_date,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.customer_id AS customer_id,
		                   LHS.customer_details AS customer_details,
		                   RHS.policy_id AS policy_id,
		                   RHS.policy_type_code AS policy_type_code,
		                   RHS.start_date AS start_date,
		                   RHS.end_date AS end_date
		            FROM customers AS LHS
		            INNER JOIN policies AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS
		         INNER JOIN
		           (SELECT policy_id,
		                   customer_id,
		                   policy_type_code,
		                   start_date,
		                   end_date,
		                   COUNT(*) OVER () AS n
		            FROM policies) AS RHS ON (LHS.customer_id = RHS.customer_id
		                                         AND LHS.policy_id = RHS.policy_id
		                                         AND LHS.policy_type_code = RHS.policy_type_code
		                                         AND LHS.start_date = RHS.start_date
		                                         AND LHS.end_date = RHS.end_date))
		      ORDER BY policy_type_code)
		   LIMIT 1)

	  customer_details
	0  Buddy Marquardt
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/insurance_and_eClaims/0003 (1156)
	EXPECTED OUTPUT ====

		SELECT policy_type_code
		FROM policies
		GROUP BY policy_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  policy_type_code
	0        Uniformed
	ACTUAL OUTPUT ====

		
		SELECT policy_type_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT policy_type_code,
		                COUNT() AS n
		         FROM policies
		         GROUP BY policy_type_code)
		      ORDER BY n DESC)
		   LIMIT 1)

	  policy_type_code
	0           Normal
Wrong output for fuzzied solution in instance spider/insurance_and_eClaims/0013 (1157)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t2.customer_details
		FROM policies AS t1
		JOIN customers AS t2 ON t1.customer_id = t2.customer_id
		WHERE t1.policy_type_code = "Deputy"

	      customer_details
	0       Sydnie Friesen
	1  Sydnie FriesenDjx)T
	ACTUAL OUTPUT ====

		
		SELECT `customer_details`
		FROM
		  (SELECT `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`customer_details` AS `customer_details`,
		          `LHS`.`policy_id` AS `policy_id`,
		          `LHS`.`policy_type_code` AS `policy_type_code`,
		          `LHS`.`start_date` AS `start_date`,
		          `LHS`.`end_date` AS `end_date`
		   FROM
		     (SELECT `LHS`.`customer_id` AS `customer_id`,
		             `LHS`.`customer_details` AS `customer_details`,
		             `RHS`.`policy_id` AS `policy_id`,
		             `RHS`.`policy_type_code` AS `policy_type_code`,
		             `RHS`.`start_date` AS `start_date`,
		             `RHS`.`end_date` AS `end_date`
		      FROM `customers` AS `LHS`
		      INNER JOIN `policies` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `policies`
		      WHERE (`policy_type_code` = 'Deputy')) AS RHS ON (LHS.customer_id = RHS.customer_id
		                                                        AND LHS.policy_id = RHS.policy_id
		                                                        AND LHS.policy_type_code = RHS.policy_type_code
		                                                        AND LHS.start_date = RHS.start_date
		                                                        AND LHS.end_date = RHS.end_date))
		ORDER BY customer_details

	      customer_details
	0       Sydnie Friesen
	1       Sydnie Friesen
	2  Sydnie FriesenDjx)T
	3  Sydnie FriesenDjx)T
Wrong output for base solution in instance spider/insurance_and_eClaims/0006 (1158)
	EXPECTED OUTPUT ====

	   sum_t1_amount_claimed_
	0                 1293.55
	ACTUAL OUTPUT ====

		SELECT sum(t1.amount_claimed)
		FROM claim_headers AS t1
		JOIN claims_documents AS t2 ON t1.claim_header_id = t2.claim_id
		WHERE t2.created_date =
		    (SELECT created_date
		     FROM claims_documents
		     ORDER BY created_date
		     LIMIT 1)

	   sum(t1.amount_claimed)
	0                 1293.55
Wrong output for ground truth in instance spider/insurance_and_eClaims/0006 (1158)
Wrong output for fuzzied solution in instance spider/insurance_and_eClaims/0004 (1159)
	EXPECTED OUTPUT ====

		SELECT policy_type_code
		FROM policies
		GROUP BY policy_type_code
		HAVING count(*) > 2

	  policy_type_code
	0         Uniforme
	1        Uniformed
	2         niformed
	ACTUAL OUTPUT ====

		
		SELECT policy_type_code
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.n AS n,
		          RHS.policy_id AS policy_id,
		          RHS.policy_type_code AS policy_type_code,
		          RHS.start_date AS start_date,
		          RHS.end_date AS end_date
		   FROM
		     (SELECT customer_id,
		             COUNT() AS n
		      FROM policies
		      GROUP BY customer_id) AS LHS
		   LEFT JOIN policies AS RHS ON (LHS.customer_id = RHS.customer_id))
		WHERE (n > 2)
		ORDER BY policy_type_code

	  policy_type_code
	0  9nwUniformed)Nm
	1         Uniforme
	2        Uniformed
	3        Uniformed
	4        Uniformed
	5        Uniformed
	6  cJTUniformed4kS
	7  n6zUniformedZZ2
	8         niformed
	9         niformed
No solution for instance spider/insurance_and_eClaims/0012 (1160)
No solution for instance spider/insurance_and_eClaims/0015 (1161)
Wrong output for base solution in instance spider/insurance_and_eClaims/0005 (1162)
	EXPECTED OUTPUT ====

	   sum_amount_piad_  avg_amount_piad_
	0           7314.68        487.645333
	ACTUAL OUTPUT ====

		SELECT sum(amount_piad),
		       avg(amount_piad)
		FROM claim_headers

	   sum(amount_piad)  avg(amount_piad)
	0           7314.68        487.645333
Wrong output for ground truth in instance spider/insurance_and_eClaims/0005 (1162)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/insurance_and_eClaims/0001 (1168)
	EXPECTED OUTPUT ====

		SELECT customer_details
		FROM customers
		ORDER BY customer_details

	              customer_details
	0   Bg(YSMrs. Lilly Graham III
	1          Mr. Edwardo Blanda 
	2         Mr. Edwardo Blanda I
	3         Mr. Edwardo Blanda I
	4    Mr. Edwardo Blanda IMFQml
	5        Mrs. Lilly Graham III
	6        Mrs. Lilly Graham III
	7        Mrs. Lilly Graham III
	8           Mrs. Liza Heller V
	9           Mrs. Liza Heller V
	10   QIijVMr. Edwardo Blanda I
	11  iO5oGMrs. Lilly Graham III
	12        kJl4lBuddy Marquardt
	13         r. Edwardo Blanda I
	14     rqrHJMrs. Liza Heller V
	ACTUAL OUTPUT ====

		
		SELECT customer_details
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.customer_details AS customer_details,
		          RHS.customer_id AS customer_id_other
		   FROM customers AS LHS
		   INNER JOIN customers AS RHS ON (LHS.customer_details = RHS.customer_details))
		ORDER BY customer_details

	              customer_details
	0   Bg(YSMrs. Lilly Graham III
	1          Mr. Edwardo Blanda 
	2         Mr. Edwardo Blanda I
	3         Mr. Edwardo Blanda I
	4         Mr. Edwardo Blanda I
	5         Mr. Edwardo Blanda I
	6    Mr. Edwardo Blanda IMFQml
	7        Mrs. Lilly Graham III
	8        Mrs. Lilly Graham III
	9        Mrs. Lilly Graham III
	10       Mrs. Lilly Graham III
	11       Mrs. Lilly Graham III
	12       Mrs. Lilly Graham III
	13       Mrs. Lilly Graham III
	14       Mrs. Lilly Graham III
	15       Mrs. Lilly Graham III
	16          Mrs. Liza Heller V
	17          Mrs. Liza Heller V
	18          Mrs. Liza Heller V
	19          Mrs. Liza Heller V
	20   QIijVMr. Edwardo Blanda I
	21  iO5oGMrs. Lilly Graham III
	22        kJl4lBuddy Marquardt
	23         r. Edwardo Blanda I
	24     rqrHJMrs. Liza Heller V
Wrong output for fuzzied solution in instance spider/insurance_and_eClaims/0014 (1169)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t2.customer_details
		FROM policies AS t1
		JOIN customers AS t2 ON t1.customer_id = t2.customer_id
		WHERE t1.policy_type_code = "Deputy"
		  OR t1.policy_type_code = "Uniform"

	          customer_details
	0        America Jaskolski
	1           Dr. Diana Rath
	2        Mrs. Hanna Willms
	3      Selena GerholduPNFd
	4  isBMrs. Hanna Willmsgsl
	5            v2x6ixXjPyYX7
	ACTUAL OUTPUT ====

		
		SELECT `customer_details`
		FROM
		  (SELECT `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`customer_details` AS `customer_details`,
		          `LHS`.`policy_id` AS `policy_id`,
		          `LHS`.`policy_type_code` AS `policy_type_code`,
		          `LHS`.`start_date` AS `start_date`,
		          `LHS`.`end_date` AS `end_date`
		   FROM
		     (SELECT `LHS`.`customer_id` AS `customer_id`,
		             `LHS`.`customer_details` AS `customer_details`,
		             `RHS`.`policy_id` AS `policy_id`,
		             `RHS`.`policy_type_code` AS `policy_type_code`,
		             `RHS`.`start_date` AS `start_date`,
		             `RHS`.`end_date` AS `end_date`
		      FROM `customers` AS `LHS`
		      INNER JOIN `policies` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `policies`
		      WHERE (`policy_type_code` = 'Deputy')) AS RHS ON (LHS.customer_id = RHS.customer_id
		                                                        AND LHS.policy_id = RHS.policy_id
		                                                        AND LHS.policy_type_code = RHS.policy_type_code
		                                                        AND LHS.start_date = RHS.start_date
		                                                        AND LHS.end_date = RHS.end_date))
		ORDER BY customer_details

	          customer_details
	0        America Jaskolski
	1  isBMrs. Hanna Willmsgsl
	2            v2x6ixXjPyYX7
Wrong output for fuzzied solution in instance spider/insurance_and_eClaims/0009 (1170)
	EXPECTED OUTPUT ====

		SELECT customer_details
		FROM customers
		EXCEPT
		SELECT t2.customer_details
		FROM policies AS t1
		JOIN customers AS t2 ON t1.customer_id = t2.customer_id

	              customer_details
	0        XdGyAmerica Jaskolski
	1          (JZyC2zU XFg9dZJ9KO
	2       7D(kZ4kkm8phNKg1c)ElPq
	3             America Jaskolsk
	4                Dr. Diana Rat
	5            IA6CkDsyu7XnQWvta
	6      L9KMrs. Hanna WillmsBKo
	7   Miss Felicita Reichel(vsw7
	8   Miss Felicita ReichelULQrc
	9       VnSibAmerica Jaskolski
	10         cV3hYDr. Diana Rath
	11        gydXQvTOMkhpKLoWPlgH
	12        jelyQLpsfdN5fcgT 4YA
	13      moUSqQsymF4R8zynAhhPDO
	14      oG(4vAugustine Kerluke
	ACTUAL OUTPUT ====

		
		SELECT customer_details
		FROM
		  (SELECT *
		   FROM customers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM policies AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY customer_details

	              customer_details
	0        XdGyAmerica Jaskolski
	1          (JZyC2zU XFg9dZJ9KO
	2       7D(kZ4kkm8phNKg1c)ElPq
	3             America Jaskolsk
	4            America Jaskolski
	5            America Jaskolski
	6            Augustine Kerluke
	7                Dr. Diana Rat
	8                Dr. Diana Rat
	9                Dr. Diana Rat
	10              Dr. Diana Rath
	11           IA6CkDsyu7XnQWvta
	12     L9KMrs. Hanna WillmsBKo
	13       Miss Felicita Reichel
	14       Miss Felicita Reichel
	15  Miss Felicita Reichel(vsw7
	16  Miss Felicita ReichelULQrc
	17           Mrs. Hanna Willms
	18           Mrs. Hanna Willms
	19      VnSibAmerica Jaskolski
	20         cV3hYDr. Diana Rath
	21        gydXQvTOMkhpKLoWPlgH
	22        iss Felicita Reichel
	23        iss Felicita Reichel
	24        jelyQLpsfdN5fcgT 4YA
	25      moUSqQsymF4R8zynAhhPDO
	26      oG(4vAugustine Kerluke
Wrong output for fuzzied solution in instance spider/insurance_and_eClaims/0011 (1171)
	EXPECTED OUTPUT ====

		SELECT t2.claim_status_name
		FROM claims_processing AS t1
		JOIN claims_processing_stages AS t2 ON t1.claim_stage_id = t2.claim_stage_id
		GROUP BY t1.claim_stage_id
		ORDER BY count(*) DESC
		LIMIT 1

	  claim_status_name
	0              Clos
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT claim_status_name
		FROM
		  (SELECT LHS.claim_stage_id AS claim_stage_id,
		          LHS.next_claim_stage_id AS next_claim_stage_id,
		          LHS.claim_status_name AS claim_status_name,
		          LHS.claim_status_description AS claim_status_description,
		          RHS.claim_id AS claim_id,
		          RHS.claim_processing_id AS claim_processing_id
		   FROM claims_processing_stages AS LHS
		   INNER JOIN
		     (SELECT claim_id,
		             claim_processing_id,
		             COUNT() AS n
		      FROM claims_processing
		      GROUP BY claim_id,
		               claim_processing_id) AS RHS ON (LHS.claim_stage_id = RHS.n))
		ORDER BY claim_status_name

	  claim_status_name
	0             Close
Wrong output for base solution in instance spider/formula_1/0037 (1174)
	EXPECTED OUTPUT ====

	    avg_t2_fastestlapspeed_                      name  year
	0                150.597355         Monaco Grand Prix  2015
	1                151.406984      Singapore Grand Prix  2015
	2                176.392984        Spanish Grand Prix  2015
	3                178.447016        Russian Grand Prix  2015
	4                180.719387      Brazilian Grand Prix  2015
	5                182.294516        Mexican Grand Prix  2015
	6                182.863194      Hungarian Grand Prix  2015
	7                184.105129      Abu Dhabi Grand Prix  2015
	8                185.930435  United States Grand Prix  2015
	9                188.202677        Chinese Grand Prix  2015
	10               188.330806        Bahrain Grand Prix  2015
	11               189.373950     Australian Grand Prix  2015
	12               189.907887      Malaysian Grand Prix  2015
	13               195.544855        British Grand Prix  2015
	14               196.345419       Canadian Grand Prix  2015
	15               199.620636       European Grand Prix  2016
	16               202.048371        Belgian Grand Prix  2015
	17               202.265468       Austrian Grand Prix  2015
	18               203.450950     Azerbaijan Grand Prix  2017
	19               205.553773         German Grand Prix  2016
	20               211.279774       Japanese Grand Prix  2015
	21               228.389774        Italian Grand Prix  2015
	ACTUAL OUTPUT ====

		SELECT avg(T2.fastestlapspeed),
		       T1.name,
		       T1.year
		FROM races AS T1
		JOIN results AS T2 ON T1.raceid = T2.raceid
		WHERE T1.year > 2014
		GROUP BY T1.name
		ORDER BY T1.year

	    avg(t2.fastestlapspeed)                      name  year
	0                150.597355         Monaco Grand Prix  2015
	1                151.406984      Singapore Grand Prix  2015
	2                176.392984        Spanish Grand Prix  2015
	3                178.447016        Russian Grand Prix  2015
	4                180.719387      Brazilian Grand Prix  2015
	5                182.294516        Mexican Grand Prix  2015
	6                182.863194      Hungarian Grand Prix  2015
	7                184.105129      Abu Dhabi Grand Prix  2015
	8                185.930435  United States Grand Prix  2015
	9                188.202677        Chinese Grand Prix  2015
	10               188.330806        Bahrain Grand Prix  2015
	11               189.373950     Australian Grand Prix  2015
	12               189.907887      Malaysian Grand Prix  2015
	13               195.544855        British Grand Prix  2015
	14               196.345419       Canadian Grand Prix  2015
	15               199.620636       European Grand Prix  2016
	16               202.048371        Belgian Grand Prix  2015
	17               202.265468       Austrian Grand Prix  2015
	18               203.450950     Azerbaijan Grand Prix  2017
	19               205.553773         German Grand Prix  2016
	20               211.279774       Japanese Grand Prix  2015
	21               228.389774        Italian Grand Prix  2015
Wrong output for ground truth in instance spider/formula_1/0037 (1174)
No solution for instance spider/formula_1/0036 (1176)
No solution for instance spider/formula_1/0017 (1177)
No solution for instance spider/formula_1/0039 (1178)
No solution for instance spider/formula_1/0038 (1179)
Wrong output for fuzzied solution in instance spider/formula_1/0003 (1180)
	EXPECTED OUTPUT ====

		SELECT name
		FROM races
		WHERE YEAR = 2017

	                     name
	0  CkOo4German Grand Prix
	1       French Grand Prix
	2      Turkish Grand Prix
	3      Turkish Grand Prix
	4      Turkish Grand Prix
	5     VycgfqYV0NuS8FgAsVs
	6        WFfUD3Pl1CjPfk7C
	7    ortuguese Grand Prix
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT name
		   FROM races
		   WHERE (YEAR = 2017) INTERSECT
		     SELECT name
		     FROM races WHERE (YEAR = 2017))
		ORDER BY name

	                     name
	0  CkOo4German Grand Prix
	1       French Grand Prix
	2      Turkish Grand Prix
	3     VycgfqYV0NuS8FgAsVs
	4        WFfUD3Pl1CjPfk7C
	5    ortuguese Grand Prix
No solution for instance spider/formula_1/0027 (1181)
No solution for instance spider/formula_1/0030 (1182)
No solution for instance spider/formula_1/0004 (1184)
No solution for instance spider/formula_1/0012 (1185)
No solution for instance spider/formula_1/0015 (1187)
Wrong output for fuzzied solution in instance spider/formula_1/0016 (1188)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.forename
		FROM drivers AS T1
		JOIN driverstandings AS T2 ON T1.driverid = T2.driverid
		WHERE T2.position = 1
		  AND T2.wins = 1

	Empty DataFrame
	Columns: [forename]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT forename
		FROM
		  (SELECT *
		   FROM drivers AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM driverstandings
		           WHERE (POSITION <= 1
		                  AND wins = POSITION)) AS RHS
		        WHERE (LHS.driverid = RHS.driverid) ))
		ORDER BY forename

	  forename
	0     addy
Wrong output for fuzzied solution in instance spider/formula_1/0018 (1190)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       nationality
		FROM constructors
		GROUP BY nationality

	    count(*)     nationality
	0          1  7cJQx7sUd4P3q1
	1          1         America
	2          1         British
	3          1    British)Tbx7
	4          1  F8R52O bqL 7x7
	5          1    PTf8h)yXNV9k
	6          1          Russia
	7          1         Russian
	8          1        VueKqKu3
	9          1         anadian
	10         1    gCNF)British
	11         1          ritish
	12         2          Britis
	13         3        American
	14         4        Canadian
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       nationality
		FROM
		  (SELECT nationality,
		          COUNT() AS n
		   FROM
		     (SELECT constructorref,
		             nationality,
		             COUNT() AS n
		      FROM constructors
		      GROUP BY constructorref,
		               nationality)
		   GROUP BY nationality)
		ORDER BY count___

	    count___     nationality
	0          1  7cJQx7sUd4P3q1
	1          1         America
	2          1         British
	3          1    British)Tbx7
	4          1  F8R52O bqL 7x7
	5          1    PTf8h)yXNV9k
	6          1          Russia
	7          1         Russian
	8          1        VueKqKu3
	9          1         anadian
	10         1    gCNF)British
	11         1          ritish
	12         2        American
	13         2          Britis
	14         4        Canadian
Wrong output for fuzzied solution in instance spider/formula_1/0035 (1191)
	EXPECTED OUTPUT ====

		SELECT max(T2.fastestlapspeed)
		FROM races AS T1
		JOIN results AS T2 ON T1.raceid = T2.raceid
		WHERE T1.year = 2008
		  AND T1.name = "Monaco Grand Prix"

	  max(t2.fastestlapspeed)
	0                    None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT MAX(`fastestlapspeed`) OVER () AS `max_t2_fastestlapspeed_`
		FROM
		  (SELECT *
		   FROM `results` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `races`
		           WHERE (`name` != 'Monaco Grand Prix'
		                  OR YEAR != 2008)) AS RHS
		        WHERE (LHS.raceid = RHS.raceid) ))
		ORDER BY max_t2_fastestlapspeed_

	Empty DataFrame
	Columns: [max_t2_fastestlapspeed_]
	Index: []
Wrong output for fuzzied solution in instance spider/formula_1/0020 (1192)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM races AS T1
		JOIN circuits AS T2 ON T1.circuitid = T2.circuitid
		WHERE T2.country = "Spain"
		  AND T1.year > 2017

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `races`
		      WHERE (`year` >= 2017)) AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `circuits`
		           WHERE (`country` != 'Spain')) AS RHS
		        WHERE (LHS.circuitid = RHS.circuitid) ))
		ORDER BY name

	                name
	0  French Grand Prix
	1  ritish Grand Prix
No solution for instance spider/formula_1/0034 (1194)
No solution for instance spider/formula_1/0014 (1198)
Error while executing solution for instance spider/formula_1/0011 (1200)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT driverid) OVER () AS count_distinct_driverid_
FROM
  (SELECT *
   FROM results AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM races
           WHERE (raceid > 2009
                  OR YEAR != 2009)) AS RHS
        WHERE (LHS.raceid = RHS.raceid) ))
ORDER BY count_distinct_driverid_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/formula_1/0010 (1201)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `name`) OVER () AS `count___`
FROM
  (SELECT *
   FROM
     (SELECT *
      FROM `races`
      WHERE (`name` != 'Australian Grand Prix'
             AND YEAR > 2009)) AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM results AS RHS
        WHERE (LHS.raceid = RHS.raceid) ))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/formula_1/0040 (1202)
Wrong output for fuzzied solution in instance spider/e_government/0017 (1205)
	EXPECTED OUTPUT ====

		SELECT t1.party_email
		FROM parties AS t1
		JOIN party_services AS t2 ON t1.party_id = t2.customer_id
		GROUP BY t1.party_email
		ORDER BY count(*) DESC
		LIMIT 1

	             party_email
	0  ora.hyatt@example.net
	ACTUAL OUTPUT ====

		
		SELECT party_email
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT party_id,
		                payment_method_code,
		                party_phone,
		                party_email,
		                n,
		                party_id AS customer_id
		         FROM
		           (SELECT LHS.party_id AS party_id,
		                   LHS.payment_method_code AS payment_method_code,
		                   LHS.party_phone AS party_phone,
		                   LHS.party_email AS party_email,
		                   RHS.n AS n
		            FROM parties AS LHS
		            INNER JOIN
		              (SELECT customer_id,
		                      COUNT() AS n
		               FROM party_services
		               GROUP BY customer_id) AS RHS ON (LHS.party_id = RHS.customer_id)))
		      ORDER BY n DESC)
		   LIMIT 1)

	                  party_email
	0  daniel.charity@example.net
Wrong output for fuzzied solution in instance spider/e_government/0008 (1206)
	EXPECTED OUTPUT ====

		SELECT t3.individual_last_name
		FROM organizations AS t1
		JOIN organization_contact_individuals AS t2 ON t1.organization_id = t2.organization_id
		JOIN individuals AS t3 ON t2.individual_id = t3.individual_id
		WHERE t1.organization_name = "Labour Party"
		ORDER BY t2.date_contact_to DESC
		LIMIT 1

	Empty DataFrame
	Columns: [individual_last_name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `individual_last_name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`individual_id` AS `individual_id`,
		                `LHS`.`individual_first_name` AS `individual_first_name`,
		                `LHS`.`individual_middle_name` AS `individual_middle_name`,
		                `LHS`.`inidividual_phone` AS `inidividual_phone`,
		                `LHS`.`individual_email` AS `individual_email`,
		                `LHS`.`individual_address` AS `individual_address`,
		                `LHS`.`individual_last_name` AS `individual_last_name`,
		                `LHS`.`organization_id` AS `organization_id`,
		                `LHS`.`date_formed` AS `date_formed`,
		                `LHS`.`organization_name` AS `organization_name`,
		                `LHS`.`uk_vat_number` AS `uk_vat_number`,
		                `LHS`.`date_contact_from` AS `date_contact_from`,
		                `LHS`.`date_contact_to` AS `date_contact_to`
		         FROM
		           (SELECT `LHS`.`individual_id` AS `individual_id`,
		                   `LHS`.`individual_first_name` AS `individual_first_name`,
		                   `LHS`.`individual_middle_name` AS `individual_middle_name`,
		                   `LHS`.`inidividual_phone` AS `inidividual_phone`,
		                   `LHS`.`individual_email` AS `individual_email`,
		                   `LHS`.`individual_address` AS `individual_address`,
		                   `LHS`.`individual_last_name` AS `individual_last_name`,
		                   `LHS`.`organization_id` AS `organization_id`,
		                   `LHS`.`date_formed` AS `date_formed`,
		                   `LHS`.`organization_name` AS `organization_name`,
		                   `LHS`.`uk_vat_number` AS `uk_vat_number`,
		                   `RHS`.`date_contact_from` AS `date_contact_from`,
		                   `RHS`.`date_contact_to` AS `date_contact_to`
		            FROM
		              (SELECT `LHS`.`individual_id` AS `individual_id`,
		                      `LHS`.`individual_first_name` AS `individual_first_name`,
		                      `LHS`.`individual_middle_name` AS `individual_middle_name`,
		                      `LHS`.`inidividual_phone` AS `inidividual_phone`,
		                      `LHS`.`individual_email` AS `individual_email`,
		                      `LHS`.`individual_address` AS `individual_address`,
		                      `LHS`.`individual_last_name` AS `individual_last_name`,
		                      `RHS`.`organization_id` AS `organization_id`,
		                      `RHS`.`date_formed` AS `date_formed`,
		                      `RHS`.`organization_name` AS `organization_name`,
		                      `RHS`.`uk_vat_number` AS `uk_vat_number`
		               FROM `individuals` AS `LHS`
		               CROSS JOIN `organizations` AS `RHS`) AS `LHS`
		            INNER JOIN `organization_contact_individuals` AS `RHS` ON (`LHS`.`individual_id` = `RHS`.`individual_id`
		                                                                          AND `LHS`.`organization_id` = `RHS`.`organization_id`)) AS `LHS`
		         INNER JOIN
		           (SELECT *
		            FROM `organizations`
		            WHERE (`organization_name` != 'Labour Party')) AS RHS ON (LHS.organization_id = RHS.organization_id
		                                                                      AND LHS.date_formed = RHS.date_formed
		                                                                      AND LHS.organization_name = RHS.organization_name
		                                                                      AND LHS.uk_vat_number = RHS.uk_vat_number))
		      ORDER BY date_contact_from)
		   LIMIT 1)

	  individual_last_name
	0               Maggio
Wrong output for fuzzied solution in instance spider/e_government/0003 (1207)
	EXPECTED OUTPUT ====

		SELECT t1.form_name
		FROM forms AS t1
		JOIN party_forms AS t2 ON t1.form_id = t2.form_id
		GROUP BY t2.form_id
		ORDER BY count(*) DESC
		LIMIT 1

	         form_name
	0  Property Change
	ACTUAL OUTPUT ====

		
		SELECT form_name
		FROM
		  (SELECT form_id,
		          form_type_code,
		          service_id,
		          form_number,
		          form_name,
		          form_description,
		          n,
		          date_completion_started,
		          form_status_code,
		          date_fully_completed,
		          service_id AS party_id
		   FROM
		     (SELECT LHS.form_id AS form_id,
		             LHS.form_type_code AS form_type_code,
		             LHS.service_id AS service_id,
		             LHS.form_number AS form_number,
		             LHS.form_name AS form_name,
		             LHS.form_description AS form_description,
		             LHS.n AS n,
		             RHS.date_completion_started AS date_completion_started,
		             RHS.form_status_code AS form_status_code,
		             RHS.date_fully_completed AS date_fully_completed
		      FROM
		        (SELECT form_id,
		                form_type_code,
		                service_id,
		                form_number,
		                form_name,
		                form_description,
		                COUNT(*) OVER () AS n
		         FROM forms) AS LHS
		      INNER JOIN party_forms AS RHS ON (LHS.service_id = RHS.party_id
		                                           AND LHS.n = RHS.form_id)))
		ORDER BY form_name

	              form_name
	0       Property Change
	1  Property ChangefwsK7
Error while executing solution for instance spider/e_government/0013 (1208)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT COUNT(DISTINCT `state_province_county`) OVER () AS `count___`
FROM `addresses`
WHERE (`state_province_county` = 'Colorado')
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/e_government/0012 (1211)
No solution for instance spider/e_government/0015 (1212)
Error while executing solution for instance spider/e_government/0005 (1213)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT party_email
FROM
  (SELECT party_id,
          payment_method_code,
          party_phone,
          party_email,
          form_id,
          date_completion_started,
          form_status_code,
          date_fully_completed,
          COUNT(DISTINCT form_id) OVER () AS n_distinct
   FROM
     (SELECT LHS.party_id AS party_id,
             LHS.payment_method_code AS payment_method_code,
             LHS.party_phone AS party_phone,
             LHS.party_email AS party_email,
             RHS.form_id AS form_id,
             RHS.date_completion_started AS date_completion_started,
             RHS.form_status_code AS form_status_code,
             RHS.date_fully_completed AS date_fully_completed
      FROM parties AS LHS
      INNER JOIN party_forms AS RHS ON (LHS.party_id = RHS.party_id)))
WHERE (form_id <= 1
       OR n_distinct < form_id)
ORDER BY party_email]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
No solution for instance spider/e_government/0018 (1215)
No solution for instance spider/e_government/0020 (1216)
Wrong output for fuzzied solution in instance spider/e_government/0019 (1217)
	EXPECTED OUTPUT ====

		SELECT t1.organization_name
		FROM organizations AS t1
		JOIN organization_contact_individuals AS t2 ON t1.organization_id = t2.organization_id
		GROUP BY t1.organization_name
		ORDER BY count(*) DESC
		LIMIT 1

	  organization_name
	0       Green Party
	ACTUAL OUTPUT ====

		
		SELECT organization_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.organization_id AS organization_id,
		                LHS.date_formed AS date_formed,
		                LHS.organization_name AS organization_name,
		                LHS.uk_vat_number AS uk_vat_number,
		                LHS.individual_id AS individual_id,
		                LHS.date_contact_from AS date_contact_from,
		                LHS.date_contact_to AS date_contact_to,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.organization_id AS organization_id,
		                   LHS.date_formed AS date_formed,
		                   LHS.organization_name AS organization_name,
		                   LHS.uk_vat_number AS uk_vat_number,
		                   RHS.individual_id AS individual_id,
		                   RHS.date_contact_from AS date_contact_from,
		                   RHS.date_contact_to AS date_contact_to
		            FROM organizations AS LHS
		            INNER JOIN organization_contact_individuals AS RHS ON (LHS.organization_id = RHS.organization_id)) AS LHS
		         INNER JOIN
		           (SELECT date_contact_to,
		                   COUNT() AS n
		            FROM organization_contact_individuals
		            GROUP BY date_contact_to) AS RHS ON (LHS.date_contact_to = RHS.date_contact_to))
		      ORDER BY date_contact_from)
		   LIMIT 1)

	  organization_name
	0       abour Party
No solution for instance spider/e_government/0001 (1219)
Wrong output for base solution in instance spider/e_government/0009 (1221)
	EXPECTED OUTPUT ====

		SELECT t3.individual_last_name
		FROM organizations AS t1
		JOIN organization_contact_individuals AS t2 ON t1.organization_id = t2.organization_id
		JOIN individuals AS t3 ON t2.individual_id = t3.individual_id
		WHERE t1.uk_vat_number =
		    (SELECT max(uk_vat_number)
		     FROM organizations)
		ORDER BY t2.date_contact_to ASC
		LIMIT 1

	  individual_last_name
	0               Jacobs
	ACTUAL OUTPUT ====

		
		SELECT individual_last_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.individual_id AS individual_id,
		                LHS.individual_first_name AS individual_first_name,
		                LHS.individual_middle_name AS individual_middle_name,
		                LHS.inidividual_phone AS inidividual_phone,
		                LHS.individual_email AS individual_email,
		                LHS.individual_address AS individual_address,
		                LHS.individual_last_name AS individual_last_name,
		                LHS.organization_id AS organization_id,
		                LHS.date_contact_from AS date_contact_from,
		                LHS.date_contact_to AS date_contact_to,
		                RHS.organization_name AS organization_name,
		                RHS.maxuk_vat_number AS maxuk_vat_number
		         FROM
		           (SELECT LHS.individual_id AS individual_id,
		                   LHS.individual_first_name AS individual_first_name,
		                   LHS.individual_middle_name AS individual_middle_name,
		                   LHS.inidividual_phone AS inidividual_phone,
		                   LHS.individual_email AS individual_email,
		                   LHS.individual_address AS individual_address,
		                   LHS.individual_last_name AS individual_last_name,
		                   RHS.organization_id AS organization_id,
		                   RHS.date_contact_from AS date_contact_from,
		                   RHS.date_contact_to AS date_contact_to
		            FROM individuals AS LHS
		            INNER JOIN organization_contact_individuals AS RHS ON (LHS.individual_id = RHS.individual_id)) AS LHS
		         INNER JOIN
		           (SELECT organization_id,
		                   organization_name,
		                   MAX(uk_vat_number) AS maxuk_vat_number
		            FROM organizations
		            GROUP BY organization_id,
		                     organization_name) AS RHS ON (LHS.organization_id = RHS.organization_id))
		      ORDER BY organization_name DESC)
		   LIMIT 1)

	  individual_last_name
	0              Bradtke
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/machine_repair/0008 (1225)
	EXPECTED OUTPUT ====

		SELECT Team
		FROM technician
		GROUP BY Team
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  team
	0  CWS
	ACTUAL OUTPUT ====

		
		SELECT team
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT name,
		                team,
		                COUNT() AS n
		         FROM technician
		         GROUP BY name,
		                  team)
		      ORDER BY name DESC)
		   LIMIT 1)

	  team
	0  CLE
Wrong output for fuzzied solution in instance spider/machine_repair/0012 (1230)
	EXPECTED OUTPUT ====

		SELECT T3.Name
		FROM repair_assignment AS T1
		JOIN machine AS T2 ON T1.machine_id = T2.machine_id
		JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID
		WHERE T2.value_points > 70

	                  name
	0   42qLou BoudreauwfO
	1    Charlie Hollocher
	2         Eddie Collin
	3         Eddie Collin
	4        Eddie Collins
	5        Eddie Collins
	6        Eddie Collins
	7        Eddie Collins
	8         Lou Boudreau
	9         ddie Collins
	10    harlie Hollocher
	11    harlie Hollocher
	12    harlie Hollocher
	13    harlie Hollocher
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.technician_id AS technician_id,
		          LHS.name AS name,
		          LHS.team AS team,
		          LHS.starting_year AS starting_year,
		          LHS.age AS age,
		          LHS.repair_id AS repair_id,
		          LHS.machine_id AS machine_id
		   FROM
		     (SELECT LHS.technician_id AS technician_id,
		             LHS.name AS name,
		             LHS.team AS team,
		             LHS.starting_year AS starting_year,
		             LHS.age AS age,
		             RHS.repair_id AS repair_id,
		             RHS.machine_id AS machine_id
		      FROM technician AS LHS
		      INNER JOIN repair_assignment AS RHS ON (LHS.technician_id = RHS.technician_id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM repair_assignment AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM machine
		              WHERE (value_points < 70.0)) AS RHS
		           WHERE (LHS.machine_id = RHS.machine_id) )) AS RHS ON (LHS.technician_id = RHS.technician_id
		                                                                 AND LHS.repair_id = RHS.repair_id
		                                                                 AND LHS.machine_id = RHS.machine_id))
		ORDER BY name

	                  name
	0   42qLou BoudreauwfO
	1    Charlie Hollocher
	2    Charlie Hollocher
	3         Eddie Collin
	4         Eddie Collin
	5        Eddie Collins
	6        Eddie Collins
	7        Eddie Collins
	8        Eddie Collins
	9        Eddie Collins
	10       Eddie Collins
	11       Eddie Collins
	12       Eddie Collins
	13        Lou Boudreau
	14        Lou Boudreau
	15        ddie Collins
	16        ddie Collins
	17    harlie Hollocher
	18    harlie Hollocher
	19    harlie Hollocher
	20    harlie Hollocher
No solution for instance spider/machine_repair/0007 (1233)
Wrong output for fuzzied solution in instance spider/machine_repair/0001 (1234)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM technician

	   count(*)
	0        10
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT age,
		             COUNT() AS n
		      FROM technician
		      GROUP BY age))
		ORDER BY count___

	   count___
	0         7
Wrong output for fuzzied solution in instance spider/machine_repair/0010 (1238)
	EXPECTED OUTPUT ====

		SELECT T3.Name,
		       T2.Machine_series
		FROM repair_assignment AS T1
		JOIN machine AS T2 ON T1.machine_id = T2.machine_id
		JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID

	                name machine_series
	0      Eddie Collins    KAqRS125CKn
	1       Lou Boudreau    KAqRS125CKn
	2        Mark Sewell    KAqRS125CKn
	3       ddie Collins    KAqRS125CKn
	4   harlie Hollocher    KAqRS125CKn
	..               ...            ...
	63     Eddie Collins           S125
	64     Eddie Collins           S125
	65       Mark Sewell           S125
	66  harlie Hollocher           S125
	67  harlie Hollocher           S125
	
	[68 rows x 2 columns]
	ACTUAL OUTPUT ====

		
		SELECT name,
		       machine_series
		FROM
		  (SELECT LHS.technician_id AS technician_id,
		          LHS.name AS name,
		          LHS.team AS team,
		          LHS.starting_year AS starting_year,
		          LHS.age AS age,
		          LHS.repair_id AS repair_id,
		          LHS.machine_id AS machine_id,
		          RHS.machine_series AS machine_series
		   FROM
		     (SELECT LHS.technician_id AS technician_id,
		             LHS.name AS name,
		             LHS.team AS team,
		             LHS.starting_year AS starting_year,
		             LHS.age AS age,
		             RHS.repair_id AS repair_id,
		             RHS.machine_id AS machine_id
		      FROM technician AS LHS
		      INNER JOIN repair_assignment AS RHS ON (LHS.technician_id = RHS.technician_id)) AS LHS
		   CROSS JOIN
		     (SELECT machine_series
		      FROM machine INTERSECT SELECT machine_series
		      FROM machine) AS RHS)
		ORDER BY name

	                   name machine_series
	0    42qLou BoudreauwfO    KAqRS125CKn
	1    42qLou BoudreauwfO    KAqRS125CKn
	2    42qLou BoudreauwfO    KAqRS125CKn
	3     Charlie Hollocher    KAqRS125CKn
	4     Charlie Hollocher    KAqRS125CKn
	..                  ...            ...
	403    harlie Hollocher           S125
	404    harlie Hollocher           S125
	405    harlie Hollocher           S125
	406    harlie Hollocher           S125
	407    harlie Hollocher           S125
	
	[408 rows x 2 columns]
No solution for instance spider/insurance_policies/0002 (1239)
Wrong output for fuzzied solution in instance spider/insurance_policies/0017 (1240)
	EXPECTED OUTPUT ====

		SELECT sum(Amount_Payment)
		FROM Payments

	   sum(amount_payment)
	0          69015657536
	ACTUAL OUTPUT ====

		
		SELECT sumamount_payment AS sum_amount_payment_
		FROM
		  (SELECT SUM(amount_payment) AS sumamount_payment
		   FROM
		     (SELECT amount_payment,
		             date_payment_made,
		             SUM(amount_payment) AS sumamount_payment
		      FROM payments
		      GROUP BY amount_payment,
		               date_payment_made))
		ORDER BY sum_amount_payment_

	   sum_amount_payment_
	0          69014813657
Wrong output for fuzzied solution in instance spider/insurance_policies/0022 (1243)
	EXPECTED OUTPUT ====

		SELECT customer_details
		FROM Customers
		EXCEPT
		SELECT T1.customer_details
		FROM Customers AS T1
		JOIN Customer_Policies AS T2 ON T1.customer_id = T2.customer_id

	Empty DataFrame
	Columns: [customer_details]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT customer_details
		FROM
		  (SELECT *
		   FROM customers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM customer_policies AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY customer_details

	  customer_details
	0   Dr. Diana Rath
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/insurance_policies/0004 (1246)
	EXPECTED OUTPUT ====

		SELECT Amount_Settled,
		       Amount_Claimed
		FROM Claims
		ORDER BY Amount_Claimed DESC
		LIMIT 1

	   amount_settled  amount_claimed
	0            1372           89633
	ACTUAL OUTPUT ====

		
		SELECT amount_settled,
		       amount_claimed
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM claims
		      ORDER BY policy_id DESC)
		   LIMIT 1)

	   amount_settled  amount_claimed
	0            1637           43884
Wrong output for fuzzied solution in instance spider/insurance_policies/0015 (1248)
	EXPECTED OUTPUT ====

		SELECT Payment_Method_Code
		FROM Payments
		GROUP BY Payment_Method_Code
		ORDER BY count(*) DESC
		LIMIT 1

	  payment_method_code
	0          MasterCard
	ACTUAL OUTPUT ====

		
		SELECT payment_method_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT payment_id,
		                payment_method_code,
		                COUNT() AS n
		         FROM payments
		         GROUP BY payment_id,
		                  payment_method_code)
		      ORDER BY n DESC)
		   LIMIT 1)

	  payment_method_code
	0     s3Y6aMasterCard
Wrong output for fuzzied solution in instance spider/insurance_policies/0016 (1250)
	EXPECTED OUTPUT ====

		SELECT Payment_Method_Code
		FROM Payments
		GROUP BY Payment_Method_Code
		ORDER BY count(*) ASC
		LIMIT 1

	  payment_method_code
	0     7tvSsMasterCard
	ACTUAL OUTPUT ====

		
		SELECT payment_method_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT payment_id,
		                payment_method_code,
		                COUNT() AS n
		         FROM payments
		         GROUP BY payment_id,
		                  payment_method_code)
		      ORDER BY payment_id DESC)
		   LIMIT 1)

	  payment_method_code
	0           VisaUrPDl
Wrong output for fuzzied solution in instance spider/insurance_policies/0018 (1251)
	EXPECTED OUTPUT ====

		SELECT DISTINCT customer_details
		FROM Customers

	             customer_details
	0               Dr. Diana Rat
	1              Dr. Diana Rath
	2        Mr. Edwardo Blanda I
	3        Mr. Randal Lynch III
	4   Mr. Randal Lynch IIIEun2W
	5     RDXMrs. Hanna WillmsNfP
	6               Sydnie Friese
	7              Sydnie Friesen
	8  ugFMr. Randal Lynch IIIGi4
	ACTUAL OUTPUT ====

		
		SELECT customer_details
		FROM customers
		ORDER BY customer_details

	              customer_details
	0                Dr. Diana Rat
	1               Dr. Diana Rath
	2               Dr. Diana Rath
	3         Mr. Edwardo Blanda I
	4         Mr. Edwardo Blanda I
	5         Mr. Randal Lynch III
	6    Mr. Randal Lynch IIIEun2W
	7      RDXMrs. Hanna WillmsNfP
	8                Sydnie Friese
	9               Sydnie Friesen
	10  ugFMr. Randal Lynch IIIGi4
Wrong output for fuzzied solution in instance spider/insurance_policies/0020 (1252)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Settlements

	   count(*)
	0        58
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT customer_policy_id,
		          date_claim_settled,
		          COUNT() AS n
		   FROM settlements
		   GROUP BY customer_policy_id,
		            date_claim_settled)
		ORDER BY count___

	   count___
	0        56
Wrong output for fuzzied solution in instance spider/insurance_policies/0019 (1253)
	EXPECTED OUTPUT ====

		SELECT Policy_Type_Code
		FROM Customer_Policies
		GROUP BY Policy_Type_Code
		ORDER BY count(*) DESC
		LIMIT 1

	  policy_type_code
	0             Life
	ACTUAL OUTPUT ====

		
		SELECT policy_type_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT policy_type_code,
		                COUNT() AS n
		         FROM customer_policies
		         GROUP BY policy_type_code)
		      ORDER BY n DESC)
		   LIMIT 1)

	  policy_type_code
	0               Ca
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
No solution for instance spider/insurance_policies/0001 (1258)
No solution for instance spider/insurance_policies/0014 (1259)
No solution for instance spider/insurance_policies/0009 (1260)
Wrong output for fuzzied solution in instance spider/insurance_policies/0011 (1261)
	EXPECTED OUTPUT ====

		SELECT Date_Claim_Made
		FROM Claims
		ORDER BY Date_Claim_Made ASC
		LIMIT 1

	  date_claim_made
	0      2017-08-28
	ACTUAL OUTPUT ====

		
		SELECT date_claim_made
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM claims
		      ORDER BY date_claim_settled)
		   LIMIT 1)

	  date_claim_made
	0      2018-01-01
Wrong output for fuzzied solution in instance spider/insurance_policies/0010 (1262)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.claim_id
		FROM Claims AS T1
		JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id
		GROUP BY T1.claim_id
		ORDER BY T1.Date_Claim_Settled DESC
		LIMIT 1

	   count(*)  claim_id
	0         1       801
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       claim_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT claim_id,
		             date_claim_settled,
		             COUNT() AS n
		      FROM claims
		      GROUP BY claim_id,
		               date_claim_settled) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM settlements AS RHS
		        WHERE (LHS.claim_id = RHS.claim_id
		               AND LHS.date_claim_settled = RHS.date_claim_settled) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___, claim_id]
	Index: []
Wrong output for fuzzied solution in instance spider/cinema/0002 (1263)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM cinema
		WHERE openning_year = 2010 INTERSECT
		  SELECT LOCATION
		  FROM cinema WHERE openning_year = 2011

	       location
	0  County Clare
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT LOCATION
		   FROM cinema
		   WHERE (openning_year > 2010
		          AND openning_year >= 2011) INTERSECT
		     SELECT LOCATION
		     FROM cinema WHERE (openning_year = 2010
		                           AND openning_year <= 2011))
		ORDER BY LOCATION

	       location
	0  County Clare
	1   County Laoi
Wrong output for fuzzied solution in instance spider/cinema/0017 (1264)
	EXPECTED OUTPUT ====

		SELECT T2.title,
		       max(T1.price)
		FROM schedule AS T1
		JOIN film AS T2 ON T1.film_id = T2.film_id
		GROUP BY T1.film_id

	                                title  max(t1.price)
	0  2HzThe Case of the Piggy BankerRw3   1.299000e+01
	1         The Case of the Smart Dummy   1.600000e+01
	2            The Case: Off the Record   1.601000e+01
	3     The Case of the Mystery Weekend   7.003452e+09
	4         The Case of the Smart Dummy   8.999840e+09
	5    pmZOUThe Case of the Smart Dummy   9.230257e+09
	ACTUAL OUTPUT ====

		
		SELECT title,
		       price AS max_t1_price_
		FROM
		  (SELECT number_in_season,
		          title,
		          MAX(price) AS price
		   FROM
		     (SELECT LHS.film_id AS film_id,
		             LHS.rank_in_series AS rank_in_series,
		             LHS.number_in_season AS number_in_season,
		             LHS.title AS title,
		             LHS.directed_by AS directed_by,
		             LHS.original_air_date AS original_air_date,
		             LHS.production_code AS production_code,
		             RHS.cinema_id AS cinema_id,
		             RHS.date AS date,
		             RHS.show_times_per_day AS show_times_per_day,
		             RHS.price AS price
		      FROM film AS LHS
		      INNER JOIN schedule AS RHS ON (LHS.film_id = RHS.film_id))
		   GROUP BY number_in_season,
		            title)
		ORDER BY title

	                                title  max_t1_price_
	0  2HzThe Case of the Piggy BankerRw3   1.299000e+01
	1            The Case: Off the Record   1.601000e+01
	2     The Case of the Mystery Weekend   7.003452e+09
	3         The Case of the Smart Dummy   8.999840e+09
	4    pmZOUThe Case of the Smart Dummy   9.230257e+09
Wrong output for fuzzied solution in instance spider/cinema/0008 (1265)
	EXPECTED OUTPUT ====

		SELECT name,
		       LOCATION
		FROM cinema
		ORDER BY capacity DESC
		LIMIT 1

	      name           location
	0  Codling  County Laois3cv)u
	ACTUAL OUTPUT ====

		
		SELECT name,
		       LOCATION
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM cinema
		      ORDER BY cinema_id)
		   LIMIT 1)

	      name      location
	0  Codling  County Laois
Wrong output for fuzzied solution in instance spider/cinema/0003 (1266)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM cinema

	   count(*)
	0        10
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT capacity,
		          COUNT() AS n
		   FROM cinema
		   GROUP BY capacity)
		ORDER BY count___

	   count___
	0         7
No solution for instance spider/cinema/0022 (1267)
Wrong output for fuzzied solution in instance spider/cinema/0012 (1271)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM cinema
		WHERE capacity > 300
		GROUP BY LOCATION
		HAVING count(*) >= 2

	       location
	0  County Clare
	1   ounty Clare
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT LOCATION,
		          COUNT(DISTINCT capacity) AS n_distinct
		   FROM cinema
		   GROUP BY LOCATION)
		WHERE (n_distinct = 300
		       OR n_distinct > 2)
		ORDER BY LOCATION

	       location
	0  County Clare
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/cinema/0016 (1274)
	EXPECTED OUTPUT ====

		SELECT T2.name,
		       sum(T1.show_times_per_day)
		FROM schedule AS T1
		JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id
		GROUP BY T1.cinema_id

	           name  sum(t1.show_times_per_day)
	0       Codling                          18
	1       Codling                          24
	2       Codling                          31
	3       Codling                          34
	4     Gortahile                          21
	5    Moneypoint                          30
	6         Oriel                          22
	7         Oriel                          23
	8   lGPOrielkMe                          24
	9  oMm1FCodling                          21
	ACTUAL OUTPUT ====

		
		SELECT name,
		       sumshow_times_per_day AS sum_t1_show_times_per_day_
		FROM
		  (SELECT capacity,
		          name,
		          SUM(show_times_per_day) AS sumshow_times_per_day
		   FROM
		     (SELECT LHS.cinema_id AS cinema_id,
		             LHS.name AS name,
		             LHS.openning_year AS openning_year,
		             LHS.capacity AS capacity,
		             LHS.location AS LOCATION,
		             RHS.film_id AS film_id,
		             RHS.date AS date,
		             RHS.show_times_per_day AS show_times_per_day,
		             RHS.price AS price
		      FROM cinema AS LHS
		      INNER JOIN schedule AS RHS ON (LHS.cinema_id = RHS.cinema_id))
		   GROUP BY capacity,
		            name)
		ORDER BY name

	           name  sum_t1_show_times_per_day_
	0       Codling                          24
	1       Codling                          34
	2       Codling                          49
	3     Gortahile                          21
	4    Moneypoint                          30
	5         Oriel                          22
	6         Oriel                          23
	7   lGPOrielkMe                          24
	8  oMm1FCodling                          21
Wrong output for fuzzied solution in instance spider/cinema/0020 (1276)
	EXPECTED OUTPUT ====

		SELECT T2.directed_by
		FROM schedule AS T1
		JOIN film AS T2 ON T1.film_id = T2.film_id
		GROUP BY T2.directed_by
		ORDER BY sum(T1.show_times_per_day) DESC
		LIMIT 1

	      directed_by
	0  Bill Schreiner
	ACTUAL OUTPUT ====

		
		SELECT directed_by
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT film_id,
		                rank_in_series,
		                number_in_season,
		                title,
		                directed_by,
		                original_air_date,
		                production_code,
		                cinema_id, date, show_times_per_day,
		                                 price,
		                                 SUM(show_times_per_day) OVER () AS sumshow_times_per_day
		         FROM
		           (SELECT LHS.film_id AS film_id,
		                   LHS.rank_in_series AS rank_in_series,
		                   LHS.number_in_season AS number_in_season,
		                   LHS.title AS title,
		                   LHS.directed_by AS directed_by,
		                   LHS.original_air_date AS original_air_date,
		                   LHS.production_code AS production_code,
		                   RHS.cinema_id AS cinema_id,
		                   RHS.date AS date,
		                   RHS.show_times_per_day AS show_times_per_day,
		                   RHS.price AS price
		            FROM film AS LHS
		            LEFT JOIN schedule AS RHS ON (LHS.film_id = RHS.film_id)))
		      ORDER BY rank_in_series)
		   LIMIT 1)

	     directed_by
	0  ill Schreiner
Wrong output for fuzzied solution in instance spider/cinema/0021 (1278)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM cinema
		WHERE capacity > 300
		GROUP BY LOCATION
		HAVING count(*) > 1

	       location
	0  County Clare
	1   ounty Clare
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT LOCATION
		FROM
		  (SELECT LHS.cinema_id AS cinema_id,
		          LHS.name AS name,
		          LHS.openning_year AS openning_year,
		          LHS.capacity AS capacity,
		          LHS.location AS LOCATION,
		          RHS.n AS n
		   FROM cinema AS LHS
		   LEFT JOIN
		     (SELECT LOCATION,
		             openning_year,
		             COUNT() AS n
		      FROM cinema
		      GROUP BY LOCATION,
		               openning_year) AS RHS ON (LHS.openning_year = RHS.openning_year
		                                         AND LHS.location = RHS.location))
		WHERE (n >= 300
		       OR n > 1)
		ORDER BY LOCATION

	       location
	0  County Clare
Wrong output for base solution in instance spider/cinema/0009 (1281)
	EXPECTED OUTPUT ====

	   avg_capacity_  min_capacity_  max_capacity_
	0     399.666667            203            908
	ACTUAL OUTPUT ====

		SELECT avg(capacity),
		       min(capacity),
		       max(capacity)
		FROM cinema
		WHERE openning_year >= 2011

	   avg(capacity)  min(capacity)  max(capacity)
	0     399.666667            203            908
Wrong output for ground truth in instance spider/cinema/0009 (1281)
Wrong output for fuzzied solution in instance spider/cinema/0011 (1282)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM cinema
		WHERE openning_year >= 2010
		GROUP BY LOCATION
		ORDER BY count(*) DESC
		LIMIT 1

	       location
	0  County Clare
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT cinema_id,
		                name,
		                openning_year,
		                capacity,
		                LOCATION,
		                COUNT(*) OVER () AS n
		         FROM
		           (SELECT *
		            FROM cinema
		            WHERE (openning_year > 2010)))
		      ORDER BY openning_year)
		   LIMIT 1)

	      location
	0  County Clar
Wrong output for fuzzied solution in instance spider/flight_1/0033 (1285)
	EXPECTED OUTPUT ====

		SELECT origin
		FROM Flight
		GROUP BY origin
		ORDER BY count(*) DESC
		LIMIT 1

	        origin
	0  Los Angeles
	ACTUAL OUTPUT ====

		
		SELECT origin
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT destination,
		                origin,
		                COUNT() AS n
		         FROM flight
		         GROUP BY destination,
		                  origin)
		      ORDER BY destination)
		   LIMIT 1)

	             origin
	0  Los Angeles2RRj0
Wrong output for base solution in instance spider/flight_1/0037 (1286)
	EXPECTED OUTPUT ====

		SELECT T2.name,
		       count(*)
		FROM Flight AS T1
		JOIN Aircraft AS T2 ON T1.aid = T2.aid
		GROUP BY T1.aid

	               name  count(*)
	0    Boeing 737-800         1
	1    Boeing 747-400         1
	2    Boeing 757-300         1
	3   Embraer ERJ-145         1
	4  Piper Archer III         1
	5          SAAB 340         1
	6   Airbus A340-300         2
	7    Lockheed L1011         2
	ACTUAL OUTPUT ====

		
		SELECT name,
		       n AS count___
		FROM
		  (SELECT LHS.aid AS aid,
		          LHS.name AS name,
		          LHS.distance AS distance,
		          RHS.arrival_date AS arrival_date,
		          RHS.n AS n
		   FROM aircraft AS LHS
		   INNER JOIN
		     (SELECT aid,
		             arrival_date,
		             COUNT() AS n
		      FROM flight
		      GROUP BY aid,
		               arrival_date) AS RHS ON (LHS.aid = RHS.aid))
		ORDER BY name

	               name  count___
	0   Airbus A340-300         1
	1   Airbus A340-300         1
	2    Boeing 737-800         1
	3    Boeing 747-400         1
	4    Boeing 757-300         1
	5   Embraer ERJ-145         1
	6    Lockheed L1011         1
	7    Lockheed L1011         1
	8  Piper Archer III         1
	9          SAAB 340         1
Wrong output for fuzzied solution in instance spider/flight_1/0038 (1292)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Flight AS T1
		JOIN Aircraft AS T2 ON T1.aid = T2.aid
		GROUP BY T1.aid
		HAVING count(*) >= 2

	                   name
	0  0chLockheed L1011Trq
	1        Lockheed L1011
	2         SXvflSAAB 340
	3        Schwitzer 2-33
	4        Schwitzer 2-33
	5           Tupolev 154
	6   q9Bp2Lockheed L1011
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.flno AS flno,
		          LHS.origin AS origin,
		          LHS.destination AS destination,
		          LHS.distance AS distance,
		          LHS.departure_date AS departure_date,
		          LHS.arrival_date AS arrival_date,
		          LHS.price AS price,
		          LHS.aid AS aid,
		          LHS.name AS name,
		          LHS.n AS n,
		          RHS.flno AS flno_other,
		          RHS.origin AS origin_other,
		          RHS.destination AS destination_other,
		          RHS.distance AS distance_other,
		          RHS.departure_date AS departure_date_other,
		          RHS.arrival_date AS arrival_date_other,
		          RHS.price AS price_other,
		          RHS.name AS name_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT LHS.flno AS flno,
		             LHS.origin AS origin,
		             LHS.destination AS destination,
		             LHS.distance AS distance,
		             LHS.departure_date AS departure_date,
		             LHS.arrival_date AS arrival_date,
		             LHS.price AS price,
		             LHS.aid AS aid,
		             RHS.name AS name,
		             RHS.n AS n
		      FROM flight AS LHS
		      LEFT JOIN
		        (SELECT aid,
		                name,
		                COUNT() AS n
		         FROM aircraft
		         GROUP BY aid,
		                  name) AS RHS ON (LHS.aid = RHS.aid)) AS LHS
		   INNER JOIN
		     (SELECT LHS.flno AS flno,
		             LHS.origin AS origin,
		             LHS.destination AS destination,
		             LHS.distance AS distance,
		             LHS.departure_date AS departure_date,
		             LHS.arrival_date AS arrival_date,
		             LHS.price AS price,
		             LHS.aid AS aid,
		             RHS.name AS name,
		             RHS.n AS n
		      FROM flight AS LHS
		      LEFT JOIN
		        (SELECT aid,
		                name,
		                COUNT() AS n
		         FROM aircraft
		         GROUP BY aid,
		                  name) AS RHS ON (LHS.aid = RHS.aid)) AS RHS ON (LHS.flno = RHS.aid))
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
No solution for instance spider/flight_1/0048 (1295)
Wrong output for fuzzied solution in instance spider/flight_1/0013 (1298)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Employee
		WHERE salary BETWEEN 100000 AND 200000

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM employee
		WHERE (salary >= 100000.0
		       AND salary < 200000.0)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Error while executing solution for instance spider/flight_1/0004 (1300)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT distance) OVER () AS count___
FROM aircraft
WHERE (distance > 1000.0
       AND distance <= 5000.0)
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/flight_1/0026 (1302)
	EXPECTED OUTPUT ====

		SELECT avg(price)
		FROM Flight
		WHERE origin = "Los Angeles"
		  AND destination = "Honolulu"

	   avg(price)
	0      375.23
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(`price`) OVER () AS `avg_price_`
		FROM `flight`
		WHERE (`destination` != 'Los Angeles'
		       AND `destination` = 'Honolulu')
		ORDER BY avg_price_

	   avg_price_
	0      510.49
Wrong output for fuzzied solution in instance spider/flight_1/0032 (1306)
	EXPECTED OUTPUT ====

		SELECT destination,
		       count(*)
		FROM Flight
		GROUP BY destination

	         destination  count(*)
	0            Chicago         1
	1       Chicagojx5W)         1
	2     DIeNew Yorkv)D         1
	3            Honolul         1
	4   Los Angelesw9Rpc         1
	5      New Yorkeafor         1
	6              Tokyo         1
	7         TokyoB1Efy         1
	8     TuoNew YorkfO1         1
	9        gXlTokyom8f         1
	10           onolulu         1
	11        p9IqtTokyo         1
	12       Los Angeles         2
	13          Honolulu         3
	14          New York         3
	ACTUAL OUTPUT ====

		
		SELECT destination,
		       n AS count___
		FROM
		  (SELECT destination,
		          origin,
		          COUNT() AS n
		   FROM flight
		   GROUP BY destination,
		            origin)
		ORDER BY destination

	         destination  count___
	0            Chicago         1
	1       Chicagojx5W)         1
	2     DIeNew Yorkv)D         1
	3            Honolul         1
	4           Honolulu         1
	5           Honolulu         1
	6           Honolulu         1
	7   Los Angelesw9Rpc         1
	8           New York         1
	9      New Yorkeafor         1
	10             Tokyo         1
	11        TokyoB1Efy         1
	12    TuoNew YorkfO1         1
	13       gXlTokyom8f         1
	14           onolulu         1
	15        p9IqtTokyo         1
	16       Los Angeles         2
	17          New York         2
Wrong output for fuzzied solution in instance spider/flight_1/0045 (1307)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Certificate AS T1
		JOIN Aircraft AS T2 ON T2.aid = T1.aid
		GROUP BY T1.aid
		ORDER BY count(*) DESC
		LIMIT 1

	             name
	0  Lockheed L1011
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.aid AS aid,
		                LHS.eid AS eid,
		                LHS.n AS n,
		                RHS.name AS name,
		                RHS.distance AS distance
		         FROM
		           (SELECT aid,
		                   eid,
		                   COUNT() AS n
		            FROM certificate
		            GROUP BY aid,
		                     eid) AS LHS
		         INNER JOIN aircraft AS RHS ON (LHS.aid = RHS.aid))
		      ORDER BY eid)
		   LIMIT 1)

	      name
	0  AAB 340
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/flight_1/0034 (1314)
	EXPECTED OUTPUT ====

		SELECT destination
		FROM Flight
		GROUP BY destination
		ORDER BY count(*)
		LIMIT 1

	    destination
	0  2gGDallasBqW
	ACTUAL OUTPUT ====

		
		SELECT destination
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT destination,
		                flno,
		                COUNT() AS n
		         FROM flight
		         GROUP BY destination,
		                  flno)
		      ORDER BY destination)
		   LIMIT 1)

	  destination
	0      0xjtWx
Wrong output for fuzzied solution in instance spider/flight_1/0001 (1318)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Aircraft

	   count(*)
	0        14
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT LHS.aid AS aid,
		             LHS.name AS name,
		             LHS.distance AS distance,
		             RHS.aid AS aid_other,
		             RHS.name AS name_other
		      FROM aircraft AS LHS
		      INNER JOIN aircraft AS RHS ON (LHS.distance = RHS.distance)))
		ORDER BY count___

	   count___
	0        24
No solution for instance spider/flight_1/0043 (1319)
Wrong output for fuzzied solution in instance spider/flight_1/0046 (1320)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Certificate AS T1
		JOIN Aircraft AS T2 ON T2.aid = T1.aid
		WHERE T2.distance > 5000
		GROUP BY T1.aid
		ORDER BY count(*) >= 5

	                   name
	0        Boeing 747-400
	1   JYZwlBoeing 747-400
	2         Lockheed L101
	3         Lockheed L101
	4        Lockheed L1011
	5        Lockheed L1011
	6        Lockheed L1011
	7   SXvflSchwitzer 2-33
	8        Schwitzer 2-33
	9   Vv6kpLockheed L1011
	10        ockheed L1011
	11     q9Bp2Tupolev 154
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.eid AS eid,
		          LHS.aid AS aid,
		          RHS.name AS name,
		          RHS.distance AS distance
		   FROM certificate AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM aircraft
		      WHERE (distance >= 5000.0)) AS RHS ON (LHS.aid = RHS.aid))
		ORDER BY name

	                  name
	0       Boeing 747-400
	1  JYZwlBoeing 747-400
	2        Lockheed L101
	3       Lockheed L1011
	4  SXvflSchwitzer 2-33
	5       Schwitzer 2-33
	6  Vv6kpLockheed L1011
	7        ockheed L1011
	8     q9Bp2Tupolev 154
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/flight_1/0025 (1324)
	EXPECTED OUTPUT ====

		SELECT flno
		FROM Flight
		WHERE distance > 2000

	           flno
	0   -175.101872
	1     33.980000
	2     33.990000
	3     34.000000
	4     34.010000
	5     34.020000
	6     67.980000
	7     67.990000
	8     68.000000
	9     68.020000
	10    72.942409
	11    98.980000
	12    99.010000
	13   194.509912
	14   346.000000
	15   346.020000
	16  1717.347612
	17  2523.254174
	18  2700.073357
	19  3253.106187
	20  3624.950478
	21  3785.303416
	22  4434.577409
	23  4679.516933
	24  5199.881308
	25  6997.070402
	26  7903.431082
	27  8138.719525
	28  8371.001754
	29  8959.396589
	30  9895.731214
	ACTUAL OUTPUT ====

		
		SELECT flno
		FROM flight
		WHERE (distance >= 2000.0)
		ORDER BY flno

	           flno
	0   -175.101872
	1     33.980000
	2     33.990000
	3     34.000000
	4     34.010000
	5     34.020000
	6     67.980000
	7     67.990000
	8     68.000000
	9     68.020000
	10    72.942409
	11    98.980000
	12    99.000000
	13    99.010000
	14   194.509912
	15   345.980000
	16   346.000000
	17   346.020000
	18  1717.347612
	19  2196.155276
	20  2523.254174
	21  2700.073357
	22  3253.106187
	23  3624.950478
	24  3695.242448
	25  3785.303416
	26  4434.577409
	27  4679.516933
	28  5199.881308
	29  6997.070402
	30  7903.431082
	31  8138.719525
	32  8371.001754
	33  8959.396589
	34  9895.731214
Wrong output for fuzzied solution in instance spider/flight_1/0044 (1328)
	EXPECTED OUTPUT ====

		SELECT name
		FROM Employee
		EXCEPT
		SELECT T1.name
		FROM Employee AS T1
		JOIN Certificate AS T2 ON T1.eid = T2.eid
		JOIN Aircraft AS T3 ON T3.aid = T2.aid
		WHERE T3.name = "Boeing 737-800"

	                   name
	0   Barbara Wilson4)l(R
	1         EyvKesqd2gS4s
	2       VBrmOu6(c8ib5OT
	3  aB1B4Lawrence Sperry
	4           orthy Lewis
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `name`
		FROM
		  (SELECT *
		   FROM `employee` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `certificate` AS `LHS`
		           WHERE EXISTS
		               (SELECT 1
		                FROM
		                  (SELECT *
		                   FROM `aircraft`
		                   WHERE (`name` = 'Boeing 737-800')) AS RHS
		                WHERE (LHS.aid = RHS.aid) )) AS RHS
		        WHERE (LHS.eid = RHS.eid) ))
		ORDER BY name

	                   name
	0        Barbara Wilson
	1   Barbara Wilson4)l(R
	2          Dorthy Lewis
	3         EyvKesqd2gS4s
	4       VBrmOu6(c8ib5OT
	5  aB1B4Lawrence Sperry
	6           orthy Lewis
Wrong output for fuzzied solution in instance spider/flight_1/0028 (1330)
	EXPECTED OUTPUT ====

		SELECT flno,
		       distance
		FROM Flight
		ORDER BY price DESC
		LIMIT 1

	   flno  distance
	0   346   5477.98
	ACTUAL OUTPUT ====

		
		SELECT flno,
		       distance
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM flight
		      ORDER BY flno)
		   LIMIT 1)

	    flno  distance
	0  32.98   2307.98
Wrong output for base solution in instance spider/flight_1/0031 (1331)
	EXPECTED OUTPUT ====

		SELECT origin,
		       count(*)
		FROM Flight
		GROUP BY origin

	        origin  count(*)
	0      Chicago         2
	1  Los Angeles         8
	ACTUAL OUTPUT ====

		
		SELECT origin,
		       n AS count___
		FROM
		  (SELECT arrival_date,
		          origin,
		          COUNT() AS n
		   FROM flight
		   GROUP BY arrival_date,
		            origin)
		ORDER BY origin

	        origin  count___
	0      Chicago         1
	1      Chicago         1
	2  Los Angeles         1
	3  Los Angeles         1
	4  Los Angeles         1
	5  Los Angeles         1
	6  Los Angeles         1
	7  Los Angeles         1
	8  Los Angeles         1
	9  Los Angeles         1
Error while executing solution for instance spider/network_2/0042 (1332)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT name) OVER () AS count_distinct_name_
FROM
  (SELECT *
   FROM person AS LHS
   WHERE EXISTS
       (SELECT 1
        FROM personfriend AS RHS
        WHERE (LHS.name = RHS.name) ))
ORDER BY count_distinct_name_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/network_2/0003 (1341)
	EXPECTED OUTPUT ====

		SELECT avg(age)
		FROM Person

	   avg(age)
	0      37.7
	ACTUAL OUTPUT ====

		
		SELECT meanage AS avg_age_
		FROM
		  (SELECT AVG(age) AS meanage
		   FROM
		     (SELECT age,
		             city,
		             AVG(age) AS meanage
		      FROM person
		      GROUP BY age,
		               city))
		ORDER BY avg_age_

	    avg_age_
	0  36.777778
Wrong output for fuzzied solution in instance spider/network_2/0022 (1343)
	EXPECTED OUTPUT ====

		SELECT T1.name,
		       T1.age
		FROM Person AS T1
		JOIN PersonFriend AS T2 ON T1.name = T2.name
		WHERE T2.friend = 'Dan' INTERSECT
		  SELECT T1.name,
		         T1.age
		  FROM Person AS T1
		  JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Alice'

	         name  age
	0    AwM2uDan   26
	1       Alice   45
	2    Bob9awO)   45
	3  FZjIjAlice   45
	ACTUAL OUTPUT ====

		
		SELECT `name`,
		       `age`
		FROM
		  (SELECT `LHS`.`name` AS `name`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`city` AS `city`,
		          `LHS`.`gender` AS `gender`,
		          `LHS`.`job` AS `job`,
		          `RHS`.`friend` AS `friend`,
		          `RHS`.`year` AS `year`
		   FROM `person` AS `LHS`
		   LEFT JOIN `personfriend` AS `RHS` ON (`LHS`.`name` = `RHS`.`name`))
		WHERE (`friend` != 'Dan'
		       AND `friend` = 'Alice')
		ORDER BY name

	         name  age
	0         Bob   24
	1         Dan   24
	2        Alic   26
	3    AwM2uDan   26
	4       Alice   45
	5    Bob9awO)   45
	6  FZjIjAlice   45
	7    SXvflDan   45
Wrong output for fuzzied solution in instance spider/network_2/0013 (1344)
	EXPECTED OUTPUT ====

		SELECT avg(age),
		       job
		FROM Person
		GROUP BY job

	   avg(age)            job
	0     27.00   T5IaXstudent
	1     27.00        enginee
	2     39.00       engineer
	3     40.75        student
	4     43.00  SaQ5dengineer
	ACTUAL OUTPUT ====

		
		SELECT meanage AS avg_age_,
		       job
		FROM
		  (SELECT gender,
		          job,
		          AVG(age) AS meanage
		   FROM person
		   GROUP BY gender,
		            job)
		ORDER BY avg_age_

	   avg_age_            job
	0      26.0        student
	1      27.0   T5IaXstudent
	2      27.0        enginee
	3      27.0       engineer
	4      43.0  SaQ5dengineer
	5      44.0       engineer
	6      45.0        student
	7      46.0       engineer
	8      46.0        student
	9      46.0        student
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/network_2/0004 (1346)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT city)
		FROM Person

	   count(distinct city)
	0                     7
	ACTUAL OUTPUT ====

		
		SELECT n AS count_distinct_city_
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT gender,
		             name,
		             COUNT(DISTINCT city) AS n_distinct
		      FROM person
		      GROUP BY gender,
		               name))
		ORDER BY count_distinct_city_

	   count_distinct_city_
	0                    10
No solution for instance spider/network_2/0026 (1348)
Wrong output for fuzzied solution in instance spider/network_2/0015 (1349)
	EXPECTED OUTPUT ====

		SELECT min(age),
		       job
		FROM Person
		GROUP BY job

	   min(age)            job
	0        43  SaQ5dengineer
	1        27   T5IaXstudent
	2        27        enginee
	3        27       engineer
	4        26        student
	ACTUAL OUTPUT ====

		
		SELECT age AS min_age_,
		       job
		FROM
		  (SELECT gender,
		          job,
		          MIN(age) AS age
		   FROM person
		   GROUP BY gender,
		            job)
		ORDER BY min_age_

	   min_age_            job
	0        43  SaQ5dengineer
	1        27   T5IaXstudent
	2        27        enginee
	3        27       engineer
	4        44       engineer
	5        46       engineer
	6        26        student
	7        45        student
	8        46        student
	9        46        student
Error while executing solution for instance spider/network_2/0005 (1350)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT job) OVER () AS count_distinct_job_
FROM
  (SELECT age,
          job,
          COUNT() AS n
   FROM person
   GROUP BY age,
            job)
ORDER BY count_distinct_job_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/network_2/0016 (1351)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       gender
		FROM Person
		WHERE age < 40
		GROUP BY gender

	   count(*)      gender
	0         1      female
	1         1        male
	2         1  nPfmale jW
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n_distinct AS count___,
		                gender
		FROM
		  (SELECT gender,
		          job,
		          COUNT(DISTINCT age) AS n_distinct
		   FROM
		     (SELECT *
		      FROM person
		      WHERE (age != 40))
		   GROUP BY gender,
		            job)
		ORDER BY count___

	   count___      gender
	0         1         ale
	1         1       emale
	2         1      female
	3         1  kIUmaleLo5
	4         1        male
	5         1  nPfmale jW
	6         2        male
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
No solution for instance spider/network_2/0041 (1353)
No solution for instance spider/network_2/0035 (1354)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/network_2/0023 (1360)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.name,
		                T1.age
		FROM Person AS T1
		JOIN PersonFriend AS T2 ON T1.name = T2.name
		WHERE T2.friend = 'Dan'
		  OR T2.friend = 'Alice'

	          name  age
	0          Bob   24
	1           Da   24
	2          Dan   24
	3         Alic   26
	4     AwM2uDan   26
	5     rqrHJDan   27
	6   Vv6kpAlice   43
	7        Alice   45
	8     Bob9awO)   45
	9   FZjIjAlice   45
	10    SXvflDan   45
	ACTUAL OUTPUT ====

		
		SELECT `name`,
		       `age`
		FROM
		  (SELECT `LHS`.`name` AS `name`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`city` AS `city`,
		          `LHS`.`gender` AS `gender`,
		          `LHS`.`job` AS `job`,
		          `LHS`.`friend` AS `friend`,
		          `LHS`.`year` AS `year`
		   FROM
		     (SELECT `LHS`.`name` AS `name`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`city` AS `city`,
		             `LHS`.`gender` AS `gender`,
		             `LHS`.`job` AS `job`,
		             `RHS`.`friend` AS `friend`,
		             `RHS`.`year` AS `year`
		      FROM `person` AS `LHS`
		      INNER JOIN `personfriend` AS `RHS` ON (`LHS`.`name` = `RHS`.`name`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `personfriend`
		      WHERE (`friend` != 'Dan'
		             AND `friend` = 'Alice')) AS RHS ON (LHS.name = RHS.name
		                                                 AND LHS.friend = RHS.friend
		                                                 AND LHS.year = RHS.year))
		ORDER BY name

	         name  age
	0         Bob   24
	1         Dan   24
	2        Alic   26
	3    AwM2uDan   26
	4       Alice   45
	5    Bob9awO)   45
	6  FZjIjAlice   45
	7    SXvflDan   45
Wrong output for fuzzied solution in instance spider/network_2/0001 (1361)
	EXPECTED OUTPUT ====

		SELECT count(T2.friend)
		FROM Person AS T1
		JOIN PersonFriend AS T2 ON T1.name = T2.name
		WHERE T1.name = 'Dan'

	   count(t2.friend)
	0                 7
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count_t2_friend_`
		FROM
		  (SELECT COUNT(DISTINCT `friend`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM `personfriend`
		         WHERE (`name` = 'Dan'
		                AND `friend` != 'Dan')) AS LHS
		      WHERE EXISTS
		          (SELECT 1
		           FROM person AS RHS
		           WHERE (LHS.name = RHS.name) )))
		ORDER BY count_t2_friend_

	   count_t2_friend_
	0                 3
Wrong output for fuzzied solution in instance spider/network_2/0043 (1362)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T4.name
		FROM PersonFriend AS T1
		JOIN Person AS T2 ON T1.name = T2.name
		JOIN PersonFriend AS T3 ON T1.friend = T3.name
		JOIN PersonFriend AS T4 ON T3.friend = T4.name
		WHERE T2.name = 'Alice'
		  AND T4.name != 'Alice'

	          name
	0  2y(AlicenXL
	1          Bob
	2     BobWS9Ei
	3           an
	ACTUAL OUTPUT ====

		
		SELECT `name_other` AS `name`
		FROM
		  (SELECT `name`,
		          `age`,
		          `city`,
		          `gender`,
		          `job`,
		          `name_other`,
		          `year`,
		          `name` AS `friend`
		   FROM
		     (SELECT `LHS`.`name` AS `name`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`city` AS `city`,
		             `LHS`.`gender` AS `gender`,
		             `LHS`.`job` AS `job`,
		             `RHS`.`name` AS `name_other`,
		             `RHS`.`year` AS `year`
		      FROM `person` AS `LHS`
		      INNER JOIN `personfriend` AS `RHS` ON (`LHS`.`name` = `RHS`.`friend`)))
		WHERE (`name` = 'Alice')
		ORDER BY name

	          name
	0  2y(AlicenXL
	1  2y(AlicenXL
	2        Alice
	3          Bob
	4          Bob
	5     BobWS9Ei
	6           an
Wrong output for fuzzied solution in instance spider/network_2/0014 (1363)
	EXPECTED OUTPUT ====

		SELECT avg(age),
		       job
		FROM Person
		WHERE gender = 'male'
		GROUP BY job

	   avg(age)            job
	0      27.0        enginee
	1      27.0       engineer
	2      39.0        student
	3      43.0  SaQ5dengineer
	ACTUAL OUTPUT ====

		
		SELECT `meanage` AS `avg_age_`,
		       `job`
		FROM
		  (SELECT `job`,
		          `name`,
		          AVG(`age`) AS `meanage`
		   FROM
		     (SELECT *
		      FROM `person`
		      WHERE (`gender` = 'male'))
		   GROUP BY job,
		            name)
		ORDER BY avg_age_

	   avg_age_            job
	0      26.0        student
	1      27.0        enginee
	2      27.0       engineer
	3      43.0  SaQ5dengineer
	4      45.0        student
	5      46.0        student
Wrong output for fuzzied solution in instance spider/network_2/0009 (1364)
	EXPECTED OUTPUT ====

		SELECT age
		FROM Person
		WHERE job = 'doctor'
		  AND name = 'Zach'

	   age
	0   25
	ACTUAL OUTPUT ====

		
		SELECT `age`
		FROM `person`
		WHERE (`job` = 'doctor'
		       OR `name` = 'Zach')
		ORDER BY age

	   age
	0   24
	1   25
Wrong output for fuzzied solution in instance spider/network_2/0025 (1365)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM Person AS T1
		JOIN PersonFriend AS T2 ON T1.name = T2.name
		WHERE T2.friend IN
		    (SELECT name
		     FROM Person
		     WHERE age > 40)
		EXCEPT
		SELECT T1.name
		FROM Person AS T1
		JOIN PersonFriend AS T2 ON T1.name = T2.name
		WHERE T2.friend IN
		    (SELECT name
		     FROM Person
		     WHERE age < 30)

	         name
	0  Alice9awO)
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.name AS name,
		          LHS.age AS age,
		          LHS.city AS city,
		          LHS.gender AS gender,
		          LHS.job AS job,
		          LHS.friend AS friend,
		          LHS.year AS YEAR
		   FROM
		     (SELECT LHS.name AS name,
		             LHS.age AS age,
		             LHS.city AS city,
		             LHS.gender AS gender,
		             LHS.job AS job,
		             RHS.friend AS friend,
		             RHS.year AS YEAR
		      FROM person AS LHS
		      INNER JOIN personfriend AS RHS ON (LHS.name = RHS.name)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM person
		      WHERE (age < 40
		             AND age >= 30)) AS RHS ON (LHS.name = RHS.name
		                                        AND LHS.age = RHS.age
		                                        AND LHS.city = RHS.city
		                                        AND LHS.gender = RHS.gender
		                                        AND LHS.job = RHS.job))
		ORDER BY name

	          name
	0    8C BobRJC
	1    8C BobRJC
	2    8C BobRJC
	3    8C BobRJC
	4    8C BobRJC
	5   Bg(YSAlice
	6   Bg(YSAlice
	7   Bg(YSAlice
	8   Bg(YSAlice
	9   Bg(YSAlice
	10  Bg(YSAlice
	11  Bg(YSAlice
	12  Bg(YSAlice
	13  Vv6kpAlice
	14  Vv6kpAlice
	15  Vv6kpAlice
	16  Vv6kpAlice
	17  Vv6kpAlice
	18  Vv6kpAlice
	19  Vv6kpAlice
	20  Vv6kpAlice
	21  Vv6kpAlice
	22  Vv6kpAlice
	23  Vv6kpAlice
	24  Vv6kpAlice
	25  Vv6kpAlice
Wrong output for fuzzied solution in instance spider/network_2/0011 (1366)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Person
		WHERE age > 30
		  AND job = 'engineer'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `city`,
		          `job`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `person`
		      WHERE (`job` = 'engineer'
		             OR age != 30))
		   GROUP BY city,
		            job)
		ORDER BY count___

	   count___
	0         1
	1         2
Wrong output for fuzzied solution in instance spider/mountain_photos/0013 (1375)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT T2.camera_lens_id)
		FROM mountain AS T1
		JOIN photos AS T2 ON T1.id = T2.mountain_id
		WHERE T1.country = 'Ethiopia'

	   count(distinct t2.camera_lens_id)
	0                                  2
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count_distinct_t2_camera_lens_id_`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`prominence` AS `prominence`,
		          `LHS`.`n` AS `n`,
		          `RHS`.`camera_lens_id` AS `camera_lens_id`,
		          `RHS`.`mountain_id` AS `mountain_id`,
		          `RHS`.`color` AS `color`,
		          `RHS`.`name` AS `name`
		   FROM
		     (SELECT `id`,
		             `prominence`,
		             COUNT() AS `n`
		      FROM `mountain`
		      WHERE (`country` = 'Ethiopia')
		      GROUP BY id,
		               prominence) AS LHS
		   LEFT JOIN photos AS RHS ON (LHS.id = RHS.id))
		ORDER BY count_distinct_t2_camera_lens_id_

	   count_distinct_t2_camera_lens_id_
	0                                  1
No solution for instance spider/mountain_photos/0006 (1376)
Wrong output for fuzzied solution in instance spider/mountain_photos/0012 (1378)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM camera_lens
		WHERE id NOT IN
		    (SELECT camera_lens_id
		     FROM photos)

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT max_aperture
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.brand AS brand,
		             LHS.name AS name,
		             LHS.focal_length_mm AS focal_length_mm,
		             LHS.max_aperture AS max_aperture,
		             RHS.camera_lens_id AS camera_lens_id,
		             RHS.mountain_id AS mountain_id,
		             RHS.color AS color
		      FROM camera_lens AS LHS
		      LEFT JOIN photos AS RHS ON (LHS.id = RHS.id
		                                     AND LHS.name = RHS.name)) INTERSECT SELECT max_aperture
		   FROM camera_lens)
		ORDER BY count___

	   count___
	0         4
No solution for instance spider/mountain_photos/0015 (1379)
No solution for instance spider/mountain_photos/0016 (1381)
Wrong output for fuzzied solution in instance spider/mountain_photos/0014 (1384)
	EXPECTED OUTPUT ====

		SELECT T3.brand
		FROM mountain AS T1
		JOIN photos AS T2 ON T1.id = T2.mountain_id
		JOIN camera_lens AS T3 ON T2.camera_lens_id = T3.id
		WHERE T1.range = 'Toubkal Atlas' INTERSECT
		  SELECT T3.brand
		  FROM mountain AS T1
		  JOIN photos AS T2 ON T1.id = T2.mountain_id
		  JOIN camera_lens AS T3 ON T2.camera_lens_id = T3.id WHERE T1.range = 'Lasta Massif'

	   brand
	0  Sigma
	ACTUAL OUTPUT ====

		
		SELECT `brand`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`brand` AS `brand`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`focal_length_mm` AS `focal_length_mm`,
		          `LHS`.`max_aperture` AS `max_aperture`,
		          `RHS`.`height` AS `height`,
		          `RHS`.`prominence` AS `prominence`,
		          `RHS`.`range` AS `range`,
		          `RHS`.`country` AS `country`
		   FROM
		     (SELECT *
		      FROM `camera_lens` AS `LHS`
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM `photos` AS `RHS`
		           WHERE (`LHS`.`id` = `RHS`.`id`) )) AS `LHS`
		   LEFT JOIN
		     (SELECT *
		      FROM `mountain`
		      WHERE (`range` = 'Toubkal Atlas'
		             AND `range` = 'Lasta Massif')) AS RHS ON (LHS.id = RHS.id
		                                                       AND LHS.name = RHS.name))
		ORDER BY brand

	        brand
	0  (4WvDSigma
	1      lympus
Wrong output for fuzzied solution in instance spider/mountain_photos/0009 (1385)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM photos AS T1
		JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id
		GROUP BY T2.id
		ORDER BY count(*) DESC
		LIMIT 1

	                 name
	0  Sigma 19mm f2.8 DN
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.id AS id,
		          LHS.brand AS brand,
		          LHS.name AS name,
		          LHS.focal_length_mm AS focal_length_mm,
		          LHS.max_aperture AS max_aperture
		   FROM camera_lens AS LHS
		   INNER JOIN
		     (SELECT COUNT() AS n
		      FROM photos) AS RHS ON (LHS.id = RHS.n))
		ORDER BY name

	                                         name
	0  Panasonic Leica DG Nocticron 42.5mm f /1.2
Wrong output for fuzzied solution in instance spider/company_employee/0008 (1389)
	EXPECTED OUTPUT ====

		SELECT Headquarters
		FROM company
		GROUP BY Headquarters
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  headquarters
	0         hina
	ACTUAL OUTPUT ====

		
		SELECT headquarters
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT headquarters,
		                industry,
		                COUNT() AS n
		         FROM company
		         GROUP BY headquarters,
		                  industry)
		      ORDER BY industry DESC)
		   LIMIT 1)

	  headquarters
	0        China
Wrong output for fuzzied solution in instance spider/company_employee/0013 (1391)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM employment AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		JOIN company AS T3 ON T1.Company_ID = T3.Company_ID
		WHERE T3.Sales_in_Billion > 200

	                   name
	0           Brad Lohaus
	1           Brad Lohaus
	2           Brad Lohaus
	3   Darryl Kennedyp0B0r
	4   Darryl Kennedyp0B0r
	5   Darryl Kennedyp0B0r
	6           David Butle
	7        Jerry Corcoran
	8        Jerry Corcoran
	9        Jerry Corcoran
	10       Jerry Corcoran
	11       Jerry Corcoran
	12     KAnHcBrad Lohaus
	13     KAnHcBrad Lohaus
	14     KAnHcBrad Lohaus
	15     KAnHcBrad Lohaus
	16     M7tzzTim Naegeli
	17  OZLFMJerry Corcoran
	18  OZLFMJerry Corcoran
	19  OZLFMJerry Corcoran
	20  OZLFMJerry Corcoran
	21    nW3Brad LohausOa6
	22    nW3Brad LohausOa6
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM employment AS LHS
		           WHERE EXISTS
		               (SELECT 1
		                FROM
		                  (SELECT *
		                   FROM company
		                   WHERE (sales_in_billion >= 200.0)) AS RHS
		                WHERE (LHS.company_id = RHS.company_id) )) AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY name

	                  name
	0          Brad Lohaus
	1  Darryl Kennedyp0B0r
	2          David Butle
	3       Jerry Corcoran
	4       Jerry Corcoran
	5     KAnHcBrad Lohaus
	6     M7tzzTim Naegeli
	7  OZLFMJerry Corcoran
	8    nW3Brad LohausOa6
Error while executing solution for instance spider/company_employee/0012 (1394)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/company_employee/0012 (1394)
Error while executing solution for instance spider/company_employee/0001 (1399)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT `n_distinct` AS `count___`
FROM
  (SELECT `company_id`,
          `name`,
          `headquarters`,
          `industry`,
          `sales_in_billion`,
          `profits_in_billion`,
          `assets_in_billion`,
          `market_value_in_billion`,
          COUNT(DISTINCT `headquarters`) OVER () AS `n_distinct`
   FROM `company`)
WHERE (`headquarters` != 'USA')
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/company_employee/0014 (1400)
	EXPECTED OUTPUT ====

		SELECT T3.Name,
		       COUNT(*)
		FROM employment AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		JOIN company AS T3 ON T1.Company_ID = T3.Company_ID
		GROUP BY T3.Name

	                                      name  count(*)
	0                         Volkswagen Group         6
	1  Industrial and Commercial Bank of China        30
	ACTUAL OUTPUT ====

		
		SELECT name,
		       n AS count___
		FROM
		  (SELECT LHS.company_id AS company_id,
		          LHS.name AS name,
		          LHS.headquarters AS headquarters,
		          LHS.industry AS industry,
		          LHS.sales_in_billion AS sales_in_billion,
		          LHS.profits_in_billion AS profits_in_billion,
		          LHS.assets_in_billion AS assets_in_billion,
		          LHS.market_value_in_billion AS market_value_in_billion,
		          LHS.people_id AS people_id,
		          LHS.year_working AS year_working,
		          RHS.age AS age,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.company_id AS company_id,
		             LHS.name AS name,
		             LHS.headquarters AS headquarters,
		             LHS.industry AS industry,
		             LHS.sales_in_billion AS sales_in_billion,
		             LHS.profits_in_billion AS profits_in_billion,
		             LHS.assets_in_billion AS assets_in_billion,
		             LHS.market_value_in_billion AS market_value_in_billion,
		             RHS.people_id AS people_id,
		             RHS.year_working AS year_working
		      FROM company AS LHS
		      INNER JOIN employment AS RHS ON (LHS.company_id = RHS.company_id)) AS LHS
		   INNER JOIN
		     (SELECT age,
		             people_id,
		             COUNT() AS n
		      FROM people
		      GROUP BY age,
		               people_id) AS RHS ON (LHS.people_id = RHS.people_id))
		ORDER BY name

	                                       name  count___
	0   Industrial and Commercial Bank of China         1
	1   Industrial and Commercial Bank of China         1
	2   Industrial and Commercial Bank of China         1
	3   Industrial and Commercial Bank of China         1
	4   Industrial and Commercial Bank of China         1
	5   Industrial and Commercial Bank of China         1
	6   Industrial and Commercial Bank of China         1
	7   Industrial and Commercial Bank of China         1
	8   Industrial and Commercial Bank of China         1
	9   Industrial and Commercial Bank of China         1
	10  Industrial and Commercial Bank of China         1
	11  Industrial and Commercial Bank of China         1
	12  Industrial and Commercial Bank of China         1
	13  Industrial and Commercial Bank of China         1
	14  Industrial and Commercial Bank of China         1
	15  Industrial and Commercial Bank of China         1
	16  Industrial and Commercial Bank of China         1
	17  Industrial and Commercial Bank of China         1
	18  Industrial and Commercial Bank of China         1
	19  Industrial and Commercial Bank of China         1
	20  Industrial and Commercial Bank of China         1
	21  Industrial and Commercial Bank of China         1
	22  Industrial and Commercial Bank of China         1
	23  Industrial and Commercial Bank of China         1
	24  Industrial and Commercial Bank of China         1
	25  Industrial and Commercial Bank of China         1
	26  Industrial and Commercial Bank of China         1
	27  Industrial and Commercial Bank of China         1
	28  Industrial and Commercial Bank of China         1
	29  Industrial and Commercial Bank of China         1
	30                         Volkswagen Group         1
	31                         Volkswagen Group         1
	32                         Volkswagen Group         1
	33                         Volkswagen Group         1
	34                         Volkswagen Group         1
	35                         Volkswagen Group         1
Error while executing solution for instance spider/company_employee/0011 (1402)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/company_employee/0011 (1402)
Wrong output for fuzzied solution in instance spider/company_employee/0010 (1403)
	EXPECTED OUTPUT ====

		SELECT Headquarters
		FROM company
		WHERE Industry = "Banking" INTERSECT
		  SELECT Headquarters
		  FROM company WHERE Industry = "Oil and gas"

	Empty DataFrame
	Columns: [headquarters]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `headquarters`
		FROM
		  (SELECT *
		   FROM `company`
		   WHERE (`industry` != 'Banking'
		          OR `industry` != 'Oil and gas'))
		WHERE (`industry` = 'Banking')
		ORDER BY headquarters

	  headquarters
	0        China
	1   gAZm3China
	2         hina
Wrong output for fuzzied solution in instance spider/roller_coaster/0017 (1405)
	EXPECTED OUTPUT ====

		SELECT T1.name,
		       T1.area,
		       T1.population
		FROM country AS T1
		JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID
		WHERE T2.speed > 60 INTERSECT
		  SELECT T1.name,
		         T1.area,
		         T1.population
		  FROM country AS T1
		  JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T2.speed < 55

	      name    area  population
	0  Finland  338145     5261010
	1  Austria  449963     5261008
	ACTUAL OUTPUT ====

		
		SELECT name,
		       area,
		       population
		FROM
		  (SELECT LHS.country_id AS country_id,
		          LHS.name AS name,
		          LHS.population AS population,
		          LHS.area AS area,
		          LHS.languages AS languages
		   FROM country AS LHS
		   INNER JOIN
		     (SELECT country_id
		      FROM roller_coaster
		      WHERE (speed = 55) INTERSECT
		        SELECT country_id
		        FROM roller_coaster WHERE (speed = 55)) AS RHS ON (LHS.country_id = RHS.country_id))
		ORDER BY name

	Empty DataFrame
	Columns: [name, area, population]
	Index: []
Wrong output for fuzzied solution in instance spider/roller_coaster/0013 (1408)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM country AS T1
		JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID
		GROUP BY T1.Name
		HAVING COUNT(*) > 1

	            name
	0         Finlan
	1        Finland
	2  nPfFinland jW
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM country AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT country_id,
		                     COUNT() AS n
		              FROM roller_coaster
		              GROUP BY country_id)
		           WHERE (n <= 1)) AS RHS
		        WHERE (LHS.country_id = RHS.country_id) ))
		ORDER BY name

	            name
	0         Finlan
	1        Finland
	2        Finland
	3        Finland
	4        Finland
	5  nPfFinland jW
Error while executing solution for instance spider/roller_coaster/0012 (1411)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/roller_coaster/0012 (1411)
Wrong output for base solution in instance spider/roller_coaster/0015 (1412)
	EXPECTED OUTPUT ====

	      name  avg_t2_speed_
	0  Finland      47.450000
	1  Austria      58.666667
	2   Sweden      67.000000
	ACTUAL OUTPUT ====

		SELECT T1.Name,
		       avg(T2.Speed)
		FROM country AS T1
		JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID
		GROUP BY T1.Name

	      name  avg(t2.speed)
	0  Austria      58.666667
	1  Finland      47.450000
	2   Sweden      67.000000
Wrong output for ground truth in instance spider/roller_coaster/0015 (1412)
Wrong output for fuzzied solution in instance spider/roller_coaster/0005 (1413)
	EXPECTED OUTPUT ====

		SELECT Status
		FROM roller_coaster
		WHERE LENGTH > 3300
		  OR Height > 100

	           status
	0        Operatin
	1        Operatin
	2       Operating
	3       Operating
	4       Operating
	5  OperatinggSnve
	6        perating
	7        perating
	ACTUAL OUTPUT ====

		
		SELECT status
		FROM roller_coaster
		WHERE (height <= 3300.0
		       AND height > 100.0)
		ORDER BY status

	           status
	0        Operatin
	1        Operatin
	2       Operating
	3       Operating
	4       Operating
	5  OperatinggSnve
	6        perating
Wrong output for fuzzied solution in instance spider/roller_coaster/0016 (1414)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM country
		WHERE country_id NOT IN
		    (SELECT country_id
		     FROM roller_coaster
		     WHERE LENGTH > 3000 )

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n_distinct AS count___
		FROM
		  (SELECT LHS.languages AS languages,
		          LHS.name AS name,
		          LHS.n_distinct AS n_distinct,
		          RHS.roller_coaster_id AS roller_coaster_id,
		          RHS.park AS park,
		          RHS.country_id AS country_id,
		          RHS.length AS LENGTH,
		          RHS.height AS height,
		          RHS.speed AS speed,
		          RHS.opened AS opened,
		          RHS.status AS status
		   FROM
		     (SELECT languages,
		             name,
		             COUNT(DISTINCT country_id) AS n_distinct
		      FROM country
		      GROUP BY languages,
		               name) AS LHS
		   LEFT JOIN
		     (SELECT *
		      FROM roller_coaster
		      WHERE (country_id > 3000
		             AND LENGTH > country_id)) AS RHS ON (LHS.name = RHS.name))
		ORDER BY count___

	   count___
	0         1
	1         3
No solution for instance spider/roller_coaster/0007 (1415)
Wrong output for fuzzied solution in instance spider/roller_coaster/0001 (1416)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM roller_coaster

	   count(*)
	0         9
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT status,
		          COUNT() AS n
		   FROM roller_coaster
		   GROUP BY status)
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
	3         1
	4         1
	5         4
Wrong output for fuzzied solution in instance spider/roller_coaster/0014 (1417)
	EXPECTED OUTPUT ====

		SELECT T1.Name,
		       T1.population
		FROM country AS T1
		JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID
		ORDER BY T2.Height DESC
		LIMIT 1

	     name  population
	0  Finlan     8206524
	ACTUAL OUTPUT ====

		
		SELECT name,
		       population
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM country AS LHS
		         WHERE NOT EXISTS
		             (SELECT 1
		              FROM roller_coaster AS RHS
		              WHERE (LHS.name = RHS.name) ))
		      ORDER BY languages DESC)
		   LIMIT 1)

	      name  population
	0  Finland     8206524
Wrong output for fuzzied solution in instance spider/roller_coaster/0009 (1418)
	EXPECTED OUTPUT ====

		SELECT Status
		FROM roller_coaster
		GROUP BY Status
		ORDER BY COUNT(*) DESC
		LIMIT 1

	      status
	0  Operating
	ACTUAL OUTPUT ====

		
		SELECT status
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT roller_coaster_id,
		                status,
		                COUNT() AS n
		         FROM roller_coaster
		         GROUP BY roller_coaster_id,
		                  status)
		      ORDER BY status DESC)
		   LIMIT 1)

	            status
	0  Yg4Operatingm1Z
Wrong output for fuzzied solution in instance spider/roller_coaster/0010 (1420)
	EXPECTED OUTPUT ====

		SELECT Status
		FROM roller_coaster
		GROUP BY Status
		HAVING COUNT(*) > 2

	      status
	0  Operating
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT status
		FROM
		  (SELECT country_id,
		          status,
		          COUNT() AS n
		   FROM roller_coaster
		   GROUP BY country_id,
		            status)
		WHERE (n <= 2)
		ORDER BY status

	            status
	0  6dhOperatingIg7
	1        Operating
	2   Operating8oCto
	3   OperatingjHXuH
	4  ROWOperatingXLk
	5  Yg4Operatingm1Z
Wrong output for fuzzied solution in instance spider/tracking_software_problems/0002 (1421)
	EXPECTED OUTPUT ====

		SELECT problem_log_id,
		       problem_id
		FROM problem_log
		ORDER BY log_entry_date
		LIMIT 1

	   problem_log_id  problem_id
	0              11           9
	ACTUAL OUTPUT ====

		
		SELECT problem_log_id,
		       problem_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM problem_log
		      ORDER BY assigned_to_staff_id)
		   LIMIT 1)

	   problem_log_id  problem_id
	0              14          14
Wrong output for fuzzied solution in instance spider/tracking_software_problems/0008 (1423)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.product_name
		FROM product AS T1
		JOIN problems AS T2 ON T1.product_id = T2.product_id
		GROUP BY T1.product_name
		ORDER BY count(*) DESC
		LIMIT 1

	   count(*) product_name
	0         4        learn
	ACTUAL OUTPUT ====

		
		SELECT reported_by_staff_id AS count___,
		       product_name
		FROM
		  (SELECT LHS.product_id AS product_id,
		          LHS.product_name AS product_name,
		          LHS.product_details AS product_details,
		          LHS.problem_id AS problem_id,
		          LHS.closure_authorised_by_staff_id AS closure_authorised_by_staff_id,
		          LHS.reported_by_staff_id AS reported_by_staff_id,
		          LHS.date_problem_reported AS date_problem_reported,
		          LHS.date_problem_closed AS date_problem_closed,
		          LHS.problem_description AS problem_description,
		          LHS.other_problem_details AS other_problem_details,
		          RHS.product_id AS product_id_other,
		          RHS.product_details AS product_details_other,
		          RHS.problem_id AS problem_id_other,
		          RHS.reported_by_staff_id AS reported_by_staff_id_other,
		          RHS.date_problem_reported AS date_problem_reported_other,
		          RHS.date_problem_closed AS date_problem_closed_other,
		          RHS.problem_description AS problem_description_other,
		          RHS.other_problem_details AS other_problem_details_other,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.product_id AS product_id,
		             LHS.product_name AS product_name,
		             LHS.product_details AS product_details,
		             RHS.problem_id AS problem_id,
		             RHS.closure_authorised_by_staff_id AS closure_authorised_by_staff_id,
		             RHS.reported_by_staff_id AS reported_by_staff_id,
		             RHS.date_problem_reported AS date_problem_reported,
		             RHS.date_problem_closed AS date_problem_closed,
		             RHS.problem_description AS problem_description,
		             RHS.other_problem_details AS other_problem_details
		      FROM product AS LHS
		      LEFT JOIN problems AS RHS ON (LHS.product_id = RHS.product_id)) AS LHS
		   INNER JOIN
		     (SELECT product_id,
		             product_name,
		             product_details,
		             problem_id,
		             closure_authorised_by_staff_id,
		             reported_by_staff_id,
		             date_problem_reported,
		             date_problem_closed,
		             problem_description,
		             other_problem_details,
		             COUNT(*) OVER () AS n
		      FROM
		        (SELECT LHS.product_id AS product_id,
		                LHS.product_name AS product_name,
		                LHS.product_details AS product_details,
		                RHS.problem_id AS problem_id,
		                RHS.closure_authorised_by_staff_id AS closure_authorised_by_staff_id,
		                RHS.reported_by_staff_id AS reported_by_staff_id,
		                RHS.date_problem_reported AS date_problem_reported,
		                RHS.date_problem_closed AS date_problem_closed,
		                RHS.problem_description AS problem_description,
		                RHS.other_problem_details AS other_problem_details
		         FROM product AS LHS
		         LEFT JOIN problems AS RHS ON (LHS.product_id = RHS.product_id))) AS RHS ON (LHS.problem_id = RHS.closure_authorised_by_staff_id
		                                                                                        AND LHS.product_name = RHS.product_name))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___, product_name]
	Index: []
Wrong output for fuzzied solution in instance spider/tracking_software_problems/0006 (1426)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.problem_id,
		                T2.problem_log_id
		FROM staff AS T1
		JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id
		WHERE T1.staff_first_name = "Rylan"
		  AND T1.staff_last_name = "Homenick"

	Empty DataFrame
	Columns: [problem_id, problem_log_id]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `problem_id`,
		       `problem_log_id`
		FROM
		  (SELECT `LHS`.`problem_log_id` AS `problem_log_id`,
		          `LHS`.`assigned_to_staff_id` AS `assigned_to_staff_id`,
		          `LHS`.`problem_id` AS `problem_id`,
		          `LHS`.`problem_category_code` AS `problem_category_code`,
		          `LHS`.`problem_status_code` AS `problem_status_code`,
		          `LHS`.`log_entry_date` AS `log_entry_date`,
		          `LHS`.`log_entry_description` AS `log_entry_description`,
		          `LHS`.`log_entry_fix` AS `log_entry_fix`,
		          `LHS`.`other_log_details` AS `other_log_details`
		   FROM `problem_log` AS `LHS`
		   INNER JOIN
		     (SELECT `staff_id`
		      FROM `staff` INTERSECT SELECT `staff_id`
		      FROM `staff`
		      WHERE (`staff_first_name` = 'Rylan'
		             OR `staff_last_name` = 'Homenick')) AS RHS ON (LHS.assigned_to_staff_id = RHS.staff_id))
		ORDER BY problem_id

	   problem_id  problem_log_id
	0           3               1
	1           4      1225949211
	2   420747697              11
	3  4479306355      6538849086
	4  5495986405      9390846676
	5  6261213586      1974545359
	6  6762548992     -8321850895
	7  9028178308      2888050508
	8  9863065897      1003261446
Error while executing solution for instance spider/tracking_software_problems/0012 (1428)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `problem_id`
FROM
  (SELECT *
   FROM `problems` AS `LHS`
   WHERE EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM `problems`
           WHERE (`date_problem_reported` <= parse_datetime('1978-06-26'))) AS RHS
        WHERE (LHS.problem_id = RHS.problem_id
               AND LHS.product_id = RHS.product_id
               AND LHS.closure_authorised_by_staff_id = RHS.closure_authorised_by_staff_id
               AND LHS.reported_by_staff_id = RHS.reported_by_staff_id
               AND LHS.date_problem_reported = RHS.date_problem_reported
               AND LHS.date_problem_closed = RHS.date_problem_closed
               AND LHS.problem_description = RHS.problem_description
               AND LHS.other_problem_details = RHS.other_problem_details) ))
ORDER BY problem_id]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/tracking_software_problems/0015 (1429)
	EXPECTED OUTPUT ====

		SELECT DISTINCT product_name
		FROM product
		ORDER BY product_name

	   product_name
	0    NzFroseUkJ
	1          game
	2          lear
	3         learn
	4          rose
	5       twitter
	6  twitterfyE0u
	7    ugFgameGi4
	8        witter
	ACTUAL OUTPUT ====

		
		SELECT product_name
		FROM product
		ORDER BY product_name

	    product_name
	0     NzFroseUkJ
	1           game
	2           game
	3           lear
	4          learn
	5          learn
	6          learn
	7           rose
	8        twitter
	9   twitterfyE0u
	10    ugFgameGi4
	11        witter
Wrong output for fuzzied solution in instance spider/tracking_software_problems/0005 (1430)
	EXPECTED OUTPUT ====

		SELECT DISTINCT staff_first_name,
		                staff_last_name
		FROM staff AS T1
		JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id
		WHERE T2.problem_id = 1

	Empty DataFrame
	Columns: [staff_first_name, staff_last_name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT staff_first_name,
		       staff_last_name
		FROM
		  (SELECT LHS.assigned_to_staff_id AS assigned_to_staff_id,
		          RHS.staff_first_name AS staff_first_name,
		          RHS.staff_last_name AS staff_last_name,
		          RHS.other_staff_details AS other_staff_details
		   FROM
		     (SELECT assigned_to_staff_id
		      FROM problem_log INTERSECT SELECT assigned_to_staff_id
		      FROM problem_log
		      WHERE (problem_id <= 1)) AS LHS
		   INNER JOIN staff AS RHS ON (LHS.assigned_to_staff_id = RHS.staff_id))
		ORDER BY staff_first_name

	  staff_first_name staff_last_name
	0         Kristian            Bosc
Wrong output for fuzzied solution in instance spider/tracking_software_problems/0016 (1431)
	EXPECTED OUTPUT ====

		SELECT DISTINCT product_name
		FROM product
		ORDER BY product_id

	   product_name
	0    NzFroseUkJ
	1          game
	2          lear
	3         learn
	4          rose
	5       twitter
	6  twitterfyE0u
	7    ugFgameGi4
	8        witter
	ACTUAL OUTPUT ====

		
		SELECT product_name
		FROM product
		ORDER BY product_name

	    product_name
	0     NzFroseUkJ
	1           game
	2           game
	3           lear
	4          learn
	5          learn
	6          learn
	7           rose
	8        twitter
	9   twitterfyE0u
	10    ugFgameGi4
	11        witter
Wrong output for fuzzied solution in instance spider/tracking_software_problems/0018 (1432)
	EXPECTED OUTPUT ====

		SELECT product_id
		FROM problems AS T1
		JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id
		WHERE T2.staff_first_name = "Christop"
		  AND T2.staff_last_name = "Berge" INTERSECT
		  SELECT product_id
		  FROM problems AS T1
		  JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Ashley"
		  AND T2.staff_last_name = "Medhurst"

	Empty DataFrame
	Columns: [product_id]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `product_id`
		FROM
		  (SELECT *
		   FROM
		     (SELECT `problem_id`,
		             `product_id`,
		             `closure_authorised_by_staff_id`,
		             `reported_by_staff_id`,
		             `date_problem_reported`,
		             `date_problem_closed`,
		             `problem_description`,
		             `other_problem_details`,
		             `staff_first_name`,
		             `staff_last_name`,
		             `staff_id`,
		             `problem_description` AS `other_staff_details`
		      FROM
		        (SELECT `problem_id`,
		                `product_id`,
		                `closure_authorised_by_staff_id`,
		                `reported_by_staff_id`,
		                `date_problem_reported`,
		                `date_problem_closed`,
		                `problem_description`,
		                `other_problem_details`,
		                `staff_first_name`,
		                `staff_last_name`,
		                `closure_authorised_by_staff_id` AS `staff_id`
		         FROM
		           (SELECT `LHS`.`problem_id` AS `problem_id`,
		                   `LHS`.`product_id` AS `product_id`,
		                   `LHS`.`closure_authorised_by_staff_id` AS `closure_authorised_by_staff_id`,
		                   `LHS`.`reported_by_staff_id` AS `reported_by_staff_id`,
		                   `LHS`.`date_problem_reported` AS `date_problem_reported`,
		                   `LHS`.`date_problem_closed` AS `date_problem_closed`,
		                   `LHS`.`problem_description` AS `problem_description`,
		                   `LHS`.`other_problem_details` AS `other_problem_details`,
		                   `RHS`.`staff_first_name` AS `staff_first_name`,
		                   `RHS`.`staff_last_name` AS `staff_last_name`
		            FROM `problems` AS `LHS`
		            INNER JOIN `staff` AS `RHS` ON (`LHS`.`closure_authorised_by_staff_id` = `RHS`.`staff_id`
		                                               AND `LHS`.`problem_description` = `RHS`.`other_staff_details`))))
		   WHERE (`staff_first_name` != 'Christop'
		          AND `staff_last_name` != 'Berge'))
		WHERE (`staff_first_name` = 'Ashley'
		       OR `staff_last_name` = 'Medhurst')
		ORDER BY product_id

	   product_id
	0  5237593222
No solution for instance spider/tracking_software_problems/0020 (1433)
No solution for instance spider/tracking_software_problems/0019 (1434)
Wrong output for fuzzied solution in instance spider/tracking_software_problems/0007 (1435)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM product AS T1
		JOIN problems AS T2 ON T1.product_id = T2.product_id
		WHERE T1.product_name = "voluptatem"

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM problems AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM product AS RHS
		           WHERE (LHS.product_id = RHS.product_id) )))
		ORDER BY count___

	   count___
	0         0
Wrong output for fuzzied solution in instance spider/tracking_software_problems/0021 (1437)
	EXPECTED OUTPUT ====

		SELECT T2.product_name
		FROM problems AS T1
		JOIN product AS T2 ON T1.product_id = T2.product_id
		GROUP BY T2.product_name
		ORDER BY count(*) DESC
		LIMIT 3

	  product_name
	0         game
	1        learn
	2         rose
	ACTUAL OUTPUT ====

		
		SELECT product_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.product_id AS product_id,
		                LHS.product_name AS product_name,
		                LHS.product_details AS product_details,
		                RHS.problem_description AS problem_description,
		                RHS.n AS n
		         FROM product AS LHS
		         INNER JOIN
		           (SELECT problem_description,
		                   product_id,
		                   COUNT() AS n
		            FROM problems
		            GROUP BY problem_description,
		                     product_id) AS RHS ON (LHS.product_id = RHS.product_id))
		      ORDER BY problem_description)
		   LIMIT 3)

	  product_name
	0         game
	1         game
	2         lear
Error while executing solution for instance spider/tracking_software_problems/0014 (1439)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `n_distinct` AS `count___`,
       `product_id`
FROM
  (SELECT `product_id`,
          COUNT(DISTINCT `date_problem_reported`) AS `n_distinct`
   FROM
     (SELECT *
      FROM
        (SELECT *
         FROM `problems`
         WHERE (`date_problem_reported` >= parse_datetime('1986-11-13'))) AS LHS
      WHERE EXISTS
          (SELECT 1
           FROM product AS RHS
           WHERE (LHS.product_id = RHS.product_id) ))
   GROUP BY product_id)
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/tracking_software_problems/0011 (1441)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `problem_id`
FROM `problems`
WHERE (`date_problem_reported` >= parse_datetime('1978-06-26'))
ORDER BY problem_id]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/apartment_rentals/0033 (1443)
No solution for instance spider/apartment_rentals/0002 (1445)
Wrong output for fuzzied solution in instance spider/apartment_rentals/0008 (1448)
	EXPECTED OUTPUT ====

		SELECT avg(bedroom_count)
		FROM Apartments

	   avg(bedroom_count)
	0              4.8125
	ACTUAL OUTPUT ====

		
		SELECT meanbedroom_count AS avg_bedroom_count_
		FROM
		  (SELECT AVG(bedroom_count) AS meanbedroom_count
		   FROM
		     (SELECT apt_number,
		             bedroom_count,
		             AVG(bedroom_count) AS meanbedroom_count
		      FROM apartments
		      GROUP BY apt_number,
		               bedroom_count))
		ORDER BY avg_bedroom_count_

	   avg_bedroom_count_
	0            4.846154
Wrong output for fuzzied solution in instance spider/apartment_rentals/0039 (1449)
	EXPECTED OUTPUT ====

		SELECT T2.apt_number
		FROM Apartment_Bookings AS T1
		JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id
		WHERE T1.booking_status_code = "Confirmed" INTERSECT
		  SELECT T2.apt_number
		  FROM Apartment_Bookings AS T1
		  JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = "Provisional"

	        apt_number
	0  agMSuite 645qXj
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `apt_number_other` AS `apt_number`
		FROM
		  (SELECT `LHS`.`apt_booking_id` AS `apt_booking_id`,
		          `LHS`.`apt_id` AS `apt_id`,
		          `LHS`.`guest_id` AS `guest_id`,
		          `LHS`.`booking_status_code` AS `booking_status_code`,
		          `LHS`.`booking_start_date` AS `booking_start_date`,
		          `LHS`.`booking_end_date` AS `booking_end_date`,
		          `LHS`.`building_id` AS `building_id`,
		          `LHS`.`apt_type_code` AS `apt_type_code`,
		          `LHS`.`apt_number` AS `apt_number`,
		          `LHS`.`bathroom_count` AS `bathroom_count`,
		          `LHS`.`bedroom_count` AS `bedroom_count`,
		          `LHS`.`room_count` AS `room_count`,
		          `RHS`.`apt_booking_id` AS `apt_booking_id_other`,
		          `RHS`.`apt_id` AS `apt_id_other`,
		          `RHS`.`booking_status_code` AS `booking_status_code_other`,
		          `RHS`.`booking_start_date` AS `booking_start_date_other`,
		          `RHS`.`booking_end_date` AS `booking_end_date_other`,
		          `RHS`.`building_id` AS `building_id_other`,
		          `RHS`.`apt_type_code` AS `apt_type_code_other`,
		          `RHS`.`apt_number` AS `apt_number_other`,
		          `RHS`.`bedroom_count` AS `bedroom_count_other`,
		          `RHS`.`room_count` AS `room_count_other`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`apt_booking_id` AS `apt_booking_id`,
		                `LHS`.`apt_id` AS `apt_id`,
		                `LHS`.`guest_id` AS `guest_id`,
		                `LHS`.`booking_status_code` AS `booking_status_code`,
		                `LHS`.`booking_start_date` AS `booking_start_date`,
		                `LHS`.`booking_end_date` AS `booking_end_date`,
		                `RHS`.`building_id` AS `building_id`,
		                `RHS`.`apt_type_code` AS `apt_type_code`,
		                `RHS`.`apt_number` AS `apt_number`,
		                `RHS`.`bathroom_count` AS `bathroom_count`,
		                `RHS`.`bedroom_count` AS `bedroom_count`,
		                `RHS`.`room_count` AS `room_count`
		         FROM `apartment_bookings` AS `LHS`
		         LEFT JOIN `apartments` AS `RHS` ON (`LHS`.`apt_id` = `RHS`.`apt_id`))
		      WHERE (`booking_status_code` != 'Confirmed'
		             AND `booking_status_code` = 'Provisional')) AS LHS
		   INNER JOIN
		     (SELECT LHS.apt_booking_id AS apt_booking_id,
		             LHS.apt_id AS apt_id,
		             LHS.guest_id AS guest_id,
		             LHS.booking_status_code AS booking_status_code,
		             LHS.booking_start_date AS booking_start_date,
		             LHS.booking_end_date AS booking_end_date,
		             RHS.building_id AS building_id,
		             RHS.apt_type_code AS apt_type_code,
		             RHS.apt_number AS apt_number,
		             RHS.bathroom_count AS bathroom_count,
		             RHS.bedroom_count AS bedroom_count,
		             RHS.room_count AS room_count
		      FROM apartment_bookings AS LHS
		      LEFT JOIN apartments AS RHS ON (LHS.apt_id = RHS.apt_id)) AS RHS ON (LHS.bathroom_count = RHS.bathroom_count
		                                                                              AND LHS.bedroom_count = RHS.guest_id))
		ORDER BY apt_number

	       apt_number
	0       Suite 749
	1  Suite 749BwY5A
Wrong output for fuzzied solution in instance spider/apartment_rentals/0022 (1453)
	EXPECTED OUTPUT ====

		SELECT T2.guest_first_name,
		       T2.guest_last_name
		FROM Apartment_Bookings AS T1
		JOIN Guests AS T2 ON T1.guest_id = T2.guest_id
		WHERE T1.booking_status_code = "Confirmed"

	   guest_first_name     guest_last_name
	0           Juvenal              DuBuqu
	1           Juvenal              DuBuqu
	2             Keith             Roberts
	3        MvwKdTamia       hoWDuBuque76c
	4          OdQPNWlz  n aLcJhJAWX2FmOzAu
	5          OdQPNWlz  n aLcJhJAWX2FmOzAu
	6            Rebeca             DuBuque
	7            Rebeca        RobertsY2GJ9
	8            Rebeca        RobertsY2GJ9
	9            Rebeca        RobertsY2GJ9
	10      RebecaD97BX        S)PMLRoberts
	11      RebecaD97BX        S)PMLRoberts
	12      RebecaD97BX        S)PMLRoberts
	13     XpcRebecazBz              uBuque
	14     XpcRebecazBz              uBuque
	15     XpcRebecazBz              uBuque
	16     XpcRebecazBz              uBuque
	17    a0oJuvenal)l2  Runolfsdottir XLfK
	18    a0oJuvenal)l2  Runolfsdottir XLfK
	19             amia       Runolfsdottir
	20             amia       Runolfsdottir
	21             amia       Runolfsdottir
	22             dcMj              Robert
	23      liNTamiaC5r             Roberts
	24      qDjTamiaMlc       n9EDuBuquejVG
	ACTUAL OUTPUT ====

		
		SELECT `guest_first_name`,
		       `guest_last_name`
		FROM
		  (SELECT *
		   FROM `guests` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `apartment_bookings`
		           WHERE (`booking_status_code` = 'Confirmed')) AS RHS
		        WHERE (LHS.guest_id = RHS.guest_id) ))
		ORDER BY guest_first_name

	   guest_first_name     guest_last_name
	0           Juvenal              DuBuqu
	1             Keith             Roberts
	2        MvwKdTamia       hoWDuBuque76c
	3          OdQPNWlz  n aLcJhJAWX2FmOzAu
	4            Rebeca             DuBuque
	5            Rebeca        RobertsY2GJ9
	6       RebecaD97BX        S)PMLRoberts
	7      XpcRebecazBz              uBuque
	8     a0oJuvenal)l2  Runolfsdottir XLfK
	9              amia       Runolfsdottir
	10             dcMj              Robert
	11      liNTamiaC5r             Roberts
	12      qDjTamiaMlc       n9EDuBuquejVG
Wrong output for fuzzied solution in instance spider/apartment_rentals/0030 (1454)
	EXPECTED OUTPUT ====

		SELECT apt_number
		FROM Apartments
		ORDER BY bedroom_count DESC
		LIMIT 1

	  apt_number
	0  Suite 693
	ACTUAL OUTPUT ====

		
		SELECT apt_number
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM apartments
		      ORDER BY apt_type_code DESC)
		   LIMIT 1)

	  apt_number
	0  Suite 088
No solution for instance spider/apartment_rentals/0006 (1456)
Wrong output for fuzzied solution in instance spider/apartment_rentals/0026 (1459)
	EXPECTED OUTPUT ====

		SELECT T1.building_address
		FROM Apartment_Buildings AS T1
		JOIN Apartments AS T2 ON T1.building_id = T2.building_id
		WHERE T2.bathroom_count > 2

	                                     building_address
	0   01 Queenie Mountains Suite 619\nNew Korbinmout...
	1   101 Queenie Mountains Suite 619\nNew Korbinmou...
	2   101 Queenie Mountains Suite 619\nNew Korbinmou...
	3   101 Queenie Mountains Suite 619\nNew Korbinmou...
	4   4686 Christopher Circles Apt. 321\nDaytonland,...
	5   4686 Christopher Circles Apt. 321\nDaytonland,...
	6   4686 Christopher Circles Apt. 321\nDaytonland,...
	7   4686 Christopher Circles Apt. 321\nDaytonland,...
	8   4686 Christopher Circles Apt. 321\nDaytonland,...
	9   50804 Mason Isle Suite 844\nWest Whitney, ID 6...
	10  eOAwM489 Josh Orchard Apt. 998\nSipesview, DE ...
	ACTUAL OUTPUT ====

		
		SELECT building_address
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.building_id AS building_id,
		                LHS.building_short_name AS building_short_name,
		                LHS.building_full_name AS building_full_name,
		                LHS.building_description AS building_description,
		                LHS.building_address AS building_address,
		                LHS.building_manager AS building_manager,
		                LHS.building_phone AS building_phone,
		                RHS.apt_id AS apt_id,
		                RHS.apt_type_code AS apt_type_code,
		                RHS.apt_number AS apt_number,
		                RHS.bathroom_count AS bathroom_count,
		                RHS.bedroom_count AS bedroom_count,
		                RHS.room_count AS room_count
		         FROM apartment_buildings AS LHS
		         INNER JOIN apartments AS RHS ON (LHS.building_id = RHS.building_id))
		      ORDER BY bathroom_count DESC)
		   LIMIT 2)

	                                    building_address
	0  4686 Christopher Circles Apt. 321\nDaytonland,...
	1  4686 Christopher Circles Apt. 321\nDaytonland,...
Error while executing solution for instance spider/apartment_rentals/0015 (1460)

The column label 'booking_start_date' is not unique.
Error while checking ground truth in instance spider/apartment_rentals/0015 (1460)
Error while executing solution for instance spider/apartment_rentals/0016 (1462)

The column label 'booking_start_date' is not unique.
Error while checking ground truth in instance spider/apartment_rentals/0016 (1462)
Wrong output for fuzzied solution in instance spider/apartment_rentals/0032 (1463)
	EXPECTED OUTPUT ====

		SELECT apt_type_code
		FROM Apartments
		GROUP BY apt_type_code
		ORDER BY avg(room_count) DESC
		LIMIT 3

	  apt_type_code
	0    4PxFlatA3B
	1   DuplexMwT7(
	2        Studio
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT apt_type_code
		FROM
		  (SELECT LHS.apt_id AS apt_id,
		          LHS.building_id AS building_id,
		          LHS.apt_type_code AS apt_type_code,
		          LHS.apt_number AS apt_number,
		          LHS.bathroom_count AS bathroom_count,
		          LHS.bedroom_count AS bedroom_count,
		          LHS.room_count AS room_count
		   FROM apartments AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM apartments
		      WHERE (room_count != 3)) AS RHS ON (LHS.apt_id = RHS.apt_id
		                                          AND LHS.building_id = RHS.building_id
		                                          AND LHS.apt_type_code = RHS.apt_type_code
		                                          AND LHS.apt_number = RHS.apt_number
		                                          AND LHS.bathroom_count = RHS.bathroom_count
		                                          AND LHS.bedroom_count = RHS.bedroom_count
		                                          AND LHS.room_count = RHS.room_count))
		ORDER BY apt_type_code

	   apt_type_code
	0     4PxFlatA3B
	1          Duple
	2         Duplex
	3    DuplexMwT7(
	4    DuplexfMLeP
	5            Fla
	6           Flat
	7   IEHStudiojPF
	8         Studio
	9   ol7StudioGMc
	10         tudio
Wrong output for fuzzied solution in instance spider/apartment_rentals/0035 (1465)
	EXPECTED OUTPUT ====

		SELECT apt_type_code
		FROM Apartments
		WHERE bathroom_count > 1
		GROUP BY apt_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  apt_type_code
	0          Flat
	ACTUAL OUTPUT ====

		
		SELECT apt_type_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT apt_type_code,
		                building_id,
		                COUNT() AS n
		         FROM apartments
		         GROUP BY apt_type_code,
		                  building_id)
		      ORDER BY building_id)
		   LIMIT 1)

	  apt_type_code
	0     FlatTs0sc
Error while executing solution for instance spider/apartment_rentals/0020 (1466)

The column label 'booking_start_date' is not unique.
Error while checking ground truth in instance spider/apartment_rentals/0020 (1466)
No solution for instance spider/apartment_rentals/0019 (1467)
Wrong output for fuzzied solution in instance spider/apartment_rentals/0007 (1468)
	EXPECTED OUTPUT ====

		SELECT min(bathroom_count),
		       max(bathroom_count)
		FROM Apartments

	  min(bathroom_count) max(bathroom_count)
	0                None                None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT MIN(bathroom_count) OVER () AS min_bathroom_count_,
		                                         maxbathroom_count AS max_bathroom_count_
		FROM
		  (SELECT apt_id,
		          building_id,
		          apt_type_code,
		          apt_number,
		          bathroom_count,
		          bedroom_count,
		          room_count,
		          MAX(bathroom_count) OVER () AS maxbathroom_count
		   FROM apartments)
		ORDER BY min_bathroom_count_

	Empty DataFrame
	Columns: [min_bathroom_count_, max_bathroom_count_]
	Index: []
Wrong output for fuzzied solution in instance spider/apartment_rentals/0034 (1469)
	EXPECTED OUTPUT ====

		SELECT apt_type_code
		FROM Apartments
		GROUP BY apt_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  apt_type_code
	0          Flat
	ACTUAL OUTPUT ====

		
		SELECT apt_type_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT apt_type_code,
		                bathroom_count,
		                COUNT() AS n
		         FROM apartments
		         GROUP BY apt_type_code,
		                  bathroom_count)
		      ORDER BY n DESC)
		   LIMIT 1)

	  apt_type_code
	0    4PxFlatA3B
Wrong output for base solution in instance spider/apartment_rentals/0024 (1470)
	EXPECTED OUTPUT ====

	  sum_t2_room_count_
	0                 15
	ACTUAL OUTPUT ====

		SELECT sum(T2.room_count)
		FROM Apartment_Facilities AS T1
		JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id
		WHERE T1.facility_code = "Gym"

	   sum(t2.room_count)
	0                  15
Wrong output for ground truth in instance spider/apartment_rentals/0024 (1470)
Error while executing solution for instance spider/apartment_rentals/0021 (1471)

The column label 'booking_start_date' is not unique.
Error while checking ground truth in instance spider/apartment_rentals/0021 (1471)
Error while executing solution for instance spider/apartment_rentals/0014 (1474)

The column label 'booking_start_date' is not unique.
Error while checking ground truth in instance spider/apartment_rentals/0014 (1474)
Wrong output for base solution in instance spider/apartment_rentals/0025 (1476)
	EXPECTED OUTPUT ====

	  sum_t2_room_count_
	0                 29
	ACTUAL OUTPUT ====

		SELECT sum(T2.room_count)
		FROM Apartment_Buildings AS T1
		JOIN Apartments AS T2 ON T1.building_id = T2.building_id
		WHERE T1.building_short_name = "Columbus Square"

	   sum(t2.room_count)
	0                  29
Wrong output for ground truth in instance spider/apartment_rentals/0025 (1476)
No solution for instance spider/apartment_rentals/0010 (1479)
Wrong output for fuzzied solution in instance spider/apartment_rentals/0040 (1480)
	EXPECTED OUTPUT ====

		SELECT T1.apt_number
		FROM Apartments AS T1
		JOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id
		WHERE T2.available_yn = 0 INTERSECT
		  SELECT T1.apt_number
		  FROM Apartments AS T1
		  JOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id WHERE T2.available_yn = 1

	        apt_number
	0   6p3Apt. 187Bvh
	1   8hR31Suite 634
	2          Apt. 18
	3         Apt. 187
	4         Apt. 837
	5         GB9JjQAu
	6        LkihrmsuG
	7        Suite 634
	8   Suite 634ekSMf
	9        m6jJ3SLN 
	10         pt. 187
	11         pt. 837
	12  zJ Apt. 837I v
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT apt_number
		FROM
		  (SELECT LHS.apt_id AS apt_id,
		          LHS.building_id AS building_id,
		          LHS.apt_type_code AS apt_type_code,
		          LHS.apt_number AS apt_number,
		          LHS.bathroom_count AS bathroom_count,
		          LHS.bedroom_count AS bedroom_count,
		          LHS.room_count AS room_count,
		          LHS.apt_booking_id AS apt_booking_id,
		          LHS.status_date AS status_date,
		          LHS.available_yn AS available_yn
		   FROM
		     (SELECT LHS.apt_id AS apt_id,
		             LHS.building_id AS building_id,
		             LHS.apt_type_code AS apt_type_code,
		             LHS.apt_number AS apt_number,
		             LHS.bathroom_count AS bathroom_count,
		             LHS.bedroom_count AS bedroom_count,
		             LHS.room_count AS room_count,
		             RHS.apt_booking_id AS apt_booking_id,
		             RHS.status_date AS status_date,
		             RHS.available_yn AS available_yn
		      FROM apartments AS LHS
		      INNER JOIN view_unit_status AS RHS ON (LHS.apt_id = RHS.apt_id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM view_unit_status
		      WHERE (available_yn != 1)) AS RHS ON (LHS.apt_id = RHS.apt_id
		                                            AND LHS.apt_booking_id = RHS.apt_booking_id
		                                            AND LHS.status_date = RHS.status_date
		                                            AND LHS.available_yn = RHS.available_yn))
		ORDER BY apt_number

	        apt_number
	0    6 0WHApt. 187
	1   6p3Apt. 187Bvh
	2   8hR31Suite 634
	3          Apt. 18
	4         Apt. 187
	5         Apt. 837
	6    Djx)TApt. 187
	7         GB9JjQAu
	8        LkihrmsuG
	9        Suite 634
	10  Suite 634ekSMf
	11       m6jJ3SLN 
	12         pt. 187
	13         pt. 837
	14  uQokkSuite 634
	15  zJ Apt. 837I v
Wrong output for fuzzied solution in instance spider/apartment_rentals/0028 (1481)
	EXPECTED OUTPUT ====

		SELECT booking_status_code,
		       COUNT(*)
		FROM Apartment_Bookings
		GROUP BY booking_status_code

	   booking_status_code  count(*)
	0            )qUlErUlc         1
	1           33ZDTyUsSB         1
	2             Confirme         1
	3            Confirmed        10
	4       Confirmed2tdPy         1
	5    DuxProvisionalktQ         1
	6          F(bF2CA3jjc         1
	7            HlDHPHRlI         1
	8    Iw Provisionalp67         1
	9       P0QIdConfirmed         1
	10          Provisiona         1
	11         Provisional         7
	12    Provisional7E291         1
	13    ProvisionalfYYKn         1
	14         PukK1nUYQuS         1
	15    SA4 bProvisional         1
	16          ULI5ydzSc1         1
	17      f9N30JBQV5(nFf         1
	18     mqiConfirmed(()         1
	19            onfirmed         2
	20     plHgb6mqjlWNv(Z         1
	21          rovisional         2
	ACTUAL OUTPUT ====

		
		SELECT booking_status_code,
		       n AS count___
		FROM
		  (SELECT booking_status_code,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.apt_booking_id AS apt_booking_id,
		             LHS.apt_id AS apt_id,
		             LHS.guest_id AS guest_id,
		             LHS.booking_status_code AS booking_status_code,
		             LHS.booking_start_date AS booking_start_date,
		             LHS.booking_end_date AS booking_end_date,
		             RHS.apt_booking_id AS apt_booking_id_other,
		             RHS.apt_id AS apt_id_other,
		             RHS.booking_status_code AS booking_status_code_other,
		             RHS.booking_start_date AS booking_start_date_other
		      FROM apartment_bookings AS LHS
		      INNER JOIN apartment_bookings AS RHS ON (LHS.booking_end_date = RHS.booking_end_date
		                                                  AND LHS.guest_id = RHS.guest_id))
		   GROUP BY booking_status_code)
		ORDER BY booking_status_code

	   booking_status_code  count___
	0            )qUlErUlc         1
	1           33ZDTyUsSB         1
	2             Confirme         1
	3            Confirmed        10
	4       Confirmed2tdPy         1
	5    DuxProvisionalktQ         1
	6          F(bF2CA3jjc         1
	7            HlDHPHRlI         1
	8    Iw Provisionalp67         1
	9       P0QIdConfirmed         1
	10          Provisiona         1
	11         Provisional         8
	12    Provisional7E291         1
	13    ProvisionalfYYKn         1
	14         PukK1nUYQuS         1
	15    SA4 bProvisional         1
	16          ULI5ydzSc1         1
	17      f9N30JBQV5(nFf         2
	18     mqiConfirmed(()         1
	19            onfirmed         2
	20     plHgb6mqjlWNv(Z         1
	21          rovisional         2
Wrong output for fuzzied solution in instance spider/party_people/0017 (1484)
	EXPECTED OUTPUT ====

		SELECT T2.party_name,
		       count(*)
		FROM party_events AS T1
		JOIN party AS T2 ON T1.party_id = T2.party_id
		GROUP BY T1.party_id

	                     party_name  count(*)
	0                                       1
	1                                       1
	2                                       1
	3                        2wm1yL         1
	4                             3         1
	5                        3DIKzb         1
	6                             4         1
	7        Convention Union Party         1
	8        Convention Union Party         1
	9   Convention Union Party9EVAo         1
	10                       E9)EU3         1
	11               Progress Party         1
	12          Sinefine Party 0dzW         1
	13                       YMqER3         1
	14                            2         2
	15                            3         2
	16       Convention Union Party         2
	17          GtXxVSinefine Party         2
	18               Progress Party         2
	19               Sinefine Party         2
	20              c6NjZJHA64D4a1L         2
	21                      Hu63XNL         3
	22               Sinefine Party         3
	23                                      4
	24                      ZwJ45XR         4
	ACTUAL OUTPUT ====

		
		SELECT party_name,
		       n AS count___
		FROM
		  (SELECT minister,
		          party_name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.party_id AS party_id,
		             LHS.minister AS minister,
		             LHS.took_office AS took_office,
		             LHS.left_office AS left_office,
		             LHS.region_id AS region_id,
		             LHS.party_name AS party_name,
		             RHS.event_id AS event_id,
		             RHS.event_name AS event_name,
		             RHS.member_in_charge_id AS member_in_charge_id
		      FROM party AS LHS
		      INNER JOIN party_events AS RHS ON (LHS.party_id = RHS.party_id))
		   GROUP BY minister,
		            party_name)
		ORDER BY party_name

	                     party_name  count___
	0                                       1
	1                                       1
	2                        2wm1yL         1
	3                             3         1
	4                        3DIKzb         1
	5                             4         1
	6   Convention Union Party9EVAo         1
	7                        E9)EU3         1
	8                Progress Party         1
	9           Sinefine Party 0dzW         1
	10                       YMqER3         1
	11                            2         2
	12                            3         2
	13       Convention Union Party         2
	14       Convention Union Party         2
	15          GtXxVSinefine Party         2
	16               Progress Party         2
	17               Sinefine Party         2
	18              c6NjZJHA64D4a1L         2
	19                      Hu63XNL         3
	20               Sinefine Party         3
	21                      ZwJ45XR         4
	22                                      5
Wrong output for fuzzied solution in instance spider/party_people/0008 (1485)
	EXPECTED OUTPUT ====

		SELECT minister
		FROM party
		ORDER BY left_office DESC
		LIMIT 1

	                  minister
	0  Ebenezer Ako-Adjei (MP)
	ACTUAL OUTPUT ====

		
		SELECT minister
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM party
		      ORDER BY party_name)
		   LIMIT 1)

	                 minister
	0  Ebenezer Ako-Adjei (MP
Error while executing solution for instance spider/party_people/0022 (1487)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT `n_distinct` AS `count___`
FROM
  (SELECT `region_id`,
          `region_name`,
          `date`,
          `label`,
          `format`,
          `catalogue`,
          `party_id`,
          `minister`,
          `took_office`,
          `left_office`,
          `party_name`,
          `event_id`,
          `event_name`,
          `member_in_charge_id`,
          COUNT(DISTINCT `region_name`) OVER () AS `n_distinct`
   FROM
     (SELECT `LHS`.`region_id` AS `region_id`,
             `LHS`.`region_name` AS `region_name`,
             `LHS`.`date` AS `date`,
             `LHS`.`label` AS `label`,
             `LHS`.`format` AS `format`,
             `LHS`.`catalogue` AS `catalogue`,
             `LHS`.`party_id` AS `party_id`,
             `LHS`.`minister` AS `minister`,
             `LHS`.`took_office` AS `took_office`,
             `LHS`.`left_office` AS `left_office`,
             `LHS`.`party_name` AS `party_name`,
             `RHS`.`event_id` AS `event_id`,
             `RHS`.`event_name` AS `event_name`,
             `RHS`.`member_in_charge_id` AS `member_in_charge_id`
      FROM
        (SELECT `LHS`.`region_id` AS `region_id`,
                `LHS`.`region_name` AS `region_name`,
                `LHS`.`date` AS `date`,
                `LHS`.`label` AS `label`,
                `LHS`.`format` AS `format`,
                `LHS`.`catalogue` AS `catalogue`,
                `RHS`.`party_id` AS `party_id`,
                `RHS`.`minister` AS `minister`,
                `RHS`.`took_office` AS `took_office`,
                `RHS`.`left_office` AS `left_office`,
                `RHS`.`party_name` AS `party_name`
         FROM `region` AS `LHS`
         INNER JOIN `party` AS `RHS` ON (`LHS`.`region_id` = `RHS`.`region_id`)) AS `LHS`
      INNER JOIN `party_events` AS `RHS` ON (`LHS`.`party_id` = `RHS`.`party_id`)))
WHERE (`region_name` != 'United Kingdom'
       AND `event_name` = 'Annaual Meeting')
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/party_people/0013 (1488)
	EXPECTED OUTPUT ====

		SELECT party_name
		FROM party
		WHERE party_id NOT IN
		    (SELECT party_id
		     FROM Member)

	                 party_name
	0                         3
	1  Convention Peoples Party
	2            Progress Party
	ACTUAL OUTPUT ====

		
		SELECT party_name
		FROM
		  (SELECT *
		   FROM party AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT LHS.member_id AS member_id,
		                     LHS.member_name AS member_name,
		                     LHS.party_id AS party_id,
		                     LHS.in_office AS in_office,
		                     RHS.party_id AS party_id_other,
		                     RHS.minister AS minister,
		                     RHS.took_office AS took_office,
		                     RHS.left_office AS left_office,
		                     RHS.region_id AS region_id,
		                     RHS.party_name AS party_name
		              FROM member AS LHS
		              CROSS JOIN party AS RHS)
		           WHERE (party_id >= party_id_other)) AS RHS
		        WHERE (LHS.party_name = RHS.party_name
		               AND LHS.took_office = RHS.took_office) ))
		ORDER BY party_name

	Empty DataFrame
	Columns: [party_name]
	Index: []
No solution for instance spider/party_people/0004 (1490)
No solution for instance spider/party_people/0012 (1491)
No solution for instance spider/party_people/0015 (1492)
No solution for instance spider/party_people/0005 (1493)
Wrong output for fuzzied solution in instance spider/party_people/0018 (1495)
	EXPECTED OUTPUT ====

		SELECT member_name
		FROM member
		EXCEPT
		SELECT T1.member_name
		FROM member AS T1
		JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id

	            member_name
	0  3lye3Hon Kim Beazley
	1        Hon Kim Beazle
	ACTUAL OUTPUT ====

		
		SELECT member_name
		FROM
		  (SELECT *
		   FROM member AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT member_id,
		                  member_name,
		                  party_id,
		                  in_office,
		                  event_id,
		                  event_name,
		                  party_id_other,
		                  member_id AS member_in_charge_id
		           FROM
		             (SELECT LHS.member_id AS member_id,
		                     LHS.member_name AS member_name,
		                     LHS.party_id AS party_id,
		                     LHS.in_office AS in_office,
		                     RHS.event_id AS event_id,
		                     RHS.event_name AS event_name,
		                     RHS.party_id AS party_id_other
		              FROM member AS LHS
		              INNER JOIN party_events AS RHS ON (LHS.member_id = RHS.member_in_charge_id))) AS RHS
		        WHERE (LHS.member_id = RHS.member_id
		               AND LHS.party_id = RHS.party_id) ))
		ORDER BY member_name

	            member_name
	0  3lye3Hon Kim Beazley
	1        Hon Dick Adams
	2        Hon Dick Adams
	3        Hon Kim Beazle
Wrong output for fuzzied solution in instance spider/party_people/0020 (1496)
	EXPECTED OUTPUT ====

		SELECT T1.member_name
		FROM member AS T1
		JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id
		GROUP BY T2.member_in_charge_id
		ORDER BY count(*) DESC
		LIMIT 1

	       member_name
	0  Hon Tony Abbott
	ACTUAL OUTPUT ====

		
		SELECT member_name
		FROM
		  (SELECT member_id,
		          member_name,
		          n,
		          event_name,
		          party_id,
		          member_id AS member_in_charge_id
		   FROM
		     (SELECT LHS.member_id AS member_id,
		             LHS.member_name AS member_name,
		             LHS.n AS n,
		             RHS.event_name AS event_name,
		             RHS.party_id AS party_id
		      FROM
		        (SELECT member_id,
		                member_name,
		                COUNT() AS n
		         FROM member
		         GROUP BY member_id,
		                  member_name) AS LHS
		      INNER JOIN party_events AS RHS ON (LHS.member_id = RHS.member_in_charge_id
		                                            AND LHS.n = RHS.event_id)))
		ORDER BY member_name

	            member_name
	0  lFi04Hon Tony Abbott
Wrong output for fuzzied solution in instance spider/party_people/0019 (1497)
	EXPECTED OUTPUT ====

		SELECT T2.party_name
		FROM party_events AS T1
		JOIN party AS T2 ON T1.party_id = T2.party_id
		GROUP BY T1.party_id
		HAVING count(*) >= 2

	                 party_name
	0                          
	1                    26J 6Q
	2                         3
	3  Convention Peoples Party
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT party_name
		FROM
		  (SELECT member_in_charge_id,
		          party_name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.party_id AS party_id,
		             LHS.minister AS minister,
		             LHS.took_office AS took_office,
		             LHS.left_office AS left_office,
		             LHS.region_id AS region_id,
		             LHS.party_name AS party_name,
		             RHS.event_id AS event_id,
		             RHS.event_name AS event_name,
		             RHS.member_in_charge_id AS member_in_charge_id
		      FROM party AS LHS
		      INNER JOIN party_events AS RHS ON (LHS.party_id = RHS.party_id))
		   GROUP BY member_in_charge_id,
		            party_name)
		WHERE (n <= 2)
		ORDER BY party_name

	                 party_name
	0                          
	1                    26J 6Q
	2                         3
	3  Convention Peoples Party
	4                   Nv)2NAK
	5   onvention Peoples Party
No solution for instance spider/party_people/0007 (1498)
No solution for instance spider/party_people/0021 (1499)
No solution for instance spider/party_people/0009 (1501)
Wrong output for fuzzied solution in instance spider/party_people/0011 (1502)
	EXPECTED OUTPUT ====

		SELECT T2.party_name
		FROM Member AS T1
		JOIN party AS T2 ON T1.party_id = T2.party_id
		GROUP BY T1.party_id
		ORDER BY count(*) DESC
		LIMIT 1

	  party_name
	0           
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT party_name
		FROM
		  (SELECT LHS.party_name AS party_name,
		          LHS.took_office AS took_office,
		          LHS.n AS n,
		          RHS.member_id AS member_id,
		          RHS.member_name AS member_name,
		          RHS.in_office AS in_office
		   FROM
		     (SELECT party_name,
		             took_office,
		             COUNT() AS n
		      FROM party
		      GROUP BY party_name,
		               took_office) AS LHS
		   INNER JOIN member AS RHS ON (LHS.party_name = RHS.party_id))
		ORDER BY party_name

	  party_name
	0          3
No solution for instance spider/party_people/0010 (1503)
Wrong output for fuzzied solution in instance spider/county_public_safety/0008 (1505)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM county_public_safety
		ORDER BY Population DESC
		LIMIT 1

	             name
	0  Campbell River
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM county_public_safety
		      ORDER BY police_officers DESC)
		   LIMIT 1)

	              name
	0  Central Saanich
No solution for instance spider/county_public_safety/0013 (1507)
No solution for instance spider/county_public_safety/0012 (1510)
Wrong output for fuzzied solution in instance spider/county_public_safety/0005 (1512)
	EXPECTED OUTPUT ====

		SELECT Crime_rate
		FROM county_public_safety
		ORDER BY Police_officers ASC

	   crime_rate
	0      122.99
	1      123.01
	2      149.98
	3      149.98
	4      150.01
	5      173.99
	ACTUAL OUTPUT ====

		
		SELECT crime_rate
		FROM
		  (SELECT crime_rate
		   FROM county_public_safety INTERSECT SELECT crime_rate
		   FROM county_public_safety)
		ORDER BY crime_rate

	   crime_rate
	0      122.99
	1      123.01
	2      149.98
	3      150.01
	4      173.99
Wrong output for fuzzied solution in instance spider/county_public_safety/0016 (1513)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM county_public_safety
		GROUP BY LOCATION
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  location
	0     East
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LOCATION,
		                residents_per_officer,
		                COUNT() AS n
		         FROM county_public_safety
		         GROUP BY LOCATION,
		                  residents_per_officer)
		      ORDER BY residents_per_officer DESC)
		   LIMIT 1)

	  location
	0      ast
Wrong output for fuzzied solution in instance spider/county_public_safety/0018 (1514)
	EXPECTED OUTPUT ====

		SELECT Police_force
		FROM county_public_safety
		WHERE LOCATION = "East" INTERSECT
		  SELECT Police_force
		  FROM county_public_safety WHERE LOCATION = "West"

	  police_force
	0         RCMP
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `police_force`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `county_public_safety`
		      WHERE (`location` != 'East'
		             OR `location` = 'West')) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM county_public_safety AS RHS
		        WHERE (LHS.county_id = RHS.county_id
		               AND LHS.name = RHS.name
		               AND LHS.population = RHS.population
		               AND LHS.police_officers = RHS.police_officers
		               AND LHS.residents_per_officer = RHS.residents_per_officer
		               AND LHS.case_burden = RHS.case_burden
		               AND LHS.crime_rate = RHS.crime_rate
		               AND LHS.police_force = RHS.police_force
		               AND LHS.location = RHS.location) ))
		ORDER BY police_force

	                  police_force
	0                          CMP
	1                         RCMP
	2  bbotsford Police Department
Wrong output for fuzzied solution in instance spider/county_public_safety/0020 (1515)
	EXPECTED OUTPUT ====

		SELECT Case_burden
		FROM county_public_safety
		ORDER BY Population DESC

	   case_burden
	0          137
	1          137
	2          138
	3          138
	4          140
	5          140
	ACTUAL OUTPUT ====

		
		SELECT case_burden
		FROM
		  (SELECT case_burden
		   FROM county_public_safety INTERSECT SELECT case_burden
		   FROM county_public_safety)
		ORDER BY case_burden

	   case_burden
	0          137
	1          138
	2          140
Wrong output for fuzzied solution in instance spider/county_public_safety/0019 (1516)
	EXPECTED OUTPUT ====

		SELECT name
		FROM city
		WHERE county_id IN
		    (SELECT county_id
		     FROM county_public_safety
		     WHERE Crime_rate < 100)

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM city AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM county_public_safety
		           WHERE (crime_rate > 100.0
		                  AND crime_rate != county_id)) AS RHS
		        WHERE (LHS.county_id = RHS.county_id) ))
		ORDER BY name

	              name
	0        Cabo Rojo
	1     M9luIyiCIHmS
	2    TT20Os hIsfBx
	3            ataño
	4  kvWCabo RojoDvc
Wrong output for fuzzied solution in instance spider/county_public_safety/0014 (1519)
	EXPECTED OUTPUT ====

		SELECT T2.Crime_rate
		FROM city AS T1
		JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID
		WHERE T1.White > 90

	   crime_rate
	0      150.01
	ACTUAL OUTPUT ====

		
		SELECT crime_rate
		FROM
		  (SELECT LHS.city_id AS city_id,
		          LHS.county_id AS county_id,
		          LHS.name AS name,
		          LHS.white AS white,
		          LHS.black AS black,
		          LHS.amerindian AS amerindian,
		          LHS.asian AS asian,
		          LHS.multiracial AS multiracial,
		          LHS.hispanic AS hispanic,
		          RHS.name AS name_other,
		          RHS.population AS population,
		          RHS.police_officers AS police_officers,
		          RHS.residents_per_officer AS residents_per_officer,
		          RHS.case_burden AS case_burden,
		          RHS.crime_rate AS crime_rate,
		          RHS.police_force AS police_force,
		          RHS.location AS LOCATION
		   FROM
		     (SELECT *
		      FROM city
		      WHERE (white >= 90.0)) AS LHS
		   INNER JOIN county_public_safety AS RHS ON (LHS.county_id = RHS.county_id))
		ORDER BY crime_rate

	   crime_rate
	0      123.00
	1      150.01
	2      174.01
Error while executing solution for instance spider/county_public_safety/0010 (1522)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/county_public_safety/0010 (1522)
Wrong output for fuzzied solution in instance spider/device/0013 (1527)
	EXPECTED OUTPUT ====

		SELECT T2.Shop_Name
		FROM stock AS T1
		JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID
		GROUP BY T1.Shop_ID
		ORDER BY SUM(T1.quantity) DESC
		LIMIT 1

	     shop_name
	0  Pentre stor
	ACTUAL OUTPUT ====

		
		SELECT shop_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.shop_id AS shop_id,
		                LHS.shop_name AS shop_name,
		                LHS.location AS LOCATION,
		                LHS.open_date AS open_date,
		                LHS.open_year AS open_year,
		                RHS.device_id AS device_id,
		                RHS.quantity AS quantity,
		                RHS.sumquantity AS sumquantity
		         FROM shop AS LHS
		         INNER JOIN
		           (SELECT shop_id,
		                   device_id,
		                   quantity,
		                   SUM(quantity) OVER () AS sumquantity
		            FROM stock) AS RHS ON (LHS.shop_id = RHS.shop_id))
		      ORDER BY quantity DESC)
		   LIMIT 1)

	  shop_name
	0       ATn
Wrong output for fuzzied solution in instance spider/device/0012 (1530)
	EXPECTED OUTPUT ====

		SELECT T2.Shop_Name
		FROM stock AS T1
		JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID
		GROUP BY T1.Shop_ID
		ORDER BY COUNT(*) DESC
		LIMIT 1

	      shop_name
	0  Naval repair
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT shop_name
		FROM
		  (SELECT LHS.shop_id AS shop_id,
		          LHS.shop_name AS shop_name,
		          LHS.location AS LOCATION,
		          LHS.open_date AS open_date,
		          LHS.open_year AS open_year,
		          RHS.device_id AS device_id,
		          RHS.quantity AS quantity
		   FROM shop AS LHS
		   INNER JOIN
		     (SELECT device_id,
		             quantity,
		             COUNT() AS n
		      FROM stock
		      GROUP BY device_id,
		               quantity) AS RHS ON (LHS.shop_id = RHS.n))
		ORDER BY shop_name

	      shop_name
	0  Dinas Device
	1   XIfByMWMcIy
Wrong output for fuzzied solution in instance spider/device/0016 (1533)
	EXPECTED OUTPUT ====

		SELECT Software_Platform
		FROM device
		GROUP BY Software_Platform
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  software_platform
	0            ndroid
	ACTUAL OUTPUT ====

		
		SELECT software_platform
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT carrier,
		                software_platform,
		                COUNT() AS n
		         FROM device
		         GROUP BY carrier,
		                  software_platform)
		      ORDER BY n)
		   LIMIT 1)

	  software_platform
	0          gNjjNiOS
Wrong output for fuzzied solution in instance spider/device/0020 (1534)
	EXPECTED OUTPUT ====

		SELECT T2.Carrier
		FROM stock AS T1
		JOIN device AS T2 ON T1.Device_ID = T2.Device_ID
		GROUP BY T1.Device_ID
		HAVING COUNT(*) > 1

	                carrier
	0  AziTelus MobilitysEE
	1           Ii6KbI)cZom
	2              Iusacell
	3              Iusacell
	4          MTS Mobility
	5          MTS Mobility
	6        Telus Mobility
	7   Telus MobilityBl)T2
	8         elus Mobility
	9    hSpFp2tcUqtKdi2l7)
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT carrier
		FROM
		  (SELECT device_id,
		          device,
		          carrier,
		          package_version,
		          applications,
		          software_platform,
		          shop_id,
		          quantity,
		          COUNT(*) OVER () AS n
		   FROM
		     (SELECT LHS.device_id AS device_id,
		             LHS.device AS device,
		             LHS.carrier AS carrier,
		             LHS.package_version AS package_version,
		             LHS.applications AS applications,
		             LHS.software_platform AS software_platform,
		             RHS.shop_id AS shop_id,
		             RHS.quantity AS quantity
		      FROM device AS LHS
		      INNER JOIN stock AS RHS ON (LHS.device_id = RHS.device_id)))
		WHERE (n != 1)
		ORDER BY carrier

	                carrier
	0  AziTelus MobilitysEE
	1           Ii6KbI)cZom
	2              Iusacell
	3          MTS Mobility
	4        Telus Mobility
	5   Telus MobilityBl)T2
	6         elus Mobility
	7    hSpFp2tcUqtKdi2l7)
Wrong output for fuzzied solution in instance spider/device/0001 (1537)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM device

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT carrier,
		          software_platform,
		          COUNT() AS n
		   FROM device
		   GROUP BY carrier,
		            software_platform)
		ORDER BY count___

	   count___
	0         6
Wrong output for fuzzied solution in instance spider/device/0009 (1539)
	EXPECTED OUTPUT ====

		SELECT Shop_Name
		FROM shop
		ORDER BY Open_Year DESC
		LIMIT 1

	               shop_name
	0  vDETynewydd repairK6X
	ACTUAL OUTPUT ====

		
		SELECT shop_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM shop
		      ORDER BY LOCATION DESC)
		   LIMIT 1)

	               shop_name
	0  oBkTynewydd repairfba
No solution for instance spider/university_basketball/0017 (1543)
No solution for instance spider/university_basketball/0008 (1544)
Error while checking ground truth in instance spider/university_basketball/0022 (1546)

cannot safely cast non-equivalent float64 to int32
No solution for instance spider/university_basketball/0006 (1548)
Wrong output for fuzzied solution in instance spider/university_basketball/0004 (1549)
	EXPECTED OUTPUT ====

		SELECT founded
		FROM university
		WHERE affiliation != 'Public'
		ORDER BY founded DESC
		LIMIT 1

	   founded
	0  1957.02
	ACTUAL OUTPUT ====

		
		SELECT `founded`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM `university`
		         WHERE (`affiliation` != 'Public'))
		      ORDER BY affiliation)
		   LIMIT 1)

	   founded
	0   1957.0
Wrong output for fuzzied solution in instance spider/university_basketball/0015 (1551)
	EXPECTED OUTPUT ====

		SELECT school
		FROM university
		WHERE founded > 1850
		  OR affiliation = 'Public'

	                         school
	0        Lebanon Valley College
	1        Lebanon Valley College
	2        Lebanon Valley College
	3        Stony Brook University
	4        Stony Brook University
	5        Stony Brook University
	6  q)kStony Brook UniversityYHY
	ACTUAL OUTPUT ====

		
		SELECT `school`
		FROM
		  (SELECT `school`
		   FROM `university` INTERSECT SELECT `school`
		   FROM `university`
		   WHERE (`affiliation` = 'Public'
		          OR founded >= 1850.0))
		ORDER BY school

	                         school
	0        Lebanon Valley College
	1        Stony Brook University
	2  q)kStony Brook UniversityYHY
No solution for instance spider/university_basketball/0005 (1552)
Error while executing solution for instance spider/university_basketball/0016 (1553)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT affiliation) OVER () AS count_distinct_affiliation_
FROM
  (SELECT affiliation,
          founded,
          COUNT() AS n
   FROM university
   GROUP BY affiliation,
            founded)
ORDER BY count_distinct_affiliation_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/university_basketball/0018 (1554)
Wrong output for fuzzied solution in instance spider/university_basketball/0020 (1555)
	EXPECTED OUTPUT ====

		SELECT sum(Enrollment),
		       affiliation
		FROM university
		WHERE founded > 1850
		GROUP BY affiliation

	    sum(enrollment)   affiliation
	0      1.906702e+04  2nnPublicBWE
	1      2.399698e+04  8MiPublicODQ
	2      2.399700e+04       A3E2)We
	3      4.199980e+03         Publi
	4      4.026593e+09        Public
	5      2.099980e+03   Public0sfFt
	6      2.399700e+04   Public69i12
	7      2.100000e+03   Public9Q3M6
	8      2.100020e+03   PublicQwxR3
	9      2.399702e+04   RABdIPublic
	10     2.100000e+03   dJeMSeRvYys
	ACTUAL OUTPUT ====

		
		SELECT sumenrollment AS sum_enrollment_,
		       affiliation
		FROM
		  (SELECT affiliation,
		          SUM(enrollment) AS sumenrollment
		   FROM
		     (SELECT *
		      FROM university
		      WHERE (founded > 1850.0
		             AND enrollment > 1850.0))
		   GROUP BY affiliation)
		ORDER BY sum_enrollment_

	    sum_enrollment_   affiliation
	0      1.906702e+04  2nnPublicBWE
	1      2.399698e+04  8MiPublicODQ
	2      2.399700e+04       A3E2)We
	3      4.199980e+03         Publi
	4      5.353178e+09        Public
	5      2.099980e+03   Public0sfFt
	6      2.399700e+04   Public69i12
	7      2.100000e+03   Public9Q3M6
	8      2.100020e+03   PublicQwxR3
	9      2.399702e+04   RABdIPublic
	10     2.100000e+03   dJeMSeRvYys
No solution for instance spider/university_basketball/0019 (1556)
No solution for instance spider/university_basketball/0007 (1557)
No solution for instance spider/university_basketball/0023 (1559)
No solution for instance spider/university_basketball/0014 (1561)
No solution for instance spider/university_basketball/0009 (1562)
Wrong output for fuzzied solution in instance spider/university_basketball/0011 (1563)
	EXPECTED OUTPUT ====

		SELECT enrollment,
		       primary_conference
		FROM university
		ORDER BY founded
		LIMIT 1

	   enrollment               primary_conference
	0     56868.0  America East Conference ( D-I )
	ACTUAL OUTPUT ====

		
		SELECT enrollment,
		       primary_conference
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM university
		      ORDER BY affiliation DESC)
		   LIMIT 1)

	   enrollment                     primary_conference
	0      2100.0  MAC Commonwealth Conference ( D-III )
Wrong output for fuzzied solution in instance spider/university_basketball/0010 (1564)
	EXPECTED OUTPUT ====

		SELECT avg(enrollment)
		FROM university
		WHERE founded < 1850

	   avg(enrollment)
	0     2.043909e+09
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(enrollment) OVER () AS avg_enrollment_
		FROM university
		WHERE (founded < 1850.0
		       OR enrollment < founded)
		ORDER BY avg_enrollment_

	   avg_enrollment_
	0     1.203166e+09
Wrong output for base solution in instance spider/wine_1/0033 (1565)
	EXPECTED OUTPUT ====

	             county
	0           Alameda
	1            Amador
	2            Amador
	3         Calaveras
	4              Lake
	5              Lake
	6         Mendocino
	7         Mendocino
	8          Monterey
	9          Monterey
	10             Napa
	11             Napa
	12             Napa
	13             Napa
	14             Napa
	15             Napa
	16       San Benito
	17      San Joaquin
	18  San Luis Obispo
	19  San Luis Obispo
	20  San Luis Obispo
	21    Santa Barbara
	22           Solano
	23           Sonoma
	24           Sonoma
	25           Sonoma
	26             Yolo
	27              NaN
	28              NaN
	29              NaN
	30              NaN
	31              NaN
	32              NaN
	33              NaN
	ACTUAL OUTPUT ====

		SELECT T1.County
		FROM APPELLATIONS AS T1
		JOIN WINE AS T2 ON T1.Appelation = T2.Appelation
		GROUP BY T2.Appelation
		HAVING count(*) <= 3

	             county
	0           Alameda
	1            Amador
	2            Amador
	3         Calaveras
	4              Lake
	5              Lake
	6         Mendocino
	7         Mendocino
	8          Monterey
	9          Monterey
	10              N/A
	11              N/A
	12              N/A
	13              N/A
	14              N/A
	15              N/A
	16              N/A
	17             Napa
	18             Napa
	19             Napa
	20             Napa
	21             Napa
	22             Napa
	23       San Benito
	24      San Joaquin
	25  San Luis Obispo
	26  San Luis Obispo
	27  San Luis Obispo
	28    Santa Barbara
	29           Solano
	30           Sonoma
	31           Sonoma
	32           Sonoma
	33             Yolo
Wrong output for ground truth in instance spider/wine_1/0033 (1565)
Wrong output for fuzzied solution in instance spider/wine_1/0036 (1568)
	EXPECTED OUTPUT ====

		SELECT T2.Winery
		FROM GRAPES AS T1
		JOIN WINE AS T2 ON T1.GRAPE = T2.GRAPE
		WHERE T1.Color = "White"
		GROUP BY T2.Winery
		ORDER BY count(*) DESC
		LIMIT 3

	                      winery
	0  Domaine de la Terre Rouge
	1                  Rosenblum
	2                     albott
	ACTUAL OUTPUT ====

		
		SELECT `winery`
		FROM
		  (SELECT `LHS`.`grape` AS `grape`,
		          `LHS`.`winery` AS `winery`,
		          `LHS`.`n` AS `n`,
		          `RHS`.`id` AS `id`,
		          `RHS`.`color` AS `color`
		   FROM
		     (SELECT `grape`,
		             `winery`,
		             COUNT() AS `n`
		      FROM `wine`
		      GROUP BY `grape`,
		               `winery`) AS `LHS`
		   LEFT JOIN `grapes` AS `RHS` ON (`LHS`.`grape` = `RHS`.`grape`))
		WHERE (`color` = 'White'
		       AND n > 3)
		ORDER BY winery

	                      winery
	0  Domaine de la Terre Rouge
Wrong output for fuzzied solution in instance spider/wine_1/0039 (1571)
	EXPECTED OUTPUT ====

		SELECT Appelation
		FROM WINE
		WHERE YEAR > 2008
		EXCEPT
		SELECT Appelation
		FROM APPELLATIONS
		WHERE Area = "Central Coast"

	      appelation
	0     8KSLodi5YW
	1  Amador County
	2        Chalone
	3   ChaloneW Z1I
	4           Lodi
	5            odi
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `appelation`
		FROM
		  (SELECT `LHS`.`no` AS `no`,
		          `LHS`.`appelation` AS `appelation`,
		          `LHS`.`county` AS `county`,
		          `LHS`.`state` AS `state`,
		          `LHS`.`area` AS `area`,
		          `LHS`.`isava` AS `isava`,
		          `RHS`.`no` AS `no_other`,
		          `RHS`.`grape` AS `grape`,
		          `RHS`.`winery` AS `winery`,
		          `RHS`.`name` AS `name`,
		          `RHS`.`year` AS `year`,
		          `RHS`.`price` AS `price`,
		          `RHS`.`score` AS `score`,
		          `RHS`.`cases` AS `cases`,
		          `RHS`.`drink` AS `drink`
		   FROM `appellations` AS `LHS`
		   INNER JOIN `wine` AS `RHS` ON (`LHS`.`appelation` = `RHS`.`appelation`
		                                     AND `LHS`.`state` = `RHS`.`state`))
		WHERE (`area` != 'Central Coast'
		       AND YEAR > 2008)
		ORDER BY appelation

	     appelation
	0    8KSLodi5YW
	1       Chalone
	2  ChaloneW Z1I
	3          Lodi
No solution for instance spider/wine_1/0030 (1576)
Wrong output for fuzzied solution in instance spider/wine_1/0013 (1577)
	EXPECTED OUTPUT ====

		SELECT AVG(T2.Price)
		FROM APPELLATIONS AS T1
		JOIN WINE AS T2 ON T1.Appelation = T2.Appelation
		WHERE T1.County = "Sonoma"

	   avg(t2.price)
	0      35.384615
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(`price`) OVER () AS `avg_t2_price_`
		FROM
		  (SELECT *
		   FROM `wine` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `appellations`
		           WHERE (`county` != 'Sonoma')) AS RHS
		        WHERE (LHS.appelation = RHS.appelation
		               AND LHS.state = RHS.state) ))
		ORDER BY avg_t2_price_

	   avg_t2_price_
	0      33.363636
Wrong output for base solution in instance spider/wine_1/0006 (1578)
	EXPECTED OUTPUT ====

	                    area           county
	0             California              NaN
	1          Central Coast         Monterey
	2          Central Coast         Monterey
	3          Central Coast         Monterey
	4          Central Coast       San Benito
	5          Central Coast  San Luis Obispo
	6          Central Coast  San Luis Obispo
	7          Central Coast  San Luis Obispo
	8          Central Coast  San Luis Obispo
	9          Central Coast    Santa Barbara
	10         Central Coast    Santa Barbara
	11         Central Coast    Santa Barbara
	12         Central Coast    Santa Barbara
	13         Central Coast    Santa Barbara
	14         Central Coast              NaN
	15        Central Valley      San Joaquin
	16        Central Valley             Yolo
	17           North Coast             Lake
	18           North Coast             Lake
	19           North Coast             Lake
	20           North Coast        Mendocino
	21           North Coast        Mendocino
	22           North Coast             Napa
	23           North Coast             Napa
	24           North Coast             Napa
	25           North Coast             Napa
	26           North Coast             Napa
	27           North Coast             Napa
	28           North Coast             Napa
	29           North Coast             Napa
	30           North Coast             Napa
	31           North Coast             Napa
	32           North Coast             Napa
	33           North Coast           Solano
	34           North Coast           Sonoma
	35           North Coast           Sonoma
	36           North Coast           Sonoma
	37           North Coast           Sonoma
	38           North Coast           Sonoma
	39           North Coast           Sonoma
	40           North Coast           Sonoma
	41           North Coast           Sonoma
	42           North Coast           Sonoma
	43           North Coast           Sonoma
	44           North Coast           Sonoma
	45           North Coast              NaN
	46           North Coast              NaN
	47           North Coast              NaN
	48  Santa Cruz Mountains          Alameda
	49  Santa Cruz Mountains     Contra Costa
	50  Santa Cruz Mountains              NaN
	51      Sierra Foothills           Amador
	52      Sierra Foothills           Amador
	53      Sierra Foothills           Amador
	54      Sierra Foothills        Calaveras
	55      Sierra Foothills              NaN
	56                   NaN              NaN
	ACTUAL OUTPUT ====

		SELECT Area,
		       County
		FROM APPELLATIONS

	                    area           county
	0             California              N/A
	1          Central Coast         Monterey
	2          Central Coast         Monterey
	3          Central Coast         Monterey
	4          Central Coast              N/A
	5          Central Coast       San Benito
	6          Central Coast  San Luis Obispo
	7          Central Coast  San Luis Obispo
	8          Central Coast  San Luis Obispo
	9          Central Coast  San Luis Obispo
	10         Central Coast    Santa Barbara
	11         Central Coast    Santa Barbara
	12         Central Coast    Santa Barbara
	13         Central Coast    Santa Barbara
	14         Central Coast    Santa Barbara
	15        Central Valley      San Joaquin
	16        Central Valley             Yolo
	17                   N/A              N/A
	18           North Coast             Lake
	19           North Coast             Lake
	20           North Coast             Lake
	21           North Coast        Mendocino
	22           North Coast        Mendocino
	23           North Coast              N/A
	24           North Coast              N/A
	25           North Coast              N/A
	26           North Coast             Napa
	27           North Coast             Napa
	28           North Coast             Napa
	29           North Coast             Napa
	30           North Coast             Napa
	31           North Coast             Napa
	32           North Coast             Napa
	33           North Coast             Napa
	34           North Coast             Napa
	35           North Coast             Napa
	36           North Coast             Napa
	37           North Coast           Solano
	38           North Coast           Sonoma
	39           North Coast           Sonoma
	40           North Coast           Sonoma
	41           North Coast           Sonoma
	42           North Coast           Sonoma
	43           North Coast           Sonoma
	44           North Coast           Sonoma
	45           North Coast           Sonoma
	46           North Coast           Sonoma
	47           North Coast           Sonoma
	48           North Coast           Sonoma
	49  Santa Cruz Mountains          Alameda
	50  Santa Cruz Mountains     Contra Costa
	51  Santa Cruz Mountains              N/A
	52      Sierra Foothills           Amador
	53      Sierra Foothills           Amador
	54      Sierra Foothills           Amador
	55      Sierra Foothills        Calaveras
	56      Sierra Foothills              N/A
Wrong output for ground truth in instance spider/wine_1/0006 (1578)
Wrong output for fuzzied solution in instance spider/wine_1/0012 (1580)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM APPELLATIONS
		WHERE County = "Napa"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `county`,
		          `state`,
		          COUNT() AS `n`
		   FROM `appellations`
		   GROUP BY `county`,
		            `state`)
		WHERE (`county` = 'Napa')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/wine_1/0026 (1581)
	EXPECTED OUTPUT ====

		SELECT DISTINCT Name
		FROM WINE
		WHERE YEAR < 2000
		  OR YEAR > 2010

	                     name
	0  6(cKanzler Vineyard8ib
	1               Chardonna
	2              Chardonnay
	3         Chardonnayg2JVj
	4            FTsShirazjye
	5        Kanzler Vineyard
	6                  Shiraz
	7             Shiraz9Gxhn
	8         aB1B4Chardonnay
	9                   hiraz
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM wine
		WHERE (YEAR != 2000
		       AND YEAR >= 2010)
		ORDER BY name

	                      name
	0          1ogiiChardonnay
	1   6(cKanzler Vineyard8ib
	2    6u9VGKanzler Vineyard
	3                Chardonna
	4               Chardonnay
	5               Chardonnay
	6               Chardonnay
	7               Chardonnay
	8               Chardonnay
	9               Chardonnay
	10              Chardonnay
	11              Chardonnay
	12         Chardonnayg2JVj
	13            FTsShirazjye
	14        Kanzler Vineyard
	15        Kanzler Vineyard
	16        Kanzler Vineyard
	17        Kanzler Vineyard
	18        Kanzler Vineyard
	19        Kanzler Vineyard
	20   Kanzler Vineyardd9nyX
	21                  Shiraz
	22                  Shiraz
	23                  Shiraz
	24                  Shiraz
	25             Shiraz6XCg0
	26             Shiraz9Gxhn
	27         aB1B4Chardonnay
	28         anzler Vineyard
Wrong output for fuzzied solution in instance spider/wine_1/0015 (1582)
	EXPECTED OUTPUT ====

		SELECT max(T2.Price)
		FROM APPELLATIONS AS T1
		JOIN WINE AS T2 ON T1.Appelation = T2.Appelation
		WHERE T1.Area = "Central Coast"
		  AND T2.year < 2005

	   max(t2.price)
	0             46
	ACTUAL OUTPUT ====

		
		SELECT `price` AS `max_t2_price_`
		FROM
		  (SELECT `LHS`.`appelation` AS `appelation`,
		          `LHS`.`state` AS `state`,
		          `LHS`.`area` AS `area`,
		          `RHS`.`no` AS `no`,
		          `RHS`.`grape` AS `grape`,
		          `RHS`.`winery` AS `winery`,
		          `RHS`.`name` AS `name`,
		          `RHS`.`year` AS `year`,
		          `RHS`.`price` AS `price`,
		          `RHS`.`score` AS `score`,
		          `RHS`.`cases` AS `cases`,
		          `RHS`.`drink` AS `drink`
		   FROM
		     (SELECT `appelation`,
		             `state`,
		             MAX(`area`) AS `area`
		      FROM `appellations`
		      GROUP BY `appelation`,
		               `state`) AS `LHS`
		   LEFT JOIN `wine` AS `RHS` ON (`LHS`.`appelation` = `RHS`.`appelation`
		                                    AND `LHS`.`state` = `RHS`.`state`))
		WHERE (`area` = 'Central Coast'
		       AND YEAR < 2005)
		ORDER BY max_t2_price_

	   max_t2_price_
	0             26
	1             43
	2             46
Wrong output for fuzzied solution in instance spider/wine_1/0032 (1585)
	EXPECTED OUTPUT ====

		SELECT Winery
		FROM WINE
		GROUP BY Winery
		HAVING count(*) >= 4

	         winery
	0      Beringer
	1         Monte
	2        Montes
	3         Neyer
	4        Neyers
	5  Peter Franus
	6       eringer
	7         eyers
	8         ontes
	ACTUAL OUTPUT ====

		
		SELECT winery
		FROM
		  (SELECT state,
		          winery,
		          COUNT() AS n
		   FROM wine
		   GROUP BY state,
		            winery)
		WHERE (n >= 4)
		ORDER BY winery

	         winery
	0      Beringer
	1        Montes
	2         Neyer
	3        Neyers
	4  Peter Franus
	5  Peter Franus
	6         eyers
Wrong output for fuzzied solution in instance spider/wine_1/0041 (1587)
	EXPECTED OUTPUT ====

		SELECT T1.County
		FROM APPELLATIONS AS T1
		JOIN WINE AS T2 ON T1.Appelation = T2.Appelation
		WHERE T2.Score > 90
		GROUP BY T1.County
		ORDER BY count(*) DESC
		LIMIT 1

	   county
	0  Sonoma
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT county
		FROM
		  (SELECT LHS.no AS NO,
		          LHS.appelation AS appelation,
		          LHS.county AS county,
		          LHS.state AS state,
		          LHS.area AS area,
		          LHS.isava AS isava,
		          RHS.drink AS drink,
		          RHS.n AS n
		   FROM appellations AS LHS
		   INNER JOIN
		     (SELECT cases,
		             drink,
		             COUNT() AS n
		      FROM wine
		      WHERE (score > 90)
		      GROUP BY cases,
		               drink) AS RHS ON (LHS.no = RHS.cases))
		ORDER BY county

	Empty DataFrame
	Columns: [county]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for base solution in instance spider/wine_1/0020 (1589)
	EXPECTED OUTPUT ====

	   avg_price_  year
	0   30.953846  2009
	1   32.000000  2066
	2   39.707692  2008
	3   49.418478  2007
	4   52.821429  2005
	5   52.941176  2006
	6   60.714286  2004
	ACTUAL OUTPUT ====

		SELECT avg(Price),
		       YEAR
		FROM WINE
		GROUP BY YEAR

	   avg(price)  year
	0   60.714286  2004
	1   52.821429  2005
	2   52.941176  2006
	3   49.418478  2007
	4   39.707692  2008
	5   30.953846  2009
	6   32.000000  2066
Wrong output for ground truth in instance spider/wine_1/0020 (1589)
Wrong output for fuzzied solution in instance spider/wine_1/0007 (1591)
	EXPECTED OUTPUT ====

		SELECT Price
		FROM WINE
		WHERE YEAR < 2010

	     price
	0       22
	1       22
	2       22
	3       22
	4       22
	..     ...
	145     52
	146     52
	147     52
	148     52
	149     52
	
	[150 rows x 1 columns]
	ACTUAL OUTPUT ====

		
		SELECT price
		FROM
		  (SELECT *
		   FROM wine
		   WHERE (YEAR <= 2010))
		WHERE (YEAR <= 2010)
		ORDER BY price

	     price
	0       22
	1       22
	2       22
	3       22
	4       22
	..     ...
	163     52
	164     52
	165     52
	166     52
	167     52
	
	[168 rows x 1 columns]
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/wine_1/0024 (1593)
	EXPECTED OUTPUT ====

		SELECT T1.Area
		FROM APPELLATIONS AS T1
		JOIN WINE AS T2 ON T1.Appelation = T2.Appelation
		GROUP BY T2.Appelation
		HAVING T2.year < 2010
		ORDER BY count(*) DESC
		LIMIT 1

	           area
	0  Central Coas
	ACTUAL OUTPUT ====

		
		SELECT area
		FROM
		  (SELECT LHS.no AS NO,
		          LHS.grape AS grape,
		          LHS.winery AS winery,
		          LHS.appelation AS appelation,
		          LHS.state AS state,
		          LHS.name AS name,
		          LHS.year AS YEAR,
		          LHS.price AS price,
		          LHS.score AS score,
		          LHS.cases AS cases,
		          LHS.drink AS drink,
		          RHS.area AS area
		   FROM wine AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT appelation,
		                area,
		                COUNT() AS n
		         FROM appellations
		         GROUP BY appelation,
		                  area)
		      WHERE (n <= 2010
		             OR n = 1)) AS RHS ON (LHS.no = RHS.n
		                                   AND LHS.appelation = RHS.appelation))
		ORDER BY area

	Empty DataFrame
	Columns: [area]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/wine_1/0001 (1596)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM WINE
		ORDER BY Score
		LIMIT 1

	         name
	0  Chardonnay
	ACTUAL OUTPUT ====

		
		SELECT grape AS name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM wine
		      ORDER BY drink DESC)
		   LIMIT 1)

	       name
	0  Riesling
Wrong output for fuzzied solution in instance spider/wine_1/0025 (1599)
	EXPECTED OUTPUT ====

		SELECT T1.Color
		FROM GRAPES AS T1
		JOIN WINE AS T2 ON T1.Grape = T2.Grape
		GROUP BY T2.Grape
		ORDER BY AVG(Price) DESC
		LIMIT 1

	  color
	0    ed
	ACTUAL OUTPUT ====

		
		SELECT color
		FROM
		  (SELECT id,
		          grape,
		          color,
		          winery,
		          appelation,
		          state,
		          name,
		          YEAR,
		          price,
		          score,
		          cases,
		          drink,
		          id AS NO
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.grape AS grape,
		             LHS.color AS color,
		             RHS.winery AS winery,
		             RHS.appelation AS appelation,
		             RHS.state AS state,
		             RHS.name AS name,
		             RHS.year AS YEAR,
		             RHS.price AS price,
		             RHS.score AS score,
		             RHS.cases AS cases,
		             RHS.drink AS drink
		      FROM grapes AS LHS
		      INNER JOIN wine AS RHS ON (LHS.id = RHS.no
		                                    AND LHS.grape = RHS.grape)))
		ORDER BY color

	Empty DataFrame
	Columns: [color]
	Index: []
Wrong output for fuzzied solution in instance spider/wine_1/0011 (1600)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM WINE
		WHERE Winery = "Robert Biale"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT `LHS`.`no` AS `no`,
		          `LHS`.`grape` AS `grape`,
		          `LHS`.`winery` AS `winery`,
		          `LHS`.`appelation` AS `appelation`,
		          `LHS`.`state` AS `state`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`year` AS `year`,
		          `LHS`.`price` AS `price`,
		          `LHS`.`score` AS `score`,
		          `LHS`.`cases` AS `cases`,
		          `LHS`.`drink` AS `drink`
		   FROM `wine` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `wine`
		      WHERE (`winery` = 'Robert Biale')) AS RHS ON (LHS.no = RHS.no
		                                                    AND LHS.grape = RHS.grape
		                                                    AND LHS.winery = RHS.winery
		                                                    AND LHS.appelation = RHS.appelation
		                                                    AND LHS.state = RHS.state
		                                                    AND LHS.name = RHS.name
		                                                    AND LHS.year = RHS.year
		                                                    AND LHS.price = RHS.price
		                                                    AND LHS.score = RHS.score
		                                                    AND LHS.cases = RHS.cases
		                                                    AND LHS.drink = RHS.drink))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/wine_1/0029 (1601)
	EXPECTED OUTPUT ====

		SELECT max(Price),
		       max(Score)
		FROM WINE
		WHERE Appelation = "St. Helena"

	   max(price)  max(score)
	0          52          94
	ACTUAL OUTPUT ====

		
		SELECT `price` AS `max_price_`,
		       `score` AS `max_score_`
		FROM
		  (SELECT `LHS`.`no` AS `no`,
		          `LHS`.`grape` AS `grape`,
		          `LHS`.`winery` AS `winery`,
		          `LHS`.`appelation` AS `appelation`,
		          `LHS`.`state` AS `state`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`year` AS `year`,
		          `LHS`.`price` AS `price`,
		          `LHS`.`score` AS `score`,
		          `LHS`.`cases` AS `cases`,
		          `LHS`.`drink` AS `drink`
		   FROM `wine` AS `LHS`
		   INNER JOIN
		     (SELECT `no`,
		             `grape`,
		             `winery`,
		             `appelation`,
		             `state`,
		             `name`,
		             `year`,
		             MAX(`price`) OVER () AS `price`,
		                               `score`,
		                               `cases`,
		                               `drink`
		      FROM `wine`
		      WHERE (`appelation` = 'St. Helena'
		             OR score >= price)) AS RHS ON (LHS.no = RHS.no
		                                            AND LHS.grape = RHS.grape
		                                            AND LHS.winery = RHS.winery
		                                            AND LHS.appelation = RHS.appelation
		                                            AND LHS.state = RHS.state
		                                            AND LHS.name = RHS.name
		                                            AND LHS.year = RHS.year
		                                            AND LHS.price = RHS.price
		                                            AND LHS.score = RHS.score
		                                            AND LHS.cases = RHS.cases
		                                            AND LHS.drink = RHS.drink))
		ORDER BY max_price_

	   max_price_  max_score_
	0          52          89
	1          52          90
	2          52          91
	3          52          91
	4          52          91
	5          52          92
	6          52          93
Wrong output for fuzzied solution in instance spider/wine_1/0010 (1602)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.Name
		FROM APPELLATIONs AS T1
		JOIN WINE AS T2 ON T1.Appelation = T2.Appelation
		WHERE T1.Area = "North Coast"

	                      name
	0              B1zFJShiraz
	1         BJGChardonnaytKp
	2               Chardonnay
	3          ChardonnayOsOiA
	4          ChardonnaydWLsK
	5          D5YQeChardonnay
	6    D8u1YKanzler Vineyard
	7          Kanzler Vineyar
	8         Kanzler Vineyard
	9    Kanzler Vineyardp0B0r
	10            S MShirazH5k
	11                   Shira
	12                  Shiraz
	13             XrYSYShiraz
	14         anzler Vineyard
	15   c89hFKanzler Vineyard
	16            cJTShiraz4kS
	17               hardonnay
	18                   hiraz
	19  l6BKanzler VineyardorW
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `name`
		FROM
		  (SELECT *
		   FROM `wine` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `appellations`
		           WHERE (`area` != 'North Coast')) AS RHS
		        WHERE (LHS.appelation = RHS.appelation
		               AND LHS.state = RHS.state) ))
		ORDER BY name

	                      name
	0    2yua1Kanzler Vineyard
	1    3lye3Kanzler Vineyard
	2   6 kKanzler Vineyard6e2
	3         8LbChardonnayGpl
	4             8ZgShiraz9kk
	5         9nwChardonnay)Nm
	6         AgKChardonnayDts
	7              B1zFJShiraz
	8         BJGChardonnaytKp
	9         CZfChardonnayFys
	10               Chardonna
	11              Chardonnay
	12         ChardonnayOsOiA
	13         ChardonnaydWLsK
	14         ChardonnayhOurg
	15         ChardonnayoAwYZ
	16         D5YQeChardonnay
	17   D8u1YKanzler Vineyard
	18             GQS1VShiraz
	19            JNoShiraz6rJ
	20            K3KShiraz)36
	21         Kanzler Vineyar
	22        Kanzler Vineyard
	23   Kanzler VineyardKMDdn
	24   Kanzler VineyardNxf86
	25   Kanzler VineyardOAu3z
	26   Kanzler VineyardcHUB 
	27   Kanzler Vineyardp0B0r
	28   Kanzler Vineyardpj01W
	29   OGbHdKanzler Vineyard
	30         QUex1Chardonnay
	31            RKiShirazCvs
	32            S MShirazH5k
	33                   Shira
	34                  Shiraz
	35             Shiraz8qEfM
	36             ShirazDkG0C
	37             ShirazaAmhL
	38        WyZChardonnaydF8
	39         Xj4NPChardonnay
	40             XrYSYShiraz
	41   Y(ZVgKanzler Vineyard
	42  aUVKanzler VineyardUkX
	43         anzler Vineyard
	44  b(4Kanzler VineyardssO
	45             bsEmCShiraz
	46   c89hFKanzler Vineyard
	47            cJTShiraz4kS
	48        fDBChardonnayIE2
	49   fr)NVKanzler Vineyard
	50               hardonnay
	51                   hiraz
	52  kuaKanzler VineyardTh5
	53  l6BKanzler VineyardorW
	54            mkdShirazDQE
	55  w()Kanzler Vineyard0gt
Wrong output for fuzzied solution in instance spider/wine_1/0028 (1604)
	EXPECTED OUTPUT ====

		SELECT AVG(Price),
		       AVG(Cases)
		FROM WINE
		WHERE YEAR = 2009
		  AND Grape = "Zinfandel"

	   avg(price)  avg(cases)
	0   38.666667  895.666667
	ACTUAL OUTPUT ====

		
		SELECT `price` AS `avg_price_`,
		       `cases` AS `avg_cases_`
		FROM
		  (SELECT `no`,
		          `grape`,
		          `winery`,
		          `appelation`,
		          `state`,
		          `name`,
		          `year`,
		          `price`,
		          `score`,
		          `cases`,
		          `drink`,
		          AVG(`price`) OVER () AS `meanprice`
		   FROM `wine`)
		WHERE (`grape` = 'Zinfandel'
		       AND YEAR = 2009)
		ORDER BY avg_price_

	   avg_price_  avg_cases_
	0          21         350
	1          47         350
	2          48        1987
Wrong output for base solution in instance spider/wine_1/0031 (1605)
	EXPECTED OUTPUT ====

	    avg_price_  avg_score_                            appelation
	0    29.142857   88.142857                      Alexander Valley
	1    31.500000   90.000000                         Amador County
	2    18.000000   87.000000      Amador-Mendocino-Sonoma Counties
	3    53.333333   92.333333                       Anderson Valley
	4    31.000000   92.000000                  Arroyo Grande Valley
	5   125.000000   88.000000                            Atlas Peak
	6    46.500000   91.000000                        Bennett Valley
	7    20.000000   84.000000                      Calaveras County
	8    39.482759   87.827586                            California
	9    36.166667   90.000000                              Carneros
	10   13.000000   87.000000                         Central Coast
	11   52.500000   92.000000                            Chalk Hill
	12   25.000000   92.000000                               Chalone
	13   27.800000   87.200000                   Contra Costa County
	14   27.653846   89.307692                      Dry Creek Valley
	15   29.500000   89.000000                           Edna Valley
	16   25.000000   78.000000                            Fiddletown
	17   40.000000   91.000000  Green Valley of Russian River Valley
	18   20.000000   87.000000                         Guenoc Valley
	19   21.000000   88.000000         Happy Canyon of Santa Barbara
	20   29.000000   93.000000                       Howell Mountain
	21   37.500000   89.500000                        Knights Valley
	22   26.000000   87.000000                           Lake County
	23   40.000000   89.000000                      Livermore Valley
	24   21.500000   87.500000                                  Lodi
	25   15.333333   86.333333                      Mendocino County
	26   22.500000   89.000000                       Monterey County
	27   38.333333   90.666667                          Mount Harlan
	28   53.333333   90.666667                          Mount Vedeer
	29   59.135417   90.479167                           Napa Valley
	30   18.000000   86.000000                  Napa-Sonoma counties
	31   12.000000   85.000000                           North Coast
	32   95.000000   90.500000                              Oakville
	33   32.285714   88.428571                           Paso Robles
	34   49.000000   90.500000                 Red Hills Lake County
	35   38.000000   90.000000                              Rockpile
	36   49.603774   91.792453                  Russian River Valley
	37   45.714286   89.428571                            Rutherford
	38   31.500000   89.500000                San Luis Obispo County
	39   28.000000   89.416667                  Santa Barbara County
	40   40.000000   93.000000                  Santa Cruz Mountains
	41   46.285714   91.238095                 Santa Lucia Highlands
	42   41.500000   91.250000                    Santa Maria Valley
	43   29.333333   88.733333                     Santa Ynez Valley
	44   25.000000   86.000000                     Shenandoah Valley
	45   10.000000   82.000000                      Sierra Foothills
	46   35.000000   89.000000                         Solano County
	47   49.025641   90.820513                          Sonoma Coast
	48   43.481481   90.407407                         Sonoma County
	49   42.684211   89.789474                         Sonoma Valley
	50   15.000000   86.000000                  Sonoma-Lake Counties
	51   70.666667   89.333333              Spring Mountain District
	52   77.500000   91.500000                            St. Helena
	53   60.352941   90.882353                       Sta. Rita Hills
	54   84.500000   92.250000                   Stags Leap District
	55   25.000000   91.000000                           Yolo County
	56   90.000000   90.000000                            Yountville
	ACTUAL OUTPUT ====

		SELECT avg(Price),
		       avg(Score),
		       Appelation
		FROM WINE
		GROUP BY Appelation

	    avg(price)  avg(score)                            appelation
	0    29.142857   88.142857                      Alexander Valley
	1    31.500000   90.000000                         Amador County
	2    18.000000   87.000000      Amador-Mendocino-Sonoma Counties
	3    53.333333   92.333333                       Anderson Valley
	4    31.000000   92.000000                  Arroyo Grande Valley
	5   125.000000   88.000000                            Atlas Peak
	6    46.500000   91.000000                        Bennett Valley
	7    20.000000   84.000000                      Calaveras County
	8    39.482759   87.827586                            California
	9    36.166667   90.000000                              Carneros
	10   13.000000   87.000000                         Central Coast
	11   52.500000   92.000000                            Chalk Hill
	12   25.000000   92.000000                               Chalone
	13   27.800000   87.200000                   Contra Costa County
	14   27.653846   89.307692                      Dry Creek Valley
	15   29.500000   89.000000                           Edna Valley
	16   25.000000   78.000000                            Fiddletown
	17   40.000000   91.000000  Green Valley of Russian River Valley
	18   20.000000   87.000000                         Guenoc Valley
	19   21.000000   88.000000         Happy Canyon of Santa Barbara
	20   29.000000   93.000000                       Howell Mountain
	21   37.500000   89.500000                        Knights Valley
	22   26.000000   87.000000                           Lake County
	23   40.000000   89.000000                      Livermore Valley
	24   21.500000   87.500000                                  Lodi
	25   15.333333   86.333333                      Mendocino County
	26   22.500000   89.000000                       Monterey County
	27   38.333333   90.666667                          Mount Harlan
	28   53.333333   90.666667                          Mount Vedeer
	29   59.135417   90.479167                           Napa Valley
	30   18.000000   86.000000                  Napa-Sonoma counties
	31   12.000000   85.000000                           North Coast
	32   95.000000   90.500000                              Oakville
	33   32.285714   88.428571                           Paso Robles
	34   49.000000   90.500000                 Red Hills Lake County
	35   38.000000   90.000000                              Rockpile
	36   49.603774   91.792453                  Russian River Valley
	37   45.714286   89.428571                            Rutherford
	38   31.500000   89.500000                San Luis Obispo County
	39   28.000000   89.416667                  Santa Barbara County
	40   40.000000   93.000000                  Santa Cruz Mountains
	41   46.285714   91.238095                 Santa Lucia Highlands
	42   41.500000   91.250000                    Santa Maria Valley
	43   29.333333   88.733333                     Santa Ynez Valley
	44   25.000000   86.000000                     Shenandoah Valley
	45   10.000000   82.000000                      Sierra Foothills
	46   35.000000   89.000000                         Solano County
	47   49.025641   90.820513                          Sonoma Coast
	48   43.481481   90.407407                         Sonoma County
	49   42.684211   89.789474                         Sonoma Valley
	50   15.000000   86.000000                  Sonoma-Lake Counties
	51   70.666667   89.333333              Spring Mountain District
	52   77.500000   91.500000                            St. Helena
	53   60.352941   90.882353                       Sta. Rita Hills
	54   84.500000   92.250000                   Stags Leap District
	55   25.000000   91.000000                           Yolo County
	56   90.000000   90.000000                            Yountville
Wrong output for ground truth in instance spider/wine_1/0031 (1605)
Wrong output for fuzzied solution in instance spider/wrestler/0002 (1606)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM wrestler
		ORDER BY Days_held DESC

	                 name
	0             Fishman
	1             Fishman
	2  nPfEl Samurai § jW
	3     Último Dragón §
	4     Último Dragón §
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT name
		   FROM wrestler INTERSECT SELECT name
		   FROM wrestler)
		ORDER BY name

	                 name
	0             Fishman
	1  nPfEl Samurai § jW
	2     Último Dragón §
Wrong output for fuzzied solution in instance spider/wrestler/0017 (1607)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM wrestler
		WHERE Wrestler_ID NOT IN
		    (SELECT Wrestler_ID
		     FROM elimination)

	                        name
	0                 El Samurai
	1           EwVJnGran Hamada
	2              H biclM)BxqVC
	3         Oqqi(sGJ(Tg83RycVp
	4   Oqqi(sGJ(Tg83RycVpPF37)1
	5            QDOFnEl Samurai
	6          The Great Sasuke 
	7          The Great Sasuke 
	8         The Great Sasuke §
	9         The Great Sasuke §
	10         esOGran HamadaJhY
	11         f2uGran Hamada1i4
	12                 h1 EZ17mW
	13         he Great Sasuke §
	14           ifcxMEl Samurai
	15          kyFEl SamuraiAZa
	16                 l Samurai
	17                 l Samurai
	18                ran Hamada
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM wrestler AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT LHS.elimination_id AS elimination_id,
		                     LHS.wrestler_id AS wrestler_id,
		                     LHS.team AS team,
		                     LHS.eliminated_by AS eliminated_by,
		                     LHS.elimination_move AS elimination_move,
		                     LHS.time AS TIME,
		                     RHS.wrestler_id AS wrestler_id_other,
		                     RHS.name AS name,
		                     RHS.reign AS reign,
		                     RHS.days_held AS days_held,
		                     RHS.location AS LOCATION,
		                     RHS.event AS event
		              FROM elimination AS LHS
		              CROSS JOIN wrestler AS RHS)
		           WHERE (wrestler_id <= wrestler_id_other
		                  AND wrestler_id = wrestler_id_other)) AS RHS
		        WHERE (LHS.days_held = RHS.days_held) ))
		ORDER BY name

	                        name
	0                 El Samurai
	1           EwVJnGran Hamada
	2              H biclM)BxqVC
	3   Oqqi(sGJ(Tg83RycVpPF37)1
	4            QDOFnEl Samurai
	5          The Great Sasuke 
	6          The Great Sasuke 
	7         The Great Sasuke §
	8         The Great Sasuke §
	9          esOGran HamadaJhY
	10         f2uGran Hamada1i4
	11                 h1 EZ17mW
	12         he Great Sasuke §
	13          kyFEl SamuraiAZa
	14                 l Samurai
	15                 l Samurai
	16                ran Hamada
No solution for instance spider/wrestler/0008 (1608)
Wrong output for fuzzied solution in instance spider/wrestler/0003 (1609)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM wrestler
		ORDER BY Days_held ASC
		LIMIT 1

	              name
	0  Último Dragón §
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM wrestler
		      ORDER BY name)
		   LIMIT 1)

	      name
	0  Fishman
Wrong output for fuzzied solution in instance spider/wrestler/0006 (1611)
	EXPECTED OUTPUT ====

		SELECT Elimination_Move
		FROM Elimination
		WHERE Team = "Team Orton"

	               elimination_move
	0                       Paydirt
	1                       Paydirt
	2  QeJWorld's Strongest SlamQqv
	3                         Spear
	4                    SpeargOsCO
	5        World's Strongest Slam
	6                    dkPxCSpear
	ACTUAL OUTPUT ====

		
		SELECT `elimination_move`
		FROM
		  (SELECT `elimination_move`
		   FROM `elimination`
		   WHERE (`team` = 'Team Orton') INTERSECT
		     SELECT elimination_move
		     FROM elimination)
		ORDER BY elimination_move

	               elimination_move
	0                       Paydirt
	1  QeJWorld's Strongest SlamQqv
	2                         Spear
	3                    SpeargOsCO
	4        World's Strongest Slam
	5                    dkPxCSpear
Wrong output for fuzzied solution in instance spider/wrestler/0012 (1613)
	EXPECTED OUTPUT ====

		SELECT Team
		FROM elimination
		GROUP BY Team
		HAVING COUNT(*) > 3

	           team
	0  Team Batista
	1   eam Batista
	ACTUAL OUTPUT ====

		
		SELECT team
		FROM
		  (SELECT *
		   FROM
		     (SELECT team,
		             COUNT() AS n
		      FROM elimination
		      GROUP BY team) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM elimination AS RHS
		        WHERE (LHS.team = RHS.team) ))
		WHERE (n >= 3)
		ORDER BY team

	           team
	0   Team Batist
	1  Team Batista
	2   eam Batista
Wrong output for fuzzied solution in instance spider/wrestler/0015 (1614)
	EXPECTED OUTPUT ====

		SELECT Reign
		FROM wrestler
		GROUP BY Reign
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  reign
	0     1
	ACTUAL OUTPUT ====

		
		SELECT days_held AS reign
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT days_held,
		                event,
		                COUNT() AS n
		         FROM wrestler
		         GROUP BY days_held,
		                  event)
		      ORDER BY n)
		   LIMIT 1)

	  reign
	0  1284
Wrong output for fuzzied solution in instance spider/wrestler/0016 (1616)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM wrestler
		GROUP BY LOCATION
		HAVING COUNT(*) > 2

	           location
	0  Tijuana , Mexico
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT days_held,
		                LOCATION,
		                COUNT() AS n
		         FROM wrestler
		         GROUP BY days_held,
		                  LOCATION)
		      ORDER BY n)
		   LIMIT 2)

	           location
	0  Tijuana , Mexico
	1  Tijuana , Mexico
Wrong output for fuzzied solution in instance spider/wrestler/0018 (1617)
	EXPECTED OUTPUT ====

		SELECT Team
		FROM Elimination
		WHERE Eliminated_By = "Orton" INTERSECT
		  SELECT Team
		  FROM Elimination WHERE Eliminated_By = "Benjamin"

	Empty DataFrame
	Columns: [team]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `team`
		FROM `elimination`
		WHERE (`eliminated_by` = 'Orton'
		       OR `eliminated_by` = 'Benjamin')
		ORDER BY team

	                 team
	0   HWfetTeam Batista
	1         Team Batist
	2        Team Batista
	3           Team Orto
	4          Team Orton
	5     Team OrtonmeofG
	6  U)LTeam BatistaWl2
	7         eam Batista
	8   hwX1VTeam Batista
No solution for instance spider/wrestler/0007 (1620)
Wrong output for fuzzied solution in instance spider/wrestler/0014 (1622)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM wrestler
		WHERE Days_held < 100

	                name
	0            Fishman
	1  G1PGran HamadadOf
	2         Villaño IV
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name_other AS name
		FROM
		  (SELECT LHS.wrestler_id AS wrestler_id,
		          LHS.name AS name,
		          LHS.reign AS reign,
		          LHS.days_held AS days_held,
		          LHS.location AS LOCATION,
		          LHS.event AS event,
		          RHS.wrestler_id AS wrestler_id_other,
		          RHS.name AS name_other,
		          RHS.reign AS reign_other,
		          RHS.location AS location_other,
		          RHS.event AS event_other
		   FROM wrestler AS LHS
		   INNER JOIN wrestler AS RHS ON (LHS.reign = RHS.days_held))
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
No solution for instance spider/wrestler/0009 (1623)
No solution for instance spider/wrestler/0010 (1625)
Wrong output for fuzzied solution in instance spider/tracking_orders/0008 (1628)
	EXPECTED OUTPUT ====

		SELECT T1.customer_id
		FROM customers AS T1
		JOIN orders AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T1.customer_id
		ORDER BY count(*) DESC
		LIMIT 1

	   customer_id
	0            1
	ACTUAL OUTPUT ====

		
		SELECT n AS customer_id
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT LHS.customer_id AS customer_id,
		             LHS.customer_name AS customer_name,
		             LHS.customer_details AS customer_details,
		             RHS.order_id AS order_id,
		             RHS.order_status AS order_status,
		             RHS.date_order_placed AS date_order_placed,
		             RHS.order_details AS order_details
		      FROM customers AS LHS
		      INNER JOIN orders AS RHS ON (LHS.customer_id = RHS.customer_id)))
		ORDER BY customer_id

	   customer_id
	0           11
Wrong output for fuzzied solution in instance spider/tracking_orders/0027 (1630)
	EXPECTED OUTPUT ====

		SELECT T2.customer_name,
		       count(*)
		FROM orders AS T1
		JOIN customers AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T2.customer_id
		HAVING count(*) >= 2

	  customer_name  count(*)
	0        Parker         2
	1        Beulah         3
	2      Savannah         3
	ACTUAL OUTPUT ====

		
		SELECT customer_name,
		       n AS count___
		FROM
		  (SELECT customer_name,
		          order_details,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.order_id AS order_id,
		             LHS.customer_id AS customer_id,
		             LHS.order_status AS order_status,
		             LHS.date_order_placed AS date_order_placed,
		             LHS.order_details AS order_details,
		             RHS.customer_name AS customer_name,
		             RHS.customer_details AS customer_details
		      FROM orders AS LHS
		      LEFT JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id))
		   GROUP BY customer_name,
		            order_details)
		WHERE (n >= 2)
		ORDER BY customer_name

	Empty DataFrame
	Columns: [customer_name, count___]
	Index: []
Error while executing solution for instance spider/tracking_orders/0022 (1631)

(sqlite3.OperationalError) near "Traceback": syntax error
[SQL: 
SELECT order_id
FROM orders
ORDER BY order_id
Traceback (most recent call last):
  File "./cubes.py", line 166, in <module>
    main()
  File "./cubes.py", line 134, in main
    for program, loc, optimal in synthesizer.synthesize(top_n=util.get_config().top_programs, enum_all=util.get_config().enum_until is not None):
  File "/home/rmbb/CUBES/squares/parallel_synthesizer.py", line 251, in synthesize
    poll.modify(fd, select.EPOLLIN | select.EPOLLOUT)
FileNotFoundError: [Errno 2] No such file or directory]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/tracking_orders/0013 (1633)
	EXPECTED OUTPUT ====

		SELECT T1.customer_name
		FROM customers AS T1
		JOIN orders AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.order_status = "On Road" INTERSECT
		  SELECT T1.customer_name
		  FROM customers AS T1
		  JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "Shipped"

	  customer_name
	0        Beulah
	1      Savannah
	ACTUAL OUTPUT ====

		
		SELECT `customer_name`
		FROM
		  (SELECT `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`customer_name` AS `customer_name`,
		          `LHS`.`customer_details` AS `customer_details`,
		          `LHS`.`order_id` AS `order_id`,
		          `LHS`.`order_status` AS `order_status`,
		          `LHS`.`date_order_placed` AS `date_order_placed`,
		          `LHS`.`order_details` AS `order_details`,
		          `RHS`.`customer_id` AS `customer_id_other`,
		          `RHS`.`customer_name` AS `customer_name_other`,
		          `RHS`.`customer_details` AS `customer_details_other`,
		          `RHS`.`date_order_placed` AS `date_order_placed_other`,
		          `RHS`.`order_details` AS `order_details_other`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`customer_id` AS `customer_id`,
		                `LHS`.`customer_name` AS `customer_name`,
		                `LHS`.`customer_details` AS `customer_details`,
		                `RHS`.`order_id` AS `order_id`,
		                `RHS`.`order_status` AS `order_status`,
		                `RHS`.`date_order_placed` AS `date_order_placed`,
		                `RHS`.`order_details` AS `order_details`
		         FROM `customers` AS `LHS`
		         INNER JOIN `orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))
		      WHERE (`order_status` != 'On Road'
		             AND `order_status` = 'Shipped')) AS LHS
		   INNER JOIN
		     (SELECT LHS.customer_id AS customer_id,
		             LHS.customer_name AS customer_name,
		             LHS.customer_details AS customer_details,
		             RHS.order_id AS order_id,
		             RHS.order_status AS order_status,
		             RHS.date_order_placed AS date_order_placed,
		             RHS.order_details AS order_details
		      FROM customers AS LHS
		      INNER JOIN orders AS RHS ON (LHS.customer_id = RHS.customer_id)) AS RHS ON (LHS.customer_id = RHS.order_id
		                                                                                     AND LHS.order_status = RHS.order_status))
		ORDER BY customer_name

	Empty DataFrame
	Columns: [customer_name]
	Index: []
Wrong output for fuzzied solution in instance spider/tracking_orders/0006 (1634)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.customer_details
		FROM customers AS T1
		JOIN orders AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.order_status = "On Road"

	  customer_details
	0          9)wwF)A
	1         corrupti
	ACTUAL OUTPUT ====

		
		SELECT `customer_details`
		FROM
		  (SELECT *
		   FROM `customers` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `orders`
		           WHERE (`order_status` = 'On Road')) AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY customer_details

	  customer_details
	0          9)wwF)A
	1         corrupti
	2         corrupti
Error while executing solution for instance spider/tracking_orders/0012 (1636)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `product_id`
FROM
  (SELECT *
   FROM `order_items` AS `LHS`
   WHERE EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM `orders`
           WHERE (`date_order_placed` >= parse_datetime('1975-01-01')
                  AND `date_order_placed` < parse_datetime('1976-01-01'))) AS RHS
        WHERE (LHS.order_id = RHS.order_id) ))
ORDER BY product_id]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/tracking_orders/0026 (1637)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT DISTINCT `invoice_details`
FROM
  (SELECT `LHS`.`invoice_number` AS `invoice_number`,
          `LHS`.`invoice_date` AS `invoice_date`,
          `LHS`.`invoice_details` AS `invoice_details`,
          `RHS`.`invoice_details` AS `invoice_details_other`
   FROM `invoices` AS `LHS`
   INNER JOIN
     (SELECT *
      FROM `invoices`
      WHERE (`invoice_date` < parse_datetime('1989-09-03')
             OR `invoice_date` > parse_datetime('2007-12-25'))) AS RHS ON (LHS.invoice_date = RHS.invoice_date
                                                                           AND LHS.invoice_number = RHS.invoice_number))
ORDER BY invoice_details]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/tracking_orders/0015 (1638)
	EXPECTED OUTPUT ====

		SELECT T1.date_order_placed
		FROM orders AS T1
		JOIN shipments AS T2 ON T1.order_id = T2.order_id
		WHERE T2.shipment_tracking_number = 3452

	     date_order_placed
	0  1881-03-15 14:39:26
	1  1976-02-06 07:51:36
	2  1982-09-08 22:15:32
	3  1982-09-08 22:15:32
	4  1985-03-30 18:22:09
	5  1991-06-21 03:24:59
	ACTUAL OUTPUT ====

		
		SELECT date_order_placed
		FROM
		  (SELECT *
		   FROM orders AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM shipments
		           WHERE (shipment_tracking_number = 3452)) AS RHS
		        WHERE (LHS.order_id = RHS.order_id) ))
		ORDER BY date_order_placed

	     date_order_placed
	0  1881-03-15 14:39:26
	1  1976-02-06 07:51:36
	2  1982-09-08 22:15:32
	3  1985-03-30 18:22:09
	4  1991-06-21 03:24:59
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Error while executing solution for instance spider/tracking_orders/0019 (1643)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `order_id`
FROM `shipments`
WHERE (`shipment_date` >= parse_datetime('2000-01-01'))
ORDER BY order_id]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/tracking_orders/0007 (1644)
	EXPECTED OUTPUT ====

		SELECT T1.customer_name
		FROM customers AS T1
		JOIN orders AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T1.customer_id
		ORDER BY count(*) DESC
		LIMIT 1

	  customer_name
	0      Savannah
	ACTUAL OUTPUT ====

		
		SELECT customer_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.customer_name AS customer_name,
		                LHS.customer_details AS customer_details,
		                RHS.date_order_placed AS date_order_placed,
		                RHS.n AS n
		         FROM customers AS LHS
		         LEFT JOIN
		           (SELECT customer_id,
		                   date_order_placed,
		                   COUNT() AS n
		            FROM orders
		            GROUP BY customer_id,
		                     date_order_placed) AS RHS ON (LHS.customer_id = RHS.customer_id))
		      ORDER BY customer_id DESC)
		   LIMIT 1)

	   customer_name
	0  ROWLeilaniXLk
Wrong output for fuzzied solution in instance spider/tracking_orders/0024 (1645)
	EXPECTED OUTPUT ====

		SELECT T1.customer_name
		FROM customers AS T1
		JOIN orders AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T1.customer_id
		ORDER BY count(*) DESC
		LIMIT 1

	  customer_name
	0        Conrad
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT customer_name
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.customer_name AS customer_name,
		          LHS.customer_details AS customer_details,
		          RHS.order_id AS order_id,
		          RHS.customer_id AS customer_id_other,
		          RHS.order_status AS order_status,
		          RHS.date_order_placed AS date_order_placed,
		          RHS.order_details AS order_details
		   FROM customers AS LHS
		   INNER JOIN
		     (SELECT order_id,
		             customer_id,
		             order_status,
		             date_order_placed,
		             order_details,
		             COUNT(*) OVER () AS n
		      FROM orders) AS RHS ON (LHS.customer_id = RHS.n))
		ORDER BY customer_name

	Empty DataFrame
	Columns: [customer_name]
	Index: []
Wrong output for fuzzied solution in instance spider/tracking_orders/0023 (1647)
	EXPECTED OUTPUT ====

		SELECT T1.order_id
		FROM orders AS T1
		JOIN order_items AS T2 ON T1.order_id = T2.order_id
		GROUP BY T1.order_id
		ORDER BY count(*) DESC
		LIMIT 1

	   order_id
	0        14
	ACTUAL OUTPUT ====

		
		SELECT n AS order_id
		FROM
		  (SELECT order_item_details,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.order_id AS order_id,
		             LHS.customer_id AS customer_id,
		             LHS.order_status AS order_status,
		             LHS.date_order_placed AS date_order_placed,
		             LHS.order_details AS order_details,
		             RHS.order_item_id AS order_item_id,
		             RHS.product_id AS product_id,
		             RHS.order_item_status AS order_item_status,
		             RHS.order_item_details AS order_item_details
		      FROM orders AS LHS
		      INNER JOIN order_items AS RHS ON (LHS.order_id = RHS.order_id))
		   GROUP BY order_item_details)
		ORDER BY order_id

	    order_id
	0          1
	1          1
	2          1
	3          1
	4          1
	5          1
	6          1
	7          1
	8          1
	9          1
	10         1
	11         1
	12         1
Wrong output for fuzzied solution in instance spider/tracking_orders/0001 (1648)
	EXPECTED OUTPUT ====

		SELECT order_id
		FROM orders
		ORDER BY date_order_placed DESC
		LIMIT 1

	   order_id
	0        10
	ACTUAL OUTPUT ====

		
		SELECT order_id
		FROM
		  (SELECT LHS.order_id AS order_id,
		          LHS.customer_id AS customer_id,
		          LHS.order_status AS order_status,
		          LHS.date_order_placed AS date_order_placed,
		          LHS.order_details AS order_details,
		          RHS.order_id AS order_id_other,
		          RHS.order_status AS order_status_other,
		          RHS.order_details AS order_details_other
		   FROM orders AS LHS
		   INNER JOIN orders AS RHS ON (LHS.order_id = RHS.customer_id
		                                   AND LHS.date_order_placed = RHS.date_order_placed))
		ORDER BY order_id

	Empty DataFrame
	Columns: [order_id]
	Index: []
No solution for instance spider/tracking_orders/0014 (1649)
Error while executing solution for instance spider/tracking_orders/0025 (1651)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `invoice_number`
FROM
  (SELECT `invoice_number`
   FROM `invoices` INTERSECT SELECT `invoice_number`
   FROM `invoices`
   WHERE (`invoice_date` <= parse_datetime('1989-09-03')
          OR `invoice_date` > parse_datetime('2007-12-25')))
ORDER BY invoice_number]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/tracking_orders/0011 (1652)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `customer_name`
FROM
  (SELECT `LHS`.`order_id` AS `order_id`,
          `LHS`.`customer_id` AS `customer_id`,
          `LHS`.`order_status` AS `order_status`,
          `LHS`.`date_order_placed` AS `date_order_placed`,
          `LHS`.`order_details` AS `order_details`,
          `RHS`.`customer_name` AS `customer_name`,
          `RHS`.`customer_details` AS `customer_details`
   FROM `orders` AS `LHS`
   LEFT JOIN `customers` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))
WHERE (`date_order_placed` >= parse_datetime('2009-01-01')
       AND `date_order_placed` <= parse_datetime('2010-01-01'))
ORDER BY customer_name]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/tracking_orders/0029 (1653)
	EXPECTED OUTPUT ====

		SELECT T1.customer_name
		FROM customers AS T1
		JOIN orders AS T2
		JOIN order_items AS T3
		JOIN products AS T4 ON T1.customer_id = T2.customer_id
		AND T2.order_id = T3.order_id
		AND T3.product_id = T4.product_id
		WHERE T4.product_name = "food"
		GROUP BY T1.customer_id
		HAVING count(*) >= 1

	   customer_name
	0         Beulah
	1  ROWLeilaniXLk
	2         Samson
	3         Samson
	4          eulah
	ACTUAL OUTPUT ====

		
		SELECT `customer_name`
		FROM
		  (SELECT `customer_name`,
		          `product_name`,
		          COUNT() AS `n`
		   FROM
		     (SELECT `LHS`.`customer_id` AS `customer_id`,
		             `LHS`.`customer_name` AS `customer_name`,
		             `LHS`.`customer_details` AS `customer_details`,
		             `LHS`.`order_id` AS `order_id`,
		             `LHS`.`order_status` AS `order_status`,
		             `LHS`.`date_order_placed` AS `date_order_placed`,
		             `LHS`.`order_details` AS `order_details`,
		             `LHS`.`product_id` AS `product_id`,
		             `LHS`.`product_name` AS `product_name`,
		             `LHS`.`product_details` AS `product_details`,
		             `RHS`.`order_item_id` AS `order_item_id`,
		             `RHS`.`order_item_status` AS `order_item_status`,
		             `RHS`.`order_item_details` AS `order_item_details`
		      FROM
		        (SELECT `LHS`.`customer_id` AS `customer_id`,
		                `LHS`.`customer_name` AS `customer_name`,
		                `LHS`.`customer_details` AS `customer_details`,
		                `LHS`.`order_id` AS `order_id`,
		                `LHS`.`order_status` AS `order_status`,
		                `LHS`.`date_order_placed` AS `date_order_placed`,
		                `LHS`.`order_details` AS `order_details`,
		                `RHS`.`product_id` AS `product_id`,
		                `RHS`.`product_name` AS `product_name`,
		                `RHS`.`product_details` AS `product_details`
		         FROM
		           (SELECT `LHS`.`customer_id` AS `customer_id`,
		                   `LHS`.`customer_name` AS `customer_name`,
		                   `LHS`.`customer_details` AS `customer_details`,
		                   `RHS`.`order_id` AS `order_id`,
		                   `RHS`.`order_status` AS `order_status`,
		                   `RHS`.`date_order_placed` AS `date_order_placed`,
		                   `RHS`.`order_details` AS `order_details`
		            FROM `customers` AS `LHS`
		            INNER JOIN `orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`
		         CROSS JOIN `products` AS `RHS`) AS `LHS`
		      INNER JOIN `order_items` AS `RHS` ON (`LHS`.`order_id` = `RHS`.`order_id`
		                                               AND `LHS`.`product_id` = `RHS`.`product_id`))
		   GROUP BY `customer_name`,
		            `product_name`)
		WHERE (`product_name` = 'food'
		       AND n = 1)
		ORDER BY customer_name

	   customer_name
	0         Beulah
	1  ROWLeilaniXLk
Wrong output for fuzzied solution in instance spider/candidate_poll/0002 (1656)
	EXPECTED OUTPUT ====

		SELECT poll_source
		FROM candidate
		GROUP BY poll_source
		ORDER BY count(*) DESC
		LIMIT 1

	             poll_source
	0  drUi)WNBC/Marist Poll
	ACTUAL OUTPUT ====

		
		SELECT poll_source
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT oppose_rate,
		                poll_source,
		                COUNT() AS n
		         FROM candidate
		         GROUP BY oppose_rate,
		                  poll_source)
		      ORDER BY oppose_rate DESC)
		   LIMIT 1)

	              poll_source
	0  Bq(WNBC/Marist Poll8He
No solution for instance spider/candidate_poll/0017 (1657)
Wrong output for base solution in instance spider/candidate_poll/0008 (1658)
	EXPECTED OUTPUT ====

	   avg_height_  avg_weight_
	0   195.142857    86.714286
	ACTUAL OUTPUT ====

		SELECT avg(height),
		       avg(weight)
		FROM people
		WHERE sex = 'M'

	   avg(height)  avg(weight)
	0   195.142857    86.714286
Wrong output for ground truth in instance spider/candidate_poll/0008 (1658)
Wrong output for fuzzied solution in instance spider/candidate_poll/0003 (1659)
	EXPECTED OUTPUT ====

		SELECT support_rate
		FROM candidate
		ORDER BY support_rate DESC
		LIMIT 3

	   support_rate
	0          0.17
	1          0.18
	2          0.18
	ACTUAL OUTPUT ====

		
		SELECT support_rate
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM candidate
		      ORDER BY consider_rate)
		   LIMIT 3)

	   support_rate
	0          0.16
	1          0.16
	2          0.18
Wrong output for fuzzied solution in instance spider/candidate_poll/0013 (1660)
	EXPECTED OUTPUT ====

		SELECT t1.sex
		FROM people AS t1
		JOIN candidate AS t2 ON t1.people_id = t2.people_id
		GROUP BY t1.sex
		ORDER BY avg(t2.unsure_rate) DESC
		LIMIT 1

	  sex
	0    
	ACTUAL OUTPUT ====

		
		SELECT sex
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.people_id AS people_id,
		                LHS.sex AS sex,
		                LHS.name AS name,
		                LHS.date_of_birth AS date_of_birth,
		                LHS.height AS height,
		                LHS.weight AS weight,
		                RHS.poll_source AS poll_source,
		                RHS.meanunsure_rate AS meanunsure_rate
		         FROM people AS LHS
		         LEFT JOIN
		           (SELECT people_id,
		                   poll_source,
		                   AVG(unsure_rate) AS meanunsure_rate
		            FROM candidate
		            GROUP BY people_id,
		                     poll_source) AS RHS ON (LHS.people_id = RHS.people_id))
		      ORDER BY weight DESC)
		   LIMIT 1)

	  sex
	0   F
Wrong output for fuzzied solution in instance spider/candidate_poll/0006 (1661)
	EXPECTED OUTPUT ====

		SELECT poll_source
		FROM candidate
		ORDER BY oppose_rate DESC
		LIMIT 1

	             poll_source
	0  WNBC/Marist PolliUtUU
	ACTUAL OUTPUT ====

		
		SELECT poll_source
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM candidate
		      ORDER BY date DESC)
		   LIMIT 1)

	     poll_source
	0  Newsweek Poll
Wrong output for fuzzied solution in instance spider/candidate_poll/0004 (1662)
	EXPECTED OUTPUT ====

		SELECT Candidate_ID
		FROM candidate
		ORDER BY oppose_rate
		LIMIT 1

	   candidate_id
	0             6
	ACTUAL OUTPUT ====

		
		SELECT candidate_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM candidate
		      ORDER BY support_rate)
		   LIMIT 1)

	   candidate_id
	0             8
Wrong output for fuzzied solution in instance spider/candidate_poll/0012 (1663)
	EXPECTED OUTPUT ====

		SELECT t1.name,
		       t1.sex,
		       min(oppose_rate)
		FROM people AS t1
		JOIN candidate AS t2 ON t1.people_id = t2.people_id
		GROUP BY t1.sex

	                name     sex  min(oppose_rate)
	0       Hubert Henno       F              0.30
	1    incent Montméat       M              0.30
	2      Laurent Capet                      0.34
	3  MrMrMHubert Henno  2y(nXM              0.43
	ACTUAL OUTPUT ====

		
		SELECT name,
		       sex,
		       oppose_rate AS min_oppose_rate_
		FROM
		  (SELECT LHS.candidate_id AS candidate_id,
		          LHS.people_id AS people_id,
		          LHS.poll_source AS poll_source,
		          LHS.date AS date,
		          LHS.support_rate AS support_rate,
		          LHS.consider_rate AS consider_rate,
		          LHS.oppose_rate AS oppose_rate,
		          LHS.unsure_rate AS unsure_rate,
		          LHS.sex AS sex,
		          LHS.name AS name,
		          LHS.date_of_birth AS date_of_birth,
		          LHS.height AS height,
		          LHS.weight AS weight
		   FROM
		     (SELECT LHS.candidate_id AS candidate_id,
		             LHS.people_id AS people_id,
		             LHS.poll_source AS poll_source,
		             LHS.date AS date,
		             LHS.support_rate AS support_rate,
		             LHS.consider_rate AS consider_rate,
		             LHS.oppose_rate AS oppose_rate,
		             LHS.unsure_rate AS unsure_rate,
		             RHS.sex AS sex,
		             RHS.name AS name,
		             RHS.date_of_birth AS date_of_birth,
		             RHS.height AS height,
		             RHS.weight AS weight
		      FROM candidate AS LHS
		      INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id)) AS LHS
		   INNER JOIN
		     (SELECT candidate_id,
		             people_id,
		             poll_source, date, support_rate,
		                                consider_rate,
		                                MIN(oppose_rate) OVER () AS oppose_rate,
		                                                      unsure_rate
		      FROM candidate) AS RHS ON (LHS.candidate_id = RHS.candidate_id
		                                    AND LHS.people_id = RHS.people_id
		                                    AND LHS.poll_source = RHS.poll_source
		                                    AND LHS.date = RHS.date
		                                    AND LHS.support_rate = RHS.support_rate
		                                    AND LHS.consider_rate = RHS.consider_rate
		                                    AND LHS.oppose_rate = RHS.oppose_rate
		                                    AND LHS.unsure_rate = RHS.unsure_rate))
		ORDER BY name

	              name sex  min_oppose_rate_
	0     Hubert Henno   F               0.3
	1  incent Montméat   M               0.3
Wrong output for fuzzied solution in instance spider/candidate_poll/0015 (1664)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM people AS t1
		JOIN candidate AS t2 ON t1.people_id = t2.people_id
		WHERE t2.support_rate < t2.oppose_rate

	                name
	0        Hubert Henn
	1       Hubert Henno
	2      Laurent Capet
	3  MrMrMHubert Henno
	4  MrMrMHubert Henno
	5    Vincent Montméa
	6    Vincent Montméa
	7    incent Montméat
	8    incent Montméat
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM candidate AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY name

	                name
	0        Hubert Henn
	1       Hubert Henno
	2      Laurent Capet
	3  MrMrMHubert Henno
	4    Vincent Montméa
	5    incent Montméat
No solution for instance spider/candidate_poll/0005 (1665)
Wrong output for fuzzied solution in instance spider/candidate_poll/0016 (1666)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       sex
		FROM people
		WHERE weight > 85
		GROUP BY sex

	   count(*)      sex
	0         1         
	1         1  6jzM Df
	2         1        A
	3         1  GDxMAYh
	4         1       Sh
	5         1   gDLazF
	6         2        F
	7         3        M
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___,
		       sex
		FROM
		  (SELECT sex,
		          COUNT(DISTINCT weight) AS n_distinct
		   FROM
		     (SELECT *
		      FROM people
		      WHERE (weight >= 85.0))
		   GROUP BY sex)
		ORDER BY count___

	   count___      sex
	0         1         
	1         1  6jzM Df
	2         1        A
	3         1  GDxMAYh
	4         1       Sh
	5         1   gDLazF
	6         2        F
	7         4        M
Wrong output for fuzzied solution in instance spider/candidate_poll/0018 (1667)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM people AS t1
		JOIN candidate AS t2 ON t1.people_id = t2.people_id
		WHERE t1.sex = 'F'
		ORDER BY t1.name

	                  name
	0  KU9Laurent Capet0II
	1        qCGe7qqmkgSnv
	2        qCGe7qqmkgSnv
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `people`
		      WHERE (`sex` = 'F')) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM candidate AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY name

	                  name
	0  KU9Laurent Capet0II
	1        qCGe7qqmkgSnv
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/candidate_poll/0001 (1671)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM candidate

	   count(*)
	0        33
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT consider_rate,
		          unsure_rate,
		          COUNT() AS n
		   FROM candidate
		   GROUP BY consider_rate,
		            unsure_rate)
		ORDER BY count___

	   count___
	0        31
Wrong output for fuzzied solution in instance spider/candidate_poll/0011 (1674)
	EXPECTED OUTPUT ====

		SELECT t1.name,
		       t1.sex
		FROM people AS t1
		JOIN candidate AS t2 ON t1.people_id = t2.people_id
		ORDER BY t2.support_rate DESC
		LIMIT 1

	           name sex
	0  Hubert Henno   M
	ACTUAL OUTPUT ====

		
		SELECT name,
		       sex
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.candidate_id AS candidate_id,
		                LHS.people_id AS people_id,
		                LHS.poll_source AS poll_source,
		                LHS.date AS date,
		                LHS.support_rate AS support_rate,
		                LHS.consider_rate AS consider_rate,
		                LHS.oppose_rate AS oppose_rate,
		                LHS.unsure_rate AS unsure_rate,
		                RHS.sex AS sex,
		                RHS.name AS name,
		                RHS.date_of_birth AS date_of_birth,
		                RHS.height AS height,
		                RHS.weight AS weight
		         FROM candidate AS LHS
		         INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))
		      ORDER BY consider_rate)
		   LIMIT 1)

	             name      sex
	0  Stéphane Antig  gaiM59X
Wrong output for base solution in instance spider/candidate_poll/0010 (1675)
	EXPECTED OUTPUT ====

	   avg_weight_  min_weight_ sex
	0    86.714286         82.0   M
	1    92.000000         90.0   F
	ACTUAL OUTPUT ====

		SELECT avg(weight),
		       min(weight),
		       sex
		FROM people
		GROUP BY sex

	   avg(weight)  min(weight) sex
	0    92.000000         90.0   F
	1    86.714286         82.0   M
Wrong output for ground truth in instance spider/candidate_poll/0010 (1675)
Wrong output for fuzzied solution in instance spider/performance_attendance/0008 (1677)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM performance
		GROUP BY LOCATION
		ORDER BY COUNT(*) DESC
		LIMIT 1

	    location
	0  TD Garden
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT LOCATION
		FROM
		  (SELECT LHS.location AS LOCATION,
		          LHS.n AS n,
		          RHS.location AS location_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT LOCATION,
		             COUNT() AS n
		      FROM performance
		      GROUP BY LOCATION) AS LHS
		   CROSS JOIN
		     (SELECT LOCATION,
		             COUNT() AS n
		      FROM performance
		      GROUP BY LOCATION) AS RHS)
		WHERE (n > n_other)
		ORDER BY LOCATION

	                location
	0  Madison Square Garden
	1              TD Garden
No solution for instance spider/performance_attendance/0013 (1679)
Wrong output for fuzzied solution in instance spider/performance_attendance/0006 (1680)
	EXPECTED OUTPUT ====

		SELECT Date
		FROM performance
		ORDER BY Attendance DESC
		LIMIT 1

	              date
	0  cllaXFebruary 5
	ACTUAL OUTPUT ====

		
		SELECT date
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM performance
		      ORDER BY date)
		   LIMIT 1)

	               date
	0  )3ruGFebruary 10
No solution for instance spider/performance_attendance/0012 (1682)
Wrong output for fuzzied solution in instance spider/performance_attendance/0015 (1683)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM member
		WHERE Member_ID NOT IN
		    (SELECT Member_ID
		     FROM member_attendance)

	                  name
	0  9nwCharlie Burke)Nm
	1        Charlie Burke
	2         harlie Burke
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM member AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT LHS.member_id AS member_id,
		                     LHS.performance_id AS performance_id,
		                     LHS.num_of_pieces AS num_of_pieces,
		                     RHS.member_id AS member_id_other,
		                     RHS.name AS name,
		                     RHS.nationality AS nationality,
		                     RHS.role AS ROLE
		              FROM member_attendance AS LHS
		              CROSS JOIN member AS RHS)
		           WHERE (member_id = member_id_other)) AS RHS
		        WHERE (LHS.name = RHS.name
		               AND LHS.nationality = RHS.nationality) ))
		ORDER BY name

	                  name
	0  9nwCharlie Burke)Nm
Wrong output for base solution in instance spider/performance_attendance/0005 (1684)
	EXPECTED OUTPUT ====

	   avg_attendance_
	0      1649.166667
	ACTUAL OUTPUT ====

		SELECT avg(Attendance)
		FROM performance

	   avg(attendance)
	0      1649.166667
Wrong output for ground truth in instance spider/performance_attendance/0005 (1684)
Wrong output for fuzzied solution in instance spider/performance_attendance/0007 (1685)
	EXPECTED OUTPUT ====

		SELECT LOCATION,
		       COUNT(*)
		FROM performance
		GROUP BY LOCATION

	                location  count(*)
	0         (4WvDTD Garden         1
	1         TD Garden3UNZE         1
	2  Madison Square Garden         2
	3              TD Garden         4
	ACTUAL OUTPUT ====

		
		SELECT LOCATION,
		       n AS count___
		FROM
		  (SELECT LOCATION,
		          COUNT() AS n
		   FROM
		     (SELECT date, LOCATION,
		                   COUNT() AS n
		      FROM performance
		      GROUP BY date, LOCATION)
		   GROUP BY LOCATION)
		ORDER BY LOCATION

	                location  count___
	0         (4WvDTD Garden         1
	1  Madison Square Garden         2
	2              TD Garden         3
	3         TD Garden3UNZE         1
Wrong output for fuzzied solution in instance spider/performance_attendance/0001 (1686)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM performance

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT LHS.performance_id AS performance_id,
		             LHS.date AS date,
		             LHS.host AS HOST,
		             LHS.location AS LOCATION,
		             LHS.attendance AS attendance,
		             RHS.performance_id AS performance_id_other,
		             RHS.date AS date_other,
		             RHS.host AS host_other,
		             RHS.location AS location_other
		      FROM performance AS LHS
		      INNER JOIN performance AS RHS ON (LHS.attendance = RHS.attendance)))
		ORDER BY count___

	   count___
	0        10
No solution for instance spider/performance_attendance/0014 (1687)
Wrong output for fuzzied solution in instance spider/performance_attendance/0009 (1688)
	EXPECTED OUTPUT ====

		SELECT LOCATION
		FROM performance
		GROUP BY LOCATION
		HAVING COUNT(*) >= 2

	                location
	0  Madison Square Garden
	1              TD Garden
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM
		  (SELECT LOCATION,
		          COUNT() AS n
		   FROM performance
		   GROUP BY LOCATION)
		WHERE (n = 2)
		ORDER BY LOCATION

	                location
	0  Madison Square Garden
No solution for instance spider/performance_attendance/0011 (1689)
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0033 (1690)
	EXPECTED OUTPUT ====

		SELECT transaction_type_code
		FROM TRANSACTIONS
		GROUP BY transaction_type_code
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  transaction_type_code
	0                   x6P
	ACTUAL OUTPUT ====

		
		SELECT transaction_type_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT date_of_transaction,
		                transaction_type_code,
		                COUNT() AS n
		         FROM transactions
		         GROUP BY date_of_transaction,
		                  transaction_type_code)
		      ORDER BY n DESC)
		   LIMIT 1)

	  transaction_type_code
	0              0FD2HPUR
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0037 (1691)
	EXPECTED OUTPUT ====

		SELECT T2.investor_id
		FROM INVESTORS AS T1
		JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id
		GROUP BY T2.investor_id
		HAVING COUNT(*) >= 2

	   investor_id
	0            1
	1            4
	2           15
	ACTUAL OUTPUT ====

		
		SELECT investor_id
		FROM
		  (SELECT LHS.investor_id AS investor_id,
		          LHS.other_details AS other_details,
		          LHS.n AS n,
		          RHS.investor_details AS investor_details
		   FROM
		     (SELECT *
		      FROM
		        (SELECT investor_id,
		                other_details,
		                COUNT() AS n
		         FROM transactions
		         GROUP BY investor_id,
		                  other_details)
		      WHERE (n >= 2)) AS LHS
		   LEFT JOIN investors AS RHS ON (LHS.investor_id = RHS.investor_id))
		ORDER BY investor_id

	Empty DataFrame
	Columns: [investor_id]
	Index: []
No solution for instance spider/tracking_share_transactions/0036 (1693)
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0039 (1696)
	EXPECTED OUTPUT ====

		SELECT date_of_transaction
		FROM TRANSACTIONS
		WHERE share_count >= 100
		  OR amount_of_transaction >= 100

	   date_of_transaction
	0  1982-08-18 00:42:53
	1  1987-09-03 02:18:43
	2  1991-06-14 03:10:00
	3  1998-07-19 08:41:40
	ACTUAL OUTPUT ====

		
		SELECT date_of_transaction
		FROM
		  (SELECT date_of_transaction
		   FROM transactions
		   WHERE (amount_of_transaction != 100.0) INTERSECT
		     SELECT date_of_transaction
		     FROM transactions)
		ORDER BY date_of_transaction

	   date_of_transaction
	0  1980-03-22 16:33:15
	1  1982-08-18 00:42:53
	2  1987-09-03 02:18:43
	3  1991-06-14 03:10:00
	4  1998-07-19 08:41:40
No solution for instance spider/tracking_share_transactions/0003 (1698)
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0022 (1700)
	EXPECTED OUTPUT ====

		SELECT T1.lot_details
		FROM LOTS AS T1
		JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id
		JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id
		WHERE T3.share_count > 100
		  AND T3.transaction_type_code = "PUR"

	  lot_details
	0      GNbStq
	1      GNbStq
	ACTUAL OUTPUT ====

		
		SELECT `lot_details`
		FROM
		  (SELECT `LHS`.`lot_id` AS `lot_id`,
		          `LHS`.`investor_id` AS `investor_id`,
		          `LHS`.`lot_details` AS `lot_details`,
		          `RHS`.`lot_id` AS `lot_id_other`
		   FROM `lots` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `transactions_lots` AS `LHS`
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM `transactions`
		              WHERE (`transaction_type_code` != 'PUR')) AS RHS
		           WHERE (LHS.transaction_id = RHS.transaction_id) )) AS RHS ON (LHS.lot_id = RHS.transaction_id))
		ORDER BY lot_details

	  lot_details
	0            
	1            
	2            
	3      GNbStq
	4      GNbStq
Wrong output for base solution in instance spider/tracking_share_transactions/0013 (1702)
	EXPECTED OUTPUT ====

		SELECT date_of_transaction
		FROM TRANSACTIONS
		WHERE share_count > 100
		  OR amount_of_transaction > 1000

	    date_of_transaction
	0   1977-08-13 02:18:47
	1   1977-08-17 13:13:30
	2   1979-04-27 06:03:59
	3   1981-01-28 08:07:03
	4   1982-06-06 17:19:00
	5   1983-11-01 17:57:27
	6   1985-10-08 13:13:39
	7   1988-09-16 19:02:51
	8   1990-12-02 09:03:38
	9   1997-12-30 05:05:40
	10  2000-04-03 20:55:43
	11  2001-11-28 15:06:25
	12  2002-09-13 03:04:56
	13  2004-01-18 20:37:50
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT date_of_transaction_other AS date_of_transaction
		FROM
		  (SELECT LHS.transaction_id AS transaction_id,
		          LHS.investor_id AS investor_id,
		          LHS.transaction_type_code AS transaction_type_code,
		          LHS.date_of_transaction AS date_of_transaction,
		          LHS.amount_of_transaction AS amount_of_transaction,
		          LHS.share_count AS share_count,
		          LHS.other_details AS other_details,
		          RHS.transaction_id AS transaction_id_other,
		          RHS.investor_id AS investor_id_other,
		          RHS.transaction_type_code AS transaction_type_code_other,
		          RHS.date_of_transaction AS date_of_transaction_other,
		          RHS.amount_of_transaction AS amount_of_transaction_other,
		          RHS.share_count AS share_count_other,
		          RHS.other_details AS other_details_other
		   FROM
		     (SELECT *
		      FROM transactions
		      WHERE (amount_of_transaction >= 100.0
		             AND amount_of_transaction >= 1000.0)) AS LHS
		   CROSS JOIN transactions AS RHS)
		WHERE (share_count != share_count_other
		       OR amount_of_transaction = amount_of_transaction_other)
		ORDER BY date_of_transaction

	    date_of_transaction
	0   1977-08-13 02:18:47
	1   1977-08-17 13:13:30
	2   1979-04-27 06:03:59
	3   1981-01-28 08:07:03
	4   1982-06-06 17:19:00
	5   1983-11-01 17:57:27
	6   1985-10-08 13:13:39
	7   1988-09-16 19:02:51
	8   1990-12-02 09:03:38
	9   1997-12-30 05:05:40
	10  2000-04-03 20:55:43
	11  2001-11-28 15:06:25
	12  2002-04-07 20:28:37
	13  2002-09-13 03:04:56
	14  2004-01-18 20:37:50
Wrong output for base solution in instance spider/tracking_share_transactions/0006 (1703)
	EXPECTED OUTPUT ====

	  sum_share_count_
	0      685745029.0
	ACTUAL OUTPUT ====

		SELECT sum(share_count)
		FROM TRANSACTIONS

	   sum(share_count)
	0       685745029.0
Wrong output for ground truth in instance spider/tracking_share_transactions/0006 (1703)
Wrong output for base solution in instance spider/tracking_share_transactions/0026 (1706)
	EXPECTED OUTPUT ====

	   investor_id  avg_share_count_
	0           20      0.000000e+00
	1           18      2.980000e+02
	2            8      9.300000e+02
	3            7      1.522000e+03
	4           14      8.040000e+03
	5           19      4.797100e+04
	6           17      9.617800e+04
	7            2      8.316680e+05
	8            6      8.718572e+06
	9            3      2.250533e+08
	ACTUAL OUTPUT ====

		SELECT investor_id,
		       avg(share_count)
		FROM TRANSACTIONS
		GROUP BY investor_id
		ORDER BY avg(share_count)

	   investor_id  avg(share_count)
	0           20      0.000000e+00
	1           18      2.980000e+02
	2            8      9.300000e+02
	3            7      1.522000e+03
	4           14      8.040000e+03
	5           19      4.797100e+04
	6           17      9.617800e+04
	7            2      8.316680e+05
	8            6      8.718572e+06
	9            3      2.250533e+08
Wrong output for ground truth in instance spider/tracking_share_transactions/0026 (1706)
Wrong output for base solution in instance spider/tracking_share_transactions/0015 (1707)
	EXPECTED OUTPUT ====

		SELECT T1.Investor_details
		FROM INVESTORS AS T1
		JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id
		WHERE T2.share_count > 100

	   investor_details
	0                 d
	1                 d
	2                 k
	3                 k
	4                 l
	5                 l
	6                 l
	7                 t
	8                 w
	9                 w
	10                w
	11                z
	12                z
	ACTUAL OUTPUT ====

		
		SELECT investor_details
		FROM
		  (SELECT LHS.transaction_id AS transaction_id,
		          LHS.investor_id AS investor_id,
		          LHS.transaction_type_code AS transaction_type_code,
		          LHS.date_of_transaction AS date_of_transaction,
		          LHS.amount_of_transaction AS amount_of_transaction,
		          LHS.share_count AS share_count,
		          LHS.other_details AS other_details,
		          RHS.investor_id AS investor_id_other,
		          RHS.investor_details AS investor_details,
		          RHS.transaction_id AS transaction_id_other,
		          RHS.transaction_type_code AS transaction_type_code_other,
		          RHS.date_of_transaction AS date_of_transaction_other,
		          RHS.amount_of_transaction AS amount_of_transaction_other,
		          RHS.share_count AS share_count_other,
		          RHS.other_details AS other_details_other
		   FROM transactions AS LHS
		   CROSS JOIN
		     (SELECT LHS.investor_id AS investor_id,
		             LHS.investor_details AS investor_details,
		             RHS.transaction_id AS transaction_id,
		             RHS.transaction_type_code AS transaction_type_code,
		             RHS.date_of_transaction AS date_of_transaction,
		             RHS.amount_of_transaction AS amount_of_transaction,
		             RHS.share_count AS share_count,
		             RHS.other_details AS other_details
		      FROM investors AS LHS
		      INNER JOIN transactions AS RHS ON (LHS.investor_id = RHS.investor_id)) AS RHS)
		WHERE (share_count = share_count_other)
		ORDER BY investor_details

	   investor_details
	0                 d
	1                 d
	2                 d
	3                 d
	4                 j
	5                 j
	6                 k
	7                 k
	8                 l
	9                 l
	10                l
	11                t
	12                w
	13                w
	14                w
	15                z
	16                z
Wrong output for base solution in instance spider/tracking_share_transactions/0005 (1708)
	EXPECTED OUTPUT ====

	   date_of_transaction share_count
	0  1977-08-13 02:18:47         NaN
	1  1977-08-17 13:13:30         930
	2  1979-04-27 06:03:59        8580
	3  1981-01-28 08:07:03     1654756
	4  1982-06-06 17:19:00           9
	5  1983-11-01 17:57:27         587
	6  1985-10-08 13:13:39        2751
	7  1988-09-16 19:02:51     8718572
	8  1990-12-02 09:03:38        1522
	9  1997-12-30 05:05:40       93191
	10 2000-04-03 20:55:43   674529892
	11 2001-11-28 15:06:25        8040
	12 2002-04-07 20:28:37         NaN
	13 2002-09-13 03:04:56      630021
	14 2004-01-18 20:37:50       96178
	ACTUAL OUTPUT ====

		SELECT date_of_transaction,
		       share_count
		FROM TRANSACTIONS

	    date_of_transaction share_count
	0   1977-08-13 02:18:47            
	1   1977-08-17 13:13:30         930
	2   1979-04-27 06:03:59        8580
	3   1981-01-28 08:07:03     1654756
	4   1982-06-06 17:19:00           9
	5   1983-11-01 17:57:27         587
	6   1985-10-08 13:13:39        2751
	7   1988-09-16 19:02:51     8718572
	8   1990-12-02 09:03:38        1522
	9   1997-12-30 05:05:40       93191
	10  2000-04-03 20:55:43   674529892
	11  2001-11-28 15:06:25        8040
	12  2002-04-07 20:28:37            
	13  2002-09-13 03:04:56      630021
	14  2004-01-18 20:37:50       96178
Wrong output for ground truth in instance spider/tracking_share_transactions/0005 (1708)
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0032 (1710)
	EXPECTED OUTPUT ====

		SELECT transaction_type_code
		FROM TRANSACTIONS
		GROUP BY transaction_type_code
		ORDER BY COUNT(*) ASC
		LIMIT 1

	  transaction_type_code
	0              PrR1BPUR
	ACTUAL OUTPUT ====

		
		SELECT transaction_type_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT amount_of_transaction,
		                transaction_type_code,
		                COUNT() AS n
		         FROM transactions
		         GROUP BY amount_of_transaction,
		                  transaction_type_code)
		      ORDER BY transaction_type_code DESC)
		   LIMIT 1)

	  transaction_type_code
	0                    UR
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0035 (1713)
	EXPECTED OUTPUT ====

		SELECT T2.investor_id,
		       T1.Investor_details
		FROM INVESTORS AS T1
		JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id
		GROUP BY T2.investor_id
		ORDER BY COUNT(*) DESC
		LIMIT 1

	   investor_id investor_details
	0   8241746816                E
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS investor_id,
		                investor_details
		FROM
		  (SELECT LHS.amount_of_transaction AS amount_of_transaction,
		          LHS.n AS n,
		          RHS.investor_details AS investor_details,
		          RHS.transaction_id AS transaction_id,
		          RHS.transaction_type_code AS transaction_type_code,
		          RHS.date_of_transaction AS date_of_transaction,
		          RHS.share_count AS share_count,
		          RHS.other_details AS other_details
		   FROM
		     (SELECT amount_of_transaction,
		             COUNT() AS n
		      FROM
		        (SELECT LHS.investor_id AS investor_id,
		                LHS.investor_details AS investor_details,
		                RHS.transaction_id AS transaction_id,
		                RHS.transaction_type_code AS transaction_type_code,
		                RHS.date_of_transaction AS date_of_transaction,
		                RHS.amount_of_transaction AS amount_of_transaction,
		                RHS.share_count AS share_count,
		                RHS.other_details AS other_details
		         FROM investors AS LHS
		         INNER JOIN transactions AS RHS ON (LHS.investor_id = RHS.investor_id))
		      GROUP BY amount_of_transaction) AS LHS
		   INNER JOIN
		     (SELECT LHS.investor_id AS investor_id,
		             LHS.investor_details AS investor_details,
		             RHS.transaction_id AS transaction_id,
		             RHS.transaction_type_code AS transaction_type_code,
		             RHS.date_of_transaction AS date_of_transaction,
		             RHS.amount_of_transaction AS amount_of_transaction,
		             RHS.share_count AS share_count,
		             RHS.other_details AS other_details
		      FROM investors AS LHS
		      INNER JOIN transactions AS RHS ON (LHS.investor_id = RHS.investor_id)) AS RHS ON (LHS.n = RHS.investor_id
		                                                                                           AND LHS.amount_of_transaction = RHS.amount_of_transaction))
		ORDER BY investor_id

	   investor_id investor_details
	0            1          x4Fd62g
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0020 (1714)
	EXPECTED OUTPUT ====

		SELECT T1.sales_details,
		       T2.date_of_transaction
		FROM SALES AS T1
		JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id
		WHERE T2.amount_of_transaction < 3000

	  sales_details  date_of_transaction
	0        eDPAeh  1980-03-31 21:13:55
	1             p  1982-05-10 16:22:38
	2             p  1984-04-08 19:31:47
	3                1987-09-29 13:32:06
	4             p  1987-09-29 13:32:06
	5                1987-11-01 17:16:47
	6             p  1993-04-09 05:06:34
	7             p  1993-04-09 05:06:34
	8       XCgp0vg  2000-09-21 05:43:17
	9             n  2000-09-21 05:43:17
	ACTUAL OUTPUT ====

		
		SELECT sales_details,
		       date_of_transaction
		FROM
		  (SELECT transaction_id,
		          investor_id,
		          transaction_type_code,
		          date_of_transaction,
		          amount_of_transaction,
		          share_count,
		          other_details,
		          sales_details,
		          transaction_id AS sales_transaction_id
		   FROM
		     (SELECT LHS.transaction_id AS transaction_id,
		             LHS.investor_id AS investor_id,
		             LHS.transaction_type_code AS transaction_type_code,
		             LHS.date_of_transaction AS date_of_transaction,
		             LHS.amount_of_transaction AS amount_of_transaction,
		             LHS.share_count AS share_count,
		             LHS.other_details AS other_details,
		             RHS.sales_details AS sales_details
		      FROM transactions AS LHS
		      INNER JOIN sales AS RHS ON (LHS.transaction_id = RHS.sales_transaction_id)))
		WHERE (amount_of_transaction <= 3000.0)
		ORDER BY sales_details

	   sales_details  date_of_transaction
	0         eDPAeh  1980-03-31 21:13:55
	1              e  1981-01-12 08:11:11
	2              p  1982-05-10 16:22:38
	3              p  1984-04-08 19:31:47
	4                 1987-09-29 13:32:06
	5              p  1987-09-29 13:32:06
	6                 1987-11-01 17:16:47
	7              p  1993-04-09 05:06:34
	8              p  1993-04-09 05:06:34
	9        g nnev5  1999-06-27 19:13:02
	10       XCgp0vg  2000-09-21 05:43:17
	11             n  2000-09-21 05:43:17
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0034 (1717)
	EXPECTED OUTPUT ====

		SELECT T1.transaction_type_description
		FROM Ref_Transaction_Types AS T1
		JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code
		GROUP BY T1.transaction_type_code
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  transaction_type_description
	0                         Sale
	ACTUAL OUTPUT ====

		
		SELECT transaction_type_description
		FROM
		  (SELECT LHS.transaction_type_code AS transaction_type_code,
		          LHS.transaction_type_description AS transaction_type_description,
		          LHS.n AS n,
		          RHS.investor_id AS investor_id,
		          RHS.date_of_transaction AS date_of_transaction,
		          RHS.amount_of_transaction AS amount_of_transaction,
		          RHS.share_count AS share_count,
		          RHS.other_details AS other_details
		   FROM
		     (SELECT transaction_type_code,
		             transaction_type_description,
		             COUNT(*) OVER () AS n
		      FROM ref_transaction_types) AS LHS
		   INNER JOIN transactions AS RHS ON (LHS.n = RHS.transaction_id
		                                         AND LHS.transaction_type_code = RHS.transaction_type_code))
		ORDER BY transaction_type_description

	Empty DataFrame
	Columns: [transaction_type_description]
	Index: []
Wrong output for base solution in instance spider/tracking_share_transactions/0024 (1718)
	EXPECTED OUTPUT ====

	  transaction_type_code max_share_count_ min_share_count_
	0                   PUR            93191              NaN
	1                  SALE            96178              NaN
	ACTUAL OUTPUT ====

		SELECT transaction_type_code,
		       max(share_count),
		       min(share_count)
		FROM TRANSACTIONS
		GROUP BY transaction_type_code

	  transaction_type_code max(share_count) min(share_count)
	0                   PUR            93191                 
	1                  SALE            96178                 
Wrong output for ground truth in instance spider/tracking_share_transactions/0024 (1718)
No solution for instance spider/tracking_share_transactions/0021 (1719)
Wrong output for base solution in instance spider/tracking_share_transactions/0014 (1722)
	EXPECTED OUTPUT ====

		SELECT T1.transaction_type_description,
		       T2.date_of_transaction
		FROM Ref_Transaction_Types AS T1
		JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code
		WHERE T2.share_count < 10

	  transaction_type_description  date_of_transaction
	0                     Purchase  1977-08-13 02:18:47
	1                         Sale  2002-04-07 20:28:37
	ACTUAL OUTPUT ====

		
		SELECT transaction_type_description,
		       date_of_transaction
		FROM
		  (SELECT *
		   FROM
		     (SELECT LHS.transaction_id AS transaction_id,
		             LHS.investor_id AS investor_id,
		             LHS.transaction_type_code AS transaction_type_code,
		             LHS.date_of_transaction AS date_of_transaction,
		             LHS.amount_of_transaction AS amount_of_transaction,
		             LHS.share_count AS share_count,
		             LHS.other_details AS other_details,
		             RHS.transaction_type_description AS transaction_type_description
		      FROM transactions AS LHS
		      LEFT JOIN ref_transaction_types AS RHS ON (LHS.transaction_type_code = RHS.transaction_type_code)) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM transactions AS RHS
		        WHERE (LHS.share_count = RHS.share_count
		               AND LHS.transaction_id = RHS.transaction_id) ))
		ORDER BY transaction_type_description

	Empty DataFrame
	Columns: [transaction_type_description, date_of_transaction]
	Index: []
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0009 (1723)
	EXPECTED OUTPUT ====

		SELECT avg(amount_of_transaction)
		FROM TRANSACTIONS
		WHERE transaction_type_code = "SALE"

	  avg(amount_of_transaction)
	0                       None
	ACTUAL OUTPUT ====

		
		SELECT `meanamount_of_transaction` AS `avg_amount_of_transaction_`
		FROM
		  (SELECT `transaction_type_code`,
		          AVG(`amount_of_transaction`) AS `meanamount_of_transaction`
		   FROM `transactions`
		   GROUP BY `transaction_type_code`)
		WHERE (`transaction_type_code` = 'SALE')
		ORDER BY avg_amount_of_transaction_

	Empty DataFrame
	Columns: [avg_amount_of_transaction_]
	Index: []
Wrong output for base solution in instance spider/tracking_share_transactions/0025 (1724)
	EXPECTED OUTPUT ====

	   investor_id  avg_share_count_
	0           20      0.000000e+00
	1           18      2.980000e+02
	2            8      9.300000e+02
	3            7      1.522000e+03
	4           14      8.040000e+03
	5           19      4.797100e+04
	6           17      9.617800e+04
	7            2      8.316680e+05
	8            6      8.718572e+06
	9            3      2.250533e+08
	ACTUAL OUTPUT ====

		SELECT investor_id,
		       avg(share_count)
		FROM TRANSACTIONS
		GROUP BY investor_id

	   investor_id  avg(share_count)
	0           20      0.000000e+00
	1           18      2.980000e+02
	2            8      9.300000e+02
	3            7      1.522000e+03
	4           14      8.040000e+03
	5           19      4.797100e+04
	6           17      9.617800e+04
	7            2      8.316680e+05
	8            6      8.718572e+06
	9            3      2.250533e+08
Wrong output for ground truth in instance spider/tracking_share_transactions/0025 (1724)
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0011 (1725)
	EXPECTED OUTPUT ====

		SELECT min(amount_of_transaction)
		FROM TRANSACTIONS
		WHERE transaction_type_code = "PUR"
		  AND share_count > 50

	  min(amount_of_transaction)
	0                       None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `minamount_of_transaction` AS `min_amount_of_transaction_`
		FROM
		  (SELECT `transaction_id`,
		          `investor_id`,
		          `transaction_type_code`,
		          `date_of_transaction`,
		          `amount_of_transaction`,
		          `share_count`,
		          `other_details`,
		          MIN(`amount_of_transaction`) OVER () AS `minamount_of_transaction`
		   FROM `transactions`)
		WHERE (`transaction_type_code` = 'PUR'
		       AND minamount_of_transaction != 50.0)
		ORDER BY min_amount_of_transaction_

	Empty DataFrame
	Columns: [min_amount_of_transaction_]
	Index: []
Wrong output for base solution in instance spider/tracking_share_transactions/0029 (1726)
	EXPECTED OUTPUT ====

	   lot_id  avg_amount_of_transaction_
	0       9                0.000000e+00
	1      15                1.000000e+00
	2      10                1.308447e+01
	3      11                2.440261e+04
	4       4                4.877797e+04
	5       8                4.877797e+04
	6       1                1.011193e+05
	7      14                1.756428e+05
	8       3                2.074841e+08
	ACTUAL OUTPUT ====

		SELECT T2.lot_id,
		       avg(amount_of_transaction)
		FROM TRANSACTIONS AS T1
		JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id
		GROUP BY T2.lot_id
		ORDER BY avg(amount_of_transaction)

	   lot_id  avg(amount_of_transaction)
	0       9                0.000000e+00
	1      15                1.000000e+00
	2      10                1.308447e+01
	3      11                2.440261e+04
	4       4                4.877797e+04
	5       8                4.877797e+04
	6       1                1.011193e+05
	7      14                1.756428e+05
	8       3                2.074841e+08
Wrong output for ground truth in instance spider/tracking_share_transactions/0029 (1726)
No solution for instance spider/tracking_share_transactions/0040 (1728)
Wrong output for base solution in instance spider/tracking_share_transactions/0028 (1729)
	EXPECTED OUTPUT ====

	   lot_id  avg_amount_of_transaction_
	0       9                0.000000e+00
	1      15                1.000000e+00
	2      10                1.308447e+01
	3      11                2.440261e+04
	4       4                4.877797e+04
	5       8                4.877797e+04
	6       1                1.011193e+05
	7      14                1.756428e+05
	8       3                2.074841e+08
	ACTUAL OUTPUT ====

		SELECT T2.lot_id,
		       avg(amount_of_transaction)
		FROM TRANSACTIONS AS T1
		JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id
		GROUP BY T2.lot_id

	   lot_id  avg(amount_of_transaction)
	0       9                0.000000e+00
	1      15                1.000000e+00
	2      10                1.308447e+01
	3      11                2.440261e+04
	4       4                4.877797e+04
	5       8                4.877797e+04
	6       1                1.011193e+05
	7      14                1.756428e+05
	8       3                2.074841e+08
Wrong output for ground truth in instance spider/tracking_share_transactions/0028 (1729)
Wrong output for fuzzied solution in instance spider/tracking_share_transactions/0031 (1730)
	EXPECTED OUTPUT ====

		SELECT investor_id,
		       COUNT(*)
		FROM TRANSACTIONS
		GROUP BY investor_id

	    investor_id  count(*)
	0             6         1
	1            15         2
	2            19         2
	3    4492664851         2
	4             7         3
	5            11         3
	6            13         3
	7            18         3
	8            17         4
	9             5         5
	10   5320846254         6
	ACTUAL OUTPUT ====

		
		SELECT investor_id,
		       n AS count___
		FROM
		  (SELECT investor_id,
		          COUNT() AS n
		   FROM
		     (SELECT date_of_transaction,
		             investor_id,
		             COUNT() AS n
		      FROM transactions
		      GROUP BY date_of_transaction,
		               investor_id)
		   GROUP BY investor_id)
		ORDER BY investor_id

	    investor_id  count___
	0             6         1
	1            15         2
	2            19         2
	3    4492664851         2
	4             7         3
	5            11         3
	6            13         3
	7            17         3
	8            18         3
	9             5         5
	10   5320846254         6
No solution for instance spider/medicine_enzyme_interaction/0008 (1733)
Wrong output for fuzzied solution in instance spider/medicine_enzyme_interaction/0022 (1735)
	EXPECTED OUTPUT ====

		SELECT trade_name,
		       count(*)
		FROM medicine
		GROUP BY trade_name

	      trade_name  count(*)
	0         Fanapt         1
	1         Invega         1
	2        Nipolep         1
	3       Nipolept         1
	4  NipoleptHEAmJ         1
	5          nvega         1
	6  re3UeNipolept         1
	7         Saphri         2
	8      Risperdal         3
	ACTUAL OUTPUT ====

		
		SELECT trade_name,
		       n AS count___
		FROM
		  (SELECT trade_name,
		          COUNT() AS n
		   FROM
		     (SELECT trade_name,
		             COUNT() AS n
		      FROM medicine
		      GROUP BY trade_name)
		   GROUP BY trade_name)
		ORDER BY trade_name

	      trade_name  count___
	0         Fanapt         1
	1         Invega         1
	2        Nipolep         1
	3       Nipolept         1
	4  NipoleptHEAmJ         1
	5      Risperdal         1
	6         Saphri         1
	7          nvega         1
	8  re3UeNipolept         1
Wrong output for fuzzied solution in instance spider/medicine_enzyme_interaction/0013 (1736)
	EXPECTED OUTPUT ====

		SELECT interaction_type,
		       count(*)
		FROM medicine_enzyme_interaction
		GROUP BY interaction_type
		ORDER BY count(*) DESC
		LIMIT 1

	  interaction_type  count(*)
	0        inhibitor         4
	ACTUAL OUTPUT ====

		
		SELECT interaction_type,
		       n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT interaction_type,
		                COUNT() AS n
		         FROM medicine_enzyme_interaction
		         GROUP BY interaction_type)
		      ORDER BY n DESC)
		   LIMIT 1)

	  interaction_type  count___
	0        activitor         4
Wrong output for fuzzied solution in instance spider/medicine_enzyme_interaction/0006 (1737)
	EXPECTED OUTPUT ====

		SELECT name
		FROM enzyme
		WHERE product != 'Heme'

	                                       name
	0             9VtoAIb(4ssOZ3I5VYkcBCFS2mkdD
	1                           ALA dehydratase
	2               CaO5oi1TGfr)NVRZwg6PuD8u1Yo
	3                             Ferrochelatas
	4                             Ferrochelatas
	5                            Ferrochelatase
	6                            Ferrochelatase
	7                            Ferrochelatase
	8                            Ferrochelatase
	9                       GQS1VFerrochelatase
	10            QUS2DSWjC6qTVl60WHj56tHbU1ES6
	11                       TNxf86TSSBrE0iEGM6
	12       Uroporphyrinogen III decarboxylase
	13       Uroporphyrinogen III decarboxylase
	14       Uroporphyrinogen III decarboxylase
	15  Uroporphyrinogen III decarboxylasecHUB 
	16             Uroporphyrinogen III synthas
	17             Uroporphyrinogen III synthas
	18            Uroporphyrinogen III synthase
	19            Uroporphyrinogen III synthase
	20            Uroporphyrinogen III synthase
	21                      lFi04Ferrochelatase
	22             r5(BJGtKpOCROzp0B0rlXdXrYSYs
	23               xKWyZdF8RU3NkhOurgU7Efeb85
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `name`
		   FROM `enzyme`
		   WHERE (`product` != 'Heme') INTERSECT
		     SELECT name
		     FROM enzyme)
		ORDER BY name

	                                       name
	0             9VtoAIb(4ssOZ3I5VYkcBCFS2mkdD
	1                           ALA dehydratase
	2               CaO5oi1TGfr)NVRZwg6PuD8u1Yo
	3                             Ferrochelatas
	4                            Ferrochelatase
	5                       GQS1VFerrochelatase
	6             QUS2DSWjC6qTVl60WHj56tHbU1ES6
	7                        TNxf86TSSBrE0iEGM6
	8        Uroporphyrinogen III decarboxylase
	9   Uroporphyrinogen III decarboxylasecHUB 
	10             Uroporphyrinogen III synthas
	11            Uroporphyrinogen III synthase
	12                      lFi04Ferrochelatase
	13             r5(BJGtKpOCROzp0B0rlXdXrYSYs
	14               xKWyZdF8RU3NkhOurgU7Efeb85
Wrong output for fuzzied solution in instance spider/medicine_enzyme_interaction/0012 (1739)
	EXPECTED OUTPUT ====

		SELECT T1.interaction_type
		FROM medicine_enzyme_interaction AS T1
		JOIN medicine AS T2 ON T1.medicine_id = T2.id
		JOIN enzyme AS T3 ON T1.enzyme_id = T3.id
		WHERE T3.name = 'ALA synthase'
		  AND T2.name = 'Aripiprazole'

	  interaction_type
	0  gAkactivitorQpi
	1  oTbactivitorGgN
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `interaction_type`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `RHS`.`enzyme_id` AS `enzyme_id`,
		          `RHS`.`interaction_type` AS `interaction_type`
		   FROM
		     (SELECT `id`
		      FROM `medicine`
		      WHERE (`name` = 'ALA synthase'
		             OR `name` = 'Aripiprazole') INTERSECT
		        SELECT id
		        FROM enzyme) AS LHS
		   INNER JOIN medicine_enzyme_interaction AS RHS ON (LHS.id = RHS.medicine_id))
		ORDER BY interaction_type

	Empty DataFrame
	Columns: [interaction_type]
	Index: []
Wrong output for fuzzied solution in instance spider/medicine_enzyme_interaction/0015 (1740)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM enzyme
		WHERE id NOT IN
		    (SELECT enzyme_id
		     FROM medicine_enzyme_interaction);

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT LOCATION
		      FROM
		        (SELECT LHS.id AS id,
		                LHS.name AS name,
		                LHS.location AS LOCATION,
		                LHS.product AS product,
		                LHS.chromosome AS chromosome,
		                LHS.omim AS omim,
		                LHS.porphyria AS porphyria,
		                RHS.enzyme_id AS enzyme_id,
		                RHS.medicine_id AS medicine_id,
		                RHS.interaction_type AS interaction_type
		         FROM enzyme AS LHS
		         CROSS JOIN medicine_enzyme_interaction AS RHS) INTERSECT SELECT LOCATION
		      FROM enzyme))
		ORDER BY count___

	   count___
	0         3
No solution for instance spider/medicine_enzyme_interaction/0018 (1743)
Error while executing solution for instance spider/medicine_enzyme_interaction/0020 (1744)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT fda_approved) OVER () AS count_distinct_fda_approved_
FROM
  (SELECT fda_approved,
          trade_name,
          COUNT(DISTINCT fda_approved) AS n_distinct
   FROM medicine
   GROUP BY fda_approved,
            trade_name)
ORDER BY count_distinct_fda_approved_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/medicine_enzyme_interaction/0019 (1745)
No solution for instance spider/medicine_enzyme_interaction/0021 (1747)
Wrong output for fuzzied solution in instance spider/medicine_enzyme_interaction/0001 (1748)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM enzyme

	   count(*)
	0         5
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT name,
		          porphyria,
		          COUNT() AS n
		   FROM enzyme
		   GROUP BY name,
		            porphyria)
		ORDER BY count___

	   count___
	0         4
Wrong output for fuzzied solution in instance spider/medicine_enzyme_interaction/0014 (1749)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM medicine
		WHERE FDA_approved = 'No'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `medicine`
		WHERE (`fda_approved` = 'No')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/medicine_enzyme_interaction/0011 (1751)
Wrong output for fuzzied solution in instance spider/wedding/0008 (1755)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM people
		WHERE is_male = 'F'
		  AND age > 30

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `people_id` AS `count___`
		FROM `people`
		WHERE (`is_male` != 'F'
		       AND age = 30)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/wedding/0013 (1757)
Wrong output for fuzzied solution in instance spider/wedding/0006 (1758)
	EXPECTED OUTPUT ====

		SELECT open_date,
		       count(*)
		FROM church
		GROUP BY open_date

	   open_date  count(*)
	0       1839         2
	1       1840         3
	2       1841         3
	ACTUAL OUTPUT ====

		
		SELECT open_date,
		       n AS count___
		FROM
		  (SELECT church_id,
		          open_date,
		          COUNT() AS n
		   FROM church
		   GROUP BY church_id,
		            open_date)
		ORDER BY open_date

	   open_date  count___
	0       1839         1
	1       1839         1
	2       1840         1
	3       1840         1
	4       1840         1
	5       1841         1
	6       1841         1
	7       1841         1
Error while executing solution for instance spider/wedding/0012 (1759)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/wedding/0012 (1759)
Wrong output for fuzzied solution in instance spider/wedding/0005 (1760)
	EXPECTED OUTPUT ====

		SELECT organized_by,
		       name
		FROM church
		WHERE open_date BETWEEN 1830 AND 1840

	          organized_by                         name
	0              – Hoton     8dLYsS65Ki9S66kytaOOwhPY
	1         Isaac Russel        8ydAHo9ad3Ya6L40JX2mP
	2        Isaac Russell              Church of Chris
	3            Ib54rv Wh             Church of Christ
	4         Isaac Russel             Church of Christ
	5   uBaQIqTaxNq)tq3BrW             Church of Christ
	6        Warren Parris        Pure Church of Christ
	7              – Hoton        Pure Church of Christ
	8      xnjJaFa96J26BD7   Pure Church of ChristY ucK
	9       Warren Parrish        bf9rTisC1inVFoT0 inrR
	10       Isaac Russell          cemuoGLxPQTVZaLq92D
	11   Ifv)6jij5uKxLG6uj        eU0U(Church of Christ
	12       Isaac Russell  gQ9Pure Church of ChristfbC
	13       arren Parrish   qaZ KPure Church of Christ
	14       Isaac Russell         ure Church of Christ
	15  4sTxweR1Zg aE7QgpB             xivNEVIAqM i0SW0
	ACTUAL OUTPUT ====

		
		SELECT organized_by,
		       name
		FROM
		  (SELECT *
		   FROM church AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM church
		           WHERE (open_date = 1830
		                  OR open_date <= 1840)) AS RHS
		        WHERE (LHS.church_id = RHS.church_id
		               AND LHS.name = RHS.name
		               AND LHS.organized_by = RHS.organized_by
		               AND LHS.open_date = RHS.open_date
		               AND LHS.continuation_of = RHS.continuation_of) ))
		ORDER BY organized_by

	          organized_by                         name
	0              – Hoton     8dLYsS65Ki9S66kytaOOwhPY
	1         Isaac Russel        8ydAHo9ad3Ya6L40JX2mP
	2        Isaac Russell              Church of Chris
	3            Ib54rv Wh             Church of Christ
	4         Isaac Russel             Church of Christ
	5   uBaQIqTaxNq)tq3BrW             Church of Christ
	6            HU(SC)SoC         Pure Church of Chris
	7        Warren Parris        Pure Church of Christ
	8              – Hoton        Pure Church of Christ
	9      xnjJaFa96J26BD7   Pure Church of ChristY ucK
	10      Warren Parrish        bf9rTisC1inVFoT0 inrR
	11       Isaac Russell          cemuoGLxPQTVZaLq92D
	12   Ifv)6jij5uKxLG6uj        eU0U(Church of Christ
	13       Isaac Russell  gQ9Pure Church of ChristfbC
	14       arren Parrish   qaZ KPure Church of Christ
	15       Isaac Russell         ure Church of Christ
	16  4sTxweR1Zg aE7QgpB             xivNEVIAqM i0SW0
Wrong output for fuzzied solution in instance spider/wedding/0018 (1761)
	EXPECTED OUTPUT ====

		SELECT T4.name
		FROM wedding AS T1
		JOIN people AS T2 ON T1.male_id = T2.people_id
		JOIN people AS T3 ON T1.female_id = T3.people_id
		JOIN church AS T4 ON T4.church_id = T1.church_id
		WHERE T2.age > 30
		  OR T3.age > 30

	                                               name
	0                             4k2TvChurch of Christ
	1                             4k2TvChurch of Christ
	2                             4k2TvChurch of Christ
	3                             4k2TvChurch of Christ
	4                             4k2TvChurch of Christ
	..                                              ...
	64  rue Church of Jesus Christ of Latter Day Saints
	65  rue Church of Jesus Christ of Latter Day Saints
	66  rue Church of Jesus Christ of Latter Day Saints
	67  rue Church of Jesus Christ of Latter Day Saints
	68  rue Church of Jesus Christ of Latter Day Saints
	
	[69 rows x 1 columns]
	ACTUAL OUTPUT ====

		
		SELECT name_other AS name
		FROM
		  (SELECT LHS.people_id AS people_id,
		          LHS.name AS name,
		          LHS.country AS country,
		          LHS.is_male AS is_male,
		          LHS.age AS age,
		          RHS.church_id AS church_id,
		          RHS.name AS name_other,
		          RHS.organized_by AS organized_by,
		          RHS.open_date AS open_date,
		          RHS.continuation_of AS continuation_of,
		          RHS.female_id AS female_id,
		          RHS.year AS YEAR
		   FROM
		     (SELECT *
		      FROM people
		      WHERE (age > 30)) AS LHS
		   INNER JOIN
		     (SELECT LHS.church_id AS church_id,
		             LHS.name AS name,
		             LHS.organized_by AS organized_by,
		             LHS.open_date AS open_date,
		             LHS.continuation_of AS continuation_of,
		             RHS.male_id AS male_id,
		             RHS.female_id AS female_id,
		             RHS.year AS YEAR
		      FROM church AS LHS
		      INNER JOIN wedding AS RHS ON (LHS.church_id = RHS.church_id)) AS RHS ON (LHS.people_id = RHS.male_id))
		ORDER BY name

	                                               name
	0                             4k2TvChurch of Christ
	1                             4k2TvChurch of Christ
	2                             4k2TvChurch of Christ
	3                             4k2TvChurch of Christ
	4                             4k2TvChurch of Christ
	5                             4k2TvChurch of Christ
	6                                   Church of Chris
	7                                   Church of Chris
	8                                   Church of Chris
	9                                   Church of Chris
	10                                  Church of Chris
	11                                 Church of Christ
	12                                 Church of Christ
	13                                 Church of Christ
	14                                 Church of Christ
	15                                 Church of Christ
	16                                 Church of Christ
	17                                 Church of Christ
	18                                 Church of Christ
	19                                 Church of Christ
	20                                 Church of Christ
	21                                 Church of Christ
	22                                 Church of Christ
	23                                 Church of Christ
	24                                 Church of Christ
	25                                 Church of Christ
	26                                 Church of Christ
	27                                 Church of Christ
	28                                 Church of Christ
	29                                 Church of Christ
	30                                 Church of Christ
	31                                 Church of Christ
	32                                 Church of Christ
	33                                 Church of Christ
	34                                 Church of Christ
	35                                 Church of Christ
	36                                 Church of Christ
	37                                 Church of Christ
	38                                 Church of Christ
	39                                 Church of Christ
	40                                 Church of Christ
	41                                 Church of Christ
	42                                 Church of Christ
	43                                 Church of Christ
	44  rue Church of Jesus Christ of Latter Day Saints
	45  rue Church of Jesus Christ of Latter Day Saints
	46  rue Church of Jesus Christ of Latter Day Saints
	47  rue Church of Jesus Christ of Latter Day Saints
	48  rue Church of Jesus Christ of Latter Day Saints
Error while executing solution for instance spider/wedding/0020 (1762)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT church_id) OVER () AS count__distinct_church_id_
FROM wedding
WHERE (YEAR != 2016
       OR YEAR <= church_id)
ORDER BY count__distinct_church_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/wedding/0007 (1764)
	EXPECTED OUTPUT ====

		SELECT name,
		       open_date
		FROM church
		ORDER BY open_date DESC
		LIMIT 3

	                    name  open_date
	0       Church of Christ       1841
	1       Church of Christ       1841
	2  Church of ChristJITas       1841
	ACTUAL OUTPUT ====

		
		SELECT name,
		       open_date
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM church
		      ORDER BY church_id DESC)
		   LIMIT 3)

	                                              name  open_date
	0                                 Church of Christ       1840
	1                                 Church of Christ       1841
	2  True Church of Jesus Christ of Latter Day Saint       1840
Wrong output for fuzzied solution in instance spider/wedding/0001 (1765)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Church
		WHERE Open_Date < 1850

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___
		FROM
		  (SELECT church_id,
		          name,
		          organized_by,
		          open_date,
		          continuation_of,
		          COUNT(*) OVER () AS n
		   FROM church)
		WHERE (n >= 1850
		       OR n != open_date)
		ORDER BY count___

	   count___
	0         8
Wrong output for fuzzied solution in instance spider/wedding/0014 (1766)
	EXPECTED OUTPUT ====

		SELECT name
		FROM church
		EXCEPT
		SELECT T1.name
		FROM church AS T1
		JOIN wedding AS T2 ON T1.church_id = T2.church_id
		WHERE T2.year = 2015

	                 name
	0       Alston Church
	1     Church of Chris
	2      H biclM)BxqVC9
	3  Independent Church
	4     hurch of Christ
	5  n6YgksF37)1oBRMGZR
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM church AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT LHS.church_id AS church_id,
		                  LHS.male_id AS male_id,
		                  LHS.female_id AS female_id,
		                  LHS.year AS YEAR,
		                  RHS.name AS name,
		                  RHS.organized_by AS organized_by,
		                  RHS.open_date AS open_date,
		                  RHS.continuation_of AS continuation_of
		           FROM
		             (SELECT *
		              FROM wedding
		              WHERE (YEAR = 2015)) AS LHS
		           LEFT JOIN church AS RHS ON (LHS.church_id = RHS.church_id)) AS RHS
		        WHERE (LHS.name = RHS.name) ))
		ORDER BY name

	                 name
	0       Alston Church
	1       Alston Church
	2     Church of Chris
	3      H biclM)BxqVC9
	4  Independent Church
	5     hurch of Christ
	6  n6YgksF37)1oBRMGZR
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for base solution in instance spider/wedding/0010 (1768)
	EXPECTED OUTPUT ====

	   min_age_  max_age_   avg_age_
	0        25        36  30.166667
	ACTUAL OUTPUT ====

		SELECT min(age),
		       max(age),
		       avg(age)
		FROM people

	   min(age)  max(age)   avg(age)
	0        25        36  30.166667
Wrong output for ground truth in instance spider/wedding/0010 (1768)
Wrong output for fuzzied solution in instance spider/debate/0008 (1770)
	EXPECTED OUTPUT ====

		SELECT Party
		FROM people
		GROUP BY Party
		ORDER BY COUNT(*) DESC
		LIMIT 1

	        party
	0  Republican
	ACTUAL OUTPUT ====

		
		SELECT party
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT name,
		                party,
		                COUNT() AS n
		         FROM people
		         GROUP BY name,
		                  party)
		      ORDER BY n DESC)
		   LIMIT 1)

	                party
	0  F1Gq6VGplSZ3U0)3(W
Wrong output for fuzzied solution in instance spider/debate/0013 (1772)
	EXPECTED OUTPUT ====

		SELECT T2.Name,
		       COUNT(*)
		FROM debate_people AS T1
		JOIN people AS T2 ON T1.Affirmative = T2.People_ID
		GROUP BY T2.Name

	                name  count(*)
	0      aniel Sickles         1
	1   illiam B. Maclay         2
	2     Daniel Sickles         3
	3  William B. Maclay         7
	4      John Cochrane        10
	ACTUAL OUTPUT ====

		
		SELECT name,
		       n AS count___
		FROM
		  (SELECT affirmative,
		          name,
		          COUNT() AS n
		   FROM
		     (SELECT people_id,
		             district,
		             name,
		             party,
		             age,
		             debate_id,
		             negative,
		             if_affirmative_win,
		             people_id AS affirmative
		      FROM
		        (SELECT LHS.people_id AS people_id,
		                LHS.district AS district,
		                LHS.name AS name,
		                LHS.party AS party,
		                LHS.age AS age,
		                RHS.debate_id AS debate_id,
		                RHS.negative AS negative,
		                RHS.if_affirmative_win AS if_affirmative_win
		         FROM people AS LHS
		         INNER JOIN debate_people AS RHS ON (LHS.people_id = RHS.affirmative)))
		   GROUP BY affirmative,
		            name)
		ORDER BY name

	                name  count___
	0      aniel Sickles         1
	1      John Cochrane         2
	2      John Cochrane         2
	3  William B. Maclay         2
	4   illiam B. Maclay         2
	5     Daniel Sickles         3
	6      John Cochrane         3
	7      John Cochrane         3
	8  William B. Maclay         5
Wrong output for fuzzied solution in instance spider/debate/0006 (1773)
	EXPECTED OUTPUT ====

		SELECT Party
		FROM people
		ORDER BY Age ASC
		LIMIT 1

	                          party
	0  Anti-Lecompton Democratu4)1C
	ACTUAL OUTPUT ====

		
		SELECT party
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM people
		      ORDER BY people_id DESC)
		   LIMIT 1)

	        party
	0  Democratic
Wrong output for fuzzied solution in instance spider/debate/0004 (1774)
	EXPECTED OUTPUT ====

		SELECT Date
		FROM debate
		WHERE Num_of_Audience > 150

	                      date
	0    J9HiDJanuary 12, 2017
	1         January 12, 2017
	2    October 27, 2015STmGE
	3          anuary 12, 2017
	4  c31sUZC(Jp)KdLhKhl)4Jeh
	ACTUAL OUTPUT ====

		
		SELECT date
		FROM debate
		WHERE (num_of_audience >= 150)
		ORDER BY date

	                      date
	0  BhemeyTiWBOYLvLNJUWsUKT
	1         December 17, 201
	2    J9HiDJanuary 12, 2017
	3         January 12, 2017
	4    October 27, 2015STmGE
	5          anuary 12, 2017
	6  c31sUZC(Jp)KdLhKhl)4Jeh
Wrong output for fuzzied solution in instance spider/debate/0012 (1775)
	EXPECTED OUTPUT ====

		SELECT T3.Name
		FROM debate_people AS T1
		JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID
		JOIN people AS T3 ON T1.Affirmative = T3.People_ID
		WHERE T2.Num_of_Audience > 200

	                      name
	0        Bn2BHEqiRg4GhhFeT
	1        Bn2BHEqiRg4GhhFeT
	2        Bn2BHEqiRg4GhhFeT
	3            George Briggs
	4           James Humphrey
	5           James Humphrey
	6           James Humphrey
	7           James Humphrey
	8           James Humphrey
	9           James Humphrey
	10          James Humphrey
	11          James Humphrey
	12        Luther C. Carter
	13        Luther C. Carter
	14   Luther C. CarterXOejz
	15   Luther C. CarterXOejz
	16   Luther C. CarterXOejz
	17    X6wJames HumphreyChv
	18  X7lLuther C. Carter3px
	19    YjZJames HumphreyasC
	20    YjZJames HumphreyasC
	21    YjZJames HumphreyasC
	22  ZiOzNfywQ)yy1oPIwa)RrH
	23        mgBSxwLoDb0KusrP
	24   u2hQHLuther C. Carter
	25   u2hQHLuther C. Carter
	26   u2hQHLuther C. Carter
	27   u2hQHLuther C. Carter
	28         uther C. Carter
	29         uther C. Carter
	30         uther C. Carter
	31         uther C. Carter
	32         uther C. Carter
	33         uther C. Carter
	34         uther C. Carter
	35         uther C. Carter
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.debate_id AS debate_id,
		          LHS.affirmative AS affirmative,
		          LHS.negative AS negative,
		          LHS.if_affirmative_win AS if_affirmative_win,
		          RHS.district AS district,
		          RHS.name AS name,
		          RHS.party AS party,
		          RHS.age AS age,
		          RHS.date AS date,
		          RHS.venue AS venue,
		          RHS.num_of_audience AS num_of_audience
		   FROM debate_people AS LHS
		   INNER JOIN
		     (SELECT LHS.people_id AS people_id,
		             LHS.district AS district,
		             LHS.name AS name,
		             LHS.party AS party,
		             LHS.age AS age,
		             LHS.debate_id AS debate_id,
		             LHS.date AS date,
		             LHS.venue AS venue,
		             LHS.num_of_audience AS num_of_audience
		      FROM
		        (SELECT LHS.people_id AS people_id,
		                LHS.district AS district,
		                LHS.name AS name,
		                LHS.party AS party,
		                LHS.age AS age,
		                RHS.debate_id AS debate_id,
		                RHS.date AS date,
		                RHS.venue AS venue,
		                RHS.num_of_audience AS num_of_audience
		         FROM people AS LHS
		         CROSS JOIN debate AS RHS) AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM debate
		         WHERE (num_of_audience >= 200)) AS RHS ON (LHS.debate_id = RHS.debate_id
		                                                    AND LHS.date = RHS.date
		                                                    AND LHS.venue = RHS.venue
		                                                    AND LHS.num_of_audience = RHS.num_of_audience)) AS RHS ON (LHS.debate_id = RHS.debate_id
		                                                                                                               AND LHS.affirmative = RHS.people_id))
		ORDER BY name

	                      name
	0        Bn2BHEqiRg4GhhFeT
	1        Bn2BHEqiRg4GhhFeT
	2        Bn2BHEqiRg4GhhFeT
	3        Bn2BHEqiRg4GhhFeT
	4        Bn2BHEqiRg4GhhFeT
	5            George Briggs
	6           James Humphrey
	7           James Humphrey
	8           James Humphrey
	9           James Humphrey
	10          James Humphrey
	11          James Humphrey
	12          James Humphrey
	13          James Humphrey
	14        Luther C. Carter
	15        Luther C. Carter
	16        Luther C. Carter
	17   Luther C. CarterXOejz
	18   Luther C. CarterXOejz
	19   Luther C. CarterXOejz
	20   Luther C. CarterXOejz
	21   Luther C. CarterXOejz
	22    X6wJames HumphreyChv
	23    X6wJames HumphreyChv
	24    X6wJames HumphreyChv
	25  X7lLuther C. Carter3px
	26  X7lLuther C. Carter3px
	27    YjZJames HumphreyasC
	28    YjZJames HumphreyasC
	29    YjZJames HumphreyasC
	30    YjZJames HumphreyasC
	31  ZiOzNfywQ)yy1oPIwa)RrH
	32  ZiOzNfywQ)yy1oPIwa)RrH
	33  ZiOzNfywQ)yy1oPIwa)RrH
	34        mgBSxwLoDb0KusrP
	35   u2hQHLuther C. Carter
	36   u2hQHLuther C. Carter
	37   u2hQHLuther C. Carter
	38   u2hQHLuther C. Carter
	39   u2hQHLuther C. Carter
	40         uther C. Carter
	41         uther C. Carter
	42         uther C. Carter
	43         uther C. Carter
	44         uther C. Carter
	45         uther C. Carter
	46         uther C. Carter
	47         uther C. Carter
	48         uther C. Carter
	49         uther C. Carter
Wrong output for fuzzied solution in instance spider/debate/0015 (1776)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM people
		WHERE People_id NOT IN
		    (SELECT Affirmative
		     FROM debate_people)

	                   name
	0        Daniel Sickles
	1        Daniel Sickles
	2        James Humphrey
	3      William B. Macla
	4     William B. Maclay
	5  sSWJames Humphreyorp
	6     yydiQrOnVFV4(FU)e
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT people_id,
		                  district,
		                  name,
		                  party,
		                  age,
		                  debate_id,
		                  negative,
		                  if_affirmative_win,
		                  people_id AS affirmative
		           FROM
		             (SELECT LHS.people_id AS people_id,
		                     LHS.district AS district,
		                     LHS.name AS name,
		                     LHS.party AS party,
		                     LHS.age AS age,
		                     RHS.debate_id AS debate_id,
		                     RHS.negative AS negative,
		                     RHS.if_affirmative_win AS if_affirmative_win
		              FROM people AS LHS
		              INNER JOIN debate_people AS RHS ON (LHS.people_id = RHS.affirmative))) AS RHS
		        WHERE (LHS.district = RHS.district
		               AND LHS.name = RHS.name) ))
		ORDER BY name

	                   name
	0        James Humphrey
	1      William B. Macla
	2  sSWJames Humphreyorp
	3     yydiQrOnVFV4(FU)e
Wrong output for fuzzied solution in instance spider/debate/0005 (1777)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM people
		WHERE Age = 35
		  OR Age = 36

	                  name
	0  John B. HaskinrHFmk
	1    William B. Maclay
	2    William B. Maclay
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT name
		   FROM people
		   WHERE (age >= 35
		          AND age <= 36) INTERSECT
		     SELECT name
		     FROM people)
		ORDER BY name

	                  name
	0  John B. HaskinrHFmk
	1    William B. Maclay
Wrong output for fuzzied solution in instance spider/debate/0007 (1778)
	EXPECTED OUTPUT ====

		SELECT Party,
		       COUNT(*)
		FROM people
		GROUP BY Party

	                           party  count(*)
	0                      Republica         1
	1                RepublicanAODHS         1
	2               ez7RepublicanBYP         1
	3  o6tAnti-Lecompton DemocratXWA         1
	4                     Republican         4
	ACTUAL OUTPUT ====

		
		SELECT party,
		       n AS count___
		FROM
		  (SELECT party,
		          COUNT() AS n
		   FROM
		     (SELECT district,
		             party,
		             COUNT() AS n
		      FROM people
		      GROUP BY district,
		               party)
		   GROUP BY party)
		ORDER BY party

	                           party  count___
	0                      Republica         1
	1                RepublicanAODHS         1
	2               ez7RepublicanBYP         1
	3  o6tAnti-Lecompton DemocratXWA         1
	4                     Republican         3
Wrong output for fuzzied solution in instance spider/debate/0014 (1780)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM debate_people AS T1
		JOIN people AS T2 ON T1.Negative = T2.People_ID
		GROUP BY T2.Name
		HAVING COUNT(*) >= 2

	                name
	0      John Cochrane
	1  William B. Maclay
	2      aniel Sickles
	3   illiam B. Maclay
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT name,
		          party,
		          COUNT() AS n
		   FROM
		     (SELECT people_id,
		             district,
		             name,
		             party,
		             age,
		             debate_id,
		             affirmative,
		             if_affirmative_win,
		             people_id AS negative
		      FROM
		        (SELECT LHS.people_id AS people_id,
		                LHS.district AS district,
		                LHS.name AS name,
		                LHS.party AS party,
		                LHS.age AS age,
		                RHS.debate_id AS debate_id,
		                RHS.affirmative AS affirmative,
		                RHS.if_affirmative_win AS if_affirmative_win
		         FROM people AS LHS
		         INNER JOIN debate_people AS RHS ON (LHS.people_id = RHS.negative)))
		   GROUP BY name,
		            party)
		WHERE (n >= 2)
		ORDER BY name

	                name
	0      John Cochrane
	1      John Cochrane
	2  William B. Maclay
	3      aniel Sickles
	4   illiam B. Maclay
No solution for instance spider/activity_1/0042 (1784)
Wrong output for fuzzied solution in instance spider/activity_1/0036 (1788)
	EXPECTED OUTPUT ====

		SELECT T1.activity_name
		FROM Activity AS T1
		JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID
		GROUP BY T1.actID
		ORDER BY count(*) DESC
		LIMIT 1

	  activity_name
	0  rUoSoccerr0(
	ACTUAL OUTPUT ====

		
		SELECT activity_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.actid AS actid,
		                LHS.activity_name AS activity_name,
		                RHS.n AS n
		         FROM activity AS LHS
		         INNER JOIN
		           (SELECT actid,
		                   COUNT() AS n
		            FROM faculty_participates_in
		            GROUP BY actid) AS RHS ON (LHS.actid = RHS.actid))
		      ORDER BY n DESC)
		   LIMIT 1)

	        activity_name
	0  Accordion Ensemble
No solution for instance spider/activity_1/0039 (1791)
No solution for instance spider/activity_1/0022 (1795)
Wrong output for fuzzied solution in instance spider/activity_1/0012 (1800)
	EXPECTED OUTPUT ====

		SELECT building
		FROM Faculty
		GROUP BY building
		ORDER BY count(*) DESC
		LIMIT 1

	  building
	0   Barton
	ACTUAL OUTPUT ====

		
		SELECT building
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT building,
		                phone,
		                COUNT() AS n
		         FROM faculty
		         GROUP BY building,
		                  phone)
		      ORDER BY phone DESC)
		   LIMIT 1)

	      building
	0  Barton2BJT(
Wrong output for fuzzied solution in instance spider/activity_1/0026 (1801)
	EXPECTED OUTPUT ====

		SELECT activity_name
		FROM Activity

	            activity_name
	0          Extreme Canast
	1         Extreme Canasta
	2         Extreme Canasta
	3            Proselytizin
	4           Proselytizing
	5           Proselytizing
	6           Proselytizing
	7           Proselytizing
	8           Proselytizing
	9      ProselytizingEun2W
	10     ProselytizingT(7tm
	11   eOAwMExtreme Canasta
	12   iiO5oExtreme Canasta
	13  kIUExtreme CanastaLo5
	14  nPfExtreme Canasta jW
	15         xtreme Canasta
	16         xtreme Canasta
	ACTUAL OUTPUT ====

		
		SELECT activity_name
		FROM
		  (SELECT activity_name
		   FROM activity INTERSECT SELECT activity_name
		   FROM activity)
		ORDER BY activity_name

	            activity_name
	0          Extreme Canast
	1         Extreme Canasta
	2            Proselytizin
	3           Proselytizing
	4      ProselytizingEun2W
	5      ProselytizingT(7tm
	6    eOAwMExtreme Canasta
	7    iiO5oExtreme Canasta
	8   kIUExtreme CanastaLo5
	9   nPfExtreme Canasta jW
	10         xtreme Canasta
Wrong output for fuzzied solution in instance spider/activity_1/0016 (1804)
	EXPECTED OUTPUT ====

		SELECT rank
		FROM Faculty
		GROUP BY rank
		ORDER BY count(*) ASC
		LIMIT 1

	            rank
	0  AsstProf(cGBe
	ACTUAL OUTPUT ====

		
		SELECT rank
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT rank,
		                sex,
		                COUNT() AS n
		         FROM faculty
		         GROUP BY rank,
		                  sex)
		      ORDER BY n)
		   LIMIT 1)

	       rank
	0  AsstProf
Wrong output for fuzzied solution in instance spider/activity_1/0041 (1807)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.lname
		FROM Faculty AS T1
		JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID
		JOIN activity AS T3 ON T2.actid = T2.actid
		WHERE T3.activity_name = 'Canoeing'
		  OR T3.activity_name = 'Kayaking'

	Empty DataFrame
	Columns: [lname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `lname`
		FROM
		  (SELECT `LHS`.`facid` AS `facid`,
		          `LHS`.`actid` AS `actid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`rank` AS `rank`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`phone` AS `phone`,
		          `LHS`.`room` AS `room`,
		          `LHS`.`building` AS `building`,
		          `RHS`.`activity_name` AS `activity_name`
		   FROM
		     (SELECT `LHS`.`facid` AS `facid`,
		             `LHS`.`actid` AS `actid`,
		             `RHS`.`lname` AS `lname`,
		             `RHS`.`fname` AS `fname`,
		             `RHS`.`rank` AS `rank`,
		             `RHS`.`sex` AS `sex`,
		             `RHS`.`phone` AS `phone`,
		             `RHS`.`room` AS `room`,
		             `RHS`.`building` AS `building`
		      FROM `faculty_participates_in` AS `LHS`
		      INNER JOIN `faculty` AS `RHS` ON (`LHS`.`facid` = `RHS`.`facid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `activity`
		      WHERE (`activity_name` != 'Canoeing'
		             OR `activity_name` != 'Kayaking')) AS RHS ON (LHS.actid = RHS.actid))
		ORDER BY lname

	               lname
	0       Cauwenberghs
	1   DZUn0eEUGw)rrW8h
	2         DaH5dZJIJM
	3      LegendreK0ZZs
	4             Taylor
	5              Us1vU
	6        XJDsT69(JNU
	7        auwenberghs
	8              aylor
	9        b5osoTaylor
	10      bbfTaylorVr(
	11  detlEP(aXueI54ce
	12        dupi3HAVMB
	13       zf8ZjTaylor
No solution for instance spider/activity_1/0035 (1808)
Wrong output for fuzzied solution in instance spider/activity_1/0020 (1809)
	EXPECTED OUTPUT ====

		SELECT T2.fname,
		       T2.lname
		FROM Faculty AS T1
		JOIN Student AS T2 ON T1.FacID = T2.advisor
		WHERE T1.fname = "Michael"
		  AND T1.lname = "Goodrich"

	Empty DataFrame
	Columns: [fname, lname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `fname`,
		       `lname`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `RHS`.`lname` AS `lname_other`,
		          `RHS`.`fname` AS `fname_other`,
		          `RHS`.`rank` AS `rank`,
		          `RHS`.`sex` AS `sex_other`,
		          `RHS`.`phone` AS `phone`,
		          `RHS`.`room` AS `room`,
		          `RHS`.`building` AS `building`
		   FROM `student` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `faculty`
		      WHERE (`fname` = 'Michael'
		             OR `lname` = 'Goodrich')) AS RHS ON (LHS.advisor = RHS.facid))
		ORDER BY fname

	           fname      lname
	0     MtGJ5Epeq(   k4gon(5P
	1           andy  y)qLee8hL
	2  mZ5MichaelYjh     BXe5B)
Wrong output for fuzzied solution in instance spider/activity_1/0007 (1811)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Faculty
		WHERE Sex = 'F'
		  AND Rank = "Professor"

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `rank`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM `faculty`
		      WHERE (`sex` = 'F'
		             AND `rank` = 'Professor')))
		ORDER BY count___

	   count___
	0         1
No solution for instance spider/activity_1/0024 (1813)
Wrong output for fuzzied solution in instance spider/activity_1/0021 (1814)
	EXPECTED OUTPUT ====

		SELECT T1.FacID,
		       count(*)
		FROM Faculty AS T1
		JOIN Student AS T2 ON T1.FacID = T2.advisor
		GROUP BY T1.FacID

	Empty DataFrame
	Columns: [facid, count(*)]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT advisor AS facid,
		       n AS count___
		FROM
		  (SELECT advisor,
		          room,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.stuid AS stuid,
		             LHS.lname AS lname,
		             LHS.fname AS fname,
		             LHS.age AS age,
		             LHS.sex AS sex,
		             LHS.major AS major,
		             LHS.advisor AS advisor,
		             LHS.city_code AS city_code,
		             RHS.facid AS facid,
		             RHS.rank AS rank,
		             RHS.phone AS phone,
		             RHS.room AS room,
		             RHS.building AS building
		      FROM student AS LHS
		      LEFT JOIN faculty AS RHS ON (LHS.lname = RHS.lname
		                                      AND LHS.fname = RHS.fname
		                                      AND LHS.sex = RHS.sex))
		   GROUP BY advisor,
		            room)
		ORDER BY facid

	   facid  count___
	0   1120         1
	1   1121         1
	2   1123         1
	3   2190         1
	4   2192         1
	5   9170         1
	6   1122         2
	7   2191         2
	8   9171         2
	9   9172         6
Wrong output for fuzzied solution in instance spider/activity_1/0023 (1815)
	EXPECTED OUTPUT ====

		SELECT T1.fname,
		       T1.lname
		FROM Faculty AS T1
		JOIN Student AS T2 ON T1.FacID = T2.advisor
		GROUP BY T1.FacID
		ORDER BY count(*) DESC
		LIMIT 1

	Empty DataFrame
	Columns: [fname, lname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT fname,
		       lname
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM
		           (SELECT facid,
		                   lname,
		                   fname,
		                   rank,
		                   sex,
		                   phone,
		                   room,
		                   building,
		                   COUNT(*) OVER () AS n
		            FROM faculty) AS LHS
		         WHERE NOT EXISTS
		             (SELECT 1
		              FROM student AS RHS
		              WHERE (LHS.lname = RHS.lname
		                     AND LHS.sex = RHS.sex) ))
		      ORDER BY lname DESC)
		   LIMIT 1)

	    fname    lname
	0  Subodh  werbuch
Wrong output for fuzzied solution in instance spider/activity_1/0043 (1817)
	EXPECTED OUTPUT ====

		SELECT T1.lname
		FROM Faculty AS T1
		JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID
		JOIN activity AS T3 ON T2.actid = T2.actid
		WHERE T3.activity_name = 'Canoeing' INTERSECT
		  SELECT T1.lname
		  FROM Faculty AS T1
		  JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID
		  JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Kayaking'

	Empty DataFrame
	Columns: [lname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `lname`
		FROM
		  (SELECT `LHS`.`facid` AS `facid`,
		          `LHS`.`actid` AS `actid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`rank` AS `rank`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`phone` AS `phone`,
		          `LHS`.`room` AS `room`,
		          `LHS`.`building` AS `building`,
		          `RHS`.`activity_name` AS `activity_name`
		   FROM
		     (SELECT `LHS`.`facid` AS `facid`,
		             `LHS`.`actid` AS `actid`,
		             `RHS`.`lname` AS `lname`,
		             `RHS`.`fname` AS `fname`,
		             `RHS`.`rank` AS `rank`,
		             `RHS`.`sex` AS `sex`,
		             `RHS`.`phone` AS `phone`,
		             `RHS`.`room` AS `room`,
		             `RHS`.`building` AS `building`
		      FROM `faculty_participates_in` AS `LHS`
		      INNER JOIN `faculty` AS `RHS` ON (`LHS`.`facid` = `RHS`.`facid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `activity`
		      WHERE (`activity_name` != 'Canoeing'
		             OR `activity_name` != 'Kayaking')) AS RHS ON (LHS.actid = RHS.actid))
		ORDER BY lname

	            lname
	0         Andreou
	1    Andreou3UNZE
	2         Davidso
	3        Davidson
	4  HQCDavidsonHFd
	5         avidson
Wrong output for fuzzied solution in instance spider/activity_1/0009 (1819)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Faculty
		WHERE Rank = "Professor"
		  AND building = "NEB"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `building`,
		          `sex`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `faculty`
		      WHERE (`rank` = 'Professor'
		             AND `building` = 'NEB'))
		   GROUP BY building,
		            sex)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/activity_1/0025 (1820)
Wrong output for fuzzied solution in instance spider/activity_1/0044 (1824)
	EXPECTED OUTPUT ====

		SELECT T1.stuid
		FROM participates_in AS T1
		JOIN activity AS T2 ON T2.actid = T2.actid
		WHERE T2.activity_name = 'Canoeing' INTERSECT
		  SELECT T1.stuid
		  FROM participates_in AS T1
		  JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Kayaking'

	Empty DataFrame
	Columns: [stuid]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `stuid`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`actid` AS `actid`,
		          `RHS`.`activity_name` AS `activity_name`
		   FROM `participates_in` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `activity`
		      WHERE (`activity_name` = 'Canoeing'
		             OR `activity_name` != 'Kayaking')) AS RHS ON (LHS.actid = RHS.actid))
		ORDER BY stuid

	   stuid
	0   1016
	1   1020
	2   1022
	3   1024
	4   1030
	5   1032
Wrong output for fuzzied solution in instance spider/activity_1/0040 (1825)
	EXPECTED OUTPUT ====

		SELECT T1.activity_name
		FROM Activity AS T1
		JOIN Participates_in AS T2 ON T1.actID = T2.actID
		GROUP BY T1.actID
		ORDER BY count(*) DESC
		LIMIT 1

	        activity_name
	0  Accordion Ensemble
	ACTUAL OUTPUT ====

		
		SELECT activity_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.actid AS actid,
		                LHS.activity_name AS activity_name,
		                LHS.stuid AS stuid,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.actid AS actid,
		                   LHS.activity_name AS activity_name,
		                   RHS.stuid AS stuid
		            FROM activity AS LHS
		            INNER JOIN participates_in AS RHS ON (LHS.actid = RHS.actid)) AS LHS
		         INNER JOIN
		           (SELECT actid,
		                   COUNT() AS n
		            FROM participates_in
		            GROUP BY actid) AS RHS ON (LHS.actid = RHS.actid))
		      ORDER BY n DESC)
		   LIMIT 1)

	              activity_name
	0  RElAccordion Ensemblenic
Wrong output for fuzzied solution in instance spider/activity_1/0031 (1827)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Faculty AS T1
		JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID
		WHERE T1.fname = "Mark"
		  AND T1.lname = "Giuliano"

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT *
		   FROM `faculty_participates_in` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `faculty`
		           WHERE (`fname` != 'Mark'
		                  AND `lname` != 'Giuliano')) AS RHS
		        WHERE (LHS.facid = RHS.facid) ))
		ORDER BY count___

	   count___
	0        37
Wrong output for base solution in instance spider/gymnast/0002 (1828)
	EXPECTED OUTPUT ====

	   total_points
	0        57.374
	1        57.398
	2        57.424
	3        57.436
	4        57.649
	5        57.924
	6        58.061
	ACTUAL OUTPUT ====

		SELECT Total_Points
		FROM gymnast
		ORDER BY Total_Points DESC

	   total_points
	0        57.374
	1        57.398
	2        57.424
	3        57.436
	4        57.649
	5        57.924
	6        58.061
Wrong output for ground truth in instance spider/gymnast/0002 (1828)
Wrong output for fuzzied solution in instance spider/gymnast/0017 (1829)
	EXPECTED OUTPUT ====

		SELECT DISTINCT Hometown
		FROM people
		EXCEPT
		SELECT DISTINCT T2.Hometown
		FROM gymnast AS T1
		JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID

	                  hometown
	0        69mzoNvWZ1FOBivzU
	1                   9qkM4d
	2    DqVZ2rQ0IZCQy81UgCCA0
	3  G97rQQNlz5iZm7i3tmf0Dx7
	4                     Miam
	5             Santo Doming
	6             anto Domingo
	7                     iami
	ACTUAL OUTPUT ====

		
		SELECT hometown
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT gymnast_id,
		                  floor_exercise_points,
		                  pommel_horse_points,
		                  rings_points,
		                  vault_points,
		                  parallel_bars_points,
		                  horizontal_bar_points,
		                  total_points,
		                  name,
		                  age,
		                  height,
		                  hometown,
		                  gymnast_id AS people_id
		           FROM
		             (SELECT LHS.gymnast_id AS gymnast_id,
		                     LHS.floor_exercise_points AS floor_exercise_points,
		                     LHS.pommel_horse_points AS pommel_horse_points,
		                     LHS.rings_points AS rings_points,
		                     LHS.vault_points AS vault_points,
		                     LHS.parallel_bars_points AS parallel_bars_points,
		                     LHS.horizontal_bar_points AS horizontal_bar_points,
		                     LHS.total_points AS total_points,
		                     RHS.name AS name,
		                     RHS.age AS age,
		                     RHS.height AS height,
		                     RHS.hometown AS hometown
		              FROM gymnast AS LHS
		              INNER JOIN people AS RHS ON (LHS.gymnast_id = RHS.people_id))) AS RHS
		        WHERE (LHS.hometown = RHS.hometown) ))
		ORDER BY hometown

	                  hometown
	0        69mzoNvWZ1FOBivzU
	1                   9qkM4d
	2    DqVZ2rQ0IZCQy81UgCCA0
	3  G97rQQNlz5iZm7i3tmf0Dx7
	4                     Miam
	5                     Miam
	6             Santo Doming
	7             anto Domingo
	8                     iami
Wrong output for base solution in instance spider/gymnast/0003 (1831)
	EXPECTED OUTPUT ====

	   total_points
	0        57.374
	1        57.398
	2        57.424
	3        57.436
	4        57.649
	5        57.924
	6        58.061
	ACTUAL OUTPUT ====

		SELECT Total_Points
		FROM gymnast
		ORDER BY Floor_Exercise_Points DESC

	   total_points
	0        57.374
	1        57.398
	2        57.424
	3        57.436
	4        57.649
	5        57.924
	6        58.061
Wrong output for ground truth in instance spider/gymnast/0003 (1831)
No solution for instance spider/gymnast/0015 (1836)
Wrong output for fuzzied solution in instance spider/gymnast/0018 (1839)
	EXPECTED OUTPUT ====

		SELECT Hometown
		FROM people
		WHERE Age > 23 INTERSECT
		  SELECT Hometown
		  FROM people WHERE Age < 20

	Empty DataFrame
	Columns: [hometown]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT hometown
		FROM
		  (SELECT hometown
		   FROM people
		   WHERE (age <= 23.0
		          AND age = 20.0) INTERSECT
		     SELECT hometown
		     FROM people)
		ORDER BY hometown

	                          hometown
	0        Santiago de los Caballero
	1       Santiago de los Caballeros
	2  Santiago de los Caballerosb3fAj
Error while executing solution for instance spider/gymnast/0019 (1841)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT hometown) OVER () AS count_distinct_hometown_
FROM
  (SELECT age,
          hometown,
          COUNT() AS n
   FROM people
   GROUP BY age,
            hometown)
ORDER BY count_distinct_hometown_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/gymnast/0014 (1844)
	EXPECTED OUTPUT ====

		SELECT T2.Hometown
		FROM gymnast AS T1
		JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID
		GROUP BY T2.Hometown
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  hometown
	0    Miami
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT hometown
		FROM
		  (SELECT LHS.people_id AS people_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.height AS height,
		          LHS.hometown AS hometown,
		          RHS.parallel_bars_points AS parallel_bars_points
		   FROM people AS LHS
		   INNER JOIN
		     (SELECT parallel_bars_points,
		             COUNT() AS n
		      FROM gymnast
		      GROUP BY parallel_bars_points) AS RHS ON (LHS.people_id = RHS.n))
		ORDER BY hometown

	Empty DataFrame
	Columns: [hometown]
	Index: []
Wrong output for fuzzied solution in instance spider/gymnast/0011 (1846)
	EXPECTED OUTPUT ====

		SELECT avg(T2.Age)
		FROM gymnast AS T1
		JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID

	   avg(t2.age)
	0        20.72
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(age) OVER () AS avg_t2_age_
		FROM
		  (SELECT gymnast_id,
		          floor_exercise_points,
		          pommel_horse_points,
		          rings_points,
		          vault_points,
		          parallel_bars_points,
		          horizontal_bar_points,
		          total_points,
		          name,
		          age,
		          height,
		          hometown,
		          gymnast_id AS people_id
		   FROM
		     (SELECT LHS.gymnast_id AS gymnast_id,
		             LHS.floor_exercise_points AS floor_exercise_points,
		             LHS.pommel_horse_points AS pommel_horse_points,
		             LHS.rings_points AS rings_points,
		             LHS.vault_points AS vault_points,
		             LHS.parallel_bars_points AS parallel_bars_points,
		             LHS.horizontal_bar_points AS horizontal_bar_points,
		             LHS.total_points AS total_points,
		             RHS.name AS name,
		             RHS.age AS age,
		             RHS.height AS height,
		             RHS.hometown AS hometown
		      FROM gymnast AS LHS
		      INNER JOIN people AS RHS ON (LHS.gymnast_id = RHS.people_id)))
		ORDER BY avg_t2_age_

	   avg_t2_age_
	0        20.72
Wrong output for base solution in instance spider/gymnast/0010 (1847)
	EXPECTED OUTPUT ====

	   total_points
	0        57.649
	ACTUAL OUTPUT ====

		SELECT T1.Total_Points
		FROM gymnast AS T1
		JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID
		ORDER BY T2.Age ASC
		LIMIT 1

	   total_points
	0        57.649
Wrong output for ground truth in instance spider/gymnast/0010 (1847)
Error while executing solution for instance spider/cre_Theme_park/0042 (1848)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT tourist_id) OVER () AS count___
FROM
  (SELECT *
   FROM visitors AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM visits AS RHS
        WHERE (LHS.tourist_id = RHS.tourist_id) ))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0033 (1849)
	EXPECTED OUTPUT ====

		SELECT How_to_Get_There,
		       COUNT(*)
		FROM Tourist_Attractions
		GROUP BY How_to_Get_There

	   how_to_get_there  count(*)
	0         )PMbusL5q         1
	1         1gPq)walk         1
	2         O69busXpc         1
	3          busoyteZ         1
	4            huttle         1
	5         m32Ifwalk         1
	6         v)gbusFf)         1
	7              walk         1
	8                bu         3
	9           shuttle         3
	10              bus         4
	ACTUAL OUTPUT ====

		
		SELECT how_to_get_there,
		       n AS count___
		FROM
		  (SELECT description,
		          how_to_get_there,
		          COUNT() AS n
		   FROM tourist_attractions
		   GROUP BY description,
		            how_to_get_there)
		ORDER BY how_to_get_there

	   how_to_get_there  count___
	0         )PMbusL5q         1
	1         1gPq)walk         1
	2         O69busXpc         1
	3                bu         1
	4                bu         1
	5                bu         1
	6               bus         1
	7               bus         1
	8               bus         1
	9               bus         1
	10         busoyteZ         1
	11           huttle         1
	12        m32Ifwalk         1
	13          shuttle         1
	14          shuttle         1
	15          shuttle         1
	16        v)gbusFf)         1
	17             walk         1
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0037 (1850)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM Locations AS T1
		JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID
		WHERE T1.Address = "660 Shea Crescent"
		  OR T2.How_to_Get_There = "walk"

	                      name
	0                US museum
	1  c5Kexploration trialJ2T
	2            film festival
	3            film festival
	4       film festival8(tVR
	5        yZC2JYdvOL4(GvRla
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,
		          `LHS`.`attraction_type_code` AS `attraction_type_code`,
		          `LHS`.`location_id` AS `location_id`,
		          `LHS`.`how_to_get_there` AS `how_to_get_there`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`description` AS `description`,
		          `LHS`.`opening_hours` AS `opening_hours`,
		          `LHS`.`other_details` AS `other_details`,
		          `RHS`.`location_name` AS `location_name`,
		          `RHS`.`address` AS `address`
		   FROM `tourist_attractions` AS `LHS`
		   LEFT JOIN `locations` AS `RHS` ON (`LHS`.`location_id` = `RHS`.`location_id`
		                                         AND `LHS`.`other_details` = `RHS`.`other_details`))
		WHERE (`address` != '660 Shea Crescent'
		       OR `how_to_get_there` = 'walk')
		ORDER BY name

	                      name
	0     Cl9Y4)fPLSTKV)sWgAiP
	1  c5Kexploration trialJ2T
	2            film festival
	3            film festival
	4       film festival8(tVR
	5        yZC2JYdvOL4(GvRla
Error while executing solution for instance spider/cre_Theme_park/0002 (1851)

'<' not supported between instances of 'str' and 'float'
Error while checking ground truth in instance spider/cre_Theme_park/0002 (1851)
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0039 (1855)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM Locations AS T1
		JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID
		WHERE T1.Address = "254 Ottilie Junction"
		  OR T2.How_to_Get_There = "bus"

	                      name
	0         7GgNSzyW5CSZ4oqf
	1              DhrwtgUK8uE
	2                 S museum
	3          SHAfun gamesvoo
	4  c5Kexploration trialJ2T
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,
		          `LHS`.`attraction_type_code` AS `attraction_type_code`,
		          `LHS`.`location_id` AS `location_id`,
		          `LHS`.`how_to_get_there` AS `how_to_get_there`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`description` AS `description`,
		          `LHS`.`opening_hours` AS `opening_hours`,
		          `LHS`.`other_details` AS `other_details`,
		          `RHS`.`location_name` AS `location_name`,
		          `RHS`.`address` AS `address`
		   FROM `tourist_attractions` AS `LHS`
		   LEFT JOIN `locations` AS `RHS` ON (`LHS`.`location_id` = `RHS`.`location_id`
		                                         AND `LHS`.`other_details` = `RHS`.`other_details`))
		WHERE (`address` = '254 Ottilie Junction'
		       OR `how_to_get_there` = 'bus')
		ORDER BY name

	               name
	0  7GgNSzyW5CSZ4oqf
	1   SHAfun gamesvoo
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0003 (1857)
	EXPECTED OUTPUT ====

		SELECT DISTINCT Location_Name
		FROM LOCATIONS

	            location_name
	0           Astro Orbiter
	1      Astro OrbiterFdL8(
	2      Astro Orbiterzk2jW
	3             Butterflies
	4              Coral Reef
	5             Coral Reefs
	6        Coral ReefskkCRX
	7         Fossil Fun Game
	8        Fossil Fun Games
	9            Soak Station
	10  YsvHmFossil Fun Games
	11  fDBIEFossil Fun Games
	12    ocaAstro OrbiterV)x
	13             utterflies
	14      zhYButterfliesAB2
	ACTUAL OUTPUT ====

		
		SELECT location_name
		FROM locations
		ORDER BY location_name

	            location_name
	0           Astro Orbiter
	1      Astro OrbiterFdL8(
	2      Astro Orbiterzk2jW
	3             Butterflies
	4             Butterflies
	5             Butterflies
	6             Butterflies
	7              Coral Reef
	8             Coral Reefs
	9             Coral Reefs
	10            Coral Reefs
	11       Coral ReefskkCRX
	12        Fossil Fun Game
	13       Fossil Fun Games
	14       Fossil Fun Games
	15           Soak Station
	16           Soak Station
	17           Soak Station
	18           Soak Station
	19           Soak Station
	20  YsvHmFossil Fun Games
	21  fDBIEFossil Fun Games
	22    ocaAstro OrbiterV)x
	23             utterflies
	24      zhYButterfliesAB2
Wrong output for base solution in instance spider/cre_Theme_park/0027 (1858)
	EXPECTED OUTPUT ====

	  pets_allowed_yn  avg_price_range_
	0             NaN      9.892957e+05
	1               1      8.142665e+07
	ACTUAL OUTPUT ====

		SELECT pets_allowed_yn,
		       avg(price_range)
		FROM HOTELS
		GROUP BY pets_allowed_yn

	  pets_allowed_yn  avg(price_range)
	0                      9.892957e+05
	1               1      8.142665e+07
Wrong output for ground truth in instance spider/cre_Theme_park/0027 (1858)
Wrong output for base solution in instance spider/cre_Theme_park/0022 (1859)
	EXPECTED OUTPUT ====

		SELECT T1.Market_Details
		FROM Street_Markets AS T1
		JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID = T2.Tourist_Attraction_ID
		WHERE T2.How_to_Get_There = "walk"
		  OR T2.How_to_Get_There = "bus"

	     market_details
	0          Broadway
	1  Fish Farm Market
	ACTUAL OUTPUT ====

		
		SELECT `market_details`
		FROM
		  (SELECT `LHS`.`market_id` AS `market_id`,
		          `LHS`.`market_details` AS `market_details`,
		          `RHS`.`tourist_attraction_id` AS `tourist_attraction_id`,
		          `RHS`.`attraction_type_code` AS `attraction_type_code`,
		          `RHS`.`location_id` AS `location_id`,
		          `RHS`.`how_to_get_there` AS `how_to_get_there`,
		          `RHS`.`name` AS `name`,
		          `RHS`.`description` AS `description`,
		          `RHS`.`opening_hours` AS `opening_hours`,
		          `RHS`.`other_details` AS `other_details`
		   FROM `street_markets` AS `LHS`
		   CROSS JOIN
		     (SELECT *
		      FROM `tourist_attractions`
		      WHERE (`how_to_get_there` = 'walk'
		             AND `how_to_get_there` = 'bus')) AS RHS)
		ORDER BY market_details

	Empty DataFrame
	Columns: [market_details]
	Index: []
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0013 (1861)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM TOURIST_ATTRACTIONS
		WHERE How_to_Get_There = "bus"

	              name
	0        K gallery
	1        UK galler
	2       UK gallery
	3  Y7Gfun gamesVd7
	4  ZH(b06YEYJhWgj)
	5  ZH(b06YEYJhWgj)
	6        fun games
	7  presidents hall
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `name`
		   FROM `tourist_attractions`
		   WHERE (`how_to_get_there` = 'bus') INTERSECT
		     SELECT name
		     FROM tourist_attractions)
		ORDER BY name

	              name
	0        K gallery
	1        UK galler
	2       UK gallery
	3  Y7Gfun gamesVd7
	4  ZH(b06YEYJhWgj)
	5        fun games
	6  presidents hall
Error while executing solution for instance spider/cre_Theme_park/0006 (1862)

'<' not supported between instances of 'str' and 'float'
Error while checking ground truth in instance spider/cre_Theme_park/0006 (1862)
Wrong output for base solution in instance spider/cre_Theme_park/0026 (1865)
	EXPECTED OUTPUT ====

	  star_rating_code  avg_price_range_
	0                1      1.272506e+04
	1                2      9.660649e+04
	2                3      2.763278e+06
	3                4      1.900749e+07
	4                5      1.135099e+08
	ACTUAL OUTPUT ====

		SELECT star_rating_code,
		       avg(price_range)
		FROM HOTELS
		GROUP BY star_rating_code

	  star_rating_code  avg(price_range)
	0                1      1.272506e+04
	1                2      9.660649e+04
	2                3      2.763278e+06
	3                4      1.900749e+07
	4                5      1.135099e+08
Wrong output for ground truth in instance spider/cre_Theme_park/0026 (1865)
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0015 (1866)
	EXPECTED OUTPUT ====

		SELECT T2.star_rating_description
		FROM HOTELS AS T1
		JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code = T2.star_rating_code
		WHERE T1.price_range > 10000

	  star_rating_description
	0                    star
	1               starpiqL 
	2               stars(oUH
	ACTUAL OUTPUT ====

		
		SELECT star_rating_description
		FROM
		  (SELECT LHS.hotel_id AS hotel_id,
		          LHS.star_rating_code AS star_rating_code,
		          LHS.pets_allowed_yn AS pets_allowed_yn,
		          LHS.price_range AS price_range,
		          LHS.other_hotel_details AS other_hotel_details,
		          RHS.star_rating_code AS star_rating_code_other,
		          RHS.star_rating_description AS star_rating_description,
		          RHS.hotel_id AS hotel_id_other,
		          RHS.pets_allowed_yn AS pets_allowed_yn_other,
		          RHS.price_range AS price_range_other,
		          RHS.other_hotel_details AS other_hotel_details_other
		   FROM
		     (SELECT *
		      FROM hotels
		      WHERE (price_range < 10000.0)) AS LHS
		   CROSS JOIN
		     (SELECT LHS.star_rating_code AS star_rating_code,
		             LHS.star_rating_description AS star_rating_description,
		             RHS.hotel_id AS hotel_id,
		             RHS.pets_allowed_yn AS pets_allowed_yn,
		             RHS.price_range AS price_range,
		             RHS.other_hotel_details AS other_hotel_details
		      FROM ref_hotel_star_ratings AS LHS
		      INNER JOIN hotels AS RHS ON (LHS.star_rating_code = RHS.star_rating_code)) AS RHS)
		WHERE (price_range >= price_range_other)
		ORDER BY star_rating_description

	   star_rating_description
	0                     star
	1                     star
	2                     star
	3                     star
	4                     star
	5                     star
	6                     star
	7                     star
	8                     star
	9                     star
	10                    star
	11                    star
	12                    star
	13                    star
	14                    star
	15                    star
	16                    star
	17               star49XLS
	18               star49XLS
	19               star49XLS
	20               star49XLS
	21               star49XLS
	22               star49XLS
No solution for instance spider/cre_Theme_park/0016 (1868)
No solution for instance spider/cre_Theme_park/0032 (1869)
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0041 (1871)
	EXPECTED OUTPUT ====

		SELECT T1.Name
		FROM Tourist_Attractions AS T1
		JOIN VISITORS AS T2
		JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID
		AND T2.Tourist_ID = T3.Tourist_ID
		WHERE T2.Tourist_Details = "Alison"
		EXCEPT
		SELECT T1.Name
		FROM Tourist_Attractions AS T1
		JOIN VISITORS AS T2
		JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID
		AND T2.Tourist_ID = T3.Tourist_ID
		WHERE T2.Tourist_Details = "Rosalind"

	                       name
	0         )cI4fWIu3JQryLi6s
	1            Reu(pfun games
	2                  S museum
	3                UK gallery
	4                 US museum
	5          UazUK galleryoZ(
	6     impressions de France
	7  kh1vZqIiFeSGJ bj7Mf0mlpy
	8            yzDn4PbOq4sN8D
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`tourist_id` AS `tourist_id`,
		          `LHS`.`tourist_details` AS `tourist_details`,
		          `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,
		          `LHS`.`attraction_type_code` AS `attraction_type_code`,
		          `LHS`.`location_id` AS `location_id`,
		          `LHS`.`how_to_get_there` AS `how_to_get_there`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`description` AS `description`,
		          `LHS`.`opening_hours` AS `opening_hours`,
		          `LHS`.`other_details` AS `other_details`,
		          `LHS`.`visit_id` AS `visit_id`,
		          `LHS`.`visit_date` AS `visit_date`,
		          `LHS`.`visit_details` AS `visit_details`
		   FROM
		     (SELECT `LHS`.`tourist_id` AS `tourist_id`,
		             `LHS`.`tourist_details` AS `tourist_details`,
		             `LHS`.`tourist_attraction_id` AS `tourist_attraction_id`,
		             `LHS`.`attraction_type_code` AS `attraction_type_code`,
		             `LHS`.`location_id` AS `location_id`,
		             `LHS`.`how_to_get_there` AS `how_to_get_there`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`description` AS `description`,
		             `LHS`.`opening_hours` AS `opening_hours`,
		             `LHS`.`other_details` AS `other_details`,
		             `RHS`.`visit_id` AS `visit_id`,
		             `RHS`.`visit_date` AS `visit_date`,
		             `RHS`.`visit_details` AS `visit_details`
		      FROM
		        (SELECT `LHS`.`tourist_id` AS `tourist_id`,
		                `LHS`.`tourist_details` AS `tourist_details`,
		                `RHS`.`tourist_attraction_id` AS `tourist_attraction_id`,
		                `RHS`.`attraction_type_code` AS `attraction_type_code`,
		                `RHS`.`location_id` AS `location_id`,
		                `RHS`.`how_to_get_there` AS `how_to_get_there`,
		                `RHS`.`name` AS `name`,
		                `RHS`.`description` AS `description`,
		                `RHS`.`opening_hours` AS `opening_hours`,
		                `RHS`.`other_details` AS `other_details`
		         FROM `visitors` AS `LHS`
		         CROSS JOIN `tourist_attractions` AS `RHS`) AS `LHS`
		      INNER JOIN `visits` AS `RHS` ON (`LHS`.`tourist_id` = `RHS`.`tourist_id`
		                                          AND `LHS`.`tourist_attraction_id` = `RHS`.`tourist_attraction_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `visitors`
		      WHERE (`tourist_details` = 'Alison'
		             AND `tourist_details` != 'Rosalind')) AS RHS ON (LHS.tourist_id = RHS.tourist_id
		                                                              AND LHS.tourist_details = RHS.tourist_details))
		ORDER BY name

	                        name
	0          )cI4fWIu3JQryLi6s
	1             Reu(pfun games
	2             Reu(pfun games
	3                   S museum
	4                   S museum
	5                 UK gallery
	6                  US museum
	7           UazUK galleryoZ(
	8      impressions de France
	9   kh1vZqIiFeSGJ bj7Mf0mlpy
	10            yzDn4PbOq4sN8D
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0019 (1874)
	EXPECTED OUTPUT ====

		SELECT T1.Royal_Family_Details,
		       T2.How_to_Get_There
		FROM ROYAL_FAMILY AS T1
		JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID = T2.Tourist_Attraction_ID

	        royal_family_details how_to_get_there
	0           XHdxLJ0jThV1o4S6        )PMbusL5q
	1        dA1u(mmGWB5j0W1K76W        1gPq)walk
	2    0FGyEcZkwAaGs5GjtCJvDyl        O69busXpc
	3                 9L6)UvOQZM               bu
	4                      k2 mK               bu
	5                   lt)FUJ9V               bu
	6                      KCqta              bus
	7                WHu6XNLUDfW              bus
	8                         fQ              bus
	9       wd8eA6VHg7WXW)nj8Lf4              bus
	10      kbaCAoPVTLjVtgi6HSAw         busoyteZ
	11     jLgCbXHdxLJ0jThV1o4S6           huttle
	12                                  m32Ifwalk
	13       dA1u(mmGWB5j0W1K76W          shuttle
	14                   fQDyHa3          shuttle
	15  ksrpSf9EVAoWXnZ yxgi1ttX          shuttle
	16                                  v)gbusFf)
	17                                       walk
	ACTUAL OUTPUT ====

		
		SELECT description AS royal_family_details,
		       how_to_get_there
		FROM
		  (SELECT LHS.tourist_attraction_id AS tourist_attraction_id,
		          LHS.attraction_type_code AS attraction_type_code,
		          LHS.location_id AS location_id,
		          LHS.how_to_get_there AS how_to_get_there,
		          LHS.name AS name,
		          LHS.description AS description,
		          LHS.opening_hours AS opening_hours,
		          LHS.other_details AS other_details,
		          RHS.royal_family_details AS royal_family_details
		   FROM tourist_attractions AS LHS
		   INNER JOIN royal_family AS RHS ON (LHS.tourist_attraction_id = RHS.royal_family_id))
		ORDER BY royal_family_details

	      royal_family_details how_to_get_there
	0              JZA0Sj4MNYS        )PMbusL5q
	1                   5mbxVA        1gPq)walk
	2                                 O69busXpc
	3                                        bu
	4                    TnGfw               bu
	5      rHcZIsOuYAMG53rxwu(               bu
	6                        A              bus
	7               AohtaXv9CY              bus
	8                  FRrfSvG              bus
	9               TnGfwT uyA              bus
	10           uoyW2NAifk52S         busoyteZ
	11                                   huttle
	12                 FRrfSvG        m32Ifwalk
	13                  BmPvZE          shuttle
	14                    RQ4v          shuttle
	15            pS1EnFRrfSvG          shuttle
	16  (XyIy2UswhbVkhpstcGCyj        v)gbusFf)
	17               4(I21taXv             walk
No solution for instance spider/cre_Theme_park/0007 (1875)
Wrong output for base solution in instance spider/cre_Theme_park/0023 (1879)
	EXPECTED OUTPUT ====

	           visit_date visit_details
	0 2007-09-17 10:12:45           NaN
	1 2013-08-06 05:35:51           NaN
	ACTUAL OUTPUT ====

		SELECT T2.Visit_Date,
		       T2.Visit_Details
		FROM VISITORS AS T1
		JOIN VISITS AS T2 ON T1.Tourist_ID = T2.Tourist_ID
		WHERE T1.Tourist_Details = "Vincent"

	            visit_date visit_details
	0  2007-09-17 10:12:45              
	1  2013-08-06 05:35:51              
Wrong output for ground truth in instance spider/cre_Theme_park/0023 (1879)
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0001 (1880)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM HOTELS

	   count(*)
	0        10
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT other_hotel_details,
		          COUNT() AS n
		   FROM hotels
		   GROUP BY other_hotel_details)
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
	3         1
	4         1
	5         1
	6         1
	7         1
	8         1
	9         1
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0014 (1881)
	EXPECTED OUTPUT ====

		SELECT Name,
		       Opening_Hours
		FROM TOURIST_ATTRACTIONS
		WHERE How_to_Get_There = "bus"
		  OR How_to_Get_There = "walk"

	                     name        opening_hours
	0  18nQmexploration trial              OOIk)Eh
	1    HeHywflying elephant         41RsVd)KoPEW
	2        exploration tria     jfD97BX7Vd)VGyIx
	3       exploration trial  NC5r3XnpidcMjG5oRI8
	4       exploration trial            fK91P7)7(
	5       exploration trial                zPihA
	6           film festival                    j
	7         flying elephant       Q1STxjUkheqLuA
	ACTUAL OUTPUT ====

		
		SELECT `name`,
		       `description` AS `opening_hours`
		FROM `tourist_attractions`
		WHERE (`how_to_get_there` = 'bus'
		       OR `how_to_get_there` = 'walk')
		ORDER BY name

	                     name           opening_hours
	0  18nQmexploration trial   mB4ZXjl  25w(HnzMmVNS
	1    HeHywflying elephant                        
	2        exploration tria  E)cX5w3ebqM88e4FzsahIP
	3       exploration trial       0ZZqBycuSrMPkdghH
	4       exploration trial                  F21qTJ
	5       exploration trial              IlzOcS lBf
	6           film festival  29PWJ0ZZqBycuSrMPkdghH
	7         flying elephant               HcZIstcGC
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0009 (1882)
	EXPECTED OUTPUT ====

		SELECT Other_Details
		FROM LOCATIONS
		WHERE Location_Name = "UK Gallery"

	Empty DataFrame
	Columns: [other_details]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `other_details`
		FROM
		  (SELECT `other_details`
		   FROM `locations`
		   WHERE (`location_name` != 'UK Gallery') INTERSECT
		     SELECT other_details
		     FROM locations)
		ORDER BY other_details

	            other_details
	0                        
	1          N4Mq)3ruGb1eV0
	2                  (V7ERw
	3                    0scw
	4       4dIlGPkMeXhHWoMm1
	5      4th)PrBO(8QpqrGClg
	6   AQRY8nq4dLuzVXPmifMO0
	7    EmQJbPoTqIZl70YMCMrg
	8             IP)bptOPPi4
	9                MOFdkrZV
	10                 MapMOK
	11      R)vWkhrg9GFRUVdsG
	12                 V8RX5o
	13           oGsfSkCJRIWc
	14          qtjsB8QULutW3
	15     rox gmInAHikjBw2cV
	16                zbW9jZ1
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0011 (1884)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT Name)
		FROM PHOTOS

	   count(distinct name)
	0                    11
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count_distinct_name_
		FROM
		  (SELECT LHS.description AS description,
		          LHS.other_details AS other_details,
		          LHS.n_distinct AS n_distinct,
		          RHS.photo_id AS photo_id,
		          RHS.tourist_attraction_id AS tourist_attraction_id,
		          RHS.name AS name,
		          RHS.filename AS filename
		   FROM
		     (SELECT description,
		             other_details,
		             COUNT(DISTINCT name) AS n_distinct
		      FROM photos
		      GROUP BY description,
		               other_details) AS LHS
		   LEFT JOIN photos AS RHS ON (LHS.description = RHS.description
		                                  AND LHS.other_details = RHS.other_details))
		ORDER BY count_distinct_name_

	    count_distinct_name_
	0                      1
	1                      1
	2                      1
	3                      1
	4                      1
	5                      1
	6                      1
	7                      1
	8                      1
	9                      1
	10                     1
	11                     1
	12                     1
	13                     1
	14                     1
	15                     1
	16                     1
Wrong output for fuzzied solution in instance spider/cre_Theme_park/0029 (1885)
	EXPECTED OUTPUT ====

		SELECT other_hotel_details
		FROM HOTELS
		ORDER BY price_range DESC
		LIMIT 3

	    other_hotel_details
	0    3SbiIxbVLvb9vU)U1(
	1                     L
	2  L0iulbd9nyX oH2f5QSZ
	ACTUAL OUTPUT ====

		
		SELECT other_hotel_details
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM hotels
		      ORDER BY star_rating_code DESC)
		   LIMIT 3)

	         other_hotel_details
	0         3SbiIxbVLvb9vU)U1(
	1  FTsIqAbu4g nev5ibbsCaejye
	2                          l
No solution for instance spider/cre_Theme_park/0010 (1886)
No solution for instance spider/cre_Theme_park/0040 (1887)
Wrong output for base solution in instance spider/cre_Theme_park/0031 (1889)
	EXPECTED OUTPUT ====

		SELECT How_to_Get_There
		FROM Tourist_Attractions
		GROUP BY How_to_Get_There
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  how_to_get_there
	0              bus
	ACTUAL OUTPUT ====

		
		SELECT how_to_get_there
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT how_to_get_there,
		                name,
		                COUNT() AS n
		         FROM tourist_attractions
		         GROUP BY how_to_get_there,
		                  name)
		      ORDER BY name)
		   LIMIT 1)

	  how_to_get_there
	0             walk
Wrong output for base solution in instance spider/driving_school/0042 (1890)
	EXPECTED OUTPUT ====

	  sum_lesson_time_
	0                9
	ACTUAL OUTPUT ====

		SELECT sum(lesson_time)
		FROM Lessons AS T1
		JOIN Staff AS T2 ON T1.staff_id = T2.staff_id
		WHERE T2.first_name = "Janessa"
		  AND T2.last_name = "Sawayn";

	   sum(lesson_time)
	0                 9
Wrong output for ground truth in instance spider/driving_school/0042 (1890)
Wrong output for fuzzied solution in instance spider/driving_school/0037 (1892)
	EXPECTED OUTPUT ====

		SELECT T2.first_name,
		       T2.last_name
		FROM Customer_Payments AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T1.customer_id
		HAVING count(*) > 2;

	         first_name      last_name
	0    )olJZltdShom1b          Bruen
	1            7ByQJQ          cyDrn
	2             8PmDI     jPE72TjT7g
	3               Amy        Goodwin
	4         AmyaPifeL        Sanford
	5               C6M          Bruen
	6   Fa7iWGhFPOaMnqP         cyDrnZ
	7         Genevieve        Sanford
	8         Genevieve        Sanford
	9         Genevieve        asChB5z
	10              Ray     jPE72cqG03
	11             Ryla          Bruen
	12            Rylan         Sanfor
	13            Rylan     uQ7zIQTGS0
	14          SWmw(TE   YlrcyDrnZSmb
	15      X(VRylanr4o       Bernhard
	16               ay          Bruen
	17              mya  Wb7)jBernhard
	18       zkTAmyanUT        Goodwin
	ACTUAL OUTPUT ====

		
		SELECT first_name,
		       last_name
		FROM
		  (SELECT first_name,
		          last_name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.customer_id AS customer_id,
		             LHS.customer_address_id AS customer_address_id,
		             LHS.customer_status_code AS customer_status_code,
		             LHS.date_became_customer AS date_became_customer,
		             LHS.date_of_birth AS date_of_birth,
		             LHS.first_name AS first_name,
		             LHS.last_name AS last_name,
		             LHS.amount_outstanding AS amount_outstanding,
		             LHS.email_address AS email_address,
		             LHS.phone_number AS phone_number,
		             LHS.cell_mobile_phone_number AS cell_mobile_phone_number,
		             RHS.datetime_payment AS datetime_payment,
		             RHS.payment_method_code AS payment_method_code,
		             RHS.amount_payment AS amount_payment
		      FROM customers AS LHS
		      INNER JOIN customer_payments AS RHS ON (LHS.customer_id = RHS.customer_id))
		   GROUP BY first_name,
		            last_name)
		WHERE (n > 2)
		ORDER BY first_name

	         first_name      last_name
	0    )olJZltdShom1b          Bruen
	1            7ByQJQ          cyDrn
	2             8PmDI     jPE72TjT7g
	3               Amy        Goodwin
	4         AmyaPifeL        Sanford
	5               C6M          Bruen
	6   Fa7iWGhFPOaMnqP         cyDrnZ
	7         Genevieve        Sanford
	8         Genevieve        asChB5z
	9               Ray       Bernhard
	10              Ray     jPE72cqG03
	11             Ryla          Bruen
	12            Rylan         Sanfor
	13            Rylan     uQ7zIQTGS0
	14          SWmw(TE   YlrcyDrnZSmb
	15      X(VRylanr4o       Bernhard
	16               ay          Bruen
	17              mya  Wb7)jBernhard
	18       zkTAmyanUT        Goodwin
Wrong output for fuzzied solution in instance spider/driving_school/0036 (1894)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Customers
		WHERE customer_id NOT IN
		    (SELECT customer_id
		     FROM Customer_Payments);

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT *
		   FROM customers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM customer_payments AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for base solution in instance spider/driving_school/0017 (1895)
	EXPECTED OUTPUT ====

		SELECT T1.city,
		       count(*)
		FROM Addresses AS T1
		JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id
		GROUP BY T1.city
		ORDER BY count(*) DESC
		LIMIT 1;

	           city  count(*)
	0  Port Melyssa         4
	ACTUAL OUTPUT ====

		
		SELECT city,
		       staff_id AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.address_id AS address_id,
		                LHS.line_1_number_building AS line_1_number_building,
		                LHS.city AS city,
		                LHS.zip_postcode AS zip_postcode,
		                LHS.state_province_county AS state_province_county,
		                LHS.country AS country,
		                RHS.staff_address_id AS staff_address_id,
		                RHS.staff_id AS staff_id,
		                RHS.n AS n
		         FROM addresses AS LHS
		         CROSS JOIN
		           (SELECT staff_address_id,
		                   staff_id,
		                   COUNT() AS n
		            FROM staff
		            GROUP BY staff_address_id,
		                     staff_id) AS RHS)
		      ORDER BY n)
		   LIMIT 1)

	           city  count___
	0  Port Melyssa         1
Wrong output for fuzzied solution in instance spider/driving_school/0008 (1896)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Staff
		WHERE first_name = "Ludie";

	   count(*)
	0         3
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `last_name`,
		          `staff_id`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `staff`
		      WHERE (`first_name` = 'Ludie'))
		   GROUP BY last_name,
		            staff_id)
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
Wrong output for fuzzied solution in instance spider/driving_school/0003 (1899)
	EXPECTED OUTPUT ====

		SELECT vehicle_details
		FROM Vehicles
		WHERE vehicle_id = 1;

	  vehicle_details
	0             Car
	ACTUAL OUTPUT ====

		
		SELECT vehicle_details
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM vehicles
		      ORDER BY vehicle_id)
		   LIMIT 1)

	  vehicle_details
	0       vDECarK6X
Wrong output for fuzzied solution in instance spider/driving_school/0027 (1900)
	EXPECTED OUTPUT ====

		SELECT customer_status_code
		FROM Customers
		GROUP BY customer_status_code
		ORDER BY count(*) ASC
		LIMIT 1;

	  customer_status_code
	0    )0CykBad Customer
	ACTUAL OUTPUT ====

		
		SELECT customer_status_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT amount_outstanding,
		                customer_status_code,
		                COUNT() AS n
		         FROM customers
		         GROUP BY amount_outstanding,
		                  customer_status_code)
		      ORDER BY customer_status_code DESC)
		   LIMIT 1)

	  customer_status_code
	0          ad Customer
Wrong output for base solution in instance spider/driving_school/0013 (1903)
	EXPECTED OUTPUT ====

	  sum_t1_lesson_time_
	0                  11
	ACTUAL OUTPUT ====

		SELECT sum(T1.lesson_time)
		FROM Lessons AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.first_name = "Rylan"
		  AND T2.last_name = "Goodwin";

	   sum(t1.lesson_time)
	0                   11
Wrong output for ground truth in instance spider/driving_school/0013 (1903)
Wrong output for fuzzied solution in instance spider/driving_school/0006 (1904)
	EXPECTED OUTPUT ====

		SELECT date_joined_staff
		FROM Staff
		WHERE first_name = "Janessa"
		  AND last_name = "Sawayn";

	Empty DataFrame
	Columns: [date_joined_staff]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `date_joined_staff`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `staff`
		      WHERE (`first_name` = 'Janessa'
		             OR `last_name` = 'Sawayn')) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM staff AS RHS
		        WHERE (LHS.staff_id = RHS.staff_id
		               AND LHS.staff_address_id = RHS.staff_address_id
		               AND LHS.nickname = RHS.nickname
		               AND LHS.first_name = RHS.first_name
		               AND LHS.middle_name = RHS.middle_name
		               AND LHS.last_name = RHS.last_name
		               AND LHS.date_of_birth = RHS.date_of_birth
		               AND LHS.date_joined_staff = RHS.date_joined_staff
		               AND LHS.date_left_staff = RHS.date_left_staff) ))
		ORDER BY date_joined_staff

	     date_joined_staff
	0  2017-03-13 06:40:36
Wrong output for fuzzied solution in instance spider/driving_school/0015 (1908)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Addresses
		WHERE state_province_county = "Georgia";

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `addresses`
		WHERE (`state_province_county` = 'Georgia')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/driving_school/0032 (1911)
	EXPECTED OUTPUT ====

		SELECT T2.country
		FROM Customers AS T1
		JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id
		WHERE T1.first_name = "Carole"
		  AND T1.last_name = "Bernhard"

	Empty DataFrame
	Columns: [country]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `country`
		FROM
		  (SELECT `LHS`.`address_id` AS `address_id`,
		          `LHS`.`line_1_number_building` AS `line_1_number_building`,
		          `LHS`.`city` AS `city`,
		          `LHS`.`zip_postcode` AS `zip_postcode`,
		          `LHS`.`state_province_county` AS `state_province_county`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`customer_address_id` AS `customer_address_id`,
		          `LHS`.`customer_status_code` AS `customer_status_code`,
		          `LHS`.`date_became_customer` AS `date_became_customer`,
		          `LHS`.`date_of_birth` AS `date_of_birth`,
		          `LHS`.`first_name` AS `first_name`,
		          `LHS`.`last_name` AS `last_name`,
		          `LHS`.`amount_outstanding` AS `amount_outstanding`,
		          `LHS`.`email_address` AS `email_address`,
		          `LHS`.`phone_number` AS `phone_number`,
		          `LHS`.`cell_mobile_phone_number` AS `cell_mobile_phone_number`
		   FROM
		     (SELECT `LHS`.`address_id` AS `address_id`,
		             `LHS`.`line_1_number_building` AS `line_1_number_building`,
		             `LHS`.`city` AS `city`,
		             `LHS`.`zip_postcode` AS `zip_postcode`,
		             `LHS`.`state_province_county` AS `state_province_county`,
		             `LHS`.`country` AS `country`,
		             `RHS`.`customer_id` AS `customer_id`,
		             `RHS`.`customer_address_id` AS `customer_address_id`,
		             `RHS`.`customer_status_code` AS `customer_status_code`,
		             `RHS`.`date_became_customer` AS `date_became_customer`,
		             `RHS`.`date_of_birth` AS `date_of_birth`,
		             `RHS`.`first_name` AS `first_name`,
		             `RHS`.`last_name` AS `last_name`,
		             `RHS`.`amount_outstanding` AS `amount_outstanding`,
		             `RHS`.`email_address` AS `email_address`,
		             `RHS`.`phone_number` AS `phone_number`,
		             `RHS`.`cell_mobile_phone_number` AS `cell_mobile_phone_number`
		      FROM `addresses` AS `LHS`
		      CROSS JOIN `customers` AS `RHS`) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `customers`
		      WHERE (`first_name` != 'Carole'
		             OR `last_name` = 'Bernhard')) AS RHS ON (LHS.customer_id = RHS.customer_id
		                                                      AND LHS.customer_address_id = RHS.customer_address_id
		                                                      AND LHS.customer_status_code = RHS.customer_status_code
		                                                      AND LHS.date_became_customer = RHS.date_became_customer
		                                                      AND LHS.date_of_birth = RHS.date_of_birth
		                                                      AND LHS.first_name = RHS.first_name
		                                                      AND LHS.last_name = RHS.last_name
		                                                      AND LHS.amount_outstanding = RHS.amount_outstanding
		                                                      AND LHS.email_address = RHS.email_address
		                                                      AND LHS.phone_number = RHS.phone_number
		                                                      AND LHS.cell_mobile_phone_number = RHS.cell_mobile_phone_number))
		ORDER BY country

	     country
	0  MA6USAcLn
	1   RFmjfUSA
	2         SA
	3         US
	4        USA
	5   USAOuqno
No solution for instance spider/driving_school/0018 (1913)
No solution for instance spider/driving_school/0041 (1914)
Wrong output for fuzzied solution in instance spider/driving_school/0035 (1915)
	EXPECTED OUTPUT ====

		SELECT sum(T1.amount_payment)
		FROM Customer_Payments AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.first_name = "Carole"
		  AND T2.last_name = "Bernhard"

	  sum(t1.amount_payment)
	0                   None
	ACTUAL OUTPUT ====

		
		SELECT `amount_payment` AS `sum_t1_amount_payment_`
		FROM
		  (SELECT *
		   FROM `customer_payments` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `customers`
		           WHERE (`first_name` != 'Carole'
		                  OR `last_name` != 'Bernhard')) AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY sum_t1_amount_payment_

	Empty DataFrame
	Columns: [sum_t1_amount_payment_]
	Index: []
Wrong output for fuzzied solution in instance spider/driving_school/0007 (1918)
	EXPECTED OUTPUT ====

		SELECT date_left_staff
		FROM Staff
		WHERE first_name = "Janessa"
		  AND last_name = "Sawayn";

	Empty DataFrame
	Columns: [date_left_staff]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `date_left_staff`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `staff`
		      WHERE (`first_name` = 'Janessa'
		             OR `last_name` = 'Sawayn')) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM staff AS RHS
		        WHERE (LHS.staff_id = RHS.staff_id
		               AND LHS.staff_address_id = RHS.staff_address_id
		               AND LHS.nickname = RHS.nickname
		               AND LHS.first_name = RHS.first_name
		               AND LHS.middle_name = RHS.middle_name
		               AND LHS.last_name = RHS.last_name
		               AND LHS.date_of_birth = RHS.date_of_birth
		               AND LHS.date_joined_staff = RHS.date_joined_staff
		               AND LHS.date_left_staff = RHS.date_left_staff) ))
		ORDER BY date_left_staff

	       date_left_staff
	0  2018-03-07 03:23:40
No solution for instance spider/driving_school/0034 (1919)
Wrong output for fuzzied solution in instance spider/driving_school/0024 (1920)
	EXPECTED OUTPUT ====

		SELECT date_became_customer
		FROM Customers
		WHERE first_name = "Carole"
		  AND last_name = "Bernhard";

	Empty DataFrame
	Columns: [date_became_customer]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `date_became_customer`
		FROM
		  (SELECT *
		   FROM `customers` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `customers`
		           WHERE (`first_name` = 'Carole'
		                  OR `last_name` = 'Bernhard')) AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id
		               AND LHS.customer_address_id = RHS.customer_address_id
		               AND LHS.customer_status_code = RHS.customer_status_code
		               AND LHS.date_became_customer = RHS.date_became_customer
		               AND LHS.date_of_birth = RHS.date_of_birth
		               AND LHS.first_name = RHS.first_name
		               AND LHS.last_name = RHS.last_name
		               AND LHS.amount_outstanding = RHS.amount_outstanding
		               AND LHS.email_address = RHS.email_address
		               AND LHS.phone_number = RHS.phone_number
		               AND LHS.cell_mobile_phone_number = RHS.cell_mobile_phone_number) ))
		ORDER BY date_became_customer

	  date_became_customer
	0  2016-07-15 21:16:18
Wrong output for fuzzied solution in instance spider/driving_school/0043 (1924)
	EXPECTED OUTPUT ====

		SELECT avg(price)
		FROM Lessons AS T1
		JOIN Staff AS T2 ON T1.staff_id = T2.staff_id
		WHERE T2.first_name = "Janessa"
		  AND T2.last_name = "Sawayn";

	  avg(price)
	0       None
	ACTUAL OUTPUT ====

		
		SELECT `price` AS `avg_price_`
		FROM
		  (SELECT `LHS`.`lesson_id` AS `lesson_id`,
		          `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`lesson_status_code` AS `lesson_status_code`,
		          `LHS`.`staff_id` AS `staff_id`,
		          `LHS`.`vehicle_id` AS `vehicle_id`,
		          `LHS`.`lesson_date` AS `lesson_date`,
		          `LHS`.`lesson_time` AS `lesson_time`,
		          `LHS`.`price` AS `price`,
		          `RHS`.`staff_address_id` AS `staff_address_id`,
		          `RHS`.`nickname` AS `nickname`,
		          `RHS`.`first_name` AS `first_name`,
		          `RHS`.`middle_name` AS `middle_name`,
		          `RHS`.`last_name` AS `last_name`,
		          `RHS`.`date_of_birth` AS `date_of_birth`,
		          `RHS`.`date_joined_staff` AS `date_joined_staff`,
		          `RHS`.`date_left_staff` AS `date_left_staff`
		   FROM `lessons` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `staff`
		      WHERE (`first_name` = 'Janessa'
		             OR `last_name` = 'Sawayn')) AS RHS ON (LHS.staff_id = RHS.staff_id))
		ORDER BY avg_price_

	   avg_price_
	0       446.0
Wrong output for fuzzied solution in instance spider/driving_school/0046 (1925)
	EXPECTED OUTPUT ====

		SELECT first_name
		FROM Staff
		EXCEPT
		SELECT T2.first_name
		FROM Lessons AS T1
		JOIN Staff AS T2 ON T1.staff_id = T2.staff_id

	    first_name
	0  42kLudiebaC
	1     Jedidiah
	2       anessa
	ACTUAL OUTPUT ====

		
		SELECT first_name
		FROM
		  (SELECT *
		   FROM staff AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM lessons AS RHS
		        WHERE (LHS.staff_id = RHS.staff_id) ))
		ORDER BY first_name

	    first_name
	0  42kLudiebaC
	1     Jedidiah
	2       Simeon
	3       anessa
Wrong output for fuzzied solution in instance spider/driving_school/0047 (1926)
	EXPECTED OUTPUT ====

		SELECT T1.vehicle_id,
		       T1.vehicle_details
		FROM Vehicles AS T1
		JOIN Lessons AS T2 ON T1.vehicle_id = T2.vehicle_id
		GROUP BY T1.vehicle_id
		ORDER BY count(*) DESC
		LIMIT 1

	   vehicle_id vehicle_details
	0           1              Ca
	ACTUAL OUTPUT ====

		
		SELECT customer_id AS vehicle_id,
		       vehicle_details
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.vehicle_id AS vehicle_id,
		          LHS.n AS n,
		          RHS.vehicle_details AS vehicle_details
		   FROM
		     (SELECT *
		      FROM
		        (SELECT customer_id,
		                vehicle_id,
		                COUNT() AS n
		         FROM lessons
		         GROUP BY customer_id,
		                  vehicle_id)
		      WHERE (n != 1)) AS LHS
		   INNER JOIN vehicles AS RHS ON (LHS.vehicle_id = RHS.vehicle_id))
		ORDER BY vehicle_id

	   vehicle_id vehicle_details
	0          13             Car
Wrong output for fuzzied solution in instance spider/driving_school/0014 (1927)
	EXPECTED OUTPUT ====

		SELECT T1.zip_postcode
		FROM Addresses AS T1
		JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id
		WHERE T2.first_name = "Janessa"
		  AND T2.last_name = "Sawayn";

	Empty DataFrame
	Columns: [zip_postcode]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `zip_postcode`
		FROM
		  (SELECT `LHS`.`address_id` AS `address_id`,
		          `LHS`.`line_1_number_building` AS `line_1_number_building`,
		          `LHS`.`city` AS `city`,
		          `LHS`.`zip_postcode` AS `zip_postcode`,
		          `LHS`.`state_province_county` AS `state_province_county`,
		          `LHS`.`country` AS `country`,
		          `RHS`.`staff_id` AS `staff_id`,
		          `RHS`.`nickname` AS `nickname`,
		          `RHS`.`first_name` AS `first_name`,
		          `RHS`.`middle_name` AS `middle_name`,
		          `RHS`.`last_name` AS `last_name`,
		          `RHS`.`date_of_birth` AS `date_of_birth`,
		          `RHS`.`date_joined_staff` AS `date_joined_staff`,
		          `RHS`.`date_left_staff` AS `date_left_staff`
		   FROM `addresses` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `staff`
		      WHERE (`first_name` = 'Janessa'
		             OR `last_name` = 'Sawayn')) AS RHS ON (LHS.address_id = RHS.staff_address_id))
		ORDER BY zip_postcode

	  zip_postcode
	0        63768
Wrong output for fuzzied solution in instance spider/driving_school/0009 (1928)
	EXPECTED OUTPUT ====

		SELECT nickname
		FROM Staff
		WHERE first_name = "Janessa"
		  AND last_name = "Sawayn";

	Empty DataFrame
	Columns: [nickname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `nickname`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `staff`
		      WHERE (`first_name` = 'Janessa'
		             OR `last_name` = 'Sawayn')) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM staff AS RHS
		        WHERE (LHS.staff_id = RHS.staff_id
		               AND LHS.staff_address_id = RHS.staff_address_id
		               AND LHS.nickname = RHS.nickname
		               AND LHS.first_name = RHS.first_name
		               AND LHS.middle_name = RHS.middle_name
		               AND LHS.last_name = RHS.last_name
		               AND LHS.date_of_birth = RHS.date_of_birth
		               AND LHS.date_joined_staff = RHS.date_joined_staff
		               AND LHS.date_left_staff = RHS.date_left_staff) ))
		ORDER BY nickname

	      nickname
	0  weldon.klin
Wrong output for fuzzied solution in instance spider/driving_school/0025 (1929)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Customers;

	   count(*)
	0        15
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT date_of_birth,
		          phone_number,
		          COUNT() AS n
		   FROM customers
		   GROUP BY date_of_birth,
		            phone_number)
		ORDER BY count___

	   count___
	0        14
Wrong output for fuzzied solution in instance spider/driving_school/0010 (1932)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Staff;

	   count(*)
	0        43
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT date_left_staff,
		          middle_name,
		          COUNT() AS n
		   FROM staff
		   GROUP BY date_left_staff,
		            middle_name)
		ORDER BY count___

	   count___
	0        40
Wrong output for fuzzied solution in instance spider/driving_school/0044 (1933)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Lessons AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.first_name = "Ray"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT *
		   FROM `lessons` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `customers`
		           WHERE (`first_name` != 'Ray')) AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/driving_school/0040 (1934)
Wrong output for fuzzied solution in instance spider/driving_school/0028 (1935)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Lessons AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.first_name = "Rylan"
		  AND T2.last_name = "Goodwin"
		  AND T1.lesson_status_code = "Completed";

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `customer_address_id` AS `count___`
		FROM
		  (SELECT `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`customer_address_id` AS `customer_address_id`,
		          `LHS`.`customer_status_code` AS `customer_status_code`,
		          `LHS`.`date_became_customer` AS `date_became_customer`,
		          `LHS`.`date_of_birth` AS `date_of_birth`,
		          `LHS`.`first_name` AS `first_name`,
		          `LHS`.`last_name` AS `last_name`,
		          `LHS`.`amount_outstanding` AS `amount_outstanding`,
		          `LHS`.`email_address` AS `email_address`,
		          `LHS`.`phone_number` AS `phone_number`,
		          `LHS`.`cell_mobile_phone_number` AS `cell_mobile_phone_number`,
		          `RHS`.`n_distinct` AS `n_distinct`
		   FROM `customers` AS `LHS`
		   LEFT JOIN
		     (SELECT `customer_id`,
		             COUNT(DISTINCT `lesson_status_code`) AS `n_distinct`
		      FROM `lessons`
		      WHERE (`lesson_status_code` = 'Completed')
		      GROUP BY `customer_id`) AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))
		WHERE (`first_name` = 'Rylan'
		       OR `last_name` = 'Goodwin')
		ORDER BY count___

	   count___
	0         2
	1        12
	2        13
	3        13
Wrong output for base solution in instance spider/sakila_1/0033 (1937)
	EXPECTED OUTPUT ====

		SELECT payment_date
		FROM payment
		ORDER BY payment_date ASC
		LIMIT 1

	          payment_date
	0  2005-05-24 22:53:30
	ACTUAL OUTPUT ====

		
		SELECT payment_date
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM payment
		      ORDER BY rental_id)
		   LIMIT 1)

	          payment_date
	0  2005-06-18 04:56:12
Wrong output for fuzzied solution in instance spider/sakila_1/0002 (1938)
	EXPECTED OUTPUT ====

		SELECT first_name
		FROM actor
		GROUP BY first_name
		ORDER BY count(*) DESC
		LIMIT 1

	  first_name
	0    FRANCES
	ACTUAL OUTPUT ====

		
		SELECT first_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT actor_id,
		                first_name,
		                COUNT() AS n
		         FROM actor
		         GROUP BY actor_id,
		                  first_name)
		      ORDER BY actor_id)
		   LIMIT 1)

	     first_name
	0  vq)YuFRANCES
Wrong output for fuzzied solution in instance spider/sakila_1/0036 (1939)
	EXPECTED OUTPUT ====

		SELECT T1.first_name,
		       T1.last_name
		FROM customer AS T1
		JOIN rental AS T2 ON T1.customer_id = T2.customer_id
		ORDER BY T2.rental_date ASC
		LIMIT 1

	  first_name last_name
	0    COLLEEN      REED
	ACTUAL OUTPUT ====

		
		SELECT first_name,
		       last_name
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.store_id AS store_id,
		          LHS.first_name AS first_name,
		          LHS.last_name AS last_name,
		          LHS.email AS email,
		          LHS.address_id AS address_id,
		          LHS.active AS active,
		          LHS.create_date AS create_date,
		          LHS.last_update AS last_update,
		          RHS.rental_date AS rental_date,
		          RHS.inventory_id AS inventory_id,
		          RHS.return_date AS return_date,
		          RHS.staff_id AS staff_id,
		          RHS.last_update AS last_update_other
		   FROM customer AS LHS
		   INNER JOIN rental AS RHS ON (LHS.customer_id = RHS.customer_id
		                                   AND LHS.store_id = RHS.rental_id))
		ORDER BY first_name

	Empty DataFrame
	Columns: [first_name, last_name]
	Index: []
Wrong output for fuzzied solution in instance spider/sakila_1/0017 (1940)
	EXPECTED OUTPUT ====

		SELECT store_id
		FROM inventory
		GROUP BY store_id
		ORDER BY count(*) DESC
		LIMIT 1

	      store_id
	0  17093727488
	ACTUAL OUTPUT ====

		
		SELECT store_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT film_id,
		                store_id,
		                COUNT() AS n
		         FROM inventory
		         GROUP BY film_id,
		                  store_id)
		      ORDER BY store_id DESC)
		   LIMIT 1)

	      store_id
	0  19960393419
No solution for instance spider/sakila_1/0008 (1941)
Wrong output for fuzzied solution in instance spider/sakila_1/0038 (1943)
	EXPECTED OUTPUT ====

		SELECT store_id
		FROM customer
		GROUP BY store_id
		ORDER BY count(*) DESC
		LIMIT 1

	      store_id
	0  11700911594
	ACTUAL OUTPUT ====

		
		SELECT n AS store_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT last_name,
		                store_id,
		                COUNT() AS n
		         FROM customer
		         GROUP BY last_name,
		                  store_id)
		      ORDER BY store_id DESC)
		   LIMIT 1)

	   store_id
	0         1
Wrong output for fuzzied solution in instance spider/sakila_1/0003 (1944)
	EXPECTED OUTPUT ====

		SELECT first_name,
		       last_name
		FROM actor
		GROUP BY first_name,
		         last_name
		ORDER BY count(*) DESC
		LIMIT 1

	  first_name   last_name
	0   ANGELINA  1ogiiTANDY
	ACTUAL OUTPUT ====

		
		SELECT first_name,
		       last_name
		FROM
		  (SELECT first_name,
		          last_name,
		          COUNT() AS n
		   FROM actor
		   GROUP BY first_name,
		            last_name)
		WHERE (n > 1)
		ORDER BY first_name

	Empty DataFrame
	Columns: [first_name, last_name]
	Index: []
No solution for instance spider/sakila_1/0022 (1945)
Wrong output for fuzzied solution in instance spider/sakila_1/0030 (1946)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT rating)
		FROM film

	   count(distinct rating)
	0                      13
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n_distinct AS count_distinct_rating_
		FROM
		  (SELECT rental_duration,
		          COUNT(DISTINCT rating) AS n_distinct
		   FROM film
		   GROUP BY rental_duration)
		ORDER BY count_distinct_rating_

	   count_distinct_rating_
	0                       1
	1                       2
	2                       3
	3                       4
Wrong output for fuzzied solution in instance spider/sakila_1/0013 (1947)
	EXPECTED OUTPUT ====

		SELECT title,
		       rental_rate
		FROM film
		ORDER BY rental_rate DESC
		LIMIT 1

	        title  rental_rate
	0  DUMBO LUST            5
	ACTUAL OUTPUT ====

		
		SELECT title,
		       rental_rate
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM film
		      ORDER BY rental_duration)
		   LIMIT 1)

	             title  rental_rate
	0  REAP UNFAITHFUL         2.99
No solution for instance spider/sakila_1/0006 (1948)
Wrong output for base solution in instance spider/sakila_1/0004 (1949)
	EXPECTED OUTPUT ====

	           district
	0         Abu Dhabi
	1             Adana
	2           Alberta
	3    Andhra Pradesh
	4             Bihar
	..              ...
	100       Yamaguchi
	101        Zhejiang
	102    al-Qalyubiya
	103     al-Sharqiya
	104             NaN
	
	[105 rows x 1 columns]
	ACTUAL OUTPUT ====

		SELECT district
		FROM address
		GROUP BY district
		HAVING count(*) >= 2

	           district
	0                  
	1         Abu Dhabi
	2             Adana
	3           Alberta
	4    Andhra Pradesh
	..              ...
	100        Xinxiang
	101       Yamaguchi
	102        Zhejiang
	103    al-Qalyubiya
	104     al-Sharqiya
	
	[105 rows x 1 columns]
Wrong output for ground truth in instance spider/sakila_1/0004 (1949)
No solution for instance spider/sakila_1/0015 (1951)
Wrong output for fuzzied solution in instance spider/sakila_1/0016 (1953)
	EXPECTED OUTPUT ====

		SELECT T2.first_name,
		       T2.last_name
		FROM film_actor AS T1
		JOIN actor AS T2 ON T1.actor_id = T2.actor_id
		GROUP BY T2.actor_id
		HAVING count(*) > 30

	Empty DataFrame
	Columns: [first_name, last_name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT first_name,
		       last_name
		FROM
		  (SELECT *
		   FROM actor AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT actor_id,
		                     COUNT() AS n
		              FROM film_actor
		              GROUP BY actor_id)
		           WHERE (n <= 30)) AS RHS
		        WHERE (LHS.actor_id = RHS.actor_id) ))
		ORDER BY first_name

	   first_name last_name
	0  FsQGREGL0J  MCKELLEN
	1      SANDRA     ENING
Wrong output for fuzzied solution in instance spider/sakila_1/0032 (1954)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM inventory
		WHERE store_id = 1

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM inventory
		      WHERE (store_id <= 1)))
		ORDER BY count___

	   count___
	0         6
Wrong output for base solution in instance spider/sakila_1/0018 (1955)
	EXPECTED OUTPUT ====

	   sum_amount_
	0     67416.51
	ACTUAL OUTPUT ====

		SELECT sum(amount)
		FROM payment

	   sum(amount)
	0     67416.51
Wrong output for ground truth in instance spider/sakila_1/0018 (1955)
Error while executing solution for instance spider/sakila_1/0041 (1956)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `first_name`
FROM
  (SELECT *
   FROM `customer` AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM `rental`
           WHERE (`rental_date` > parse_datetime('2005-08-23 02:06:01'))) AS RHS
        WHERE (LHS.customer_id = RHS.customer_id) ))
ORDER BY first_name]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/sakila_1/0035 (1957)
	EXPECTED OUTPUT ====

		SELECT title
		FROM film
		WHERE LENGTH > 100
		  OR rating = 'PG'
		EXCEPT
		SELECT title
		FROM film
		WHERE replacement_cost > 200

	                title
	0       CHASING FIGHT
	1  CHASING FIGHTeZ77a
	2  CHASING FIGHTxQlcx
	3          DUMBO LUST
	4      EAP UNFAITHFUL
	5          LOLA AGENT
	6     REAP UNFAITHFUL
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT *
		   FROM `film`
		   WHERE (`rating` = 'PG'
		          OR LENGTH > 100))
		WHERE (replacement_cost >= 200.0
		       OR replacement_cost != LENGTH)
		ORDER BY title

	                  title
	0         CHASING FIGHT
	1         CHASING FIGHT
	2         CHASING FIGHT
	3    CHASING FIGHTeZ77a
	4    CHASING FIGHTxQlcx
	5            DUMBO LUST
	6            DUMBO LUST
	7        EAP UNFAITHFUL
	8   Hg7CHASING FIGHTWXW
	9            LOLA AGENT
	10           LOLA AGENT
	11      REAP UNFAITHFUL
No solution for instance spider/sakila_1/0019 (1959)
Wrong output for fuzzied solution in instance spider/sakila_1/0024 (1962)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT language_id)
		FROM film

	   count(distinct language_id)
	0                           17
	ACTUAL OUTPUT ====

		
		SELECT language_id AS count_distinct_language_id_
		FROM
		  (SELECT language_id,
		          last_update,
		          COUNT() AS n
		   FROM film
		   GROUP BY language_id,
		            last_update)
		WHERE (n > language_id)
		ORDER BY count_distinct_language_id_

	Empty DataFrame
	Columns: [count_distinct_language_id_]
	Index: []
No solution for instance spider/sakila_1/0023 (1964)
Error while executing solution for instance spider/sakila_1/0001 (1965)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT last_name) OVER () AS count_distinct_last_name_
FROM actor
ORDER BY count_distinct_last_name_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/sakila_1/0014 (1966)
Error while executing solution for instance spider/sakila_1/0009 (1967)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT COUNT(DISTINCT `country`) OVER () AS `count___`
FROM
  (SELECT *
   FROM
     (SELECT *
      FROM `country`
      WHERE (`country` = 'Australia')) AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM city AS RHS
        WHERE (LHS.country_id = RHS.country_id
               AND LHS.last_update = RHS.last_update) ))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/sakila_1/0031 (1970)
Wrong output for fuzzied solution in instance spider/manufactory_1/0037 (1972)
	EXPECTED OUTPUT ====

		SELECT avg(T1.Price),
		       T2.name
		FROM products AS T1
		JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code
		GROUP BY T2.name
		HAVING avg(T1.price) >= 150

	   avg(t1.price)             name
	0     150.013333  Hewlett-Packard
	1     150.020000           Fujits
	2     180.010000          Fujitsu
	ACTUAL OUTPUT ====

		
		SELECT meanprice AS avg_t1_price_,
		       name
		FROM
		  (SELECT name,
		          revenue,
		          AVG(price) AS meanprice
		   FROM
		     (SELECT code,
		             name,
		             headquarter,
		             founder,
		             revenue,
		             code_other,
		             name_other,
		             price,
		             code AS manufacturer
		      FROM
		        (SELECT LHS.code AS code,
		                LHS.name AS name,
		                LHS.headquarter AS headquarter,
		                LHS.founder AS founder,
		                LHS.revenue AS revenue,
		                RHS.code AS code_other,
		                RHS.name AS name_other,
		                RHS.price AS price
		         FROM manufacturers AS LHS
		         INNER JOIN products AS RHS ON (LHS.code = RHS.manufacturer)))
		   GROUP BY name,
		            revenue)
		WHERE (meanprice >= 150.0)
		ORDER BY avg_t1_price_

	   avg_t1_price_             name
	0         150.02           Fujits
	1         180.01          Fujitsu
	2         180.01  Hewlett-Packard
Wrong output for fuzzied solution in instance spider/manufactory_1/0002 (1973)
	EXPECTED OUTPUT ====

		SELECT headquarter
		FROM manufacturers
		WHERE founder = 'James'

	         headquarter
	0            Beijing
	1            Beijing
	2   FWVgMLos Angeles
	3        Los Angeles
	4        Los Angeles
	5               Toky
	6              Tokyo
	7              Tokyo
	8              Tokyo
	9         Tokyo4zBP8
	10        Tokyouz9zf
	11              U3oy
	12  cEtA7Los Angeles
	13  vvyuk38UOjBCsAAe
	ACTUAL OUTPUT ====

		
		SELECT `headquarter`
		FROM
		  (SELECT `headquarter`
		   FROM `manufacturers`
		   WHERE (`founder` = 'James') INTERSECT
		     SELECT headquarter
		     FROM manufacturers)
		ORDER BY headquarter

	        headquarter
	0           Beijing
	1  FWVgMLos Angeles
	2       Los Angeles
	3              Toky
	4             Tokyo
	5        Tokyo4zBP8
	6        Tokyouz9zf
	7              U3oy
	8  cEtA7Los Angeles
	9  vvyuk38UOjBCsAAe
Wrong output for fuzzied solution in instance spider/manufactory_1/0036 (1974)
	EXPECTED OUTPUT ====

		SELECT avg(T1.Price),
		       T2.name
		FROM products AS T1
		JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code
		GROUP BY T2.name

	   avg(t1.price)                  name
	0     129.996667  rqrHJHewlett-Packard
	1     150.013333       Hewlett-Packard
	2     150.020000                Fujits
	3     180.010000               Fujitsu
	ACTUAL OUTPUT ====

		
		SELECT meanprice AS avg_t1_price_,
		       name
		FROM
		  (SELECT name,
		          revenue,
		          AVG(price) AS meanprice
		   FROM
		     (SELECT code,
		             name,
		             headquarter,
		             founder,
		             revenue,
		             code_other,
		             name_other,
		             price,
		             code AS manufacturer
		      FROM
		        (SELECT LHS.code AS code,
		                LHS.name AS name,
		                LHS.headquarter AS headquarter,
		                LHS.founder AS founder,
		                LHS.revenue AS revenue,
		                RHS.code AS code_other,
		                RHS.name AS name_other,
		                RHS.price AS price
		         FROM manufacturers AS LHS
		         INNER JOIN products AS RHS ON (LHS.code = RHS.manufacturer)))
		   GROUP BY name,
		            revenue)
		ORDER BY avg_t1_price_

	   avg_t1_price_                  name
	0     129.996667  rqrHJHewlett-Packard
	1     135.015000       Hewlett-Packard
	2     150.020000                Fujits
	3     180.010000               Fujitsu
	4     180.010000       Hewlett-Packard
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Error while executing solution for instance spider/manufactory_1/0008 (1976)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `headquarter`) OVER () AS `count___`
FROM `manufacturers`
WHERE (`headquarter` = 'Tokyo'
       OR `headquarter` = 'Beijing')
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/manufactory_1/0039 (1977)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/manufactory_1/0039 (1977)
Wrong output for fuzzied solution in instance spider/manufactory_1/0022 (1981)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT T1.name),
		       T2.Headquarter
		FROM products AS T1
		JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code
		GROUP BY T2.Headquarter

	   count(distinct t1.name)       headquarter
	0                        1  SXvflLos Angeles
	1                        2            eijing
	2                        2        os Angeles
	3                        4            Beijin
	ACTUAL OUTPUT ====

		
		SELECT n AS count_distinct_t1_name_,
		       headquarter
		FROM
		  (SELECT LHS.code AS code,
		          LHS.name AS name,
		          LHS.headquarter AS headquarter,
		          LHS.founder AS founder,
		          LHS.revenue AS revenue,
		          RHS.n AS n
		   FROM manufacturers AS LHS
		   INNER JOIN
		     (SELECT manufacturer,
		             COUNT() AS n
		      FROM products
		      GROUP BY manufacturer) AS RHS ON (LHS.code = RHS.manufacturer))
		ORDER BY count_distinct_t1_name_

	   count_distinct_t1_name_       headquarter
	0                        1            Beijin
	1                        1  SXvflLos Angeles
	2                        2            eijing
	3                        2        os Angeles
	4                        3            Beijin
Wrong output for fuzzied solution in instance spider/manufactory_1/0006 (1984)
	EXPECTED OUTPUT ====

		SELECT sum(revenue)
		FROM manufacturers
		WHERE headquarter = 'Austin'

	  sum(revenue)
	0         None
	ACTUAL OUTPUT ====

		
		SELECT `revenue` AS `sum_revenue_`
		FROM
		  (SELECT `name`,
		          `revenue`,
		          SUM(`revenue`) AS `sumrevenue`
		   FROM
		     (SELECT *
		      FROM `manufacturers`
		      WHERE (`headquarter` = 'Austin'))
		   GROUP BY name,
		            revenue)
		ORDER BY sum_revenue_

	Empty DataFrame
	Columns: [sum_revenue_]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/manufactory_1/0005 (1988)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM manufacturers
		WHERE founder = 'Andy'

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT `code` AS `count___`
		FROM
		  (SELECT `code`,
		          `name`,
		          `headquarter`,
		          `founder`,
		          `revenue`,
		          COUNT(*) OVER () AS `n`
		   FROM `manufacturers`)
		WHERE (`founder` = 'Andy')
		ORDER BY count___

	   count___
	0         7
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Error while executing solution for instance spider/manufactory_1/0032 (1990)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT price) OVER () AS count___
FROM products
WHERE (price < 180.0)
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/manufactory_1/0018 (1991)
	EXPECTED OUTPUT ====

		SELECT sum(revenue),
		       founder
		FROM manufacturers
		GROUP BY founder

	   sum(revenue)      founder
	0        130.02         Andy
	1         99.98   NzFMaryUkJ
	2        259.98         Owen
	3        129.99       Robert
	4         99.99  RobertEun2W
	ACTUAL OUTPUT ====

		
		SELECT revenue AS sum_revenue_,
		       founder
		FROM
		  (SELECT founder,
		          revenue,
		          SUM(revenue) AS sumrevenue
		   FROM
		     (SELECT founder,
		             revenue,
		             SUM(revenue) AS sumrevenue
		      FROM manufacturers
		      GROUP BY founder,
		               revenue)
		   GROUP BY founder,
		            revenue)
		ORDER BY sum_revenue_

	   sum_revenue_      founder
	0        130.02         Andy
	1         99.98   NzFMaryUkJ
	2        129.98         Owen
	3        130.00         Owen
	4        129.99       Robert
	5         99.99  RobertEun2W
Wrong output for fuzzied solution in instance spider/manufactory_1/0020 (1993)
	EXPECTED OUTPUT ====

		SELECT sum(revenue),
		       name
		FROM manufacturers
		GROUP BY name

	   sum(revenue)                  name
	0        129.98                Fujits
	1         99.99               Fujitsu
	2        260.02       Hewlett-Packard
	3         99.98  rqrHJHewlett-Packard
	4        129.99                ujitsu
	ACTUAL OUTPUT ====

		
		SELECT revenue AS sum_revenue_,
		       name
		FROM
		  (SELECT name,
		          revenue,
		          SUM(revenue) AS sumrevenue
		   FROM
		     (SELECT name,
		             revenue,
		             SUM(revenue) AS sumrevenue
		      FROM manufacturers
		      GROUP BY name,
		               revenue)
		   GROUP BY name,
		            revenue)
		ORDER BY sum_revenue_

	   sum_revenue_                  name
	0        129.98                Fujits
	1         99.99               Fujitsu
	2        130.00       Hewlett-Packard
	3        130.02       Hewlett-Packard
	4         99.98  rqrHJHewlett-Packard
	5        129.99                ujitsu
Wrong output for fuzzied solution in instance spider/manufactory_1/0019 (1994)
	EXPECTED OUTPUT ====

		SELECT name,
		       max(revenue),
		       Headquarter
		FROM manufacturers
		GROUP BY Headquarter

	              name  max(revenue)       headquarter
	0           ujitsu        129.99            Austin
	1  Hewlett-Packard        130.00            Beijin
	2           Fujits        129.98  SXvflLos Angeles
	3          Fujitsu         99.99            eijing
	4  Hewlett-Packard        130.02        os Angeles
	ACTUAL OUTPUT ====

		
		SELECT name,
		       maxrevenue AS max_revenue_,
		       headquarter
		FROM
		  (SELECT headquarter,
		          name,
		          MAX(revenue) AS maxrevenue
		   FROM manufacturers
		   GROUP BY headquarter,
		            name)
		ORDER BY name

	                   name  max_revenue_       headquarter
	0                ujitsu        129.99            Austin
	1  rqrHJHewlett-Packard         99.98            Beijin
	2       Hewlett-Packard        130.00            Beijin
	3                Fujits        129.98  SXvflLos Angeles
	4               Fujitsu         99.99            eijing
	5       Hewlett-Packard        130.02        os Angeles
Error while executing solution for instance spider/manufactory_1/0034 (1996)

The column label 'Code' is not unique.
Error while checking ground truth in instance spider/manufactory_1/0034 (1996)
Wrong output for fuzzied solution in instance spider/manufactory_1/0024 (1997)
	EXPECTED OUTPUT ====

		SELECT name
		FROM manufacturers
		EXCEPT
		SELECT T2.name
		FROM products AS T1
		JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code
		WHERE T1.name = 'DVD drive'

	           name
	0       Fujitsu
	1  FujitsuMFQml
	2  iiO5oFujitsu
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM `manufacturers` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT `code`,
		                  `name`,
		                  `headquarter`,
		                  `founder`,
		                  `revenue`,
		                  `code_other`,
		                  `name_other`,
		                  `price`,
		                  `code` AS `manufacturer`
		           FROM
		             (SELECT `LHS`.`code` AS `code`,
		                     `LHS`.`name` AS `name`,
		                     `LHS`.`headquarter` AS `headquarter`,
		                     `LHS`.`founder` AS `founder`,
		                     `LHS`.`revenue` AS `revenue`,
		                     `RHS`.`code` AS `code_other`,
		                     `RHS`.`name` AS `name_other`,
		                     `RHS`.`price` AS `price`
		              FROM `manufacturers` AS `LHS`
		              INNER JOIN
		                (SELECT *
		                 FROM `products`
		                 WHERE (`name` = 'DVD drive')) AS RHS ON (LHS.code = RHS.manufacturer))) AS RHS
		        WHERE (LHS.code = RHS.code
		               AND LHS.founder = RHS.founder) ))
		ORDER BY name

	              name
	0          Fujitsu
	1     FujitsuMFQml
	2  Hewlett-Packard
	3     iiO5oFujitsu
Wrong output for fuzzied solution in instance spider/manufactory_1/0021 (1998)
	EXPECTED OUTPUT ====

		SELECT avg(T1.price),
		       T2.name
		FROM products AS T1
		JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code
		GROUP BY T2.name

	   avg(t1.price)                  name
	0     129.996667  rqrHJHewlett-Packard
	1     150.013333       Hewlett-Packard
	2     150.020000                Fujits
	3     180.010000               Fujitsu
	ACTUAL OUTPUT ====

		
		SELECT meanprice AS avg_t1_price_,
		       name
		FROM
		  (SELECT name,
		          revenue,
		          AVG(price) AS meanprice
		   FROM
		     (SELECT code,
		             name,
		             headquarter,
		             founder,
		             revenue,
		             code_other,
		             name_other,
		             price,
		             code AS manufacturer
		      FROM
		        (SELECT LHS.code AS code,
		                LHS.name AS name,
		                LHS.headquarter AS headquarter,
		                LHS.founder AS founder,
		                LHS.revenue AS revenue,
		                RHS.code AS code_other,
		                RHS.name AS name_other,
		                RHS.price AS price
		         FROM manufacturers AS LHS
		         INNER JOIN products AS RHS ON (LHS.code = RHS.manufacturer)))
		   GROUP BY name,
		            revenue)
		ORDER BY avg_t1_price_

	   avg_t1_price_                  name
	0     129.996667  rqrHJHewlett-Packard
	1     135.015000       Hewlett-Packard
	2     150.020000                Fujits
	3     180.010000               Fujitsu
	4     180.010000       Hewlett-Packard
Error while executing solution for instance spider/manufactory_1/0023 (1999)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `name`) OVER () AS `count_distinct_name_`
FROM
  (SELECT *
   FROM `products` AS `LHS`
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM `manufacturers`
           WHERE (`name` = 'Sony')) AS RHS
        WHERE (LHS.code = RHS.code) ))
ORDER BY count_distinct_name_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/manufactory_1/0009 (2002)
Wrong output for fuzzied solution in instance spider/manufactory_1/0025 (2003)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T2.name
		FROM products AS T1
		JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code
		GROUP BY T2.name

	   count(*)                  name
	0         1                Fujits
	1         2               Fujitsu
	2         3       Hewlett-Packard
	3         3  rqrHJHewlett-Packard
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       name
		FROM
		  (SELECT headquarter,
		          name,
		          COUNT() AS n
		   FROM
		     (SELECT code,
		             name,
		             headquarter,
		             founder,
		             revenue,
		             code_other,
		             name_other,
		             price,
		             code AS manufacturer
		      FROM
		        (SELECT LHS.code AS code,
		                LHS.name AS name,
		                LHS.headquarter AS headquarter,
		                LHS.founder AS founder,
		                LHS.revenue AS revenue,
		                RHS.code AS code_other,
		                RHS.name AS name_other,
		                RHS.price AS price
		         FROM manufacturers AS LHS
		         INNER JOIN products AS RHS ON (LHS.code = RHS.manufacturer)))
		   GROUP BY headquarter,
		            name)
		ORDER BY count___

	   count___                  name
	0         1                Fujits
	1         1       Hewlett-Packard
	2         2               Fujitsu
	3         2       Hewlett-Packard
	4         3  rqrHJHewlett-Packard
Wrong output for fuzzied solution in instance spider/manufactory_1/0011 (2004)
	EXPECTED OUTPUT ====

		SELECT sum(revenue)
		FROM manufacturers
		WHERE Headquarter = 'Tokyo'
		  OR Headquarter = 'Taiwan'

	  sum(revenue)
	0         None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT SUM(`revenue`) OVER () AS `sum_revenue_`
		FROM `manufacturers`
		WHERE (`headquarter` = 'Tokyo'
		       OR `headquarter` = 'Taiwan')
		ORDER BY sum_revenue_

	Empty DataFrame
	Columns: [sum_revenue_]
	Index: []
Wrong output for fuzzied solution in instance spider/manufactory_1/0040 (2007)
	EXPECTED OUTPUT ====

		SELECT code,
		       name,
		       min(price)
		FROM products
		GROUP BY name

	   code                   name  min(price)
	0    -1  bCrToner cartridgeicr      269.98
	1     0            Floppy disk      119.99
	2     1             Hard drive      269.98
	3     2   Toner cartridgeWn8a7      119.99
	4     5        Toner cartridge      119.99
	ACTUAL OUTPUT ====

		
		SELECT code,
		       name,
		       price AS min_price_
		FROM
		  (SELECT *
		   FROM products AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT name,
		                  MIN(price) AS price
		           FROM products
		           GROUP BY name) AS RHS
		        WHERE (LHS.name = RHS.name
		               AND LHS.price = RHS.price) ))
		ORDER BY code

	   code                   name  min_price_
	0    -1  bCrToner cartridgeicr      269.98
	1     0            Floppy disk      119.99
	2     1             Hard drive      269.98
	3     2   Toner cartridgeWn8a7      119.99
	4     5        Toner cartridge      119.99
	5     6            Floppy disk      119.99
Wrong output for fuzzied solution in instance spider/manufactory_1/0031 (2009)
	EXPECTED OUTPUT ====

		SELECT avg(price)
		FROM products
		WHERE Manufacturer = 2

	  avg(price)
	0       None
	ACTUAL OUTPUT ====

		
		SELECT meanprice AS avg_price_
		FROM
		  (SELECT manufacturer,
		          AVG(price) AS meanprice
		   FROM products
		   GROUP BY manufacturer)
		WHERE (manufacturer = 2
		       AND meanprice > manufacturer)
		ORDER BY avg_price_

	Empty DataFrame
	Columns: [avg_price_]
	Index: []
No solution for instance spider/loan_1/0033 (2010)
No solution for instance spider/loan_1/0037 (2011)
Wrong output for fuzzied solution in instance spider/loan_1/0002 (2012)
	EXPECTED OUTPUT ====

		SELECT sum(no_of_customers)
		FROM bank

	   sum(no_of_customers)
	0                  1423
	ACTUAL OUTPUT ====

		
		SELECT sumno_of_customers AS sum_no_of_customers_
		FROM
		  (SELECT SUM(no_of_customers) AS sumno_of_customers
		   FROM
		     (SELECT bname,
		             no_of_customers,
		             SUM(no_of_customers) AS sumno_of_customers
		      FROM bank
		      GROUP BY bname,
		               no_of_customers))
		ORDER BY sum_no_of_customers_

	   sum_no_of_customers_
	0                  1219
No solution for instance spider/loan_1/0036 (2013)
Wrong output for fuzzied solution in instance spider/loan_1/0017 (2014)
	EXPECTED OUTPUT ====

		SELECT cust_name
		FROM customer
		EXCEPT
		SELECT cust_name
		FROM customer
		WHERE acc_type = 'saving'

	   cust_name
	0  QtHX3Jack
	ACTUAL OUTPUT ====

		
		SELECT `cust_name`
		FROM `customer`
		WHERE (`acc_type` != 'saving')
		ORDER BY cust_name

	   cust_name
	0       Jack
	1       Jack
	2       Jack
	3  QtHX3Jack
No solution for instance spider/loan_1/0038 (2017)
Wrong output for fuzzied solution in instance spider/loan_1/0003 (2018)
	EXPECTED OUTPUT ====

		SELECT sum(no_of_customers)
		FROM bank
		WHERE city = 'New York City'

	  sum(no_of_customers)
	0                 None
	ACTUAL OUTPUT ====

		
		SELECT `sumno_of_customers` AS `sum_no_of_customers_`
		FROM
		  (SELECT `city`,
		          SUM(`no_of_customers`) AS `sumno_of_customers`
		   FROM
		     (SELECT *
		      FROM `bank`
		      WHERE (`city` = 'New York City'))
		   GROUP BY city)
		ORDER BY sum_no_of_customers_

	Empty DataFrame
	Columns: [sum_no_of_customers_]
	Index: []
Wrong output for fuzzied solution in instance spider/loan_1/0027 (2019)
	EXPECTED OUTPUT ====

		SELECT sum(acc_bal),
		       state
		FROM customer
		WHERE credit_score > 100
		GROUP BY state

	   sum(acc_bal)           state
	0       1601002        New York
	1        800002   New Yorkm3p7S
	2        800001  xR6New Yorku9V
	ACTUAL OUTPUT ====

		
		SELECT acc_bal AS sum_acc_bal_,
		       state
		FROM
		  (SELECT acc_bal,
		          state,
		          SUM(credit_score) AS sumcredit_score
		   FROM customer
		   GROUP BY acc_bal,
		            state)
		WHERE (acc_bal != 100
		       AND sumcredit_score > 100)
		ORDER BY sum_acc_bal_

	   sum_acc_bal_           state
	0           999        New York
	1        800001        New York
	2        800002        New York
	3        800002   New Yorkm3p7S
	4        800001  xR6New Yorku9V
Wrong output for fuzzied solution in instance spider/loan_1/0022 (2020)
	EXPECTED OUTPUT ====

		SELECT cust_name
		FROM customer
		ORDER BY credit_score
		LIMIT 1

	   cust_name
	0  JackNjGvY
	ACTUAL OUTPUT ====

		
		SELECT cust_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM customer
		      ORDER BY cust_name)
		   LIMIT 1)

	    cust_name
	0  9DOJackoNt
Wrong output for fuzzied solution in instance spider/loan_1/0030 (2021)
	EXPECTED OUTPUT ====

		SELECT T1.cust_name,
		       T1.acc_type
		FROM customer AS T1
		JOIN loan AS T2 ON T1.cust_id = T2.cust_id
		GROUP BY T1.cust_name
		HAVING sum(T2.amount) > 5000

	    cust_name     acc_type
	0   sRL41Jack  SV(bGsaving
	1  9DOJackoNt        savin
	2   JackNjGvY        savin
	3   JackKXtRR       saving
	4   JackkkCRX  saving86jvI
	5         ack  savingVVdvx
	6        Jack  savinggMVnm
	7         Jac  unnzMsaving
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT cust_name,
		                acc_type
		FROM
		  (SELECT LHS.cust_id AS cust_id,
		          LHS.loan_type AS loan_type,
		          LHS.sumamount AS sumamount,
		          RHS.cust_name AS cust_name,
		          RHS.acc_type AS acc_type,
		          RHS.acc_bal AS acc_bal,
		          RHS.no_of_loans AS no_of_loans,
		          RHS.credit_score AS credit_score,
		          RHS.branch_id AS branch_id,
		          RHS.state AS state
		   FROM
		     (SELECT cust_id,
		             loan_type,
		             SUM(amount) AS sumamount
		      FROM loan
		      WHERE (amount != 5000)
		      GROUP BY cust_id,
		               loan_type) AS LHS
		   LEFT JOIN customer AS RHS ON (LHS.cust_id = RHS.cust_id))
		ORDER BY cust_name

	     cust_name      acc_type
	0         Jack  ))8savingCui
	1         Jack         aving
	2    JackaV)xh         aving
	3   9DOJackoNt         savin
	4          Jac         savin
	5         Jack         savin
	6    JackNjGvY         savin
	7          ack         savin
	8   BJGJacktKp        saving
	9          Jac        saving
	10        Jack        saving
	11   JackKXtRR        saving
	12   x3TVeJack        saving
	13   JackkkCRX   saving86jvI
	14         ack   savingVVdvx
	15         Jac   unnzMsaving
Error while executing solution for instance spider/loan_1/0013 (2022)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT acc_type) OVER () AS count_distinct_acc_type_
FROM customer
ORDER BY count_distinct_acc_type_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/loan_1/0004 (2024)
	EXPECTED OUTPUT ====

		SELECT avg(no_of_customers)
		FROM bank
		WHERE state = 'Utah'

	   avg(no_of_customers)
	0                 162.5
	ACTUAL OUTPUT ====

		
		SELECT `no_of_customers` AS `avg_no_of_customers_`
		FROM
		  (SELECT `no_of_customers`,
		          `state`,
		          AVG(`no_of_customers`) AS `meanno_of_customers`
		   FROM `bank`
		   GROUP BY `no_of_customers`,
		            `state`)
		WHERE (`state` = 'Utah'
		       AND meanno_of_customers >= no_of_customers)
		ORDER BY avg_no_of_customers_

	   avg_no_of_customers_
	0                   122
	1                   203
Error while executing solution for instance spider/loan_1/0012 (2025)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT state) OVER () AS count_distinct_state_
FROM
  (SELECT city,
          state,
          COUNT(DISTINCT state) AS n_distinct
   FROM bank
   GROUP BY city,
            state)
ORDER BY count_distinct_state_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/loan_1/0026 (2026)
	EXPECTED OUTPUT ====

		SELECT avg(acc_bal),
		       acc_type
		FROM customer
		WHERE credit_score < 50
		GROUP BY acc_type

	     avg(acc_bal)      acc_type
	0     1001.000000  CE saving4jX
	1   800000.000000   MYay8saving
	2   799999.000000   WBUj5saving
	3   640199.400000         aving
	4   800000.000000  bJAsavingBEz
	5   799998.000000  ez7savingBYP
	6     1002.000000  o6tsavingXWA
	7   640200.400000         savin
	8   457571.571429        saving
	9     1002.000000   saving6YLEu
	10  799999.000000   savingVVdvx
	11     999.000000   savingdFA2N
	12  800001.000000   savingmN3A5
	13  800002.000000   savingy0TVi
	14    1000.000000   unnzMsaving
	ACTUAL OUTPUT ====

		
		SELECT meanacc_bal AS avg_acc_bal_,
		       acc_type
		FROM
		  (SELECT acc_type,
		          cust_name,
		          AVG(acc_bal) AS meanacc_bal
		   FROM
		     (SELECT *
		      FROM customer
		      WHERE (credit_score < 50
		             AND credit_score <= acc_bal))
		   GROUP BY acc_type,
		            cust_name)
		ORDER BY avg_acc_bal_

	     avg_acc_bal_      acc_type
	0     1001.000000  CE saving4jX
	1   800000.000000   MYay8saving
	2   799999.000000   WBUj5saving
	3     1001.000000         aving
	4   799998.000000         aving
	5   799999.000000         aving
	6   799999.000000         aving
	7   800000.000000         aving
	8   800000.000000  bJAsavingBEz
	9   799998.000000  ez7savingBYP
	10    1002.000000  o6tsavingXWA
	11    1000.000000         savin
	12  799999.000000         savin
	13  800000.000000         savin
	14  800001.500000         savin
	15    1000.000000        saving
	16    1001.000000        saving
	17  533667.333333        saving
	18  799998.000000        saving
	19  800000.000000        saving
	20    1002.000000   saving6YLEu
	21  799999.000000   savingVVdvx
	22     999.000000   savingdFA2N
	23  800001.000000   savingmN3A5
	24  800002.000000   savingy0TVi
	25    1000.000000   unnzMsaving
Wrong output for fuzzied solution in instance spider/loan_1/0005 (2028)
	EXPECTED OUTPUT ====

		SELECT avg(no_of_customers)
		FROM bank

	   avg(no_of_customers)
	0            203.285714
	ACTUAL OUTPUT ====

		
		SELECT meanno_of_customers AS avg_no_of_customers_
		FROM
		  (SELECT AVG(no_of_customers) AS meanno_of_customers
		   FROM
		     (SELECT bname,
		             no_of_customers,
		             AVG(no_of_customers) AS meanno_of_customers
		      FROM bank
		      GROUP BY bname,
		               no_of_customers))
		ORDER BY avg_no_of_customers_

	   avg_no_of_customers_
	0            203.166667
Wrong output for fuzzied solution in instance spider/loan_1/0032 (2029)
	EXPECTED OUTPUT ====

		SELECT T2.bname
		FROM loan AS T1
		JOIN bank AS T2 ON T1.branch_id = T2.branch_id
		JOIN customer AS T3 ON T1.cust_id = T3.cust_id
		WHERE T3.credit_score < 100
		GROUP BY T2.bname
		ORDER BY sum(T1.amount) DESC
		LIMIT 1

	  bname
	0  high
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT bname
		FROM
		  (SELECT LHS.branch_id AS branch_id,
		          LHS.bname AS bname,
		          LHS.no_of_customers AS no_of_customers,
		          LHS.city AS city,
		          LHS.state AS state,
		          LHS.cust_id AS cust_id,
		          LHS.cust_name AS cust_name,
		          LHS.acc_type AS acc_type,
		          LHS.acc_bal AS acc_bal,
		          LHS.no_of_loans AS no_of_loans,
		          LHS.credit_score AS credit_score,
		          RHS.loan_id AS loan_id,
		          RHS.sumamount AS sumamount
		   FROM
		     (SELECT LHS.branch_id AS branch_id,
		             LHS.bname AS bname,
		             LHS.no_of_customers AS no_of_customers,
		             LHS.city AS city,
		             LHS.state AS state,
		             LHS.cust_id AS cust_id,
		             LHS.cust_name AS cust_name,
		             LHS.acc_type AS acc_type,
		             LHS.acc_bal AS acc_bal,
		             LHS.no_of_loans AS no_of_loans,
		             LHS.credit_score AS credit_score
		      FROM
		        (SELECT LHS.branch_id AS branch_id,
		                LHS.bname AS bname,
		                LHS.no_of_customers AS no_of_customers,
		                LHS.city AS city,
		                LHS.state AS state,
		                RHS.cust_id AS cust_id,
		                RHS.cust_name AS cust_name,
		                RHS.acc_type AS acc_type,
		                RHS.acc_bal AS acc_bal,
		                RHS.no_of_loans AS no_of_loans,
		                RHS.credit_score AS credit_score
		         FROM bank AS LHS
		         INNER JOIN customer AS RHS ON (LHS.branch_id = RHS.branch_id
		                                           AND LHS.state = RHS.state)) AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM customer
		         WHERE (credit_score < 100
		                AND credit_score != 1)) AS RHS ON (LHS.branch_id = RHS.branch_id
		                                                   AND LHS.state = RHS.state
		                                                   AND LHS.cust_id = RHS.cust_id
		                                                   AND LHS.cust_name = RHS.cust_name
		                                                   AND LHS.acc_type = RHS.acc_type
		                                                   AND LHS.acc_bal = RHS.acc_bal
		                                                   AND LHS.no_of_loans = RHS.no_of_loans
		                                                   AND LHS.credit_score = RHS.credit_score)) AS LHS
		   INNER JOIN
		     (SELECT cust_id,
		             loan_id,
		             SUM(amount) AS sumamount
		      FROM loan
		      GROUP BY cust_id,
		               loan_id) AS RHS ON (LHS.cust_id = RHS.cust_id))
		ORDER BY bname

	Empty DataFrame
	Columns: [bname]
	Index: []
Wrong output for fuzzied solution in instance spider/loan_1/0018 (2030)
	EXPECTED OUTPUT ====

		SELECT cust_name
		FROM customer
		EXCEPT
		SELECT T1.cust_name
		FROM customer AS T1
		JOIN loan AS T2 ON T1.cust_id = T2.cust_id
		WHERE T2.loan_type = 'Mortgages'

	    cust_name
	0  0J2JackQ9B
	1  GFRJackUVZ
	2        Jack
	3   JackcNCkC
	4  V8RJackX5o
	5         ack
	6   gUdkrJack
	ACTUAL OUTPUT ====

		
		SELECT `cust_name`
		FROM
		  (SELECT *
		   FROM `customer` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `loan`
		           WHERE (`loan_type` = 'Mortgages')) AS RHS
		        WHERE (LHS.cust_id = RHS.cust_id) ))
		ORDER BY cust_name

	     cust_name
	0   0J2JackQ9B
	1   GFRJackUVZ
	2          Jac
	3          Jac
	4         Jack
	5         Jack
	6         Jack
	7         Jack
	8         Jack
	9         Jack
	10        Jack
	11   JackcNCkC
	12  V8RJackX5o
	13         ack
	14         ack
	15   gUdkrJack
Wrong output for fuzzied solution in instance spider/loan_1/0035 (2031)
	EXPECTED OUTPUT ====

		SELECT T1.cust_name
		FROM customer AS T1
		JOIN loan AS T2 ON T1.cust_id = T2.cust_id
		WHERE amount > 3000

	     cust_name
	0   9DOJackoNt
	1    B yF0Jack
	2   BJGMarytKp
	3          Jac
	4          Jac
	5         Jack
	6         Jack
	7         Jack
	8         Jack
	9    JackKXtRR
	10         Mar
	11        Mary
	12   MaryNjGvY
	13         ack
	14         ack
	15         ary
	16         ary
	17         ary
	18   sRL41Jack
	19   x3TVeJack
	ACTUAL OUTPUT ====

		
		SELECT cust_name
		FROM
		  (SELECT LHS.cust_id AS cust_id,
		          LHS.cust_name AS cust_name,
		          LHS.acc_type AS acc_type,
		          LHS.acc_bal AS acc_bal,
		          LHS.no_of_loans AS no_of_loans,
		          LHS.credit_score AS credit_score,
		          LHS.branch_id AS branch_id,
		          LHS.state AS state,
		          RHS.loan_id AS loan_id,
		          RHS.loan_type AS loan_type,
		          RHS.cust_id AS cust_id_other,
		          RHS.amount AS amount
		   FROM customer AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM loan AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM loan
		              WHERE (amount <= 3000)) AS RHS
		           WHERE (LHS.loan_id = RHS.loan_id) )) AS RHS ON (LHS.cust_id = RHS.branch_id))
		ORDER BY cust_name

	  cust_name
	0      Jack
	1      Jack
	2      Jack
	3      Jack
	4      Mary
	5      Mary
	6      Mary
	7      Mary
	8      Mary
	9      Mary
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/loan_1/0019 (2033)
	EXPECTED OUTPUT ====

		SELECT T1.cust_name
		FROM customer AS T1
		JOIN loan AS T2 ON T1.cust_id = T2.cust_id
		WHERE loan_type = 'Mortgages' INTERSECT
		  SELECT T1.cust_name
		  FROM customer AS T1
		  JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Auto'

	  cust_name
	0       Jac
	1      Jack
	ACTUAL OUTPUT ====

		
		SELECT `cust_name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT `LHS`.`cust_id` AS `cust_id`,
		             `LHS`.`cust_name` AS `cust_name`,
		             `LHS`.`acc_type` AS `acc_type`,
		             `LHS`.`acc_bal` AS `acc_bal`,
		             `LHS`.`no_of_loans` AS `no_of_loans`,
		             `LHS`.`credit_score` AS `credit_score`,
		             `LHS`.`branch_id` AS `branch_id`,
		             `LHS`.`state` AS `state`,
		             `RHS`.`loan_id` AS `loan_id`,
		             `RHS`.`loan_type` AS `loan_type`,
		             `RHS`.`branch_id` AS `branch_id_other`,
		             `RHS`.`amount` AS `amount`
		      FROM `customer` AS `LHS`
		      INNER JOIN `loan` AS `RHS` ON (`LHS`.`cust_id` = `RHS`.`cust_id`)) AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `loan`
		           WHERE (`loan_type` = 'Mortgages'
		                  OR `loan_type` != 'Auto')) AS RHS
		        WHERE (LHS.cust_id = RHS.cust_id
		               AND LHS.loan_type = RHS.loan_type) ))
		ORDER BY cust_name

	     cust_name
	0          Jac
	1          Jac
	2          Jac
	3          Jac
	4          Jac
	5         Jack
	6         Jack
	7         Jack
	8         Jack
	9         Jack
	10        Jack
	11        Jack
	12        Jack
	13        Jack
	14   JackW9jZ1
	15   JackW9jZ1
	16   bPoTqJack
	17   bPoTqJack
	18   bPoTqJack
	19  ruGJackb1e
Wrong output for fuzzied solution in instance spider/loan_1/0034 (2035)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.cust_name,
		                T1.credit_score
		FROM customer AS T1
		JOIN loan AS T2 ON T1.cust_id = T2.cust_id

	     cust_name  credit_score
	0          Jac            18
	1         Jack            18
	2    JackNjGvY            18
	3    JackaV)xh            18
	4          ack            18
	5   9DOJackoNt            19
	6         Jack            19
	7          Jac            20
	8         Jack            20
	9    JackkkCRX            20
	10         Jac            21
	11        Jack            21
	12   sRL41Jack            21
	13        Jack            22
	14   JackKXtRR            22
	15         Jac            29
	16  BJGJacktKp            30
	17        Jack            30
	18   x3TVeJack            31
	19         ack            32
	ACTUAL OUTPUT ====

		
		SELECT cust_name,
		       credit_score
		FROM
		  (SELECT *
		   FROM customer AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT cust_id
		           FROM loan INTERSECT SELECT cust_id
		           FROM loan) AS RHS
		        WHERE (LHS.cust_id = RHS.cust_id) ))
		ORDER BY cust_name

	     cust_name  credit_score
	0          Jac            18
	1         Jack            18
	2         Jack            18
	3    JackNjGvY            18
	4    JackaV)xh            18
	5          ack            18
	6   9DOJackoNt            19
	7         Jack            19
	8          Jac            20
	9         Jack            20
	10        Jack            20
	11        Jack            20
	12   JackkkCRX            20
	13         Jac            21
	14        Jack            21
	15   sRL41Jack            21
	16        Jack            22
	17   JackKXtRR            22
	18         Jac            29
	19  BJGJacktKp            30
	20        Jack            30
	21   x3TVeJack            31
	22         ack            32
Wrong output for fuzzied solution in instance spider/loan_1/0024 (2036)
	EXPECTED OUTPUT ====

		SELECT T1.cust_name
		FROM customer AS T1
		JOIN loan AS T2 ON T1.cust_id = T2.cust_id
		GROUP BY T1.cust_name
		ORDER BY sum(T2.amount) DESC
		LIMIT 1

	  cust_name
	0      Owen
	ACTUAL OUTPUT ====

		
		SELECT cust_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.cust_id AS cust_id,
		                LHS.cust_name AS cust_name,
		                LHS.acc_type AS acc_type,
		                LHS.acc_bal AS acc_bal,
		                LHS.no_of_loans AS no_of_loans,
		                LHS.credit_score AS credit_score,
		                LHS.branch_id AS branch_id,
		                LHS.state AS state,
		                RHS.sumamount AS sumamount
		         FROM customer AS LHS
		         INNER JOIN
		           (SELECT cust_id,
		                   SUM(amount) AS sumamount
		            FROM loan
		            GROUP BY cust_id) AS RHS ON (LHS.cust_id = RHS.cust_id))
		      ORDER BY acc_bal)
		   LIMIT 1)

	   cust_name
	0  OwenCDeBJ
Wrong output for fuzzied solution in instance spider/loan_1/0021 (2037)
	EXPECTED OUTPUT ====

		SELECT bname
		FROM bank
		ORDER BY no_of_customers DESC
		LIMIT 1

	  bname
	0  high
	ACTUAL OUTPUT ====

		
		SELECT bname
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM bank
		      ORDER BY bname)
		   LIMIT 1)

	      bname
	0  broadway
Wrong output for fuzzied solution in instance spider/loan_1/0023 (2038)
	EXPECTED OUTPUT ====

		SELECT cust_name,
		       acc_type,
		       acc_bal
		FROM customer
		ORDER BY credit_score DESC
		LIMIT 1

	  cust_name     acc_type  acc_bal
	0       ack  savingVVdvx     1001
	ACTUAL OUTPUT ====

		
		SELECT cust_name,
		       acc_type,
		       acc_bal
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM customer
		      ORDER BY no_of_loans)
		   LIMIT 1)

	  cust_name      acc_type  acc_bal
	0      Jack  ))8savingCui   800001
No solution for instance spider/loan_1/0001 (2039)
No solution for instance spider/loan_1/0014 (2040)
Wrong output for fuzzied solution in instance spider/loan_1/0009 (2041)
	EXPECTED OUTPUT ====

		SELECT T1.cust_name
		FROM customer AS T1
		JOIN loan AS T2 ON T1.cust_id = T2.cust_id
		GROUP BY T1.cust_name
		ORDER BY sum(T2.amount)

	     cust_name
	0   9DOJackoNt
	1   BJGJacktKp
	2          Jac
	3         Jack
	4    JackKXtRR
	5    JackNjGvY
	6    JackaV)xh
	7    JackkkCRX
	8          ack
	9    sRL41Jack
	10   x3TVeJack
	ACTUAL OUTPUT ====

		
		SELECT cust_name
		FROM
		  (SELECT *
		   FROM customer AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT cust_id,
		                  SUM(amount) AS sumamount
		           FROM loan
		           GROUP BY cust_id) AS RHS
		        WHERE (LHS.cust_id = RHS.cust_id) ))
		ORDER BY cust_name

	     cust_name
	0   9DOJackoNt
	1   BJGJacktKp
	2          Jac
	3          Jac
	4          Jac
	5          Jac
	6         Jack
	7         Jack
	8         Jack
	9         Jack
	10        Jack
	11        Jack
	12        Jack
	13        Jack
	14        Jack
	15   JackKXtRR
	16   JackNjGvY
	17   JackaV)xh
	18   JackkkCRX
	19         ack
	20         ack
	21   sRL41Jack
	22   x3TVeJack
Wrong output for fuzzied solution in instance spider/loan_1/0025 (2042)
	EXPECTED OUTPUT ====

		SELECT state
		FROM bank
		GROUP BY state
		ORDER BY sum(no_of_customers) DESC
		LIMIT 1

	  state
	0  Utah
	ACTUAL OUTPUT ====

		
		SELECT state
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT city,
		                state,
		                SUM(no_of_customers) AS sumno_of_customers
		         FROM bank
		         GROUP BY city,
		                  state)
		      ORDER BY sumno_of_customers DESC)
		   LIMIT 1)

	   state
	0  Texas
No solution for instance spider/loan_1/0029 (2044)
Wrong output for fuzzied solution in instance spider/loan_1/0010 (2045)
	EXPECTED OUTPUT ====

		SELECT state,
		       acc_type,
		       credit_score
		FROM customer
		WHERE no_of_loans = 0

	            state      acc_type  credit_score
	0         ew York  QFBsavingtKj            20
	1  hfJNew Yorka80         aving            30
	2        New York  bJAsavingBEz            21
	3        New York        saving            20
	4  oH2New Yorkf5B        saving            20
	5   aB1B4New York        saving            32
	6  XCgNew York0vg   savingAODHS            19
	ACTUAL OUTPUT ====

		
		SELECT state,
		       acc_type,
		       credit_score
		FROM
		  (SELECT LHS.cust_id AS cust_id,
		          LHS.cust_name AS cust_name,
		          LHS.acc_type AS acc_type,
		          LHS.acc_bal AS acc_bal,
		          LHS.no_of_loans AS no_of_loans,
		          LHS.credit_score AS credit_score,
		          LHS.branch_id AS branch_id,
		          LHS.state AS state
		   FROM
		     (SELECT *
		      FROM customer
		      WHERE (no_of_loans <= 0)) AS LHS
		   LEFT JOIN customer AS RHS ON (LHS.cust_id = RHS.cust_id
		                                    AND LHS.cust_name = RHS.cust_name
		                                    AND LHS.acc_type = RHS.acc_type
		                                    AND LHS.acc_bal = RHS.acc_bal
		                                    AND LHS.no_of_loans = RHS.no_of_loans
		                                    AND LHS.credit_score = RHS.credit_score
		                                    AND LHS.branch_id = RHS.branch_id
		                                    AND LHS.state = RHS.state))
		ORDER BY state

	            state      acc_type  credit_score
	0         ew York  QFBsavingtKj            20
	1        New York   WBUj5saving            20
	2  hfJNew Yorka80         aving            30
	3        New York  bJAsavingBEz            21
	4        New York         savin            31
	5        New York        saving            20
	6  oH2New Yorkf5B        saving            20
	7        New York        saving            22
	8   aB1B4New York        saving            32
	9  XCgNew York0vg   savingAODHS            19
Wrong output for fuzzied solution in instance spider/loan_1/0040 (2046)
	EXPECTED OUTPUT ====

		SELECT avg(credit_score)
		FROM customer
		WHERE cust_id NOT IN
		    (SELECT cust_id
		     FROM loan)

	   avg(credit_score)
	0               22.0
	ACTUAL OUTPUT ====

		
		SELECT meancredit_score AS avg_credit_score_
		FROM
		  (SELECT *
		   FROM
		     (SELECT cust_id,
		             cust_name,
		             AVG(credit_score) AS meancredit_score
		      FROM customer
		      GROUP BY cust_id,
		               cust_name) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM loan AS RHS
		        WHERE (LHS.cust_id = RHS.cust_id) ))
		ORDER BY avg_credit_score_

	    avg_credit_score_
	0                18.0
	1                19.0
	2                20.0
	3                20.0
	4                20.0
	5                21.0
	6                21.0
	7                22.0
	8                22.0
	9                28.0
	10               31.0
No solution for instance spider/loan_1/0028 (2047)
Wrong output for fuzzied solution in instance spider/loan_1/0031 (2048)
	EXPECTED OUTPUT ====

		SELECT T1.bname
		FROM bank AS T1
		JOIN loan AS T2 ON T1.branch_id = T2.branch_id
		GROUP BY T1.bname
		ORDER BY sum(T2.amount) DESC
		LIMIT 1

	     bname
	0  roadway
	ACTUAL OUTPUT ====

		
		SELECT bname
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.branch_id AS branch_id,
		                LHS.bname AS bname,
		                LHS.no_of_customers AS no_of_customers,
		                LHS.city AS city,
		                LHS.state AS state,
		                RHS.amount AS amount,
		                RHS.cust_id AS cust_id,
		                RHS.sumamount AS sumamount
		         FROM bank AS LHS
		         CROSS JOIN
		           (SELECT amount,
		                   cust_id,
		                   SUM(amount) AS sumamount
		            FROM loan
		            GROUP BY amount,
		                     cust_id) AS RHS)
		      ORDER BY no_of_customers DESC)
		   LIMIT 1)

	        bname
	0  morningsid
Wrong output for fuzzied solution in instance spider/phone_market/0008 (2050)
	EXPECTED OUTPUT ====

		SELECT Carrier
		FROM phone
		GROUP BY Carrier
		ORDER BY COUNT(*) DESC
		LIMIT 1

	   carrier
	0  TMobile
	ACTUAL OUTPUT ====

		
		SELECT carrier
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT carrier,
		                memory_in_g,
		                COUNT() AS n
		         FROM phone
		         GROUP BY carrier,
		                  memory_in_g)
		      ORDER BY memory_in_g)
		   LIMIT 1)

	   carrier
	0  1N GFW 
No solution for instance spider/phone_market/0013 (2052)
Wrong output for fuzzied solution in instance spider/phone_market/0012 (2055)
	EXPECTED OUTPUT ====

		SELECT T3.Name
		FROM phone_market AS T1
		JOIN market AS T2 ON T1.Market_ID = T2.Market_ID
		JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID
		WHERE T2.Num_of_shops > 50

	             name
	0         IPhone 
	1         IPhone 
	2         IPhone 
	3         IPhone 
	4         IPhone 
	5         IPhone 
	6       IPhone 6s
	7       IPhone 6s
	8       IPhone 6s
	9       IPhone 6s
	10       IPhone 7
	11       IPhone 7
	12       IPhone 7
	13       IPhone 7
	14       IPhone 7
	15       IPhone 7
	16       IPhone 7
	17        Phone 7
	18  WXl1FIPhone 7
	19  WXl1FIPhone 7
	20  WXl1FIPhone 7
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.name AS name,
		          LHS.phone_id AS phone_id,
		          LHS.memory_in_g AS memory_in_g,
		          LHS.carrier AS carrier,
		          LHS.price AS price,
		          RHS.market_id AS market_id,
		          RHS.district AS district,
		          RHS.num_of_employees AS num_of_employees,
		          RHS.num_of_shops AS num_of_shops,
		          RHS.phone_id AS phone_id_other,
		          RHS.num_of_stock AS num_of_stock
		   FROM phone AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT LHS.market_id AS market_id,
		                LHS.district AS district,
		                LHS.num_of_employees AS num_of_employees,
		                LHS.num_of_shops AS num_of_shops,
		                LHS.ranking AS ranking,
		                RHS.phone_id AS phone_id,
		                RHS.num_of_stock AS num_of_stock
		         FROM market AS LHS
		         INNER JOIN phone_market AS RHS ON (LHS.market_id = RHS.market_id))
		      WHERE (num_of_shops != 50.0)) AS RHS ON (LHS.phone_id = RHS.ranking))
		ORDER BY name

	            name
	0        IPhone 
	1      IPhone 6s
	2       IPhone 7
	3        Phone 7
	4  WXl1FIPhone 7
Wrong output for fuzzied solution in instance spider/phone_market/0015 (2056)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM phone
		WHERE Phone_id NOT IN
		    (SELECT Phone_ID
		     FROM phone_market)

	            name
	0  IPhone 6TabjJ
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM phone AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT LHS.name AS name,
		                     LHS.phone_id AS phone_id,
		                     LHS.memory_in_g AS memory_in_g,
		                     LHS.carrier AS carrier,
		                     LHS.price AS price,
		                     RHS.market_id AS market_id,
		                     RHS.phone_id AS phone_id_other,
		                     RHS.num_of_stock AS num_of_stock
		              FROM phone AS LHS
		              CROSS JOIN phone_market AS RHS)
		           WHERE (phone_id = phone_id_other
		                  OR phone_id = phone_id_other)) AS RHS
		        WHERE (LHS.price = RHS.price) ))
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
No solution for instance spider/phone_market/0007 (2058)
No solution for instance spider/phone_market/0014 (2060)
Wrong output for fuzzied solution in instance spider/phone_market/0009 (2061)
	EXPECTED OUTPUT ====

		SELECT Carrier
		FROM phone
		WHERE Memory_in_G < 32 INTERSECT
		  SELECT Carrier
		  FROM phone WHERE Memory_in_G > 64

	Empty DataFrame
	Columns: [carrier]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT carrier
		FROM
		  (SELECT LHS.name AS name,
		          LHS.phone_id AS phone_id,
		          LHS.memory_in_g AS memory_in_g,
		          LHS.carrier AS carrier,
		          LHS.price AS price,
		          RHS.name AS name_other,
		          RHS.phone_id AS phone_id_other,
		          RHS.memory_in_g AS memory_in_g_other,
		          RHS.carrier AS carrier_other,
		          RHS.price AS price_other
		   FROM
		     (SELECT *
		      FROM phone
		      WHERE (memory_in_g != 32
		             AND memory_in_g = 64)) AS LHS
		   CROSS JOIN phone AS RHS)
		WHERE (memory_in_g = memory_in_g_other)
		ORDER BY carrier

	         carrier
	0         667U11
	1         667U11
	2         667U11
	3  Pg4TMobile)TK
	4  Pg4TMobile)TK
	5  Pg4TMobile)TK
	6        TMobile
	7        TMobile
	8        TMobile
No solution for instance spider/phone_market/0011 (2062)
No solution for instance spider/phone_market/0010 (2063)
Wrong output for fuzzied solution in instance spider/coffee_shop/0017 (2065)
	EXPECTED OUTPUT ====

		SELECT MONTH
		FROM happy_hour
		GROUP BY MONTH
		ORDER BY count(*) DESC
		LIMIT 1

	  month
	0  June
	ACTUAL OUTPUT ====

		
		SELECT MONTH
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT hh_id,
		                MONTH,
		                COUNT() AS n
		         FROM happy_hour
		         GROUP BY hh_id,
		                  MONTH)
		      ORDER BY MONTH DESC)
		   LIMIT 1)

	         month
	0  yv3AprilHc1
Wrong output for fuzzied solution in instance spider/coffee_shop/0008 (2066)
	EXPECTED OUTPUT ====

		SELECT membership_card
		FROM member
		WHERE address = 'Hartford' INTERSECT
		  SELECT membership_card
		  FROM member WHERE address = 'Waterbury'

	Empty DataFrame
	Columns: [membership_card]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `membership_card`
		FROM
		  (SELECT `membership_card`
		   FROM `member`
		   WHERE (`address` = 'Hartford'
		          AND `address` != 'Waterbury') INTERSECT
		     SELECT `membership_card`
		     FROM `member` WHERE (`address` = 'Hartford'
		                             AND `address` != 'Waterbury'))
		ORDER BY membership_card

	  membership_card
	0      K(BR9Black
Wrong output for fuzzied solution in instance spider/coffee_shop/0003 (2067)
	EXPECTED OUTPUT ====

		SELECT name
		FROM member
		WHERE address = 'Harford'
		  OR address = 'Waterbury'

	                        name
	0              Ashby, Lazale
	1              Ashby, Lazale
	2        Breton, RobertgtdnY
	3        Breton, Robertj1Otm
	4         EbLOMAshby, Lazale
	5              Fx GgHhxVO)u8
	6       Hu6Breton, RobertXNL
	7   KvuyuIcV5KLVs(P3Saxfn91g
	8        VP7Ashby, LazaleJGw
	9          VbwAgnCe3QLzdAVR(
	10          eynolds, Richard
	11        r9IHkAshby, Lazale
	12              shby, Lazale
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM `member`
		WHERE (`address` = 'Waterbury')
		ORDER BY name

	                  name
	0        Ashby, Lazale
	1  Breton, RobertgtdnY
	2  Breton, Robertj1Otm
	3        Fx GgHhxVO)u8
	4  VP7Ashby, LazaleJGw
	5    VbwAgnCe3QLzdAVR(
	6     eynolds, Richard
	7   r9IHkAshby, Lazale
	8         shby, Lazale
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for fuzzied solution in instance spider/coffee_shop/0004 (2070)
	EXPECTED OUTPUT ====

		SELECT name,
		       member_id
		FROM member
		WHERE Membership_card = 'Black'
		  OR age < 30

	         name  member_id
	0  izzo, Todd          9
	ACTUAL OUTPUT ====

		
		SELECT `name`,
		       `member_id`
		FROM
		  (SELECT *
		   FROM `member` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `member`
		           WHERE (`membership_card` = 'Black'
		                  AND age != 30)) AS RHS
		        WHERE (LHS.member_id = RHS.member_id
		               AND LHS.name = RHS.name
		               AND LHS.membership_card = RHS.membership_card
		               AND LHS.age = RHS.age
		               AND LHS.time_of_purchase = RHS.time_of_purchase
		               AND LHS.level_of_membership = RHS.level_of_membership
		               AND LHS.address = RHS.address) ))
		ORDER BY name

	Empty DataFrame
	Columns: [name, member_id]
	Index: []
No solution for instance spider/coffee_shop/0012 (2071)
Wrong output for fuzzied solution in instance spider/coffee_shop/0016 (2074)
	EXPECTED OUTPUT ====

		SELECT shop_id,
		       count(*)
		FROM happy_hour
		GROUP BY shop_id
		ORDER BY count(*) DESC
		LIMIT 1

	   shop_id  count(*)
	0        4        16
	ACTUAL OUTPUT ====

		
		SELECT n AS shop_id,
		       num_of_shaff_in_charge AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT MONTH,
		                num_of_shaff_in_charge,
		                COUNT() AS n
		         FROM happy_hour
		         GROUP BY MONTH,
		                  num_of_shaff_in_charge)
		      ORDER BY MONTH)
		   LIMIT 1)

	   shop_id  count___
	0        1        10
Wrong output for fuzzied solution in instance spider/coffee_shop/0018 (2075)
	EXPECTED OUTPUT ====

		SELECT MONTH
		FROM happy_hour
		GROUP BY MONTH
		HAVING count(*) > 2

	   month
	0  April
	1    Jul
	2   July
	3    Jun
	4   June
	5    uly
	ACTUAL OUTPUT ====

		
		SELECT MONTH
		FROM
		  (SELECT MONTH,
		          num_of_shaff_in_charge,
		          COUNT() AS n
		   FROM happy_hour
		   GROUP BY MONTH,
		            num_of_shaff_in_charge)
		WHERE (n >= 2)
		ORDER BY MONTH

	    month
	0   April
	1    July
	2    July
	3    July
	4    July
	5    June
	6    June
	7    June
	8    June
	9    June
	10   June
	11    uly
Wrong output for fuzzied solution in instance spider/coffee_shop/0007 (2076)
	EXPECTED OUTPUT ====

		SELECT address
		FROM member
		WHERE age < 30 INTERSECT
		  SELECT address
		  FROM member WHERE age > 40

	    address
	0  Hartford
	ACTUAL OUTPUT ====

		
		SELECT address
		FROM
		  (SELECT LHS.member_id AS member_id,
		          LHS.name AS name,
		          LHS.membership_card AS membership_card,
		          LHS.age AS age,
		          LHS.time_of_purchase AS time_of_purchase,
		          LHS.level_of_membership AS level_of_membership,
		          LHS.address AS address
		   FROM member AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM member
		      WHERE (age <= 30
		             AND age < 40)) AS RHS ON (LHS.member_id = RHS.member_id
		                                       AND LHS.name = RHS.name
		                                       AND LHS.membership_card = RHS.membership_card
		                                       AND LHS.age = RHS.age
		                                       AND LHS.time_of_purchase = RHS.time_of_purchase
		                                       AND LHS.level_of_membership = RHS.level_of_membership
		                                       AND LHS.address = RHS.address))
		ORDER BY address

	          address
	0        Hartford
	1       Waterbury
	2  aUVHartfordUkX
Wrong output for fuzzied solution in instance spider/coffee_shop/0011 (2080)
	EXPECTED OUTPUT ====

		SELECT address
		FROM shop
		ORDER BY open_year

	                   address
	0        24 E. 11th Street
	1       324 E. 11th Street
	2       324 E. 11th Street
	3          909 Main Street
	4        909 Walnut Street
	5        909 Walnut Street
	6   909 Walnut StreetMzwyz
	7  a( 909 Walnut StreeteFo
	ACTUAL OUTPUT ====

		
		SELECT address
		FROM
		  (SELECT address
		   FROM shop INTERSECT SELECT address
		   FROM shop)
		ORDER BY address

	                   address
	0        24 E. 11th Street
	1       324 E. 11th Street
	2          909 Main Street
	3        909 Walnut Street
	4   909 Walnut StreetMzwyz
	5  a( 909 Walnut StreeteFo
No solution for instance spider/hospital_1/0042 (2082)
Wrong output for fuzzied solution in instance spider/hospital_1/0002 (2085)
	EXPECTED OUTPUT ====

		SELECT head
		FROM department
		GROUP BY departmentID
		ORDER BY count(departmentID)
		LIMIT 1;

	   head
	0    10
	ACTUAL OUTPUT ====

		
		SELECT head
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT head,
		                COUNT() AS n
		         FROM department
		         GROUP BY head)
		      ORDER BY n DESC)
		   LIMIT 1)

	   head
	0     2
No solution for instance spider/hospital_1/0017 (2087)
Wrong output for fuzzied solution in instance spider/hospital_1/0008 (2088)
	EXPECTED OUTPUT ====

		SELECT name
		FROM physician
		EXCEPT
		SELECT T2.name
		FROM appointment AS T1
		JOIN physician AS T2 ON T1.Physician = T2.EmployeeID

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM physician AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT employeeid,
		                  name,
		                  POSITION,
		                  ssn,
		                  appointmentid,
		                  patient,
		                  prepnurse, START, END,
		                                    examinationroom,
		                                    employeeid AS physician
		           FROM
		             (SELECT LHS.employeeid AS employeeid,
		                     LHS.name AS name,
		                     LHS.position AS POSITION,
		                     LHS.ssn AS ssn,
		                     RHS.appointmentid AS appointmentid,
		                     RHS.patient AS patient,
		                     RHS.prepnurse AS prepnurse,
		                     RHS.start AS START, RHS.end AS END,
		                                         RHS.examinationroom AS examinationroom
		              FROM physician AS LHS
		              INNER JOIN appointment AS RHS ON (LHS.employeeid = RHS.physician))) AS RHS
		        WHERE (LHS.name = RHS.name
		               AND LHS.ssn = RHS.ssn) ))
		ORDER BY name

	        name
	0  Bob Kelso
No solution for instance spider/hospital_1/0039 (2089)
Wrong output for fuzzied solution in instance spider/hospital_1/0038 (2090)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM physician AS T1
		JOIN trained_in AS T2 ON T1.employeeid = T2.physician
		JOIN procedures AS T3 ON T3.code = T2.treatment
		WHERE T3.cost > 5000

	                 name
	0           Bob Kelso
	1           Bob Kelso
	2           Bob Kelso
	3           Bob Kelso
	4           Bob Kelso
	5           Bob Kelso
	6           Bob Kelso
	7           Bob Kelso
	8           Bob Kelso
	9           Bob Kelso
	10          Bob Kelso
	11          Bob Kelso
	12          Bob Kelso
	13          Bob Kelso
	14          Bob Kelso
	15          Bob Kelso
	16     Bob KelsowHVqK
	17     Bob KelsowHVqK
	18     Bob KelsowHVqK
	19     Bob KelsowHVqK
	20     Bob KelsowHVqK
	21     Bob KelsowHVqK
	22       Percival Cox
	23       Percival Cox
	24       Percival Cox
	25       Percival Cox
	26       Percival Cox
	27       Percival Cox
	28  Percival CoxtDdnG
	29  Percival CoxtDdnG
	30  Percival CoxtDdnG
	31  Percival CoxtDdnG
	32  Percival CoxtDdnG
	33    V8RBob KelsoX5o
	34    V8RBob KelsoX5o
	35    V8RBob KelsoX5o
	36    V8RBob KelsoX5o
	37    V8RBob KelsoX5o
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.employeeid AS employeeid,
		          LHS.name AS name,
		          LHS.position AS POSITION,
		          LHS.ssn AS ssn,
		          RHS.code AS code,
		          RHS.name AS name_other,
		          RHS.cost AS cost,
		          RHS.certificationdate AS certificationdate,
		          RHS.certificationexpires AS certificationexpires,
		          RHS.treatment AS treatment
		   FROM physician AS LHS
		   INNER JOIN
		     (SELECT code,
		             name,
		             cost,
		             physician,
		             certificationdate,
		             certificationexpires,
		             code AS treatment
		      FROM
		        (SELECT LHS.code AS code,
		                LHS.name AS name,
		                LHS.cost AS cost,
		                RHS.physician AS physician,
		                RHS.certificationdate AS certificationdate,
		                RHS.certificationexpires AS certificationexpires
		         FROM
		           (SELECT *
		            FROM procedures
		            WHERE (cost >= 5000.0)) AS LHS
		         INNER JOIN trained_in AS RHS ON (LHS.code = RHS.treatment))) AS RHS ON (LHS.employeeid = RHS.physician))
		ORDER BY name

	                 name
	0           Bob Kelso
	1           Bob Kelso
	2           Bob Kelso
	3           Bob Kelso
	4           Bob Kelso
	5           Bob Kelso
	6           Bob Kelso
	7           Bob Kelso
	8           Bob Kelso
	9           Bob Kelso
	10          Bob Kelso
	11          Bob Kelso
	12          Bob Kelso
	13          Bob Kelso
	14          Bob Kelso
	15          Bob Kelso
	16          Bob Kelso
	17          Bob Kelso
	18     Bob KelsowHVqK
	19     Bob KelsowHVqK
	20     Bob KelsowHVqK
	21     Bob KelsowHVqK
	22     Bob KelsowHVqK
	23     Bob KelsowHVqK
	24     Bob KelsowHVqK
	25       Percival Cox
	26       Percival Cox
	27       Percival Cox
	28       Percival Cox
	29       Percival Cox
	30       Percival Cox
	31       Percival Cox
	32  Percival CoxtDdnG
	33  Percival CoxtDdnG
	34  Percival CoxtDdnG
	35  Percival CoxtDdnG
	36  Percival CoxtDdnG
	37  Percival CoxtDdnG
	38    V8RBob KelsoX5o
	39    V8RBob KelsoX5o
	40    V8RBob KelsoX5o
	41    V8RBob KelsoX5o
	42    V8RBob KelsoX5o
	43    V8RBob KelsoX5o
Wrong output for fuzzied solution in instance spider/hospital_1/0003 (2091)
	EXPECTED OUTPUT ====

		SELECT T2.name,
		       T2.position
		FROM department AS T1
		JOIN physician AS T2 ON T1.head = T2.EmployeeID
		GROUP BY departmentID
		ORDER BY count(departmentID)
		LIMIT 1;

	        name                     position
	0  Bob Kelso  Surgical Attending Physicia
	ACTUAL OUTPUT ====

		
		SELECT name,
		       POSITION
		FROM
		  (SELECT LHS.employeeid AS employeeid,
		          LHS.name AS name,
		          LHS.position AS POSITION,
		          LHS.ssn AS ssn,
		          RHS.name AS name_other,
		          RHS.n_distinct AS n_distinct
		   FROM physician AS LHS
		   INNER JOIN
		     (SELECT head,
		             name,
		             COUNT(DISTINCT departmentid) AS n_distinct
		      FROM department
		      WHERE (departmentid = 1)
		      GROUP BY head,
		               name) AS RHS ON (LHS.employeeid = RHS.head))
		ORDER BY name

	             name                      position
	0  Bob KelsowHVqK  Surgical Attending Physician
Wrong output for fuzzied solution in instance spider/hospital_1/0027 (2092)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.name
		FROM undergoes AS T1
		JOIN patient AS T2 ON T1.patient = T2.SSN
		JOIN stay AS T3 ON T1.Stay = T3.StayID
		WHERE T3.room = 111

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.ssn AS ssn,
		          LHS.name AS name,
		          LHS.address AS address,
		          LHS.phone AS phone,
		          LHS.insuranceid AS insuranceid,
		          LHS.pcp AS pcp,
		          RHS.patient AS patient,
		          RHS.stay AS stay,
		          RHS.dateundergoes AS dateundergoes,
		          RHS.physician AS physician,
		          RHS.assistingnurse AS assistingnurse
		   FROM patient AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM undergoes AS LHS
		      WHERE EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM stay
		              WHERE (room > 111)) AS RHS
		           WHERE (LHS.patient = RHS.patient) )) AS RHS ON (LHS.pcp = RHS.procedures))
		ORDER BY name

	           name
	0    Dennis Doe
	1    Dennis Doe
	2    Dennis Doe
	3    Dennis Doe
	4    Dennis Doe
	..          ...
	518  John Smith
	519  John Smith
	520  John Smith
	521  John Smith
	522  John Smith
	
	[523 rows x 1 columns]
Wrong output for base solution in instance spider/hospital_1/0048 (2093)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM patient
		WHERE SSN NOT IN
		    (SELECT T1.patient
		     FROM Prescribes AS T1
		     JOIN Medication AS T2 ON T1.Medication = T2.Code
		     WHERE T2.name = 'Procrastin-X' )

	   count(*)
	0         3
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`ssn` AS `ssn`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`address` AS `address`,
		          `LHS`.`phone` AS `phone`,
		          `LHS`.`insuranceid` AS `insuranceid`,
		          `LHS`.`pcp` AS `pcp`,
		          `LHS`.`code` AS `code`,
		          `LHS`.`brand` AS `brand`,
		          `LHS`.`description` AS `description`,
		          `RHS`.`physician` AS `physician`,
		          `RHS`.`patient` AS `patient`,
		          `RHS`.`medication` AS `medication`,
		          `RHS`.`date` AS `date`,
		          `RHS`.`appointment` AS `appointment`,
		          `RHS`.`dose` AS `dose`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`ssn` AS `ssn`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`address` AS `address`,
		             `LHS`.`phone` AS `phone`,
		             `LHS`.`insuranceid` AS `insuranceid`,
		             `LHS`.`pcp` AS `pcp`,
		             `LHS`.`code` AS `code`,
		             `LHS`.`brand` AS `brand`,
		             `LHS`.`description` AS `description`
		      FROM
		        (SELECT `LHS`.`ssn` AS `ssn`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`address` AS `address`,
		                `LHS`.`phone` AS `phone`,
		                `LHS`.`insuranceid` AS `insuranceid`,
		                `LHS`.`pcp` AS `pcp`,
		                `RHS`.`code` AS `code`,
		                `RHS`.`brand` AS `brand`,
		                `RHS`.`description` AS `description`
		         FROM `patient` AS `LHS`
		         INNER JOIN `medication` AS `RHS` ON (`LHS`.`name` = `RHS`.`name`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `patient`
		         WHERE (`name` != 'Procrastin-X')) AS RHS ON (LHS.ssn = RHS.ssn
		                                                      AND LHS.name = RHS.name
		                                                      AND LHS.address = RHS.address
		                                                      AND LHS.phone = RHS.phone
		                                                      AND LHS.insuranceid = RHS.insuranceid
		                                                      AND LHS.pcp = RHS.pcp)) AS LHS
		   CROSS JOIN
		     (SELECT physician,
		             patient,
		             medication, date, appointment,
		                               dose,
		                               COUNT(*) OVER () AS n
		      FROM prescribes) AS RHS)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/hospital_1/0030 (2095)
	EXPECTED OUTPUT ====

		SELECT DISTINCT name
		FROM medication
		ORDER BY name

	                name
	0             Awakin
	1  BNNPMProcrastin-X
	2        Melioraurin
	3       qY9AwakinDdW
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM medication
		ORDER BY name

	                name
	0             Awakin
	1             Awakin
	2             Awakin
	3  BNNPMProcrastin-X
	4        Melioraurin
	5        Melioraurin
	6        Melioraurin
	7        Melioraurin
	8       qY9AwakinDdW
Wrong output for fuzzied solution in instance spider/hospital_1/0013 (2096)
	EXPECTED OUTPUT ====

		SELECT T4.name
		FROM stay AS T1
		JOIN patient AS T2 ON T1.Patient = T2.SSN
		JOIN Prescribes AS T3 ON T3.Patient = T2.SSN
		JOIN Medication AS T4 ON T3.Medication = T4.Code
		WHERE room = 111

	              name
	0   4 7Thesisinh9l
	1      Crescavitin
	2      Crescavitin
	3      Crescavitin
	4      Crescavitin
	..             ...
	93  ySL4Fc036vYgv7
	94  ySL4Fc036vYgv7
	95  ySL4Fc036vYgv7
	96  ySL4Fc036vYgv7
	97  ySL4Fc036vYgv7
	
	[98 rows x 1 columns]
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.code AS code,
		          LHS.name AS name,
		          LHS.brand AS brand,
		          LHS.description AS description,
		          RHS.ssn AS ssn,
		          RHS.name AS name_other,
		          RHS.address AS address,
		          RHS.phone AS phone,
		          RHS.insuranceid AS insuranceid,
		          RHS.pcp AS pcp,
		          RHS.patient AS patient,
		          RHS.medication AS medication,
		          RHS.date AS date,
		          RHS.appointment AS appointment,
		          RHS.dose AS dose,
		          RHS.stayid AS stayid,
		          RHS.room AS room,
		          RHS.staystart AS staystart,
		          RHS.stayend AS stayend
		   FROM medication AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT LHS.ssn AS ssn,
		                LHS.name AS name,
		                LHS.address AS address,
		                LHS.phone AS phone,
		                LHS.insuranceid AS insuranceid,
		                LHS.pcp AS pcp,
		                LHS.physician AS physician,
		                LHS.patient AS patient,
		                LHS.medication AS medication,
		                LHS.date AS date,
		                LHS.appointment AS appointment,
		                LHS.dose AS dose,
		                RHS.stayid AS stayid,
		                RHS.room AS room,
		                RHS.staystart AS staystart,
		                RHS.stayend AS stayend
		         FROM
		           (SELECT LHS.ssn AS ssn,
		                   LHS.name AS name,
		                   LHS.address AS address,
		                   LHS.phone AS phone,
		                   LHS.insuranceid AS insuranceid,
		                   LHS.pcp AS pcp,
		                   RHS.physician AS physician,
		                   RHS.patient AS patient,
		                   RHS.medication AS medication,
		                   RHS.date AS date,
		                   RHS.appointment AS appointment,
		                   RHS.dose AS dose
		            FROM patient AS LHS
		            CROSS JOIN prescribes AS RHS) AS LHS
		         INNER JOIN stay AS RHS ON (LHS.patient = RHS.patient))
		      WHERE (room <= 111)) AS RHS ON (LHS.code = RHS.physician))
		ORDER BY name

	             name
	0  4 7Thesisinh9l
	1    Procrastin-X
	2         Thesisi
Wrong output for fuzzied solution in instance spider/hospital_1/0006 (2097)
	EXPECTED OUTPUT ====

		SELECT appointmentid
		FROM appointment
		ORDER BY
		START DESC
		LIMIT 1

	   appointmentid
	0       26548911
	ACTUAL OUTPUT ====

		
		SELECT appointmentid
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM appointment
		      ORDER BY physician DESC)
		   LIMIT 1)

	   appointmentid
	0       76983232
Wrong output for fuzzied solution in instance spider/hospital_1/0012 (2099)
	EXPECTED OUTPUT ====

		SELECT count(T1.SSN)
		FROM patient AS T1
		JOIN prescribes AS T2 ON T1.SSN = T2.patient
		JOIN physician AS T3 ON T2.physician = T3.employeeid
		WHERE T3.name = "John Dorian"

	   count(t1.ssn)
	0            245
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n_distinct` AS `count_t1_ssn_`
		FROM
		  (SELECT `LHS`.`employeeid` AS `employeeid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`position` AS `position`,
		          `LHS`.`ssn` AS `ssn`,
		          `LHS`.`physician` AS `physician`,
		          `LHS`.`patient` AS `patient`,
		          `LHS`.`medication` AS `medication`,
		          `LHS`.`date` AS `date`,
		          `LHS`.`appointment` AS `appointment`,
		          `LHS`.`dose` AS `dose`,
		          `RHS`.`pcp` AS `pcp`,
		          `RHS`.`phone` AS `phone`,
		          `RHS`.`n_distinct` AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`employeeid` AS `employeeid`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`position` AS `position`,
		             `LHS`.`ssn` AS `ssn`,
		             `LHS`.`physician` AS `physician`,
		             `LHS`.`patient` AS `patient`,
		             `LHS`.`medication` AS `medication`,
		             `LHS`.`date` AS `date`,
		             `LHS`.`appointment` AS `appointment`,
		             `LHS`.`dose` AS `dose`
		      FROM
		        (SELECT `LHS`.`employeeid` AS `employeeid`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`position` AS `position`,
		                `LHS`.`ssn` AS `ssn`,
		                `RHS`.`physician` AS `physician`,
		                `RHS`.`patient` AS `patient`,
		                `RHS`.`medication` AS `medication`,
		                `RHS`.`date` AS `date`,
		                `RHS`.`appointment` AS `appointment`,
		                `RHS`.`dose` AS `dose`
		         FROM `physician` AS `LHS`
		         CROSS JOIN `prescribes` AS `RHS`) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `physician`
		         WHERE (`name` != 'John Dorian')) AS RHS ON (LHS.employeeid = RHS.employeeid
		                                                     AND LHS.name = RHS.name
		                                                     AND LHS.position = RHS.position
		                                                     AND LHS.ssn = RHS.ssn)) AS LHS
		   CROSS JOIN
		     (SELECT pcp,
		             phone,
		             COUNT(DISTINCT ssn) AS n_distinct
		      FROM patient
		      GROUP BY pcp,
		               phone) AS RHS)
		ORDER BY count_t1_ssn_

	   count_t1_ssn_
	0              1
Wrong output for fuzzied solution in instance spider/hospital_1/0026 (2100)
	EXPECTED OUTPUT ====

		SELECT patient
		FROM undergoes
		ORDER BY dateundergoes
		LIMIT 1

	    patient
	0  99999999
	ACTUAL OUTPUT ====

		
		SELECT ssn AS patient
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.ssn AS ssn,
		                LHS.name AS name,
		                LHS.address AS address,
		                LHS.phone AS phone,
		                LHS.insuranceid AS insuranceid,
		                LHS.pcp AS pcp,
		                RHS.patient AS patient,
		                RHS.procedures AS procedures,
		                RHS.stay AS stay,
		                RHS.dateundergoes AS dateundergoes,
		                RHS.physician AS physician,
		                RHS.assistingnurse AS assistingnurse
		         FROM patient AS LHS
		         CROSS JOIN undergoes AS RHS)
		      ORDER BY stay DESC)
		   LIMIT 1)

	      patient
	0 -5530437089
Wrong output for fuzzied solution in instance spider/hospital_1/0015 (2101)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM nurse AS T1
		JOIN appointment AS T2 ON T1.employeeid = T2.prepnurse
		GROUP BY T1.employeeid
		ORDER BY count(*) DESC
		LIMIT 1

	                name
	0  Paul FlowersDS sh
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.employeeid AS employeeid,
		                LHS.name AS name,
		                LHS.position AS POSITION,
		                LHS.registered AS registered,
		                LHS.ssn AS ssn,
		                LHS.appointmentid AS appointmentid,
		                LHS.patient AS patient,
		                LHS.prepnurse AS prepnurse,
		                LHS.physician AS physician,
		                LHS.start AS START, LHS.end AS END,
		                                    LHS.examinationroom AS examinationroom,
		                                    RHS.n AS n
		         FROM
		           (SELECT LHS.employeeid AS employeeid,
		                   LHS.name AS name,
		                   LHS.position AS POSITION,
		                   LHS.registered AS registered,
		                   LHS.ssn AS ssn,
		                   RHS.appointmentid AS appointmentid,
		                   RHS.patient AS patient,
		                   RHS.prepnurse AS prepnurse,
		                   RHS.physician AS physician,
		                   RHS.start AS START, RHS.end AS END,
		                                       RHS.examinationroom AS examinationroom
		            FROM nurse AS LHS
		            CROSS JOIN appointment AS RHS) AS LHS
		         INNER JOIN
		           (SELECT employeeid,
		                   name,
		                   POSITION,
		                   registered,
		                   ssn,
		                   COUNT(*) OVER () AS n
		            FROM nurse) AS RHS ON (LHS.employeeid = RHS.employeeid
		                                      AND LHS.name = RHS.name
		                                      AND LHS.position = RHS.position
		                                      AND LHS.registered = RHS.registered
		                                      AND LHS.ssn = RHS.ssn))
		      ORDER BY n)
		   LIMIT 1)

	          name
	0  Paul Flower
Wrong output for fuzzied solution in instance spider/hospital_1/0005 (2102)
	EXPECTED OUTPUT ====

		SELECT name,
		       phone
		FROM appointment AS T1
		JOIN patient AS T2 ON T1.patient = T2.ssn
		GROUP BY T1.patient
		HAVING count(*) > 1

	                 name           phone
	0  Grace RitchieJSP1H         55-0256
	1          John Smith   555-2048rpAQr
	2          John Smith  kS2555-2048vSn
	3     John SmithLc6d1  683555-2048Zke
	ACTUAL OUTPUT ====

		
		SELECT name,
		       phone
		FROM
		  (SELECT LHS.ssn AS ssn,
		          LHS.name AS name,
		          LHS.address AS address,
		          LHS.phone AS phone,
		          LHS.insuranceid AS insuranceid,
		          LHS.pcp AS pcp,
		          RHS.physician AS physician,
		          RHS.n AS n
		   FROM patient AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT patient,
		                physician,
		                COUNT() AS n
		         FROM appointment
		         GROUP BY patient,
		                  physician)
		      WHERE (n > 1)) AS RHS ON (LHS.ssn = RHS.patient))
		ORDER BY name

	              name           phone
	0       John Smith  kS2555-2048vSn
	1  John SmithLc6d1  683555-2048Zke
Wrong output for fuzzied solution in instance spider/hospital_1/0050 (2104)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.name
		FROM nurse AS T1
		JOIN on_call AS T2 ON T1.EmployeeID = T2.nurse

	                   name
	0        Carla Espinosa
	1       Laverne Roberts
	2   OvJ7NCarla Espinosa
	3  tv5Carla Espinosatru
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM nurse
		ORDER BY name

	                   name
	0        Carla Espinosa
	1       Laverne Roberts
	2       Laverne Roberts
	3   OvJ7NCarla Espinosa
	4  tv5Carla Espinosatru
Wrong output for fuzzied solution in instance spider/hospital_1/0018 (2106)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.blockfloor
		FROM BLOCK AS T1
		JOIN room AS T2 ON T1.blockfloor = T2.blockfloor
		AND T1.blockcode = T2.blockcode
		GROUP BY T1.blockfloor

	   count(*)  blockfloor
	0         1           2
	1         1           3
	2         2           4
	3         3           5
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       blockfloor
		FROM
		  (SELECT *
		   FROM
		     (SELECT blockfloor,
		             COUNT() AS n
		      FROM room
		      GROUP BY blockfloor) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM block AS RHS
		        WHERE (LHS.blockfloor = RHS.blockfloor) ))
		ORDER BY count___

	   count___  blockfloor
	0         2           0
	1         2           2
	2         1           3
	3         2           4
	4         3           5
	5         1           6
No solution for instance spider/hospital_1/0041 (2107)
Wrong output for fuzzied solution in instance spider/hospital_1/0020 (2109)
	EXPECTED OUTPUT ====

		SELECT DISTINCT blockcode
		FROM room
		WHERE unavailable = 0

	   blockcode
	0          2
	1          3
	2          4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT blockcode
		FROM room
		WHERE (unavailable = 1)
		ORDER BY blockcode

	   blockcode
	0          3
Wrong output for fuzzied solution in instance spider/hospital_1/0019 (2110)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.blockcode
		FROM BLOCK AS T1
		JOIN room AS T2 ON T1.blockfloor = T2.blockfloor
		AND T1.blockcode = T2.blockcode
		GROUP BY T1.blockcode

	   count(*)  blockcode
	0         3          1
	1         3          2
	2         1          3
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       blockcode
		FROM
		  (SELECT *
		   FROM
		     (SELECT blockcode,
		             COUNT() AS n
		      FROM room
		      GROUP BY blockcode) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM block AS RHS
		        WHERE (LHS.blockcode = RHS.blockcode) ))
		ORDER BY count___

	   count___  blockcode
	0         4          1
	1         3          2
	2         1          3
	3         3          4
Wrong output for fuzzied solution in instance spider/hospital_1/0034 (2112)
	EXPECTED OUTPUT ====

		SELECT nurse
		FROM on_call
		WHERE blockfloor = 1
		  AND blockcode = 1

	   nurse
	0     99
	1     99
	2    100
	3    101
	4    103
	5    104
	6    104
	7    105
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT nurse
		FROM
		  (SELECT LHS.employeeid AS employeeid,
		          LHS.name AS name,
		          LHS.position AS POSITION,
		          LHS.registered AS registered,
		          LHS.ssn AS ssn,
		          LHS.nurse AS nurse,
		          LHS.blockfloor AS blockfloor,
		          LHS.blockcode AS blockcode,
		          LHS.oncallstart AS oncallstart,
		          LHS.oncallend AS oncallend
		   FROM
		     (SELECT LHS.employeeid AS employeeid,
		             LHS.name AS name,
		             LHS.position AS POSITION,
		             LHS.registered AS registered,
		             LHS.ssn AS ssn,
		             RHS.nurse AS nurse,
		             RHS.blockfloor AS blockfloor,
		             RHS.blockcode AS blockcode,
		             RHS.oncallstart AS oncallstart,
		             RHS.oncallend AS oncallend
		      FROM nurse AS LHS
		      CROSS JOIN on_call AS RHS) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM on_call
		      WHERE (blockfloor <= 1
		             AND blockcode = blockfloor)) AS RHS ON (LHS.nurse = RHS.nurse
		                                                     AND LHS.blockfloor = RHS.blockfloor
		                                                     AND LHS.blockcode = RHS.blockcode
		                                                     AND LHS.oncallstart = RHS.oncallstart
		                                                     AND LHS.oncallend = RHS.oncallend))
		ORDER BY nurse

	   nurse
	0     99
	1    100
	2    101
	3    102
	4    103
	5    104
	6    105
Wrong output for fuzzied solution in instance spider/hospital_1/0024 (2113)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.name
		FROM medication AS T1
		JOIN prescribes AS T2 ON T1.code = T2.medication
		GROUP BY T1.brand

	   count(*)               name
	0       172        Melioraurin
	1       176        Melioraurin
	2       191        Melioraurin
	3       200        Melioraurin
	4       203             Awakin
	5       205             Awakin
	6       208       qY9AwakinDdW
	7       418  BNNPMProcrastin-X
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT code AS count___,
		                name
		FROM
		  (SELECT LHS.code AS code,
		          LHS.name AS name,
		          LHS.brand AS brand,
		          LHS.description AS description,
		          RHS.physician AS physician,
		          RHS.patient AS patient,
		          RHS.date AS date,
		          RHS.appointment AS appointment,
		          RHS.dose AS dose,
		          RHS.n AS n
		   FROM medication AS LHS
		   INNER JOIN
		     (SELECT physician,
		             patient,
		             medication, date, appointment,
		                               dose,
		                               COUNT(*) OVER () AS n
		      FROM prescribes) AS RHS ON (LHS.code = RHS.medication))
		ORDER BY count___

	   count___               name
	0        -1             Awakin
	1         0  BNNPMProcrastin-X
	2         1       qY9AwakinDdW
	3         2        Melioraurin
	4         3             Awakin
	5         4        Melioraurin
	6         5        Melioraurin
	7         6             Awakin
	8         7        Melioraurin
Wrong output for fuzzied solution in instance spider/hospital_1/0021 (2114)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT roomtype)
		FROM room

	   count(distinct roomtype)
	0                         8
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count_distinct_roomtype_
		FROM
		  (SELECT roomtype,
		          COUNT(DISTINCT roomtype) AS n_distinct
		   FROM
		     (SELECT blockcode,
		             roomtype,
		             COUNT() AS n
		      FROM room
		      GROUP BY blockcode,
		               roomtype)
		   GROUP BY roomtype)
		ORDER BY count_distinct_roomtype_

	   count_distinct_roomtype_
	0                         1
	1                         1
	2                         1
	3                         1
	4                         1
	5                         1
	6                         1
	7                         1
Wrong output for fuzzied solution in instance spider/hospital_1/0023 (2115)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.name,
		                T1.position
		FROM physician AS T1
		JOIN prescribes AS T2 ON T1.employeeid = T2.physician
		JOIN medication AS T3 ON T3.code = T2.medication
		WHERE T3.Brand = "X"

	                name                            position
	0          Bob Kelso                  Attending Physicia
	1          Bob Kelso              Attending Psychiatrist
	2          Bob Kelso         Surgical Attending Physicia
	3     Bob KelsowHVqK        Surgical Attending Physician
	4       Percival Cox   Surgical Attending Physician4dLuz
	5  Percival CoxtDdnG  qifSurgical Attending PhysicianMO0
	6    V8RBob KelsoX5o         Attending PsychiatristWoMm1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `name`,
		                `position`
		FROM
		  (SELECT `LHS`.`employeeid` AS `employeeid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`position` AS `position`,
		          `LHS`.`ssn` AS `ssn`,
		          `LHS`.`physician` AS `physician`,
		          `LHS`.`patient` AS `patient`,
		          `LHS`.`medication` AS `medication`,
		          `LHS`.`date` AS `date`,
		          `LHS`.`appointment` AS `appointment`,
		          `LHS`.`dose` AS `dose`,
		          `RHS`.`name` AS `name_other`,
		          `RHS`.`brand` AS `brand`,
		          `RHS`.`description` AS `description`
		   FROM
		     (SELECT `LHS`.`employeeid` AS `employeeid`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`position` AS `position`,
		             `LHS`.`ssn` AS `ssn`,
		             `RHS`.`physician` AS `physician`,
		             `RHS`.`patient` AS `patient`,
		             `RHS`.`medication` AS `medication`,
		             `RHS`.`date` AS `date`,
		             `RHS`.`appointment` AS `appointment`,
		             `RHS`.`dose` AS `dose`
		      FROM `physician` AS `LHS`
		      CROSS JOIN `prescribes` AS `RHS`) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `medication`
		      WHERE (`brand` = 'X')) AS RHS ON (LHS.employeeid = RHS.code))
		ORDER BY name

	Empty DataFrame
	Columns: [name, position]
	Index: []
No solution for instance spider/hospital_1/0047 (2118)
Wrong output for fuzzied solution in instance spider/hospital_1/0014 (2119)
	EXPECTED OUTPUT ====

		SELECT patient
		FROM stay
		WHERE room = 111
		ORDER BY staystart DESC
		LIMIT 1

	      patient
	0  9970710033
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT patient
		FROM
		  (SELECT LHS.ssn AS ssn,
		          LHS.name AS name,
		          LHS.address AS address,
		          LHS.phone AS phone,
		          LHS.insuranceid AS insuranceid,
		          LHS.pcp AS pcp,
		          RHS.stayid AS stayid,
		          RHS.patient AS patient,
		          RHS.room AS room,
		          RHS.staystart AS staystart,
		          RHS.stayend AS stayend
		   FROM patient AS LHS
		   CROSS JOIN stay AS RHS)
		WHERE (room <= 111
		       OR room <= 1)
		ORDER BY patient

	      patient
	0   100000000
	1   100000002
	2   100000003
	3  3852501032
	4  4684799540
	5  4917405675
	6  9158774920
	7  9970710033
Error while executing solution for instance spider/hospital_1/0009 (2120)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/hospital_1/0009 (2120)
No solution for instance spider/hospital_1/0025 (2121)
Wrong output for fuzzied solution in instance spider/hospital_1/0011 (2122)
	EXPECTED OUTPUT ====

		SELECT count(patient)
		FROM stay
		WHERE room = 112

	   count(patient)
	0               0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count_patient_
		FROM
		  (SELECT stayid,
		          staystart,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM stay
		      WHERE (patient > 112
		             AND room < patient))
		   GROUP BY stayid,
		            staystart)
		ORDER BY count_patient_

	   count_patient_
	0               1
Wrong output for fuzzied solution in instance spider/hospital_1/0029 (2123)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.name
		FROM undergoes AS T1
		JOIN nurse AS T2 ON T1.AssistingNurse = T2.EmployeeID

	                   name
	0        Carla Espinosa
	1       Laverne Roberts
	2   OvJ7NCarla Espinosa
	3  tv5Carla Espinosatru
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM nurse
		ORDER BY name

	                   name
	0        Carla Espinosa
	1       Laverne Roberts
	2       Laverne Roberts
	3   OvJ7NCarla Espinosa
	4  tv5Carla Espinosatru
Wrong output for fuzzied solution in instance spider/hospital_1/0010 (2124)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM patient AS T1
		JOIN appointment AS T2 ON T1.ssn = T2.patient
		ORDER BY T2.start DESC
		LIMIT 1

	         name
	0  John Smith
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.ssn AS ssn,
		                LHS.name AS name,
		                LHS.address AS address,
		                LHS.phone AS phone,
		                LHS.insuranceid AS insuranceid,
		                LHS.pcp AS pcp,
		                RHS.appointmentid AS appointmentid,
		                RHS.patient AS patient,
		                RHS.prepnurse AS prepnurse,
		                RHS.physician AS physician,
		                RHS.start AS START, RHS.end AS END,
		                                    RHS.examinationroom AS examinationroom
		         FROM patient AS LHS
		         CROSS JOIN appointment AS RHS)
		      ORDER BY name)
		   LIMIT 1)

	         name
	0  Dennis Doe
No solution for instance spider/hospital_1/0044 (2125)
Wrong output for fuzzied solution in instance spider/hospital_1/0040 (2126)
	EXPECTED OUTPUT ====

		SELECT avg(T3.cost)
		FROM physician AS T1
		JOIN trained_in AS T2 ON T1.employeeid = T2.physician
		JOIN procedures AS T3 ON T3.code = T2.treatment
		WHERE T1.name = "John Wen"

	   avg(t3.cost)
	0   5277.228889
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `meancost` AS `avg_t3_cost_`
		FROM
		  (SELECT `LHS`.`employeeid` AS `employeeid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`position` AS `position`,
		          `LHS`.`ssn` AS `ssn`,
		          `LHS`.`physician` AS `physician`,
		          `LHS`.`treatment` AS `treatment`,
		          `LHS`.`certificationdate` AS `certificationdate`,
		          `LHS`.`certificationexpires` AS `certificationexpires`,
		          `RHS`.`meancost` AS `meancost`
		   FROM
		     (SELECT `LHS`.`employeeid` AS `employeeid`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`position` AS `position`,
		             `LHS`.`ssn` AS `ssn`,
		             `RHS`.`physician` AS `physician`,
		             `RHS`.`treatment` AS `treatment`,
		             `RHS`.`certificationdate` AS `certificationdate`,
		             `RHS`.`certificationexpires` AS `certificationexpires`
		      FROM `physician` AS `LHS`
		      CROSS JOIN `trained_in` AS `RHS`) AS `LHS`
		   CROSS JOIN
		     (SELECT AVG(`cost`) AS `meancost`
		      FROM `procedures`
		      WHERE (`name` != 'John Wen')) AS RHS)
		ORDER BY avg_t3_cost_

	   avg_t3_cost_
	0      4899.507
Wrong output for fuzzied solution in instance spider/hospital_1/0028 (2127)
	EXPECTED OUTPUT ====

		SELECT DISTINCT name
		FROM nurse
		ORDER BY name

	                   name
	0        Carla Espinosa
	1       Laverne Roberts
	2   OvJ7NCarla Espinosa
	3  tv5Carla Espinosatru
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM nurse
		ORDER BY name

	                   name
	0        Carla Espinosa
	1       Laverne Roberts
	2       Laverne Roberts
	3   OvJ7NCarla Espinosa
	4  tv5Carla Espinosatru
Wrong output for fuzzied solution in instance spider/hospital_1/0049 (2128)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM appointment

	   count(*)
	0        15
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT examinationroom, START, COUNT() AS n
		   FROM appointment
		   GROUP BY examinationroom, START)
		ORDER BY count___

	   count___
	0         6
Wrong output for fuzzied solution in instance spider/hospital_1/0031 (2129)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM physician AS T1
		JOIN prescribes AS T2 ON T1.employeeid = T2.physician
		ORDER BY T2.dose DESC
		LIMIT 1

	        name
	0  Bob Kelso
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.employeeid AS employeeid,
		                LHS.name AS name,
		                LHS.position AS POSITION,
		                LHS.ssn AS ssn,
		                RHS.physician AS physician,
		                RHS.patient AS patient,
		                RHS.medication AS medication,
		                RHS.date AS date,
		                RHS.appointment AS appointment,
		                RHS.dose AS dose
		         FROM physician AS LHS
		         CROSS JOIN prescribes AS RHS)
		      ORDER BY date DESC)
		   LIMIT 1)

	                name
	0  Percival CoxtDdnG
No solution for instance spider/department_store/0042 (2130)
No solution for instance spider/department_store/0033 (2131)
Wrong output for fuzzied solution in instance spider/department_store/0036 (2134)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.supplier_name,
		                T1.supplier_phone
		FROM suppliers AS T1
		JOIN product_suppliers AS T2 ON T1.supplier_id = T2.supplier_id
		JOIN products AS T3 ON T2.product_id = T3.product_id
		WHERE T3.product_name = "red jeans"

	  supplier_name         supplier_phone
	0    42qLidlwfO          (692)009-5928
	1          Audi          (692)009-5928
	2          Audi       287-071-1153x254
	3          Lidl          (692)009-5928
	4          Lidl     (692)009-5928gMVnm
	5          Lidl     1-432-960-2402x173
	6     LidlXJYQi         1-483-283-4742
	7           udi  287-071-1153x2543O1dv
	ACTUAL OUTPUT ====

		
		SELECT `supplier_name`,
		       `supplier_phone`
		FROM
		  (SELECT `LHS`.`supplier_id` AS `supplier_id`,
		          `LHS`.`supplier_name` AS `supplier_name`,
		          `LHS`.`supplier_phone` AS `supplier_phone`,
		          `LHS`.`product_id` AS `product_id`,
		          `LHS`.`date_supplied_from` AS `date_supplied_from`,
		          `LHS`.`date_supplied_to` AS `date_supplied_to`,
		          `LHS`.`total_amount_purchased` AS `total_amount_purchased`,
		          `LHS`.`total_value_purchased` AS `total_value_purchased`,
		          `RHS`.`product_type_code` AS `product_type_code`,
		          `RHS`.`product_name` AS `product_name`,
		          `RHS`.`product_price` AS `product_price`
		   FROM
		     (SELECT `LHS`.`supplier_id` AS `supplier_id`,
		             `LHS`.`supplier_name` AS `supplier_name`,
		             `LHS`.`supplier_phone` AS `supplier_phone`,
		             `RHS`.`product_id` AS `product_id`,
		             `RHS`.`date_supplied_from` AS `date_supplied_from`,
		             `RHS`.`date_supplied_to` AS `date_supplied_to`,
		             `RHS`.`total_amount_purchased` AS `total_amount_purchased`,
		             `RHS`.`total_value_purchased` AS `total_value_purchased`
		      FROM `suppliers` AS `LHS`
		      INNER JOIN `product_suppliers` AS `RHS` ON (`LHS`.`supplier_id` = `RHS`.`supplier_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `products`
		      WHERE (`product_name` = 'red jeans')) AS RHS ON (LHS.product_id = RHS.product_id))
		ORDER BY supplier_name

	   supplier_name         supplier_phone
	0     42qLidlwfO          (692)009-5928
	1           Audi          (692)009-5928
	2           Audi          (692)009-5928
	3           Audi       287-071-1153x254
	4           Lidl          (692)009-5928
	5           Lidl          (692)009-5928
	6           Lidl     (692)009-5928gMVnm
	7           Lidl     1-432-960-2402x173
	8           Lidl     1-432-960-2402x173
	9      LidlXJYQi         1-483-283-4742
	10     LidlXJYQi         1-483-283-4742
	11           udi  287-071-1153x2543O1dv
	12           udi  287-071-1153x2543O1dv
Wrong output for fuzzied solution in instance spider/department_store/0017 (2135)
	EXPECTED OUTPUT ====

		SELECT dept_store_chain_id
		FROM department_stores
		GROUP BY dept_store_chain_id
		ORDER BY count(*) DESC
		LIMIT 2

	   dept_store_chain_id
	0          -3609292159
	1           8471297222
	ACTUAL OUTPUT ====

		
		SELECT dept_store_chain_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT dept_store_chain_id,
		                store_phone,
		                COUNT() AS n
		         FROM department_stores
		         GROUP BY dept_store_chain_id,
		                  store_phone)
		      ORDER BY store_phone)
		   LIMIT 2)

	   dept_store_chain_id
	0                    3
	1           9046474967
Wrong output for fuzzied solution in instance spider/department_store/0008 (2136)
	EXPECTED OUTPUT ====

		SELECT T1.customer_name,
		       T1.customer_phone,
		       T1.customer_email
		FROM customers AS T1
		JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T2.customer_id
		ORDER BY count(*) DESC
		LIMIT 1

	   customer_name      customer_phone      customer_email
	0  ukHZzChauncey  587.398.2400x31176  gbrekke@example.co
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT customer_name,
		                customer_phone,
		                customer_email
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.payment_method_code AS payment_method_code,
		          LHS.customer_code AS customer_code,
		          LHS.customer_name AS customer_name,
		          LHS.customer_address AS customer_address,
		          LHS.customer_phone AS customer_phone,
		          LHS.customer_email AS customer_email,
		          LHS.order_id AS order_id,
		          LHS.order_status_code AS order_status_code,
		          LHS.order_date AS order_date,
		          RHS.order_status_code AS order_status_code_other
		   FROM
		     (SELECT LHS.customer_id AS customer_id,
		             LHS.payment_method_code AS payment_method_code,
		             LHS.customer_code AS customer_code,
		             LHS.customer_name AS customer_name,
		             LHS.customer_address AS customer_address,
		             LHS.customer_phone AS customer_phone,
		             LHS.customer_email AS customer_email,
		             RHS.order_id AS order_id,
		             RHS.order_status_code AS order_status_code,
		             RHS.order_date AS order_date
		      FROM customers AS LHS
		      INNER JOIN customer_orders AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS
		   INNER JOIN
		     (SELECT order_status_code,
		             COUNT() AS n
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.payment_method_code AS payment_method_code,
		                LHS.customer_code AS customer_code,
		                LHS.customer_name AS customer_name,
		                LHS.customer_address AS customer_address,
		                LHS.customer_phone AS customer_phone,
		                LHS.customer_email AS customer_email,
		                RHS.order_id AS order_id,
		                RHS.order_status_code AS order_status_code,
		                RHS.order_date AS order_date
		         FROM customers AS LHS
		         INNER JOIN customer_orders AS RHS ON (LHS.customer_id = RHS.customer_id))
		      GROUP BY order_status_code) AS RHS ON (LHS.customer_id = RHS.n))
		ORDER BY customer_name

	  customer_name customer_phone            customer_email
	0    Ahmed4MoFo  1-472-036-043  mxfhcgbrekke@example.com
Wrong output for fuzzied solution in instance spider/department_store/0039 (2137)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T3.product_name
		FROM customer_orders AS T1
		JOIN order_items AS T2 ON T1.order_id = T2.order_id
		JOIN products AS T3 ON T2.product_id = T3.product_id
		GROUP BY T3.product_id
		HAVING COUNT (DISTINCT T1.customer_id) >= 2

	         product_name
	0   272black jeansMC8
	1       black topping
	2     blue jeansYUJ2d
	3  jn(uZblack topping
	4    rUgPEblack jeans
	5        yellow jeans
	ACTUAL OUTPUT ====

		
		SELECT product_name
		FROM
		  (SELECT product_name,
		          COUNT(DISTINCT customer_id) AS n_distinct
		   FROM
		     (SELECT LHS.product_id AS product_id,
		             LHS.product_type_code AS product_type_code,
		             LHS.product_name AS product_name,
		             LHS.product_price AS product_price,
		             LHS.order_id AS order_id,
		             LHS.customer_id AS customer_id,
		             LHS.order_status_code AS order_status_code,
		             LHS.order_date AS order_date,
		             RHS.order_item_id AS order_item_id
		      FROM
		        (SELECT LHS.product_id AS product_id,
		                LHS.product_type_code AS product_type_code,
		                LHS.product_name AS product_name,
		                LHS.product_price AS product_price,
		                RHS.order_id AS order_id,
		                RHS.customer_id AS customer_id,
		                RHS.order_status_code AS order_status_code,
		                RHS.order_date AS order_date
		         FROM products AS LHS
		         CROSS JOIN customer_orders AS RHS) AS LHS
		      INNER JOIN order_items AS RHS ON (LHS.product_id = RHS.product_id
		                                           AND LHS.order_id = RHS.order_id))
		   GROUP BY product_name)
		WHERE (n_distinct >= 2)
		ORDER BY product_name

	         product_name
	0   272black jeansMC8
	1         black jeans
	2       black topping
	3     blue jeansYUJ2d
	4  jn(uZblack topping
	5    rUgPEblack jeans
	6        yellow jeans
Wrong output for fuzzied solution in instance spider/department_store/0027 (2140)
	EXPECTED OUTPUT ====

		SELECT T1.staff_name
		FROM staff AS T1
		JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id
		GROUP BY T2.staff_id
		HAVING COUNT (*) > 1

	      staff_name
	0           5 P5
	1          GHB L
	2   GQkMalikalHE
	3         KQjmT0
	4          Malik
	5         Malika
	6         Malika
	7         Malika
	8         Malika
	9         Malika
	10        Malika
	11   Malika)S9RO
	12   MalikaNM4QW
	13            To
	14           Tom
	15           Tom
	16           Tom
	17           Tom
	18           Tom
	19        Vaness
	20       Vanessa
	21       Vanessa
	22       Vanessa
	23   WJ4yAMalika
	24       ajDpTZe
	25         alika
	26         alika
	27         alika
	28         alika
	29  bs1MalikaBNW
	30  cXpYuVanessa
	31     qy06eCZd8
	32   t)bP)Malika
	33   wiPRbMalika
	34      zKjTOf2L
	ACTUAL OUTPUT ====

		
		SELECT staff_name
		FROM
		  (SELECT staff_gender,
		          staff_name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.staff_id AS staff_id,
		             LHS.department_id AS department_id,
		             LHS.date_assigned_from AS date_assigned_from,
		             LHS.job_title_code AS job_title_code,
		             LHS.date_assigned_to AS date_assigned_to,
		             RHS.staff_gender AS staff_gender,
		             RHS.staff_name AS staff_name
		      FROM staff_department_assignments AS LHS
		      LEFT JOIN staff AS RHS ON (LHS.staff_id = RHS.staff_id))
		   GROUP BY staff_gender,
		            staff_name)
		WHERE (n > 1)
		ORDER BY staff_name

	      staff_name
	0           5 P5
	1          GHB L
	2   GQkMalikalHE
	3         KQjmT0
	4          Malik
	5         Malika
	6         Malika
	7         Malika
	8         Malika
	9         Malika
	10        Malika
	11   Malika)S9RO
	12   MalikaNM4QW
	13            To
	14           Tom
	15           Tom
	16           Tom
	17        Vaness
	18       Vanessa
	19       Vanessa
	20       Vanessa
	21   WJ4yAMalika
	22       ajDpTZe
	23         alika
	24         alika
	25         alika
	26         alika
	27  bs1MalikaBNW
	28  cXpYuVanessa
	29     qy06eCZd8
	30   t)bP)Malika
	31   wiPRbMalika
	32      zKjTOf2L
No solution for instance spider/department_store/0030 (2142)
Wrong output for fuzzied solution in instance spider/department_store/0013 (2143)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.customer_name
		FROM customers AS T1
		JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.order_status_code = "Pending"
		ORDER BY T2.customer_id

	   customer_name
	0         Darron
	1          Lyric
	2  SO0YasmeenZD2
	3        Yasmeen
	4    g9PLexusrPn
	5    o7RY8s7dwyJ
	6     rsoahh QBe
	ACTUAL OUTPUT ====

		
		SELECT `customer_name`
		FROM
		  (SELECT *
		   FROM `customers` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `customer_orders`
		           WHERE (`order_status_code` = 'Pending')) AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY customer_name

	   customer_name
	0         Darron
	1          Lyric
	2          Lyric
	3  SO0YasmeenZD2
	4        Yasmeen
	5    g9PLexusrPn
	6    o7RY8s7dwyJ
	7     rsoahh QBe
No solution for instance spider/department_store/0026 (2147)
No solution for instance spider/department_store/0015 (2148)
Wrong output for fuzzied solution in instance spider/department_store/0005 (2149)
	EXPECTED OUTPUT ====

		SELECT T1.staff_id,
		       T1.staff_gender
		FROM staff AS T1
		JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id
		WHERE T2.job_title_code = "Department Manager"

	    staff_id staff_gender
	0         10             
	1         15       0XF4Nk
	2         15       0XF4Nk
	3         15       0XF4Nk
	4          5            1
	5          9            1
	6         14       1F((iO
	7         13       1dh1 E
	8         13       1dh1 E
	9         11       1xM8Ie
	10        16       s7J P1
	11        16       s7J P1
	ACTUAL OUTPUT ====

		
		SELECT `staff_id`,
		       `staff_gender`
		FROM
		  (SELECT *
		   FROM `staff` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `staff_department_assignments`
		           WHERE (`job_title_code` = 'Department Manager')) AS RHS
		        WHERE (LHS.staff_id = RHS.staff_id) ))
		ORDER BY staff_id

	   staff_id staff_gender
	0        10             
	1        15       0XF4Nk
	2         5            1
	3         9            1
	4        14       1F((iO
	5        13       1dh1 E
	6        11       1xM8Ie
	7        16       s7J P1
Wrong output for fuzzied solution in instance spider/department_store/0016 (2150)
	EXPECTED OUTPUT ====

		SELECT T2.dept_store_id,
		       T2.store_name
		FROM departments AS T1
		JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id
		WHERE T1.department_name = "marketing" INTERSECT
		  SELECT T2.dept_store_id,
		         T2.store_name
		  FROM departments AS T1
		  JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id WHERE T1.department_name = "managing"

	Empty DataFrame
	Columns: [dept_store_id, store_name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `dept_store_id`,
		       `store_name`
		FROM
		  (SELECT *
		   FROM `department_stores` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `departments`
		           WHERE (`department_name` = 'marketing'
		                  AND `department_name` != 'managing')) AS RHS
		        WHERE (LHS.dept_store_id = RHS.dept_store_id) ))
		ORDER BY dept_store_id

	   dept_store_id        store_name
	0             -1   store_name1sIf0
	1              9  Fenstore_nameYgN
Wrong output for fuzzied solution in instance spider/department_store/0032 (2151)
	EXPECTED OUTPUT ====

		SELECT supplier_id
		FROM Product_Suppliers
		GROUP BY supplier_id
		HAVING avg(total_amount_purchased) > 50000
		OR avg(total_amount_purchased) < 30000

	   supplier_id
	0           -1
	1            0
	2            1
	3            2
	4            3
	5            4
	6            5
	7            6
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT supplier_id
		FROM
		  (SELECT *
		   FROM product_suppliers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT product_id,
		                  product_id AS supplier_id,
		                  date_supplied_from,
		                  date_supplied_to,
		                  total_amount_purchased,
		                  total_value_purchased,
		                  product_id_other,
		                  date_supplied_from_other,
		                  date_supplied_to_other,
		                  total_amount_purchased_other
		           FROM
		             (SELECT LHS.product_id AS product_id,
		                     LHS.supplier_id AS supplier_id,
		                     LHS.date_supplied_from AS date_supplied_from,
		                     LHS.date_supplied_to AS date_supplied_to,
		                     LHS.total_amount_purchased AS total_amount_purchased,
		                     LHS.total_value_purchased AS total_value_purchased,
		                     RHS.product_id AS product_id_other,
		                     RHS.date_supplied_from AS date_supplied_from_other,
		                     RHS.date_supplied_to AS date_supplied_to_other,
		                     RHS.total_amount_purchased AS total_amount_purchased_other
		              FROM product_suppliers AS LHS
		              INNER JOIN product_suppliers AS RHS ON (LHS.product_id = RHS.supplier_id
		                                                         AND LHS.total_value_purchased = RHS.total_value_purchased))) AS RHS
		        WHERE (LHS.supplier_id = RHS.supplier_id) ))
		ORDER BY supplier_id

	   supplier_id
	0           -1
Wrong output for fuzzied solution in instance spider/department_store/0018 (2152)
	EXPECTED OUTPUT ====

		SELECT department_id
		FROM staff_department_assignments
		GROUP BY department_id
		ORDER BY count(*)
		LIMIT 1

	   department_id
	0              0
	ACTUAL OUTPUT ====

		
		SELECT n AS department_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT date_assigned_from,
		                job_title_code,
		                COUNT() AS n
		         FROM staff_department_assignments
		         GROUP BY date_assigned_from,
		                  job_title_code)
		      ORDER BY n DESC)
		   LIMIT 1)

	   department_id
	0              1
Wrong output for fuzzied solution in instance spider/department_store/0041 (2153)
	EXPECTED OUTPUT ====

		SELECT T1.staff_name,
		       T1.staff_gender
		FROM staff AS T1
		JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id
		WHERE T2.job_title_code = "Sales Person"
		EXCEPT
		SELECT T1.staff_name,
		       T1.staff_gender
		FROM staff AS T1
		JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id
		WHERE T2.job_title_code = "Clerical Staff"

	      staff_name staff_gender
	0        Vanessa             
	1  T7hSabrinaP0Z            0
	ACTUAL OUTPUT ====

		
		SELECT `staff_name`,
		       `staff_gender`
		FROM
		  (SELECT *
		   FROM `staff` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `staff_department_assignments`
		           WHERE (`job_title_code` = 'Sales Person'
		                  AND `job_title_code` != 'Clerical Staff')) AS RHS
		        WHERE (LHS.staff_id = RHS.staff_id) ))
		ORDER BY staff_name

	      staff_name staff_gender
	0        Vanessa             
	1  T7hSabrinaP0Z            0
	2            Tom       0XF4Nk
	3   Qh(VwYolanda            1
	4         olanda            2
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
No solution for instance spider/department_store/0019 (2156)
Wrong output for fuzzied solution in instance spider/department_store/0007 (2157)
	EXPECTED OUTPUT ====

		SELECT product_id
		FROM order_items
		GROUP BY product_id
		ORDER BY count(*) DESC
		LIMIT 1

	   product_id
	0          11
	ACTUAL OUTPUT ====

		
		SELECT product_id
		FROM
		  (SELECT order_id,
		          product_id,
		          COUNT() AS n
		   FROM order_items
		   GROUP BY order_id,
		            product_id)
		WHERE (n != 1)
		ORDER BY product_id

	   product_id
	0           0
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for base solution in instance spider/department_store/0021 (2160)
	EXPECTED OUTPUT ====

		SELECT T1.staff_id,
		       T1.staff_name
		FROM staff AS T1
		JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id
		ORDER BY date_assigned_to - date_assigned_from
		LIMIT 1

	   staff_id staff_name
	0         1        Tom
	ACTUAL OUTPUT ====

		
		SELECT staff_id,
		       staff_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.staff_id AS staff_id,
		                LHS.staff_gender AS staff_gender,
		                LHS.staff_name AS staff_name,
		                RHS.department_id AS department_id,
		                RHS.date_assigned_from AS date_assigned_from,
		                RHS.job_title_code AS job_title_code,
		                RHS.date_assigned_to AS date_assigned_to
		         FROM staff AS LHS
		         INNER JOIN staff_department_assignments AS RHS ON (LHS.staff_id = RHS.staff_id))
		      ORDER BY staff_gender DESC)
		   LIMIT 1)

	   staff_id staff_name
	0        10    Sabrina
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Wrong output for base solution in instance spider/department_store/0043 (2163)
	EXPECTED OUTPUT ====

	   avg_product_price_
	0          715.536667
	ACTUAL OUTPUT ====

		SELECT avg(product_price)
		FROM products
		WHERE product_type_code = 'Clothes'

	   avg(product_price)
	0          715.536667
Wrong output for ground truth in instance spider/department_store/0043 (2163)
Wrong output for fuzzied solution in instance spider/department_store/0014 (2164)
	EXPECTED OUTPUT ====

		SELECT T1.customer_name,
		       T1.customer_address
		FROM customers AS T1
		JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.order_status_code = "New" INTERSECT
		  SELECT T1.customer_name,
		         T1.customer_address
		  FROM customers AS T1
		  JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = "Pending"

	Empty DataFrame
	Columns: [customer_name, customer_address]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `customer_name`,
		                `customer_address`
		FROM
		  (SELECT `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`payment_method_code` AS `payment_method_code`,
		          `LHS`.`customer_code` AS `customer_code`,
		          `LHS`.`customer_name` AS `customer_name`,
		          `LHS`.`customer_address` AS `customer_address`,
		          `LHS`.`customer_phone` AS `customer_phone`,
		          `LHS`.`customer_email` AS `customer_email`,
		          `RHS`.`order_id` AS `order_id`,
		          `RHS`.`order_status_code` AS `order_status_code`,
		          `RHS`.`order_date` AS `order_date`
		   FROM `customers` AS `LHS`
		   LEFT JOIN `customer_orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))
		WHERE (`order_status_code` = 'New'
		       AND `order_status_code` != 'Pending')
		ORDER BY customer_name

	  customer_name                                   customer_address
	0         arson  pxG338 Floy Mountains Suite 589\nYesseniaville...
Wrong output for base solution in instance spider/department_store/0009 (2165)
	EXPECTED OUTPUT ====

	  product_type_code  avg_product_price_
	0           Clothes          715.536667
	1          Hardware          796.041667
	ACTUAL OUTPUT ====

		SELECT product_type_code,
		       avg(product_price)
		FROM products
		GROUP BY product_type_code

	  product_type_code  avg(product_price)
	0           Clothes          715.536667
	1          Hardware          796.041667
Wrong output for ground truth in instance spider/department_store/0009 (2165)
No solution for instance spider/department_store/0025 (2166)
No solution for instance spider/department_store/0029 (2168)
Wrong output for fuzzied solution in instance spider/department_store/0010 (2169)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM department_stores AS T1
		JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id
		WHERE T2.dept_store_chain_name = "South"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT `LHS`.`dept_store_id` AS `dept_store_id`,
		          `LHS`.`dept_store_chain_id` AS `dept_store_chain_id`,
		          `LHS`.`store_name` AS `store_name`,
		          `LHS`.`store_address` AS `store_address`,
		          `LHS`.`store_phone` AS `store_phone`,
		          `LHS`.`store_email` AS `store_email`,
		          `RHS`.`dept_store_chain_name` AS `dept_store_chain_name`
		   FROM `department_stores` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `department_store_chain`
		      WHERE (`dept_store_chain_name` = 'South')) AS RHS ON (LHS.dept_store_chain_id = RHS.dept_store_chain_id))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/department_store/0044 (2170)
	EXPECTED OUTPUT ====

		SELECT product_name
		FROM products
		WHERE product_type_code = 'Hardware'
		ORDER BY product_price DESC
		LIMIT 1

	  product_name
	0          mic
	ACTUAL OUTPUT ====

		
		SELECT `product_name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM `products`
		         WHERE (`product_type_code` = 'Hardware'))
		      ORDER BY product_id DESC)
		   LIMIT 1)

	  product_name
	0  blue toppin
Wrong output for fuzzied solution in instance spider/department_store/0040 (2171)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.customer_name
		FROM customers AS T1
		JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id
		JOIN order_items AS T3 ON T2.order_id = T3.order_id
		GROUP BY T1.customer_id
		HAVING COUNT (DISTINCT T3.product_id) >= 3

	  customer_name
	0        4mGgEE
	1         DhW4b
	2          Luka
	3         Lukas
	4    PvSZVLukas
	ACTUAL OUTPUT ====

		
		SELECT customer_name
		FROM
		  (SELECT customer_code,
		          customer_name,
		          COUNT(DISTINCT product_id) AS n_distinct
		   FROM
		     (SELECT LHS.customer_id AS customer_id,
		             LHS.payment_method_code AS payment_method_code,
		             LHS.customer_code AS customer_code,
		             LHS.customer_name AS customer_name,
		             LHS.customer_address AS customer_address,
		             LHS.customer_phone AS customer_phone,
		             LHS.customer_email AS customer_email,
		             LHS.order_id AS order_id,
		             LHS.order_status_code AS order_status_code,
		             LHS.order_date AS order_date,
		             RHS.order_item_id AS order_item_id,
		             RHS.product_id AS product_id
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.payment_method_code AS payment_method_code,
		                LHS.customer_code AS customer_code,
		                LHS.customer_name AS customer_name,
		                LHS.customer_address AS customer_address,
		                LHS.customer_phone AS customer_phone,
		                LHS.customer_email AS customer_email,
		                RHS.order_id AS order_id,
		                RHS.order_status_code AS order_status_code,
		                RHS.order_date AS order_date
		         FROM customers AS LHS
		         INNER JOIN customer_orders AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS
		      INNER JOIN order_items AS RHS ON (LHS.order_id = RHS.order_id))
		   GROUP BY customer_code,
		            customer_name)
		WHERE (n_distinct >= 3)
		ORDER BY customer_name

	  customer_name
	0        4mGgEE
	1         DhW4b
	2          Luka
	3         Lukas
	4         Lukas
	5         Lukas
	6         Lukas
	7    PvSZVLukas
Wrong output for fuzzied solution in instance spider/department_store/0031 (2173)
	EXPECTED OUTPUT ====

		SELECT product_id,
		       product_name
		FROM products
		WHERE product_price < 600
		  OR product_price > 900

	   product_id   product_name
	0           4          mouse
	1           5     I0OvSmouse
	2           6   lack topping
	3           8     mouse(2iOT
	4           9       keyboard
	5          13  black topping
	ACTUAL OUTPUT ====

		
		SELECT product_id,
		       product_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT LHS.product_id AS product_id,
		             LHS.product_type_code AS product_type_code,
		             LHS.product_name AS product_name,
		             LHS.product_price AS product_price,
		             RHS.product_id AS product_id_other,
		             RHS.product_type_code AS product_type_code_other,
		             RHS.product_name AS product_name_other,
		             RHS.product_price AS product_price_other
		      FROM products AS LHS
		      CROSS JOIN products AS RHS)
		   WHERE (product_price = product_price_other))
		WHERE (product_price <= 600.0
		       OR product_price >= 900.0)
		ORDER BY product_id

	    product_id   product_name
	0            4          mouse
	1            5     I0OvSmouse
	2            5     I0OvSmouse
	3            6   lack topping
	4            8     mouse(2iOT
	5            8     mouse(2iOT
	6            9       keyboard
	7            9       keyboard
	8           11     mousesdHuf
	9           11     mousesdHuf
	10          12        keyboar
	11          12        keyboar
	12          13  black topping
	13          13  black topping
Wrong output for fuzzied solution in instance spider/music_4/0017 (2175)
	EXPECTED OUTPUT ====

		SELECT T1.Famous_Title
		FROM artist AS T1
		JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID
		WHERE T2.Weeks_on_Top > 2

	                    famous_title
	0                       Imperivm
	1                       Imperivm
	2                       Imperivm
	3                       Imperivm
	4                  Transmutation
	5                  Transmutation
	6  Unholy Metal Way (re-release)
	7  Unholy Metal Way (re-release)
	8  Unholy Metal Way (re-release)
	9  Unholy Metal Way (re-release)
	ACTUAL OUTPUT ====

		
		SELECT famous_title
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.artist_id AS artist_id,
		                LHS.artist AS artist,
		                LHS.age AS age,
		                LHS.famous_title AS famous_title,
		                LHS.famous_release_date AS famous_release_date,
		                RHS.volume_id AS volume_id,
		                RHS.volume_issue AS volume_issue,
		                RHS.issue_date AS issue_date,
		                RHS.weeks_on_top AS weeks_on_top,
		                RHS.song AS song
		         FROM artist AS LHS
		         INNER JOIN volume AS RHS ON (LHS.artist_id = RHS.artist_id))
		      ORDER BY famous_title)
		   LIMIT 2)

	  famous_title
	0     Imperivm
	1     Imperivm
Wrong output for base solution in instance spider/music_4/0003 (2177)
	EXPECTED OUTPUT ====

	    avg_age_
	0  31.428571
	ACTUAL OUTPUT ====

		SELECT avg(Age)
		FROM artist

	    avg(age)
	0  31.428571
Wrong output for ground truth in instance spider/music_4/0003 (2177)
Wrong output for fuzzied solution in instance spider/music_4/0022 (2179)
	EXPECTED OUTPUT ====

		SELECT Category
		FROM music_festival
		GROUP BY Category
		HAVING COUNT(*) > 1

	          category
	0        Best Song
	1  Best Sound Song
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT category
		FROM
		  (SELECT category,
		          RESULT,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM
		        (SELECT category,
		                RESULT,
		                COUNT() AS n
		         FROM music_festival
		         GROUP BY category,
		                  RESULT)
		      WHERE (n != 1))
		   GROUP BY category,
		            RESULT)
		ORDER BY category

	Empty DataFrame
	Columns: [category]
	Index: []
Wrong output for fuzzied solution in instance spider/music_4/0013 (2180)
	EXPECTED OUTPUT ====

		SELECT T2.Song
		FROM music_festival AS T1
		JOIN volume AS T2 ON T1.Volume = T2.Volume_ID
		WHERE T1.Result = "Nominated"

	                                  song
	0          Everybody Have Fun Tonight 
	1          Everybody Have Fun Tonight 
	2          Everybody Have Fun Tonight 
	3     Everybody Have Fun Tonight (2tb 
	4                      La Isla Bonita 
	5         Touch Me (I Want Your Body) 
	6   )TDJ) Touch Me (I Want Your Body) 
	7   FTi10nnkOuSJX8nvzU)dXEE0AlgAKsQyPl
	8                      La Isla Bonita 
	9        Og2T5ucA0VZNCz7k59kN4U5i(5)X3
	10       Og2T5ucA0VZNCz7k59kN4U5i(5)X3
	11                QrsRi(k2SJzrvnOHZilE
	12   WANVt Everybody Have Fun Tonight 
	ACTUAL OUTPUT ====

		
		SELECT `song`
		FROM
		  (SELECT `LHS`.`volume_id` AS `volume_id`,
		          `LHS`.`volume_issue` AS `volume_issue`,
		          `LHS`.`issue_date` AS `issue_date`,
		          `LHS`.`weeks_on_top` AS `weeks_on_top`,
		          `LHS`.`song` AS `song`,
		          `LHS`.`artist_id` AS `artist_id`,
		          `RHS`.`music_festival` AS `music_festival`,
		          `RHS`.`date_of_ceremony` AS `date_of_ceremony`,
		          `RHS`.`category` AS `category`,
		          `RHS`.`volume` AS `volume`,
		          `RHS`.`result` AS `result`
		   FROM `volume` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `music_festival` AS `LHS`
		      WHERE EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM `music_festival`
		              WHERE (`result` = 'Nominated')) AS RHS
		           WHERE (LHS.id = RHS.id
		                  AND LHS.music_festival = RHS.music_festival
		                  AND LHS.date_of_ceremony = RHS.date_of_ceremony
		                  AND LHS.category = RHS.category
		                  AND LHS.volume = RHS.volume
		                  AND LHS.result = RHS.result) )) AS RHS ON (LHS.volume_id = RHS.id))
		ORDER BY song

	                                song
	0  Kq0Y(blEQz6TnlbPLtnvyH(DF4vbBEED6
Wrong output for fuzzied solution in instance spider/music_4/0012 (2183)
	EXPECTED OUTPUT ====

		SELECT T1.Date_of_ceremony
		FROM music_festival AS T1
		JOIN volume AS T2 ON T1.Volume = T2.Volume_ID
		WHERE T2.Weeks_on_Top > 2

	   date_of_ceremony
	0  18 February 2011
	1  18 February 2011
	2  18 February 2011
	3  18 February 2011
	4  18 February 2011
	5  18 February 2011
	6  18 February 2011
	7   8 February 2011
	8   8 February 2011
	ACTUAL OUTPUT ====

		
		SELECT date_of_ceremony
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.volume_id AS volume_id,
		                LHS.volume_issue AS volume_issue,
		                LHS.issue_date AS issue_date,
		                LHS.weeks_on_top AS weeks_on_top,
		                LHS.song AS song,
		                LHS.artist_id AS artist_id,
		                RHS.id AS id,
		                RHS.music_festival AS music_festival,
		                RHS.date_of_ceremony AS date_of_ceremony,
		                RHS.category AS category,
		                RHS.volume AS volume,
		                RHS.result AS RESULT
		         FROM volume AS LHS
		         CROSS JOIN music_festival AS RHS)
		      ORDER BY weeks_on_top)
		   LIMIT 2)

	   date_of_ceremony
	0  18 February 2011
	1  18 February 2011
Wrong output for fuzzied solution in instance spider/music_4/0016 (2187)
	EXPECTED OUTPUT ====

		SELECT avg(T2.Weeks_on_Top)
		FROM artist AS T1
		JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID
		WHERE T1.age <= 25

	   avg(t2.weeks_on_top)
	0              1.666667
	ACTUAL OUTPUT ====

		
		SELECT weeks_on_top AS avg_t2_weeks_on_top_
		FROM
		  (SELECT LHS.volume_id AS volume_id,
		          LHS.volume_issue AS volume_issue,
		          LHS.issue_date AS issue_date,
		          LHS.weeks_on_top AS weeks_on_top,
		          LHS.song AS song,
		          LHS.artist_id AS artist_id,
		          RHS.artist AS artist,
		          RHS.age AS age,
		          RHS.famous_title AS famous_title,
		          RHS.famous_release_date AS famous_release_date
		   FROM volume AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM artist
		      WHERE (age <= 25)) AS RHS ON (LHS.artist_id = RHS.artist_id))
		ORDER BY avg_t2_weeks_on_top_

	   avg_t2_weeks_on_top_
	0                  1.00
	1                  1.02
	2                  2.98
Wrong output for fuzzied solution in instance spider/music_4/0020 (2189)
	EXPECTED OUTPUT ====

		SELECT Category,
		       COUNT(*)
		FROM music_festival
		GROUP BY Category

	          category  count(*)
	0         Best Son         1
	1        Best Song         4
	2  Best Sound Song         2
	3   D7vh)Best Song         1
	4   UjgUbBest Song         1
	5   est Sound Song         1
	ACTUAL OUTPUT ====

		
		SELECT category,
		       n AS count___
		FROM
		  (SELECT category,
		          date_of_ceremony,
		          COUNT() AS n
		   FROM music_festival
		   GROUP BY category,
		            date_of_ceremony)
		ORDER BY category

	          category  count___
	0         Best Son         1
	1        Best Song         1
	2        Best Song         3
	3  Best Sound Song         1
	4  Best Sound Song         1
	5   D7vh)Best Song         1
	6   UjgUbBest Song         1
	7   est Sound Song         1
Wrong output for fuzzied solution in instance spider/music_4/0019 (2190)
	EXPECTED OUTPUT ====

		SELECT Famous_Release_date
		FROM artist
		ORDER BY Age DESC
		LIMIT 1

	  famous_release_date
	0           AwM2u2008
	ACTUAL OUTPUT ====

		
		SELECT famous_release_date
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM artist
		      ORDER BY artist DESC)
		   LIMIT 1)

	  famous_release_date
	0                2008
Wrong output for fuzzied solution in instance spider/music_4/0021 (2193)
	EXPECTED OUTPUT ====

		SELECT RESULT
		FROM music_festival
		GROUP BY RESULT
		ORDER BY COUNT(*) DESC
		LIMIT 1

	      result
	0  Nominated
	ACTUAL OUTPUT ====

		
		SELECT RESULT
		FROM
		  (SELECT LHS.id AS id,
		          LHS.result AS RESULT,
		          LHS.n AS n,
		          RHS.music_festival AS music_festival,
		          RHS.date_of_ceremony AS date_of_ceremony,
		          RHS.category AS category,
		          RHS.result AS result_other
		   FROM
		     (SELECT id,
		             RESULT,
		             COUNT() AS n
		      FROM music_festival
		      GROUP BY id,
		               RESULT) AS LHS
		   INNER JOIN music_festival AS RHS ON (LHS.id = RHS.id
		                                           AND LHS.n = RHS.volume))
		ORDER BY RESULT

	Empty DataFrame
	Columns: [result]
	Index: []
Wrong output for fuzzied solution in instance spider/music_4/0023 (2194)
	EXPECTED OUTPUT ====

		SELECT Song
		FROM volume
		ORDER BY Weeks_on_Top DESC
		LIMIT 1

	                                  song
	0  2Cq Touch Me (I Want Your Body) p21
	ACTUAL OUTPUT ====

		
		SELECT song
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM volume
		      ORDER BY volume_issue)
		   LIMIT 1)

	          song
	0  Head to Toe
Wrong output for fuzzied solution in instance spider/music_4/0001 (2195)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM artist

	   count(*)
	0        53
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT age,
		             famous_title,
		             COUNT() AS n
		      FROM artist
		      GROUP BY age,
		               famous_title))
		ORDER BY count___

	   count___
	0        50
Wrong output for fuzzied solution in instance spider/music_4/0009 (2197)
	EXPECTED OUTPUT ====

		SELECT Song
		FROM volume
		WHERE Weeks_on_Top > 1

	                            song
	0                        Always 
	1   3tjLooking for a New LoveBy0
	2             Dj5Head to Toe CJb
	3                   Head to Toe 
	4                   Head to Toe 
	5         Looking for a New Love
	6         Looking for a New Love
	7         Looking for a New Love
	8         Looking for a New Love
	9              TSY89Head to Toe 
	10                jLq Always PPX
	ACTUAL OUTPUT ====

		
		SELECT song
		FROM
		  (SELECT song
		   FROM volume
		   WHERE (weeks_on_top > 1.0) INTERSECT
		     SELECT song
		     FROM volume)
		ORDER BY song

	                           song
	0                       Always 
	1  3tjLooking for a New LoveBy0
	2            Dj5Head to Toe CJb
	3                  Head to Toe 
	4        Looking for a New Love
	5             TSY89Head to Toe 
	6                jLq Always PPX
Wrong output for fuzzied solution in instance spider/music_4/0025 (2198)
	EXPECTED OUTPUT ====

		SELECT T1.Famous_Title
		FROM artist AS T1
		JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID
		WHERE T2.Weeks_on_Top > 2 INTERSECT
		  SELECT T1.Famous_Title
		  FROM artist AS T1
		  JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top < 2

	                              famous_title
	0                       2IJangWxGd (wLIv(T
	1  Antievangelistical Process (re-release)
	2         Those Who Unleashed (re-release)
	3            Unholy Metal Way (re-release)
	4             nholy Metal Way (re-release)
	5      zA1Unholy Metal Way (re-release)xP8
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT famous_title
		FROM
		  (SELECT LHS.artist_id AS artist_id,
		          LHS.artist AS artist,
		          LHS.age AS age,
		          LHS.famous_title AS famous_title,
		          LHS.famous_release_date AS famous_release_date,
		          LHS.volume_id AS volume_id,
		          LHS.volume_issue AS volume_issue,
		          LHS.issue_date AS issue_date,
		          LHS.weeks_on_top AS weeks_on_top,
		          LHS.song AS song
		   FROM
		     (SELECT LHS.artist_id AS artist_id,
		             LHS.artist AS artist,
		             LHS.age AS age,
		             LHS.famous_title AS famous_title,
		             LHS.famous_release_date AS famous_release_date,
		             RHS.volume_id AS volume_id,
		             RHS.volume_issue AS volume_issue,
		             RHS.issue_date AS issue_date,
		             RHS.weeks_on_top AS weeks_on_top,
		             RHS.song AS song
		      FROM artist AS LHS
		      INNER JOIN volume AS RHS ON (LHS.artist_id = RHS.artist_id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM volume
		      WHERE (weeks_on_top > 2.0)) AS RHS ON (LHS.artist_id = RHS.artist_id
		                                             AND LHS.volume_id = RHS.volume_id
		                                             AND LHS.volume_issue = RHS.volume_issue
		                                             AND LHS.issue_date = RHS.issue_date
		                                             AND LHS.weeks_on_top = RHS.weeks_on_top
		                                             AND LHS.song = RHS.song))
		ORDER BY famous_title

	                              famous_title
	0                       2IJangWxGd (wLIv(T
	1  Antievangelistical Process (re-release)
	2                        AprRaVdwHiP rw7p7
	3         Those Who Unleashed (re-release)
	4            Unholy Metal Way (re-release)
	5             nholy Metal Way (re-release)
	6      zA1Unholy Metal Way (re-release)xP8
Error while executing solution for instance spider/music_4/0011 (2199)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT artist_id) OVER () AS count_distinct_artist_id_
FROM volume
ORDER BY count_distinct_artist_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/music_4/0010 (2201)
	EXPECTED OUTPUT ====

		SELECT Song
		FROM volume
		ORDER BY Song

	                                   song
	0                               Always 
	1                          Always sHiVk
	2           Touch Me (I Want Your Body)
	3          Touch Me (I Want Your Body) 
	4          Touch Me (I Want Your Body) 
	5          Touch Me (I Want Your Body) 
	6   2Cq Touch Me (I Want Your Body) p21
	7    9wi(F Touch Me (I Want Your Body) 
	8                           Head to Toe
	9                          Head to Toe 
	10                         Head to Toe 
	11         Touch Me (I Want Your Body) 
	12  zvE Touch Me (I Want Your Body) zRM
	ACTUAL OUTPUT ====

		
		SELECT song
		FROM
		  (SELECT song
		   FROM volume INTERSECT SELECT song
		   FROM volume)
		ORDER BY song

	                                  song
	0                              Always 
	1                         Always sHiVk
	2          Touch Me (I Want Your Body)
	3         Touch Me (I Want Your Body) 
	4  2Cq Touch Me (I Want Your Body) p21
	5   9wi(F Touch Me (I Want Your Body) 
	6                          Head to Toe
	7                         Head to Toe 
	8         Touch Me (I Want Your Body) 
	9  zvE Touch Me (I Want Your Body) zRM
Wrong output for fuzzied solution in instance spider/music_4/0028 (2202)
	EXPECTED OUTPUT ====

		SELECT RESULT,
		       COUNT(*)
		FROM music_festival
		GROUP BY RESULT
		ORDER BY COUNT(*) DESC

	           result  count(*)
	0   54VAwardedfAH         1
	1    77VxAAwarded         1
	2    AwardedobStX         1
	3        Nominate         1
	4  NominatedoUifB         1
	5        ominated         2
	6       Nominated         3
	ACTUAL OUTPUT ====

		
		SELECT RESULT,
		       n AS count___
		FROM
		  (SELECT date_of_ceremony,
		          RESULT,
		          COUNT() AS n
		   FROM music_festival
		   GROUP BY date_of_ceremony,
		            RESULT)
		ORDER BY RESULT

	           result  count___
	0   54VAwardedfAH         1
	1    77VxAAwarded         1
	2    AwardedobStX         1
	3        Nominate         1
	4       Nominated         1
	5       Nominated         2
	6  NominatedoUifB         1
	7        ominated         1
	8        ominated         1
Wrong output for base solution in instance spider/hr_1/0056 (2203)
	EXPECTED OUTPUT ====

	         department_name                 city state_province
	0        Human Resources               London            NaN
	1       Public Relations               Munich        Bavaria
	2                  Sales              OX9 9ZB         Oxford
	3             Accounting              Seattle     Washington
	4         Administration              Seattle     Washington
	5               Benefits              Seattle     Washington
	6           Construction              Seattle     Washington
	7            Contracting              Seattle     Washington
	8     Control And Credit              Seattle     Washington
	9          Corporate Tax              Seattle     Washington
	10             Executive              Seattle     Washington
	11               Finance              Seattle     Washington
	12      Government Sales              Seattle     Washington
	13           IT Helpdesk              Seattle     Washington
	14            IT Support              Seattle     Washington
	15         Manufacturing              Seattle     Washington
	16                   NOC              Seattle     Washington
	17            Operations              Seattle     Washington
	18               Payroll              Seattle     Washington
	19            Purchasing              Seattle     Washington
	20            Recruiting              Seattle     Washington
	21          Retail Sales              Seattle     Washington
	22  Shareholder Services              Seattle     Washington
	23              Treasury              Seattle     Washington
	24              Shipping  South San Francisco     California
	25                    IT            Southlake          Texas
	26             Marketing              Toronto        Ontario
	ACTUAL OUTPUT ====

		SELECT T1.department_name,
		       T2.city,
		       T2.state_province
		FROM departments AS T1
		JOIN locations AS T2 ON T2.location_id = T1.location_id

	         department_name                 city state_province
	0        Human Resources               London               
	1       Public Relations               Munich        Bavaria
	2                  Sales              OX9 9ZB         Oxford
	3             Accounting              Seattle     Washington
	4         Administration              Seattle     Washington
	5               Benefits              Seattle     Washington
	6           Construction              Seattle     Washington
	7            Contracting              Seattle     Washington
	8     Control And Credit              Seattle     Washington
	9          Corporate Tax              Seattle     Washington
	10             Executive              Seattle     Washington
	11               Finance              Seattle     Washington
	12      Government Sales              Seattle     Washington
	13           IT Helpdesk              Seattle     Washington
	14            IT Support              Seattle     Washington
	15         Manufacturing              Seattle     Washington
	16                   NOC              Seattle     Washington
	17            Operations              Seattle     Washington
	18               Payroll              Seattle     Washington
	19            Purchasing              Seattle     Washington
	20            Recruiting              Seattle     Washington
	21          Retail Sales              Seattle     Washington
	22  Shareholder Services              Seattle     Washington
	23              Treasury              Seattle     Washington
	24              Shipping  South San Francisco     California
	25                    IT            Southlake          Texas
	26             Marketing              Toronto        Ontario
Wrong output for ground truth in instance spider/hr_1/0056 (2203)
No solution for instance spider/hr_1/0033 (2205)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
No solution for instance spider/hr_1/0002 (2207)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
No solution for instance spider/hr_1/0057 (2209)
No solution for instance spider/hr_1/0017 (2210)
No solution for instance spider/hr_1/0008 (2212)
Error while executing solution for instance spider/hr_1/0039 (2213)

The column label 'DEPARTMENT_ID' is not unique.
Error while checking ground truth in instance spider/hr_1/0039 (2213)
Wrong output for fuzzied solution in instance spider/hr_1/0038 (2214)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.department_name
		FROM employees AS T1
		JOIN departments AS T2 ON T1.department_id = T2.department_id

	          department_name
	0  FtqPublic RelationsZrQ
	1        Government Sales
	2   Government SalesrfrOT
	3         Public Relation
	4        Public Relations
	5   Public Relations C8zv
	6         overnment Sales
	7         ublic Relations
	ACTUAL OUTPUT ====

		
		SELECT department_name
		FROM
		  (SELECT LHS.department_id AS department_id,
		          LHS.department_name AS department_name,
		          LHS.manager_id AS manager_id,
		          LHS.location_id AS location_id,
		          RHS.first_name AS first_name,
		          RHS.last_name AS last_name,
		          RHS.email AS email,
		          RHS.phone_number AS phone_number,
		          RHS.hire_date AS hire_date,
		          RHS.job_id AS job_id,
		          RHS.salary AS salary,
		          RHS.commission_pct AS commission_pct,
		          RHS.manager_id AS manager_id_other
		   FROM departments AS LHS
		   INNER JOIN employees AS RHS ON (LHS.department_id = RHS.department_id
		                                      AND LHS.manager_id = RHS.employee_id))
		ORDER BY department_name

	Empty DataFrame
	Columns: [department_name]
	Index: []
No solution for instance spider/hr_1/0048 (2216)
No solution for instance spider/hr_1/0053 (2218)
Wrong output for fuzzied solution in instance spider/hr_1/0030 (2219)
	EXPECTED OUTPUT ====

		SELECT T2.department_name,
		       COUNT(*)
		FROM employees AS T1
		JOIN departments AS T2 ON T1.department_id = T2.department_id
		GROUP BY T2.department_name

	          department_name  count(*)
	0  FtqPublic RelationsZrQ         1
	1         overnment Sales         1
	2   Government SalesrfrOT         2
	3   Public Relations C8zv         2
	4         ublic Relations         2
	5         Public Relation         3
	6        Public Relations         5
	7        Government Sales         9
	ACTUAL OUTPUT ====

		
		SELECT department_name,
		       n AS count___
		FROM
		  (SELECT LHS.department_id AS department_id,
		          LHS.department_name AS department_name,
		          LHS.manager_id AS manager_id,
		          LHS.location_id AS location_id,
		          RHS.n AS n
		   FROM departments AS LHS
		   INNER JOIN
		     (SELECT department_id,
		             COUNT() AS n
		      FROM employees
		      GROUP BY department_id) AS RHS ON (LHS.department_id = RHS.department_id))
		ORDER BY department_name

	           department_name  count___
	0   FtqPublic RelationsZrQ         1
	1         Government Sales         1
	2         Government Sales         1
	3         Government Sales         1
	4         Government Sales         1
	5         Government Sales         1
	6         Public Relations         1
	7         Public Relations         1
	8          overnment Sales         1
	9         Government Sales         2
	10        Government Sales         2
	11   Government SalesrfrOT         2
	12   Public Relations C8zv         2
	13         ublic Relations         2
	14         Public Relation         3
	15        Public Relations         3
No solution for instance spider/hr_1/0006 (2220)
No solution for instance spider/hr_1/0012 (2221)
Error while executing solution for instance spider/hr_1/0016 (2225)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `employee_id`,
       `first_name`,
       `last_name`,
       `email`,
       `phone_number`,
       `hire_date`,
       `job_id`,
       `salary`,
       `commission_pct`,
       `manager_id`,
       `department_id`
FROM
  (SELECT *
   FROM `employees` AS `LHS`
   WHERE EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM `employees`
           WHERE (`hire_date` != parse_datetime('2002-06-21'))) AS RHS
        WHERE (LHS.employee_id = RHS.employee_id
               AND LHS.first_name = RHS.first_name
               AND LHS.last_name = RHS.last_name
               AND LHS.email = RHS.email
               AND LHS.phone_number = RHS.phone_number
               AND LHS.hire_date = RHS.hire_date
               AND LHS.job_id = RHS.job_id
               AND LHS.salary = RHS.salary
               AND LHS.commission_pct = RHS.commission_pct
               AND LHS.manager_id = RHS.manager_id
               AND LHS.department_id = RHS.department_id) ))
ORDER BY employee_id]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/hr_1/0050 (2226)
Wrong output for fuzzied solution in instance spider/hr_1/0059 (2227)
	EXPECTED OUTPUT ====

		SELECT first_name,
		       last_name,
		       salary
		FROM employees AS T1
		JOIN departments AS T2 ON T1.department_id = T2.department_id
		JOIN locations AS T3 ON T2.location_id = T3.location_id
		WHERE T3.city = 'London'

	  first_name last_name  salary
	0  Elizabeth        ee    2700
	1         TJ       nde    2700
	ACTUAL OUTPUT ====

		
		SELECT `first_name`,
		       `last_name`,
		       `salary`
		FROM
		  (SELECT `LHS`.`department_id` AS `department_id`,
		          `LHS`.`department_name` AS `department_name`,
		          `LHS`.`manager_id` AS `manager_id`,
		          `LHS`.`location_id` AS `location_id`,
		          `RHS`.`first_name` AS `first_name`,
		          `RHS`.`last_name` AS `last_name`,
		          `RHS`.`email` AS `email`,
		          `RHS`.`phone_number` AS `phone_number`,
		          `RHS`.`hire_date` AS `hire_date`,
		          `RHS`.`job_id` AS `job_id`,
		          `RHS`.`salary` AS `salary`,
		          `RHS`.`commission_pct` AS `commission_pct`,
		          `RHS`.`manager_id` AS `manager_id_other`
		   FROM
		     (SELECT *
		      FROM `departments` AS `LHS`
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM `locations`
		              WHERE (`city` != 'London')) AS RHS
		           WHERE (LHS.location_id = RHS.location_id) )) AS LHS
		   INNER JOIN employees AS RHS ON (LHS.department_id = RHS.department_id
		                                      AND LHS.manager_id = RHS.employee_id))
		ORDER BY first_name

	Empty DataFrame
	Columns: [first_name, last_name, salary]
	Index: []
Wrong output for fuzzied solution in instance spider/hr_1/0032 (2228)
	EXPECTED OUTPUT ====

		SELECT job_title,
		       AVG(salary)
		FROM employees AS T1
		JOIN jobs AS T2 ON T1.job_id = T2.job_id
		GROUP BY T2.job_title

	                  job_title  avg(salary)
	0           ProgrammeriBah1     6499.985
	1    l9o)CMarketing Manager     6500.000
	2              Stock Manage     6500.005
	3           AccountantfwsK7     6500.010
	4    Marketing Manager)yXUz     6500.020
	5          arketing Manager     6500.020
	6        Stock Managerf1xzD     9000.000
	7                Programmer     9000.010
	8                 ccountant     9000.010
	9                Accountant     9000.020
	10            Stock Manager    10666.670
	11   OvJ7NPublic Accountant    11499.980
	12  c9cPublic Accountantn2R    13999.980
	13          RFmjfAccountant    14000.000
	14   7cVqMMarketing Manager    14000.010
	15         ublic Accountant    14000.010
	16          AccountantRQcbB    14000.020
	ACTUAL OUTPUT ====

		
		SELECT job_title,
		       meansalary AS avg_salary_
		FROM
		  (SELECT job_id,
		          job_title,
		          AVG(salary) AS meansalary
		   FROM
		     (SELECT LHS.job_id AS job_id,
		             LHS.job_title AS job_title,
		             LHS.min_salary AS min_salary,
		             LHS.max_salary AS max_salary,
		             RHS.employee_id AS employee_id,
		             RHS.first_name AS first_name,
		             RHS.last_name AS last_name,
		             RHS.email AS email,
		             RHS.phone_number AS phone_number,
		             RHS.hire_date AS hire_date,
		             RHS.salary AS salary,
		             RHS.commission_pct AS commission_pct,
		             RHS.manager_id AS manager_id,
		             RHS.department_id AS department_id
		      FROM jobs AS LHS
		      INNER JOIN employees AS RHS ON (LHS.job_id = RHS.job_id))
		   GROUP BY job_id,
		            job_title)
		ORDER BY job_title

	                  job_title  avg_salary_
	0           ProgrammeriBah1     6499.985
	1              Stock Manage     6499.990
	2    l9o)CMarketing Manager     6500.000
	3           AccountantfwsK7     6500.010
	4    Marketing Manager)yXUz     6500.020
	5              Stock Manage     6500.020
	6          arketing Manager     6500.020
	7             Stock Manager     9000.000
	8        Stock Managerf1xzD     9000.000
	9                Programmer     9000.010
	10            Stock Manager     9000.010
	11                ccountant     9000.010
	12               Accountant     9000.020
	13   OvJ7NPublic Accountant    11499.980
	14  c9cPublic Accountantn2R    13999.980
	15          RFmjfAccountant    14000.000
	16            Stock Manager    14000.000
	17   7cVqMMarketing Manager    14000.010
	18         ublic Accountant    14000.010
	19          AccountantRQcbB    14000.020
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_25008.sqlite3'
Error while executing solution for instance spider/hr_1/0018 (2230)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT `employee_id`,
       `first_name`,
       `last_name`,
       `email`,
       `phone_number`,
       `hire_date`,
       `job_id`,
       `salary`,
       `commission_pct`,
       `manager_id`,
       `department_id`
FROM `employees`
WHERE (`hire_date` > parse_datetime('1987-09-07'))
ORDER BY employee_id]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/hr_1/0051 (2232)
No solution for instance spider/hr_1/0035 (2233)
No solution for instance spider/hr_1/0020 (2234)
No solution for instance spider/hr_1/0007 (2236)
Wrong output for fuzzied solution in instance spider/hr_1/0024 (2238)
	EXPECTED OUTPUT ====

		SELECT DISTINCT department_id
		FROM employees
		GROUP BY department_id,
		         manager_id
		HAVING COUNT(employee_id) >= 4

	Empty DataFrame
	Columns: [department_id]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT department_id
		FROM
		  (SELECT department_id,
		          COUNT(DISTINCT employee_id) AS n_distinct
		   FROM employees
		   GROUP BY department_id)
		WHERE (n_distinct > 4)
		ORDER BY department_id

	   department_id
	0   -3423.531755
	1     219.990000
	2     220.000000
	3     220.020000
No solution for instance spider/hr_1/0046 (2242)
Wrong output for base solution in instance spider/hr_1/0054 (2243)
	EXPECTED OUTPUT ====

	    first_name  last_name   department_name       city state_province
	0        Susan     Mavris   Human Resources     London            NaN
	1      Hermann       Baer  Public Relations     Munich        Bavaria
	2      Alberto  Errazuriz             Sales    OX9 9ZB         Oxford
	3        Allan     McEwen             Sales    OX9 9ZB         Oxford
	4       Alyssa     Hutton             Sales    OX9 9ZB         Oxford
	..         ...        ...               ...        ...            ...
	101      David     Austin                IT  Southlake          Texas
	102      Diana    Lorentz                IT  Southlake          Texas
	103      Valli  Pataballa                IT  Southlake          Texas
	104    Michael  Hartstein         Marketing    Toronto        Ontario
	105        Pat        Fay         Marketing    Toronto        Ontario
	
	[106 rows x 5 columns]
	ACTUAL OUTPUT ====

		SELECT T1.first_name,
		       T1.last_name,
		       T2.department_name,
		       T3.city,
		       T3.state_province
		FROM employees AS T1
		JOIN departments AS T2 ON T1.department_id = T2.department_id
		JOIN locations AS T3 ON T2.location_id = T3.location_id

	    first_name  last_name   department_name       city state_province
	0        Susan     Mavris   Human Resources     London               
	1      Hermann       Baer  Public Relations     Munich        Bavaria
	2      Alberto  Errazuriz             Sales    OX9 9ZB         Oxford
	3        Allan     McEwen             Sales    OX9 9ZB         Oxford
	4       Alyssa     Hutton             Sales    OX9 9ZB         Oxford
	..         ...        ...               ...        ...            ...
	101      David     Austin                IT  Southlake          Texas
	102      Diana    Lorentz                IT  Southlake          Texas
	103      Valli  Pataballa                IT  Southlake          Texas
	104    Michael  Hartstein         Marketing    Toronto        Ontario
	105        Pat        Fay         Marketing    Toronto        Ontario
	
	[106 rows x 5 columns]
Wrong output for ground truth in instance spider/hr_1/0054 (2243)
No solution for instance spider/hr_1/0047 (2244)
No solution for instance spider/hr_1/0014 (2245)
Wrong output for base solution in instance spider/hr_1/0025 (2247)
	EXPECTED OUTPUT ====

	    department_id   avg_salary_
	0            50.0   3475.555556
	1            30.0   4150.000000
	2            10.0   4400.000000
	3            60.0   5760.000000
	4            40.0   6500.000000
	5             0.0   7000.000000
	6           100.0   8600.000000
	7            80.0   8955.882353
	8            20.0   9500.000000
	9            70.0  10000.000000
	10          110.0  10150.000000
	11           90.0  19333.333333
	ACTUAL OUTPUT ====

		SELECT department_id,
		       AVG(salary)
		FROM employees
		WHERE commission_pct != "null"
		GROUP BY department_id

	    department_id   avg(salary)
	0              50   3475.555556
	1              30   4150.000000
	2              10   4400.000000
	3              60   5760.000000
	4              40   6500.000000
	5               0   7000.000000
	6             100   8600.000000
	7              80   8955.882353
	8              20   9500.000000
	9              70  10000.000000
	10            110  10150.000000
	11             90  19333.333333
Wrong output for ground truth in instance spider/hr_1/0025 (2247)
Timeout while getting results...


No solution for instance spider/hr_1/0044 (2250)
Wrong output for fuzzied solution in instance spider/hr_1/0040 (2251)
	EXPECTED OUTPUT ====

		SELECT job_id
		FROM employees
		GROUP BY job_id
		HAVING AVG(salary) > 8000

	          job_id
	0          A_MAN
	1    HR_REPFcDga
	2    PR_REPJfgak
	3    SA_MANB6WvA
	4    SA_MANCXKQz
	5    SA_REP68cHA
	6       ST_CLERK
	7  ST_CLERKjBi26
	8    cgrs6SA_MAN
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT job_id
		FROM
		  (SELECT LHS.employee_id AS employee_id,
		          LHS.first_name AS first_name,
		          LHS.last_name AS last_name,
		          LHS.email AS email,
		          LHS.phone_number AS phone_number,
		          LHS.hire_date AS hire_date,
		          LHS.job_id AS job_id,
		          LHS.salary AS salary,
		          LHS.commission_pct AS commission_pct,
		          LHS.manager_id AS manager_id,
		          LHS.department_id AS department_id,
		          RHS.meansalary AS meansalary
		   FROM employees AS LHS
		   INNER JOIN
		     (SELECT department_id,
		             job_id,
		             AVG(salary) AS meansalary
		      FROM employees
		      GROUP BY department_id,
		               job_id) AS RHS ON (LHS.job_id = RHS.job_id
		                                  AND LHS.department_id = RHS.department_id))
		WHERE (meansalary >= 8000.0
		       AND meansalary <= salary)
		ORDER BY job_id

	          job_id
	0    9w2 cSA_MAN
	1          A_MAN
	2    HR_REPFcDga
	3    PR_REPJfgak
	4    SA_MANB6WvA
	5    SA_MANCXKQz
	6    SA_REP68cHA
	7       ST_CLERK
	8  ST_CLERKjBi26
	9    cgrs6SA_MAN
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_26476.sqlite3'
Error while executing solution for instance spider/hr_1/0031 (2254)

The column label 'DEPARTMENT_ID' is not unique.
Error while checking ground truth in instance spider/hr_1/0031 (2254)
No solution for instance spider/hr_1/0055 (2255)
Wrong output for fuzzied solution in instance spider/hr_1/0058 (2256)
	EXPECTED OUTPUT ====

		SELECT department_name,
		       COUNT(*)
		FROM employees AS T1
		JOIN departments AS T2 ON T1.department_id = T2.department_id
		GROUP BY department_name

	          department_name  count(*)
	0  FtqPublic RelationsZrQ         1
	1         overnment Sales         1
	2   Government SalesrfrOT         2
	3   Public Relations C8zv         2
	4         ublic Relations         2
	5         Public Relation         3
	6        Public Relations         5
	7        Government Sales         9
	ACTUAL OUTPUT ====

		
		SELECT department_name,
		       n AS count___
		FROM
		  (SELECT LHS.department_id AS department_id,
		          LHS.department_name AS department_name,
		          LHS.manager_id AS manager_id,
		          LHS.location_id AS location_id,
		          RHS.n AS n
		   FROM departments AS LHS
		   INNER JOIN
		     (SELECT department_id,
		             COUNT() AS n
		      FROM employees
		      GROUP BY department_id) AS RHS ON (LHS.department_id = RHS.department_id))
		ORDER BY department_name

	           department_name  count___
	0   FtqPublic RelationsZrQ         1
	1         Government Sales         1
	2         Government Sales         1
	3         Government Sales         1
	4         Government Sales         1
	5         Government Sales         1
	6         Public Relations         1
	7         Public Relations         1
	8          overnment Sales         1
	9         Government Sales         2
	10        Government Sales         2
	11   Government SalesrfrOT         2
	12   Public Relations C8zv         2
	13         ublic Relations         2
	14         Public Relation         3
	15        Public Relations         3
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0042 (2257)
	EXPECTED OUTPUT ====

		SELECT t3.characteristic_name
		FROM products AS t1
		JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id
		JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id
		GROUP BY t3.characteristic_name
		HAVING count(*) >= 2

	   characteristic_name
	0            1i(c(warm
	1            amwyscool
	2                  arm
	3                  ast
	4                  coo
	5                 cool
	6            coolET2nA
	7                 fast
	8           nlGnlp6iN5
	9            qpAu6leyg
	10          urSwarmcm9
	11                warm
	12          xC5warmXAP
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT characteristic_name
		FROM
		  (SELECT LHS.characteristic_id AS characteristic_id,
		          LHS.characteristic_type_code AS characteristic_type_code,
		          LHS.characteristic_data_type AS characteristic_data_type,
		          LHS.characteristic_name AS characteristic_name,
		          LHS.other_characteristic_details AS other_characteristic_details,
		          LHS.product_id AS product_id,
		          LHS.color_code AS color_code,
		          LHS.product_category_code AS product_category_code,
		          LHS.product_name AS product_name,
		          LHS.typical_buying_price AS typical_buying_price,
		          LHS.typical_selling_price AS typical_selling_price,
		          LHS.product_description AS product_description,
		          LHS.other_product_details AS other_product_details,
		          LHS.product_characteristic_value AS product_characteristic_value,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.characteristic_id AS characteristic_id,
		             LHS.characteristic_type_code AS characteristic_type_code,
		             LHS.characteristic_data_type AS characteristic_data_type,
		             LHS.characteristic_name AS characteristic_name,
		             LHS.other_characteristic_details AS other_characteristic_details,
		             LHS.product_id AS product_id,
		             LHS.color_code AS color_code,
		             LHS.product_category_code AS product_category_code,
		             LHS.product_name AS product_name,
		             LHS.typical_buying_price AS typical_buying_price,
		             LHS.typical_selling_price AS typical_selling_price,
		             LHS.product_description AS product_description,
		             LHS.other_product_details AS other_product_details,
		             RHS.product_characteristic_value AS product_characteristic_value
		      FROM
		        (SELECT LHS.characteristic_id AS characteristic_id,
		                LHS.characteristic_type_code AS characteristic_type_code,
		                LHS.characteristic_data_type AS characteristic_data_type,
		                LHS.characteristic_name AS characteristic_name,
		                LHS.other_characteristic_details AS other_characteristic_details,
		                RHS.product_id AS product_id,
		                RHS.color_code AS color_code,
		                RHS.product_category_code AS product_category_code,
		                RHS.product_name AS product_name,
		                RHS.typical_buying_price AS typical_buying_price,
		                RHS.typical_selling_price AS typical_selling_price,
		                RHS.product_description AS product_description,
		                RHS.other_product_details AS other_product_details
		         FROM characteristics AS LHS
		         CROSS JOIN products AS RHS) AS LHS
		      INNER JOIN product_characteristics AS RHS ON (LHS.characteristic_id = RHS.characteristic_id
		                                                       AND LHS.product_id = RHS.product_id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT product_characteristic_value,
		                product_id,
		                COUNT() AS n
		         FROM product_characteristics
		         GROUP BY product_characteristic_value,
		                  product_id)
		      WHERE (n = 2)) AS RHS ON (LHS.product_id = RHS.product_id
		                                AND LHS.product_characteristic_value = RHS.product_characteristic_value))
		ORDER BY characteristic_name

	  characteristic_name
	0           amwyscool
	1                 arm
	2                cool
	3           coolET2nA
	4                warm
	5          xC5warmXAP
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0033 (2258)
	EXPECTED OUTPUT ====

		SELECT product_category_description
		FROM ref_product_categories
		WHERE product_category_code = "Spices"

	  product_category_description
	0                        Herbs
	ACTUAL OUTPUT ====

		
		SELECT `product_category_code` AS `product_category_description`
		FROM `ref_product_categories`
		WHERE (`product_category_code` = 'Spices')
		ORDER BY product_category_description

	  product_category_description
	0                       Spices
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0037 (2259)
	EXPECTED OUTPUT ====

		SELECT t1.product_name
		FROM products AS t1
		JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code
		JOIN ref_colors AS t3 ON t1.color_code = t3.color_code
		WHERE t3.color_description = "white"
		  AND t2.unit_of_measure != "Handful"

	  product_name
	0        catni
	1         flax
	ACTUAL OUTPUT ====

		
		SELECT `product_name`
		FROM
		  (SELECT `LHS`.`product_category_code` AS `product_category_code`,
		          `LHS`.`product_category_description` AS `product_category_description`,
		          `LHS`.`unit_of_measure` AS `unit_of_measure`,
		          `LHS`.`product_id` AS `product_id`,
		          `LHS`.`color_code` AS `color_code`,
		          `LHS`.`product_name` AS `product_name`,
		          `LHS`.`typical_buying_price` AS `typical_buying_price`,
		          `LHS`.`typical_selling_price` AS `typical_selling_price`,
		          `LHS`.`product_description` AS `product_description`,
		          `LHS`.`other_product_details` AS `other_product_details`,
		          `RHS`.`color_description` AS `color_description`
		   FROM
		     (SELECT `LHS`.`product_category_code` AS `product_category_code`,
		             `LHS`.`product_category_description` AS `product_category_description`,
		             `LHS`.`unit_of_measure` AS `unit_of_measure`,
		             `RHS`.`product_id` AS `product_id`,
		             `RHS`.`color_code` AS `color_code`,
		             `RHS`.`product_name` AS `product_name`,
		             `RHS`.`typical_buying_price` AS `typical_buying_price`,
		             `RHS`.`typical_selling_price` AS `typical_selling_price`,
		             `RHS`.`product_description` AS `product_description`,
		             `RHS`.`other_product_details` AS `other_product_details`
		      FROM `ref_product_categories` AS `LHS`
		      INNER JOIN `products` AS `RHS` ON (`LHS`.`product_category_code` = `RHS`.`product_category_code`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `ref_colors`
		      WHERE (`color_description` = 'white')) AS RHS ON (LHS.color_code = RHS.color_code))
		ORDER BY product_name

	  product_name
	0   S8A5a6kkdy
	1        catni
	2         flax
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0002 (2260)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM ref_colors

	   count(*)
	0        35
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT LHS.color_code AS color_code,
		             LHS.color_description AS color_description,
		             RHS.color_code AS color_code_other
		      FROM ref_colors AS LHS
		      INNER JOIN ref_colors AS RHS ON (LHS.color_description = RHS.color_description)))
		ORDER BY count___

	   count___
	0       295
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0036 (2261)
	EXPECTED OUTPUT ====

		SELECT t2.unit_of_measure,
		       t2.product_category_code
		FROM products AS t1
		JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code
		WHERE t1.product_name = "chervil"

	              unit_of_measure product_category_code
	0        Weight - pound,kilo.           1lsHerbsagw
	1        Weight - pound,kilo.           8QxupSpices
	2        Weight - pound,kilo.          K2KI6bjnrkAI
	3   uB(TyWeight - pound,kilo.                Spices
	4        Weight - pound,kilo.                Yos6Md
	5        Weight - pound,kilo.                Yos6Md
	6  Tn(Weight - pound,kilo.V(Y                  erbs
	7        Weight - pound,kilo.           qOrHerbsYh)
	ACTUAL OUTPUT ====

		
		SELECT `unit_of_measure`,
		       `product_category_code`
		FROM
		  (SELECT *
		   FROM `ref_product_categories` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `products`
		           WHERE (`product_name` = 'chervil')) AS RHS
		        WHERE (LHS.product_category_code = RHS.product_category_code) ))
		ORDER BY unit_of_measure

	              unit_of_measure product_category_code
	0        Weight - pound,kilo.           1lsHerbsagw
	1        Weight - pound,kilo.           8QxupSpices
	2        Weight - pound,kilo.          K2KI6bjnrkAI
	3   uB(TyWeight - pound,kilo.                Spices
	4        Weight - pound,kilo.                Yos6Md
	5  Tn(Weight - pound,kilo.V(Y                  erbs
	6        Weight - pound,kilo.           qOrHerbsYh)
No solution for instance spider/products_gen_characteristics/0039 (2264)
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0038 (2265)
	EXPECTED OUTPUT ====

		SELECT t2.color_description
		FROM products AS t1
		JOIN ref_colors AS t2 ON t1.color_code = t2.color_code
		GROUP BY t2.color_description
		ORDER BY count(*) DESC
		LIMIT 1

	  color_description
	0              blue
	ACTUAL OUTPUT ====

		
		SELECT color_description
		FROM
		  (SELECT LHS.color_code AS color_code,
		          LHS.color_description AS color_description,
		          LHS.n AS n,
		          RHS.product_category_code AS product_category_code,
		          RHS.product_name AS product_name,
		          RHS.typical_buying_price AS typical_buying_price,
		          RHS.typical_selling_price AS typical_selling_price,
		          RHS.product_description AS product_description,
		          RHS.other_product_details AS other_product_details
		   FROM
		     (SELECT color_code,
		             color_description,
		             COUNT() AS n
		      FROM ref_colors
		      GROUP BY color_code,
		               color_description) AS LHS
		   INNER JOIN products AS RHS ON (LHS.n = RHS.product_id
		                                     AND LHS.color_code = RHS.color_code))
		ORDER BY color_description

	Empty DataFrame
	Columns: [color_description]
	Index: []
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0003 (2266)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM CHARACTERISTICS

	   count(*)
	0        17
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT characteristic_data_type,
		          COUNT() AS n
		   FROM characteristics
		   GROUP BY characteristic_data_type)
		ORDER BY count___

	   count___
	0         9
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0030 (2269)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM products AS t1
		JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id
		JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id
		JOIN ref_colors AS t4 ON t1.color_code = t4.color_code
		WHERE t4.color_description = "red"
		  AND t3.characteristic_name = "slow"

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `characteristic_name`) AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`product_id` AS `product_id`,
		             `LHS`.`color_code` AS `color_code`,
		             `LHS`.`product_category_code` AS `product_category_code`,
		             `LHS`.`product_name` AS `product_name`,
		             `LHS`.`typical_buying_price` AS `typical_buying_price`,
		             `LHS`.`typical_selling_price` AS `typical_selling_price`,
		             `LHS`.`product_description` AS `product_description`,
		             `LHS`.`other_product_details` AS `other_product_details`,
		             `LHS`.`characteristic_id` AS `characteristic_id`,
		             `LHS`.`product_characteristic_value` AS `product_characteristic_value`,
		             `RHS`.`color_description` AS `color_description`,
		             `RHS`.`characteristic_type_code` AS `characteristic_type_code`,
		             `RHS`.`characteristic_data_type` AS `characteristic_data_type`,
		             `RHS`.`characteristic_name` AS `characteristic_name`,
		             `RHS`.`other_characteristic_details` AS `other_characteristic_details`
		      FROM
		        (SELECT `LHS`.`product_id` AS `product_id`,
		                `LHS`.`color_code` AS `color_code`,
		                `LHS`.`product_category_code` AS `product_category_code`,
		                `LHS`.`product_name` AS `product_name`,
		                `LHS`.`typical_buying_price` AS `typical_buying_price`,
		                `LHS`.`typical_selling_price` AS `typical_selling_price`,
		                `LHS`.`product_description` AS `product_description`,
		                `LHS`.`other_product_details` AS `other_product_details`,
		                `RHS`.`characteristic_id` AS `characteristic_id`,
		                `RHS`.`product_characteristic_value` AS `product_characteristic_value`
		         FROM `products` AS `LHS`
		         INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`product_id` = `RHS`.`product_id`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM
		           (SELECT `LHS`.`color_code` AS `color_code`,
		                   `LHS`.`color_description` AS `color_description`,
		                   `RHS`.`characteristic_id` AS `characteristic_id`,
		                   `RHS`.`characteristic_type_code` AS `characteristic_type_code`,
		                   `RHS`.`characteristic_data_type` AS `characteristic_data_type`,
		                   `RHS`.`characteristic_name` AS `characteristic_name`,
		                   `RHS`.`other_characteristic_details` AS `other_characteristic_details`
		            FROM `ref_colors` AS `LHS`
		            CROSS JOIN `characteristics` AS `RHS`)
		         WHERE (`color_description` = 'red'
		                AND `characteristic_name` = 'slow')) AS RHS ON (LHS.color_code = RHS.color_code
		                                                                AND LHS.characteristic_id = RHS.characteristic_id)))
		ORDER BY count___

	   count___
	0         1
Wrong output for base solution in instance spider/products_gen_characteristics/0004 (2272)
	EXPECTED OUTPUT ====

	   product_name typical_buying_price
	0         basil          503.8431967
	1        borage                  NaN
	2       caraway                24493
	3        catnip         12008702.623
	4       chervil                  NaN
	5         chili                  NaN
	6        cinnam            1686539.4
	7         cumin                  NaN
	8          flax          339404395.7
	9        ginger                5.578
	10       laurel                  NaN
	11        lotus      43221310.465574
	12        peper       352447.2874677
	13       sesame         1284268.0659
	14   voluptatem                  162
	ACTUAL OUTPUT ====

		SELECT product_name,
		       typical_buying_price
		FROM products

	   product_name typical_buying_price
	0         basil          503.8431967
	1        borage                     
	2       caraway                24493
	3        catnip         12008702.623
	4       chervil                     
	5         chili                     
	6        cinnam            1686539.4
	7         cumin                     
	8          flax          339404395.7
	9        ginger                5.578
	10       laurel                     
	11        lotus      43221310.465574
	12        peper       352447.2874677
	13       sesame         1284268.0659
	14   voluptatem                  162
Wrong output for ground truth in instance spider/products_gen_characteristics/0004 (2272)
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0035 (2281)
	EXPECTED OUTPUT ====

		SELECT t2.unit_of_measure
		FROM products AS t1
		JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code
		WHERE t1.product_name = "cumin"

	             unit_of_measure
	0        Weight - pound,kilo
	1       Weight - pound,kilo.
	2  jy6606RSxJqwVR6QCPPrRRy0w
	3  jy6606RSxJqwVR6QCPPrRRy0w
	ACTUAL OUTPUT ====

		
		SELECT `unit_of_measure`
		FROM
		  (SELECT *
		   FROM `ref_product_categories` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `products`
		           WHERE (`product_name` = 'cumin')) AS RHS
		        WHERE (LHS.product_category_code = RHS.product_category_code) ))
		ORDER BY unit_of_measure

	             unit_of_measure
	0        Weight - pound,kilo
	1       Weight - pound,kilo.
	2  jy6606RSxJqwVR6QCPPrRRy0w
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0020 (2282)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM products AS t1
		JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id
		WHERE t1.product_name = "sesame"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT *
		   FROM `product_characteristics` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `products`
		           WHERE (`product_name` != 'sesame')) AS RHS
		        WHERE (LHS.product_id = RHS.product_id) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for base solution in instance spider/products_gen_characteristics/0019 (2283)
	EXPECTED OUTPUT ====

	  product_name typical_buying_price typical_selling_price
	0       borage                  NaN       10377614.847385
	ACTUAL OUTPUT ====

		SELECT t1.product_name,
		       t1.typical_buying_price,
		       t1.typical_selling_price
		FROM products AS t1
		JOIN ref_colors AS t2 ON t1.color_code = t2.color_code
		WHERE t2.color_description = "yellow"

	  product_name typical_buying_price typical_selling_price
	0       borage                            10377614.847385
Wrong output for ground truth in instance spider/products_gen_characteristics/0019 (2283)
Error while executing solution for instance spider/products_gen_characteristics/0034 (2285)

(sqlite3.OperationalError) near "Traceback": syntax error
[SQL: 
SELECT `product_category_code` AS `product_category_description`,
       `unit_of_measure`
FROM `ref_product_categories`
WHERE (`product_category_code` = 'Herbs')
ORDER BY product_category_description
Traceback (most recent call last):
  File "./cubes.py", line 166, in <module>
    main()
  File "./cubes.py", line 134, in main
    for program, loc, optimal in synthesizer.synthesize(top_n=util.get_config().top_programs, enum_all=util.get_config().enum_until is not None):
  File "/home/rmbb/CUBES/squares/parallel_synthesizer.py", line 251, in synthesize
    poll.modify(fd, select.EPOLLIN | select.EPOLLOUT)
FileNotFoundError: [Errno 2] No such file or directory]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0021 (2287)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT t3.characteristic_name)
		FROM products AS t1
		JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id
		JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id
		WHERE t1.product_name = "sesame"

	   count(distinct t3.characteristic_name)
	0                                       0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count_distinct_t3_characteristic_name_`
		FROM
		  (SELECT `product_name`,
		          COUNT(DISTINCT `characteristic_name`) AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,
		             `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		             `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		             `LHS`.`characteristic_name` AS `characteristic_name`,
		             `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		             `LHS`.`product_id` AS `product_id`,
		             `LHS`.`color_code` AS `color_code`,
		             `LHS`.`product_category_code` AS `product_category_code`,
		             `LHS`.`product_name` AS `product_name`,
		             `LHS`.`typical_buying_price` AS `typical_buying_price`,
		             `LHS`.`typical_selling_price` AS `typical_selling_price`,
		             `LHS`.`product_description` AS `product_description`,
		             `LHS`.`other_product_details` AS `other_product_details`,
		             `RHS`.`product_characteristic_value` AS `product_characteristic_value`
		      FROM
		        (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,
		                `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		                `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		                `LHS`.`characteristic_name` AS `characteristic_name`,
		                `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		                `RHS`.`product_id` AS `product_id`,
		                `RHS`.`color_code` AS `color_code`,
		                `RHS`.`product_category_code` AS `product_category_code`,
		                `RHS`.`product_name` AS `product_name`,
		                `RHS`.`typical_buying_price` AS `typical_buying_price`,
		                `RHS`.`typical_selling_price` AS `typical_selling_price`,
		                `RHS`.`product_description` AS `product_description`,
		                `RHS`.`other_product_details` AS `other_product_details`
		         FROM `characteristics` AS `LHS`
		         CROSS JOIN `products` AS `RHS`) AS `LHS`
		      INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`
		                                                           AND `LHS`.`product_id` = `RHS`.`product_id`))
		   GROUP BY `product_name`)
		WHERE (`product_name` = 'sesame')
		ORDER BY count_distinct_t3_characteristic_name_

	Empty DataFrame
	Columns: [count_distinct_t3_characteristic_name_]
	Index: []
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0023 (2288)
	EXPECTED OUTPUT ====

		SELECT t3.characteristic_name,
		       t3.characteristic_data_type
		FROM products AS t1
		JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id
		JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id
		WHERE t1.product_name = "cumin"

	   characteristic_name characteristic_data_type
	0                  slo              Bqnvelit4yC
	1                 fast               JYiquamyFl
	2                 cool               K TDOvelit
	3                 cool               K TDOvelit
	4                 cool               K TDOvelit
	..                 ...                      ...
	58                fast                    velit
	59                fast                    velit
	60                fast                    velit
	61                 ool                    velit
	62                 ool                    velit
	
	[63 rows x 2 columns]
	ACTUAL OUTPUT ====

		
		SELECT `characteristic_name`,
		       `characteristic_data_type`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,
		                `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		                `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		                `LHS`.`characteristic_name` AS `characteristic_name`,
		                `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		                `RHS`.`product_id` AS `product_id`,
		                `RHS`.`color_code` AS `color_code`,
		                `RHS`.`product_category_code` AS `product_category_code`,
		                `RHS`.`product_name` AS `product_name`,
		                `RHS`.`typical_buying_price` AS `typical_buying_price`,
		                `RHS`.`typical_selling_price` AS `typical_selling_price`,
		                `RHS`.`product_description` AS `product_description`,
		                `RHS`.`other_product_details` AS `other_product_details`
		         FROM `characteristics` AS `LHS`
		         CROSS JOIN `products` AS `RHS`)
		      WHERE (`product_name` = 'cumin')) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM product_characteristics AS RHS
		        WHERE (LHS.characteristic_id = RHS.characteristic_id
		               AND LHS.product_id = RHS.product_id) ))
		ORDER BY characteristic_name

	   characteristic_name characteristic_data_type
	0                  slo              Bqnvelit4yC
	1                 fast               JYiquamyFl
	2                 cool               K TDOvelit
	3                 cool               K TDOvelit
	4                 cool               K TDOvelit
	5                 cool               K TDOvelit
	6                 fast               Q9 quamLlw
	7                 fast               Q9 quamLlw
	8                 slow              YgnvelitA33
	9                 cool                  impedit
	10                cool                  impedit
	11                cool                  impedit
	12                fast                  impedit
	13                fast                  impedit
	14                fast                  impedit
	15                fast                  impedit
	16                slow                  impedit
	17                slow                  impedit
	18                slow                  impedit
	19                slow             impeditbpHX5
	20                slow             impeditbpHX5
	21                slow             impeditbpHX5
	22                cool                     quam
	23                cool                     quam
	24                cool                     quam
	25                 ast                quamklTL9
	26                 ast                quamklTL9
	27                 ast                quamklTL9
	28                 ast                quamklTL9
	29                fast                      qui
	30                fast                      qui
	31           slow5h0BW                      uam
	32           slow5h0BW                      uam
	33           slow5h0BW                      uam
	34           slow5h0BW                      uam
	35                 ast                    velit
	36                fast                    velit
	37                fast                    velit
	38                 ool                    velit
	39                 ool                    velit
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0001 (2289)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM products

	   count(*)
	0        16
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT product_name,
		          COUNT() AS n
		   FROM products
		   GROUP BY product_name)
		ORDER BY count___

	   count___
	0         8
No solution for instance spider/products_gen_characteristics/0014 (2291)
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0009 (2292)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM products
		WHERE product_category_code = "Seeds"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `products`
		WHERE (`product_category_code` = 'Seeds')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for base solution in instance spider/products_gen_characteristics/0011 (2294)
	EXPECTED OUTPUT ====

	  product_category_code typical_buying_price
	0                Spices                  NaN
	ACTUAL OUTPUT ====

		SELECT product_category_code,
		       typical_buying_price
		FROM products
		WHERE product_name = "cumin"

	  product_category_code typical_buying_price
	0                Spices                     
Wrong output for ground truth in instance spider/products_gen_characteristics/0011 (2294)
Error while executing solution for instance spider/products_gen_characteristics/0010 (2296)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `product_category_code`) OVER () AS `count___`
FROM
  (SELECT `color_code`,
          `product_category_code`,
          COUNT() AS `n`
   FROM `products`
   GROUP BY `color_code`,
            `product_category_code`)
WHERE (`product_category_code` != 'Spices'
       AND n < 1000)
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0040 (2297)
	EXPECTED OUTPUT ====

		SELECT t3.characteristic_name
		FROM products AS t1
		JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id
		JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id
		GROUP BY t3.characteristic_name
		ORDER BY count(*) DESC
		LIMIT 1

	  characteristic_name
	0                fast
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT characteristic_name
		FROM
		  (SELECT LHS.characteristic_name AS characteristic_name,
		          LHS.product_description AS product_description,
		          LHS.n AS n,
		          RHS.characteristic_id AS characteristic_id,
		          RHS.characteristic_type_code AS characteristic_type_code,
		          RHS.other_characteristic_details AS other_characteristic_details,
		          RHS.product_id AS product_id,
		          RHS.color_code AS color_code,
		          RHS.product_category_code AS product_category_code,
		          RHS.product_name AS product_name,
		          RHS.typical_buying_price AS typical_buying_price,
		          RHS.typical_selling_price AS typical_selling_price,
		          RHS.product_description AS product_description_other,
		          RHS.other_product_details AS other_product_details,
		          RHS.product_characteristic_value AS product_characteristic_value
		   FROM
		     (SELECT characteristic_name,
		             product_description,
		             COUNT() AS n
		      FROM
		        (SELECT LHS.characteristic_id AS characteristic_id,
		                LHS.characteristic_type_code AS characteristic_type_code,
		                LHS.characteristic_data_type AS characteristic_data_type,
		                LHS.characteristic_name AS characteristic_name,
		                LHS.other_characteristic_details AS other_characteristic_details,
		                LHS.product_id AS product_id,
		                LHS.color_code AS color_code,
		                LHS.product_category_code AS product_category_code,
		                LHS.product_name AS product_name,
		                LHS.typical_buying_price AS typical_buying_price,
		                LHS.typical_selling_price AS typical_selling_price,
		                LHS.product_description AS product_description,
		                LHS.other_product_details AS other_product_details,
		                RHS.product_characteristic_value AS product_characteristic_value
		         FROM
		           (SELECT LHS.characteristic_id AS characteristic_id,
		                   LHS.characteristic_type_code AS characteristic_type_code,
		                   LHS.characteristic_data_type AS characteristic_data_type,
		                   LHS.characteristic_name AS characteristic_name,
		                   LHS.other_characteristic_details AS other_characteristic_details,
		                   RHS.product_id AS product_id,
		                   RHS.color_code AS color_code,
		                   RHS.product_category_code AS product_category_code,
		                   RHS.product_name AS product_name,
		                   RHS.typical_buying_price AS typical_buying_price,
		                   RHS.typical_selling_price AS typical_selling_price,
		                   RHS.product_description AS product_description,
		                   RHS.other_product_details AS other_product_details
		            FROM characteristics AS LHS
		            CROSS JOIN products AS RHS) AS LHS
		         INNER JOIN product_characteristics AS RHS ON (LHS.characteristic_id = RHS.characteristic_id
		                                                          AND LHS.product_id = RHS.product_id))
		      GROUP BY characteristic_name,
		               product_description) AS LHS
		   INNER JOIN
		     (SELECT LHS.characteristic_id AS characteristic_id,
		             LHS.characteristic_type_code AS characteristic_type_code,
		             LHS.characteristic_data_type AS characteristic_data_type,
		             LHS.characteristic_name AS characteristic_name,
		             LHS.other_characteristic_details AS other_characteristic_details,
		             LHS.product_id AS product_id,
		             LHS.color_code AS color_code,
		             LHS.product_category_code AS product_category_code,
		             LHS.product_name AS product_name,
		             LHS.typical_buying_price AS typical_buying_price,
		             LHS.typical_selling_price AS typical_selling_price,
		             LHS.product_description AS product_description,
		             LHS.other_product_details AS other_product_details,
		             RHS.product_characteristic_value AS product_characteristic_value
		      FROM
		        (SELECT LHS.characteristic_id AS characteristic_id,
		                LHS.characteristic_type_code AS characteristic_type_code,
		                LHS.characteristic_data_type AS characteristic_data_type,
		                LHS.characteristic_name AS characteristic_name,
		                LHS.other_characteristic_details AS other_characteristic_details,
		                RHS.product_id AS product_id,
		                RHS.color_code AS color_code,
		                RHS.product_category_code AS product_category_code,
		                RHS.product_name AS product_name,
		                RHS.typical_buying_price AS typical_buying_price,
		                RHS.typical_selling_price AS typical_selling_price,
		                RHS.product_description AS product_description,
		                RHS.other_product_details AS other_product_details
		         FROM characteristics AS LHS
		         CROSS JOIN products AS RHS) AS LHS
		      INNER JOIN product_characteristics AS RHS ON (LHS.characteristic_id = RHS.characteristic_id
		                                                       AND LHS.product_id = RHS.product_id)) AS RHS ON (LHS.characteristic_name = RHS.characteristic_name
		                                                                                                        AND LHS.product_description = RHS.characteristic_data_type))
		ORDER BY characteristic_name

	Empty DataFrame
	Columns: [characteristic_name]
	Index: []
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0028 (2298)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM products AS t1
		JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id
		JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id
		WHERE t3.characteristic_name = "hot"

	   count(*)
	0        40
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT `characteristic_name`,
		          `other_product_details`,
		          COUNT(DISTINCT `characteristic_name`) AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,
		             `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		             `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		             `LHS`.`characteristic_name` AS `characteristic_name`,
		             `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		             `LHS`.`product_id` AS `product_id`,
		             `LHS`.`color_code` AS `color_code`,
		             `LHS`.`product_category_code` AS `product_category_code`,
		             `LHS`.`product_name` AS `product_name`,
		             `LHS`.`typical_buying_price` AS `typical_buying_price`,
		             `LHS`.`typical_selling_price` AS `typical_selling_price`,
		             `LHS`.`product_description` AS `product_description`,
		             `LHS`.`other_product_details` AS `other_product_details`,
		             `RHS`.`product_characteristic_value` AS `product_characteristic_value`
		      FROM
		        (SELECT `LHS`.`characteristic_id` AS `characteristic_id`,
		                `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		                `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		                `LHS`.`characteristic_name` AS `characteristic_name`,
		                `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		                `RHS`.`product_id` AS `product_id`,
		                `RHS`.`color_code` AS `color_code`,
		                `RHS`.`product_category_code` AS `product_category_code`,
		                `RHS`.`product_name` AS `product_name`,
		                `RHS`.`typical_buying_price` AS `typical_buying_price`,
		                `RHS`.`typical_selling_price` AS `typical_selling_price`,
		                `RHS`.`product_description` AS `product_description`,
		                `RHS`.`other_product_details` AS `other_product_details`
		         FROM `characteristics` AS `LHS`
		         CROSS JOIN `products` AS `RHS`) AS `LHS`
		      INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`
		                                                           AND `LHS`.`product_id` = `RHS`.`product_id`))
		   GROUP BY `characteristic_name`,
		            `other_product_details`)
		WHERE (`characteristic_name` = 'hot')
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
	3         1
	4         1
	5         1
	6         1
	7         1
	8         1
Wrong output for fuzzied solution in instance spider/products_gen_characteristics/0031 (2299)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM products AS t1
		JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id
		JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id
		JOIN ref_colors AS t4 ON t1.color_code = t4.color_code
		WHERE t4.color_description = "white"
		  OR t3.characteristic_name = "hot"

	   count(*)
	0        68
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT `product_category_code`,
		          COUNT(DISTINCT `characteristic_name`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`color_code` AS `color_code`,
		                `LHS`.`color_description` AS `color_description`,
		                `LHS`.`characteristic_id` AS `characteristic_id`,
		                `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		                `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		                `LHS`.`characteristic_name` AS `characteristic_name`,
		                `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		                `LHS`.`product_id` AS `product_id`,
		                `LHS`.`product_category_code` AS `product_category_code`,
		                `LHS`.`product_name` AS `product_name`,
		                `LHS`.`typical_buying_price` AS `typical_buying_price`,
		                `LHS`.`typical_selling_price` AS `typical_selling_price`,
		                `LHS`.`product_description` AS `product_description`,
		                `LHS`.`other_product_details` AS `other_product_details`,
		                `RHS`.`product_characteristic_value` AS `product_characteristic_value`
		         FROM
		           (SELECT `LHS`.`color_code` AS `color_code`,
		                   `LHS`.`color_description` AS `color_description`,
		                   `LHS`.`characteristic_id` AS `characteristic_id`,
		                   `LHS`.`characteristic_type_code` AS `characteristic_type_code`,
		                   `LHS`.`characteristic_data_type` AS `characteristic_data_type`,
		                   `LHS`.`characteristic_name` AS `characteristic_name`,
		                   `LHS`.`other_characteristic_details` AS `other_characteristic_details`,
		                   `RHS`.`product_id` AS `product_id`,
		                   `RHS`.`product_category_code` AS `product_category_code`,
		                   `RHS`.`product_name` AS `product_name`,
		                   `RHS`.`typical_buying_price` AS `typical_buying_price`,
		                   `RHS`.`typical_selling_price` AS `typical_selling_price`,
		                   `RHS`.`product_description` AS `product_description`,
		                   `RHS`.`other_product_details` AS `other_product_details`
		            FROM
		              (SELECT `LHS`.`color_code` AS `color_code`,
		                      `LHS`.`color_description` AS `color_description`,
		                      `RHS`.`characteristic_id` AS `characteristic_id`,
		                      `RHS`.`characteristic_type_code` AS `characteristic_type_code`,
		                      `RHS`.`characteristic_data_type` AS `characteristic_data_type`,
		                      `RHS`.`characteristic_name` AS `characteristic_name`,
		                      `RHS`.`other_characteristic_details` AS `other_characteristic_details`
		               FROM `ref_colors` AS `LHS`
		               CROSS JOIN `characteristics` AS `RHS`) AS `LHS`
		            INNER JOIN `products` AS `RHS` ON (`LHS`.`color_code` = `RHS`.`color_code`)) AS `LHS`
		         INNER JOIN `product_characteristics` AS `RHS` ON (`LHS`.`characteristic_id` = `RHS`.`characteristic_id`
		                                                              AND `LHS`.`product_id` = `RHS`.`product_id`))
		      WHERE (`color_description` != 'white'
		             AND `characteristic_name` = 'hot'))
		   GROUP BY product_category_code)
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
	3         1
	4         1
	5         1
No solution for instance spider/school_bus/0017 (2301)
Wrong output for fuzzied solution in instance spider/school_bus/0008 (2302)
	EXPECTED OUTPUT ====

		SELECT home_city
		FROM driver
		WHERE age > 40
		GROUP BY home_city
		HAVING count(*) >= 2

	  home_city
	0  Hartford
	ACTUAL OUTPUT ====

		
		SELECT home_city
		FROM driver
		WHERE (age = 40
		       OR age <= 2)
		ORDER BY home_city

	Empty DataFrame
	Columns: [home_city]
	Index: []
No solution for instance spider/school_bus/0003 (2303)
Wrong output for fuzzied solution in instance spider/school_bus/0006 (2305)
	EXPECTED OUTPUT ====

		SELECT home_city
		FROM driver
		GROUP BY home_city
		ORDER BY count(*) DESC
		LIMIT 1

	  home_city
	0   Hartfor
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT home_city
		FROM
		  (SELECT LHS.driver_id AS driver_id,
		          LHS.name AS name,
		          LHS.party AS party,
		          LHS.home_city AS home_city,
		          LHS.age AS age,
		          RHS.age AS age_other,
		          RHS.name AS name_other
		   FROM driver AS LHS
		   INNER JOIN
		     (SELECT age,
		             name,
		             COUNT() AS n
		      FROM driver
		      GROUP BY age,
		               name) AS RHS ON (LHS.driver_id = RHS.n))
		ORDER BY home_city

	Empty DataFrame
	Columns: [home_city]
	Index: []
Wrong output for fuzzied solution in instance spider/school_bus/0015 (2308)
	EXPECTED OUTPUT ====

		SELECT T2.type,
		       count(*)
		FROM school_bus AS T1
		JOIN school AS T2 ON T1.school_id = T2.school_id
		GROUP BY T2.type

	               type  count(*)
	0   Private Catholi         3
	1  Private Catholic         3
	2      iYlPublicZMY         3
	3             ublic         4
	4            Public        10
	ACTUAL OUTPUT ====

		
		SELECT TYPE,
		       n AS count___
		FROM
		  (SELECT TYPE,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM school AS LHS
		      WHERE EXISTS
		          (SELECT 1
		           FROM school_bus AS RHS
		           WHERE (LHS.school_id = RHS.school_id) ))
		   GROUP BY TYPE)
		ORDER BY TYPE

	               type  count___
	0   Private Catholi         1
	1  Private Catholic         1
	2            Public         4
	3      iYlPublicZMY         1
	4             ublic         1
Wrong output for fuzzied solution in instance spider/school_bus/0016 (2310)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM driver
		WHERE home_city = 'Hartford'
		  OR age < 40

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `driver`
		WHERE (`home_city` != 'Hartford'
		       OR age >= 40)
		ORDER BY count___

	   count___
	0         7
Wrong output for fuzzied solution in instance spider/school_bus/0018 (2311)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM driver AS t1
		JOIN school_bus AS t2 ON t1.driver_id = t2.driver_id
		ORDER BY years_working DESC
		LIMIT 1

	                name
	0  so3Jason RojasBuB
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.driver_id AS driver_id,
		                LHS.name AS name,
		                LHS.party AS party,
		                LHS.home_city AS home_city,
		                LHS.age AS age,
		                RHS.school_id AS school_id,
		                RHS.years_working AS years_working,
		                RHS.if_full_time AS if_full_time
		         FROM driver AS LHS
		         INNER JOIN school_bus AS RHS ON (LHS.driver_id = RHS.driver_id))
		      ORDER BY driver_id DESC)
		   LIMIT 1)

	          name
	0  Jason Rojas
Wrong output for fuzzied solution in instance spider/school_bus/0009 (2315)
	EXPECTED OUTPUT ====

		SELECT home_city
		FROM driver
		EXCEPT
		SELECT home_city
		FROM driver
		WHERE age > 40

	            home_city
	0      )3(HartfordWdg
	1  XtRRGEast Hartford
	2       oq0lsCoventry
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT home_city
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.driver_id AS driver_id,
		                LHS.name AS name,
		                LHS.party AS party,
		                LHS.home_city AS home_city,
		                LHS.age AS age,
		                RHS.driver_id AS driver_id_other,
		                RHS.name AS name_other,
		                RHS.party AS party_other,
		                RHS.home_city AS home_city_other,
		                RHS.age AS age_other
		         FROM driver AS LHS
		         CROSS JOIN driver AS RHS)
		      WHERE (age < age_other)) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM driver
		           WHERE (age >= 40)) AS RHS
		        WHERE (LHS.home_city = RHS.home_city) ))
		ORDER BY home_city

	        home_city
	0  )3(HartfordWdg
Wrong output for fuzzied solution in instance spider/flight_4/0033 (2318)
	EXPECTED OUTPUT ====

		SELECT T1.country,
		       T1.name,
		       count(*)
		FROM airlines AS T1
		JOIN routes AS T2 ON T1.alid = T2.alid
		GROUP BY T1.country,
		         T1.name

	                               country                                               name  count(*)
	0                0cT5KGgVSJm4LMacfZIC5                                  Afriqiyah Airways         1
	1                 6GpUnited Kingdom7P9    National Oceanic and Atmospheric Administration         1
	2             Aplb2KWe3r3EGocAve17)dpl                              Aero Premier De Mexic         1
	3         Democratic Republic of Congo                             Aero Premier De Mexico         1
	4         Democratic Republic of Congo    National Oceanic and Atmospheric Administration         1
	5    Democratic Republic of Congo7S36b            United Kingdom Civil Aviation Authority         1
	6                                Egypt                                           Avio Nor         1
	7                                Egypt  IGHUDNational Oceanic and Atmospheric Administ...         1
	8                                Egypt                              ero Premier De Mexico         1
	9                                Egypt   pYyIZWaJaJLqhKkEDmmHzk06wHXD9C1P9PWfABFfGn901juk         1
	10                FenUnited KingdomYgN                             Afriqiyah AirwayseZwlv         1
	11                 HcL9TUnited Kingdom                                          Avio Nord         1
	12                             Nigeria                              Aero Premier De Mexic         1
	13                             Nigeria                        QX2IwAero Premier De Mexico         1
	14                       United Kingdo             United Kingdom Civil Aviation Authorit         1
	15                      United Kingdom      0iuUnited Kingdom Civil Aviation AuthorityCuj         1
	16                      United Kingdom                                  HvuOJnrvRZlTWH6b3         1
	17                      United Kingdom                                    Uv5Avio Nord51v         1
	18                      United Kingdom                      g2T5ucA0VZNCz7k59kN4U5i(5)X3V         1
	19                      United Kingdom                                     pggP1fzp1V6thO         1
	20                      United Kingdom                                           vio Nord         1
	21                eT5United KingdomORd                             26 omAfriqiyah Airways         1
	22          fNTZQUZ(ggpCfACXVQsuoEz06n            United Kingdom Civil Aviation Authority         1
	23  p94Democratic Republic of CongoWNp                        Aero Premier De MexicoeIvaq         1
	24                  s3(R1wKnU8Erfkv)a                                      Avio NordY2abV         1
	25                              1Djpw6                             Aero Premier De Mexico         2
	26           Ho9adKx0qMDpmH8BK0GZZTo8y      gzVUnited Kingdom Civil Aviation Authorityvz3         2
	27                      QsNcQIeU0U(b(H                                          Avio Nord         2
	28                      United Kingdom                                   Afriqiyah Airway         2
	29                      United Kingdom                              ero Premier De Mexico         2
	30                      United Kingdom             nited Kingdom Civil Aviation Authority         2
	31                                gypt                       dUgWpMnTJd29d9Fs)TDJ)LS5WPeG         2
	32                              igeria                        Aero Premier De Mexico9yCLN         2
	33                        pEx1DNigeria  I3XhHNational Oceanic and Atmospheric Administ...         2
	34                                Egyp                                  Afriqiyah Airways         3
	35                                Egyp             United Kingdom Civil Aviation Authorit         3
	36                              Nigeri                                          Avio Nord         3
	37                             Nigeria            United Kingdom Civil Aviation Authority         3
	38        bf9rTisC1inVFoT0 inrRMcb4A(i     ational Oceanic and Atmospheric Administration         3
	39                       2E31Is)dgSxi5             nited Kingdom Civil Aviation Authority         4
	40        Democratic Republic of Congo     ational Oceanic and Atmospheric Administration         4
	ACTUAL OUTPUT ====

		
		SELECT country,
		       name,
		       n AS count___
		FROM
		  (SELECT LHS.alid AS alid,
		          LHS.name AS name,
		          LHS.iata AS iata,
		          LHS.icao AS icao,
		          LHS.callsign AS callsign,
		          LHS.country AS country,
		          LHS.active AS active,
		          RHS.n AS n
		   FROM airlines AS LHS
		   INNER JOIN
		     (SELECT alid,
		             COUNT() AS n
		      FROM routes
		      GROUP BY alid) AS RHS ON (LHS.alid = RHS.alid))
		ORDER BY country

	                               country                                               name  count___
	0                0cT5KGgVSJm4LMacfZIC5                                  Afriqiyah Airways         1
	1                 6GpUnited Kingdom7P9    National Oceanic and Atmospheric Administration         1
	2             Aplb2KWe3r3EGocAve17)dpl                              Aero Premier De Mexic         1
	3         Democratic Republic of Congo                             Aero Premier De Mexico         1
	4         Democratic Republic of Congo    National Oceanic and Atmospheric Administration         1
	5    Democratic Republic of Congo7S36b            United Kingdom Civil Aviation Authority         1
	6                                Egypt                                           Avio Nor         1
	7                                Egypt  IGHUDNational Oceanic and Atmospheric Administ...         1
	8                                Egypt                              ero Premier De Mexico         1
	9                                Egypt   pYyIZWaJaJLqhKkEDmmHzk06wHXD9C1P9PWfABFfGn901juk         1
	10                FenUnited KingdomYgN                             Afriqiyah AirwayseZwlv         1
	11                 HcL9TUnited Kingdom                                          Avio Nord         1
	12                             Nigeria                              Aero Premier De Mexic         1
	13                             Nigeria                        QX2IwAero Premier De Mexico         1
	14                       United Kingdo             United Kingdom Civil Aviation Authorit         1
	15                      United Kingdom      0iuUnited Kingdom Civil Aviation AuthorityCuj         1
	16                      United Kingdom                                   Afriqiyah Airway         1
	17                      United Kingdom                                   Afriqiyah Airway         1
	18                      United Kingdom                                  HvuOJnrvRZlTWH6b3         1
	19                      United Kingdom                                    Uv5Avio Nord51v         1
	20                      United Kingdom                      g2T5ucA0VZNCz7k59kN4U5i(5)X3V         1
	21                      United Kingdom             nited Kingdom Civil Aviation Authority         1
	22                      United Kingdom             nited Kingdom Civil Aviation Authority         1
	23                      United Kingdom                                     pggP1fzp1V6thO         1
	24                      United Kingdom                                           vio Nord         1
	25                eT5United KingdomORd                             26 omAfriqiyah Airways         1
	26          fNTZQUZ(ggpCfACXVQsuoEz06n            United Kingdom Civil Aviation Authority         1
	27  p94Democratic Republic of CongoWNp                        Aero Premier De MexicoeIvaq         1
	28                  s3(R1wKnU8Erfkv)a                                      Avio NordY2abV         1
	29                              1Djpw6                             Aero Premier De Mexico         2
	30           Ho9adKx0qMDpmH8BK0GZZTo8y      gzVUnited Kingdom Civil Aviation Authorityvz3         2
	31                      QsNcQIeU0U(b(H                                          Avio Nord         2
	32                      United Kingdom                              ero Premier De Mexico         2
	33                                gypt                       dUgWpMnTJd29d9Fs)TDJ)LS5WPeG         2
	34                              igeria                        Aero Premier De Mexico9yCLN         2
	35                        pEx1DNigeria  I3XhHNational Oceanic and Atmospheric Administ...         2
	36                                Egyp                                  Afriqiyah Airways         3
	37                                Egyp             United Kingdom Civil Aviation Authorit         3
	38                              Nigeri                                          Avio Nord         3
	39                             Nigeria            United Kingdom Civil Aviation Authority         3
	40        bf9rTisC1inVFoT0 inrRMcb4A(i     ational Oceanic and Atmospheric Administration         3
	41                       2E31Is)dgSxi5             nited Kingdom Civil Aviation Authority         4
	42        Democratic Republic of Congo     ational Oceanic and Atmospheric Administration         4
No solution for instance spider/flight_4/0037 (2319)
No solution for instance spider/flight_4/0036 (2321)
No solution for instance spider/flight_4/0017 (2322)
Wrong output for fuzzied solution in instance spider/flight_4/0008 (2323)
	EXPECTED OUTPUT ====

		SELECT name
		FROM airports
		WHERE elevation BETWEEN -50 AND 50

	                                  name
	0   (Z)YbChan Gurney Municipal Airport
	1            Hotel Transamérica Airpor
	2            Hotel Transamérica Airpor
	3           Hotel Transamérica Airport
	4                 IlHuLMalacca Airport
	5                 JeK7FMalacca Airport
	6                      Malacca Airport
	7                      Malacca Airport
	8                       alacca Airport
	9                       alacca Airport
	10              r)KYcShun Tak Heliport
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.apid AS apid,
		          LHS.name AS name,
		          LHS.city AS city,
		          LHS.country AS country,
		          LHS.x AS x,
		          LHS.y AS y,
		          LHS.elevation AS elevation,
		          LHS.iata AS iata,
		          LHS.icao AS icao,
		          RHS.apid AS apid_other,
		          RHS.name AS name_other,
		          RHS.city AS city_other,
		          RHS.x AS x_other,
		          RHS.elevation AS elevation_other,
		          RHS.iata AS iata_other,
		          RHS.icao AS icao_other
		   FROM airports AS LHS
		   INNER JOIN airports AS RHS ON (LHS.country = RHS.country
		                                     AND LHS.y = RHS.y))
		WHERE (elevation >= -50
		       AND elevation <= 50)
		ORDER BY name

	                                  name
	0   (Z)YbChan Gurney Municipal Airport
	1            Hotel Transamérica Airpor
	2            Hotel Transamérica Airpor
	3           Hotel Transamérica Airport
	4                 IlHuLMalacca Airport
	5                 JeK7FMalacca Airport
	6                      Malacca Airport
	7                      Malacca Airport
	8                      Malacca Airport
	9                      Malacca Airport
	10                      alacca Airport
	11                      alacca Airport
	12              r)KYcShun Tak Heliport
No solution for instance spider/flight_4/0039 (2324)
No solution for instance spider/flight_4/0038 (2325)
Wrong output for base solution in instance spider/flight_4/0027 (2327)
	EXPECTED OUTPUT ====

	              city  count___
	0         Aberdeen         3
	1          Abilene         2
	2        Abu Dhabi         3
	3            Adana         2
	4      Addis Ababa         2
	..             ...       ...
	434        Yaounde         2
	435  Yekaterinburg         2
	436        Yerevan         2
	437       Zhytomyr         2
	438            NaN        44
	
	[439 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT city,
		       count(*)
		FROM airports
		GROUP BY city
		HAVING count(*) > 1

	              city  count(*)
	0                         44
	1         Aberdeen         3
	2          Abilene         2
	3        Abu Dhabi         3
	4            Adana         2
	..             ...       ...
	434        Yakutsk         2
	435        Yaounde         2
	436  Yekaterinburg         2
	437        Yerevan         2
	438       Zhytomyr         2
	
	[439 rows x 2 columns]
Wrong output for ground truth in instance spider/flight_4/0027 (2327)
Wrong output for base solution in instance spider/flight_4/0022 (2328)
	EXPECTED OUTPUT ====

	                   country  count___
	0     Boonville Stage Line         1
	1                     S.A.         1
	2                     ACOM         1
	3              ACTIVE AERO         1
	4               AEROCENTER         1
	..                     ...       ...
	273                 Russia       238
	274                 Canada       323
	275         United Kingdom       414
	276                 Mexico       440
	277          United States      1099
	
	[278 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT country,
		       count(*)
		FROM airlines
		GROUP BY country
		ORDER BY count(*) DESC

	                   country  count(*)
	0     Boonville Stage Line         1
	1                     S.A.         1
	2                     ACOM         1
	3              ACTIVE AERO         1
	4               AEROCENTER         1
	..                     ...       ...
	273                 Russia       238
	274                 Canada       323
	275         United Kingdom       414
	276                 Mexico       440
	277          United States      1099
	
	[278 rows x 2 columns]
Wrong output for ground truth in instance spider/flight_4/0022 (2328)
No solution for instance spider/flight_4/0030 (2329)
No solution for instance spider/flight_4/0013 (2330)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_26476.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_26476.sqlite3'
Wrong output for fuzzied solution in instance spider/flight_4/0012 (2333)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM airlines AS T1
		JOIN routes AS T2 ON T1.alid = T2.alid
		WHERE T1.name = 'American Airlines'

	   count(*)
	0         5
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `alid`,
		          `country`,
		          COUNT() AS `n`
		   FROM
		     (SELECT `LHS`.`rid` AS `rid`,
		             `LHS`.`dst_apid` AS `dst_apid`,
		             `LHS`.`dst_ap` AS `dst_ap`,
		             `LHS`.`src_apid` AS `src_apid`,
		             `LHS`.`src_ap` AS `src_ap`,
		             `LHS`.`alid` AS `alid`,
		             `LHS`.`airline` AS `airline`,
		             `LHS`.`codeshare` AS `codeshare`,
		             `RHS`.`name` AS `name`,
		             `RHS`.`iata` AS `iata`,
		             `RHS`.`icao` AS `icao`,
		             `RHS`.`callsign` AS `callsign`,
		             `RHS`.`country` AS `country`,
		             `RHS`.`active` AS `active`
		      FROM `routes` AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `airlines`
		         WHERE (`name` = 'American Airlines')) AS RHS ON (LHS.alid = RHS.alid))
		   GROUP BY alid,
		            country)
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
	3         2
No solution for instance spider/flight_4/0026 (2334)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_26476.sqlite3'
No solution for instance spider/flight_4/0016 (2337)
No solution for instance spider/flight_4/0018 (2339)
No solution for instance spider/flight_4/0041 (2340)
No solution for instance spider/flight_4/0035 (2341)
Wrong output for fuzzied solution in instance spider/flight_4/0020 (2342)
	EXPECTED OUTPUT ====

		SELECT country
		FROM airlines
		GROUP BY country
		ORDER BY count(*) DESC
		LIMIT 1

	           country
	0  InAHikjBw2cV9KC
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT country,
		                icao,
		                COUNT() AS n
		         FROM airlines
		         GROUP BY country,
		                  icao)
		      ORDER BY n DESC)
		   LIMIT 1)

	  country
	0  Bermud
Error while executing solution for instance spider/flight_4/0019 (2343)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `dst_apid`) OVER () AS `count_distinct_dst_apid_`
FROM
  (SELECT `LHS`.`rid` AS `rid`,
          `LHS`.`dst_apid` AS `dst_apid`,
          `LHS`.`dst_ap` AS `dst_ap`,
          `LHS`.`src_apid` AS `src_apid`,
          `LHS`.`src_ap` AS `src_ap`,
          `LHS`.`alid` AS `alid`,
          `LHS`.`airline` AS `airline`,
          `LHS`.`codeshare` AS `codeshare`,
          `RHS`.`name` AS `name`,
          `RHS`.`iata` AS `iata`,
          `RHS`.`icao` AS `icao`,
          `RHS`.`callsign` AS `callsign`,
          `RHS`.`country` AS `country`,
          `RHS`.`active` AS `active`
   FROM `routes` AS `LHS`
   INNER JOIN
     (SELECT *
      FROM `airlines`
      WHERE (`name` = 'American Airlines')) AS RHS ON (LHS.alid = RHS.alid))
ORDER BY count_distinct_dst_apid_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/flight_4/0007 (2344)
No solution for instance spider/flight_4/0034 (2345)
No solution for instance spider/flight_4/0024 (2346)
No solution for instance spider/flight_4/0021 (2347)
No solution for instance spider/flight_4/0025 (2352)
Error while executing solution for instance spider/flight_4/0011 (2353)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `city`) OVER () AS `count_distinct_city_`
FROM
  (SELECT `LHS`.`apid` AS `apid`,
          `LHS`.`name` AS `name`,
          `LHS`.`city` AS `city`,
          `LHS`.`country` AS `country`,
          `LHS`.`x` AS `x`,
          `LHS`.`y` AS `y`,
          `LHS`.`elevation` AS `elevation`,
          `LHS`.`iata` AS `iata`,
          `LHS`.`icao` AS `icao`
   FROM `airports` AS `LHS`
   INNER JOIN
     (SELECT *
      FROM `airports`
      WHERE (`country` = 'Greenland')) AS RHS ON (LHS.apid = RHS.apid
                                                  AND LHS.name = RHS.name
                                                  AND LHS.city = RHS.city
                                                  AND LHS.country = RHS.country
                                                  AND LHS.x = RHS.x
                                                  AND LHS.y = RHS.y
                                                  AND LHS.elevation = RHS.elevation
                                                  AND LHS.iata = RHS.iata
                                                  AND LHS.icao = RHS.icao))
ORDER BY count_distinct_city_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_26476.sqlite3'
No solution for instance spider/flight_4/0029 (2354)
No solution for instance spider/flight_4/0010 (2355)
No solution for instance spider/flight_4/0040 (2356)
Wrong output for base solution in instance spider/flight_4/0028 (2357)
	EXPECTED OUTPUT ====

	           city
	0      Aberdeen
	1     Abu Dhabi
	2         Akron
	3        Albany
	4    Alexandria
	..          ...
	110      Warsaw
	111  Washington
	112     Wichita
	113  Wilmington
	114         NaN
	
	[115 rows x 1 columns]
	ACTUAL OUTPUT ====

		SELECT city
		FROM airports
		GROUP BY city
		HAVING count(*) > 2
		ORDER BY count(*)

	           city
	0              
	1      Aberdeen
	2     Abu Dhabi
	3         Akron
	4        Albany
	..          ...
	110    Victoria
	111      Warsaw
	112  Washington
	113     Wichita
	114  Wilmington
	
	[115 rows x 1 columns]
Wrong output for ground truth in instance spider/flight_4/0028 (2357)
Wrong output for base solution in instance spider/flight_4/0031 (2358)
	EXPECTED OUTPUT ====

	     avg_elevation_                         country
	0          4.611111                        Kiribati
	1          6.333333                  Cayman Islands
	2          7.000000                  Johnston Atoll
	3          9.000000  British Indian Ocean Territory
	4          9.000000                          Tuvalu
	..              ...                             ...
	232     4546.384615                        Mongolia
	233     5044.333333                          Rwanda
	234     5416.689655                        Ethiopia
	235     5599.000000                          Bhutan
	236     5851.000000                         Lesotho
	
	[237 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT avg(elevation),
		       country
		FROM airports
		GROUP BY country

	     avg(elevation)                         country
	0          4.611111                        Kiribati
	1          6.333333                  Cayman Islands
	2          7.000000                  Johnston Atoll
	3          9.000000  British Indian Ocean Territory
	4          9.000000                          Tuvalu
	..              ...                             ...
	232     4546.384615                        Mongolia
	233     5044.333333                          Rwanda
	234     5416.689655                        Ethiopia
	235     5599.000000                          Bhutan
	236     5851.000000                         Lesotho
	
	[237 rows x 2 columns]
Wrong output for ground truth in instance spider/flight_4/0031 (2358)
No solution for instance spider/city_record/0003 (2362)
No solution for instance spider/city_record/0013 (2363)
No solution for instance spider/city_record/0006 (2364)
No solution for instance spider/city_record/0004 (2365)
No solution for instance spider/city_record/0012 (2366)
Wrong output for fuzzied solution in instance spider/city_record/0005 (2368)
	EXPECTED OUTPUT ====

		SELECT T3.venue
		FROM city AS T1
		JOIN hosting_city AS T2 ON T1.city_id = T2.host_city
		JOIN MATCH AS T3 ON T2.match_id = T3.match_id
		WHERE T1.city = "Nanjing ( Jiangsu )"
		  AND T3.competition = "1994 FIFA World Cup qualification"

	Empty DataFrame
	Columns: [venue]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `venue`
		FROM
		  (SELECT `LHS`.`city_id` AS `city_id`,
		          `LHS`.`city` AS `city`,
		          `LHS`.`hanzi` AS `hanzi`,
		          `LHS`.`hanyu_pinyin` AS `hanyu_pinyin`,
		          `LHS`.`regional_population` AS `regional_population`,
		          `LHS`.`gdp` AS `gdp`,
		          `LHS`.`match_id` AS `match_id`,
		          `LHS`.`date` AS `date`,
		          `LHS`.`venue` AS `venue`,
		          `LHS`.`score` AS `score`,
		          `LHS`.`result` AS `result`,
		          `LHS`.`competition` AS `competition`,
		          `RHS`.`year` AS `year`,
		          `RHS`.`host_city` AS `host_city`
		   FROM
		     (SELECT `LHS`.`city_id` AS `city_id`,
		             `LHS`.`city` AS `city`,
		             `LHS`.`hanzi` AS `hanzi`,
		             `LHS`.`hanyu_pinyin` AS `hanyu_pinyin`,
		             `LHS`.`regional_population` AS `regional_population`,
		             `LHS`.`gdp` AS `gdp`,
		             `RHS`.`match_id` AS `match_id`,
		             `RHS`.`date` AS `date`,
		             `RHS`.`venue` AS `venue`,
		             `RHS`.`score` AS `score`,
		             `RHS`.`result` AS `result`,
		             `RHS`.`competition` AS `competition`
		      FROM `city` AS `LHS`
		      CROSS JOIN `match` AS `RHS`) AS `LHS`
		   INNER JOIN `hosting_city` AS `RHS` ON (`LHS`.`match_id` = `RHS`.`match_id`))
		WHERE (`city` = 'Nanjing ( Jiangsu )'
		       OR `competition` != '1994 FIFA World Cup qualification')
		ORDER BY venue

	                                               venue
	0     Estadio Cuscatlán , San Salvador , El Salvador
	1  vZ1Estadio Cuscatlán , San Salvador , El Salva...
Wrong output for fuzzied solution in instance spider/city_record/0016 (2369)
	EXPECTED OUTPUT ====

		SELECT city
		FROM city
		WHERE regional_population > 10000000
		UNION
		SELECT city
		FROM city
		WHERE regional_population < 5000000

	                        city
	0  SXvflYangzhou ( Jiangsu )
	1        angzhou ( Jiangsu )
	2      zING4Wuxi ( Jiangsu )
	ACTUAL OUTPUT ====

		
		SELECT city
		FROM
		  (SELECT *
		   FROM city AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM city
		           WHERE (regional_population >= 10000000
		                  OR regional_population <= 5000000)) AS RHS
		        WHERE (LHS.city_id = RHS.city_id
		               AND LHS.city = RHS.city
		               AND LHS.hanzi = RHS.hanzi
		               AND LHS.hanyu_pinyin = RHS.hanyu_pinyin
		               AND LHS.regional_population = RHS.regional_population
		               AND LHS.gdp = RHS.gdp) ))
		ORDER BY city

	                        city
	0  SXvflYangzhou ( Jiangsu )
	1         Suzhou ( Jiangsu )
	2        angzhou ( Jiangsu )
	3      zING4Wuxi ( Jiangsu )
No solution for instance spider/city_record/0020 (2371)
Wrong output for fuzzied solution in instance spider/city_record/0019 (2372)
	EXPECTED OUTPUT ====

		SELECT gdp
		FROM city
		ORDER BY Regional_Population DESC
		LIMIT 1

	      gdp
	0  701.17
	ACTUAL OUTPUT ====

		
		SELECT gdp
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM city
		      ORDER BY hanzi)
		   LIMIT 1)

	     gdp
	0  701.2
No solution for instance spider/city_record/0007 (2373)
No solution for instance spider/city_record/0014 (2375)
No solution for instance spider/city_record/0011 (2377)
No solution for instance spider/city_record/0010 (2378)
Wrong output for fuzzied solution in instance spider/theme_gallery/0017 (2380)
	EXPECTED OUTPUT ====

		SELECT name
		FROM artist
		EXCEPT
		SELECT T2.name
		FROM exhibition AS T1
		JOIN artist AS T2 ON T1.artist_id = T2.artist_id
		WHERE T1.year = 2004

	              name
	0      Jeff Sluman
	1        Nick Pric
	2       Nick Price
	3  QF67VNick Price
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM artist AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM exhibition
		           WHERE (YEAR = 2004)) AS RHS
		        WHERE (LHS.artist_id = RHS.artist_id) ))
		ORDER BY name

	              name
	0      Jeff Sluman
	1      Jeff Sluman
	2        Nick Pric
	3       Nick Price
	4       Nick Price
	5  QF67VNick Price
Wrong output for fuzzied solution in instance spider/theme_gallery/0008 (2381)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM exhibition
		WHERE YEAR >= 2005

	   count(*)
	0         3
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM exhibition
		WHERE (YEAR != 2005)
		ORDER BY count___

	   count___
	0         7
No solution for instance spider/theme_gallery/0013 (2383)
Wrong output for fuzzied solution in instance spider/theme_gallery/0006 (2384)
	EXPECTED OUTPUT ====

		SELECT avg(age),
		       min(age)
		FROM artist
		WHERE country = 'United States'

	  avg(age) min(age)
	0     None     None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `meanage` AS `avg_age_`,
		                MIN(`age`) OVER () AS `min_age_`
		FROM
		  (SELECT `artist_id`,
		          `name`,
		          `country`,
		          `year_join`,
		          `age`,
		          AVG(`age`) OVER () AS `meanage`
		   FROM
		     (SELECT *
		      FROM `artist`
		      WHERE (`country` = 'United States')))
		ORDER BY avg_age_

	Empty DataFrame
	Columns: [avg_age_, min_age_]
	Index: []
Wrong output for fuzzied solution in instance spider/theme_gallery/0020 (2390)
	EXPECTED OUTPUT ====

		SELECT T3.name
		FROM exhibition_record AS T1
		JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id
		JOIN artist AS T3 ON T3.artist_id = T2.artist_id
		GROUP BY T3.artist_id
		HAVING avg(T1.attendance) > 200

	              name
	0  EBl3zNick Price
	1       Nick Price
	2       Nick Price
	3       Nick Price
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.artist_id AS artist_id,
		          LHS.name AS name,
		          LHS.country AS country,
		          LHS.year_join AS year_join,
		          LHS.age AS age,
		          LHS.exhibition_id AS exhibition_id,
		          LHS.year AS YEAR,
		          LHS.theme AS theme,
		          LHS.ticket_price AS ticket_price,
		          RHS.date AS date,
		          RHS.attendance AS attendance
		   FROM
		     (SELECT LHS.artist_id AS artist_id,
		             LHS.name AS name,
		             LHS.country AS country,
		             LHS.year_join AS year_join,
		             LHS.age AS age,
		             RHS.exhibition_id AS exhibition_id,
		             RHS.year AS YEAR,
		             RHS.theme AS theme,
		             RHS.ticket_price AS ticket_price
		      FROM artist AS LHS
		      INNER JOIN exhibition AS RHS ON (LHS.artist_id = RHS.artist_id)) AS LHS
		   INNER JOIN exhibition_record AS RHS ON (LHS.exhibition_id = RHS.exhibition_id))
		WHERE (attendance > 200)
		ORDER BY name

	              name
	0  EBl3zNick Price
	1       Nick Price
Error while executing solution for instance spider/theme_gallery/0019 (2391)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT attendance) OVER () AS count___
FROM
  (SELECT LHS.exhibition_id AS exhibition_id,
          LHS.year AS YEAR,
          LHS.theme AS theme,
          LHS.artist_id AS artist_id,
          LHS.ticket_price AS ticket_price,
          RHS.date AS date,
          RHS.attendance AS attendance
   FROM exhibition AS LHS
   INNER JOIN
     (SELECT *
      FROM exhibition_record
      WHERE (attendance >= 100
             OR attendance != 10)) AS RHS ON (LHS.exhibition_id = RHS.exhibition_id))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/theme_gallery/0001 (2393)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM artist

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT age,
		             year_join,
		             COUNT() AS n
		      FROM artist
		      GROUP BY age,
		               year_join))
		ORDER BY count___

	   count___
	0         6
No solution for instance spider/theme_gallery/0014 (2394)
Wrong output for fuzzied solution in instance spider/theme_gallery/0011 (2396)
	EXPECTED OUTPUT ====

		SELECT T2.name,
		       T2.country
		FROM exhibition AS T1
		JOIN artist AS T2 ON T1.artist_id = T2.artist_id
		GROUP BY T1.artist_id
		ORDER BY count(*) DESC
		LIMIT 1

	         name        country
	0  Nick Price  United States
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name,
		                country
		FROM
		  (SELECT LHS.artist_id AS artist_id,
		          LHS.name AS name,
		          LHS.country AS country,
		          LHS.year_join AS year_join,
		          LHS.age AS age,
		          RHS.ticket_price AS ticket_price,
		          RHS.year AS YEAR
		   FROM artist AS LHS
		   INNER JOIN
		     (SELECT ticket_price,
		             YEAR,
		             COUNT() AS n
		      FROM exhibition
		      GROUP BY ticket_price,
		               YEAR) AS RHS ON (LHS.artist_id = RHS.n))
		ORDER BY name

	Empty DataFrame
	Columns: [name, country]
	Index: []
Wrong output for fuzzied solution in instance spider/theme_gallery/0010 (2397)
	EXPECTED OUTPUT ====

		SELECT T2.name,
		       count(*)
		FROM exhibition AS T1
		JOIN artist AS T2 ON T1.artist_id = T2.artist_id
		GROUP BY T1.artist_id

	              name  count(*)
	0       Nick Price         1
	1  EBl3zNick Price         2
	2       Nick Price         2
	3       Nick Price         3
	ACTUAL OUTPUT ====

		
		SELECT name,
		       n AS count___
		FROM
		  (SELECT name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.artist_id AS artist_id,
		             LHS.name AS name,
		             LHS.country AS country,
		             LHS.year_join AS year_join,
		             LHS.age AS age,
		             RHS.exhibition_id AS exhibition_id,
		             RHS.year AS YEAR,
		             RHS.theme AS theme,
		             RHS.ticket_price AS ticket_price
		      FROM artist AS LHS
		      INNER JOIN exhibition AS RHS ON (LHS.artist_id = RHS.artist_id))
		   GROUP BY name)
		ORDER BY name

	              name  count___
	0  EBl3zNick Price         2
	1       Nick Price         6
Wrong output for fuzzied solution in instance spider/culture_company/0002 (2398)
	EXPECTED OUTPUT ====

		SELECT book_title,
		       author_or_editor
		FROM book_club
		WHERE YEAR > 1989

	  book_title    author_or_editor
	0  Skiptrace  9KCz(Joseph Hansen
	ACTUAL OUTPUT ====

		
		SELECT book_title,
		       author_or_editor
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM book_club
		      WHERE (YEAR != 1989)) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM book_club AS RHS
		        WHERE (LHS.book_club_id = RHS.book_club_id
		               AND LHS.year = RHS.year
		               AND LHS.author_or_editor = RHS.author_or_editor
		               AND LHS.book_title = RHS.book_title
		               AND LHS.publisher = RHS.publisher
		               AND LHS.category = RHS.category
		               AND LHS.result = RHS.result) ))
		ORDER BY book_title

	                    book_title     author_or_editor
	0                    Skiptrace   9KCz(Joseph Hansen
	1  Somewhere in the NightMO0MO  Antoinette Azolakov
No solution for instance spider/culture_company/0017 (2399)
Wrong output for fuzzied solution in instance spider/culture_company/0008 (2400)
	EXPECTED OUTPUT ====

		SELECT category
		FROM book_club
		WHERE YEAR > 1989
		GROUP BY category
		HAVING count(*) >= 2

	Empty DataFrame
	Columns: [category]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT category
		FROM
		  (SELECT category,
		          RESULT,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM book_club
		      WHERE (YEAR != 1989
		             OR YEAR <= 2))
		   GROUP BY category,
		            RESULT)
		ORDER BY category

	     category
	0  Lesb. M/SF
Wrong output for fuzzied solution in instance spider/culture_company/0013 (2402)
	EXPECTED OUTPUT ====

		SELECT title,
		       director
		FROM movie
		WHERE YEAR <= 2000
		ORDER BY gross_worldwide DESC
		LIMIT 1

	                 title       director
	0  rqrHJThe Art of War  Anthony Hicko
	ACTUAL OUTPUT ====

		
		SELECT title,
		       director
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM movie
		         WHERE (YEAR >= 2000))
		      ORDER BY title DESC)
		   LIMIT 1)

	            title             director
	0  Jill Rips9awO)  Demian Lichtenstein
Wrong output for fuzzied solution in instance spider/culture_company/0006 (2403)
	EXPECTED OUTPUT ====

		SELECT publisher
		FROM book_club
		GROUP BY publisher
		ORDER BY count(*) DESC
		LIMIT 1

	     publisher
	0  Naiad Press
	ACTUAL OUTPUT ====

		
		SELECT publisher
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT category,
		                publisher,
		                COUNT() AS n
		         FROM book_club
		         GROUP BY category,
		                  publisher)
		      ORDER BY category DESC)
		   LIMIT 1)

	    publisher
	0  Naiad Pres
No solution for instance spider/culture_company/0004 (2404)
Error while executing solution for instance spider/culture_company/0012 (2405)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT director) OVER () AS count__distinct_director_
FROM movie
ORDER BY count__distinct_director_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/culture_company/0016 (2408)
No solution for instance spider/culture_company/0018 (2409)
No solution for instance spider/culture_company/0019 (2410)
No solution for instance spider/culture_company/0014 (2413)
Wrong output for fuzzied solution in instance spider/culture_company/0009 (2414)
	EXPECTED OUTPUT ====

		SELECT publisher
		FROM book_club
		WHERE YEAR = 1989 INTERSECT
		  SELECT publisher
		  FROM book_club WHERE YEAR = 1990

	Empty DataFrame
	Columns: [publisher]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT publisher
		FROM book_club
		WHERE (YEAR != 1989
		       AND YEAR >= 1990)
		ORDER BY publisher

	             publisher
	0  Crossing PressB1Efy
No solution for instance spider/race_track/0017 (2417)
Wrong output for fuzzied solution in instance spider/race_track/0013 (2420)
	EXPECTED OUTPUT ====

		SELECT CLASS
		FROM race
		GROUP BY CLASS
		HAVING count(*) >= 2

	   class
	0  DP/GT
	1     GT
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT CLASS
		FROM
		  (SELECT LHS.race_id AS race_id,
		          LHS.name AS name,
		          LHS.class AS CLASS,
		          LHS.date AS date,
		          LHS.track_id AS track_id,
		          RHS.n AS n
		   FROM race AS LHS
		   LEFT JOIN
		     (SELECT race_id,
		             COUNT() AS n
		      FROM race
		      GROUP BY race_id) AS RHS ON (LHS.race_id = RHS.race_id))
		ORDER BY CLASS

	         class
	0         DP/G
	1        DP/GT
	2   DP/GTcNCkC
	3  ERwDP/GTx4t
	4           GT
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_26476.sqlite3'
Wrong output for fuzzied solution in instance spider/race_track/0012 (2423)
	EXPECTED OUTPUT ====

		SELECT CLASS
		FROM race
		GROUP BY CLASS
		ORDER BY count(*) DESC
		LIMIT 1

	   class
	0  DP/GT
	ACTUAL OUTPUT ====

		
		SELECT CLASS
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT CLASS,
		                name,
		                COUNT() AS n
		         FROM race
		         GROUP BY CLASS,
		                  name)
		      ORDER BY name DESC)
		   LIMIT 1)

	  class
	0   0zJ
Wrong output for fuzzied solution in instance spider/race_track/0015 (2424)
	EXPECTED OUTPUT ====

		SELECT name
		FROM track
		WHERE track_id NOT IN
		    (SELECT track_id
		     FROM race)

	                       name
	0       8gXThn6IhP3qN5gqKop
	1   Darlington RacewayK6xYy
	2  Homestead-Miami Speedway
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM track AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT LHS.track_id AS track_id,
		                     LHS.name AS name,
		                     LHS.location AS LOCATION,
		                     LHS.seating AS seating,
		                     LHS.year_opened AS year_opened,
		                     RHS.race_id AS race_id,
		                     RHS.name AS name_other,
		                     RHS.class AS CLASS,
		                     RHS.date AS date,
		                     RHS.track_id AS track_id_other
		              FROM track AS LHS
		              CROSS JOIN race AS RHS)
		           WHERE (track_id >= track_id_other
		                  AND track_id = track_id_other)) AS RHS
		        WHERE (LHS.name = RHS.name
		               AND LHS.year_opened = RHS.year_opened) ))
		ORDER BY name

	                      name
	0      8gXThn6IhP3qN5gqKop
	1  Darlington RacewayK6xYy
Wrong output for base solution in instance spider/race_track/0005 (2425)
	EXPECTED OUTPUT ====

	   min_seating_  max_seating_  avg_seating_
	0       63000.0      168000.0  91526.888889
	ACTUAL OUTPUT ====

		SELECT min(seating),
		       max(seating),
		       avg(seating)
		FROM track

	   min(seating)  max(seating)  avg(seating)
	0       63000.0      168000.0  91526.888889
Wrong output for ground truth in instance spider/race_track/0005 (2425)
No solution for instance spider/race_track/0018 (2426)
No solution for instance spider/race_track/0020 (2427)
Error while executing solution for instance spider/race_track/0019 (2428)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/race_track/0019 (2428)
Wrong output for fuzzied solution in instance spider/race_track/0007 (2429)
	EXPECTED OUTPUT ====

		SELECT DISTINCT LOCATION
		FROM track

	            location
	0      Darlington, S
	1       Ridgeway, VA
	2  Ridgeway, VAu4)1C
	3      arlington, SC
	4  vIL5PRidgeway, VA
	ACTUAL OUTPUT ====

		
		SELECT LOCATION
		FROM track
		ORDER BY LOCATION

	            location
	0      Darlington, S
	1       Ridgeway, VA
	2       Ridgeway, VA
	3       Ridgeway, VA
	4  Ridgeway, VAu4)1C
	5      arlington, SC
	6  vIL5PRidgeway, VA
Wrong output for fuzzied solution in instance spider/race_track/0001 (2430)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM track

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT LOCATION,
		             COUNT() AS n
		      FROM track
		      GROUP BY LOCATION))
		ORDER BY count___

	   count___
	0         5
Wrong output for fuzzied solution in instance spider/race_track/0014 (2431)
	EXPECTED OUTPUT ====

		SELECT name
		FROM track
		EXCEPT
		SELECT T2.name
		FROM race AS T1
		JOIN track AS T2 ON T1.track_id = T2.track_id
		WHERE T1.class = 'GT'

	                              name
	0             Chicagoland Speedway
	1  Michigan International Speedway
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM `track` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT `race_id`,
		                  `name`,
		                  `class`,
		                  `date`,
		                  `race_id` AS `track_id`,
		                  `name_other`,
		                  `location`,
		                  `seating`,
		                  `year_opened`
		           FROM
		             (SELECT `LHS`.`race_id` AS `race_id`,
		                     `LHS`.`name` AS `name`,
		                     `LHS`.`class` AS `class`,
		                     `LHS`.`date` AS `date`,
		                     `LHS`.`track_id` AS `track_id`,
		                     `RHS`.`name` AS `name_other`,
		                     `RHS`.`location` AS `location`,
		                     `RHS`.`seating` AS `seating`,
		                     `RHS`.`year_opened` AS `year_opened`
		              FROM
		                (SELECT *
		                 FROM `race`
		                 WHERE (`class` = 'GT')) AS LHS
		              INNER JOIN track AS RHS ON (LHS.race_id = RHS.track_id))) AS RHS
		        WHERE (LHS.track_id = RHS.track_id
		               AND LHS.year_opened = RHS.year_opened) ))
		ORDER BY name

	                        name
	0       Chicagoland Speedway
	1       Chicagoland Speedway
	2  Chicagoland SpeedwayWS9Ei
	3             ansas Speedway
	4             ansas Speedway
Wrong output for fuzzied solution in instance spider/local_govt_mdm/0002 (2435)
	EXPECTED OUTPUT ====

		SELECT T1.cmi_cross_ref_id,
		       T1.source_system_code
		FROM CMI_Cross_References AS T1
		JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id
		GROUP BY T1.cmi_cross_ref_id
		HAVING count(*) >= 1

	   cmi_cross_ref_id source_system_code
	0                48         klbRentxPX
	1                63           Business
	2                64               Rent
	3                66               Rent
	4                67          iNmO9Rent
	5               102         kwURentQ6y
	6               103               Rent
	7               107               Rent
	ACTUAL OUTPUT ====

		
		SELECT cmi_cross_ref_id,
		       source_system_code
		FROM
		  (SELECT cmi_cross_ref_id,
		          source_system_code,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.cmi_cross_ref_id AS cmi_cross_ref_id,
		             LHS.master_customer_id AS master_customer_id,
		             LHS.source_system_code AS source_system_code,
		             RHS.council_tax_id AS council_tax_id
		      FROM cmi_cross_references AS LHS
		      INNER JOIN council_tax AS RHS ON (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id))
		   GROUP BY cmi_cross_ref_id,
		            source_system_code)
		WHERE (n = 1)
		ORDER BY cmi_cross_ref_id

	   cmi_cross_ref_id source_system_code
	0                48         klbRentxPX
	1                63           Business
	2                66               Rent
	3               102         kwURentQ6y
	4               103               Rent
Wrong output for fuzzied solution in instance spider/local_govt_mdm/0003 (2437)
	EXPECTED OUTPUT ====

		SELECT T2.cmi_cross_ref_id,
		       T2.master_customer_id,
		       count(*)
		FROM Business_Rates AS T1
		JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id
		GROUP BY T2.cmi_cross_ref_id

	   cmi_cross_ref_id  master_customer_id  count(*)
	0                73                   9         1
	1                74                   3         1
	2                77                   6         1
	3                99                   8         1
	4               100                  11         1
	5               104                  10         1
	6               107                   8         2
	ACTUAL OUTPUT ====

		
		SELECT cmi_cross_ref_id,
		       master_customer_id,
		       n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT cmi_cross_ref_id,
		             master_customer_id,
		             COUNT() AS n
		      FROM cmi_cross_references
		      GROUP BY cmi_cross_ref_id,
		               master_customer_id) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM business_rates AS RHS
		        WHERE (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id) ))
		ORDER BY cmi_cross_ref_id

	   cmi_cross_ref_id  master_customer_id  count___
	0                73                   9         1
	1                74                   3         1
	2                77                   6         1
	3                99                   8         1
	4               100                  11         1
	5               104                  10         1
	6               107                   8         1
Wrong output for fuzzied solution in instance spider/local_govt_mdm/0006 (2439)
	EXPECTED OUTPUT ====

		SELECT T1.council_tax_id
		FROM Rent_Arrears AS T1
		JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id
		JOIN Customer_Master_Index AS T3 ON T3.master_customer_id = T2.master_customer_id
		WHERE T3.cmi_details != 'Schmidt ,  Kertzmann and Lubowitz'

	   council_tax_id
	0               0
	1               1
	2               2
	3               3
	4               4
	5               5
	6               6
	7               8
	ACTUAL OUTPUT ====

		
		SELECT council_tax_id
		FROM
		  (SELECT *
		   FROM rent_arrears AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT LHS.master_customer_id AS master_customer_id,
		                  LHS.cmi_details AS cmi_details,
		                  RHS.cmi_cross_ref_id AS cmi_cross_ref_id,
		                  RHS.source_system_code AS source_system_code
		           FROM customer_master_index AS LHS
		           INNER JOIN cmi_cross_references AS RHS ON (LHS.master_customer_id = RHS.master_customer_id)) AS RHS
		        WHERE (LHS.cmi_cross_ref_id = RHS.cmi_cross_ref_id) ))
		ORDER BY council_tax_id

	   council_tax_id
	0               0
	1               1
	2               2
	3               3
	4               4
	5               5
	6               6
	7               7
	8               8
No solution for instance spider/local_govt_mdm/0014 (2444)
Wrong output for fuzzied solution in instance spider/soccer_1/0002 (2455)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Country AS T1
		JOIN League AS T2 ON T1.id = T2.country_id
		WHERE T1.name = "England"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n_distinct` AS `count___`
		FROM
		  (SELECT `LHS`.`name` AS `name`,
		          `LHS`.`n_distinct` AS `n_distinct`,
		          `RHS`.`id` AS `id`,
		          `RHS`.`country_id` AS `country_id`
		   FROM
		     (SELECT `name`,
		             COUNT(DISTINCT `name`) AS `n_distinct`
		      FROM `country`
		      GROUP BY `name`) AS `LHS`
		   LEFT JOIN
		     (SELECT *
		      FROM `league`
		      WHERE (`name` != 'England')) AS RHS ON (LHS.name = RHS.name))
		ORDER BY count___

	   count___
	0         1
No solution for instance spider/soccer_1/0008 (2456)
No solution for instance spider/soccer_1/0003 (2457)
No solution for instance spider/soccer_1/0013 (2458)
No solution for instance spider/soccer_1/0006 (2459)
No solution for instance spider/soccer_1/0004 (2460)
No solution for instance spider/soccer_1/0012 (2461)
No solution for instance spider/soccer_1/0005 (2462)
No solution for instance spider/soccer_1/0007 (2463)
Error while executing solution for instance spider/soccer_1/0001 (2464)

The column label 'name' is not unique.
Error while checking ground truth in instance spider/soccer_1/0001 (2464)
No solution for instance spider/soccer_1/0014 (2465)
No solution for instance spider/soccer_1/0009 (2466)
No solution for instance spider/soccer_1/0011 (2467)
No solution for instance spider/soccer_1/0010 (2468)
No solution for instance spider/cre_Drama_Workshop_Groups/0033 (2469)
No solution for instance spider/cre_Drama_Workshop_Groups/0037 (2470)
Wrong output for fuzzied solution in instance spider/cre_Drama_Workshop_Groups/0036 (2472)
	EXPECTED OUTPUT ====

		SELECT Status_Code
		FROM BOOKINGS
		GROUP BY Status_Code
		ORDER BY count(*) DESC
		LIMIT 1

	  status_code
	0         top
	ACTUAL OUTPUT ====

		
		SELECT status_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT status_code,
		                store_id,
		                COUNT() AS n
		         FROM bookings
		         GROUP BY status_code,
		                  store_id)
		      ORDER BY n DESC)
		   LIMIT 1)

	  status_code
	0        good
No solution for instance spider/cre_Drama_Workshop_Groups/0017 (2473)
No solution for instance spider/cre_Drama_Workshop_Groups/0039 (2475)
No solution for instance spider/cre_Drama_Workshop_Groups/0038 (2476)
No solution for instance spider/cre_Drama_Workshop_Groups/0027 (2478)
Error while executing solution for instance spider/cre_Drama_Workshop_Groups/0030 (2480)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT currency_code) OVER () AS count_distinct_currency_code_
FROM drama_workshop_groups
ORDER BY count_distinct_currency_code_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/cre_Drama_Workshop_Groups/0026 (2485)
Wrong output for fuzzied solution in instance spider/cre_Drama_Workshop_Groups/0015 (2486)
	EXPECTED OUTPUT ====

		SELECT payment_method_code
		FROM INVOICES
		GROUP BY payment_method_code
		ORDER BY count(*) DESC
		LIMIT 1

	  payment_method_code
	0           VisaZ2yMy
	ACTUAL OUTPUT ====

		
		SELECT payment_method_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT other_item_details,
		                payment_method_code,
		                COUNT() AS n
		         FROM invoices
		         GROUP BY other_item_details,
		                  payment_method_code)
		      ORDER BY n DESC)
		   LIMIT 1)

	  payment_method_code
	0           VisawQ14m
No solution for instance spider/cre_Drama_Workshop_Groups/0016 (2488)
No solution for instance spider/cre_Drama_Workshop_Groups/0032 (2489)
Wrong output for fuzzied solution in instance spider/cre_Drama_Workshop_Groups/0041 (2491)
	EXPECTED OUTPUT ====

		SELECT T1.Service_Type_Description
		FROM Ref_Service_Types AS T1
		JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code
		WHERE T2.Product_Name = 'photo' INTERSECT
		  SELECT T1.Service_Type_Description
		  FROM Ref_Service_Types AS T1
		  JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Name = 'film'

	  service_type_description
	0   provide filming servic
	ACTUAL OUTPUT ====

		
		SELECT `service_type_description`
		FROM
		  (SELECT `LHS`.`service_type_code` AS `service_type_code`,
		          `LHS`.`parent_service_type_code` AS `parent_service_type_code`,
		          `LHS`.`service_type_description` AS `service_type_description`,
		          `LHS`.`service_id` AS `service_id`,
		          `LHS`.`workshop_group_id` AS `workshop_group_id`,
		          `LHS`.`product_description` AS `product_description`,
		          `LHS`.`product_name` AS `product_name`,
		          `LHS`.`product_price` AS `product_price`,
		          `LHS`.`other_product_service_details` AS `other_product_service_details`
		   FROM
		     (SELECT `LHS`.`service_type_code` AS `service_type_code`,
		             `LHS`.`parent_service_type_code` AS `parent_service_type_code`,
		             `LHS`.`service_type_description` AS `service_type_description`,
		             `RHS`.`service_id` AS `service_id`,
		             `RHS`.`workshop_group_id` AS `workshop_group_id`,
		             `RHS`.`product_description` AS `product_description`,
		             `RHS`.`product_name` AS `product_name`,
		             `RHS`.`product_price` AS `product_price`,
		             `RHS`.`other_product_service_details` AS `other_product_service_details`
		      FROM `ref_service_types` AS `LHS`
		      INNER JOIN `services` AS `RHS` ON (`LHS`.`service_type_code` = `RHS`.`service_type_code`)) AS `LHS`
		   INNER JOIN
		     (SELECT `workshop_group_id`
		      FROM `services` INTERSECT SELECT `workshop_group_id`
		      FROM `services`
		      WHERE (`product_name` != 'photo'
		             AND `product_name` != 'film')) AS `RHS` ON (`LHS`.`workshop_group_id` = `RHS`.`workshop_group_id`))
		WHERE (`product_name` = 'photo'
		       OR `product_name` = 'film')
		ORDER BY service_type_description

	  service_type_description
	0   provide filming servic
	1  provide filming service
	2  provide filming service
No solution for instance spider/cre_Drama_Workshop_Groups/0035 (2492)
No solution for instance spider/cre_Drama_Workshop_Groups/0007 (2495)
Wrong output for fuzzied solution in instance spider/cre_Drama_Workshop_Groups/0034 (2496)
	EXPECTED OUTPUT ====

		SELECT Marketing_Region_Code
		FROM Drama_Workshop_Groups
		GROUP BY Marketing_Region_Code
		ORDER BY count(*) DESC
		LIMIT 1

	  marketing_region_code
	0                    RU
	ACTUAL OUTPUT ====

		
		SELECT marketing_region_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT marketing_region_code,
		                store_email_address,
		                COUNT() AS n
		         FROM drama_workshop_groups
		         GROUP BY marketing_region_code,
		                  store_email_address)
		      ORDER BY store_email_address DESC)
		   LIMIT 1)

	  marketing_region_code
	0               USt1xMn
Wrong output for base solution in instance spider/cre_Drama_Workshop_Groups/0024 (2497)
	EXPECTED OUTPUT ====

	  product_name  avg_product_price_
	0      dinning        2.387043e+05
	1        photo        5.102692e+06
	2         film        1.138552e+07
	ACTUAL OUTPUT ====

		SELECT Product_Name,
		       avg(Product_Price)
		FROM PRODUCTS
		GROUP BY Product_Name

	  product_name  avg(product_price)
	0      dinning        2.387043e+05
	1         film        1.138552e+07
	2        photo        5.102692e+06
Wrong output for ground truth in instance spider/cre_Drama_Workshop_Groups/0024 (2497)
Wrong output for fuzzied solution in instance spider/cre_Drama_Workshop_Groups/0021 (2498)
	EXPECTED OUTPUT ====

		SELECT T1.Service_Type_Description,
		       T1.Service_Type_Code
		FROM Ref_Service_Types AS T1
		JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code
		GROUP BY T1.Service_Type_Code
		ORDER BY COUNT(*) DESC
		LIMIT 1

	              service_type_description service_type_code
	0  s)mprovide adv promoting servicePbY            3m2PHD
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT service_type_description,
		                service_type_code
		FROM
		  (SELECT LHS.service_type_code AS service_type_code,
		          LHS.parent_service_type_code AS parent_service_type_code,
		          LHS.service_type_description AS service_type_description,
		          LHS.service_id AS service_id,
		          LHS.workshop_group_id AS workshop_group_id,
		          LHS.product_description AS product_description,
		          LHS.product_name AS product_name,
		          LHS.product_price AS product_price,
		          LHS.other_product_service_details AS other_product_service_details,
		          LHS.n AS n,
		          RHS.service_type_code_other AS service_type_code_other,
		          RHS.workshop_group_id_other AS workshop_group_id_other,
		          RHS.n_other AS n_other
		   FROM
		     (SELECT LHS.service_type_code AS service_type_code,
		             LHS.parent_service_type_code AS parent_service_type_code,
		             LHS.service_type_description AS service_type_description,
		             LHS.service_id AS service_id,
		             LHS.workshop_group_id AS workshop_group_id,
		             LHS.product_description AS product_description,
		             LHS.product_name AS product_name,
		             LHS.product_price AS product_price,
		             LHS.other_product_service_details AS other_product_service_details,
		             RHS.n AS n
		      FROM
		        (SELECT LHS.service_type_code AS service_type_code,
		                LHS.parent_service_type_code AS parent_service_type_code,
		                LHS.service_type_description AS service_type_description,
		                RHS.service_id AS service_id,
		                RHS.workshop_group_id AS workshop_group_id,
		                RHS.product_description AS product_description,
		                RHS.product_name AS product_name,
		                RHS.product_price AS product_price,
		                RHS.other_product_service_details AS other_product_service_details
		         FROM ref_service_types AS LHS
		         INNER JOIN services AS RHS ON (LHS.service_type_code = RHS.service_type_code)) AS LHS
		      INNER JOIN
		        (SELECT service_type_code,
		                workshop_group_id,
		                COUNT() AS n
		         FROM services
		         GROUP BY service_type_code,
		                  workshop_group_id) AS RHS ON (LHS.service_type_code = RHS.service_type_code
		                                                AND LHS.workshop_group_id = RHS.workshop_group_id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT LHS.service_type_code AS service_type_code,
		                LHS.workshop_group_id AS workshop_group_id,
		                LHS.n AS n,
		                RHS.service_type_code AS service_type_code_other,
		                RHS.workshop_group_id AS workshop_group_id_other,
		                RHS.n AS n_other
		         FROM
		           (SELECT service_type_code,
		                   workshop_group_id,
		                   COUNT() AS n
		            FROM services
		            GROUP BY service_type_code,
		                     workshop_group_id) AS LHS
		         CROSS JOIN
		           (SELECT service_type_code,
		                   workshop_group_id,
		                   COUNT() AS n
		            FROM services
		            GROUP BY service_type_code,
		                     workshop_group_id) AS RHS)
		      WHERE (n > n_other)) AS RHS ON (LHS.service_type_code = RHS.service_type_code
		                                      AND LHS.workshop_group_id = RHS.workshop_group_id
		                                      AND LHS.n = RHS.n))
		ORDER BY service_type_description

	Empty DataFrame
	Columns: [service_type_description, service_type_code]
	Index: []
Wrong output for fuzzied solution in instance spider/cre_Drama_Workshop_Groups/0023 (2499)
	EXPECTED OUTPUT ====

		SELECT T1.Store_Phone,
		       T1.Store_Email_Address
		FROM Drama_Workshop_Groups AS T1
		JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID
		WHERE T2.Product_Name = "film"

	             store_phone                    store_email_address
	0          (411)133-9128                6GvJzuhuels@example.net
	1           499-032-2149        9(PfbEJd5aKCY)xjRnqCEsSXzBo70DL
	2    PvA(411)133-9128xHP               amely.ruecker@example.co
	3   1-351-773-1587x95545              amely.ruecker@example.com
	4    0RU(422)705-5633DSR             bednar.michael@example.org
	5     CWJ499-032-2149gQK             bednar.michael@example.org
	6      OzZGzB(xRRPuHQlvO             bednar.michael@example.org
	7          aQvShO8x90fLM             bednar.michael@example.org
	8          aQvShO8x90fLM             bednar.michael@example.org
	9          aQvShO8x90fLM             bednar.michael@example.org
	10          499-032-2149         dDuBTquigley.queen@example.org
	11          492-463-5967    kessler.maximillia@example.netS162y
	12       n G1DosROf7SFPU  oc2)vZ5N2F1orbtb3uywsG 3HOd(WHMum MiS
	13    Jf2499-032-2149F4U        pJwamely.ruecker@example.comLjx
	14           92-463-5967                     uhuels@example.net
	15    s5B499-032-2149nzP                uhuels@example.netJCkZQ
	16    yGsws(411)133-9128         wzX(Qamely.ruecker@example.com
	ACTUAL OUTPUT ====

		
		SELECT `store_phone`,
		       `store_email_address`
		FROM
		  (SELECT *
		   FROM `drama_workshop_groups` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `services`
		           WHERE (`product_name` = 'film')) AS RHS
		        WHERE (LHS.workshop_group_id = RHS.workshop_group_id) ))
		ORDER BY store_phone

	             store_phone                    store_email_address
	0          (411)133-9128                6GvJzuhuels@example.net
	1           499-032-2149        9(PfbEJd5aKCY)xjRnqCEsSXzBo70DL
	2    PvA(411)133-9128xHP               amely.ruecker@example.co
	3   1-351-773-1587x95545              amely.ruecker@example.com
	4    0RU(422)705-5633DSR             bednar.michael@example.org
	5     CWJ499-032-2149gQK             bednar.michael@example.org
	6      OzZGzB(xRRPuHQlvO             bednar.michael@example.org
	7          aQvShO8x90fLM             bednar.michael@example.org
	8           499-032-2149         dDuBTquigley.queen@example.org
	9           492-463-5967    kessler.maximillia@example.netS162y
	10       n G1DosROf7SFPU  oc2)vZ5N2F1orbtb3uywsG 3HOd(WHMum MiS
	11    Jf2499-032-2149F4U        pJwamely.ruecker@example.comLjx
	12           92-463-5967                     uhuels@example.net
	13    s5B499-032-2149nzP                uhuels@example.netJCkZQ
	14    yGsws(411)133-9128         wzX(Qamely.ruecker@example.com
Error while executing solution for instance spider/cre_Drama_Workshop_Groups/0009 (2502)

(sqlite3.OperationalError) near "Traceback": syntax error
[SQL: 
SELECT `marketing_region_descriptrion`
FROM `marketing_regions`
WHERE (`marketing_region_name` = 'China')
ORDER BY marketing_region_descriptrion
Traceback (most recent call last):
  File "./cubes.py", line 166, in <module>
    main()
  File "./cubes.py", line 134, in main
    for program, loc, optimal in synthesizer.synthesize(top_n=util.get_config().top_programs, enum_all=util.get_config().enum_until is not None):
  File "/home/rmbb/CUBES/squares/parallel_synthesizer.py", line 251, in synthesize
    poll.modify(fd, select.EPOLLIN | select.EPOLLOUT)
FileNotFoundError: [Errno 2] No such file or directory]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/cre_Drama_Workshop_Groups/0025 (2503)
	EXPECTED OUTPUT ====

		SELECT Product_Name
		FROM PRODUCTS
		GROUP BY Product_Name
		HAVING avg(Product_Price) < 1000000

	   product_name
	0    (M7Bvphoto
	1   )W)photolfs
	2     4ItltS7sn
	3        55X4vl
	4   55X4vlapkT9
	5   55X4vlxawU(
	6   9HJphotoeP2
	7    AR4JGphoto
	8     JgHc961D)
	9   S6isPnJeU(9
	10        Ukikj
	11          fil
	12  n5nphotoZE7
	13         phot
	14   photoiX6UO
	15        uDAK4
	16  zpyphotoWhm
	ACTUAL OUTPUT ====

		
		SELECT product_name
		FROM
		  (SELECT product_description,
		          product_name,
		          AVG(product_price) AS meanproduct_price
		   FROM products
		   GROUP BY product_description,
		            product_name)
		WHERE (meanproduct_price < 1000000.0)
		ORDER BY product_name

	   product_name
	0    (M7Bvphoto
	1   )W)photolfs
	2     4ItltS7sn
	3        55X4vl
	4   55X4vlapkT9
	5   55X4vlxawU(
	6   9HJphotoeP2
	7    AR4JGphoto
	8     JgHc961D)
	9   S6isPnJeU(9
	10        Ukikj
	11          fil
	12         film
	13         film
	14         film
	15         film
	16         hoto
	17         hoto
	18         hoto
	19          ilm
	20          ilm
	21       myIyPj
	22       myIyPj
	23  n5nphotoZE7
	24         phot
	25         phot
	26         phot
	27        photo
	28        photo
	29        photo
	30        photo
	31        photo
	32        photo
	33        photo
	34        photo
	35        photo
	36        photo
	37   photoiX6UO
	38        uDAK4
	39  zpyphotoWhm
No solution for instance spider/cre_Drama_Workshop_Groups/0029 (2505)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_26476.sqlite3'
Wrong output for fuzzied solution in instance spider/cre_Drama_Workshop_Groups/0040 (2507)
	EXPECTED OUTPUT ====

		SELECT Product_ID
		FROM INVOICES
		GROUP BY Product_ID
		ORDER BY COUNT(*) DESC
		LIMIT 1

	   product_id
	0           6
	ACTUAL OUTPUT ====

		
		SELECT n AS product_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT payment_method_code,
		                COUNT() AS n
		         FROM invoices
		         GROUP BY payment_method_code)
		      ORDER BY payment_method_code)
		   LIMIT 1)

	   product_id
	0           2
No solution for instance spider/cre_Drama_Workshop_Groups/0031 (2509)
Wrong output for fuzzied solution in instance spider/assets_maintenance/0003 (2513)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.company_id
		FROM Third_Party_Companies AS T1
		JOIN Assets AS T2 ON T1.company_id = T2.supplier_company_id
		GROUP BY T1.company_id

	   count(*)  company_id
	0         3           0
	1         2          10
	2         2          11
	3         3          12
	4         3          14
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___,
		                supplier_company_id AS company_id
		FROM
		  (SELECT company_name,
		          supplier_company_id,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.company_id AS company_id,
		             LHS.company_type AS company_type,
		             LHS.company_name AS company_name,
		             LHS.company_address AS company_address,
		             LHS.other_company_details AS other_company_details,
		             RHS.asset_id AS asset_id,
		             RHS.maintenance_contract_id AS maintenance_contract_id,
		             RHS.supplier_company_id AS supplier_company_id,
		             RHS.asset_details AS asset_details,
		             RHS.asset_make AS asset_make,
		             RHS.asset_model AS asset_model,
		             RHS.asset_acquired_date AS asset_acquired_date,
		             RHS.asset_disposed_date AS asset_disposed_date,
		             RHS.other_asset_details AS other_asset_details
		      FROM third_party_companies AS LHS
		      CROSS JOIN assets AS RHS)
		   GROUP BY company_name,
		            supplier_company_id)
		ORDER BY count___

	   count___  company_id
	0         3           0
	1         6           0
	2         2          10
	3         4          10
	4         2          11
	5         4          11
	6         3          12
	7         6          12
	8         3          14
	9         6          14
Wrong output for fuzzied solution in instance spider/assets_maintenance/0027 (2514)
	EXPECTED OUTPUT ====

		SELECT T1.company_name
		FROM Third_Party_Companies AS T1
		JOIN Maintenance_Contracts AS T2 ON T1.company_id = T2.maintenance_contract_company_id
		ORDER BY T2.contract_start_date ASC
		LIMIT 1

	               company_name
	0  Wisoky, Toy and Bashiria
	ACTUAL OUTPUT ====

		
		SELECT company_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT company_id,
		                company_type,
		                company_name,
		                company_address,
		                other_company_details,
		                maintenance_contract_id,
		                contract_start_date,
		                contract_end_date,
		                other_contract_details,
		                company_id AS maintenance_contract_company_id
		         FROM
		           (SELECT LHS.company_id AS company_id,
		                   LHS.company_type AS company_type,
		                   LHS.company_name AS company_name,
		                   LHS.company_address AS company_address,
		                   LHS.other_company_details AS other_company_details,
		                   RHS.maintenance_contract_id AS maintenance_contract_id,
		                   RHS.contract_start_date AS contract_start_date,
		                   RHS.contract_end_date AS contract_end_date,
		                   RHS.other_contract_details AS other_contract_details
		            FROM third_party_companies AS LHS
		            INNER JOIN maintenance_contracts AS RHS ON (LHS.company_id = RHS.maintenance_contract_company_id)))
		      ORDER BY contract_end_date DESC)
		   LIMIT 1)

	                company_name
	0  Wisoky, Toy and Bashirian
Wrong output for fuzzied solution in instance spider/assets_maintenance/0022 (2515)
	EXPECTED OUTPUT ====

		SELECT T1.fault_log_entry_id,
		       T1.fault_description,
		       T1.fault_log_entry_datetime
		FROM Fault_Log AS T1
		JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id
		GROUP BY T1.fault_log_entry_id
		ORDER BY count(*) DESC
		LIMIT 1

	   fault_log_entry_id  fault_description fault_log_entry_datetime
	0                   7  zk znfailed parts      2018-03-02 16:57:01
	ACTUAL OUTPUT ====

		
		SELECT fault_log_entry_id,
		       fault_description,
		       fault_log_entry_datetime
		FROM
		  (SELECT LHS.fault_log_entry_id AS fault_log_entry_id,
		          LHS.asset_id AS asset_id,
		          LHS.recorded_by_staff_id AS recorded_by_staff_id,
		          LHS.fault_log_entry_datetime AS fault_log_entry_datetime,
		          LHS.fault_description AS fault_description,
		          LHS.other_fault_details AS other_fault_details
		   FROM fault_log AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT fault_log_entry_id,
		                COUNT() AS n
		         FROM fault_log_parts
		         GROUP BY fault_log_entry_id)
		      WHERE (n != 1)) AS RHS ON (LHS.fault_log_entry_id = RHS.fault_log_entry_id
		                                 AND LHS.asset_id = RHS.n))
		ORDER BY fault_log_entry_id

	Empty DataFrame
	Columns: [fault_log_entry_id, fault_description, fault_log_entry_datetime]
	Index: []
Wrong output for fuzzied solution in instance spider/assets_maintenance/0030 (2516)
	EXPECTED OUTPUT ====

		SELECT T1.staff_name,
		       count(*)
		FROM Staff AS T1
		JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id
		GROUP BY T1.staff_name

	     staff_name  count(*)
	0        Howell         1
	1  MA6JeffrycLn         1
	2          Cyru         2
	3           Ore         4
	4       Bernice         5
	ACTUAL OUTPUT ====

		
		SELECT staff_name,
		       n AS count___
		FROM
		  (SELECT LHS.staff_id AS staff_id,
		          LHS.staff_name AS staff_name,
		          LHS.gender AS gender,
		          LHS.other_staff_details AS other_staff_details,
		          RHS.n AS n
		   FROM staff AS LHS
		   INNER JOIN
		     (SELECT contact_staff_id,
		             COUNT() AS n
		      FROM engineer_visits
		      GROUP BY contact_staff_id) AS RHS ON (LHS.staff_id = RHS.contact_staff_id))
		ORDER BY staff_name

	     staff_name  count___
	0       Bernice         1
	1        Howell         1
	2  MA6JeffrycLn         1
	3       Bernice         2
	4       Bernice         2
	5          Cyru         2
	6           Ore         4
Wrong output for fuzzied solution in instance spider/assets_maintenance/0013 (2517)
	EXPECTED OUTPUT ====

		SELECT DISTINCT last_name
		FROM Maintenance_Engineers

	     last_name
	0      Goldner
	1        Grady
	2   GradyET2Ek
	3        Morar
	4  OgNStammf0n
	5   QtHX3Grady
	6      Reinger
	7        Stamm
	8   mGuzjGrady
	ACTUAL OUTPUT ====

		
		SELECT last_name
		FROM maintenance_engineers
		ORDER BY last_name

	      last_name
	0       Goldner
	1       Goldner
	2       Goldner
	3         Grady
	4         Grady
	5    GradyET2Ek
	6         Morar
	7   OgNStammf0n
	8    QtHX3Grady
	9       Reinger
	10      Reinger
	11        Stamm
	12        Stamm
	13        Stamm
	14   mGuzjGrady
Wrong output for fuzzied solution in instance spider/assets_maintenance/0006 (2518)
	EXPECTED OUTPUT ====

		SELECT T1.engineer_id,
		       T1.first_name,
		       T1.last_name
		FROM Maintenance_Engineers AS T1
		JOIN Engineer_Visits AS T2
		GROUP BY T1.engineer_id
		ORDER BY count(*) DESC
		LIMIT 1

	   engineer_id    first_name last_name
	0            0  47n9kClemens     Grady
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT engineer_id,
		                first_name,
		                last_name
		FROM
		  (SELECT LHS.engineer_id AS engineer_id,
		          LHS.company_id AS company_id,
		          LHS.first_name AS first_name,
		          LHS.last_name AS last_name,
		          LHS.other_details AS other_details,
		          RHS.visit_start_datetime AS visit_start_datetime
		   FROM maintenance_engineers AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT visit_start_datetime,
		                COUNT() AS n
		         FROM engineer_visits
		         GROUP BY visit_start_datetime)
		      WHERE (n <= 1)) AS RHS ON (LHS.engineer_id = RHS.n))
		ORDER BY engineer_id

	   engineer_id    first_name   last_name
	0            1  6dhWestonIg7  mGuzjGrady
No solution for instance spider/assets_maintenance/0004 (2519)
Wrong output for fuzzied solution in instance spider/assets_maintenance/0012 (2520)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.fault_log_entry_id
		FROM Fault_Log AS T1
		JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id
		GROUP BY T1.fault_log_entry_id
		ORDER BY count(*) DESC
		LIMIT 1

	   count(*)  fault_log_entry_id
	0         4                   3
	ACTUAL OUTPUT ====

		
		SELECT asset_id AS count___,
		       recorded_by_staff_id AS fault_log_entry_id
		FROM
		  (SELECT fault_log_entry_id,
		          asset_id,
		          recorded_by_staff_id,
		          fault_log_entry_datetime,
		          fault_description,
		          other_fault_details,
		          n,
		          engineer_id,
		          fault_log_entry_id_other,
		          fault_status,
		          visit_start_datetime,
		          visit_end_datetime,
		          other_visit_details,
		          fault_log_entry_id AS contact_staff_id
		   FROM
		     (SELECT LHS.fault_log_entry_id AS fault_log_entry_id,
		             LHS.asset_id AS asset_id,
		             LHS.recorded_by_staff_id AS recorded_by_staff_id,
		             LHS.fault_log_entry_datetime AS fault_log_entry_datetime,
		             LHS.fault_description AS fault_description,
		             LHS.other_fault_details AS other_fault_details,
		             LHS.n AS n,
		             RHS.engineer_id AS engineer_id,
		             RHS.fault_log_entry_id AS fault_log_entry_id_other,
		             RHS.fault_status AS fault_status,
		             RHS.visit_start_datetime AS visit_start_datetime,
		             RHS.visit_end_datetime AS visit_end_datetime,
		             RHS.other_visit_details AS other_visit_details
		      FROM
		        (SELECT fault_log_entry_id,
		                asset_id,
		                recorded_by_staff_id,
		                fault_log_entry_datetime,
		                fault_description,
		                other_fault_details,
		                COUNT(*) OVER () AS n
		         FROM fault_log) AS LHS
		      INNER JOIN engineer_visits AS RHS ON (LHS.fault_log_entry_id = RHS.contact_staff_id
		                                               AND LHS.n = RHS.engineer_visit_id)))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___, fault_log_entry_id]
	Index: []
Wrong output for fuzzied solution in instance spider/assets_maintenance/0026 (2521)
	EXPECTED OUTPUT ====

		SELECT part_id,
		       chargeable_amount
		FROM Parts
		ORDER BY chargeable_amount ASC
		LIMIT 1

	   part_id chargeable_amount
	0        1                 1
	ACTUAL OUTPUT ====

		
		SELECT part_id,
		       chargeable_amount
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM parts
		      ORDER BY part_name DESC)
		   LIMIT 1)

	   part_id chargeable_amount
	0        4            8fIm1i
No solution for instance spider/assets_maintenance/0005 (2523)
Wrong output for fuzzied solution in instance spider/assets_maintenance/0018 (2525)
	EXPECTED OUTPUT ====

		SELECT T1.part_id,
		       T1.part_name
		FROM Parts AS T1
		JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id
		JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id = T3.part_fault_id
		GROUP BY T1.part_id
		ORDER BY count(*) DESC
		LIMIT 1

	   part_id part_name
	0        1    middle
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT part_id,
		                part_name
		FROM
		  (SELECT LHS.part_id AS part_id,
		          LHS.part_name AS part_name,
		          LHS.chargeable_yn AS chargeable_yn,
		          LHS.chargeable_amount AS chargeable_amount,
		          LHS.other_part_details AS other_part_details,
		          LHS.part_fault_id AS part_fault_id,
		          LHS.fault_short_name AS fault_short_name,
		          LHS.fault_description AS fault_description,
		          LHS.other_fault_details AS other_fault_details,
		          RHS.skill_id AS skill_id
		   FROM
		     (SELECT LHS.part_id AS part_id,
		             LHS.part_name AS part_name,
		             LHS.chargeable_yn AS chargeable_yn,
		             LHS.chargeable_amount AS chargeable_amount,
		             LHS.other_part_details AS other_part_details,
		             RHS.part_fault_id AS part_fault_id,
		             RHS.fault_short_name AS fault_short_name,
		             RHS.fault_description AS fault_description,
		             RHS.other_fault_details AS other_fault_details
		      FROM parts AS LHS
		      LEFT JOIN part_faults AS RHS ON (LHS.part_id = RHS.part_id)) AS LHS
		   INNER JOIN
		     (SELECT part_fault_id,
		             skill_id,
		             COUNT() AS n
		      FROM skills_required_to_fix
		      GROUP BY part_fault_id,
		               skill_id) AS RHS ON (LHS.part_id = RHS.n
		                                    AND LHS.part_fault_id = RHS.part_fault_id))
		ORDER BY part_id

	   part_id    part_name
	0        4  middle3UNZE
Wrong output for fuzzied solution in instance spider/assets_maintenance/0020 (2526)
	EXPECTED OUTPUT ====

		SELECT T1.engineer_id,
		       T1.first_name,
		       T1.last_name
		FROM Maintenance_Engineers AS T1
		JOIN Engineer_Visits AS T2 ON T1.engineer_id = T2.engineer_id
		GROUP BY T1.engineer_id
		ORDER BY count(*) ASC
		LIMIT 1

	   engineer_id    first_name   last_name
	0            1  6dhWestonIg7  mGuzjGrady
	ACTUAL OUTPUT ====

		
		SELECT engineer_id,
		       first_name,
		       last_name
		FROM
		  (SELECT LHS.engineer_id AS engineer_id,
		          LHS.company_id AS company_id,
		          LHS.first_name AS first_name,
		          LHS.last_name AS last_name,
		          LHS.other_details AS other_details,
		          LHS.engineer_visit_id AS engineer_visit_id,
		          LHS.contact_staff_id AS contact_staff_id,
		          LHS.fault_log_entry_id AS fault_log_entry_id,
		          LHS.fault_status AS fault_status,
		          LHS.visit_start_datetime AS visit_start_datetime,
		          LHS.visit_end_datetime AS visit_end_datetime,
		          LHS.other_visit_details AS other_visit_details,
		          RHS.n AS n
		   FROM
		     (SELECT LHS.engineer_id AS engineer_id,
		             LHS.company_id AS company_id,
		             LHS.first_name AS first_name,
		             LHS.last_name AS last_name,
		             LHS.other_details AS other_details,
		             RHS.engineer_visit_id AS engineer_visit_id,
		             RHS.contact_staff_id AS contact_staff_id,
		             RHS.fault_log_entry_id AS fault_log_entry_id,
		             RHS.fault_status AS fault_status,
		             RHS.visit_start_datetime AS visit_start_datetime,
		             RHS.visit_end_datetime AS visit_end_datetime,
		             RHS.other_visit_details AS other_visit_details
		      FROM maintenance_engineers AS LHS
		      INNER JOIN engineer_visits AS RHS ON (LHS.engineer_id = RHS.engineer_id)) AS LHS
		   INNER JOIN
		     (SELECT engineer_id,
		             company_id,
		             first_name,
		             last_name,
		             other_details,
		             COUNT(*) OVER () AS n
		      FROM maintenance_engineers) AS RHS ON (LHS.engineer_id = RHS.engineer_id
		                                                AND LHS.company_id = RHS.company_id
		                                                AND LHS.first_name = RHS.first_name
		                                                AND LHS.last_name = RHS.last_name
		                                                AND LHS.other_details = RHS.other_details))
		ORDER BY engineer_id

	    engineer_id    first_name   last_name
	0             1  6dhWestonIg7  mGuzjGrady
	1             2  ROWWestonXLk     Goldner
	2             3  3RdAlexysk70     Reinger
	3             5       Clemens  QtHX3Grady
	4             6       Clemens       Stamm
	5             6       Clemens       Stamm
	6             7       Clemens       Grady
	7             9  ))wAlexysI 8       Stamm
	8            11    dkPxCBrian       Morar
	9            11    dkPxCBrian       Morar
	10           14  INw8RClemens     Reinger
	11           14  INw8RClemens     Reinger
	12           15        Alexys  GradyET2Ek
Wrong output for fuzzied solution in instance spider/assets_maintenance/0019 (2527)
	EXPECTED OUTPUT ====

		SELECT T1.part_name
		FROM Parts AS T1
		JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id
		GROUP BY T1.part_name
		ORDER BY count(*) ASC
		LIMIT 1

	      part_name
	0  FIymiddlejv3
	ACTUAL OUTPUT ====

		
		SELECT part_name
		FROM
		  (SELECT LHS.part_id AS part_id,
		          LHS.part_name AS part_name,
		          LHS.chargeable_yn AS chargeable_yn,
		          LHS.chargeable_amount AS chargeable_amount,
		          LHS.other_part_details AS other_part_details,
		          RHS.other_fault_details AS other_fault_details,
		          RHS.part_id AS part_id_other
		   FROM parts AS LHS
		   INNER JOIN
		     (SELECT other_fault_details,
		             part_id,
		             COUNT() AS n
		      FROM part_faults
		      GROUP BY other_fault_details,
		               part_id) AS RHS ON (LHS.part_id = RHS.n))
		ORDER BY part_name

	  part_name
	0    middle
	1    middle
	2    middle
	3    middle
	4    middle
	5    middle
	6    middle
	7    middle
	8    middle
Wrong output for fuzzied solution in instance spider/assets_maintenance/0023 (2531)
	EXPECTED OUTPUT ====

		SELECT T1.skill_id,
		       T1.skill_description
		FROM Skills AS T1
		JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id = T2.skill_id
		GROUP BY T1.skill_id
		ORDER BY count(*) DESC
		LIMIT 1

	   skill_id skill_description
	0         3        Mechanical
	ACTUAL OUTPUT ====

		
		SELECT skill_id,
		       skill_description
		FROM
		  (SELECT LHS.skill_id AS skill_id,
		          LHS.skill_code AS skill_code,
		          LHS.skill_description AS skill_description,
		          RHS.skill_id AS skill_id_other
		   FROM skills AS LHS
		   INNER JOIN
		     (SELECT skill_id,
		             COUNT() AS n
		      FROM skills_required_to_fix
		      GROUP BY skill_id) AS RHS ON (LHS.skill_id = RHS.n))
		ORDER BY skill_id

	Empty DataFrame
	Columns: [skill_id, skill_description]
	Index: []
Wrong output for fuzzied solution in instance spider/assets_maintenance/0001 (2532)
	EXPECTED OUTPUT ====

		SELECT T1.asset_id,
		       T1.asset_details
		FROM Assets AS T1
		JOIN Asset_Parts AS T2 ON T1.asset_id = T2.asset_id
		GROUP BY T1.asset_id
		HAVING count(*) = 2 INTERSECT
		SELECT T1.asset_id,
		       T1.asset_details
		FROM Assets AS T1
		JOIN Fault_Log AS T2 ON T1.asset_id = T2.asset_id
		GROUP BY T1.asset_id
		HAVING count(*) < 2

	Empty DataFrame
	Columns: [asset_id, asset_details]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT asset_id,
		       asset_details
		FROM
		  (SELECT LHS.asset_id AS asset_id,
		          LHS.maintenance_contract_id AS maintenance_contract_id,
		          LHS.supplier_company_id AS supplier_company_id,
		          LHS.asset_details AS asset_details,
		          LHS.asset_make AS asset_make,
		          LHS.asset_model AS asset_model,
		          LHS.asset_acquired_date AS asset_acquired_date,
		          LHS.asset_disposed_date AS asset_disposed_date,
		          LHS.other_asset_details AS other_asset_details,
		          LHS.part_id AS part_id,
		          LHS.fault_log_entry_id AS fault_log_entry_id,
		          LHS.recorded_by_staff_id AS recorded_by_staff_id,
		          LHS.fault_log_entry_datetime AS fault_log_entry_datetime,
		          LHS.fault_description AS fault_description,
		          LHS.other_fault_details AS other_fault_details,
		          RHS.asset_disposed_date AS asset_disposed_date_other
		   FROM
		     (SELECT LHS.asset_id AS asset_id,
		             LHS.maintenance_contract_id AS maintenance_contract_id,
		             LHS.supplier_company_id AS supplier_company_id,
		             LHS.asset_details AS asset_details,
		             LHS.asset_make AS asset_make,
		             LHS.asset_model AS asset_model,
		             LHS.asset_acquired_date AS asset_acquired_date,
		             LHS.asset_disposed_date AS asset_disposed_date,
		             LHS.other_asset_details AS other_asset_details,
		             LHS.part_id AS part_id,
		             RHS.fault_log_entry_id AS fault_log_entry_id,
		             RHS.recorded_by_staff_id AS recorded_by_staff_id,
		             RHS.fault_log_entry_datetime AS fault_log_entry_datetime,
		             RHS.fault_description AS fault_description,
		             RHS.other_fault_details AS other_fault_details
		      FROM
		        (SELECT LHS.asset_id AS asset_id,
		                LHS.maintenance_contract_id AS maintenance_contract_id,
		                LHS.supplier_company_id AS supplier_company_id,
		                LHS.asset_details AS asset_details,
		                LHS.asset_make AS asset_make,
		                LHS.asset_model AS asset_model,
		                LHS.asset_acquired_date AS asset_acquired_date,
		                LHS.asset_disposed_date AS asset_disposed_date,
		                LHS.other_asset_details AS other_asset_details,
		                RHS.part_id AS part_id
		         FROM assets AS LHS
		         INNER JOIN asset_parts AS RHS ON (LHS.asset_id = RHS.asset_id)) AS LHS
		      INNER JOIN fault_log AS RHS ON (LHS.asset_id = RHS.asset_id)) AS LHS
		   INNER JOIN
		     (SELECT asset_disposed_date,
		             asset_model,
		             COUNT() AS n
		      FROM
		        (SELECT LHS.asset_id AS asset_id,
		                LHS.maintenance_contract_id AS maintenance_contract_id,
		                LHS.supplier_company_id AS supplier_company_id,
		                LHS.asset_details AS asset_details,
		                LHS.asset_make AS asset_make,
		                LHS.asset_model AS asset_model,
		                LHS.asset_acquired_date AS asset_acquired_date,
		                LHS.asset_disposed_date AS asset_disposed_date,
		                LHS.other_asset_details AS other_asset_details,
		                LHS.part_id AS part_id,
		                RHS.fault_log_entry_id AS fault_log_entry_id,
		                RHS.recorded_by_staff_id AS recorded_by_staff_id,
		                RHS.fault_log_entry_datetime AS fault_log_entry_datetime,
		                RHS.fault_description AS fault_description,
		                RHS.other_fault_details AS other_fault_details
		         FROM
		           (SELECT LHS.asset_id AS asset_id,
		                   LHS.maintenance_contract_id AS maintenance_contract_id,
		                   LHS.supplier_company_id AS supplier_company_id,
		                   LHS.asset_details AS asset_details,
		                   LHS.asset_make AS asset_make,
		                   LHS.asset_model AS asset_model,
		                   LHS.asset_acquired_date AS asset_acquired_date,
		                   LHS.asset_disposed_date AS asset_disposed_date,
		                   LHS.other_asset_details AS other_asset_details,
		                   RHS.part_id AS part_id
		            FROM assets AS LHS
		            INNER JOIN asset_parts AS RHS ON (LHS.asset_id = RHS.asset_id)) AS LHS
		         INNER JOIN fault_log AS RHS ON (LHS.asset_id = RHS.asset_id))
		      GROUP BY asset_disposed_date,
		               asset_model) AS RHS ON (LHS.part_id = RHS.n
		                                       AND LHS.asset_model = RHS.asset_model))
		ORDER BY asset_id

	   asset_id asset_details
	0         9  dell laptop2
	1         9  dell laptop2
	2         9  dell laptop2
	3         9  dell laptop2
	4         9  dell laptop2
Wrong output for base solution in instance spider/assets_maintenance/0029 (2537)
	EXPECTED OUTPUT ====

		SELECT gender
		FROM staff
		GROUP BY gender
		ORDER BY count(*) DESC
		LIMIT 1

	  gender
	0      1
	ACTUAL OUTPUT ====

		
		SELECT gender
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT gender,
		                other_staff_details,
		                COUNT() AS n
		         FROM staff
		         GROUP BY gender,
		                  other_staff_details)
		      ORDER BY other_staff_details)
		   LIMIT 1)

	  gender
	0      0
Wrong output for fuzzied solution in instance spider/assets_maintenance/0010 (2538)
	EXPECTED OUTPUT ====

		SELECT T1.part_name,
		       count(*)
		FROM Parts AS T1
		JOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id
		GROUP BY T1.part_name

	      part_name  count(*)
	0  FIymiddlejv3       108
	1   middle3UNZE       124
	2        middle       201
	3         middl       217
	ACTUAL OUTPUT ====

		
		SELECT part_name,
		       n AS count___
		FROM
		  (SELECT chargeable_yn,
		          part_name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.part_id AS part_id,
		             LHS.part_name AS part_name,
		             LHS.chargeable_yn AS chargeable_yn,
		             LHS.chargeable_amount AS chargeable_amount,
		             LHS.other_part_details AS other_part_details,
		             RHS.asset_id AS asset_id
		      FROM parts AS LHS
		      INNER JOIN asset_parts AS RHS ON (LHS.part_id = RHS.part_id))
		   GROUP BY chargeable_yn,
		            part_name)
		ORDER BY part_name

	      part_name  count___
	0        middle        98
	1        middle       103
	2         middl       104
	3  FIymiddlejv3       108
	4         middl       113
	5   middle3UNZE       124
Wrong output for fuzzied solution in instance spider/company_office/0017 (2541)
	EXPECTED OUTPUT ====

		SELECT name
		FROM buildings
		WHERE id NOT IN
		    (SELECT building_id
		     FROM Office_locations)

	                            name
	0       Ritz-Carlton Mexico City
	1  Ritz-Carlton Mexico CityrUi)7
	2             Torre New York Lif
	3        itz-Carlton Mexico City
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM buildings AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT id,
		                  name,
		                  city,
		                  height,
		                  stories,
		                  status,
		                  company_id,
		                  move_in_year,
		                  id AS building_id
		           FROM
		             (SELECT LHS.id AS id,
		                     LHS.name AS name,
		                     LHS.city AS city,
		                     LHS.height AS height,
		                     LHS.stories AS stories,
		                     LHS.status AS status,
		                     RHS.company_id AS company_id,
		                     RHS.move_in_year AS move_in_year
		              FROM buildings AS LHS
		              INNER JOIN office_locations AS RHS ON (LHS.id = RHS.building_id))) AS RHS
		        WHERE (LHS.city = RHS.city
		               AND LHS.stories = RHS.stories) ))
		ORDER BY name

	                            name
	0       Ritz-Carlton Mexico City
	1  Ritz-Carlton Mexico CityrUi)7
	2        itz-Carlton Mexico City
No solution for instance spider/company_office/0012 (2547)
Wrong output for base solution in instance spider/company_office/0005 (2549)
	EXPECTED OUTPUT ====

	   avg_profits_billion_
	0             17.063158
	ACTUAL OUTPUT ====

		SELECT avg(Profits_billion)
		FROM Companies

	   avg(profits_billion)
	0             17.063158
Wrong output for ground truth in instance spider/company_office/0005 (2549)
Wrong output for fuzzied solution in instance spider/company_office/0016 (2550)
	EXPECTED OUTPUT ====

		SELECT Industry
		FROM Companies
		GROUP BY Industry
		ORDER BY COUNT(*) DESC
		LIMIT 1

	       industry
	0  BankingBIQ)G
	ACTUAL OUTPUT ====

		
		SELECT industry
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT industry,
		                market_value_billion,
		                COUNT() AS n
		         FROM companies
		         GROUP BY industry,
		                  market_value_billion)
		      ORDER BY industry)
		   LIMIT 1)

	       industry
	0  9rnPfBanking
Wrong output for fuzzied solution in instance spider/company_office/0018 (2551)
	EXPECTED OUTPUT ====

		SELECT Industry
		FROM Companies
		WHERE Headquarters = "USA" INTERSECT
		  SELECT Industry
		  FROM Companies WHERE Headquarters = "China"

	Empty DataFrame
	Columns: [industry]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `industry`
		FROM `companies`
		WHERE (`headquarters` != 'USA'
		       OR `headquarters` = 'China')
		ORDER BY industry

	       industry
	0  9rnPfBanking
	1       Banking
Wrong output for fuzzied solution in instance spider/company_office/0020 (2552)
	EXPECTED OUTPUT ====

		SELECT Headquarters
		FROM Companies
		GROUP BY Headquarters
		HAVING COUNT(*) > 2

	Empty DataFrame
	Columns: [headquarters]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT headquarters
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT headquarters,
		                industry,
		                COUNT() AS n
		         FROM companies
		         GROUP BY headquarters,
		                  industry)
		      ORDER BY n DESC)
		   LIMIT 2)

	        headquarters
	0                USA
	1  cPZNetherlandsKcu
Wrong output for fuzzied solution in instance spider/company_office/0019 (2553)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Companies
		WHERE Industry = "Banking"
		  OR Industry = "Conglomerate"

	   count(*)
	0        17
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT *
		   FROM `companies` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `companies`
		           WHERE (`industry` != 'Banking'
		                  AND `industry` != 'Conglomerate')) AS RHS
		        WHERE (LHS.assets_billion = RHS.assets_billion
		               AND LHS.market_value_billion = RHS.market_value_billion) ))
		ORDER BY count___

	   count___
	0        16
Error while executing solution for instance spider/company_office/0007 (2554)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT industry) OVER () AS count_distinct_industry_
FROM
  (SELECT id,
          industry,
          COUNT() AS n
   FROM companies
   GROUP BY id,
            industry)
ORDER BY count_distinct_industry_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/company_office/0001 (2555)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Companies

	   count(*)
	0        25
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT headquarters,
		          sales_billion,
		          COUNT() AS n
		   FROM companies
		   GROUP BY headquarters,
		            sales_billion)
		ORDER BY count___

	   count___
	0        23
Wrong output for fuzzied solution in instance spider/company_office/0009 (2557)
	EXPECTED OUTPUT ====

		SELECT Stories
		FROM buildings
		ORDER BY Height DESC
		LIMIT 1

	   stories
	0       59
	ACTUAL OUTPUT ====

		
		SELECT stories
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM buildings
		      ORDER BY name DESC)
		   LIMIT 1)

	   stories
	0       61
Wrong output for fuzzied solution in instance spider/company_office/0011 (2558)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Office_locations AS T1
		JOIN buildings AS T2 ON T1.building_id = T2.id
		JOIN Companies AS T3 ON T1.company_id = T3.id
		GROUP BY T1.building_id
		HAVING COUNT(*) > 1

	                                        name
	0     SwZfsK v7LGeY sPv5Yq)kYHY9eLuIXJppn6t6
	1                      19SejdVFtBY3I1R8Rkhr7
	2                19SejdVFtBY3I1R8Rkhr7wxJy5Z
	3                                Reforma 432
	4                                Reforma 432
	5                                Reforma 432
	6                                Reforma 432
	7                                 Reforma 90
	8                                 Reforma 90
	9   Residencial Vidalta Torre Altaire 3OrdWh
	10                             Torre Mitikah
	11                        Torre MitikahgJNG5
	12                        Torre New York Lif
	13                          aD8TqReforma 432
	14                                eforma 432
	15                              orre Mitikah
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.city AS city,
		          LHS.height AS height,
		          LHS.stories AS stories,
		          LHS.status AS status,
		          RHS.id AS id_other,
		          RHS.name AS name_other,
		          RHS.headquarters AS headquarters,
		          RHS.industry AS industry,
		          RHS.sales_billion AS sales_billion,
		          RHS.profits_billion AS profits_billion,
		          RHS.assets_billion AS assets_billion,
		          RHS.market_value_billion AS market_value_billion,
		          RHS.n AS n
		   FROM buildings AS LHS
		   INNER JOIN
		     (SELECT LHS.id AS id,
		             LHS.name AS name,
		             LHS.headquarters AS headquarters,
		             LHS.industry AS industry,
		             LHS.sales_billion AS sales_billion,
		             LHS.profits_billion AS profits_billion,
		             LHS.assets_billion AS assets_billion,
		             LHS.market_value_billion AS market_value_billion,
		             RHS.building_id AS building_id,
		             RHS.n AS n
		      FROM companies AS LHS
		      CROSS JOIN
		        (SELECT *
		         FROM
		           (SELECT building_id,
		                   COUNT() AS n
		            FROM office_locations
		            GROUP BY building_id)
		         WHERE (n > 1)) AS RHS) AS RHS ON (LHS.id = RHS.building_id))
		ORDER BY name

	                                        name
	0     SwZfsK v7LGeY sPv5Yq)kYHY9eLuIXJppn6t6
	1                      19SejdVFtBY3I1R8Rkhr7
	2                19SejdVFtBY3I1R8Rkhr7wxJy5Z
	3                                Reforma 432
	4                                 Reforma 90
	5   Residencial Vidalta Torre Altaire 3OrdWh
	6                              Torre Mitikah
	7                         Torre MitikahgJNG5
	8                         Torre New York Lif
	9                           aD8TqReforma 432
	10                                eforma 432
	11                              orre Mitikah
Error while executing solution for instance spider/company_office/0010 (2559)

The column label 'name' is not unique.
Error while checking ground truth in instance spider/company_office/0010 (2559)
Wrong output for fuzzied solution in instance spider/college_1/0056 (2560)
	EXPECTED OUTPUT ====

		SELECT T1.crs_code
		FROM CLASS AS T1
		JOIN enroll AS T2 ON T1.class_code = T2.class_code
		JOIN student AS T3 ON T3.stu_num = T2.stu_num
		WHERE T3.stu_lname = 'Smithson'

	          crs_code
	0       sRoWQM-261
	1     (FfZGCIS-220
	2     (FfZGCIS-220
	3     (FfZGCIS-220
	4      0bdE1QM-261
	..             ...
	181  z03CIS-42049H
	182  z03CIS-42049H
	183  z03CIS-42049H
	184   zhzmACIS-220
	185   zhzmACIS-220
	
	[186 rows x 1 columns]
	ACTUAL OUTPUT ====

		
		SELECT `crs_code`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `class` AS `LHS`
		      WHERE EXISTS
		          (SELECT 1
		           FROM `enroll` AS `RHS`
		           WHERE (`LHS`.`class_code` = `RHS`.`class_code`) )) AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `student`
		           WHERE (`stu_lname` = 'Smithson')) AS RHS
		        WHERE (LHS.prof_num = RHS.prof_num) ))
		ORDER BY crs_code

	         crs_code
	0      sRoWQM-261
	1      sRoWQM-261
	2      sRoWQM-261
	3      sRoWQM-261
	4    (FfZGCIS-220
	..            ...
	570  zhzmACIS-220
	571  zhzmACIS-220
	572  zhzmACIS-220
	573  zhzmACIS-220
	574  zhzmACIS-220
	
	[575 rows x 1 columns]
Error while executing solution for instance spider/college_1/0002 (2564)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `prof_num`) OVER () AS `count_distinct_prof_num_`
FROM `class`
WHERE (`crs_code` = 'ACCT-211')
ORDER BY count_distinct_prof_num_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/college_1/0036 (2565)
	EXPECTED OUTPUT ====

		SELECT T3.stu_fname
		FROM CLASS AS T1
		JOIN enroll AS T2 ON T1.class_code = T2.class_code
		JOIN student AS T3 ON T2.stu_num = T3.stu_num
		WHERE T1.crs_code = 'ACCT-211'

	        stu_fname
	0             Joh
	1            John
	2            John
	3            John
	4            John
	5            John
	6            John
	7       JohnW9lnT
	8       JohnW9lnT
	9         Juliett
	10       Juliette
	11       Juliette
	12       Juliette
	13  JulietteipdZS
	14            ohn
	15        uliette
	16        uliette
	ACTUAL OUTPUT ====

		
		SELECT `stu_fname`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `student` AS `LHS`
		      WHERE EXISTS
		          (SELECT 1
		           FROM `enroll` AS `RHS`
		           WHERE (`LHS`.`stu_num` = `RHS`.`stu_num`) )) AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `class`
		           WHERE (`crs_code` != 'ACCT-211')) AS RHS
		        WHERE (LHS.prof_num = RHS.prof_num) ))
		ORDER BY stu_fname

	        stu_fname
	0             Joh
	1            John
	2            John
	3            John
	4       JohnW9lnT
	5         Juliett
	6        Juliette
	7        Juliette
	8        Juliette
	9   JulietteipdZS
	10     dPyJohnXwt
	11            ohn
	12      rDESTJohn
	13        uliette
	14        uliette
No solution for instance spider/college_1/0075 (2566)
Wrong output for fuzzied solution in instance spider/college_1/0057 (2567)
	EXPECTED OUTPUT ====

		SELECT T4.crs_description,
		       T4.crs_credit
		FROM CLASS AS T1
		JOIN enroll AS T2 ON T1.class_code = T2.class_code
		JOIN student AS T3 ON T3.stu_num = T2.stu_num
		JOIN course AS T4 ON T4.crs_code = T1.crs_code
		WHERE T3.stu_lname = 'Smithson'

	         crs_description  crs_credit
	0    (eJAccounting IIRX0        2.98
	1    (eJAccounting IIRX0        2.98
	2    (eJAccounting IIRX0        2.98
	3    (eJAccounting IIRX0        2.98
	4          Accounting II        2.98
	..                   ...         ...
	181        Accounting II        4.02
	182  OAWAccounting II3Y8        4.02
	183  OAWAccounting II3Y8        4.02
	184  OAWAccounting II3Y8        4.02
	185  OAWAccounting II3Y8        4.02
	
	[186 rows x 2 columns]
	ACTUAL OUTPUT ====

		
		SELECT `crs_description`,
		       `crs_credit`
		FROM
		  (SELECT `LHS`.`class_code` AS `class_code`,
		          `LHS`.`crs_code` AS `crs_code`,
		          `LHS`.`class_section` AS `class_section`,
		          `LHS`.`class_time` AS `class_time`,
		          `LHS`.`class_room` AS `class_room`,
		          `LHS`.`prof_num` AS `prof_num`,
		          `LHS`.`dept_code` AS `dept_code`,
		          `LHS`.`crs_description` AS `crs_description`,
		          `LHS`.`crs_credit` AS `crs_credit`,
		          `LHS`.`stu_num` AS `stu_num`,
		          `LHS`.`enroll_grade` AS `enroll_grade`
		   FROM
		     (SELECT `LHS`.`class_code` AS `class_code`,
		             `LHS`.`crs_code` AS `crs_code`,
		             `LHS`.`class_section` AS `class_section`,
		             `LHS`.`class_time` AS `class_time`,
		             `LHS`.`class_room` AS `class_room`,
		             `LHS`.`prof_num` AS `prof_num`,
		             `LHS`.`dept_code` AS `dept_code`,
		             `LHS`.`crs_description` AS `crs_description`,
		             `LHS`.`crs_credit` AS `crs_credit`,
		             `RHS`.`stu_num` AS `stu_num`,
		             `RHS`.`enroll_grade` AS `enroll_grade`
		      FROM
		        (SELECT `LHS`.`class_code` AS `class_code`,
		                `LHS`.`crs_code` AS `crs_code`,
		                `LHS`.`class_section` AS `class_section`,
		                `LHS`.`class_time` AS `class_time`,
		                `LHS`.`class_room` AS `class_room`,
		                `LHS`.`prof_num` AS `prof_num`,
		                `RHS`.`dept_code` AS `dept_code`,
		                `RHS`.`crs_description` AS `crs_description`,
		                `RHS`.`crs_credit` AS `crs_credit`
		         FROM `class` AS `LHS`
		         INNER JOIN `course` AS `RHS` ON (`LHS`.`crs_code` = `RHS`.`crs_code`)) AS `LHS`
		      INNER JOIN `enroll` AS `RHS` ON (`LHS`.`class_code` = `RHS`.`class_code`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `enroll` AS `LHS`
		      WHERE EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM `student`
		              WHERE (`stu_lname` = 'Smithson')) AS RHS
		           WHERE (LHS.stu_num = RHS.stu_num) )) AS RHS ON (LHS.class_code = RHS.class_code
		                                                           AND LHS.stu_num = RHS.stu_num
		                                                           AND LHS.enroll_grade = RHS.enroll_grade))
		ORDER BY crs_description

	         crs_description  crs_credit
	0    (eJAccounting IIRX0        2.98
	1    (eJAccounting IIRX0        2.98
	2    (eJAccounting IIRX0        2.98
	3    (eJAccounting IIRX0        2.98
	4          Accounting II        2.98
	..                   ...         ...
	189        Accounting II        4.02
	190  OAWAccounting II3Y8        4.02
	191  OAWAccounting II3Y8        4.02
	192  OAWAccounting II3Y8        4.02
	193  OAWAccounting II3Y8        4.02
	
	[194 rows x 2 columns]
Wrong output for fuzzied solution in instance spider/college_1/0052 (2569)
	EXPECTED OUTPUT ====

		SELECT T1.emp_fname
		FROM employee AS T1
		JOIN professor AS T2 ON T1.emp_num = T2.emp_num
		JOIN department AS T3 ON T2.dept_code = T3.dept_code
		WHERE T3.dept_name = 'History'
		EXCEPT
		SELECT T4.emp_fname
		FROM employee AS T4
		JOIN CLASS AS T5 ON T4.emp_num = T5.prof_num

	Empty DataFrame
	Columns: [emp_fname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `emp_fname`
		FROM
		  (SELECT `LHS`.`class_code` AS `class_code`,
		          `LHS`.`crs_code` AS `crs_code`,
		          `LHS`.`class_section` AS `class_section`,
		          `LHS`.`class_time` AS `class_time`,
		          `LHS`.`class_room` AS `class_room`,
		          `LHS`.`prof_num` AS `prof_num`,
		          `LHS`.`emp_num` AS `emp_num`,
		          `LHS`.`emp_lname` AS `emp_lname`,
		          `LHS`.`emp_fname` AS `emp_fname`,
		          `LHS`.`emp_initial` AS `emp_initial`,
		          `LHS`.`emp_jobcode` AS `emp_jobcode`,
		          `LHS`.`emp_hiredate` AS `emp_hiredate`,
		          `LHS`.`emp_dob` AS `emp_dob`,
		          `RHS`.`dept_code` AS `dept_code`,
		          `RHS`.`prof_office` AS `prof_office`,
		          `RHS`.`prof_extension` AS `prof_extension`,
		          `RHS`.`prof_high_degree` AS `prof_high_degree`
		   FROM
		     (SELECT `LHS`.`class_code` AS `class_code`,
		             `LHS`.`crs_code` AS `crs_code`,
		             `LHS`.`class_section` AS `class_section`,
		             `LHS`.`class_time` AS `class_time`,
		             `LHS`.`class_room` AS `class_room`,
		             `LHS`.`prof_num` AS `prof_num`,
		             `RHS`.`emp_num` AS `emp_num`,
		             `RHS`.`emp_lname` AS `emp_lname`,
		             `RHS`.`emp_fname` AS `emp_fname`,
		             `RHS`.`emp_initial` AS `emp_initial`,
		             `RHS`.`emp_jobcode` AS `emp_jobcode`,
		             `RHS`.`emp_hiredate` AS `emp_hiredate`,
		             `RHS`.`emp_dob` AS `emp_dob`
		      FROM `class` AS `LHS`
		      CROSS JOIN `employee` AS `RHS`) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `professor` AS `LHS`
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM `department`
		              WHERE (`dept_name` != 'History')) AS RHS
		           WHERE (LHS.dept_code = RHS.dept_code) )) AS RHS ON (LHS.emp_num = RHS.emp_num))
		ORDER BY emp_fname

	      emp_fname
	0   (4WvDGeorge
	1  B4HGeraldQ(o
	2        George
	3   George3UNZE
	4        Gerald
	5        Weston
	6         Willa
	7         eston
Wrong output for fuzzied solution in instance spider/college_1/0008 (2570)
	EXPECTED OUTPUT ====

		SELECT dept_address
		FROM department
		WHERE dept_name = 'History'

	       dept_address
	0  AAK 297, Box 438
	1   BBG 185, Box 12
	2  BBG 185, Box 128
	3   KLR 284, Box 63
	4   KLR 284, Box 63
	ACTUAL OUTPUT ====

		
		SELECT `dept_address`
		FROM
		  (SELECT `dept_address`
		   FROM `department`
		   WHERE (`dept_name` = 'History') INTERSECT
		     SELECT dept_address
		     FROM department)
		ORDER BY dept_address

	       dept_address
	0  AAK 297, Box 438
	1   BBG 185, Box 12
	2  BBG 185, Box 128
	3   KLR 284, Box 63
No solution for instance spider/college_1/0076 (2573)
Error while executing solution for instance spider/college_1/0027 (2575)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT school_code) OVER () AS count_distinct_school_code_
FROM
  (SELECT emp_num,
          school_code,
          COUNT(DISTINCT school_code) AS n_distinct
   FROM department
   GROUP BY emp_num,
            school_code)
ORDER BY count_distinct_school_code_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/college_1/0048 (2576)
	EXPECTED OUTPUT ====

		SELECT DISTINCT stu_fname
		FROM student AS T1
		JOIN enroll AS T2 ON T1.stu_num = T2.stu_num
		WHERE enroll_grade = 'C'

	         stu_fname
	0   1jrJuliette4)y
	1    2wKdpJuliette
	2              Joh
	3             John
	4        John5OKHg
	5        JohnZSRNH
	6         Juliette
	7    Julietteyar)M
	8       dPyJohnXwt
	9    itW9lJuliette
	10   tfhFzJuliette
	ACTUAL OUTPUT ====

		
		SELECT `stu_fname`
		FROM
		  (SELECT *
		   FROM `student` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `enroll`
		           WHERE (`enroll_grade` != 'C')) AS RHS
		        WHERE (LHS.stu_num = RHS.stu_num) ))
		ORDER BY stu_fname

	         stu_fname
	0   1jrJuliette4)y
	1    2wKdpJuliette
	2              Joh
	3              Joh
	4             John
	5             John
	6        John5OKHg
	7        JohnZSRNH
	8         Juliette
	9         Juliette
	10        Juliette
	11   Julietteyar)M
	12      dPyJohnXwt
	13   itW9lJuliette
	14   tfhFzJuliette
No solution for instance spider/college_1/0072 (2580)
Wrong output for fuzzied solution in instance spider/college_1/0013 (2582)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT dept_name),
		       school_code
		FROM department
		GROUP BY school_code
		HAVING count(DISTINCT dept_name) < 5

	    count(distinct dept_name)  school_code
	0                           1     3uHbSx 7
	1                           1           6(
	2                           1   A&SCI6uXwi
	3                           1   A&SCIaz7Rg
	4                           1   A&SCIcYhK0
	5                           1   A&SCImY3Um
	6                           1           BU
	7                           1     BUSX3rjh
	8                           1        BkLet
	9                           1   HpS8tA&SCI
	10                          1         Kh8q
	11                          1    Kh8qKh6TM
	12                          1    O6UBUSWd)
	13                          1  OI0A&SCIhcS
	14                          1  RshA&SCIGcO
	15                          1     T7nLmBUS
	16                          1           US
	17                          1   YaS1VA&SCI
	18                          1  lGYA&SCINUo
	19                          1        oKphj
	20                          1    tTxNfGzKd
	21                          1          x 7
	22                          1  x8yA&SCI36N
	23                          1         yrfe
	24                          1  zFbA&SCIz4C
	25                          2         &SCI
	26                          3          BUS
	ACTUAL OUTPUT ====

		
		SELECT n AS count_distinct_dept_name_,
		       school_code
		FROM
		  (SELECT school_code,
		          COUNT() AS n
		   FROM department
		   GROUP BY school_code)
		WHERE (n <= 5)
		ORDER BY count_distinct_dept_name_

	    count_distinct_dept_name_  school_code
	0                           1     3uHbSx 7
	1                           1           6(
	2                           1   A&SCI6uXwi
	3                           1   A&SCIaz7Rg
	4                           1   A&SCIcYhK0
	5                           1   A&SCImY3Um
	6                           1           BU
	7                           1     BUSX3rjh
	8                           1        BkLet
	9                           1   HpS8tA&SCI
	10                          1         Kh8q
	11                          1    Kh8qKh6TM
	12                          1    O6UBUSWd)
	13                          1  OI0A&SCIhcS
	14                          1  RshA&SCIGcO
	15                          1     T7nLmBUS
	16                          1           US
	17                          1   YaS1VA&SCI
	18                          1  lGYA&SCINUo
	19                          1        oKphj
	20                          1    tTxNfGzKd
	21                          1          x 7
	22                          1  x8yA&SCI36N
	23                          1         yrfe
	24                          1  zFbA&SCIz4C
	25                          2         &SCI
	26                          3          BUS
	27                          5         A&SC
Wrong output for fuzzied solution in instance spider/college_1/0006 (2583)
	EXPECTED OUTPUT ====

		SELECT school_code
		FROM department
		WHERE dept_name = "Accounting"

	    school_code
	0         A&SCI
	1         A&SCI
	2         A&SCI
	3    A&SCIgJNG5
	4            BU
	5           BUS
	6           BUS
	7           BUS
	8           BUS
	9           BUS
	10           US
	11  cRcA&SCIwzH
	ACTUAL OUTPUT ====

		
		SELECT `school_code`
		FROM
		  (SELECT `school_code`
		   FROM `department` INTERSECT SELECT `school_code`
		   FROM `department`
		   WHERE (`dept_name` = 'Accounting'))
		ORDER BY school_code

	   school_code
	0        A&SCI
	1   A&SCIgJNG5
	2           BU
	3          BUS
	4           US
	5  cRcA&SCIwzH
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_26476.sqlite3'
Wrong output for fuzzied solution in instance spider/college_1/0064 (2585)
	EXPECTED OUTPUT ====

		SELECT T2.dept_name
		FROM student AS T1
		JOIN department AS T2 ON T1.dept_code = T2.dept_code
		ORDER BY stu_gpa
		LIMIT 1

	   dept_name
	0  ccounting
	ACTUAL OUTPUT ====

		
		SELECT dept_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.dept_code AS dept_code,
		                LHS.dept_name AS dept_name,
		                LHS.school_code AS school_code,
		                LHS.emp_num AS emp_num,
		                LHS.dept_address AS dept_address,
		                LHS.dept_extension AS dept_extension,
		                RHS.stu_num AS stu_num,
		                RHS.stu_lname AS stu_lname,
		                RHS.stu_fname AS stu_fname,
		                RHS.stu_init AS stu_init,
		                RHS.stu_dob AS stu_dob,
		                RHS.stu_hrs AS stu_hrs,
		                RHS.stu_class AS stu_class,
		                RHS.stu_gpa AS stu_gpa,
		                RHS.stu_transfer AS stu_transfer,
		                RHS.stu_phone AS stu_phone,
		                RHS.prof_num AS prof_num
		         FROM department AS LHS
		         INNER JOIN student AS RHS ON (LHS.dept_code = RHS.dept_code))
		      ORDER BY dept_code)
		   LIMIT 1)

	     dept_name
	0  Mathematics
Wrong output for fuzzied solution in instance spider/college_1/0012 (2587)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT dept_name),
		       school_code
		FROM department
		GROUP BY school_code

	    count(distinct dept_name)  school_code
	0                           1         &SCI
	1                           1  237A&SCIxTz
	2                           1     3Yx74BUS
	3                           1   4vVgVA&SCI
	4                           1   9OoLJA&SCI
	5                           1   A&SCIONOl8
	6                           1   A&SCIPCOHG
	7                           1   A&SCIiBah1
	8                           1   AhFMPA&SCI
	9                           1           BU
	10                          1     BUSRQcbB
	11                          1     BUSvQqxN
	12                          1  GDxA&SCIAYh
	13                          1  Nv)A&SCINAK
	14                          1           US
	15                          1   eGyPSA&SCI
	16                          1     srAcuBUS
	17                          3         A&SC
	18                          5          BUS
	19                          6        A&SCI
	ACTUAL OUTPUT ====

		
		SELECT n AS count_distinct_dept_name_,
		       school_code
		FROM
		  (SELECT school_code,
		          COUNT() AS n
		   FROM department
		   GROUP BY school_code)
		ORDER BY count_distinct_dept_name_

	    count_distinct_dept_name_  school_code
	0                           1         &SCI
	1                           1  237A&SCIxTz
	2                           1     3Yx74BUS
	3                           1   4vVgVA&SCI
	4                           1   9OoLJA&SCI
	5                           1   A&SCIONOl8
	6                           1   A&SCIPCOHG
	7                           1   A&SCIiBah1
	8                           1   AhFMPA&SCI
	9                           1           BU
	10                          1     BUSRQcbB
	11                          1     BUSvQqxN
	12                          1  GDxA&SCIAYh
	13                          1  Nv)A&SCINAK
	14                          1           US
	15                          1   eGyPSA&SCI
	16                          1     srAcuBUS
	17                          3         A&SC
	18                          6          BUS
	19                         10        A&SCI
No solution for instance spider/college_1/0078 (2588)
Wrong output for base solution in instance spider/college_1/0026 (2589)
	EXPECTED OUTPUT ====

	                dept_name  avg_t1_stu_gpa_
	0  Computer Info. Systems             3.18
	ACTUAL OUTPUT ====

		SELECT T2.dept_name,
		       avg(T1.stu_gpa)
		FROM student AS T1
		JOIN department AS T2 ON T1.dept_code = T2.dept_code
		GROUP BY T1.dept_code
		ORDER BY avg(T1.stu_gpa) DESC
		LIMIT 1

	                dept_name  avg(t1.stu_gpa)
	0  Computer Info. Systems             3.18
Wrong output for ground truth in instance spider/college_1/0026 (2589)
No solution for instance spider/college_1/0071 (2590)
Wrong output for base solution in instance spider/college_1/0005 (2592)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM employee AS T1
		JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM
		WHERE T1.EMP_LNAME = 'Graztevski'

	   count(*)
	0         3
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `class_code`,
		          `class_room`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`class_code` AS `class_code`,
		                `LHS`.`crs_code` AS `crs_code`,
		                `LHS`.`class_section` AS `class_section`,
		                `LHS`.`class_time` AS `class_time`,
		                `LHS`.`class_room` AS `class_room`,
		                `LHS`.`prof_num` AS `prof_num`,
		                `LHS`.`emp_num` AS `emp_num`,
		                `LHS`.`emp_lname` AS `emp_lname`,
		                `LHS`.`emp_fname` AS `emp_fname`,
		                `LHS`.`emp_initial` AS `emp_initial`,
		                `LHS`.`emp_jobcode` AS `emp_jobcode`,
		                `LHS`.`emp_hiredate` AS `emp_hiredate`,
		                `LHS`.`emp_dob` AS `emp_dob`,
		                `RHS`.`n` AS `n`
		         FROM
		           (SELECT `LHS`.`class_code` AS `class_code`,
		                   `LHS`.`crs_code` AS `crs_code`,
		                   `LHS`.`class_section` AS `class_section`,
		                   `LHS`.`class_time` AS `class_time`,
		                   `LHS`.`class_room` AS `class_room`,
		                   `LHS`.`prof_num` AS `prof_num`,
		                   `RHS`.`emp_num` AS `emp_num`,
		                   `RHS`.`emp_lname` AS `emp_lname`,
		                   `RHS`.`emp_fname` AS `emp_fname`,
		                   `RHS`.`emp_initial` AS `emp_initial`,
		                   `RHS`.`emp_jobcode` AS `emp_jobcode`,
		                   `RHS`.`emp_hiredate` AS `emp_hiredate`,
		                   `RHS`.`emp_dob` AS `emp_dob`
		            FROM `class` AS `LHS`
		            CROSS JOIN `employee` AS `RHS`) AS `LHS`
		         INNER JOIN
		           (SELECT `emp_hiredate`,
		                   `emp_lname`,
		                   COUNT() AS `n`
		            FROM `employee`
		            GROUP BY `emp_hiredate`,
		                     `emp_lname`) AS `RHS` ON (`LHS`.`emp_lname` = `RHS`.`emp_lname`
		                                               AND `LHS`.`emp_hiredate` = `RHS`.`emp_hiredate`))
		      WHERE (`emp_lname` != 'Graztevski'))
		   GROUP BY class_code,
		            class_room)
		ORDER BY count___

	   count___
	0        36
Wrong output for fuzzied solution in instance spider/college_1/0066 (2594)
	EXPECTED OUTPUT ====

		SELECT T2.dept_name,
		       T2.dept_address
		FROM student AS T1
		JOIN department AS T2 ON T1.dept_code = T2.dept_code
		GROUP BY T1.dept_code
		ORDER BY count(*) DESC
		LIMIT 1

	    dept_name          dept_address
	0  Accounting  BY3I1KLR 211, Box 52
	ACTUAL OUTPUT ====

		
		SELECT dept_name,
		       dept_address
		FROM
		  (SELECT LHS.dept_code AS dept_code,
		          LHS.dept_name AS dept_name,
		          LHS.school_code AS school_code,
		          LHS.emp_num AS emp_num,
		          LHS.dept_address AS dept_address,
		          LHS.dept_extension AS dept_extension,
		          RHS.stu_num AS stu_num,
		          RHS.stu_lname AS stu_lname,
		          RHS.stu_fname AS stu_fname,
		          RHS.stu_init AS stu_init,
		          RHS.stu_dob AS stu_dob,
		          RHS.stu_class AS stu_class,
		          RHS.stu_gpa AS stu_gpa,
		          RHS.stu_transfer AS stu_transfer,
		          RHS.stu_phone AS stu_phone,
		          RHS.prof_num AS prof_num,
		          RHS.n AS n
		   FROM department AS LHS
		   INNER JOIN
		     (SELECT stu_num,
		             stu_lname,
		             stu_fname,
		             stu_init,
		             stu_dob,
		             stu_hrs,
		             stu_class,
		             stu_gpa,
		             stu_transfer,
		             dept_code,
		             stu_phone,
		             prof_num,
		             COUNT(*) OVER () AS n
		      FROM student) AS RHS ON (LHS.emp_num = RHS.stu_hrs
		                                  AND LHS.dept_code = RHS.dept_code))
		ORDER BY dept_name

	Empty DataFrame
	Columns: [dept_name, dept_address]
	Index: []
Wrong output for base solution in instance spider/college_1/0062 (2595)
	EXPECTED OUTPUT ====

	   avg_t2_stu_gpa_
	0            3.055
	ACTUAL OUTPUT ====

		SELECT avg(T2.stu_gpa)
		FROM enroll AS T1
		JOIN student AS T2 ON T1.stu_num = T2.stu_num
		JOIN CLASS AS T3 ON T1.class_code = T3.class_code
		WHERE T3.crs_code = 'ACCT-211'

	   avg(t2.stu_gpa)
	0            3.055
Wrong output for ground truth in instance spider/college_1/0062 (2595)
No solution for instance spider/college_1/0050 (2596)
Wrong output for fuzzied solution in instance spider/college_1/0068 (2597)
	EXPECTED OUTPUT ====

		SELECT T1.emp_fname,
		       T2.prof_office
		FROM employee AS T1
		JOIN professor AS T2 ON T1.emp_num = T2.emp_num
		JOIN department AS T3 ON T3.dept_code = T2.dept_code
		WHERE T3.dept_name = 'History'
		  AND T2.prof_high_degree = 'Ph.D.'

	       emp_fname   prof_office
	0          Georg       DRE 102
	1          Georg       DRE 102
	2          Georg        RE 156
	3         George       AAK 160
	4         George       DRE 102
	5         George       DRE 156
	6         George       DRE 156
	7         George       DRE 156
	8         George  i(xBxDRE 156
	9    George3UNZE       DRE 156
	10        Gerald        DRE 10
	11        Gerald       DRE 102
	12        Gerald        DRE 15
	13   GeraldhA1fg        AK 160
	14   GeraldhA1fg       DRE 156
	15   GeraldhA1fg  DRE 156sWlrk
	16   GeraldhA1fg  z7pTCDRE 156
	17          Ralp  0MFqJDRE 156
	18          Ralp       DRE 156
	19         Ralph       AAK 160
	20         Ralph       DRE 102
	21         Ralph  DRE 102aPq)s
	22         Ralph       DRE 156
	23         Ralph        RE 156
	24         Westo       DRE 102
	25         Westo       DRE 156
	26         Westo       DRE 156
	27        Weston       DRE 156
	28  wS1GeorgehT        AAK 160
	29  wS1GeorgehT        AAK 160
	30  wS1GeorgehT         DRE 10
	31  wS1GeorgehT        DRE 156
	ACTUAL OUTPUT ====

		
		SELECT `emp_fname`,
		       `prof_office`
		FROM
		  (SELECT `LHS`.`emp_num` AS `emp_num`,
		          `LHS`.`emp_lname` AS `emp_lname`,
		          `LHS`.`emp_fname` AS `emp_fname`,
		          `LHS`.`emp_initial` AS `emp_initial`,
		          `LHS`.`emp_jobcode` AS `emp_jobcode`,
		          `LHS`.`emp_hiredate` AS `emp_hiredate`,
		          `LHS`.`emp_dob` AS `emp_dob`,
		          `RHS`.`dept_code` AS `dept_code`,
		          `RHS`.`dept_name` AS `dept_name`,
		          `RHS`.`school_code` AS `school_code`,
		          `RHS`.`dept_address` AS `dept_address`,
		          `RHS`.`dept_extension` AS `dept_extension`,
		          `RHS`.`prof_office` AS `prof_office`,
		          `RHS`.`prof_extension` AS `prof_extension`,
		          `RHS`.`prof_high_degree` AS `prof_high_degree`
		   FROM `employee` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`dept_code` AS `dept_code`,
		                `LHS`.`dept_name` AS `dept_name`,
		                `LHS`.`school_code` AS `school_code`,
		                `LHS`.`emp_num` AS `emp_num`,
		                `LHS`.`dept_address` AS `dept_address`,
		                `LHS`.`dept_extension` AS `dept_extension`,
		                `RHS`.`prof_office` AS `prof_office`,
		                `RHS`.`prof_extension` AS `prof_extension`,
		                `RHS`.`prof_high_degree` AS `prof_high_degree`
		         FROM `department` AS `LHS`
		         INNER JOIN `professor` AS `RHS` ON (`LHS`.`dept_code` = `RHS`.`dept_code`
		                                                AND `LHS`.`emp_num` = `RHS`.`emp_num`))
		      WHERE (`dept_name` = 'History'
		             AND `prof_high_degree` = 'Ph.D.')) AS RHS ON (LHS.emp_num = RHS.emp_num))
		ORDER BY emp_fname

	     emp_fname   prof_office
	0       Gerald        DRE 15
	1  GeraldhA1fg  DRE 156sWlrk
	2  GeraldhA1fg  z7pTCDRE 156
Wrong output for fuzzied solution in instance spider/college_1/0059 (2598)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM professor AS T1
		JOIN department AS T2 ON T1.dept_code = T2.dept_code
		WHERE T2.dept_name = 'Accounting'
		  OR T2.dept_name = 'Biology'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT *
		   FROM `professor` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `department`
		           WHERE (`dept_name` != 'Accounting'
		                  AND `dept_name` != 'Biology')) AS RHS
		        WHERE (LHS.dept_code = RHS.dept_code) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/college_1/0032 (2599)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT class_section)
		FROM CLASS
		WHERE crs_code = 'ACCT-211'

	   count(distinct class_section)
	0                              0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count_distinct_class_section_`
		FROM
		  (SELECT `crs_code`,
		          COUNT(DISTINCT `class_section`) AS `n_distinct`
		   FROM `class`
		   GROUP BY `crs_code`)
		WHERE (`crs_code` = 'ACCT-211')
		ORDER BY count_distinct_class_section_

	Empty DataFrame
	Columns: [count_distinct_class_section_]
	Index: []
Wrong output for fuzzied solution in instance spider/college_1/0041 (2603)
	EXPECTED OUTPUT ====

		SELECT T4.dept_name
		FROM CLASS AS T1
		JOIN enroll AS T2 ON T1.class_code = T2.class_code
		JOIN course AS T3 ON T1.crs_code = T3.crs_code
		JOIN department AS T4 ON T3.dept_code = T4.dept_code
		GROUP BY T3.dept_code
		ORDER BY count(*) DESC
		LIMIT 1

	     dept_name
	0  Mathematics
	ACTUAL OUTPUT ====

		
		SELECT dept_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT class_code,
		                crs_code,
		                class_section,
		                class_time,
		                class_room,
		                prof_num,
		                dept_code,
		                crs_description,
		                crs_credit,
		                dept_name,
		                school_code,
		                emp_num,
		                dept_address,
		                dept_extension,
		                stu_num,
		                enroll_grade,
		                COUNT(*) OVER () AS n
		         FROM
		           (SELECT LHS.class_code AS class_code,
		                   LHS.crs_code AS crs_code,
		                   LHS.class_section AS class_section,
		                   LHS.class_time AS class_time,
		                   LHS.class_room AS class_room,
		                   LHS.prof_num AS prof_num,
		                   LHS.dept_code AS dept_code,
		                   LHS.crs_description AS crs_description,
		                   LHS.crs_credit AS crs_credit,
		                   LHS.dept_name AS dept_name,
		                   LHS.school_code AS school_code,
		                   LHS.emp_num AS emp_num,
		                   LHS.dept_address AS dept_address,
		                   LHS.dept_extension AS dept_extension,
		                   RHS.stu_num AS stu_num,
		                   RHS.enroll_grade AS enroll_grade
		            FROM
		              (SELECT LHS.class_code AS class_code,
		                      LHS.crs_code AS crs_code,
		                      LHS.class_section AS class_section,
		                      LHS.class_time AS class_time,
		                      LHS.class_room AS class_room,
		                      LHS.prof_num AS prof_num,
		                      LHS.dept_code AS dept_code,
		                      LHS.crs_description AS crs_description,
		                      LHS.crs_credit AS crs_credit,
		                      RHS.dept_name AS dept_name,
		                      RHS.school_code AS school_code,
		                      RHS.emp_num AS emp_num,
		                      RHS.dept_address AS dept_address,
		                      RHS.dept_extension AS dept_extension
		               FROM
		                 (SELECT LHS.class_code AS class_code,
		                         LHS.crs_code AS crs_code,
		                         LHS.class_section AS class_section,
		                         LHS.class_time AS class_time,
		                         LHS.class_room AS class_room,
		                         LHS.prof_num AS prof_num,
		                         RHS.dept_code AS dept_code,
		                         RHS.crs_description AS crs_description,
		                         RHS.crs_credit AS crs_credit
		                  FROM class AS LHS
		                  INNER JOIN course AS RHS ON (LHS.crs_code = RHS.crs_code)) AS LHS
		               INNER JOIN department AS RHS ON (LHS.dept_code = RHS.dept_code)) AS LHS
		            INNER JOIN enroll AS RHS ON (LHS.class_code = RHS.class_code)))
		      ORDER BY class_code DESC)
		   LIMIT 1)

	   dept_name
	0  ccounting
No solution for instance spider/college_1/0051 (2604)
Wrong output for fuzzied solution in instance spider/college_1/0035 (2605)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM CLASS AS T1
		JOIN enroll AS T2 ON T1.class_code = T2.class_code
		WHERE T1.crs_code = 'ACCT-211'

	   count(*)
	0        17
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT `class_code`
		      FROM `enroll` INTERSECT SELECT `class_code`
		      FROM `class`
		      WHERE (`crs_code` != 'ACCT-211')))
		ORDER BY count___

	   count___
	0       373
Wrong output for fuzzied solution in instance spider/college_1/0020 (2606)
	EXPECTED OUTPUT ====

		SELECT emp_jobcode,
		       count(*)
		FROM employee
		GROUP BY emp_jobcode
		ORDER BY count(*) DESC
		LIMIT 1

	  emp_jobcode  count(*)
	0        PROF         6
	ACTUAL OUTPUT ====

		
		SELECT emp_jobcode,
		       n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT emp_jobcode,
		                COUNT() AS n
		         FROM employee
		         GROUP BY emp_jobcode)
		      ORDER BY n DESC)
		   LIMIT 1)

	  emp_jobcode  count___
	0        CUST         6
Wrong output for fuzzied solution in instance spider/college_1/0019 (2607)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.school_code
		FROM department AS T1
		JOIN professor AS T2 ON T1.dept_code = T2.dept_code
		GROUP BY T1.school_code

	    count(*)  school_code
	0          1         &SCI
	1          1   A&SCIOO1qw
	2          1     j7k9SBUS
	3          1  jdFGARvkufX
	4          2     XagoH16p
	5          2   A&SCI2aSoV
	6          2     BUST9 Gj
	7          2        C2mEG
	8          2   Qy3nLA&SCI
	9          2  WYoA&SCIRq(
	10         2         rz5W
	11         2    tT9BUS1Q2
	12         3     8IrFrBUS
	13         3         A&SC
	14         3   A&SCIfbUHr
	15         3         DIwA
	16         4     2vsE(BUS
	17         5  wa1A&SCIyIB
	18         7           US
	19        12           BU
	20        18        A&SCI
	21        42          BUS
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       school_code
		FROM
		  (SELECT school_code,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.dept_code AS dept_code,
		             LHS.school_code AS school_code,
		             LHS.n AS n,
		             RHS.emp_num AS emp_num,
		             RHS.prof_office AS prof_office,
		             RHS.prof_extension AS prof_extension,
		             RHS.prof_high_degree AS prof_high_degree
		      FROM
		        (SELECT dept_code,
		                school_code,
		                COUNT() AS n
		         FROM department
		         GROUP BY dept_code,
		                  school_code) AS LHS
		      LEFT JOIN professor AS RHS ON (LHS.dept_code = RHS.dept_code))
		   GROUP BY school_code)
		ORDER BY count___

	    count___  school_code
	0          1         &SCI
	1          1   A&SCIOO1qw
	2          1     j7k9SBUS
	3          1  jdFGARvkufX
	4          2     XagoH16p
	5          2   A&SCI2aSoV
	6          2     BUST9 Gj
	7          2        C2mEG
	8          2   Qy3nLA&SCI
	9          2  WYoA&SCIRq(
	10         2         rz5W
	11         2    tT9BUS1Q2
	12         3     8IrFrBUS
	13         3   A&SCIfbUHr
	14         3         DIwA
	15         4     2vsE(BUS
	16         4         A&SC
	17         5  wa1A&SCIyIB
	18         8           US
	19        12           BU
	20        21        A&SCI
	21        45          BUS
Wrong output for fuzzied solution in instance spider/college_1/0061 (2609)
	EXPECTED OUTPUT ====

		SELECT T1.stu_fname
		FROM student AS T1
		JOIN enroll AS T2 ON T1.stu_num = T2.stu_num
		JOIN CLASS AS T3 ON T2.class_code = T3.class_code
		JOIN course AS T4 ON T3.crs_code = T4.crs_code
		JOIN department AS T5 ON T5.dept_code = T4.dept_code
		WHERE T5.dept_name = 'Accounting' INTERSECT
		  SELECT T1.stu_fname
		  FROM student AS T1
		  JOIN enroll AS T2 ON T1.stu_num = T2.stu_num
		  JOIN CLASS AS T3 ON T2.class_code = T3.class_code
		  JOIN course AS T4 ON T3.crs_code = T4.crs_code
		  JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Computer Info. Systems'

	      stu_fname
	0        Gerald
	1   Geraldzc)NS
	2    Iv9JohnnTa
	3           Joh
	4          John
	5       Raphael
	6  ZGdQlRaphael
	7         erald
	8           ohn
	9  yH1GeraldhIn
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `stu_fname`
		FROM
		  (SELECT `LHS`.`class_code` AS `class_code`,
		          `LHS`.`stu_num` AS `stu_num`,
		          `LHS`.`enroll_grade` AS `enroll_grade`,
		          `LHS`.`stu_lname` AS `stu_lname`,
		          `LHS`.`stu_fname` AS `stu_fname`,
		          `LHS`.`stu_init` AS `stu_init`,
		          `LHS`.`stu_dob` AS `stu_dob`,
		          `LHS`.`stu_hrs` AS `stu_hrs`,
		          `LHS`.`stu_class` AS `stu_class`,
		          `LHS`.`stu_gpa` AS `stu_gpa`,
		          `LHS`.`stu_transfer` AS `stu_transfer`,
		          `LHS`.`dept_code` AS `dept_code`,
		          `LHS`.`stu_phone` AS `stu_phone`,
		          `LHS`.`prof_num` AS `prof_num`,
		          `LHS`.`dept_name` AS `dept_name`,
		          `LHS`.`school_code` AS `school_code`,
		          `LHS`.`emp_num` AS `emp_num`,
		          `LHS`.`dept_address` AS `dept_address`,
		          `LHS`.`dept_extension` AS `dept_extension`,
		          `RHS`.`crs_code` AS `crs_code`
		   FROM
		     (SELECT `LHS`.`class_code` AS `class_code`,
		             `LHS`.`stu_num` AS `stu_num`,
		             `LHS`.`enroll_grade` AS `enroll_grade`,
		             `LHS`.`stu_lname` AS `stu_lname`,
		             `LHS`.`stu_fname` AS `stu_fname`,
		             `LHS`.`stu_init` AS `stu_init`,
		             `LHS`.`stu_dob` AS `stu_dob`,
		             `LHS`.`stu_hrs` AS `stu_hrs`,
		             `LHS`.`stu_class` AS `stu_class`,
		             `LHS`.`stu_gpa` AS `stu_gpa`,
		             `LHS`.`stu_transfer` AS `stu_transfer`,
		             `LHS`.`dept_code` AS `dept_code`,
		             `LHS`.`stu_phone` AS `stu_phone`,
		             `LHS`.`prof_num` AS `prof_num`,
		             `RHS`.`dept_name` AS `dept_name`,
		             `RHS`.`school_code` AS `school_code`,
		             `RHS`.`emp_num` AS `emp_num`,
		             `RHS`.`dept_address` AS `dept_address`,
		             `RHS`.`dept_extension` AS `dept_extension`
		      FROM
		        (SELECT `LHS`.`class_code` AS `class_code`,
		                `LHS`.`stu_num` AS `stu_num`,
		                `LHS`.`enroll_grade` AS `enroll_grade`,
		                `RHS`.`stu_lname` AS `stu_lname`,
		                `RHS`.`stu_fname` AS `stu_fname`,
		                `RHS`.`stu_init` AS `stu_init`,
		                `RHS`.`stu_dob` AS `stu_dob`,
		                `RHS`.`stu_hrs` AS `stu_hrs`,
		                `RHS`.`stu_class` AS `stu_class`,
		                `RHS`.`stu_gpa` AS `stu_gpa`,
		                `RHS`.`stu_transfer` AS `stu_transfer`,
		                `RHS`.`dept_code` AS `dept_code`,
		                `RHS`.`stu_phone` AS `stu_phone`,
		                `RHS`.`prof_num` AS `prof_num`
		         FROM `enroll` AS `LHS`
		         INNER JOIN `student` AS `RHS` ON (`LHS`.`stu_num` = `RHS`.`stu_num`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `department`
		         WHERE (`dept_name` != 'Accounting'
		                OR `dept_name` = 'Computer Info. Systems')) AS RHS ON (LHS.dept_code = RHS.dept_code)) AS LHS
		   CROSS JOIN
		     (SELECT crs_code
		      FROM course INTERSECT SELECT crs_code
		      FROM class) AS RHS)
		ORDER BY stu_fname

	      stu_fname
	0        Gerald
	1   Geraldzc)NS
	2           Joh
	3          John
	4  ZGdQlRaphael
	5         erald
	6           ohn
	7  yH1GeraldhIn
Wrong output for fuzzied solution in instance spider/college_1/0034 (2610)
	EXPECTED OUTPUT ====

		SELECT T3.dept_name
		FROM course AS T1
		JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code
		JOIN department AS T3 ON T1.dept_code = T3.dept_code
		GROUP BY T1.dept_code
		ORDER BY sum(T1.crs_credit) DESC
		LIMIT 1

	     dept_name
	0  Mathematics
	ACTUAL OUTPUT ====

		
		SELECT dept_name
		FROM
		  (SELECT dept_address,
		          dept_name,
		          SUM(crs_credit) AS sumcrs_credit
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.class_code AS class_code,
		                LHS.crs_code AS crs_code,
		                LHS.class_section AS class_section,
		                LHS.class_time AS class_time,
		                LHS.class_room AS class_room,
		                LHS.prof_num AS prof_num,
		                LHS.dept_code AS dept_code,
		                LHS.crs_description AS crs_description,
		                LHS.crs_credit AS crs_credit,
		                LHS.dept_name AS dept_name,
		                LHS.school_code AS school_code,
		                LHS.emp_num AS emp_num,
		                LHS.dept_address AS dept_address,
		                LHS.dept_extension AS dept_extension,
		                RHS.crs_code AS crs_code_other,
		                RHS.dept_code AS dept_code_other,
		                RHS.crs_description AS crs_description_other,
		                RHS.crs_credit AS crs_credit_other
		         FROM
		           (SELECT LHS.class_code AS class_code,
		                   LHS.crs_code AS crs_code,
		                   LHS.class_section AS class_section,
		                   LHS.class_time AS class_time,
		                   LHS.class_room AS class_room,
		                   LHS.prof_num AS prof_num,
		                   LHS.dept_code AS dept_code,
		                   LHS.crs_description AS crs_description,
		                   LHS.crs_credit AS crs_credit,
		                   RHS.dept_name AS dept_name,
		                   RHS.school_code AS school_code,
		                   RHS.emp_num AS emp_num,
		                   RHS.dept_address AS dept_address,
		                   RHS.dept_extension AS dept_extension
		            FROM
		              (SELECT LHS.class_code AS class_code,
		                      LHS.crs_code AS crs_code,
		                      LHS.class_section AS class_section,
		                      LHS.class_time AS class_time,
		                      LHS.class_room AS class_room,
		                      LHS.prof_num AS prof_num,
		                      RHS.dept_code AS dept_code,
		                      RHS.crs_description AS crs_description,
		                      RHS.crs_credit AS crs_credit
		               FROM class AS LHS
		               INNER JOIN course AS RHS ON (LHS.crs_code = RHS.crs_code)) AS LHS
		            INNER JOIN department AS RHS ON (LHS.dept_code = RHS.dept_code)) AS LHS
		         CROSS JOIN course AS RHS)
		      WHERE (crs_credit > crs_credit_other))
		   GROUP BY dept_address,
		            dept_name)
		ORDER BY dept_name

	            dept_name
	0     6btqGAccounting
	1   A3KMathematicsF9)
	2          Accounting
	3          Accounting
	4          Accounting
	5          Accounting
	6          Accounting
	7          Accounting
	8     Accounting2RRj0
	9     Accountingf1xzD
	10    Accountingno2FA
	11        Mathematics
	12        Mathematics
	13        Mathematics
	14        Mathematics
	15        Mathematics
	16        Mathematics
	17        Mathematics
	18        Mathematics
	19          Psycholog
	20         Psychology
	21         Psychology
	22         Psychology
	23         Psychology
	24   QsXAccounting2go
	25    VeVj9Psychology
	26          ccounting
	27          ccounting
	28          ccounting
	29    iRg5fAccounting
	30   iYlAccountingZMY
	31          sychology
	32   wkURsMathematics
Wrong output for fuzzied solution in instance spider/college_1/0024 (2611)
	EXPECTED OUTPUT ====

		SELECT sum(stu_hrs),
		       dept_code
		FROM student
		GROUP BY dept_code

	    sum(stu_hrs)       dept_code
	0     4636879532             35Y
	1            115       (L440W6Ff
	2            102    08zDlMKT/MGT
	3     4391966397          0YBcWf
	4     5067984550       1wH0WACCT
	5     4147406434      2IwACCT(gr
	6     9877795549            5zHt
	7            102         C2hCQSH
	8            114             CIS
	9     6617982218        CIS iY8z
	10           102        CISADDiB
	11           438      DtpACCThGN
	12           217              IS
	13    8183615029          KT/MGT
	14           100          MKT/MG
	15           312         MKT/MGT
	16    5352925611    MKT/MGT9ng3n
	17   -8406062191    MKT/MGTAnBv0
	18           101    MKT/MGTtOMA3
	19           115       OZ8CISBA7
	20           103  SBF4nsqZ95BU4N
	21           100          SvgIF2
	22           214       T2(CISZ)f
	23           116         VrU2Dcr
	24           100      Wf1XFd5oFg
	25           315       smHCISPtR
	26           102       tFdCIS7Ig
	27           103    tP30VMKT/MGT
	28    1531592922    z4lg4MKT/MGT
	ACTUAL OUTPUT ====

		
		SELECT sumstu_hrs AS sum_stu_hrs_,
		       dept_code
		FROM
		  (SELECT dept_code,
		          SUM(stu_hrs) AS sumstu_hrs
		   FROM
		     (SELECT dept_code,
		             stu_hrs,
		             SUM(stu_hrs) AS sumstu_hrs
		      FROM student
		      GROUP BY dept_code,
		               stu_hrs)
		   GROUP BY dept_code)
		ORDER BY sum_stu_hrs_

	    sum_stu_hrs_       dept_code
	0     4636879532             35Y
	1            115       (L440W6Ff
	2            102    08zDlMKT/MGT
	3     4391966397          0YBcWf
	4     5067984550       1wH0WACCT
	5     4147406434      2IwACCT(gr
	6     9877795549            5zHt
	7            102         C2hCQSH
	8            114             CIS
	9     6617982218        CIS iY8z
	10           102        CISADDiB
	11           322      DtpACCThGN
	12           217              IS
	13    8183615029          KT/MGT
	14           100          MKT/MG
	15           212         MKT/MGT
	16    5352925611    MKT/MGT9ng3n
	17   -8406062191    MKT/MGTAnBv0
	18           101    MKT/MGTtOMA3
	19           115       OZ8CISBA7
	20           103  SBF4nsqZ95BU4N
	21           100          SvgIF2
	22           214       T2(CISZ)f
	23           116         VrU2Dcr
	24           100      Wf1XFd5oFg
	25           315       smHCISPtR
	26           102       tFdCIS7Ig
	27           103    tP30VMKT/MGT
	28    1531592922    z4lg4MKT/MGT
Wrong output for fuzzied solution in instance spider/college_1/0021 (2612)
	EXPECTED OUTPUT ====

		SELECT T1.school_code
		FROM department AS T1
		JOIN professor AS T2 ON T1.dept_code = T2.dept_code
		GROUP BY T1.school_code
		ORDER BY count(*)
		LIMIT 1

	  school_code
	0    BUSRQcbB
	ACTUAL OUTPUT ====

		
		SELECT school_code
		FROM
		  (SELECT LHS.school_code AS school_code,
		          LHS.n AS n,
		          RHS.school_code AS school_code_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT school_code,
		             COUNT() AS n
		      FROM
		        (SELECT LHS.dept_code AS dept_code,
		                LHS.dept_name AS dept_name,
		                LHS.school_code AS school_code,
		                LHS.emp_num AS emp_num,
		                LHS.dept_address AS dept_address,
		                LHS.dept_extension AS dept_extension,
		                RHS.prof_office AS prof_office,
		                RHS.prof_extension AS prof_extension,
		                RHS.prof_high_degree AS prof_high_degree
		         FROM department AS LHS
		         LEFT JOIN professor AS RHS ON (LHS.dept_code = RHS.dept_code
		                                           AND LHS.emp_num = RHS.emp_num))
		      GROUP BY school_code) AS LHS
		   CROSS JOIN
		     (SELECT school_code,
		             COUNT() AS n
		      FROM
		        (SELECT LHS.dept_code AS dept_code,
		                LHS.dept_name AS dept_name,
		                LHS.school_code AS school_code,
		                LHS.emp_num AS emp_num,
		                LHS.dept_address AS dept_address,
		                LHS.dept_extension AS dept_extension,
		                RHS.prof_office AS prof_office,
		                RHS.prof_extension AS prof_extension,
		                RHS.prof_high_degree AS prof_high_degree
		         FROM department AS LHS
		         LEFT JOIN professor AS RHS ON (LHS.dept_code = RHS.dept_code
		                                           AND LHS.emp_num = RHS.emp_num))
		      GROUP BY school_code) AS RHS)
		WHERE (n < n_other)
		ORDER BY school_code

	    school_code
	0          &SCI
	1          &SCI
	2          &SCI
	3          &SCI
	4          &SCI
	..          ...
	105    srAcuBUS
	106    srAcuBUS
	107    srAcuBUS
	108    srAcuBUS
	109    srAcuBUS
	
	[110 rows x 1 columns]
Wrong output for fuzzied solution in instance spider/college_1/0001 (2615)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM professor AS T1
		JOIN department AS T2 ON T1.dept_code = T2.dept_code
		WHERE DEPT_NAME = "Accounting"

	   count(*)
	0       105
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`dept_code` AS `dept_code`,
		          `LHS`.`dept_name` AS `dept_name`,
		          `LHS`.`school_code` AS `school_code`,
		          `LHS`.`emp_num` AS `emp_num`,
		          `LHS`.`dept_address` AS `dept_address`,
		          `LHS`.`dept_extension` AS `dept_extension`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT *
		      FROM `department`
		      WHERE (`dept_name` = 'Accounting')) AS LHS
		   LEFT JOIN
		     (SELECT dept_code,
		             COUNT() AS n
		      FROM professor
		      GROUP BY dept_code) AS RHS ON (LHS.dept_code = RHS.dept_code))
		ORDER BY count___

	    count___
	0          3
	1          6
	2          7
	3          8
	4          8
	5          9
	6          9
	7         10
	8         10
	9         10
	10        12
	11        13
No solution for instance spider/college_1/0082 (2620)
Wrong output for fuzzied solution in instance spider/college_1/0047 (2621)
	EXPECTED OUTPUT ====

		SELECT stu_fname,
		       stu_lname,
		       stu_gpa
		FROM student
		WHERE stu_gpa > 3
		ORDER BY stu_dob DESC
		LIMIT 1

	  stu_fname    stu_lname  stu_gpa
	0      John  CPl45Bowser     3.85
	ACTUAL OUTPUT ====

		
		SELECT stu_fname,
		       stu_lname,
		       stu_gpa
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM student
		         WHERE (stu_gpa > 3.0
		                AND stu_gpa != 1.0))
		      ORDER BY stu_lname DESC)
		   LIMIT 1)

	  stu_fname stu_lname  stu_gpa
	0      John     owser     3.15
No solution for instance spider/college_1/0081 (2622)
Wrong output for fuzzied solution in instance spider/college_1/0009 (2624)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT dept_address)
		FROM department
		WHERE school_code = 'BUS'

	   count(distinct dept_address)
	0                             9
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count_distinct_dept_address_`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM `department`
		      WHERE (`school_code` = 'BUS')))
		ORDER BY count_distinct_dept_address_

	   count_distinct_dept_address_
	0                            10
Wrong output for base solution in instance spider/college_1/0025 (2625)
	EXPECTED OUTPUT ====

	   max_stu_gpa_  avg_stu_gpa_  min_stu_gpa_ dept_code
	0          2.11      2.110000          2.11      ENGL
	1          3.15      2.776667          2.26      ACCT
	2          2.84      2.840000          2.84      BIOL
	3          3.27      3.180000          3.09       CIS
	4          3.87      3.870000          3.87       EDU
	ACTUAL OUTPUT ====

		SELECT max(stu_gpa),
		       avg(stu_gpa),
		       min(stu_gpa),
		       dept_code
		FROM student
		GROUP BY dept_code

	   max(stu_gpa)  avg(stu_gpa)  min(stu_gpa) dept_code
	0          3.15      2.776667          2.26      ACCT
	1          2.84      2.840000          2.84      BIOL
	2          3.27      3.180000          3.09       CIS
	3          3.87      3.870000          3.87       EDU
	4          2.11      2.110000          2.11      ENGL
Wrong output for ground truth in instance spider/college_1/0025 (2625)
Wrong output for fuzzied solution in instance spider/college_1/0060 (2627)
	EXPECTED OUTPUT ====

		SELECT T1.emp_fname
		FROM employee AS T1
		JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num
		WHERE crs_code = 'CIS-220' INTERSECT
		  SELECT T1.emp_fname
		  FROM employee AS T1
		  JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'QM-261'

	  emp_fname
	0    Weston
	1      Will
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `emp_fname`
		FROM
		  (SELECT `LHS`.`class_code` AS `class_code`,
		          `LHS`.`crs_code` AS `crs_code`,
		          `LHS`.`class_section` AS `class_section`,
		          `LHS`.`class_time` AS `class_time`,
		          `LHS`.`class_room` AS `class_room`,
		          `LHS`.`prof_num` AS `prof_num`,
		          `RHS`.`emp_lname` AS `emp_lname`,
		          `RHS`.`emp_fname` AS `emp_fname`,
		          `RHS`.`emp_initial` AS `emp_initial`,
		          `RHS`.`emp_jobcode` AS `emp_jobcode`,
		          `RHS`.`emp_hiredate` AS `emp_hiredate`,
		          `RHS`.`emp_dob` AS `emp_dob`
		   FROM
		     (SELECT *
		      FROM `class`
		      WHERE (`crs_code` != 'CIS-220'
		             AND `crs_code` = 'QM-261')) AS LHS
		   INNER JOIN employee AS RHS ON (LHS.prof_num = RHS.emp_num))
		ORDER BY emp_fname

	      emp_fname
	0        Weston
	1          Will
	2  v)uGeraldlZJ
Wrong output for fuzzied solution in instance spider/college_1/0067 (2629)
	EXPECTED OUTPUT ====

		SELECT T2.dept_name,
		       T2.dept_address,
		       count(*)
		FROM student AS T1
		JOIN department AS T2 ON T1.dept_code = T2.dept_code
		GROUP BY T1.dept_code
		ORDER BY count(*) DESC
		LIMIT 3

	         dept_name          dept_address  count(*)
	0  Accountingf1xzD      AAK 297, Box 438         1
	1       Accounting  BY3I1KLR 211, Box 52         2
	2      Mathematics  rvjOXKLR 211, Box 52         2
	ACTUAL OUTPUT ====

		
		SELECT dept_name,
		       dept_address,
		       n AS count___
		FROM
		  (SELECT dept_address,
		          dept_name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.dept_code AS dept_code,
		             LHS.dept_name AS dept_name,
		             LHS.school_code AS school_code,
		             LHS.emp_num AS emp_num,
		             LHS.dept_address AS dept_address,
		             LHS.dept_extension AS dept_extension,
		             RHS.stu_num AS stu_num,
		             RHS.stu_lname AS stu_lname,
		             RHS.stu_fname AS stu_fname,
		             RHS.stu_init AS stu_init,
		             RHS.stu_dob AS stu_dob,
		             RHS.stu_hrs AS stu_hrs,
		             RHS.stu_class AS stu_class,
		             RHS.stu_gpa AS stu_gpa,
		             RHS.stu_transfer AS stu_transfer,
		             RHS.stu_phone AS stu_phone,
		             RHS.prof_num AS prof_num
		      FROM department AS LHS
		      INNER JOIN student AS RHS ON (LHS.dept_code = RHS.dept_code))
		   GROUP BY dept_address,
		            dept_name)
		ORDER BY dept_name

	          dept_name            dept_address  count___
	0       Mathematics  ))wAAK 297, Box 438I 8         1
	1         ccounting    47n9kKLR 211, Box 52         1
	2   Accountingf1xzD        AAK 297, Box 438         1
	3        Psychology        AAK 297, Box 438         1
	4   6btqGAccounting        BBG 185, Box 128         1
	5         ccounting    BLNHSKLR 211, Box 52         1
	6   iRg5fAccounting         KLR 211, Box 52         1
	7       Mathematics    KLR 211, Box 52f5kLf         1
	8        Accounting          LR 211, Box 52         1
	9        Accounting         RE 102, Box 223         1
	10       Psychology   XIfKLR 211, Box 52ByM         1
	11       Accounting    BY3I1KLR 211, Box 52         2
	12      Mathematics    rvjOXKLR 211, Box 52         2
Wrong output for fuzzied solution in instance spider/college_1/0010 (2631)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT dept_address),
		       school_code
		FROM department
		GROUP BY school_code

	    count(distinct dept_address)  school_code
	0                              1         &SCI
	1                              1  237A&SCIxTz
	2                              1     3Yx74BUS
	3                              1   4vVgVA&SCI
	4                              1   9OoLJA&SCI
	5                              1   A&SCIONOl8
	6                              1   A&SCIPCOHG
	7                              1   A&SCIiBah1
	8                              1   AhFMPA&SCI
	9                              1           BU
	10                             1     BUSRQcbB
	11                             1     BUSvQqxN
	12                             1  GDxA&SCIAYh
	13                             1  Nv)A&SCINAK
	14                             1           US
	15                             1   eGyPSA&SCI
	16                             1     srAcuBUS
	17                             3         A&SC
	18                             5          BUS
	19                             9        A&SCI
	ACTUAL OUTPUT ====

		
		SELECT n AS count_distinct_dept_address_,
		       school_code
		FROM
		  (SELECT school_code,
		          COUNT() AS n
		   FROM
		     (SELECT dept_name,
		             school_code,
		             COUNT() AS n
		      FROM department
		      GROUP BY dept_name,
		               school_code)
		   GROUP BY school_code)
		ORDER BY count_distinct_dept_address_

	    count_distinct_dept_address_  school_code
	0                              1         &SCI
	1                              1  237A&SCIxTz
	2                              1     3Yx74BUS
	3                              1   4vVgVA&SCI
	4                              1   9OoLJA&SCI
	5                              1   A&SCIONOl8
	6                              1   A&SCIPCOHG
	7                              1   A&SCIiBah1
	8                              1   AhFMPA&SCI
	9                              1           BU
	10                             1     BUSRQcbB
	11                             1     BUSvQqxN
	12                             1  GDxA&SCIAYh
	13                             1  Nv)A&SCINAK
	14                             1           US
	15                             1   eGyPSA&SCI
	16                             1     srAcuBUS
	17                             3         A&SC
	18                             5          BUS
	19                             6        A&SCI
No solution for instance spider/college_1/0073 (2633)
Wrong output for fuzzied solution in instance spider/college_1/0040 (2634)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM CLASS AS T1
		JOIN enroll AS T2 ON T1.class_code = T2.class_code
		JOIN course AS T3 ON T1.crs_code = T3.crs_code
		JOIN department AS T4 ON T3.dept_code = T4.dept_code
		WHERE T4.dept_name = 'Accounting'

	   count(*)
	0       653
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `crs_credit`,
		          `dept_address`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`class_code` AS `class_code`,
		                `LHS`.`crs_code` AS `crs_code`,
		                `LHS`.`class_section` AS `class_section`,
		                `LHS`.`class_time` AS `class_time`,
		                `LHS`.`class_room` AS `class_room`,
		                `LHS`.`prof_num` AS `prof_num`,
		                `LHS`.`dept_code` AS `dept_code`,
		                `LHS`.`crs_description` AS `crs_description`,
		                `LHS`.`crs_credit` AS `crs_credit`,
		                `LHS`.`dept_name` AS `dept_name`,
		                `LHS`.`school_code` AS `school_code`,
		                `LHS`.`emp_num` AS `emp_num`,
		                `LHS`.`dept_address` AS `dept_address`,
		                `LHS`.`dept_extension` AS `dept_extension`,
		                `RHS`.`stu_num` AS `stu_num`,
		                `RHS`.`enroll_grade` AS `enroll_grade`
		         FROM
		           (SELECT `LHS`.`class_code` AS `class_code`,
		                   `LHS`.`crs_code` AS `crs_code`,
		                   `LHS`.`class_section` AS `class_section`,
		                   `LHS`.`class_time` AS `class_time`,
		                   `LHS`.`class_room` AS `class_room`,
		                   `LHS`.`prof_num` AS `prof_num`,
		                   `LHS`.`dept_code` AS `dept_code`,
		                   `LHS`.`crs_description` AS `crs_description`,
		                   `LHS`.`crs_credit` AS `crs_credit`,
		                   `RHS`.`dept_name` AS `dept_name`,
		                   `RHS`.`school_code` AS `school_code`,
		                   `RHS`.`emp_num` AS `emp_num`,
		                   `RHS`.`dept_address` AS `dept_address`,
		                   `RHS`.`dept_extension` AS `dept_extension`
		            FROM
		              (SELECT `LHS`.`class_code` AS `class_code`,
		                      `LHS`.`crs_code` AS `crs_code`,
		                      `LHS`.`class_section` AS `class_section`,
		                      `LHS`.`class_time` AS `class_time`,
		                      `LHS`.`class_room` AS `class_room`,
		                      `LHS`.`prof_num` AS `prof_num`,
		                      `RHS`.`dept_code` AS `dept_code`,
		                      `RHS`.`crs_description` AS `crs_description`,
		                      `RHS`.`crs_credit` AS `crs_credit`
		               FROM `class` AS `LHS`
		               INNER JOIN `course` AS `RHS` ON (`LHS`.`crs_code` = `RHS`.`crs_code`)) AS `LHS`
		            INNER JOIN `department` AS `RHS` ON (`LHS`.`dept_code` = `RHS`.`dept_code`)) AS `LHS`
		         INNER JOIN `enroll` AS `RHS` ON (`LHS`.`class_code` = `RHS`.`class_code`))
		      WHERE (`dept_name` = 'Accounting'))
		   GROUP BY crs_credit,
		            dept_address)
		ORDER BY count___

	    count___
	0          1
	1          2
	2          4
	3          6
	4          9
	5         12
	6         14
	7         15
	8         18
	9         23
	10        24
	11        25
	12        29
	13        31
	14        34
	15        34
	16        37
	17        42
	18        44
	19        45
	20        45
	21        79
	22        80
Wrong output for fuzzied solution in instance spider/college_1/0028 (2636)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT class_code)
		FROM CLASS

	   count(distinct class_code)
	0                         378
	ACTUAL OUTPUT ====

		
		SELECT n AS count_distinct_class_code_
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT class_time,
		             prof_num,
		             COUNT() AS n
		      FROM class
		      GROUP BY class_time,
		               prof_num))
		ORDER BY count_distinct_class_code_

	   count_distinct_class_code_
	0                         213
Wrong output for fuzzied solution in instance spider/college_1/0049 (2637)
	EXPECTED OUTPUT ====

		SELECT T2.dept_name
		FROM professor AS T1
		JOIN department AS T2 ON T1.dept_code = T2.dept_code
		GROUP BY T1.dept_code
		ORDER BY count(*)
		LIMIT 1

	    dept_name
	0  Accounting
	ACTUAL OUTPUT ====

		
		SELECT dept_name
		FROM
		  (SELECT dept_name,
		          emp_num,
		          COUNT() AS n
		   FROM
		     (SELECT emp_num,
		             dept_code,
		             prof_office,
		             prof_extension,
		             prof_high_degree,
		             dept_code_other,
		             dept_name,
		             school_code,
		             dept_address,
		             prof_extension AS dept_extension
		      FROM
		        (SELECT LHS.emp_num AS emp_num,
		                LHS.dept_code AS dept_code,
		                LHS.prof_office AS prof_office,
		                LHS.prof_extension AS prof_extension,
		                LHS.prof_high_degree AS prof_high_degree,
		                RHS.dept_code AS dept_code_other,
		                RHS.dept_name AS dept_name,
		                RHS.school_code AS school_code,
		                RHS.dept_address AS dept_address
		         FROM professor AS LHS
		         INNER JOIN department AS RHS ON (LHS.emp_num = RHS.emp_num
		                                             AND LHS.prof_extension = RHS.dept_extension)))
		   GROUP BY dept_name,
		            emp_num)
		ORDER BY dept_name

	Empty DataFrame
	Columns: [dept_name]
	Index: []
Wrong output for fuzzied solution in instance spider/college_1/0031 (2638)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM department AS T1
		JOIN course AS T2 ON T1.dept_code = T2.dept_code
		WHERE dept_name = "Computer Info. Systems"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT `LHS`.`crs_code` AS `crs_code`,
		          `LHS`.`dept_code` AS `dept_code`,
		          `LHS`.`crs_description` AS `crs_description`,
		          `LHS`.`crs_credit` AS `crs_credit`,
		          `RHS`.`dept_name` AS `dept_name`,
		          `RHS`.`school_code` AS `school_code`,
		          `RHS`.`emp_num` AS `emp_num`,
		          `RHS`.`dept_address` AS `dept_address`,
		          `RHS`.`dept_extension` AS `dept_extension`
		   FROM `course` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `department`
		      WHERE (`dept_name` = 'Computer Info. Systems')) AS RHS ON (LHS.dept_code = RHS.dept_code))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/college_1/0055 (2639)
	EXPECTED OUTPUT ====

		SELECT T1.emp_lname,
		       T1.emp_hiredate
		FROM employee AS T1
		JOIN professor AS T2 ON T1.emp_num = T2.emp_num
		WHERE T2.prof_office = 'DRE 102'

	      emp_lname emp_hiredate
	0         Smith    1990-9-29
	1         Smith    1990-9-29
	2         Smith    1990-9-29
	3         Smith    1990-9-29
	4         Thieu    1990-9-29
	5   g(YJonesSXv    1992-3-25
	6   g(YJonesSXv    1992-3-25
	7   g(YJonesSXv    1992-3-25
	8          Thie    1992-6-20
	9          Thie    1992-6-20
	10         Thie    1992-6-20
	11         Thie    1992-6-20
	12        Thieu    1993-10-8
	13        Thieu    1993-10-8
	14   q9Bp2Thieu    1993-10-8
	15   q9Bp2Thieu    1993-10-8
	16   q9Bp2Thieu    1993-10-8
	17        Thieu    1993-5-28
	18        Thieu    1993-5-28
	19        Thieu    1993-5-28
	20        Thieu    1993-5-28
	21        Thieu    1993-5-28
	22        Thieu    1993-5-28
	23        Thieu    1993-5-28
	24        Thieu    1993-5-28
	25        Thieu    1993-5-28
	26        Thieu    1993-5-28
	27        Jones    1994-1-28
	28        Jones    1994-1-28
	29        Jones    1994-1-28
	30        Jones    1994-1-28
	31        Jones    1994-1-28
	ACTUAL OUTPUT ====

		
		SELECT `emp_lname`,
		       `emp_hiredate`
		FROM
		  (SELECT *
		   FROM `employee` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `professor`
		           WHERE (`prof_office` = 'DRE 102')) AS RHS
		        WHERE (LHS.emp_num = RHS.emp_num) ))
		ORDER BY emp_lname

	     emp_lname emp_hiredate
	0        Smith    1990-9-29
	1        Thieu    1990-9-29
	2  g(YJonesSXv    1992-3-25
	3         Thie    1992-6-20
	4        Thieu    1993-10-8
	5   q9Bp2Thieu    1993-10-8
	6        Thieu    1993-5-28
	7        Jones    1994-1-28
	8        Jones    1994-1-28
Wrong output for fuzzied solution in instance spider/phone_1/0002 (2641)
	EXPECTED OUTPUT ====

		SELECT Model_name,
		       RAM_MiB
		FROM chip_model
		ORDER BY RAM_MiB ASC
		LIMIT 1;

	  model_name  ram_mib
	0        O8M    31.99
	ACTUAL OUTPUT ====

		
		SELECT model_name,
		       ram_mib
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM chip_model
		      ORDER BY rom_mib)
		   LIMIT 1)

	  model_name  ram_mib
	0    3oycdnN     64.0
No solution for instance spider/phone_1/0017 (2642)
No solution for instance spider/phone_1/0027 (2645)
Wrong output for fuzzied solution in instance spider/phone_1/0006 (2648)
	EXPECTED OUTPUT ====

		SELECT avg(T1.ROM_MiB)
		FROM chip_model AS T1
		JOIN phone AS T2 ON T1.Model_name = T2.chip_model
		WHERE T2.Company_name = "Nokia Corporation";

	   avg(t1.rom_mib)
	0          127.995
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `ram_mib` AS `avg_t1_rom_mib_`
		FROM
		  (SELECT `LHS`.`model_name` AS `model_name`,
		          `LHS`.`launch_year` AS `launch_year`,
		          `LHS`.`ram_mib` AS `ram_mib`,
		          `LHS`.`rom_mib` AS `rom_mib`,
		          `LHS`.`slots` AS `slots`,
		          `LHS`.`wifi` AS `wifi`,
		          `LHS`.`bluetooth` AS `bluetooth`,
		          `LHS`.`meanrom_mib` AS `meanrom_mib`,
		          `RHS`.`company_name` AS `company_name`,
		          `RHS`.`hardware_model_name` AS `hardware_model_name`,
		          `RHS`.`accreditation_type` AS `accreditation_type`,
		          `RHS`.`accreditation_level` AS `accreditation_level`,
		          `RHS`.`date` AS `date`,
		          `RHS`.`screen_mode` AS `screen_mode`
		   FROM
		     (SELECT `model_name`,
		             `launch_year`,
		             `ram_mib`,
		             `rom_mib`,
		             `slots`,
		             `wifi`,
		             `bluetooth`,
		             AVG(`rom_mib`) OVER () AS `meanrom_mib`
		      FROM `chip_model`) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `phone`
		      WHERE (`company_name` = 'Nokia Corporation')) AS RHS ON (LHS.model_name = RHS.chip_model))
		ORDER BY avg_t1_rom_mib_

	   avg_t1_rom_mib_
	0            63.98
	1            64.02
No solution for instance spider/phone_1/0026 (2651)
No solution for instance spider/phone_1/0015 (2652)
Wrong output for fuzzied solution in instance spider/phone_1/0005 (2653)
	EXPECTED OUTPUT ====

		SELECT max(T1.RAM_MiB),
		       min(T1.RAM_MiB)
		FROM chip_model AS T1
		JOIN phone AS T2 ON T1.Model_name = T2.chip_model
		WHERE T2.Company_name = "Nokia Corporation";

	   max(t1.ram_mib)  min(t1.ram_mib)
	0            64.02            63.98
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `ram_mib` AS `max_t1_ram_mib_`,
		                `rom_mib` AS `min_t1_ram_mib_`
		FROM
		  (SELECT `LHS`.`model_name` AS `model_name`,
		          `LHS`.`launch_year` AS `launch_year`,
		          `LHS`.`ram_mib` AS `ram_mib`,
		          `LHS`.`rom_mib` AS `rom_mib`,
		          `LHS`.`slots` AS `slots`,
		          `LHS`.`wifi` AS `wifi`,
		          `LHS`.`bluetooth` AS `bluetooth`,
		          `LHS`.`company_name` AS `company_name`,
		          `LHS`.`hardware_model_name` AS `hardware_model_name`,
		          `LHS`.`accreditation_type` AS `accreditation_type`,
		          `LHS`.`accreditation_level` AS `accreditation_level`,
		          `LHS`.`date` AS `date`,
		          `LHS`.`chip_model` AS `chip_model`,
		          `LHS`.`screen_mode` AS `screen_mode`,
		          `RHS`.`minram_mib` AS `minram_mib`
		   FROM
		     (SELECT `LHS`.`model_name` AS `model_name`,
		             `LHS`.`launch_year` AS `launch_year`,
		             `LHS`.`ram_mib` AS `ram_mib`,
		             `LHS`.`rom_mib` AS `rom_mib`,
		             `LHS`.`slots` AS `slots`,
		             `LHS`.`wifi` AS `wifi`,
		             `LHS`.`bluetooth` AS `bluetooth`,
		             `LHS`.`company_name` AS `company_name`,
		             `LHS`.`hardware_model_name` AS `hardware_model_name`,
		             `LHS`.`accreditation_type` AS `accreditation_type`,
		             `LHS`.`accreditation_level` AS `accreditation_level`,
		             `LHS`.`date` AS `date`,
		             `LHS`.`chip_model` AS `chip_model`,
		             `LHS`.`screen_mode` AS `screen_mode`
		      FROM
		        (SELECT `LHS`.`model_name` AS `model_name`,
		                `LHS`.`launch_year` AS `launch_year`,
		                `LHS`.`ram_mib` AS `ram_mib`,
		                `LHS`.`rom_mib` AS `rom_mib`,
		                `LHS`.`slots` AS `slots`,
		                `LHS`.`wifi` AS `wifi`,
		                `LHS`.`bluetooth` AS `bluetooth`,
		                `RHS`.`company_name` AS `company_name`,
		                `RHS`.`hardware_model_name` AS `hardware_model_name`,
		                `RHS`.`accreditation_type` AS `accreditation_type`,
		                `RHS`.`accreditation_level` AS `accreditation_level`,
		                `RHS`.`date` AS `date`,
		                `RHS`.`chip_model` AS `chip_model`,
		                `RHS`.`screen_mode` AS `screen_mode`
		         FROM `chip_model` AS `LHS`
		         CROSS JOIN `phone` AS `RHS`) AS `LHS`
		      INNER JOIN
		        (SELECT MAX(`company_name`) OVER () AS `company_name`,
		                                         `hardware_model_name`,
		                                         `accreditation_type`,
		                                         `accreditation_level`,
		                                         `date`,
		                                         `chip_model`,
		                                         `screen_mode`
		         FROM `phone`) AS `RHS` ON (`LHS`.`company_name` = `RHS`.`company_name`
		                                       AND `LHS`.`hardware_model_name` = `RHS`.`hardware_model_name`
		                                       AND `LHS`.`accreditation_type` = `RHS`.`accreditation_type`
		                                       AND `LHS`.`accreditation_level` = `RHS`.`accreditation_level`
		                                       AND `LHS`.`date` = `RHS`.`date`
		                                       AND `LHS`.`chip_model` = `RHS`.`chip_model`
		                                       AND `LHS`.`screen_mode` = `RHS`.`screen_mode`)) AS `LHS`
		   INNER JOIN
		     (SELECT `model_name`,
		             `launch_year`,
		             `ram_mib`,
		             `rom_mib`,
		             `slots`,
		             `wifi`,
		             `bluetooth`,
		             MIN(`ram_mib`) OVER () AS `minram_mib`
		      FROM `chip_model`) AS `RHS` ON (`LHS`.`model_name` = `RHS`.`model_name`
		                                         AND `LHS`.`launch_year` = `RHS`.`launch_year`
		                                         AND `LHS`.`ram_mib` = `RHS`.`ram_mib`
		                                         AND `LHS`.`rom_mib` = `RHS`.`rom_mib`
		                                         AND `LHS`.`slots` = `RHS`.`slots`
		                                         AND `LHS`.`wifi` = `RHS`.`wifi`
		                                         AND `LHS`.`bluetooth` = `RHS`.`bluetooth`))
		WHERE (`company_name` != 'Nokia Corporation'
		       AND minram_mib = ram_mib)
		ORDER BY max_t1_ram_mib_

	   max_t1_ram_mib_  min_t1_ram_mib_
	0             32.0            63.98
Wrong output for fuzzied solution in instance spider/phone_1/0016 (2654)
	EXPECTED OUTPUT ====

		SELECT T2.Hardware_Model_name
		FROM chip_model AS T1
		JOIN phone AS T2 ON T1.Model_name = T2.chip_model
		JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode
		WHERE T3.Type = "Text"
		  OR T1.RAM_MiB > 32;

	         hardware_model_name
	0                (SpZ520e4Qb
	1                 0FD2HZ520e
	2                 14Q)nZ520e
	3               4k2TvLG-P760
	4                       520e
	5             7I0GT-I9300KJ3
	6   7wsXPERIA T, XPERIA JawN
	7                B0hZ520ewX1
	8                 F d1YZ520e
	9             FtqGT-I9300ZrQ
	10                   GT-I930
	11             GT-I930042S2U
	12                    LG-P76
	13              LG-P760jqKdE
	14             LlgLG-P7601tS
	15               M0hZ520etmv
	16                MrMrMZ520e
	17         PERIA T, XPERIA J
	18                QmAOuZ520e
	19             RleqqGT-I9300
	20                   T-I9300
	21             UxhLG-P760Ayc
	22               WCLZ520eYIb
	23         XPERIA T, XPERIA 
	24                      Z520
	25                     Z520e
	26                Z520e(k52B
	27                Z520eUifB2
	28                Z520eX3hSC
	29               cXlZ520e(BT
	30   dOdsGXPERIA T, XPERIA J
	31             g(hakGT-I9300
	32             rmG TGT-I9300
	33               x4FZ520e62g
	34  ybqXPERIA T, XPERIA J77G
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `hardware_model_name`
		FROM
		  (SELECT `model_name`,
		          `launch_year`,
		          `ram_mib`,
		          `rom_mib`,
		          `slots`,
		          `wifi`,
		          `bluetooth`,
		          `model_name_other`,
		          `ram_mib_other`,
		          `rom_mib_other`,
		          `slots_other`,
		          `wifi_other`,
		          `bluetooth_other`,
		          `graphics_mode`,
		          `char_cells`,
		          `pixels`,
		          `hardware_colours`,
		          `used_kb`,
		          `map`,
		          `type`,
		          `company_name`,
		          `hardware_model_name`,
		          `accreditation_type`,
		          `accreditation_level`,
		          `date`,
		          `screen_mode`,
		          `model_name` AS `chip_model`
		   FROM
		     (SELECT `LHS`.`model_name` AS `model_name`,
		             `LHS`.`launch_year` AS `launch_year`,
		             `LHS`.`ram_mib` AS `ram_mib`,
		             `LHS`.`rom_mib` AS `rom_mib`,
		             `LHS`.`slots` AS `slots`,
		             `LHS`.`wifi` AS `wifi`,
		             `LHS`.`bluetooth` AS `bluetooth`,
		             `RHS`.`model_name` AS `model_name_other`,
		             `RHS`.`ram_mib` AS `ram_mib_other`,
		             `RHS`.`rom_mib` AS `rom_mib_other`,
		             `RHS`.`slots` AS `slots_other`,
		             `RHS`.`wifi` AS `wifi_other`,
		             `RHS`.`bluetooth` AS `bluetooth_other`,
		             `RHS`.`graphics_mode` AS `graphics_mode`,
		             `RHS`.`char_cells` AS `char_cells`,
		             `RHS`.`pixels` AS `pixels`,
		             `RHS`.`hardware_colours` AS `hardware_colours`,
		             `RHS`.`used_kb` AS `used_kb`,
		             `RHS`.`map` AS `map`,
		             `RHS`.`type` AS `type`,
		             `RHS`.`company_name` AS `company_name`,
		             `RHS`.`hardware_model_name` AS `hardware_model_name`,
		             `RHS`.`accreditation_type` AS `accreditation_type`,
		             `RHS`.`accreditation_level` AS `accreditation_level`,
		             `RHS`.`date` AS `date`,
		             `RHS`.`screen_mode` AS `screen_mode`
		      FROM `chip_model` AS `LHS`
		      INNER JOIN
		        (SELECT `LHS`.`model_name` AS `model_name`,
		                `LHS`.`launch_year` AS `launch_year`,
		                `LHS`.`ram_mib` AS `ram_mib`,
		                `LHS`.`rom_mib` AS `rom_mib`,
		                `LHS`.`slots` AS `slots`,
		                `LHS`.`wifi` AS `wifi`,
		                `LHS`.`bluetooth` AS `bluetooth`,
		                `LHS`.`graphics_mode` AS `graphics_mode`,
		                `LHS`.`char_cells` AS `char_cells`,
		                `LHS`.`pixels` AS `pixels`,
		                `LHS`.`hardware_colours` AS `hardware_colours`,
		                `LHS`.`used_kb` AS `used_kb`,
		                `LHS`.`map` AS `map`,
		                `LHS`.`type` AS `type`,
		                `RHS`.`company_name` AS `company_name`,
		                `RHS`.`hardware_model_name` AS `hardware_model_name`,
		                `RHS`.`accreditation_type` AS `accreditation_type`,
		                `RHS`.`accreditation_level` AS `accreditation_level`,
		                `RHS`.`date` AS `date`,
		                `RHS`.`chip_model` AS `chip_model`,
		                `RHS`.`screen_mode` AS `screen_mode`
		         FROM
		           (SELECT `LHS`.`model_name` AS `model_name`,
		                   `LHS`.`launch_year` AS `launch_year`,
		                   `LHS`.`ram_mib` AS `ram_mib`,
		                   `LHS`.`rom_mib` AS `rom_mib`,
		                   `LHS`.`slots` AS `slots`,
		                   `LHS`.`wifi` AS `wifi`,
		                   `LHS`.`bluetooth` AS `bluetooth`,
		                   `RHS`.`graphics_mode` AS `graphics_mode`,
		                   `RHS`.`char_cells` AS `char_cells`,
		                   `RHS`.`pixels` AS `pixels`,
		                   `RHS`.`hardware_colours` AS `hardware_colours`,
		                   `RHS`.`used_kb` AS `used_kb`,
		                   `RHS`.`map` AS `map`,
		                   `RHS`.`type` AS `type`
		            FROM `chip_model` AS `LHS`
		            CROSS JOIN `screen_mode` AS `RHS`) AS `LHS`
		         CROSS JOIN `phone` AS `RHS`) AS `RHS` ON (`LHS`.`model_name` = `RHS`.`chip_model`
		                                                      AND `LHS`.`launch_year` = `RHS`.`launch_year`)))
		WHERE (`type` = 'Text'
		       AND ram_mib > 32.0)
		ORDER BY hardware_model_name

	         hardware_model_name
	0                (SpZ520e4Qb
	1                 0FD2HZ520e
	2                 14Q)nZ520e
	3                       520e
	4             7I0GT-I9300KJ3
	5   7wsXPERIA T, XPERIA JawN
	6                B0hZ520ewX1
	7                 F d1YZ520e
	8             FtqGT-I9300ZrQ
	9                     LG-P76
	10              LG-P760jqKdE
	11             LlgLG-P7601tS
	12               M0hZ520etmv
	13                MrMrMZ520e
	14         PERIA T, XPERIA J
	15                QmAOuZ520e
	16             RleqqGT-I9300
	17                   T-I9300
	18             UxhLG-P760Ayc
	19               WCLZ520eYIb
	20         XPERIA T, XPERIA 
	21                      Z520
	22                     Z520e
	23                Z520e(k52B
	24                Z520eUifB2
	25                Z520eX3hSC
	26               cXlZ520e(BT
	27   dOdsGXPERIA T, XPERIA J
	28             rmG TGT-I9300
	29               x4FZ520e62g
	30  ybqXPERIA T, XPERIA J77G
Wrong output for fuzzied solution in instance spider/phone_1/0018 (2655)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.Hardware_Model_name
		FROM screen_mode AS T1
		JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode
		WHERE t2.Company_name = "Nokia Corporation"
		  AND T1.Type != "Text";

	                      hardware_model_name
	0                          Gy1GT-I9300t2(
	1    Lumia 920, Lumia 820, Lumia 6202dgxw
	2    Lumia 920, Lumia 820, Lumia 620FOF8X
	3    Lumia 920, Lumia 820, Lumia 620Y7sXy
	4    Lumia 920, Lumia 820, Lumia 620jp6Eq
	5   LzXLumia 920, Lumia 820, Lumia 620nfT
	6    QV1(CLumia 920, Lumia 820, Lumia 620
	7                        U8815 Asura3Dpdx
	8   XBHLumia 920, Lumia 820, Lumia 620YZ3
	9   tIWLumia 920, Lumia 820, Lumia 620z8x
	10                         uI3GT-I9300aE)
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `hardware_model_name`
		FROM
		  (SELECT `LHS`.`graphics_mode` AS `graphics_mode`,
		          `LHS`.`char_cells` AS `char_cells`,
		          `LHS`.`pixels` AS `pixels`,
		          `LHS`.`hardware_colours` AS `hardware_colours`,
		          `LHS`.`used_kb` AS `used_kb`,
		          `LHS`.`map` AS `map`,
		          `LHS`.`type` AS `type`,
		          `RHS`.`company_name` AS `company_name`,
		          `RHS`.`hardware_model_name` AS `hardware_model_name`,
		          `RHS`.`accreditation_type` AS `accreditation_type`,
		          `RHS`.`accreditation_level` AS `accreditation_level`,
		          `RHS`.`date` AS `date`,
		          `RHS`.`chip_model` AS `chip_model`,
		          `RHS`.`screen_mode` AS `screen_mode`
		   FROM `screen_mode` AS `LHS`
		   CROSS JOIN `phone` AS `RHS`)
		WHERE (`company_name` = 'Nokia Corporation'
		       AND `type` = 'Text')
		ORDER BY hardware_model_name

	                      hardware_model_name
	0                          Gy1GT-I9300t2(
	1    Lumia 920, Lumia 820, Lumia 6202dgxw
	2    Lumia 920, Lumia 820, Lumia 620FOF8X
	3    Lumia 920, Lumia 820, Lumia 620Y7sXy
	4    Lumia 920, Lumia 820, Lumia 620jp6Eq
	5   LzXLumia 920, Lumia 820, Lumia 620nfT
	6    QV1(CLumia 920, Lumia 820, Lumia 620
	7                        U8815 Asura3Dpdx
	8                        U8815 AsuraaqGLT
	9   XBHLumia 920, Lumia 820, Lumia 620YZ3
	10  tIWLumia 920, Lumia 820, Lumia 620z8x
	11                         uI3GT-I9300aE)
	12         umia 920, Lumia 820, Lumia 620
No solution for instance spider/phone_1/0019 (2657)
No solution for instance spider/phone_1/0007 (2658)
Wrong output for fuzzied solution in instance spider/phone_1/0021 (2660)
	EXPECTED OUTPUT ====

		SELECT Accreditation_level
		FROM phone
		GROUP BY Accreditation_level
		HAVING count(*) > 3

	  accreditation_level
	0                joyn
	1      joyn Hot Fixes
	ACTUAL OUTPUT ====

		
		SELECT accreditation_level
		FROM
		  (SELECT accreditation_level,
		          accreditation_type,
		          COUNT() AS n
		   FROM phone
		   GROUP BY accreditation_level,
		            accreditation_type)
		WHERE (n > 3)
		ORDER BY accreditation_level

	  accreditation_level
	0      joyn Hot Fixes
Wrong output for fuzzied solution in instance spider/phone_1/0023 (2661)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM chip_model
		WHERE wifi = 'No'

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `chip_model`
		WHERE (`wifi` != 'No')
		ORDER BY count___

	   count___
	0        12
Wrong output for fuzzied solution in instance spider/phone_1/0001 (2662)
	EXPECTED OUTPUT ====

		SELECT Model_name
		FROM chip_model
		WHERE Launch_year BETWEEN 2002 AND 2004;

	           model_name
	0        X30 high-end
	1       X51 mid-range
	2  X51 mid-rangeBD7vh
	3  x5H4HX51 mid-range
	ACTUAL OUTPUT ====

		
		SELECT model_name
		FROM chip_model
		WHERE (launch_year <= 2002.0
		       OR launch_year <= 2004.0)
		ORDER BY model_name

	           model_name
	0        X30 high-end
	1       X51 mid-range
	2  X51 mid-rangeBD7vh
	3  nRYM0X51 mid-range
	4  x5H4HX51 mid-range
Wrong output for fuzzied solution in instance spider/phone_1/0014 (2663)
	EXPECTED OUTPUT ====

		SELECT T2.Hardware_Model_name
		FROM chip_model AS T1
		JOIN phone AS T2 ON T1.Model_name = T2.chip_model
		WHERE T1.Launch_year = 2002
		ORDER BY T1.RAM_MiB DESC
		LIMIT 1;

	  hardware_model_name
	0      QMwGT-I9300e5P
	ACTUAL OUTPUT ====

		
		SELECT hardware_model_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM
		           (SELECT LHS.model_name AS model_name,
		                   LHS.launch_year AS launch_year,
		                   LHS.ram_mib AS ram_mib,
		                   LHS.rom_mib AS rom_mib,
		                   LHS.slots AS slots,
		                   LHS.wifi AS wifi,
		                   LHS.bluetooth AS bluetooth,
		                   RHS.company_name AS company_name,
		                   RHS.hardware_model_name AS hardware_model_name,
		                   RHS.accreditation_type AS accreditation_type,
		                   RHS.accreditation_level AS accreditation_level,
		                   RHS.date AS date,
		                   RHS.chip_model AS chip_model,
		                   RHS.screen_mode AS screen_mode
		            FROM chip_model AS LHS
		            CROSS JOIN phone AS RHS)
		         WHERE (launch_year = 2002.0
		                AND launch_year != 1.0))
		      ORDER BY ram_mib DESC)
		   LIMIT 1)

	  hardware_model_name
	0            GT-I9300
No solution for instance spider/phone_1/0009 (2664)
Wrong output for fuzzied solution in instance spider/phone_1/0025 (2665)
	EXPECTED OUTPUT ====

		SELECT avg(RAM_MiB)
		FROM chip_model
		WHERE model_name NOT IN
		    (SELECT chip_model
		     FROM phone)

	  avg(ram_mib)
	0         None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT meanram_mib AS avg_ram_mib_
		FROM
		  (SELECT LHS.model_name AS model_name,
		          LHS.launch_year AS launch_year,
		          LHS.ram_mib AS ram_mib,
		          LHS.rom_mib AS rom_mib,
		          LHS.slots AS slots,
		          LHS.wifi AS wifi,
		          LHS.bluetooth AS bluetooth,
		          LHS.company_name AS company_name,
		          LHS.hardware_model_name AS hardware_model_name,
		          LHS.accreditation_type AS accreditation_type,
		          LHS.accreditation_level AS accreditation_level,
		          LHS.date AS date,
		          LHS.chip_model AS chip_model,
		          LHS.screen_mode AS screen_mode,
		          LHS.meanram_mib AS meanram_mib,
		          RHS.model_name AS model_name_other,
		          RHS.launch_year AS launch_year_other,
		          RHS.ram_mib AS ram_mib_other,
		          RHS.rom_mib AS rom_mib_other,
		          RHS.slots AS slots_other,
		          RHS.wifi AS wifi_other,
		          RHS.bluetooth AS bluetooth_other,
		          RHS.company_name AS company_name_other,
		          RHS.hardware_model_name AS hardware_model_name_other,
		          RHS.accreditation_type AS accreditation_type_other,
		          RHS.accreditation_level AS accreditation_level_other,
		          RHS.date AS date_other,
		          RHS.chip_model AS chip_model_other,
		          RHS.screen_mode AS screen_mode_other,
		          RHS.meanram_mib AS meanram_mib_other
		   FROM
		     (SELECT LHS.model_name AS model_name,
		             LHS.launch_year AS launch_year,
		             LHS.ram_mib AS ram_mib,
		             LHS.rom_mib AS rom_mib,
		             LHS.slots AS slots,
		             LHS.wifi AS wifi,
		             LHS.bluetooth AS bluetooth,
		             LHS.company_name AS company_name,
		             LHS.hardware_model_name AS hardware_model_name,
		             LHS.accreditation_type AS accreditation_type,
		             LHS.accreditation_level AS accreditation_level,
		             LHS.date AS date,
		             LHS.chip_model AS chip_model,
		             LHS.screen_mode AS screen_mode,
		             RHS.meanram_mib AS meanram_mib
		      FROM
		        (SELECT LHS.model_name AS model_name,
		                LHS.launch_year AS launch_year,
		                LHS.ram_mib AS ram_mib,
		                LHS.rom_mib AS rom_mib,
		                LHS.slots AS slots,
		                LHS.wifi AS wifi,
		                LHS.bluetooth AS bluetooth,
		                RHS.company_name AS company_name,
		                RHS.hardware_model_name AS hardware_model_name,
		                RHS.accreditation_type AS accreditation_type,
		                RHS.accreditation_level AS accreditation_level,
		                RHS.date AS date,
		                RHS.chip_model AS chip_model,
		                RHS.screen_mode AS screen_mode
		         FROM chip_model AS LHS
		         CROSS JOIN phone AS RHS) AS LHS
		      INNER JOIN
		        (SELECT slots,
		                AVG(ram_mib) AS meanram_mib
		         FROM chip_model
		         GROUP BY slots) AS RHS ON (LHS.slots = RHS.slots)) AS LHS
		   CROSS JOIN
		     (SELECT LHS.model_name AS model_name,
		             LHS.launch_year AS launch_year,
		             LHS.ram_mib AS ram_mib,
		             LHS.rom_mib AS rom_mib,
		             LHS.slots AS slots,
		             LHS.wifi AS wifi,
		             LHS.bluetooth AS bluetooth,
		             LHS.company_name AS company_name,
		             LHS.hardware_model_name AS hardware_model_name,
		             LHS.accreditation_type AS accreditation_type,
		             LHS.accreditation_level AS accreditation_level,
		             LHS.date AS date,
		             LHS.chip_model AS chip_model,
		             LHS.screen_mode AS screen_mode,
		             RHS.meanram_mib AS meanram_mib
		      FROM
		        (SELECT LHS.model_name AS model_name,
		                LHS.launch_year AS launch_year,
		                LHS.ram_mib AS ram_mib,
		                LHS.rom_mib AS rom_mib,
		                LHS.slots AS slots,
		                LHS.wifi AS wifi,
		                LHS.bluetooth AS bluetooth,
		                RHS.company_name AS company_name,
		                RHS.hardware_model_name AS hardware_model_name,
		                RHS.accreditation_type AS accreditation_type,
		                RHS.accreditation_level AS accreditation_level,
		                RHS.date AS date,
		                RHS.chip_model AS chip_model,
		                RHS.screen_mode AS screen_mode
		         FROM chip_model AS LHS
		         CROSS JOIN phone AS RHS) AS LHS
		      INNER JOIN
		        (SELECT slots,
		                AVG(ram_mib) AS meanram_mib
		         FROM chip_model
		         GROUP BY slots) AS RHS ON (LHS.slots = RHS.slots)) AS RHS)
		WHERE (ram_mib > meanram_mib
		       AND meanram_mib > meanram_mib_other)
		ORDER BY avg_ram_mib_

	   avg_ram_mib_
	0        47.995
	1        48.020
Wrong output for fuzzied solution in instance spider/phone_1/0011 (2666)
	EXPECTED OUTPUT ====

		SELECT Company_name,
		       count(*)
		FROM phone
		GROUP BY Company_name
		ORDER BY count(*) ASC
		LIMIT 1;

	                      company_name  count(*)
	0  3oGgLSony Mobile Communications         1
	ACTUAL OUTPUT ====

		
		SELECT company_name,
		       n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT accreditation_level,
		                company_name,
		                COUNT() AS n
		         FROM phone
		         GROUP BY accreditation_level,
		                  company_name)
		      ORDER BY accreditation_level)
		   LIMIT 1)

	                company_name  count___
	0  Sony Mobile Communication         1
No solution for instance spider/phone_1/0010 (2667)
No solution for instance spider/chinook_1/0042 (2668)
No solution for instance spider/chinook_1/0033 (2669)
Wrong output for base solution in instance spider/chinook_1/0037 (2670)
	EXPECTED OUTPUT ====

	   avg_t2_unitprice_
	0               0.99
	ACTUAL OUTPUT ====

		SELECT AVG(T2.UnitPrice)
		FROM GENRE AS T1
		JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId
		WHERE T1.Name = "Rock"

	   avg(t2.unitprice)
	0               0.99
Wrong output for ground truth in instance spider/chinook_1/0037 (2670)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_26476.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27225.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Timeout while getting results...


Wrong output for base solution in instance spider/chinook_1/0027 (2678)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.FirstName
		FROM CUSTOMER AS T1
		JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId
		WHERE T1.country = "Brazil"

	   firstname
	0  Alexandre
	1    Eduardo
	2   Fernanda
	3       Luís
	4    Roberto
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `firstname`
		FROM
		  (SELECT `LHS`.`customerid` AS `customerid`,
		          `LHS`.`firstname` AS `firstname`,
		          `LHS`.`lastname` AS `lastname`,
		          `LHS`.`company` AS `company`,
		          `LHS`.`address` AS `address`,
		          `LHS`.`city` AS `city`,
		          `LHS`.`state` AS `state`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`postalcode` AS `postalcode`,
		          `LHS`.`phone` AS `phone`,
		          `LHS`.`fax` AS `fax`,
		          `LHS`.`email` AS `email`,
		          `LHS`.`supportrepid` AS `supportrepid`,
		          `LHS`.`invoiceid` AS `invoiceid`,
		          `LHS`.`invoicedate` AS `invoicedate`,
		          `LHS`.`billingaddress` AS `billingaddress`,
		          `LHS`.`billingcity` AS `billingcity`,
		          `LHS`.`billingstate` AS `billingstate`,
		          `LHS`.`billingcountry` AS `billingcountry`,
		          `LHS`.`billingpostalcode` AS `billingpostalcode`,
		          `LHS`.`total` AS `total`
		   FROM
		     (SELECT `LHS`.`customerid` AS `customerid`,
		             `LHS`.`firstname` AS `firstname`,
		             `LHS`.`lastname` AS `lastname`,
		             `LHS`.`company` AS `company`,
		             `LHS`.`address` AS `address`,
		             `LHS`.`city` AS `city`,
		             `LHS`.`state` AS `state`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`postalcode` AS `postalcode`,
		             `LHS`.`phone` AS `phone`,
		             `LHS`.`fax` AS `fax`,
		             `LHS`.`email` AS `email`,
		             `LHS`.`supportrepid` AS `supportrepid`,
		             `RHS`.`invoiceid` AS `invoiceid`,
		             `RHS`.`invoicedate` AS `invoicedate`,
		             `RHS`.`billingaddress` AS `billingaddress`,
		             `RHS`.`billingcity` AS `billingcity`,
		             `RHS`.`billingstate` AS `billingstate`,
		             `RHS`.`billingcountry` AS `billingcountry`,
		             `RHS`.`billingpostalcode` AS `billingpostalcode`,
		             `RHS`.`total` AS `total`
		      FROM `customer` AS `LHS`
		      INNER JOIN `invoice` AS `RHS` ON (`LHS`.`customerid` = `RHS`.`customerid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `customer`
		      WHERE (`country` = 'Brazil')) AS RHS ON (LHS.customerid = RHS.customerid
		                                               AND LHS.firstname = RHS.firstname
		                                               AND LHS.lastname = RHS.lastname
		                                               AND LHS.company = RHS.company
		                                               AND LHS.address = RHS.address
		                                               AND LHS.city = RHS.city
		                                               AND LHS.state = RHS.state
		                                               AND LHS.country = RHS.country
		                                               AND LHS.postalcode = RHS.postalcode
		                                               AND LHS.phone = RHS.phone
		                                               AND LHS.fax = RHS.fax
		                                               AND LHS.email = RHS.email
		                                               AND LHS.supportrepid = RHS.supportrepid))
		ORDER BY firstname

	   firstname
	0  Alexandre
	1    Eduardo
	2       Luís
	3    Roberto
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_27743.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_28081.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Timeout while getting results...


Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_28608.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Timeout while getting results...


No solution for instance spider/chinook_1/0032 (2689)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_29126.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_29463.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_29751.sqlite3'
Memout while getting results...


Timeout while getting results...


Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_30154.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_30154.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_30446.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_30735.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_31023.sqlite3'
Memout while getting results...


Timeout while getting results...


Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_31425.sqlite3'
Wrong output for fuzzied solution in instance spider/scientist_1/0015 (2717)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.name
		FROM projects AS T1
		JOIN assignedto AS T2 ON T1.code = T2.project
		WHERE T1.hours > 300
		GROUP BY T1.name

	   count(*)                       name
	0         5        A Puzzling Parallax
	1         8   Build Your Own Telescope
	2        12  A Silver-Cleaning Battery
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       name
		FROM
		  (SELECT LHS.code AS code,
		          LHS.name AS name,
		          LHS.hours AS hours,
		          RHS.n AS n
		   FROM
		     (SELECT *
		      FROM projects
		      WHERE (hours >= 300)) AS LHS
		   INNER JOIN
		     (SELECT project,
		             COUNT() AS n
		      FROM assignedto
		      GROUP BY project) AS RHS ON (LHS.code = RHS.project))
		ORDER BY count___

	   count___                       name
	0         5        A Puzzling Parallax
	1         5  A Silver-Cleaning Battery
	2         5    Build Your Own Telescop
	3         7  A Silver-Cleaning Battery
	4         8   Build Your Own Telescope
Wrong output for fuzzied solution in instance spider/scientist_1/0005 (2718)
	EXPECTED OUTPUT ====

		SELECT avg(hours)
		FROM projects

	   avg(hours)
	0       199.5
	ACTUAL OUTPUT ====

		
		SELECT meanhours AS avg_hours_
		FROM
		  (SELECT AVG(hours) AS meanhours
		   FROM
		     (SELECT hours,
		             name,
		             AVG(hours) AS meanhours
		      FROM projects
		      GROUP BY hours,
		               name))
		ORDER BY avg_hours_

	   avg_hours_
	0  207.454545
Wrong output for fuzzied solution in instance spider/scientist_1/0016 (2719)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.name
		FROM scientists AS T1
		JOIN assignedto AS T2 ON T1.ssn = T2.scientist
		GROUP BY T1.name

	   count(*)                 name
	0         3  T5IaXEric Goldsmith
	1         6          Zacary Efro
	2        11         Zacary Efron
	3        12          Carol Smith
	4        15           arol Smith
	5        24       Eric Goldsmith
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___,
		                name
		FROM
		  (SELECT name,
		          scientist,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.ssn AS ssn,
		             LHS.name AS name,
		             RHS.scientist AS scientist,
		             RHS.project AS project
		      FROM scientists AS LHS
		      CROSS JOIN assignedto AS RHS)
		   GROUP BY name,
		            scientist)
		ORDER BY count___

	    count___                 name
	0          3  T5IaXEric Goldsmith
	1          3          Zacary Efro
	2          4  T5IaXEric Goldsmith
	3          4          Zacary Efro
	4          5  T5IaXEric Goldsmith
	5          5          Zacary Efro
	6          6          Carol Smith
	7          6  T5IaXEric Goldsmith
	8          6          Zacary Efro
	9          6         Zacary Efron
	10         6           arol Smith
	11         7  T5IaXEric Goldsmith
	12         7          Zacary Efro
	13         8          Carol Smith
	14         8  T5IaXEric Goldsmith
	15         8          Zacary Efro
	16         8         Zacary Efron
	17         8           arol Smith
	18        10          Carol Smith
	19        10  T5IaXEric Goldsmith
	20        10          Zacary Efro
	21        10         Zacary Efron
	22        10           arol Smith
	23        12          Carol Smith
	24        12       Eric Goldsmith
	25        12         Zacary Efron
	26        12           arol Smith
	27        14          Carol Smith
	28        14         Zacary Efron
	29        14           arol Smith
	30        16          Carol Smith
	31        16       Eric Goldsmith
	32        16         Zacary Efron
	33        16           arol Smith
	34        20          Carol Smith
	35        20       Eric Goldsmith
	36        20         Zacary Efron
	37        20           arol Smith
	38        24       Eric Goldsmith
	39        28       Eric Goldsmith
	40        32       Eric Goldsmith
	41        40       Eric Goldsmith
Wrong output for fuzzied solution in instance spider/scientist_1/0018 (2720)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM assignedto AS T1
		JOIN scientists AS T2 ON T1.scientist = T2.ssn

	           name
	0   Carol Smith
	1   Carol Smith
	2   Carol Smith
	3   Carol Smith
	4   Carol Smith
	..          ...
	66   arol Smith
	67   arol Smith
	68   arol Smith
	69   arol Smith
	70   arol Smith
	
	[71 rows x 1 columns]
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM scientists
		ORDER BY name

	                   name
	0           Carol Smith
	1           Carol Smith
	2        Eric Goldsmith
	3        Eric Goldsmith
	4        Eric Goldsmith
	5        Eric Goldsmith
	6   T5IaXEric Goldsmith
	7           Zacary Efro
	8          Zacary Efron
	9          Zacary Efron
	10           arol Smith
	11           arol Smith
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_31425.sqlite3'
Wrong output for fuzzied solution in instance spider/scientist_1/0021 (2723)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM scientists
		WHERE ssn NOT IN
		    (SELECT scientist
		     FROM AssignedTo)

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT ssn,
		             name,
		             scientist,
		             name AS project
		      FROM
		        (SELECT LHS.ssn AS ssn,
		                LHS.name AS name,
		                RHS.scientist AS scientist
		         FROM scientists AS LHS
		         INNER JOIN assignedto AS RHS ON (LHS.name = RHS.project))))
		ORDER BY count___

	   count___
	0         0
Error while executing solution for instance spider/scientist_1/0023 (2724)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/scientist_1/0023 (2724)
Wrong output for fuzzied solution in instance spider/scientist_1/0014 (2726)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.name
		FROM projects AS T1
		JOIN assignedto AS T2 ON T1.code = T2.project
		GROUP BY T1.name

	   count(*)                                          name
	0         7                 N2)TPBuild Your Own Telescope
	1         7            acterial Transformation Efficiency
	2        12                      Build Your Own Telescope
	3        12   Juicy: Extracting Apple Juice with Pectinas
	4        13           Bacterial Transformation Efficiency
	5        20  Juicy: Extracting Apple Juice with Pectinase
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       name
		FROM
		  (SELECT hours,
		          name,
		          COUNT() AS n
		   FROM
		     (SELECT code,
		             name,
		             hours,
		             scientist,
		             code AS project
		      FROM
		        (SELECT LHS.code AS code,
		                LHS.name AS name,
		                LHS.hours AS hours,
		                RHS.scientist AS scientist
		         FROM projects AS LHS
		         INNER JOIN assignedto AS RHS ON (LHS.code = RHS.project)))
		   GROUP BY hours,
		            name)
		ORDER BY count___

	    count___                                          name
	0          3           Bacterial Transformation Efficiency
	1          4  Juicy: Extracting Apple Juice with Pectinase
	2          5   Juicy: Extracting Apple Juice with Pectinas
	3          6                      Build Your Own Telescope
	4          6                      Build Your Own Telescope
	5          7   Juicy: Extracting Apple Juice with Pectinas
	6          7  Juicy: Extracting Apple Juice with Pectinase
	7          7                 N2)TPBuild Your Own Telescope
	8          7            acterial Transformation Efficiency
	9          9  Juicy: Extracting Apple Juice with Pectinase
	10        10           Bacterial Transformation Efficiency
No solution for instance spider/scientist_1/0009 (2727)
No solution for instance spider/scientist_1/0010 (2729)
Error while executing solution for instance spider/game_1/0033 (2730)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT stuid) OVER () AS count_distinct_stuid_
FROM plays_games
ORDER BY count_distinct_stuid_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/game_1/0002 (2732)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT gtype)
		FROM Video_games

	   count(distinct gtype)
	0                      4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count_distinct_gtype_
		FROM video_games
		ORDER BY count_distinct_gtype_

	   count_distinct_gtype_
	0                      6
Error while executing solution for instance spider/game_1/0017 (2734)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT stuid) OVER () AS count_distinct_stuid_
FROM sportsinfo
ORDER BY count_distinct_stuid_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/game_1/0008 (2735)
	EXPECTED OUTPUT ====

		SELECT gtype,
		       count(*)
		FROM Video_games
		GROUP BY gtype

	                    gtype  count(*)
	0  Role-playing gameMO0MO         1
	1  Y8nq4Role-playing game         1
	2          Grand strategy         2
	3       Role-playing game         2
	ACTUAL OUTPUT ====

		
		SELECT gtype,
		       n AS count___
		FROM
		  (SELECT gameid,
		          gtype,
		          COUNT() AS n
		   FROM video_games
		   GROUP BY gameid,
		            gtype)
		ORDER BY gtype

	                    gtype  count___
	0          Grand strategy         1
	1          Grand strategy         1
	2       Role-playing game         1
	3       Role-playing game         1
	4  Role-playing gameMO0MO         1
	5  Y8nq4Role-playing game         1
Wrong output for fuzzied solution in instance spider/game_1/0039 (2736)
	EXPECTED OUTPUT ====

		SELECT gname
		FROM Plays_games AS T1
		JOIN Video_games AS T2 ON T1.gameid = T2.gameid
		GROUP BY T1.gameid
		HAVING sum(hours_played) >= 1000

	                     gname
	0   Europe is the Universe
	1   Europe is the Universe
	2    urope is the Universe
	3  wS1Works of WideniushT 
	ACTUAL OUTPUT ====

		
		SELECT gname
		FROM
		  (SELECT LHS.gameid AS gameid,
		          LHS.gname AS gname,
		          LHS.gtype AS gtype,
		          RHS.stuid AS stuid,
		          RHS.hours_played AS hours_played
		   FROM video_games AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM plays_games
		      WHERE (hours_played >= 1000)) AS RHS ON (LHS.gameid = RHS.gameid))
		ORDER BY gname

	                     gname
	0   Europe is the Universe
	1   Europe is the Universe
	2   Europe is the Universe
	3    urope is the Universe
	4    urope is the Universe
	5  wS1Works of WideniushT 
Wrong output for fuzzied solution in instance spider/game_1/0038 (2737)
	EXPECTED OUTPUT ====

		SELECT gname
		FROM Plays_games AS T1
		JOIN Video_games AS T2 ON T1.gameid = T2.gameid
		GROUP BY T1.gameid
		ORDER BY sum(hours_played) DESC
		LIMIT 1

	                    gname
	0  Europe is the Universe
	ACTUAL OUTPUT ====

		
		SELECT gname
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.gameid AS gameid,
		                LHS.gname AS gname,
		                LHS.gtype AS gtype,
		                LHS.stuid AS stuid,
		                LHS.hours_played AS hours_played,
		                RHS.sumhours_played AS sumhours_played
		         FROM
		           (SELECT LHS.gameid AS gameid,
		                   LHS.gname AS gname,
		                   LHS.gtype AS gtype,
		                   RHS.stuid AS stuid,
		                   RHS.hours_played AS hours_played
		            FROM video_games AS LHS
		            INNER JOIN plays_games AS RHS ON (LHS.gameid = RHS.gameid)) AS LHS
		         INNER JOIN
		           (SELECT stuid,
		                   gameid,
		                   hours_played,
		                   SUM(hours_played) OVER () AS sumhours_played
		            FROM plays_games) AS RHS ON (LHS.gameid = RHS.gameid
		                                            AND LHS.stuid = RHS.stuid
		                                            AND LHS.hours_played = RHS.hours_played))
		      ORDER BY gname DESC)
		   LIMIT 1)

	                     gname
	0  wS1Works of WideniushT 
Wrong output for fuzzied solution in instance spider/game_1/0003 (2738)
	EXPECTED OUTPUT ====

		SELECT DISTINCT gtype
		FROM Video_games

	                    gtype
	0          Grand strategy
	1       Role-playing game
	2  Role-playing gameMO0MO
	3  Y8nq4Role-playing game
	ACTUAL OUTPUT ====

		
		SELECT gtype
		FROM video_games
		ORDER BY gtype

	                    gtype
	0          Grand strategy
	1          Grand strategy
	2       Role-playing game
	3       Role-playing game
	4  Role-playing gameMO0MO
	5  Y8nq4Role-playing game
Wrong output for fuzzied solution in instance spider/game_1/0013 (2742)
	EXPECTED OUTPUT ====

		SELECT Fname
		FROM Student
		WHERE Major = 600

	       fname
	0       Andy
	1  AndywHVqK
	ACTUAL OUTPUT ====

		
		SELECT fname
		FROM student
		WHERE (major >= 600)
		ORDER BY fname

	       fname
	0       Andy
	1       Andy
	2  AndywHVqK
Wrong output for fuzzied solution in instance spider/game_1/0012 (2745)
	EXPECTED OUTPUT ====

		SELECT StuID
		FROM Student
		WHERE Advisor = 1121

	   stuid
	0   1023
	ACTUAL OUTPUT ====

		
		SELECT stuid
		FROM
		  (SELECT *
		   FROM student AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM student
		           WHERE (advisor <= 1121)) AS RHS
		        WHERE (LHS.stuid = RHS.stuid
		               AND LHS.lname = RHS.lname
		               AND LHS.fname = RHS.fname
		               AND LHS.age = RHS.age
		               AND LHS.sex = RHS.sex
		               AND LHS.major = RHS.major
		               AND LHS.advisor = RHS.advisor
		               AND LHS.city_code = RHS.city_code) ))
		ORDER BY stuid

	   stuid
	0   1023
	1   1031
Wrong output for fuzzied solution in instance spider/game_1/0026 (2746)
	EXPECTED OUTPUT ====

		SELECT sportname
		FROM Sportsinfo
		WHERE onscholarship = 'Y'
		GROUP BY sportname
		ORDER BY count(*) DESC
		LIMIT 1

	  sportname
	0    Soccer
	ACTUAL OUTPUT ====

		
		SELECT `sportname`
		FROM
		  (SELECT `onscholarship`,
		          `sportname`,
		          COUNT() AS `n`
		   FROM `sportsinfo`
		   GROUP BY `onscholarship`,
		            `sportname`)
		WHERE (`onscholarship` = 'Y'
		       AND n > 1)
		ORDER BY sportname

	    sportname
	0   Basketbal
	1  Basketball
	2      Soccer
Error while executing solution for instance spider/game_1/0016 (2749)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT sportname) OVER () AS count_distinct_sportname_
FROM sportsinfo
ORDER BY count_distinct_sportname_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/game_1/0032 (2750)
Wrong output for fuzzied solution in instance spider/game_1/0041 (2752)
	EXPECTED OUTPUT ====

		SELECT T2.lname,
		       T2.fname
		FROM SportsInfo AS T1
		JOIN Student AS T2 ON T1.StuID = T2.StuID
		WHERE T1.SportName = "Football"
		  OR T1.SportName = "Lacrosse"

	         lname         fname
	0           im  ()8Steven47v
	1           im  ()8Steven47v
	2          Tai          Davi
	3          Tai          Davi
	4          Tai          Davi
	5          Tai          Davi
	6    Y EHanW8O         David
	7    Y EHanW8O         David
	8    6P9HanYBv    Davidf1xzD
	9     KimnpOO(        Dinesh
	10    KimnpOO(        Dinesh
	11    KimnpOO(        Dinesh
	12    KimnpOO(        Dinesh
	13    KimnpOO(        Dinesh
	14   vZ1Kim8)t        Dinesh
	15   vZ1Kim8)t        Dinesh
	16   vZ1Kim8)t        Dinesh
	17   vZ1Kim8)t        Dinesh
	18   vZ1Kim8)t        Dinesh
	19   vZ1Kim8)t        Dinesh
	20          Ki          Eric
	21          Ki          Eric
	22          Ki          Eric
	23          Ki          Eric
	24          Ki          Eric
	25          Ki          Eric
	26          Ki          Eric
	27          Ki          Eric
	28          im          Eric
	29          im          Eric
	30          im          Eric
	31       Smith   RHVeiShiela
	32       Smith   RHVeiShiela
	33       Smith   RHVeiShiela
	34       Smith   RHVeiShiela
	35       Smith   RHVeiShiela
	36   VPJTaiYbX         Shiel
	37   VPJTaiYbX         Shiel
	38   VPJTaiYbX         Shiel
	39   VPJTaiYbX         Shiel
	40   VPJTaiYbX         Shiel
	41         Kim        Steven
	42         Kim        Steven
	43         Kim        Steven
	44         Kim        Steven
	45         Kim        Steven
	46         Kim        Steven
	47         Kim        Steven
	48         Kim        Steven
	49         Kim        Steven
	50          Ta  auPShielaUBs
	51          Ta  auPShielaUBs
	52          Ta  auPShielaUBs
	53          Ta  auPShielaUBs
	54          Ta  auPShielaUBs
	55  Smithusp3q   f55TDShiela
	56  Smithusp3q   f55TDShiela
	ACTUAL OUTPUT ====

		
		SELECT `lname`,
		       `fname`
		FROM
		  (SELECT *
		   FROM `student` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `sportsinfo`
		           WHERE (`sportname` = 'Football'
		                  OR `sportname` = 'Lacrosse')) AS RHS
		        WHERE (LHS.stuid = RHS.stuid) ))
		ORDER BY lname

	         lname         fname
	0           im  ()8Steven47v
	1          Tai          Davi
	2    Y EHanW8O         David
	3    6P9HanYBv    Davidf1xzD
	4     KimnpOO(        Dinesh
	5    vZ1Kim8)t        Dinesh
	6           Ki          Eric
	7           im          Eric
	8        Smith   RHVeiShiela
	9    VPJTaiYbX         Shiel
	10         Kim        Steven
	11         Kim        Steven
	12          Ta  auPShielaUBs
	13  Smithusp3q   f55TDShiela
Wrong output for fuzzied solution in instance spider/game_1/0020 (2754)
	EXPECTED OUTPUT ====

		SELECT sum(gamesplayed)
		FROM Sportsinfo

	   sum(gamesplayed)
	0              1497
	ACTUAL OUTPUT ====

		
		SELECT sumgamesplayed AS sum_gamesplayed_
		FROM
		  (SELECT SUM(gamesplayed) AS sumgamesplayed
		   FROM
		     (SELECT gamesplayed,
		             hoursperweek,
		             SUM(gamesplayed) AS sumgamesplayed
		      FROM sportsinfo
		      GROUP BY gamesplayed,
		               hoursperweek))
		ORDER BY sum_gamesplayed_

	   sum_gamesplayed_
	0              1079
Wrong output for fuzzied solution in instance spider/game_1/0007 (2756)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Video_games
		WHERE gtype = "Massively multiplayer online game"

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n_distinct` AS `count___`
		FROM
		  (SELECT `gname`,
		          `gtype`,
		          COUNT(DISTINCT `gtype`) AS `n_distinct`
		   FROM `video_games`
		   GROUP BY `gname`,
		            `gtype`)
		WHERE (`gtype` != 'Massively multiplayer online game')
		ORDER BY count___

	   count___
	0         1
Wrong output for fuzzied solution in instance spider/game_1/0024 (2758)
	EXPECTED OUTPUT ====

		SELECT StuID
		FROM Sportsinfo
		GROUP BY StuID
		HAVING sum(hoursperweek) > 10

	         stuid
	0  -8527832148
	1         1001
	2         1002
	3         1003
	4         1004
	5         1015
	6         1016
	7         1017
	8         1018
	9         1020
	10        1021
	11        1022
	12        1024
	13        1025
	14        1026
	15        1027
	16        1028
	17        1029
	18        1030
	19   637594786
	20   708767579
	21   905802405
	22  1486960614
	23  1759743098
	24  2516950249
	25  2730146880
	26  3072477009
	27  3385800163
	28  3600098594
	29  3895011354
	30  4521880068
	31  5089031817
	32  5326941777
	33  7072521753
	34  7272212881
	35  7985663842
	36  8289816711
	37  8490803100
	38  8837255743
	39  9914093848
	ACTUAL OUTPUT ====

		
		SELECT stuid
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT stuid,
		                SUM(hoursperweek) AS sumhoursperweek
		         FROM sportsinfo
		         GROUP BY stuid)
		      ORDER BY stuid DESC)
		   LIMIT 10)

	        stuid
	0  4521880068
	1  5089031817
	2  5326941777
	3  7072521753
	4  7272212881
	5  7985663842
	6  8289816711
	7  8490803100
	8  8837255743
	9  9914093848
Wrong output for fuzzied solution in instance spider/game_1/0021 (2759)
	EXPECTED OUTPUT ====

		SELECT sum(gamesplayed)
		FROM Sportsinfo
		WHERE sportname = "Football"
		  AND onscholarship = 'Y'

	  sum(gamesplayed)
	0             None
	ACTUAL OUTPUT ====

		
		SELECT `sumgamesplayed` AS `sum_gamesplayed_`
		FROM
		  (SELECT `onscholarship`,
		          `sportname`,
		          SUM(`gamesplayed`) AS `sumgamesplayed`
		   FROM `sportsinfo`
		   GROUP BY `onscholarship`,
		            `sportname`)
		WHERE (`sportname` = 'Football'
		       AND `onscholarship` = 'Y')
		ORDER BY sum_gamesplayed_

	Empty DataFrame
	Columns: [sum_gamesplayed_]
	Index: []
Wrong output for base solution in instance spider/game_1/0014 (2762)
	EXPECTED OUTPUT ====

	   major   avg_age_  min_age_  max_age_
	0    100  17.000000        17        17
	1    540  17.500000        17        18
	2    520  19.333333        18        22
	3    600  19.666667        16        27
	4    550  19.800000        18        21
	5     50  22.000000        18        26
	ACTUAL OUTPUT ====

		SELECT major,
		       avg(age),
		       min(age),
		       max(age)
		FROM Student
		GROUP BY major

	   major   avg(age)  min(age)  max(age)
	0     50  22.000000        18        26
	1    100  17.000000        17        17
	2    520  19.333333        18        22
	3    540  17.500000        17        18
	4    550  19.800000        18        21
	5    600  19.666667        16        27
Wrong output for ground truth in instance spider/game_1/0014 (2762)
Wrong output for fuzzied solution in instance spider/game_1/0009 (2763)
	EXPECTED OUTPUT ====

		SELECT gtype
		FROM Video_games
		GROUP BY gtype
		ORDER BY count(*) DESC
		LIMIT 1

	               gtype
	0  Role-playing game
	ACTUAL OUTPUT ====

		
		SELECT gtype
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT gtype,
		                COUNT() AS n
		         FROM video_games
		         GROUP BY gtype)
		      ORDER BY gtype DESC)
		   LIMIT 1)

	                    gtype
	0  Y8nq4Role-playing game
Wrong output for fuzzied solution in instance spider/game_1/0025 (2764)
	EXPECTED OUTPUT ====

		SELECT T2.Fname,
		       T2.Lname
		FROM Sportsinfo AS T1
		JOIN Student AS T2 ON T1.StuID = T2.StuID
		GROUP BY T1.StuID
		ORDER BY count(*) DESC
		LIMIT 1

	        fname lname
	0  zING4David  mith
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT fname,
		                lname
		FROM
		  (SELECT LHS.stuid AS stuid,
		          LHS.sportname AS sportname,
		          LHS.hoursperweek AS hoursperweek,
		          LHS.gamesplayed AS gamesplayed,
		          LHS.onscholarship AS onscholarship,
		          LHS.lname AS lname,
		          LHS.fname AS fname,
		          LHS.age AS age,
		          LHS.sex AS sex,
		          LHS.major AS major,
		          LHS.advisor AS advisor,
		          LHS.city_code AS city_code,
		          LHS.n AS n,
		          RHS.stuid AS stuid_other,
		          RHS.sportname AS sportname_other,
		          RHS.gamesplayed AS gamesplayed_other,
		          RHS.onscholarship AS onscholarship_other,
		          RHS.lname AS lname_other,
		          RHS.fname AS fname_other,
		          RHS.age AS age_other,
		          RHS.sex AS sex_other,
		          RHS.major AS major_other,
		          RHS.advisor AS advisor_other
		   FROM
		     (SELECT stuid,
		             sportname,
		             hoursperweek,
		             gamesplayed,
		             onscholarship,
		             lname,
		             fname,
		             age,
		             sex,
		             major,
		             advisor,
		             city_code,
		             COUNT(*) OVER () AS n
		      FROM
		        (SELECT LHS.stuid AS stuid,
		                LHS.sportname AS sportname,
		                LHS.hoursperweek AS hoursperweek,
		                LHS.gamesplayed AS gamesplayed,
		                LHS.onscholarship AS onscholarship,
		                RHS.lname AS lname,
		                RHS.fname AS fname,
		                RHS.age AS age,
		                RHS.sex AS sex,
		                RHS.major AS major,
		                RHS.advisor AS advisor,
		                RHS.city_code AS city_code
		         FROM sportsinfo AS LHS
		         LEFT JOIN student AS RHS ON (LHS.stuid = RHS.stuid))) AS LHS
		   INNER JOIN
		     (SELECT LHS.stuid AS stuid,
		             LHS.sportname AS sportname,
		             LHS.hoursperweek AS hoursperweek,
		             LHS.gamesplayed AS gamesplayed,
		             LHS.onscholarship AS onscholarship,
		             RHS.lname AS lname,
		             RHS.fname AS fname,
		             RHS.age AS age,
		             RHS.sex AS sex,
		             RHS.major AS major,
		             RHS.advisor AS advisor,
		             RHS.city_code AS city_code
		      FROM sportsinfo AS LHS
		      LEFT JOIN student AS RHS ON (LHS.stuid = RHS.stuid)) AS RHS ON (LHS.n = RHS.hoursperweek
		                                                                         AND LHS.city_code = RHS.city_code))
		ORDER BY fname

	Empty DataFrame
	Columns: [fname, lname]
	Index: []
Wrong output for fuzzied solution in instance spider/game_1/0029 (2766)
	EXPECTED OUTPUT ====

		SELECT StuID
		FROM Student
		WHERE sex = 'F' INTERSECT
		  SELECT StuID
		  FROM Sportsinfo WHERE sportname = "Football"

	   stuid
	0   1016
	1   1024
	ACTUAL OUTPUT ====

		
		SELECT `stuid`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `RHS`.`sportname` AS `sportname`,
		          `RHS`.`hoursperweek` AS `hoursperweek`,
		          `RHS`.`gamesplayed` AS `gamesplayed`,
		          `RHS`.`onscholarship` AS `onscholarship`
		   FROM `student` AS `LHS`
		   INNER JOIN `sportsinfo` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`))
		WHERE (`sex` = 'F'
		       AND `sportname` = 'Football')
		ORDER BY stuid

	   stuid
	0   1016
	1   1016
	2   1016
	3   1016
	4   1016
	5   1016
	6   1024
	7   1024
	8   1024
	9   1024
Wrong output for fuzzied solution in instance spider/game_1/0010 (2767)
	EXPECTED OUTPUT ====

		SELECT gtype
		FROM Video_games
		GROUP BY gtype
		ORDER BY count(*)
		LIMIT 1

	                    gtype
	0  Role-playing gameMO0MO
	ACTUAL OUTPUT ====

		
		SELECT gtype
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT gameid,
		                gtype,
		                COUNT() AS n
		         FROM video_games
		         GROUP BY gameid,
		                  gtype)
		      ORDER BY n DESC)
		   LIMIT 1)

	            gtype
	0  Grand strategy
Wrong output for fuzzied solution in instance spider/game_1/0040 (2768)
	EXPECTED OUTPUT ====

		SELECT Gname
		FROM Plays_games AS T1
		JOIN Video_games AS T2 ON T1.gameid = T2.gameid
		JOIN Student AS T3 ON T3.Stuid = T1.Stuid
		WHERE T3.Lname = "Smith"
		  AND T3.Fname = "Linda"

	                          gname
	0        Europe is the Universe
	1        Europe is the Universe
	2        Europe is the Universe
	3        Europe is the Universe
	4       QeJWorks of WideniusQqv
	5  The Vanishing of Eric Calder
	ACTUAL OUTPUT ====

		
		SELECT `gname`
		FROM
		  (SELECT `LHS`.`gameid` AS `gameid`,
		          `LHS`.`gname` AS `gname`,
		          `LHS`.`gtype` AS `gtype`,
		          `LHS`.`stuid` AS `stuid`,
		          `LHS`.`hours_played` AS `hours_played`,
		          `RHS`.`lname` AS `lname`,
		          `RHS`.`fname` AS `fname`,
		          `RHS`.`age` AS `age`,
		          `RHS`.`sex` AS `sex`,
		          `RHS`.`major` AS `major`,
		          `RHS`.`advisor` AS `advisor`,
		          `RHS`.`city_code` AS `city_code`
		   FROM
		     (SELECT `LHS`.`gameid` AS `gameid`,
		             `LHS`.`gname` AS `gname`,
		             `LHS`.`gtype` AS `gtype`,
		             `RHS`.`stuid` AS `stuid`,
		             `RHS`.`hours_played` AS `hours_played`
		      FROM `video_games` AS `LHS`
		      INNER JOIN `plays_games` AS `RHS` ON (`LHS`.`gameid` = `RHS`.`gameid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `student`
		      WHERE (`lname` = 'Smith'
		             OR `fname` = 'Linda')) AS RHS ON (LHS.stuid = RHS.stuid))
		ORDER BY gname

	                           gname
	0         Europe is the Universe
	1         Europe is the Universe
	2         Europe is the Universe
	3         Europe is the Universe
	4         Europe is the Universe
	5         Europe is the Universe
	6        QeJWorks of WideniusQqv
	7        QeJWorks of WideniusQqv
	8   The Vanishing of Eric Calder
	9   The Vanishing of Eric Calder
	10  The Vanishing of Eric Calder
	11  The Vanishing of Eric Calder
	12  The Vanishing of Eric Calder
	13  The Vanishing of Eric Calder
	14  The Vanishing of Eric Calder
Wrong output for fuzzied solution in instance spider/game_1/0028 (2769)
	EXPECTED OUTPUT ====

		SELECT StuID
		FROM Student
		WHERE major = 600 INTERSECT
		  SELECT StuID
		  FROM Sportsinfo WHERE onscholarship = 'Y'

	   stuid
	0   1034
	ACTUAL OUTPUT ====

		
		SELECT `stuid`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`sportname` AS `sportname`,
		                `RHS`.`hoursperweek` AS `hoursperweek`,
		                `RHS`.`gamesplayed` AS `gamesplayed`,
		                `RHS`.`onscholarship` AS `onscholarship`
		         FROM `student` AS `LHS`
		         INNER JOIN `sportsinfo` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`))
		      WHERE (`onscholarship` = 'Y'
		             AND major = 600)) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM student AS RHS
		        WHERE (LHS.stuid = RHS.stuid
		               AND LHS.lname = RHS.lname
		               AND LHS.fname = RHS.fname
		               AND LHS.age = RHS.age
		               AND LHS.sex = RHS.sex
		               AND LHS.major = RHS.major
		               AND LHS.advisor = RHS.advisor
		               AND LHS.city_code = RHS.city_code) ))
		ORDER BY stuid

	   stuid
	0   1034
	1   1034
	2   1034
No solution for instance spider/game_1/0031 (2770)
Wrong output for fuzzied solution in instance spider/election/0033 (2771)
	EXPECTED OUTPUT ====

		SELECT T2.Party
		FROM election AS T1
		JOIN party AS T2 ON T1.Party = T2.Party_ID
		WHERE T1.Committee = "Appropriations" INTERSECT
		  SELECT T2.Party
		  FROM election AS T1
		  JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = "Economic Matters"

	        party
	0  Democratic
	ACTUAL OUTPUT ====

		
		SELECT `party`
		FROM
		  (SELECT `LHS`.`party_id` AS `party_id`,
		          `LHS`.`year` AS `year`,
		          `LHS`.`party` AS `party`,
		          `LHS`.`governor` AS `governor`,
		          `LHS`.`lieutenant_governor` AS `lieutenant_governor`,
		          `LHS`.`comptroller` AS `comptroller`,
		          `LHS`.`attorney_general` AS `attorney_general`,
		          `LHS`.`us_senate` AS `us_senate`,
		          `RHS`.`election_id` AS `election_id`,
		          `RHS`.`counties_represented` AS `counties_represented`,
		          `RHS`.`delegate` AS `delegate`,
		          `RHS`.`party` AS `party_other`,
		          `RHS`.`first_elected` AS `first_elected`,
		          `RHS`.`committee` AS `committee`
		   FROM `party` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `election`
		      WHERE (`committee` != 'Appropriations'
		             AND `committee` = 'Economic Matters')) AS RHS ON (LHS.party_id = RHS.district))
		ORDER BY party

	       party
	0  emocratic
No solution for instance spider/election/0017 (2773)
Wrong output for fuzzied solution in instance spider/election/0003 (2775)
	EXPECTED OUTPUT ====

		SELECT avg(Population)
		FROM county

	   avg(population)
	0     66514.297143
	ACTUAL OUTPUT ====

		
		SELECT meanpopulation AS avg_population_
		FROM
		  (SELECT AVG(population) AS meanpopulation
		   FROM
		     (SELECT population,
		             zip_code,
		             AVG(population) AS meanpopulation
		      FROM county
		      GROUP BY population,
		               zip_code))
		ORDER BY avg_population_

	   avg_population_
	0     62600.013333
No solution for instance spider/election/0022 (2777)
Wrong output for fuzzied solution in instance spider/election/0030 (2778)
	EXPECTED OUTPUT ====

		SELECT Governor
		FROM party
		GROUP BY Governor
		ORDER BY COUNT(*) DESC
		LIMIT 1

	       governor
	0  liot Spitzer
	ACTUAL OUTPUT ====

		
		SELECT governor
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT governor,
		                party,
		                COUNT() AS n
		         FROM party
		         GROUP BY governor,
		                  party)
		      ORDER BY party DESC)
		   LIMIT 1)

	       governor
	0  Eliot Spitze
Wrong output for fuzzied solution in instance spider/election/0006 (2780)
	EXPECTED OUTPUT ====

		SELECT Zip_code
		FROM county
		WHERE County_name = "Howard"

	     zip_code
	0          02
	1          D0
	2          D0
	3          D0
	4          D0
	5         D02
	6    D02)09QH
	7    D02myS86
	8         D08
	9         D08
	10        D08
	11        D09
	12   D09)Ai3i
	13   D09JqaEz
	14   D09dg6QJ
	15   ICh9zD09
	16  J2uYbOwuw
	17   TVT)ED02
	18   ZBvmgD09
	19   eMoA5D02
	20       mRDo
	ACTUAL OUTPUT ====

		
		SELECT `zip_code`
		FROM
		  (SELECT `zip_code`
		   FROM `county`
		   WHERE (`county_name` = 'Howard') INTERSECT
		     SELECT zip_code
		     FROM county)
		ORDER BY zip_code

	     zip_code
	0          02
	1          D0
	2         D02
	3    D02)09QH
	4    D02myS86
	5         D08
	6         D09
	7    D09)Ai3i
	8    D09JqaEz
	9    D09dg6QJ
	10   ICh9zD09
	11  J2uYbOwuw
	12   TVT)ED02
	13   ZBvmgD09
	14   eMoA5D02
	15       mRDo
Wrong output for fuzzied solution in instance spider/election/0015 (2784)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT T2.Delegate)
		FROM county AS T1
		JOIN election AS T2 ON T1.County_id = T2.District
		WHERE T1.Population > 50000

	   count(distinct t2.delegate)
	0                            3
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count_distinct_t2_delegate_
		FROM
		  (SELECT election_id,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.election_id AS election_id,
		             LHS.counties_represented AS counties_represented,
		             LHS.district AS district,
		             LHS.delegate AS delegate,
		             LHS.party AS party,
		             LHS.first_elected AS first_elected,
		             LHS.committee AS committee,
		             RHS.county_id AS county_id,
		             RHS.county_name AS county_name,
		             RHS.population AS population,
		             RHS.zip_code AS zip_code
		      FROM election AS LHS
		      CROSS JOIN
		        (SELECT *
		         FROM county
		         WHERE (population != 50000.0)) AS RHS)
		   GROUP BY election_id)
		ORDER BY count_distinct_t2_delegate_

	   count_distinct_t2_delegate_
	0                            6
Wrong output for fuzzied solution in instance spider/election/0016 (2786)
	EXPECTED OUTPUT ====

		SELECT T1.County_name
		FROM county AS T1
		JOIN election AS T2 ON T1.County_id = T2.District
		WHERE T2.Committee = "Appropriations"

	       county_name
	0        ACtzWtA2N
	1  Baltimore Count
	2        Mansfield
	3        Mansfield
	ACTUAL OUTPUT ====

		
		SELECT `county_name`
		FROM
		  (SELECT `LHS`.`county_id` AS `county_id`,
		          `LHS`.`county_name` AS `county_name`,
		          `LHS`.`population` AS `population`,
		          `LHS`.`zip_code` AS `zip_code`,
		          `LHS`.`election_id` AS `election_id`,
		          `LHS`.`counties_represented` AS `counties_represented`,
		          `LHS`.`district` AS `district`,
		          `LHS`.`delegate` AS `delegate`,
		          `LHS`.`party` AS `party`,
		          `LHS`.`first_elected` AS `first_elected`,
		          `LHS`.`committee` AS `committee`,
		          `RHS`.`election_id` AS `election_id_other`,
		          `RHS`.`delegate` AS `delegate_other`,
		          `RHS`.`party` AS `party_other`,
		          `RHS`.`first_elected` AS `first_elected_other`,
		          `RHS`.`committee` AS `committee_other`
		   FROM
		     (SELECT `LHS`.`county_id` AS `county_id`,
		             `LHS`.`county_name` AS `county_name`,
		             `LHS`.`population` AS `population`,
		             `LHS`.`zip_code` AS `zip_code`,
		             `RHS`.`election_id` AS `election_id`,
		             `RHS`.`counties_represented` AS `counties_represented`,
		             `RHS`.`district` AS `district`,
		             `RHS`.`delegate` AS `delegate`,
		             `RHS`.`party` AS `party`,
		             `RHS`.`first_elected` AS `first_elected`,
		             `RHS`.`committee` AS `committee`
		      FROM `county` AS `LHS`
		      CROSS JOIN
		        (SELECT *
		         FROM `election`
		         WHERE (`committee` = 'Appropriations')) AS `RHS`) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `election`
		      WHERE (`committee` = 'Appropriations')) AS RHS ON (LHS.county_id = RHS.district
		                                                         AND LHS.counties_represented = RHS.counties_represented))
		ORDER BY county_name

	       county_name
	0        ACtzWtA2N
	1  Baltimore Count
	2        Mansfield
	3        Mansfield
	4        Mansfield
	5        Mansfield
Wrong output for fuzzied solution in instance spider/election/0018 (2788)
	EXPECTED OUTPUT ====

		SELECT T2.Governor
		FROM election AS T1
		JOIN party AS T2 ON T1.Party = T2.Party_ID
		WHERE T1.District = 1

	Empty DataFrame
	Columns: [governor]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT governor
		FROM
		  (SELECT party_id,
		          YEAR,
		          party_id AS party,
		          governor,
		          lieutenant_governor,
		          comptroller,
		          attorney_general,
		          us_senate,
		          election_id,
		          counties_represented,
		          district,
		          delegate,
		          first_elected,
		          committee
		   FROM
		     (SELECT LHS.party_id AS party_id,
		             LHS.year AS YEAR,
		             LHS.party AS party,
		             LHS.governor AS governor,
		             LHS.lieutenant_governor AS lieutenant_governor,
		             LHS.comptroller AS comptroller,
		             LHS.attorney_general AS attorney_general,
		             LHS.us_senate AS us_senate,
		             RHS.election_id AS election_id,
		             RHS.counties_represented AS counties_represented,
		             RHS.district AS district,
		             RHS.delegate AS delegate,
		             RHS.first_elected AS first_elected,
		             RHS.committee AS committee
		      FROM party AS LHS
		      INNER JOIN election AS RHS ON (LHS.party_id = RHS.party)))
		WHERE (district <= 1)
		ORDER BY governor

	               governor
	0   )DEhVvu2FISzLENwq O
	1           Carl McCall
	2         Eliot Spitzer
	3    WEsRxFrlfmtNO(7n0X
	4    YX4bFEliot Spitzer
	5   bXmEliot Spitzeraaw
	6          liot Spitzer
	7           om Golisano
	8           om Golisano
	9            vv vB0GRtD
	10           vv vB0GRtD
Wrong output for fuzzied solution in instance spider/election/0034 (2792)
	EXPECTED OUTPUT ====

		SELECT T1.Committee
		FROM election AS T1
		JOIN party AS T2 ON T1.Party = T2.Party_ID
		WHERE T2.Party = "Democratic" INTERSECT
		  SELECT T1.Committee
		  FROM election AS T1
		  JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = "Liberal"

	        committee
	0  Ways and Means
	ACTUAL OUTPUT ====

		
		SELECT `committee`
		FROM
		  (SELECT `party_id`,
		          `year`,
		          `party`,
		          `governor`,
		          `lieutenant_governor`,
		          `comptroller`,
		          `attorney_general`,
		          `us_senate`,
		          `counties_represented`,
		          `district`,
		          `delegate`,
		          `party_other`,
		          `committee`,
		          `election_id`,
		          `year` AS `first_elected`
		   FROM
		     (SELECT `party_id`,
		             `year`,
		             `party`,
		             `governor`,
		             `lieutenant_governor`,
		             `comptroller`,
		             `attorney_general`,
		             `us_senate`,
		             `counties_represented`,
		             `district`,
		             `delegate`,
		             `party_other`,
		             `committee`,
		             `party_id` AS `election_id`
		      FROM
		        (SELECT `LHS`.`party_id` AS `party_id`,
		                `LHS`.`year` AS `year`,
		                `LHS`.`party` AS `party`,
		                `LHS`.`governor` AS `governor`,
		                `LHS`.`lieutenant_governor` AS `lieutenant_governor`,
		                `LHS`.`comptroller` AS `comptroller`,
		                `LHS`.`attorney_general` AS `attorney_general`,
		                `LHS`.`us_senate` AS `us_senate`,
		                `RHS`.`counties_represented` AS `counties_represented`,
		                `RHS`.`district` AS `district`,
		                `RHS`.`delegate` AS `delegate`,
		                `RHS`.`party` AS `party_other`,
		                `RHS`.`committee` AS `committee`
		         FROM `party` AS `LHS`
		         INNER JOIN `election` AS `RHS` ON (`LHS`.`party_id` = `RHS`.`election_id`
		                                               AND `LHS`.`year` = `RHS`.`first_elected`))))
		WHERE (`party` != 'Democratic'
		       AND `party` != 'Liberal')
		ORDER BY committee

	Empty DataFrame
	Columns: [committee]
	Index: []
Wrong output for fuzzied solution in instance spider/election/0014 (2797)
	EXPECTED OUTPUT ====

		SELECT T2.Delegate
		FROM county AS T1
		JOIN election AS T2 ON T1.County_id = T2.District
		WHERE T1.Population < 100000

	                                       delegate
	0            Miller, Warren E. Warren E. Miller
	1            Miller, Warren E. Warren E. Miller
	2            Miller, Warren E. Warren E. Miller
	3       Miller, Warren E. Warren E. MilleruLgo2
	4       Pendergrass, Shane E. Shane Pendergrass
	5              Turner, Frank S. Frank S. Turner
	6        Tz2Turner, Frank S. Frank S. TurnerjJA
	7  u9UxgPendergrass, Shane E. Shane Pendergrass
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT delegate
		FROM
		  (SELECT LHS.election_id AS election_id,
		          LHS.counties_represented AS counties_represented,
		          LHS.district AS district,
		          LHS.delegate AS delegate,
		          LHS.party AS party,
		          LHS.first_elected AS first_elected,
		          LHS.committee AS committee,
		          RHS.county_id AS county_id,
		          RHS.county_name AS county_name,
		          RHS.population AS population,
		          RHS.zip_code AS zip_code
		   FROM election AS LHS
		   CROSS JOIN
		     (SELECT *
		      FROM county
		      WHERE (population <= 100000.0)) AS RHS)
		ORDER BY delegate

	                                       delegate
	0            Miller, Warren E. Warren E. Miller
	1       Miller, Warren E. Warren E. MilleruLgo2
	2       Pendergrass, Shane E. Shane Pendergrass
	3              Turner, Frank S. Frank S. Turner
	4        Tz2Turner, Frank S. Frank S. TurnerjJA
	5  u9UxgPendergrass, Shane E. Shane Pendergrass
Wrong output for fuzzied solution in instance spider/election/0009 (2798)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT Governor)
		FROM party

	   count(distinct governor)
	0                         7
	ACTUAL OUTPUT ====

		
		SELECT n AS count_distinct_governor_
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT governor,
		             us_senate,
		             COUNT() AS n
		      FROM party
		      GROUP BY governor,
		               us_senate))
		ORDER BY count_distinct_governor_

	   count_distinct_governor_
	0                         8
Wrong output for fuzzied solution in instance spider/election/0025 (2799)
	EXPECTED OUTPUT ====

		SELECT County_name
		FROM county
		ORDER BY Population DESC
		LIMIT 1

	       county_name
	0  gXlMansfieldm8f
	ACTUAL OUTPUT ====

		
		SELECT county_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM county
		      ORDER BY county_name)
		   LIMIT 1)

	  county_name
	0      Colony
Wrong output for fuzzied solution in instance spider/election/0029 (2801)
	EXPECTED OUTPUT ====

		SELECT T2.Party
		FROM election AS T1
		JOIN party AS T2 ON T1.Party = T2.Party_ID
		GROUP BY T1.Party
		ORDER BY COUNT(*) DESC
		LIMIT 1

	       party
	0  IS3FfDBIE
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT party
		FROM
		  (SELECT LHS.party_id AS party_id,
		          LHS.year AS YEAR,
		          LHS.party AS party,
		          LHS.governor AS governor,
		          LHS.lieutenant_governor AS lieutenant_governor,
		          LHS.comptroller AS comptroller,
		          LHS.attorney_general AS attorney_general,
		          LHS.us_senate AS us_senate,
		          RHS.counties_represented AS counties_represented,
		          RHS.election_id AS election_id
		   FROM party AS LHS
		   INNER JOIN
		     (SELECT counties_represented,
		             election_id,
		             COUNT() AS n
		      FROM election
		      GROUP BY counties_represented,
		               election_id) AS RHS ON (LHS.party_id = RHS.n))
		ORDER BY party

	     party
	0  Liberal
Wrong output for fuzzied solution in instance spider/election/0028 (2803)
	EXPECTED OUTPUT ====

		SELECT Party
		FROM party
		GROUP BY Party
		HAVING COUNT(*) >= 2

	        party
	0  Democratic
	ACTUAL OUTPUT ====

		
		SELECT party
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT lieutenant_governor,
		                party,
		                COUNT() AS n
		         FROM party
		         GROUP BY lieutenant_governor,
		                  party)
		      ORDER BY lieutenant_governor DESC)
		   LIMIT 2)

	        party
	0  Democratic
	1  Democratic
Wrong output for fuzzied solution in instance spider/election/0031 (2804)
	EXPECTED OUTPUT ====

		SELECT Comptroller,
		       COUNT(*)
		FROM party
		GROUP BY Comptroller
		ORDER BY COUNT(*) DESC
		LIMIT 1

	   comptroller  count(*)
	0  Alan Hevesi         4
	ACTUAL OUTPUT ====

		
		SELECT comptroller,
		       n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT comptroller,
		                COUNT() AS n
		         FROM party
		         GROUP BY comptroller)
		      ORDER BY comptroller)
		   LIMIT 1)

	         comptroller  count___
	0  3qYCarl McCall4dI         1
Wrong output for fuzzied solution in instance spider/body_builder/0008 (2807)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM body_builder AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		WHERE T1.Total > 300

	              name
	0  Al MontoyaMO0MO
	1  Y8nq4Al Montoya
	2  Y8nq4Al Montoya
	3  Y8nq4Al Montoya
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.people_id AS people_id,
		          LHS.name AS name,
		          LHS.height AS height,
		          LHS.weight AS weight,
		          LHS.birth_date AS birth_date,
		          LHS.birth_place AS birth_place,
		          RHS.body_builder_id AS body_builder_id,
		          RHS.snatch AS snatch,
		          RHS.clean_jerk AS clean_jerk,
		          RHS.total AS total
		   FROM people AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM body_builder
		      WHERE (total >= 300.0)) AS RHS ON (LHS.people_id = RHS.people_id))
		ORDER BY name

	              name
	0       Al Montoya
	1  Al MontoyaMO0MO
	2  Y8nq4Al Montoya
	3  Y8nq4Al Montoya
	4  Y8nq4Al Montoya
Wrong output for fuzzied solution in instance spider/body_builder/0022 (2809)
	EXPECTED OUTPUT ====

		SELECT T2.weight
		FROM body_builder AS T1
		JOIN people AS T2 ON T1.people_id = T2.people_id
		WHERE T1.snatch > 140
		  OR T2.height > 200;

	   weight
	0   99.99
	ACTUAL OUTPUT ====

		
		SELECT weight
		FROM
		  (SELECT LHS.body_builder_id AS body_builder_id,
		          LHS.people_id AS people_id,
		          LHS.snatch AS snatch,
		          LHS.clean_jerk AS clean_jerk,
		          LHS.total AS total,
		          RHS.name AS name,
		          RHS.height AS height,
		          RHS.weight AS weight,
		          RHS.birth_date AS birth_date,
		          RHS.birth_place AS birth_place
		   FROM body_builder AS LHS
		   INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))
		WHERE (snatch > 140.0
		       OR height >= 200.0)
		ORDER BY weight

	   weight
	0   89.00
	1   99.99
	2  100.00
Wrong output for fuzzied solution in instance spider/body_builder/0013 (2810)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM body_builder AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T1.Total DESC

	              name
	0       Al Montoya
	1       Al Montoya
	2  Al MontoyaMO0MO
	3       Mark Fayne
	4       Ty Conklin
	5       Ty Conklin
	6       Ty Conklin
	7       Ty Conklin
	8       Ty Conklin
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM body_builder AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY name

	              name
	0       Al Montoya
	1       Al Montoya
	2  Al MontoyaMO0MO
	3       Mark Fayne
	4       Ty Conklin
	5       Ty Conklin
Wrong output for fuzzied solution in instance spider/body_builder/0006 (2811)
	EXPECTED OUTPUT ====

		SELECT Birth_Date
		FROM People
		ORDER BY Height ASC

	               birth_date
	0  B4HDecember 5, 1991Q(o
	1        December 5, 1991
	2        December 5, 1991
	3   December 5, 1991Mbehq
	4         January 1, 1992
	5         ecember 5, 1991
	ACTUAL OUTPUT ====

		
		SELECT birth_date
		FROM
		  (SELECT birth_date
		   FROM
		     (SELECT birth_date
		      FROM people INTERSECT SELECT birth_date
		      FROM people) INTERSECT SELECT birth_date
		   FROM people)
		ORDER BY birth_date

	               birth_date
	0  B4HDecember 5, 1991Q(o
	1        December 5, 1991
	2   December 5, 1991Mbehq
	3         January 1, 1992
	4         ecember 5, 1991
Wrong output for fuzzied solution in instance spider/body_builder/0004 (2812)
	EXPECTED OUTPUT ====

		SELECT avg(Snatch)
		FROM body_builder

	    avg(snatch)
	0  4.656753e+08
	ACTUAL OUTPUT ====

		
		SELECT meansnatch AS avg_snatch_
		FROM
		  (SELECT AVG(snatch) AS meansnatch
		   FROM
		     (SELECT body_builder_id,
		             snatch,
		             AVG(snatch) AS meansnatch
		      FROM body_builder
		      GROUP BY body_builder_id,
		               snatch))
		ORDER BY avg_snatch_

	    avg_snatch_
	0  4.656753e+08
Wrong output for fuzzied solution in instance spider/body_builder/0012 (2813)
	EXPECTED OUTPUT ====

		SELECT avg(T1.Total)
		FROM body_builder AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		WHERE T2.Height > 200

	   avg(t1.total)
	0        303.745
	ACTUAL OUTPUT ====

		
		SELECT meantotal AS avg_t1_total_
		FROM
		  (SELECT snatch,
		          AVG(total) AS meantotal
		   FROM
		     (SELECT LHS.body_builder_id AS body_builder_id,
		             LHS.people_id AS people_id,
		             LHS.snatch AS snatch,
		             LHS.clean_jerk AS clean_jerk,
		             LHS.total AS total,
		             RHS.name AS name,
		             RHS.height AS height,
		             RHS.weight AS weight,
		             RHS.birth_date AS birth_date,
		             RHS.birth_place AS birth_place
		      FROM body_builder AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM people
		         WHERE (height > 200.0)) AS RHS ON (LHS.people_id = RHS.people_id))
		   GROUP BY snatch)
		ORDER BY avg_t1_total_

	   avg_t1_total_
	0         292.49
	1         315.00
Wrong output for fuzzied solution in instance spider/body_builder/0015 (2814)
	EXPECTED OUTPUT ====

		SELECT Birth_Place
		FROM people
		GROUP BY Birth_Place
		ORDER BY COUNT(*) DESC
		LIMIT 1

	             birth_place
	0  Nashua, New Hampshire
	ACTUAL OUTPUT ====

		
		SELECT birth_place
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT birth_place,
		                weight,
		                COUNT() AS n
		         FROM people
		         GROUP BY birth_place,
		                  weight)
		      ORDER BY weight)
		   LIMIT 1)

	                   birth_place
	0  2CqNashua, New Hampshirep21
Wrong output for fuzzied solution in instance spider/body_builder/0019 (2818)
	EXPECTED OUTPUT ====

		SELECT Name,
		       birth_place
		FROM people
		EXCEPT
		SELECT T1.Name,
		       T1.birth_place
		FROM people AS T1
		JOIN body_builder AS T2 ON T1.people_id = T2.people_id

	                   name                 birth_place
	0            Cam Fowler    6CxGlenview, IllinoisyJ(
	1             Cam Fowle     FCTrtGlenview, Illinois
	2            Ty Conklin  G3biiIKmCtpPQ552QbVe9OJ)Ks
	3      X1TCam FowlerAJa           Glenview, Illinoi
	4            Al Montoya          Glenview, Illinois
	5            Cam Fowler          Glenview, Illinois
	6          ack Campbell          Glenview, Illinois
	7      sR6Al Montoya47C          Glenview, Illinois
	8        zPULEHvYKp(uMk          Glenview, Illinois
	9      uxhTy Conklin0Fl        KVnZ7)UcitYODsWaybRa
	10   (qZN7Jack Campbell  No6Port Huron, Michigan6YJ
	11           Ty Conklin         PUawlJb16XEC  Rcvi8
	12          bYPFvh6jvkK        Port Huron, Michigan
	13     rwLCam FowlerDK3    UrtoRJ)OeyEdz7bOzagEJV8j
	14  eMmJack Campbellf7k    hDyEyGOhFi5YxOgXsZM fpDy
	15     y1tfF8ncZOAQI2(w    lTtGlenview, IllinoisIPH
	16           Al Montoya         ort Huron, Michigan
	17     5I2Cam FowleriNl    xajGlenview, Illinoistnw
	ACTUAL OUTPUT ====

		
		SELECT name,
		       birth_place
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM body_builder AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY name

	                   name                 birth_place
	0            Cam Fowler    6CxGlenview, IllinoisyJ(
	1             Cam Fowle     FCTrtGlenview, Illinois
	2            Ty Conklin  G3biiIKmCtpPQ552QbVe9OJ)Ks
	3      X1TCam FowlerAJa           Glenview, Illinoi
	4            Al Montoya          Glenview, Illinois
	5            Cam Fowler          Glenview, Illinois
	6         Jack Campbell          Glenview, Illinois
	7          ack Campbell          Glenview, Illinois
	8      sR6Al Montoya47C          Glenview, Illinois
	9        zPULEHvYKp(uMk          Glenview, Illinois
	10     uxhTy Conklin0Fl        KVnZ7)UcitYODsWaybRa
	11   (qZN7Jack Campbell  No6Port Huron, Michigan6YJ
	12           Ty Conklin         PUawlJb16XEC  Rcvi8
	13           Cam Fowler        Port Huron, Michigan
	14           Cam Fowler        Port Huron, Michigan
	15          bYPFvh6jvkK        Port Huron, Michigan
	16     rwLCam FowlerDK3    UrtoRJ)OeyEdz7bOzagEJV8j
	17  eMmJack Campbellf7k    hDyEyGOhFi5YxOgXsZM fpDy
	18     y1tfF8ncZOAQI2(w    lTtGlenview, IllinoisIPH
	19           Al Montoya         ort Huron, Michigan
	20     5I2Cam FowleriNl    xajGlenview, Illinoistnw
Wrong output for fuzzied solution in instance spider/body_builder/0007 (2819)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM body_builder AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID

	              name
	0       Al Montoya
	1       Al Montoya
	2  Al MontoyaMO0MO
	3       Mark Fayne
	4       Ty Conklin
	5       Ty Conklin
	6       Ty Conklin
	7       Ty Conklin
	8       Ty Conklin
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM body_builder AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY name

	              name
	0       Al Montoya
	1       Al Montoya
	2  Al MontoyaMO0MO
	3       Mark Fayne
	4       Ty Conklin
	5       Ty Conklin
Wrong output for fuzzied solution in instance spider/body_builder/0021 (2821)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM people
		WHERE people_id NOT IN
		    (SELECT People_ID
		     FROM body_builder)

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___
		FROM
		  (SELECT LHS.body_builder_id AS body_builder_id,
		          LHS.people_id AS people_id,
		          LHS.snatch AS snatch,
		          LHS.clean_jerk AS clean_jerk,
		          LHS.total AS total,
		          RHS.weight AS weight,
		          RHS.n AS n
		   FROM body_builder AS LHS
		   LEFT JOIN
		     (SELECT people_id,
		             weight,
		             COUNT() AS n
		      FROM people
		      GROUP BY people_id,
		               weight) AS RHS ON (LHS.people_id = RHS.people_id))
		ORDER BY count___

	   count___
	0         1
No solution for instance spider/body_builder/0023 (2822)
Wrong output for fuzzied solution in instance spider/body_builder/0014 (2824)
	EXPECTED OUTPUT ====

		SELECT Birth_Place,
		       COUNT(*)
		FROM people
		GROUP BY Birth_Place

	                        birth_place  count(*)
	0           0zJZ3laBUkex9(XD1(U3Ecw         1
	1          2V3Glenview, Illinois40n         1
	2              DpgZfBOqzsXjs3H8VFfx         1
	3   Farmington Hills, MichiganK1K2J         1
	4                Glenview, Illinois         6
	5           Glenview, IllinoisMXCW4         1
	6           Glenview, Illinoish41Rh         1
	7           Glenview, Illinoisswaz)         1
	8           IZf5H2PeUMCggzHAnU9mczy         1
	9      XIlsatjkVS76Sl50hXzLePCYcY(2         1
	10                lenview, Illinois         4
	11       mRpPort Huron, MichiganMsg         1
	ACTUAL OUTPUT ====

		
		SELECT birth_place,
		       n AS count___
		FROM
		  (SELECT birth_place,
		          COUNT() AS n
		   FROM
		     (SELECT birth_date,
		             birth_place,
		             COUNT() AS n
		      FROM people
		      GROUP BY birth_date,
		               birth_place)
		   GROUP BY birth_place)
		ORDER BY birth_place

	                        birth_place  count___
	0           0zJZ3laBUkex9(XD1(U3Ecw         1
	1          2V3Glenview, Illinois40n         1
	2              DpgZfBOqzsXjs3H8VFfx         1
	3   Farmington Hills, MichiganK1K2J         1
	4                Glenview, Illinois         4
	5           Glenview, IllinoisMXCW4         1
	6           Glenview, Illinoish41Rh         1
	7           Glenview, Illinoisswaz)         1
	8           IZf5H2PeUMCggzHAnU9mczy         1
	9      XIlsatjkVS76Sl50hXzLePCYcY(2         1
	10                lenview, Illinois         3
	11       mRpPort Huron, MichiganMsg         1
Wrong output for fuzzied solution in instance spider/body_builder/0009 (2825)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM body_builder AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T2.Weight DESC
		LIMIT 1

	              name
	0  am4ZNTy Conklin
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.body_builder_id AS body_builder_id,
		                LHS.people_id AS people_id,
		                LHS.snatch AS snatch,
		                LHS.clean_jerk AS clean_jerk,
		                LHS.total AS total,
		                RHS.name AS name,
		                RHS.height AS height,
		                RHS.weight AS weight,
		                RHS.birth_date AS birth_date,
		                RHS.birth_place AS birth_place
		         FROM body_builder AS LHS
		         INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))
		      ORDER BY name)
		   LIMIT 1)

	              name
	0  0FD2HTy Conklin
Wrong output for fuzzied solution in instance spider/body_builder/0011 (2826)
	EXPECTED OUTPUT ====

		SELECT T2.Height
		FROM body_builder AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		WHERE T1.Total < 315

	   height
	0  194.98
	1  196.00
	2  196.00
	3  196.00
	ACTUAL OUTPUT ====

		
		SELECT height
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM body_builder
		           WHERE (total < 315.0)) AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY height

	   height
	0  194.98
	1  196.00
	2  196.00
Wrong output for fuzzied solution in instance spider/body_builder/0010 (2827)
	EXPECTED OUTPUT ====

		SELECT T2.Birth_Date,
		       T2.Birth_Place
		FROM body_builder AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T1.Total DESC
		LIMIT 1

	         birth_date           birth_place
	0  December 5, 1991  Minnetonka, Minnesot
	ACTUAL OUTPUT ====

		
		SELECT birth_date,
		       birth_place
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.body_builder_id AS body_builder_id,
		                LHS.people_id AS people_id,
		                LHS.snatch AS snatch,
		                LHS.clean_jerk AS clean_jerk,
		                LHS.total AS total,
		                RHS.name AS name,
		                RHS.height AS height,
		                RHS.weight AS weight,
		                RHS.birth_date AS birth_date,
		                RHS.birth_place AS birth_place
		         FROM body_builder AS LHS
		         INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))
		      ORDER BY birth_place DESC)
		   LIMIT 1)

	               birth_date              birth_place
	0  B4HDecember 5, 1991Q(o  X1ZAnchorage, AlaskaRi(
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0037 (2829)
	EXPECTED OUTPUT ====

		SELECT T2.card_type_code,
		       count(*)
		FROM Financial_transactions AS T1
		JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id
		GROUP BY T2.card_type_code

	  card_type_code  count(*)
	0   7hRCreditoia         3
	1          Credi         7
	2         Credit        29
	3           Debi         5
	4          Debit        15
	5     DebitB402y         1
	6    a8g1hCredit         2
	7    hUQNBCredit         3
	8    kwUDebitQ6y         7
	ACTUAL OUTPUT ====

		
		SELECT card_type_code,
		       n AS count___
		FROM
		  (SELECT card_type_code,
		          other_transaction_details,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.card_id AS card_id,
		             LHS.customer_id AS customer_id,
		             LHS.card_type_code AS card_type_code,
		             LHS.card_number AS card_number,
		             LHS.date_valid_from AS date_valid_from,
		             LHS.date_valid_to AS date_valid_to,
		             LHS.other_card_details AS other_card_details,
		             RHS.transaction_id AS transaction_id,
		             RHS.previous_transaction_id AS previous_transaction_id,
		             RHS.account_id AS account_id,
		             RHS.transaction_type AS transaction_type,
		             RHS.transaction_date AS transaction_date,
		             RHS.transaction_amount AS transaction_amount,
		             RHS.transaction_comment AS transaction_comment,
		             RHS.other_transaction_details AS other_transaction_details
		      FROM customers_cards AS LHS
		      INNER JOIN financial_transactions AS RHS ON (LHS.card_id = RHS.card_id))
		   GROUP BY card_type_code,
		            other_transaction_details)
		ORDER BY card_type_code

	   card_type_code  count___
	0    7hRCreditoia         1
	1    7hRCreditoia         1
	2    7hRCreditoia         1
	3           Credi         1
	4           Credi         1
	5           Credi         1
	6           Credi         1
	7           Credi         1
	8           Credi         2
	9          Credit         1
	10         Credit         1
	11         Credit         1
	12         Credit         1
	13         Credit         1
	14         Credit         1
	15         Credit         1
	16         Credit         1
	17         Credit         1
	18         Credit         1
	19         Credit         1
	20         Credit         1
	21         Credit         1
	22         Credit         2
	23         Credit         2
	24         Credit         2
	25         Credit         3
	26         Credit         3
	27         Credit         4
	28           Debi         1
	29           Debi         1
	30           Debi         1
	31           Debi         1
	32           Debi         1
	33          Debit         1
	34          Debit         1
	35          Debit         1
	36          Debit         1
	37          Debit         1
	38          Debit         1
	39          Debit         1
	40          Debit         1
	41          Debit         1
	42          Debit         1
	43          Debit         1
	44          Debit         2
	45          Debit         2
	46     DebitB402y         1
	47    a8g1hCredit         2
	48    hUQNBCredit         1
	49    hUQNBCredit         1
	50    hUQNBCredit         1
	51    kwUDebitQ6y         1
	52    kwUDebitQ6y         1
	53    kwUDebitQ6y         1
	54    kwUDebitQ6y         1
	55    kwUDebitQ6y         1
	56    kwUDebitQ6y         1
	57    kwUDebitQ6y         1
Wrong output for base solution in instance spider/customers_card_transactions/0036 (2831)
	EXPECTED OUTPUT ====

		SELECT avg(transaction_amount),
		       sum(transaction_amount)
		FROM Financial_transactions

	   avg(transaction_amount)  sum(transaction_amount)
	0              1308.293333                  19624.4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(transaction_amount) OVER () AS avg_transaction_amount_,
		                                             sumtransaction_amount AS sum_transaction_amount_
		FROM
		  (SELECT account_id,
		          transaction_amount,
		          SUM(transaction_amount) OVER () AS sumtransaction_amount
		   FROM
		     (SELECT account_id,
		             transaction_amount,
		             SUM(transaction_amount) AS sumtransaction_amount
		      FROM financial_transactions
		      GROUP BY account_id,
		               transaction_amount))
		ORDER BY avg_transaction_amount_

	   avg_transaction_amount_  sum_transaction_amount_
	0              1308.293333                  19624.4
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0008 (2833)
	EXPECTED OUTPUT ====

		SELECT T2.customer_first_name,
		       T2.customer_last_name,
		       T1.customer_id
		FROM Accounts AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		GROUP BY T1.customer_id
		ORDER BY count(*) ASC
		LIMIT 1

	  customer_first_name customer_last_name  customer_id
	0            Izabella          LindlFCcF            6
	ACTUAL OUTPUT ====

		
		SELECT customer_first_name,
		       customer_last_name,
		       customer_id
		FROM
		  (SELECT LHS.account_id AS account_id,
		          LHS.customer_id AS customer_id,
		          LHS.account_name AS account_name,
		          LHS.other_account_details AS other_account_details,
		          LHS.customer_first_name AS customer_first_name,
		          LHS.customer_last_name AS customer_last_name,
		          LHS.customer_address AS customer_address,
		          LHS.customer_phone AS customer_phone,
		          LHS.customer_email AS customer_email,
		          LHS.other_customer_details AS other_customer_details,
		          RHS.customer_last_name AS customer_last_name_other,
		          RHS.other_customer_details AS other_customer_details_other
		   FROM
		     (SELECT LHS.account_id AS account_id,
		             LHS.customer_id AS customer_id,
		             LHS.account_name AS account_name,
		             LHS.other_account_details AS other_account_details,
		             RHS.customer_first_name AS customer_first_name,
		             RHS.customer_last_name AS customer_last_name,
		             RHS.customer_address AS customer_address,
		             RHS.customer_phone AS customer_phone,
		             RHS.customer_email AS customer_email,
		             RHS.other_customer_details AS other_customer_details
		      FROM accounts AS LHS
		      INNER JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS
		   INNER JOIN
		     (SELECT customer_last_name,
		             other_customer_details,
		             COUNT() AS n
		      FROM customers
		      GROUP BY customer_last_name,
		               other_customer_details) AS RHS ON (LHS.customer_id = RHS.n))
		ORDER BY customer_first_name

	Empty DataFrame
	Columns: [customer_first_name, customer_last_name, customer_id]
	Index: []
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0039 (2834)
	EXPECTED OUTPUT ====

		SELECT transaction_type
		FROM Financial_transactions
		GROUP BY transaction_type
		ORDER BY sum(transaction_amount) DESC
		LIMIT 1

	  transaction_type
	0           Refund
	ACTUAL OUTPUT ====

		
		SELECT transaction_type
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT transaction_date,
		                transaction_type,
		                SUM(transaction_amount) AS sumtransaction_amount
		         FROM financial_transactions
		         GROUP BY transaction_date,
		                  transaction_type)
		      ORDER BY sumtransaction_amount)
		   LIMIT 1)

	  transaction_type
	0    VP7PaymentJGw
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0022 (2838)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Customers_cards AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.customer_first_name = "Blanche"
		  AND T2.customer_last_name = "Huels"
		  AND T1.card_type_code = "Credit"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n_distinct` AS `count___`
		FROM
		  (SELECT `card_type_code`,
		          `other_card_details`,
		          COUNT(DISTINCT `card_type_code`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`card_id` AS `card_id`,
		                `LHS`.`customer_id` AS `customer_id`,
		                `LHS`.`card_type_code` AS `card_type_code`,
		                `LHS`.`card_number` AS `card_number`,
		                `LHS`.`date_valid_from` AS `date_valid_from`,
		                `LHS`.`date_valid_to` AS `date_valid_to`,
		                `LHS`.`other_card_details` AS `other_card_details`,
		                `RHS`.`customer_first_name` AS `customer_first_name`,
		                `RHS`.`customer_last_name` AS `customer_last_name`,
		                `RHS`.`customer_address` AS `customer_address`,
		                `RHS`.`customer_phone` AS `customer_phone`,
		                `RHS`.`customer_email` AS `customer_email`,
		                `RHS`.`other_customer_details` AS `other_customer_details`
		         FROM `customers_cards` AS `LHS`
		         INNER JOIN
		           (SELECT *
		            FROM `customers`
		            WHERE (`customer_last_name` != 'Huels')) AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))
		      WHERE (`customer_first_name` != 'Blanche'
		             OR `card_type_code` != 'Credit'))
		   GROUP BY card_type_code,
		            other_card_details)
		ORDER BY count___

	   count___
	0         1
No solution for instance spider/customers_card_transactions/0026 (2844)
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0005 (2846)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Accounts AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE T2.customer_first_name = "Art"
		  AND T2.customer_last_name = "Turcotte"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT `LHS`.`account_id` AS `account_id`,
		          `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`account_name` AS `account_name`,
		          `LHS`.`other_account_details` AS `other_account_details`,
		          `RHS`.`customer_first_name` AS `customer_first_name`,
		          `RHS`.`customer_last_name` AS `customer_last_name`,
		          `RHS`.`customer_address` AS `customer_address`,
		          `RHS`.`customer_phone` AS `customer_phone`,
		          `RHS`.`customer_email` AS `customer_email`,
		          `RHS`.`other_customer_details` AS `other_customer_details`
		   FROM `accounts` AS `LHS`
		   INNER JOIN `customers` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`))
		WHERE (`customer_first_name` = 'Art'
		       AND `customer_last_name` = 'Turcotte')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for base solution in instance spider/customers_card_transactions/0018 (2849)
	EXPECTED OUTPUT ====

		SELECT date_valid_from,
		       date_valid_to
		FROM Customers_cards
		WHERE card_number = "4560596484842"

	       date_valid_from        date_valid_to
	0  2011-04-17 09:05:28  2018-03-07 17:06:19
	ACTUAL OUTPUT ====

		
		SELECT date_valid_from,
		       date_valid_to
		FROM
		  (SELECT LHS.card_id AS card_id,
		          LHS.customer_id AS customer_id,
		          LHS.card_type_code AS card_type_code,
		          LHS.card_number AS card_number,
		          LHS.date_valid_from AS date_valid_from,
		          LHS.date_valid_to AS date_valid_to,
		          LHS.other_card_details AS other_card_details
		   FROM customers_cards AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM customers_cards
		      WHERE (card_number = 4560596484842.0)) AS RHS ON (LHS.card_id = RHS.card_id
		                                                        AND LHS.customer_id = RHS.customer_id
		                                                        AND LHS.card_type_code = RHS.card_type_code
		                                                        AND LHS.card_number = RHS.card_number
		                                                        AND LHS.date_valid_from = RHS.date_valid_from
		                                                        AND LHS.date_valid_to = RHS.date_valid_to
		                                                        AND LHS.other_card_details = RHS.other_card_details))
		ORDER BY date_valid_from

	Empty DataFrame
	Columns: [date_valid_from, date_valid_to]
	Index: []
Error while executing solution for instance spider/customers_card_transactions/0035 (2850)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT transaction_type) OVER () AS count_distinct_transaction_type_
FROM financial_transactions
ORDER BY count_distinct_transaction_type_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for base solution in instance spider/customers_card_transactions/0019 (2852)
	EXPECTED OUTPUT ====

		SELECT T2.customer_first_name,
		       T2.customer_last_name,
		       T2.customer_phone
		FROM Customers_cards AS T1
		JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
		WHERE T1.card_number = "4560596484842"

	  customer_first_name customer_last_name      customer_phone
	0             Blanche              Huels  (703)950-4708x8972
	ACTUAL OUTPUT ====

		
		SELECT customer_first_name,
		       customer_last_name,
		       customer_phone
		FROM
		  (SELECT *
		   FROM customers AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM customers_cards
		           WHERE (card_number = 4560596484842.0)) AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY customer_first_name

	Empty DataFrame
	Columns: [customer_first_name, customer_last_name, customer_phone]
	Index: []
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0007 (2853)
	EXPECTED OUTPUT ====

		SELECT customer_id,
		       count(*)
		FROM Accounts
		GROUP BY customer_id
		ORDER BY count(*) DESC
		LIMIT 1

	   customer_id  count(*)
	0   7129443415         1
	ACTUAL OUTPUT ====

		
		SELECT customer_id,
		       n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT customer_id,
		                COUNT() AS n
		         FROM accounts
		         GROUP BY customer_id)
		      ORDER BY n DESC)
		   LIMIT 1)

	   customer_id  count___
	0            4         1
No solution for instance spider/customers_card_transactions/0024 (2855)
Error while executing solution for instance spider/customers_card_transactions/0009 (2860)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT customer_id) OVER () AS count___
FROM
  (SELECT *
   FROM customers AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM accounts AS RHS
        WHERE (LHS.customer_id = RHS.customer_id) ))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0029 (2863)
	EXPECTED OUTPUT ====

		SELECT card_type_code
		FROM Customers_cards
		GROUP BY card_type_code
		HAVING count(*) >= 5

	  card_type_code
	0         Credit
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT card_type_code
		FROM
		  (SELECT card_id,
		          customer_id,
		          card_type_code,
		          card_number,
		          date_valid_from,
		          date_valid_to,
		          other_card_details,
		          COUNT(*) OVER () AS n
		   FROM customers_cards)
		WHERE (n > 5)
		ORDER BY card_type_code

	  card_type_code
	0   7hRCreditoia
	1          Credi
	2         Credit
	3           Debi
	4          Debit
	5     DebitB402y
	6    a8g1hCredit
	7    hUQNBCredit
	8    kwUDebitQ6y
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0010 (2864)
	EXPECTED OUTPUT ====

		SELECT customer_first_name,
		       customer_last_name
		FROM Customers
		EXCEPT
		SELECT T1.customer_first_name,
		       T1.customer_last_name
		FROM Customers AS T1
		JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id

	   customer_first_name customer_last_name
	0             (UDO2Art     NpRYuLangworth
	1        4exwsFrederic         IlHuLSwift
	2                   Ar             Effert
	3                   Ar              Feest
	4                  Art            Effertz
	5                  Art       EffertzS2)Mp
	6                  Art          Langworth
	7                  Art              Swift
	8                  Art             XK1zMa
	9              Blanche    8OHm4QlsszIZ8y3
	10             Blanche         ODOy0UOpoj
	11                Bryc              Swift
	12               Bryce            Effertz
	13               Bryce    GxELangworthp(c
	14               Bryce           Langwort
	15               Bryce              Swift
	16          Brycehc4cd          Langworth
	17       CuXOKFrederic              Swift
	18             Frederi             Effert
	19             Frederi     iXpGYLangworth
	20            Frederic          Langworth
	21            Frederic              Swift
	22       FredericiUtUU      QdREffertzPDS
	23                GP0N         pGwuwFeest
	24                  Na              Feest
	25                  Na    Jl2LangworthIlq
	26                 Nat            Effertz
	27                 Nat          Langworth
	28                 Nat      OpC47 ibrDWsx
	29                 Nat         cxpmTSwift
	30                 Nat    k4gon(5PMhA6eAT
	31            Nat9shH3              Feest
	32            NatpDakO          Langworth
	33                  Q6    brULangworthr9t
	34              RwF3)V            Effertz
	35                 VAR               eest
	36                 XQ6         RMqW Feest
	37                  at              4XWH3
	38                  at         ywaNsxL3id
	39          bk3IIBryce               Swif
	40          gsk wJwTuj        fMXFeestd(5
	41            j I50Art          Langworth
	42              lanche            Effertz
	43              lanche        ZLOFeestqcD
	44             rederic         Swift3D V5
	45                  rt          62rRiaNpE
	46                  rt            69mzoNv
	47                  rt          Langworth
	48            sRlgTNat              Feest
	49                sk w              Feest
	50                  tb        xPVFeestLv0
	51              wQ (TR           IbS)pgPr
	52                ylrK              EZW9J
	ACTUAL OUTPUT ====

		
		SELECT customer_first_name,
		       customer_last_name
		FROM
		  (SELECT *
		   FROM customers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM accounts AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY customer_first_name

	   customer_first_name customer_last_name
	0             (UDO2Art     NpRYuLangworth
	1        4exwsFrederic         IlHuLSwift
	2                   Ar             Effert
	3                   Ar              Feest
	4                  Art            Effertz
	5                  Art       EffertzS2)Mp
	6                  Art          Langworth
	7                  Art              Swift
	8                  Art              Swift
	9                  Art             XK1zMa
	10             Blanche    8OHm4QlsszIZ8y3
	11             Blanche         ODOy0UOpoj
	12                Bryc              Swift
	13               Bryce            Effertz
	14               Bryce    GxELangworthp(c
	15               Bryce           Langwort
	16               Bryce              Swift
	17          Brycehc4cd          Langworth
	18       CuXOKFrederic              Swift
	19             Frederi             Effert
	20             Frederi     iXpGYLangworth
	21            Frederic          Langworth
	22            Frederic              Swift
	23       FredericiUtUU      QdREffertzPDS
	24                GP0N         pGwuwFeest
	25                  Na              Feest
	26                  Na    Jl2LangworthIlq
	27                 Nat            Effertz
	28                 Nat            Effertz
	29                 Nat          Langworth
	30                 Nat      OpC47 ibrDWsx
	31                 Nat         cxpmTSwift
	32                 Nat    k4gon(5PMhA6eAT
	33            Nat9shH3              Feest
	34            NatpDakO          Langworth
	35                  Q6    brULangworthr9t
	36              RwF3)V            Effertz
	37                 VAR               eest
	38                 XQ6         RMqW Feest
	39                  at              4XWH3
	40                  at         ywaNsxL3id
	41          bk3IIBryce               Swif
	42          gsk wJwTuj        fMXFeestd(5
	43            j I50Art          Langworth
	44              lanche            Effertz
	45              lanche        ZLOFeestqcD
	46             rederic         Swift3D V5
	47                  rt          62rRiaNpE
	48                  rt            69mzoNv
	49                  rt          Langworth
	50            sRlgTNat              Feest
	51                sk w              Feest
	52                  tb        xPVFeestLv0
	53              wQ (TR           IbS)pgPr
	54                ylrK              EZW9J
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0040 (2865)
	EXPECTED OUTPUT ====

		SELECT account_id,
		       count(*)
		FROM Financial_transactions
		GROUP BY account_id

	    account_id  count(*)
	0            2        11
	1            4         4
	2            5         6
	3            6         5
	4            7         6
	5            9         5
	6           10         2
	7           11         2
	8           12         4
	9           13         5
	10          14         4
	11          15         3
	12          16         6
	13          17         9
	ACTUAL OUTPUT ====

		
		SELECT account_id,
		       n AS count___
		FROM
		  (SELECT account_id,
		          transaction_comment,
		          COUNT() AS n
		   FROM financial_transactions
		   GROUP BY account_id,
		            transaction_comment)
		ORDER BY account_id

	    account_id  count___
	0            2         1
	1            2         1
	2            2         1
	3            2         1
	4            2         1
	..         ...       ...
	67          17         1
	68          17         1
	69          17         1
	70          17         1
	71          17         1
	
	[72 rows x 2 columns]
Wrong output for fuzzied solution in instance spider/customers_card_transactions/0028 (2866)
	EXPECTED OUTPUT ====

		SELECT card_type_code
		FROM Customers_cards
		GROUP BY card_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  card_type_code
	0         Credit
	ACTUAL OUTPUT ====

		
		SELECT card_type_code
		FROM
		  (SELECT LHS.card_id AS card_id,
		          LHS.customer_id AS customer_id,
		          LHS.card_type_code AS card_type_code,
		          LHS.card_number AS card_number,
		          LHS.date_valid_from AS date_valid_from,
		          LHS.date_valid_to AS date_valid_to,
		          LHS.other_card_details AS other_card_details,
		          LHS.n AS n,
		          RHS.customer_id AS customer_id_other,
		          RHS.card_type_code AS card_type_code_other,
		          RHS.date_valid_from AS date_valid_from_other,
		          RHS.date_valid_to AS date_valid_to_other,
		          RHS.other_card_details AS other_card_details_other
		   FROM
		     (SELECT card_id,
		             customer_id,
		             card_type_code,
		             card_number,
		             date_valid_from,
		             date_valid_to,
		             other_card_details,
		             COUNT(*) OVER () AS n
		      FROM customers_cards) AS LHS
		   INNER JOIN customers_cards AS RHS ON (LHS.n = RHS.card_id
		                                            AND LHS.card_number = RHS.card_number))
		ORDER BY card_type_code

	  card_type_code
	0         Credit
	1         Credit
	2          Debit
Wrong output for fuzzied solution in instance spider/products_for_hire/0008 (2870)
	EXPECTED OUTPUT ====

		SELECT T2.product_name
		FROM view_product_availability AS T1
		JOIN products_for_hire AS T2 ON T1.product_id = T2.product_id
		WHERE T1.available_yn = 1

	               product_name
	0         Book collection A
	1         Book collection A
	2         Book collection A
	3         Book collection A
	4         Book collection A
	..                      ...
	565  z6 NvBook collection A
	566  z6 NvBook collection A
	567  z6 NvBook collection A
	568  z6 NvBook collection A
	569  z6 NvBook collection A
	
	[570 rows x 1 columns]
	ACTUAL OUTPUT ====

		
		SELECT product_name
		FROM
		  (SELECT *
		   FROM products_for_hire AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM view_product_availability
		           WHERE (available_yn = 1)) AS RHS
		        WHERE (LHS.product_id = RHS.product_id) ))
		ORDER BY product_name

	             product_name
	0       Book collection A
	1       Book collection A
	2         DVD collection 
	3        DVD collection A
	4        DVD collection A
	5         VD collection A
	6  z6 NvBook collection A
Wrong output for base solution in instance spider/products_for_hire/0003 (2871)
	EXPECTED OUTPUT ====

	   customer_id  sum_amount_paid_
	0           12           1000.65
	ACTUAL OUTPUT ====

		SELECT customer_id,
		       sum(amount_paid)
		FROM Payments
		GROUP BY customer_id
		ORDER BY sum(amount_paid) DESC
		LIMIT 1

	   customer_id  sum(amount_paid)
	0           12           1000.65
Wrong output for ground truth in instance spider/products_for_hire/0003 (2871)
Wrong output for fuzzied solution in instance spider/products_for_hire/0006 (2873)
	EXPECTED OUTPUT ====

		SELECT T2.product_description
		FROM products_booked AS T1
		JOIN products_for_hire AS T2 ON T1.product_id = T2.product_id
		WHERE T1.booked_amount = 102.76

	                  product_description
	0                       Anna Karenina
	1                       Anna Karenina
	2                       Anna Karenina
	3                       Anna Karenina
	4  Ofqe3One Hundred Years of Solitude
	5                        nna Karenina
	ACTUAL OUTPUT ====

		
		SELECT product_description
		FROM
		  (SELECT LHS.product_id AS product_id,
		          LHS.product_type_code AS product_type_code,
		          LHS.daily_hire_cost AS daily_hire_cost,
		          LHS.product_name AS product_name,
		          LHS.product_description AS product_description,
		          RHS.booking_id AS booking_id,
		          RHS.returned_yn AS returned_yn,
		          RHS.returned_late_yn AS returned_late_yn,
		          RHS.booked_count AS booked_count,
		          RHS.booked_amount AS booked_amount
		   FROM products_for_hire AS LHS
		   INNER JOIN products_booked AS RHS ON (LHS.product_id = RHS.product_id))
		WHERE (booked_amount <= 102.76)
		ORDER BY product_description

	                  product_description
	0                       Anna Karenina
	1                       Anna Karenina
	2                       Anna Karenina
	3                       Anna Karenina
	4                       Anna Karenina
	5                       Anna Karenina
	6                       Anna Karenina
	7  Ofqe3One Hundred Years of Solitude
	8                        nna Karenina
Wrong output for fuzzied solution in instance spider/products_for_hire/0004 (2874)
	EXPECTED OUTPUT ====

		SELECT T1.booking_id,
		       T1.amount_of_refund
		FROM Bookings AS T1
		JOIN Payments AS T2 ON T1.booking_id = T2.booking_id
		GROUP BY T1.booking_id
		ORDER BY count(*) DESC
		LIMIT 1

	   booking_id  amount_of_refund
	0          11            135.94
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT booking_id,
		                amount_of_refund
		FROM
		  (SELECT *
		   FROM
		     (SELECT booking_id,
		             customer_id,
		             booking_status_code,
		             returned_damaged_yn,
		             booking_start_date,
		             booking_end_date,
		             count_hired,
		             amount_payable,
		             amount_of_discount,
		             amount_outstanding,
		             amount_of_refund,
		             payment_id,
		             booking_id_other,
		             customer_id_other,
		             payment_type_code,
		             amount_paid_in_full_yn,
		             payment_date,
		             amount_due,
		             amount_paid,
		             booking_id AS n
		      FROM
		        (SELECT LHS.booking_id AS booking_id,
		                LHS.customer_id AS customer_id,
		                LHS.booking_status_code AS booking_status_code,
		                LHS.returned_damaged_yn AS returned_damaged_yn,
		                LHS.booking_start_date AS booking_start_date,
		                LHS.booking_end_date AS booking_end_date,
		                LHS.count_hired AS count_hired,
		                LHS.amount_payable AS amount_payable,
		                LHS.amount_of_discount AS amount_of_discount,
		                LHS.amount_outstanding AS amount_outstanding,
		                LHS.amount_of_refund AS amount_of_refund,
		                RHS.payment_id AS payment_id,
		                RHS.booking_id AS booking_id_other,
		                RHS.customer_id AS customer_id_other,
		                RHS.payment_type_code AS payment_type_code,
		                RHS.amount_paid_in_full_yn AS amount_paid_in_full_yn,
		                RHS.payment_date AS payment_date,
		                RHS.amount_due AS amount_due,
		                RHS.amount_paid AS amount_paid
		         FROM bookings AS LHS
		         INNER JOIN
		           (SELECT payment_id,
		                   booking_id,
		                   customer_id,
		                   payment_type_code,
		                   amount_paid_in_full_yn,
		                   payment_date,
		                   amount_due,
		                   amount_paid,
		                   COUNT(*) OVER () AS n
		            FROM payments) AS RHS ON (LHS.booking_id = RHS.n))) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM bookings AS RHS
		        WHERE (LHS.booking_id = RHS.booking_id
		               AND LHS.customer_id = RHS.customer_id
		               AND LHS.booking_status_code = RHS.booking_status_code
		               AND LHS.returned_damaged_yn = RHS.returned_damaged_yn
		               AND LHS.booking_start_date = RHS.booking_start_date
		               AND LHS.booking_end_date = RHS.booking_end_date
		               AND LHS.count_hired = RHS.count_hired
		               AND LHS.amount_payable = RHS.amount_payable
		               AND LHS.amount_of_discount = RHS.amount_of_discount
		               AND LHS.amount_outstanding = RHS.amount_outstanding
		               AND LHS.amount_of_refund = RHS.amount_of_refund) ))
		ORDER BY booking_id

	Empty DataFrame
	Columns: [booking_id, amount_of_refund]
	Index: []
Wrong output for fuzzied solution in instance spider/products_for_hire/0015 (2876)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Products_for_hire
		WHERE product_id NOT IN
		    (SELECT product_id
		     FROM products_booked
		     WHERE booked_amount > 200 )

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n_distinct AS count___
		FROM
		  (SELECT LHS.product_id AS product_id,
		          LHS.product_type_code AS product_type_code,
		          LHS.n_distinct AS n_distinct,
		          RHS.booking_id AS booking_id,
		          RHS.returned_yn AS returned_yn,
		          RHS.returned_late_yn AS returned_late_yn,
		          RHS.booked_count AS booked_count,
		          RHS.booked_amount AS booked_amount
		   FROM
		     (SELECT product_id,
		             product_type_code,
		             COUNT(DISTINCT product_id) AS n_distinct
		      FROM products_for_hire
		      WHERE (product_id != 200)
		      GROUP BY product_id,
		               product_type_code) AS LHS
		   LEFT JOIN products_booked AS RHS ON (LHS.product_id = RHS.product_id))
		ORDER BY count___

	   count___
	0         1
Wrong output for fuzzied solution in instance spider/products_for_hire/0005 (2877)
	EXPECTED OUTPUT ====

		SELECT product_id
		FROM products_booked
		GROUP BY product_id
		HAVING count(*) = 3

	Empty DataFrame
	Columns: [product_id]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT product_id
		FROM
		  (SELECT product_id
		   FROM products_booked INTERSECT SELECT product_id
		   FROM
		     (SELECT product_id,
		             returned_yn,
		             COUNT() AS n
		      FROM products_booked
		      GROUP BY product_id,
		               returned_yn)
		   WHERE (n = 3))
		ORDER BY product_id

	   product_id
	0           1
	1           3
	2           5
No solution for instance spider/products_for_hire/0016 (2878)
No solution for instance spider/products_for_hire/0014 (2882)
Error while executing solution for instance spider/products_for_hire/0009 (2883)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT product_type_code) OVER () AS count_distinct_product_type_code_
FROM
  (SELECT product_id,
          product_type_code,
          COUNT(DISTINCT product_type_code) AS n_distinct
   FROM products_for_hire
   GROUP BY product_id,
            product_type_code)
ORDER BY count_distinct_product_type_code_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for base solution in instance spider/products_for_hire/0011 (2884)
	EXPECTED OUTPUT ====

	   avg_amount_due_
	0          564.386
	ACTUAL OUTPUT ====

		SELECT avg(amount_due)
		FROM payments

	   avg(amount_due)
	0          564.386
Wrong output for ground truth in instance spider/products_for_hire/0011 (2884)
Wrong output for fuzzied solution in instance spider/protein_institute/0017 (2887)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM institution AS T1
		JOIN protein AS T2 ON T1.institution_id = T2.institution_id
		WHERE T1.founded > 1880
		  OR T1.type = 'Private'

	   count(*)
	0        36
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT `LHS`.`common_name` AS `common_name`,
		          `LHS`.`protein_name` AS `protein_name`,
		          `LHS`.`divergence_from_human_lineage` AS `divergence_from_human_lineage`,
		          `LHS`.`accession_number` AS `accession_number`,
		          `LHS`.`sequence_length` AS `sequence_length`,
		          `LHS`.`sequence_identity_to_human_protein` AS `sequence_identity_to_human_protein`,
		          `LHS`.`institution_id` AS `institution_id`,
		          `RHS`.`institution` AS `institution`,
		          `RHS`.`location` AS `location`,
		          `RHS`.`founded` AS `founded`,
		          `RHS`.`type` AS `type`,
		          `RHS`.`enrollment` AS `enrollment`,
		          `RHS`.`team` AS `team`,
		          `RHS`.`primary_conference` AS `primary_conference`,
		          `RHS`.`building_id` AS `building_id`
		   FROM `protein` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `institution`
		      WHERE (`type` != 'Private'
		             OR founded > 1880.0)) AS RHS ON (LHS.institution_id = RHS.institution_id))
		ORDER BY count___

	   count___
	0        33
No solution for instance spider/protein_institute/0008 (2888)
Wrong output for fuzzied solution in instance spider/protein_institute/0003 (2889)
	EXPECTED OUTPUT ====

		SELECT name
		FROM building
		ORDER BY height_feet DESC
		LIMIT 1

	                    name
	0  One Tampa City Center
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM building
		      ORDER BY street_address)
		   LIMIT 1)

	              name
	0  bPoTqPark Tower
Wrong output for fuzzied solution in instance spider/protein_institute/0006 (2891)
	EXPECTED OUTPUT ====

		SELECT name
		FROM building
		WHERE height_feet >= 200
		  AND floors >= 20

	                          name
	0             ))wPark TowerI 8
	1               00 North Tampa
	2              100 North Tampa
	3              100 North Tampa
	4              AzisEPark Tower
	5        Bank of America Tower
	6        Bank of America Tower
	7        Bank of America Tower
	8        Bank of America Tower
	9        Bank of America Tower
	10       Bank of America Tower
	11       Bank of America Tower
	12       Bank of America Tower
	13       Bank of America Tower
	14       Bank of America Tower
	15       Bank of America Tower
	16       Bank of America Tower
	17  Bank of America TowergJNG5
	18                   Park Towe
	19                  Park Tower
	20                  Park Tower
	21                  Park Tower
	22                  Park Tower
	23                  Park Tower
	24                  Park Tower
	25                  Park Tower
	26                  Park Tower
	27                  Park Tower
	28                  Park Tower
	29                  Park Tower
	30             Park TowerB6nZC
	31             Park TowerOrdWh
	32             WiOwsPark Tower
	33            XDWPark TowernxS
	34            YtwPark TowerDkY
	35        ank of America Tower
	36                   ark Tower
	37                   ark Tower
	38                   ark Tower
	39                   ark Tower
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM building
		WHERE (floors >= 200
		       OR floors > 20)
		ORDER BY name

	                          name
	0             ))wPark TowerI 8
	1               00 North Tampa
	2               00 North Tampa
	3              100 North Tampa
	4              100 North Tampa
	5              100 North Tampa
	6              AzisEPark Tower
	7        Bank of America Tower
	8        Bank of America Tower
	9        Bank of America Tower
	10       Bank of America Tower
	11       Bank of America Tower
	12       Bank of America Tower
	13       Bank of America Tower
	14       Bank of America Tower
	15       Bank of America Tower
	16       Bank of America Tower
	17       Bank of America Tower
	18       Bank of America Tower
	19       Bank of America Tower
	20       Bank of America Tower
	21  Bank of America TowergJNG5
	22       LNH100 North TampaSIK
	23                   Park Towe
	24                  Park Tower
	25                  Park Tower
	26                  Park Tower
	27                  Park Tower
	28                  Park Tower
	29                  Park Tower
	30                  Park Tower
	31                  Park Tower
	32                  Park Tower
	33                  Park Tower
	34                  Park Tower
	35                  Park Tower
	36                  Park Tower
	37                  Park Tower
	38                  Park Tower
	39                  Park Tower
	40             Park TowerB6nZC
	41             Park TowerOrdWh
	42             WiOwsPark Tower
	43            XDWPark TowernxS
	44            YtwPark TowerDkY
	45        ank of America Tower
	46                   ark Tower
	47                   ark Tower
	48                   ark Tower
	49                   ark Tower
	50                   ark Tower
	51                   ark Tower
	52                   ark Tower
Wrong output for fuzzied solution in instance spider/protein_institute/0012 (2893)
	EXPECTED OUTPUT ====

		SELECT name
		FROM building
		EXCEPT
		SELECT T1.name
		FROM building AS T1
		JOIN institution AS T2 ON T1.building_id = T2.building_id
		WHERE T2.founded = 2003

	                           name
	0   (YoBank of America Tower8nt
	1   0J2Bank of America TowerQ9B
	2               100 North Tampa
	3          100 North TampaW9jZ1
	4          Bank of America Towe
	5         Bank of America Tower
	6               K(BR9Park Tower
	7                    Park Tower
	8              QpqPark TowerrGC
	9   V8ROne Tampa City CenterX5o
	10              bPoTqPark Tower
	11  m7eBank of America Towerafo
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM building AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM institution
		           WHERE (founded = 2003.0)) AS RHS
		        WHERE (LHS.building_id = RHS.building_id) ))
		ORDER BY name

	                           name
	0   (YoBank of America Tower8nt
	1   0J2Bank of America TowerQ9B
	2               100 North Tampa
	3               100 North Tampa
	4               100 North Tampa
	5          100 North TampaW9jZ1
	6          Bank of America Towe
	7         Bank of America Tower
	8         Bank of America Tower
	9         Bank of America Tower
	10              K(BR9Park Tower
	11        One Tampa City Center
	12        One Tampa City Center
	13                   Park Tower
	14             QpqPark TowerrGC
	15  V8ROne Tampa City CenterX5o
	16              bPoTqPark Tower
	17  m7eBank of America Towerafo
No solution for instance spider/protein_institute/0005 (2895)
Wrong output for fuzzied solution in instance spider/protein_institute/0016 (2896)
	EXPECTED OUTPUT ====

		SELECT T1.institution,
		       count(*)
		FROM institution AS T1
		JOIN protein AS T2 ON T1.institution_id = T2.institution_id
		GROUP BY T1.institution_id

	                       institution  count(*)
	0              F1GMenlo Collegeq6V         1
	1                 Jamestown Colleg         1
	2                Jamestown College         1
	3                Jamestown College         1
	4                Jamestown College         1
	5           Jamestown CollegeaV)xh         1
	6         Mayville State Universit         1
	7        Mayville State University         1
	8        Mayville State University         1
	9   Mayville State UniversityA3Zmd         1
	10                    Menlo Colleg         1
	11                    Menlo Colleg         1
	12                   Menlo College         1
	13                   Menlo College         1
	14                   Menlo College         1
	15                   Menlo College         1
	16              QVboXMenlo College         1
	17                    enlo College         1
	18                    enlo College         1
	19                    enlo College         1
	20         BJGJamestown CollegetKp         2
	21               Jamestown College         2
	22        Mayville State Universit         2
	23       Mayville State University         2
	24                   Menlo College         2
	25                   Menlo College         2
	26                   Menlo College         2
	27                amestown College         2
	28                Jamestown Colleg         3
	29               Jamestown College         3
	ACTUAL OUTPUT ====

		
		SELECT institution,
		       n AS count___
		FROM
		  (SELECT enrollment,
		          institution,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.institution_id AS institution_id,
		             LHS.institution AS institution,
		             LHS.location AS LOCATION,
		             LHS.founded AS founded,
		             LHS.type AS TYPE,
		             LHS.enrollment AS enrollment,
		             LHS.team AS team,
		             LHS.primary_conference AS primary_conference,
		             LHS.building_id AS building_id,
		             RHS.common_name AS common_name,
		             RHS.protein_name AS protein_name,
		             RHS.divergence_from_human_lineage AS divergence_from_human_lineage,
		             RHS.accession_number AS accession_number,
		             RHS.sequence_length AS sequence_length,
		             RHS.sequence_identity_to_human_protein AS sequence_identity_to_human_protein
		      FROM institution AS LHS
		      INNER JOIN protein AS RHS ON (LHS.institution_id = RHS.institution_id))
		   GROUP BY enrollment,
		            institution)
		ORDER BY institution

	                       institution  count___
	0              F1GMenlo Collegeq6V         1
	1                 Jamestown Colleg         1
	2                Jamestown College         1
	3           Jamestown CollegeaV)xh         1
	4         Mayville State Universit         1
	5        Mayville State University         1
	6        Mayville State University         1
	7   Mayville State UniversityA3Zmd         1
	8                     Menlo Colleg         1
	9                     Menlo Colleg         1
	10                   Menlo College         1
	11                   Menlo College         1
	12                   Menlo College         1
	13              QVboXMenlo College         1
	14                    enlo College         1
	15                    enlo College         1
	16                    enlo College         1
	17         BJGJamestown CollegetKp         2
	18               Jamestown College         2
	19               Jamestown College         2
	20        Mayville State Universit         2
	21       Mayville State University         2
	22                   Menlo College         2
	23                   Menlo College         2
	24                amestown College         2
	25                Jamestown Colleg         3
	26               Jamestown College         3
	27                   Menlo College         3
Wrong output for fuzzied solution in instance spider/protein_institute/0020 (2898)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM institution
		WHERE institution_id NOT IN
		    (SELECT institution_id
		     FROM protein)

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT *
		   FROM institution AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM protein AS RHS
		        WHERE (LHS.institution_id = RHS.institution_id) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/protein_institute/0019 (2899)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM institution AS T1
		JOIN protein AS T2 ON T1.institution_id = T2.institution_id
		JOIN building AS T3 ON T3.building_id = T1.building_id
		WHERE T3.floors >= 20

	   count(*)
	0        62
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT floors) AS n_distinct
		   FROM
		     (SELECT LHS.institution_id AS institution_id,
		             LHS.institution AS institution,
		             LHS.location AS LOCATION,
		             LHS.founded AS founded,
		             LHS.type AS TYPE,
		             LHS.enrollment AS enrollment,
		             LHS.team AS team,
		             LHS.primary_conference AS primary_conference,
		             LHS.building_id AS building_id,
		             LHS.common_name AS common_name,
		             LHS.protein_name AS protein_name,
		             LHS.divergence_from_human_lineage AS divergence_from_human_lineage,
		             LHS.accession_number AS accession_number,
		             LHS.sequence_length AS sequence_length,
		             LHS.sequence_identity_to_human_protein AS sequence_identity_to_human_protein,
		             RHS.name AS name,
		             RHS.street_address AS street_address,
		             RHS.years_as_tallest AS years_as_tallest,
		             RHS.height_feet AS height_feet,
		             RHS.floors AS floors
		      FROM
		        (SELECT LHS.institution_id AS institution_id,
		                LHS.institution AS institution,
		                LHS.location AS LOCATION,
		                LHS.founded AS founded,
		                LHS.type AS TYPE,
		                LHS.enrollment AS enrollment,
		                LHS.team AS team,
		                LHS.primary_conference AS primary_conference,
		                LHS.building_id AS building_id,
		                RHS.common_name AS common_name,
		                RHS.protein_name AS protein_name,
		                RHS.divergence_from_human_lineage AS divergence_from_human_lineage,
		                RHS.accession_number AS accession_number,
		                RHS.sequence_length AS sequence_length,
		                RHS.sequence_identity_to_human_protein AS sequence_identity_to_human_protein
		         FROM institution AS LHS
		         INNER JOIN protein AS RHS ON (LHS.institution_id = RHS.institution_id)) AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM building
		         WHERE (floors > 20)) AS RHS ON (LHS.building_id = RHS.building_id)))
		ORDER BY count___

	   count___
	0        11
No solution for instance spider/protein_institute/0014 (2902)
Wrong output for fuzzied solution in instance spider/protein_institute/0009 (2903)
	EXPECTED OUTPUT ====

		SELECT TYPE
		FROM institution
		GROUP BY TYPE
		ORDER BY count(*) DESC
		LIMIT 1

	     type
	0  Public
	ACTUAL OUTPUT ====

		
		SELECT TYPE
		FROM
		  (SELECT founded,
		          TYPE,
		          COUNT() AS n
		   FROM institution
		   GROUP BY founded,
		            TYPE)
		WHERE (n != 1)
		ORDER BY TYPE

	       type
	0    Privat
	1   Private
	2   Private
	3   Private
	4   Private
	5   Private
	6    Public
	7    Public
	8    Public
	9    Public
	10   Public
Wrong output for fuzzied solution in instance spider/protein_institute/0010 (2905)
	EXPECTED OUTPUT ====

		SELECT TYPE
		FROM institution
		WHERE founded > 1990
		  AND enrollment >= 1000

	           type
	0  4nyPublicwGH
	1  PrivateSjY78
	2        Public
	3        Public
	4  XjZqGPrivate
	ACTUAL OUTPUT ====

		
		SELECT TYPE
		FROM institution
		WHERE (founded >= 1990.0
		       OR founded < 1000.0)
		ORDER BY TYPE

	             type
	0    4nyPublicwGH
	1     G0C(GPublic
	2         Private
	3         Private
	4         Private
	5    Private9P6 k
	6    PrivateLBhj1
	7    PrivateSjY78
	8           Publi
	9           Publi
	10         Public
	11         Public
	12         Public
	13         Public
	14         Public
	15         Public
	16         Public
	17    Public4i7G 
	18    PublicX(H4c
	19    PublicZIy9T
	20   XjZqGPrivate
	21   YoNPublicl5u
	22   fEoAwPrivate
	23          ublic
	24          ublic
	25  w()Private0gt
Wrong output for fuzzied solution in instance spider/restaurant_1/0002 (2906)
	EXPECTED OUTPUT ====

		SELECT Address
		FROM Restaurant
		WHERE ResName = "Subway";

	                                address
	0  3233 St Paul St, Baltimore, MD 21218
	1  3233 St Paul St, Baltimore, MD 21218
	ACTUAL OUTPUT ====

		
		SELECT `address`
		FROM
		  (SELECT `address`
		   FROM `restaurant`
		   WHERE (`resname` = 'Subway') INTERSECT
		     SELECT `address`
		     FROM `restaurant` WHERE (`resname` = 'Subway'))
		ORDER BY address

	                                address
	0  3233 St Paul St, Baltimore, MD 21218
Wrong output for fuzzied solution in instance spider/restaurant_1/0017 (2907)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Restaurant
		JOIN Type_Of_Restaurant ON Restaurant.ResID = Type_Of_Restaurant.ResID
		JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID
		GROUP BY Type_Of_Restaurant.ResTypeID
		HAVING Restaurant_Type.ResTypeName = 'Sandwich'

	   count(*)
	0         6
	1         7
	2        17
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___
		FROM
		  (SELECT address,
		          resname,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.resid AS resid,
		             LHS.resname AS resname,
		             LHS.address AS address,
		             LHS.rating AS rating,
		             LHS.restypeid AS restypeid,
		             RHS.restypename AS restypename,
		             RHS.restypedescription AS restypedescription
		      FROM
		        (SELECT LHS.resid AS resid,
		                LHS.resname AS resname,
		                LHS.address AS address,
		                LHS.rating AS rating,
		                RHS.restypeid AS restypeid
		         FROM restaurant AS LHS
		         INNER JOIN type_of_restaurant AS RHS ON (LHS.resid = RHS.resid)) AS LHS
		      INNER JOIN restaurant_type AS RHS ON (LHS.restypeid = RHS.restypeid))
		   GROUP BY address,
		            resname)
		ORDER BY count___

	   count___
	0         6
	1         7
	2         9
	3        13
	4        16
Wrong output for fuzzied solution in instance spider/restaurant_1/0008 (2908)
	EXPECTED OUTPUT ====

		SELECT Sex
		FROM Student
		WHERE Fname = "Linda"
		  AND Lname = "Smith";

	  sex
	0   F
	ACTUAL OUTPUT ====

		
		SELECT `sex`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`
		   FROM `student` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `student`
		      WHERE (`fname` != 'Linda'
		             AND `lname` = 'Smith')) AS RHS ON (LHS.stuid = RHS.stuid
		                                                AND LHS.lname = RHS.lname
		                                                AND LHS.fname = RHS.fname
		                                                AND LHS.age = RHS.age
		                                                AND LHS.sex = RHS.sex
		                                                AND LHS.major = RHS.major
		                                                AND LHS.advisor = RHS.advisor
		                                                AND LHS.city_code = RHS.city_code))
		ORDER BY sex

	      sex
	0  9wi(FF
	1       F
Wrong output for fuzzied solution in instance spider/restaurant_1/0003 (2909)
	EXPECTED OUTPUT ====

		SELECT Rating
		FROM Restaurant
		WHERE ResName = "Subway";

	   rating
	0       5
	1       5
	ACTUAL OUTPUT ====

		
		SELECT `rating`
		FROM
		  (SELECT `rating`
		   FROM `restaurant`
		   WHERE (`resname` = 'Subway') INTERSECT
		     SELECT `rating`
		     FROM `restaurant` WHERE (`resname` = 'Subway'))
		ORDER BY rating

	   rating
	0       5
Wrong output for fuzzied solution in instance spider/restaurant_1/0022 (2910)
	EXPECTED OUTPUT ====

		SELECT Student.Fname,
		       Student.Lname
		FROM Student
		JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID
		GROUP BY Student.StuID
		ORDER BY count(*) DESC
		LIMIT 1;

	    fname   lname
	0  Arthur  Wilson
	ACTUAL OUTPUT ====

		
		SELECT fname,
		       lname
		FROM
		  (SELECT LHS.stuid AS stuid,
		          LHS.lname AS lname,
		          LHS.fname AS fname,
		          LHS.age AS age,
		          LHS.sex AS sex,
		          LHS.major AS major,
		          LHS.advisor AS advisor,
		          LHS.city_code AS city_code,
		          LHS.resid AS resid,
		          LHS.time AS TIME,
		          LHS.spent AS spent,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.stuid AS stuid,
		             LHS.lname AS lname,
		             LHS.fname AS fname,
		             LHS.age AS age,
		             LHS.sex AS sex,
		             LHS.major AS major,
		             LHS.advisor AS advisor,
		             LHS.city_code AS city_code,
		             LHS.resid AS resid,
		             LHS.time AS TIME,
		             LHS.spent AS spent,
		             RHS.n AS n
		      FROM
		        (SELECT LHS.stuid AS stuid,
		                LHS.lname AS lname,
		                LHS.fname AS fname,
		                LHS.age AS age,
		                LHS.sex AS sex,
		                LHS.major AS major,
		                LHS.advisor AS advisor,
		                LHS.city_code AS city_code,
		                RHS.resid AS resid,
		                RHS.time AS TIME,
		                RHS.spent AS spent
		         FROM student AS LHS
		         INNER JOIN visits_restaurant AS RHS ON (LHS.stuid = RHS.stuid)) AS LHS
		      INNER JOIN
		        (SELECT fname,
		                COUNT() AS n
		         FROM student
		         GROUP BY fname) AS RHS ON (LHS.fname = RHS.fname)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT fname,
		                COUNT() AS n
		         FROM student
		         GROUP BY fname)
		      WHERE (n > 1)) AS RHS ON (LHS.fname = RHS.fname
		                                AND LHS.n = RHS.n))
		ORDER BY fname

	   fname        lname
	0    Ian     Leighton
	1    Ian     Leighton
	2    Ian     Leighton
	3    Ian     Leighton
	4    Ian     Leighton
	5    Ian     Leighton
	6    Ian        Wilso
	7    Ian        Wilso
	8    Ian        Wilso
	9    Ian        Wilso
	10   Ian        Wilso
	11   Ian        Wilso
	12   Ian        Wilso
	13   Ian        Wilso
	14   Ian        Wilso
	15   Ian  gXlAdamsm8f
	16   Ian  gXlAdamsm8f
	17   Ian  gXlAdamsm8f
	18   Ian  gXlAdamsm8f
	19   Ian  gXlAdamsm8f
Wrong output for fuzzied solution in instance spider/restaurant_1/0006 (2912)
	EXPECTED OUTPUT ====

		SELECT ResName,
		       Rating
		FROM Restaurant
		ORDER BY Rating DESC
		LIMIT 1;

	     resname  rating
	0  Honeygrow       5
	ACTUAL OUTPUT ====

		
		SELECT resname,
		       rating
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM restaurant
		      ORDER BY resname)
		   LIMIT 1)

	    resname  rating
	0  Honeygro       3
Wrong output for fuzzied solution in instance spider/restaurant_1/0012 (2914)
	EXPECTED OUTPUT ====

		SELECT Advisor,
		       count(*)
		FROM Student
		GROUP BY Advisor
		ORDER BY count(Advisor) DESC
		LIMIT 1;

	   advisor  count(*)
	0     9172         4
	ACTUAL OUTPUT ====

		
		SELECT advisor,
		       n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT advisor,
		                sex,
		                COUNT() AS n
		         FROM student
		         GROUP BY advisor,
		                  sex)
		      ORDER BY n DESC)
		   LIMIT 1)

	   advisor  count___
	0     1121         1
Wrong output for fuzzied solution in instance spider/restaurant_1/0016 (2917)
	EXPECTED OUTPUT ====

		SELECT Fname,
		       Lname
		FROM Student
		WHERE Age > 18
		  AND Major != 600
		  AND Sex = 'F';

	        fname        lname
	0  A3KEricF9)          Lee
	1       Bruce  sp3Smithq2r
	ACTUAL OUTPUT ====

		
		SELECT `fname`,
		       `lname`
		FROM
		  (SELECT *
		   FROM `student`
		   WHERE (`sex` = 'F'
		          AND age != 18))
		WHERE (age != 600
		       AND major != 600)
		ORDER BY fname

	        fname           lname
	0  A3KEricF9)             Lee
	1       Bruce     sp3Smithq2r
	2       Georg         Schwart
	3      George  vZ1Schwartz8)t
	4       Jandy  VPJLeightonYbX
Wrong output for fuzzied solution in instance spider/restaurant_1/0018 (2918)
	EXPECTED OUTPUT ====

		SELECT sum(Spent)
		FROM Student
		JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID
		WHERE Student.Fname = "Linda"
		  AND Student.Lname = "Smith";

	   sum(spent)
	0       46.15
	ACTUAL OUTPUT ====

		
		SELECT `sumspent` AS `sum_spent_`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `RHS`.`time` AS `time`,
		          `RHS`.`sumspent` AS `sumspent`
		   FROM
		     (SELECT *
		      FROM `student`
		      WHERE (`fname` = 'Linda'
		             AND `lname` = 'Smith')) AS LHS
		   LEFT JOIN
		     (SELECT stuid,
		             TIME,
		             SUM(spent) AS sumspent
		      FROM visits_restaurant
		      GROUP BY stuid,
		               TIME) AS RHS ON (LHS.stuid = RHS.stuid))
		ORDER BY sum_spent_

	   sum_spent_
	0        6.55
	1       13.18
	2       13.21
	3       13.21
Error while executing solution for instance spider/restaurant_1/0019 (2920)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT `resid` AS `count___`
FROM
  (SELECT `LHS`.`resid` AS `resid`,
          `LHS`.`resname` AS `resname`,
          `LHS`.`address` AS `address`,
          `LHS`.`rating` AS `rating`,
          `LHS`.`stuid` AS `stuid`,
          `LHS`.`time` AS `time`,
          `LHS`.`spent` AS `spent`,
          `LHS`.`lname` AS `lname`,
          `LHS`.`fname` AS `fname`,
          `LHS`.`age` AS `age`,
          `LHS`.`sex` AS `sex`,
          `LHS`.`major` AS `major`,
          `LHS`.`advisor` AS `advisor`,
          `LHS`.`city_code` AS `city_code`,
          `RHS`.`n_distinct` AS `n_distinct`
   FROM
     (SELECT `LHS`.`resid` AS `resid`,
             `LHS`.`resname` AS `resname`,
             `LHS`.`address` AS `address`,
             `LHS`.`rating` AS `rating`,
             `LHS`.`stuid` AS `stuid`,
             `LHS`.`time` AS `time`,
             `LHS`.`spent` AS `spent`,
             `RHS`.`lname` AS `lname`,
             `RHS`.`fname` AS `fname`,
             `RHS`.`age` AS `age`,
             `RHS`.`sex` AS `sex`,
             `RHS`.`major` AS `major`,
             `RHS`.`advisor` AS `advisor`,
             `RHS`.`city_code` AS `city_code`
      FROM
        (SELECT `LHS`.`resid` AS `resid`,
                `LHS`.`resname` AS `resname`,
                `LHS`.`address` AS `address`,
                `LHS`.`rating` AS `rating`,
                `RHS`.`stuid` AS `stuid`,
                `RHS`.`time` AS `time`,
                `RHS`.`spent` AS `spent`
         FROM `restaurant` AS `LHS`
         INNER JOIN `visits_restaurant` AS `RHS` ON (`LHS`.`resid` = `RHS`.`resid`)) AS `LHS`
      INNER JOIN
        (SELECT *
         FROM `student`
         WHERE (`fname` = 'Linda'
                AND `lname` = 'Smith')) AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`
   INNER JOIN
     (SELECT `stuid`,
             `lname`,
             `fname`,
             `age`,
             `sex`,
             `major`,
             `advisor`,
             `city_code`,
             COUNT(DISTINCT `lname`) OVER () AS `n_distinct`
      FROM `student`) AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
                                      AND `LHS`.`lname` = `RHS`.`lname`
                                      AND `LHS`.`fname` = `RHS`.`fname`
                                      AND `LHS`.`age` = `RHS`.`age`
                                      AND `LHS`.`sex` = `RHS`.`sex`
                                      AND `LHS`.`major` = `RHS`.`major`
                                      AND `LHS`.`advisor` = `RHS`.`advisor`
                                      AND `LHS`.`city_code` = `RHS`.`city_code`))
WHERE (`lname` = 'Smith'
       OR `resname` != 'Subway')
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/restaurant_1/0021 (2922)
	EXPECTED OUTPUT ====

		SELECT Restaurant.ResName,
		       sum(Visits_Restaurant.Spent)
		FROM Visits_Restaurant
		JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID
		GROUP BY Restaurant.ResID
		ORDER BY sum(Visits_Restaurant.Spent) ASC
		LIMIT 1;

	    resname  sum(visits_restaurant.spent)
	0  Honeygro                        105.42
	ACTUAL OUTPUT ====

		
		SELECT resname,
		       spent AS sum_visits_restaurant_spent_
		FROM
		  (SELECT LHS.resid AS resid,
		          LHS.resname AS resname,
		          LHS.address AS address,
		          LHS.rating AS rating,
		          LHS.stuid AS stuid,
		          LHS.time AS TIME,
		          LHS.spent AS spent,
		          RHS.sumspent AS sumspent,
		          RHS.spent_other AS spent_other,
		          RHS.time_other AS time_other,
		          RHS.sumspent_other AS sumspent_other
		   FROM
		     (SELECT LHS.resid AS resid,
		             LHS.resname AS resname,
		             LHS.address AS address,
		             LHS.rating AS rating,
		             RHS.stuid AS stuid,
		             RHS.time AS TIME,
		             RHS.spent AS spent
		      FROM restaurant AS LHS
		      INNER JOIN visits_restaurant AS RHS ON (LHS.resid = RHS.resid)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT LHS.spent AS spent,
		                LHS.time AS TIME,
		                LHS.sumspent AS sumspent,
		                RHS.spent AS spent_other,
		                RHS.time AS time_other,
		                RHS.sumspent AS sumspent_other
		         FROM
		           (SELECT spent,
		                   TIME,
		                   SUM(spent) AS sumspent
		            FROM visits_restaurant
		            GROUP BY spent,
		                     TIME) AS LHS
		         CROSS JOIN
		           (SELECT spent,
		                   TIME,
		                   SUM(spent) AS sumspent
		            FROM visits_restaurant
		            GROUP BY spent,
		                     TIME) AS RHS)
		      WHERE (sumspent < sumspent_other
		             OR spent_other > sumspent_other)) AS RHS ON (LHS.time = RHS.time
		                                                          AND LHS.spent = RHS.spent))
		ORDER BY resname

	              resname  sum_visits_restaurant_spent_
	0            Honeygro                          6.51
	1            Honeygro                          6.51
	2            Honeygro                          6.51
	3            Honeygro                          6.51
	4            Honeygro                          6.51
	...               ...                           ...
	4157  r5eHoneygrow47P                         13.20
	4158  r5eHoneygrow47P                         13.20
	4159  r5eHoneygrow47P                         13.20
	4160  r5eHoneygrow47P                         13.20
	4161  r5eHoneygrow47P                         13.20
	
	[4162 rows x 2 columns]
Wrong output for fuzzied solution in instance spider/restaurant_1/0001 (2923)
	EXPECTED OUTPUT ====

		SELECT ResName
		FROM Restaurant;

	           resname
	0         Honeygro
	1         Honeygro
	2        Honeygrow
	3        Honeygrow
	4   Honeygrowt5npO
	5  r5eHoneygrow47P
	ACTUAL OUTPUT ====

		
		SELECT resname
		FROM
		  (SELECT resname
		   FROM restaurant INTERSECT SELECT resname
		   FROM restaurant)
		ORDER BY resname

	           resname
	0         Honeygro
	1        Honeygrow
	2   Honeygrowt5npO
	3  r5eHoneygrow47P
Wrong output for fuzzied solution in instance spider/restaurant_1/0009 (2925)
	EXPECTED OUTPUT ====

		SELECT Fname,
		       Lname
		FROM Student
		WHERE Major = 600;

	         fname   lname
	0       Arthur  Wilson
	1  ArthurtDdnG   Smith
	2        Sarah    Smit
	3   SarahwHVqK   ilson
	ACTUAL OUTPUT ====

		
		SELECT fname,
		       lname
		FROM student
		WHERE (major >= 600)
		ORDER BY fname

	         fname       lname
	0        Arthu  Smithjx5W)
	1       Arthur  QF67VAdams
	2       Arthur      Wilson
	3       Arthur      Wilson
	4  ArthurtDdnG       Smith
	5           Ia    Leighton
	6         Jand       Smith
	7        Sarah        Smit
	8   SarahwHVqK       ilson
	9           an         Lee
Wrong output for fuzzied solution in instance spider/restaurant_1/0011 (2926)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Student
		WHERE Advisor = 1121;

	   count(*)
	0         3
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT advisor,
		          COUNT() AS n
		   FROM student
		   GROUP BY advisor)
		WHERE (advisor <= 1121
		       OR n = 1121)
		ORDER BY count___

	   count___
	0         2
	1         2
	2         3
Wrong output for fuzzied solution in instance spider/insurance_fnol/0008 (2929)
	EXPECTED OUTPUT ====

		SELECT t1.Effective_Date
		FROM claims AS t1
		JOIN settlements AS t2 ON t1.claim_id = t2.claim_id
		GROUP BY t1.claim_id
		ORDER BY sum(t2.settlement_amount) DESC
		LIMIT 1

	  effective_date
	0     1997-08-23
	ACTUAL OUTPUT ====

		
		SELECT effective_date
		FROM
		  (SELECT LHS.claim_id AS claim_id,
		          LHS.fnol_id AS fnol_id,
		          LHS.effective_date AS effective_date,
		          RHS.sumsettlement_amount AS sumsettlement_amount
		   FROM claims AS LHS
		   INNER JOIN
		     (SELECT settlement_id,
		             SUM(settlement_amount) AS sumsettlement_amount
		      FROM settlements
		      GROUP BY settlement_id) AS RHS ON (LHS.claim_id = RHS.settlement_id))
		ORDER BY effective_date

	Empty DataFrame
	Columns: [effective_date]
	Index: []
Wrong output for fuzzied solution in instance spider/insurance_fnol/0003 (2930)
	EXPECTED OUTPUT ====

		SELECT policy_type_code
		FROM available_policies
		GROUP BY policy_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	     policy_type_code
	0  Mortgage Insurance
	ACTUAL OUTPUT ====

		
		SELECT policy_type_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT policy_id,
		                policy_type_code,
		                COUNT() AS n
		         FROM available_policies
		         GROUP BY policy_id,
		                  policy_type_code)
		      ORDER BY policy_id DESC)
		   LIMIT 1)

	        policy_type_code
	0  Vv6kpTravel Insurance
Wrong output for fuzzied solution in instance spider/insurance_fnol/0013 (2931)
	EXPECTED OUTPUT ====

		SELECT service_name
		FROM services
		ORDER BY service_name

	                    service_name
	0            Bk29TClose a policy
	1                 Close a policy
	2                 Close a policy
	3                 Close a policy
	4                 Close a policy
	5         New policy application
	6                Upgrade a polic
	7               Upgrade a policy
	8               Upgrade a policy
	9          Upgrade a policy5Mntb
	10               pgrade a policy
	11        sFiUpgrade a policyAV4
	12  sQRNew policy applicationNBi
	ACTUAL OUTPUT ====

		
		SELECT service_name
		FROM
		  (SELECT service_name
		   FROM services INTERSECT SELECT service_name
		   FROM services)
		ORDER BY service_name

	                   service_name
	0           Bk29TClose a policy
	1                Close a policy
	2        New policy application
	3               Upgrade a polic
	4              Upgrade a policy
	5         Upgrade a policy5Mntb
	6               pgrade a policy
	7        sFiUpgrade a policyAV4
	8  sQRNew policy applicationNBi
No solution for instance spider/insurance_fnol/0004 (2933)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_31425.sqlite3'
Wrong output for fuzzied solution in instance spider/insurance_fnol/0015 (2935)
	EXPECTED OUTPUT ====

		SELECT customer_name
		FROM customers
		EXCEPT
		SELECT t1.customer_name
		FROM customers AS t1
		JOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id

	       customer_name
	0  Mrs. Hanna Willms
	ACTUAL OUTPUT ====

		
		SELECT customer_name
		FROM
		  (SELECT *
		   FROM customers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM first_notification_of_loss AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY customer_name

	       customer_name
	0  Mrs. Hanna Willms
	1  Mrs. Liza Heller 
No solution for instance spider/insurance_fnol/0018 (2938)
No solution for instance spider/insurance_fnol/0021 (2942)
Wrong output for fuzzied solution in instance spider/insurance_fnol/0001 (2943)
	EXPECTED OUTPUT ====

		SELECT customer_phone
		FROM available_policies

	        customer_phone
	0  1-381-132-0127x3801
	1  1-381-132-0127x3801
	2  1-381-132-0127x3801
	3      889-572-0609x55
	4      91.642.6485x822
	5     991.642.6485x822
	6     991.642.6485x822
	ACTUAL OUTPUT ====

		
		SELECT customer_phone
		FROM
		  (SELECT customer_phone
		   FROM available_policies INTERSECT SELECT customer_phone
		   FROM available_policies)
		ORDER BY customer_phone

	        customer_phone
	0  1-381-132-0127x3801
	1      889-572-0609x55
	2      91.642.6485x822
	3     991.642.6485x822
Wrong output for fuzzied solution in instance spider/insurance_fnol/0009 (2945)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM customers AS t1
		JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id
		WHERE t1.customer_name = "Dayana Robel"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`customer_id` AS `customer_id`,
		          `LHS`.`customer_name` AS `customer_name`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT *
		      FROM `customers`
		      WHERE (`customer_name` = 'Dayana Robel')) AS LHS
		   LEFT JOIN
		     (SELECT customer_id,
		             COUNT() AS n
		      FROM customers_policies
		      GROUP BY customer_id) AS RHS ON (LHS.customer_id = RHS.customer_id))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/insurance_fnol/0010 (2947)
	EXPECTED OUTPUT ====

		SELECT t1.customer_name
		FROM customers AS t1
		JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id
		GROUP BY t1.customer_name
		ORDER BY count(*) DESC
		LIMIT 1

	       customer_name
	0  Mrs. Liza Heller 
	ACTUAL OUTPUT ====

		
		SELECT customer_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT customer_id,
		                policy_id,
		                date_opened,
		                date_closed,
		                customer_name,
		                COUNT(*) OVER () AS n
		         FROM
		           (SELECT LHS.customer_id AS customer_id,
		                   LHS.policy_id AS policy_id,
		                   LHS.date_opened AS date_opened,
		                   LHS.date_closed AS date_closed,
		                   RHS.customer_name AS customer_name
		            FROM customers_policies AS LHS
		            INNER JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id)))
		      ORDER BY date_closed DESC)
		   LIMIT 1)

	           customer_name
	0  Mrs. Lilly Graham III
Wrong output for fuzzied solution in instance spider/icfp_1/0008 (2951)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t3.name
		FROM authors AS t1
		JOIN authorship AS t2 ON t1.authid = t2.authid
		JOIN inst AS t3 ON t2.instid = t3.instid
		WHERE t1.fname = "Katsuhiro"
		  AND t1.lname = "Ueno"

	                         name
	0           Tohoku University
	1        University of Oxford
	2                 Y(ZVgGoogle
	3  aUVUniversity of OxfordUkX
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`instid` AS `instid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`authid` AS `authid`,
		          `LHS`.`paperid` AS `paperid`,
		          `LHS`.`authorder` AS `authorder`,
		          `RHS`.`lname` AS `lname`,
		          `RHS`.`fname` AS `fname`
		   FROM
		     (SELECT `LHS`.`instid` AS `instid`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`country` AS `country`,
		             `RHS`.`authid` AS `authid`,
		             `RHS`.`paperid` AS `paperid`,
		             `RHS`.`authorder` AS `authorder`
		      FROM `inst` AS `LHS`
		      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `authors`
		      WHERE (`fname` = 'Katsuhiro'
		             AND `lname` = 'Ueno')) AS RHS ON (LHS.authid = RHS.authid))
		ORDER BY name

	                         name
	0           Tohoku University
	1        University of Oxford
	2        University of Oxford
	3        University of Oxford
	4        University of Oxford
	5                 Y(ZVgGoogle
	6  aUVUniversity of OxfordUkX
No solution for instance spider/icfp_1/0027 (2953)
Wrong output for fuzzied solution in instance spider/icfp_1/0022 (2954)
	EXPECTED OUTPUT ====

		SELECT t1.country
		FROM inst AS t1
		JOIN authorship AS t2 ON t1.instid = t2.instid
		JOIN papers AS t3 ON t2.paperid = t3.paperid
		GROUP BY t1.country
		ORDER BY count(*) DESC
		LIMIT 1

	  country
	0      UK
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT country
		FROM
		  (SELECT LHS.authid AS authid,
		          LHS.instid AS instid,
		          LHS.paperid AS paperid,
		          LHS.authorder AS authorder,
		          RHS.name AS name,
		          RHS.country AS country,
		          RHS.paperid AS paperid_other,
		          RHS.title AS title
		   FROM authorship AS LHS
		   INNER JOIN
		     (SELECT instid,
		             name,
		             country,
		             paperid,
		             title,
		             COUNT(*) OVER () AS n
		      FROM
		        (SELECT LHS.instid AS instid,
		                LHS.name AS name,
		                LHS.country AS country,
		                RHS.paperid AS paperid,
		                RHS.title AS title
		         FROM inst AS LHS
		         CROSS JOIN papers AS RHS)) AS RHS ON (LHS.instid = RHS.instid
		                                                  AND LHS.authid = RHS.n))
		ORDER BY country

	   country
	0       UK
	1  UKMO0MO
	2  UKhA1fg
	3  Y8nq4UK
Wrong output for fuzzied solution in instance spider/icfp_1/0030 (2955)
	EXPECTED OUTPUT ====

		SELECT lname
		FROM authors
		WHERE fname = "Amal"

	     lname
	0  Weirich
	1  Weirich
	ACTUAL OUTPUT ====

		
		SELECT `lname`
		FROM
		  (SELECT `lname`
		   FROM `authors`
		   WHERE (`fname` = 'Amal') INTERSECT
		     SELECT lname
		     FROM authors)
		ORDER BY lname

	     lname
	0  Weirich
Wrong output for fuzzied solution in instance spider/icfp_1/0013 (2956)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t1.title
		FROM papers AS t1
		JOIN authorship AS t2 ON t1.paperid = t2.paperid
		JOIN inst AS t3 ON t2.instid = t3.instid
		WHERE t3.name = "Indiana University"

	                                               title
	0                               9rnPfBinders Unbound
	1                                     Binders Unboun
	2                                    Binders Unbound
	3  Proving the Unique Fixed-Point Principle Corre...
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT `LHS`.`instid` AS `instid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`paperid` AS `paperid`,
		          `LHS`.`title` AS `title`,
		          `LHS`.`authid` AS `authid`,
		          `LHS`.`authorder` AS `authorder`
		   FROM
		     (SELECT `LHS`.`instid` AS `instid`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`paperid` AS `paperid`,
		             `LHS`.`title` AS `title`,
		             `RHS`.`authid` AS `authid`,
		             `RHS`.`authorder` AS `authorder`
		      FROM
		        (SELECT `LHS`.`instid` AS `instid`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`country` AS `country`,
		                `RHS`.`paperid` AS `paperid`,
		                `RHS`.`title` AS `title`
		         FROM `inst` AS `LHS`
		         CROSS JOIN `papers` AS `RHS`) AS `LHS`
		      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`
		                                              AND `LHS`.`paperid` = `RHS`.`paperid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `inst`
		      WHERE (`name` = 'Indiana University')) AS RHS ON (LHS.instid = RHS.instid
		                                                        AND LHS.name = RHS.name
		                                                        AND LHS.country = RHS.country))
		ORDER BY title

	                                               title
	0                               9rnPfBinders Unbound
	1                               9rnPfBinders Unbound
	2                                     Binders Unboun
	3                                    Binders Unbound
	4                                    Binders Unbound
	5  Proving the Unique Fixed-Point Principle Corre...
Wrong output for fuzzied solution in instance spider/icfp_1/0006 (2957)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM authors AS t1
		JOIN authorship AS t2 ON t1.authid = t2.authid
		JOIN papers AS t3 ON t2.paperid = t3.paperid
		WHERE t1.fname = "Atsushi"
		  AND t1.lname = "Ohori"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n_distinct` AS `count___`
		FROM
		  (SELECT `authid`,
		          `authorder`,
		          COUNT(DISTINCT `lname`) AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`authid` AS `authid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`paperid` AS `paperid`,
		             `LHS`.`title` AS `title`,
		             `LHS`.`instid` AS `instid`,
		             `LHS`.`authorder` AS `authorder`
		      FROM
		        (SELECT `LHS`.`authid` AS `authid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`paperid` AS `paperid`,
		                `LHS`.`title` AS `title`,
		                `RHS`.`instid` AS `instid`,
		                `RHS`.`authorder` AS `authorder`
		         FROM
		           (SELECT `LHS`.`authid` AS `authid`,
		                   `LHS`.`lname` AS `lname`,
		                   `LHS`.`fname` AS `fname`,
		                   `RHS`.`paperid` AS `paperid`,
		                   `RHS`.`title` AS `title`
		            FROM `authors` AS `LHS`
		            CROSS JOIN `papers` AS `RHS`) AS `LHS`
		         INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`
		                                                 AND `LHS`.`paperid` = `RHS`.`paperid`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `authors`
		         WHERE (`fname` != 'Atsushi'
		                OR `lname` = 'Ohori')) AS RHS ON (LHS.authid = RHS.authid
		                                                  AND LHS.lname = RHS.lname
		                                                  AND LHS.fname = RHS.fname))
		   GROUP BY authid,
		            authorder)
		ORDER BY count___

	   count___
	0         1
No solution for instance spider/icfp_1/0026 (2959)
Wrong output for fuzzied solution in instance spider/icfp_1/0015 (2960)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT t1.title)
		FROM papers AS t1
		JOIN authorship AS t2 ON t1.paperid = t2.paperid
		JOIN inst AS t3 ON t2.instid = t3.instid
		WHERE t3.name = "Tokohu University"

	   count(distinct t1.title)
	0                         4
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count_distinct_t1_title_
		FROM
		  (SELECT COUNT(DISTINCT name) AS n_distinct
		   FROM
		     (SELECT paperid,
		             title,
		             instid,
		             name,
		             paperid_other,
		             authorder,
		             authid,
		             title AS country
		      FROM
		        (SELECT paperid,
		                title,
		                instid,
		                name,
		                paperid_other,
		                authorder,
		                paperid AS authid
		         FROM
		           (SELECT LHS.paperid AS paperid,
		                   LHS.title AS title,
		                   RHS.instid AS instid,
		                   RHS.name AS name,
		                   RHS.paperid AS paperid_other,
		                   RHS.authorder AS authorder
		            FROM papers AS LHS
		            INNER JOIN
		              (SELECT LHS.instid AS instid,
		                      LHS.name AS name,
		                      LHS.country AS country,
		                      RHS.authid AS authid,
		                      RHS.paperid AS paperid,
		                      RHS.authorder AS authorder
		               FROM inst AS LHS
		               INNER JOIN authorship AS RHS ON (LHS.instid = RHS.instid)) AS RHS ON (LHS.paperid = RHS.authid
		                                                                                        AND LHS.title = RHS.country)))))
		ORDER BY count_distinct_t1_title_

	   count_distinct_t1_title_
	0                         0
Error while executing solution for instance spider/icfp_1/0016 (2962)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `name`) OVER () AS `count_distinct_t1_title_`
FROM
  (SELECT `LHS`.`instid` AS `instid`,
          `LHS`.`name` AS `name`,
          `LHS`.`country` AS `country`,
          `LHS`.`paperid` AS `paperid`,
          `LHS`.`title` AS `title`,
          `LHS`.`authid` AS `authid`,
          `LHS`.`authorder` AS `authorder`
   FROM
     (SELECT `LHS`.`instid` AS `instid`,
             `LHS`.`name` AS `name`,
             `LHS`.`country` AS `country`,
             `LHS`.`paperid` AS `paperid`,
             `LHS`.`title` AS `title`,
             `RHS`.`authid` AS `authid`,
             `RHS`.`authorder` AS `authorder`
      FROM
        (SELECT `LHS`.`instid` AS `instid`,
                `LHS`.`name` AS `name`,
                `LHS`.`country` AS `country`,
                `RHS`.`paperid` AS `paperid`,
                `RHS`.`title` AS `title`
         FROM `inst` AS `LHS`
         CROSS JOIN `papers` AS `RHS`) AS `LHS`
      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`
                                              AND `LHS`.`paperid` = `RHS`.`paperid`)) AS `LHS`
   INNER JOIN
     (SELECT *
      FROM `inst`
      WHERE (`name` = 'University of Pennsylvania')) AS RHS ON (LHS.instid = RHS.instid
                                                                AND LHS.name = RHS.name
                                                                AND LHS.country = RHS.country))
ORDER BY count_distinct_t1_title_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/icfp_1/0018 (2964)
	EXPECTED OUTPUT ====

		SELECT t3.title
		FROM authors AS t1
		JOIN authorship AS t2 ON t1.authid = t2.authid
		JOIN papers AS t3 ON t2.paperid = t3.paperid
		WHERE t1.fname = "Stephanie"
		  AND t1.lname = "Weirich"

	Empty DataFrame
	Columns: [title]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT `LHS`.`authid` AS `authid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`paperid` AS `paperid`,
		          `LHS`.`title` AS `title`,
		          `LHS`.`instid` AS `instid`,
		          `LHS`.`authorder` AS `authorder`
		   FROM
		     (SELECT `LHS`.`authid` AS `authid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`paperid` AS `paperid`,
		             `LHS`.`title` AS `title`,
		             `RHS`.`instid` AS `instid`,
		             `RHS`.`authorder` AS `authorder`
		      FROM
		        (SELECT `LHS`.`authid` AS `authid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `RHS`.`paperid` AS `paperid`,
		                `RHS`.`title` AS `title`
		         FROM `authors` AS `LHS`
		         CROSS JOIN `papers` AS `RHS`) AS `LHS`
		      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`
		                                              AND `LHS`.`paperid` = `RHS`.`paperid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `authors`
		      WHERE (`fname` = 'Stephanie'
		             OR `lname` = 'Weirich')) AS RHS ON (LHS.authid = RHS.authid
		                                                 AND LHS.lname = RHS.lname
		                                                 AND LHS.fname = RHS.fname))
		ORDER BY title

	                                                title
	0   An Equivalence-Preserving CPS Translation via ...
	1   An Equivalence-Preserving CPS Translation via ...
	2   An Equivalence-Preserving CPS Translation via ...
	3   An Equivalence-Preserving CPS Translation via ...
	4   An Equivalence-Preserving CPS Translation via ...
	5                                     Binders Unbound
	6                                     Binders Unbound
	7                                     Binders Unbound
	8   Proving the Unique Fixed-Point Principle Corre...
	9   QpqAn Equivalence-Preserving CPS Translation v...
	10  n Equivalence-Preserving CPS Translation via M...
	11  n Equivalence-Preserving CPS Translation via M...
	12  n Equivalence-Preserving CPS Translation via M...
Wrong output for fuzzied solution in instance spider/icfp_1/0020 (2965)
	EXPECTED OUTPUT ====

		SELECT t3.title
		FROM authors AS t1
		JOIN authorship AS t2 ON t1.authid = t2.authid
		JOIN papers AS t3 ON t2.paperid = t3.paperid
		JOIN inst AS t4 ON t2.instid = t4.instid
		WHERE t4.country = "Japan"
		  AND t2.authorder = 1
		  AND t1.lname = "Ohori"

	Empty DataFrame
	Columns: [title]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT `LHS`.`instid` AS `instid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`country` AS `country`,
		          `RHS`.`authid` AS `authid`,
		          `RHS`.`lname` AS `lname`,
		          `RHS`.`fname` AS `fname`,
		          `RHS`.`paperid` AS `paperid`,
		          `RHS`.`title` AS `title`,
		          `RHS`.`authorder` AS `authorder`
		   FROM `inst` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`instid` AS `instid`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`country` AS `country`,
		                `LHS`.`authid` AS `authid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`paperid` AS `paperid`,
		                `LHS`.`title` AS `title`,
		                `RHS`.`authorder` AS `authorder`
		         FROM
		           (SELECT `LHS`.`instid` AS `instid`,
		                   `LHS`.`name` AS `name`,
		                   `LHS`.`country` AS `country`,
		                   `LHS`.`authid` AS `authid`,
		                   `LHS`.`lname` AS `lname`,
		                   `LHS`.`fname` AS `fname`,
		                   `RHS`.`paperid` AS `paperid`,
		                   `RHS`.`title` AS `title`
		            FROM
		              (SELECT `LHS`.`instid` AS `instid`,
		                      `LHS`.`name` AS `name`,
		                      `LHS`.`country` AS `country`,
		                      `RHS`.`authid` AS `authid`,
		                      `RHS`.`lname` AS `lname`,
		                      `RHS`.`fname` AS `fname`
		               FROM `inst` AS `LHS`
		               CROSS JOIN `authors` AS `RHS`) AS `LHS`
		            CROSS JOIN `papers` AS `RHS`) AS `LHS`
		         INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`
		                                                 AND `LHS`.`authid` = `RHS`.`authid`
		                                                 AND `LHS`.`paperid` = `RHS`.`paperid`))
		      WHERE (`country` = 'Japan'
		             AND `lname` = 'Ohori')) AS RHS ON (LHS.instid = RHS.instid
		                                                AND LHS.name = RHS.name
		                                                AND LHS.country = RHS.country))
		ORDER BY title

	                                               title
	0  Making Standard ML a Practical Database Progra...
	1  Making Standard ML a Practical Database Progra...
	2  Making Standard ML a Practical Database Progra...
Wrong output for fuzzied solution in instance spider/icfp_1/0019 (2966)
	EXPECTED OUTPUT ====

		SELECT t3.title
		FROM authors AS t1
		JOIN authorship AS t2 ON t1.authid = t2.authid
		JOIN papers AS t3 ON t2.paperid = t3.paperid
		JOIN inst AS t4 ON t2.instid = t4.instid
		WHERE t4.country = "USA"
		  AND t2.authorder = 2
		  AND t1.lname = "Turon"

	Empty DataFrame
	Columns: [title]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT *
		   FROM
		     (SELECT `LHS`.`instid` AS `instid`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`authid` AS `authid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`paperid` AS `paperid`,
		             `LHS`.`title` AS `title`,
		             `RHS`.`authorder` AS `authorder`
		      FROM
		        (SELECT `LHS`.`instid` AS `instid`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`country` AS `country`,
		                `LHS`.`authid` AS `authid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `RHS`.`paperid` AS `paperid`,
		                `RHS`.`title` AS `title`
		         FROM
		           (SELECT `LHS`.`instid` AS `instid`,
		                   `LHS`.`name` AS `name`,
		                   `LHS`.`country` AS `country`,
		                   `RHS`.`authid` AS `authid`,
		                   `RHS`.`lname` AS `lname`,
		                   `RHS`.`fname` AS `fname`
		            FROM `inst` AS `LHS`
		            CROSS JOIN `authors` AS `RHS`) AS `LHS`
		         CROSS JOIN `papers` AS `RHS`) AS `LHS`
		      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`
		                                              AND `LHS`.`authid` = `RHS`.`authid`
		                                              AND `LHS`.`paperid` = `RHS`.`paperid`))
		   WHERE (`authorder` <= 2))
		WHERE (`country` = 'USA'
		       AND `lname` = 'Turon')
		ORDER BY title

	                                               title
	0  Proving the Unique Fixed-Point Principle Corre...
Wrong output for fuzzied solution in instance spider/icfp_1/0007 (2967)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t3.name
		FROM authors AS t1
		JOIN authorship AS t2 ON t1.authid = t2.authid
		JOIN inst AS t3 ON t2.instid = t3.instid
		WHERE t1.fname = "Matthias"
		  AND t1.lname = "Blume"

	                               name
	0  MyTUniversity of PennsylvaniaSan
	1         Portland State University
	2    Portland State University Zo68
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`instid` AS `instid`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`authid` AS `authid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `RHS`.`paperid` AS `paperid`,
		          `RHS`.`authorder` AS `authorder`
		   FROM
		     (SELECT `LHS`.`instid` AS `instid`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`country` AS `country`,
		             `RHS`.`authid` AS `authid`,
		             `RHS`.`lname` AS `lname`,
		             `RHS`.`fname` AS `fname`
		      FROM `inst` AS `LHS`
		      CROSS JOIN `authors` AS `RHS`) AS `LHS`
		   INNER JOIN `authorship` AS `RHS` ON (`LHS`.`instid` = `RHS`.`instid`
		                                           AND `LHS`.`authid` = `RHS`.`authid`))
		WHERE (`fname` = 'Matthias'
		       AND `lname` = 'Blume')
		ORDER BY name

	                               name
	0  MyTUniversity of PennsylvaniaSan
	1         Portland State University
	2         Portland State University
	3         Portland State University
	4         Portland State University
	5    Portland State University Zo68
No solution for instance spider/icfp_1/0024 (2968)
Wrong output for fuzzied solution in instance spider/icfp_1/0021 (2969)
	EXPECTED OUTPUT ====

		SELECT t1.lname
		FROM authors AS t1
		JOIN authorship AS t2 ON t1.authid = t2.authid
		JOIN papers AS t3 ON t2.paperid = t3.paperid
		GROUP BY t1.fname,
		         t1.lname
		ORDER BY count(*) DESC
		LIMIT 1

	   lname
	0  James
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT lname
		FROM
		  (SELECT LHS.lname AS lname,
		          LHS.n AS n,
		          RHS.lname AS lname_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT lname,
		             COUNT() AS n
		      FROM
		        (SELECT LHS.authid AS authid,
		                LHS.lname AS lname,
		                LHS.fname AS fname,
		                LHS.paperid AS paperid,
		                LHS.title AS title,
		                RHS.instid AS instid,
		                RHS.authorder AS authorder
		         FROM
		           (SELECT LHS.authid AS authid,
		                   LHS.lname AS lname,
		                   LHS.fname AS fname,
		                   RHS.paperid AS paperid,
		                   RHS.title AS title
		            FROM authors AS LHS
		            CROSS JOIN papers AS RHS) AS LHS
		         INNER JOIN authorship AS RHS ON (LHS.authid = RHS.authid
		                                             AND LHS.paperid = RHS.paperid))
		      GROUP BY lname) AS LHS
		   CROSS JOIN
		     (SELECT lname,
		             COUNT() AS n
		      FROM
		        (SELECT LHS.authid AS authid,
		                LHS.lname AS lname,
		                LHS.fname AS fname,
		                LHS.paperid AS paperid,
		                LHS.title AS title,
		                RHS.instid AS instid,
		                RHS.authorder AS authorder
		         FROM
		           (SELECT LHS.authid AS authid,
		                   LHS.lname AS lname,
		                   LHS.fname AS fname,
		                   RHS.paperid AS paperid,
		                   RHS.title AS title
		            FROM authors AS LHS
		            CROSS JOIN papers AS RHS) AS LHS
		         INNER JOIN authorship AS RHS ON (LHS.authid = RHS.authid
		                                             AND LHS.paperid = RHS.paperid))
		      GROUP BY lname) AS RHS)
		WHERE (n > n_other)
		ORDER BY lname

	             lname
	0            James
	1         Pouillar
	2       QIijVJames
	3           Weiric
	4  X1ZPouillardRi(
	5         ouillard
	6       v6fImAhmed
Wrong output for fuzzied solution in instance spider/icfp_1/0023 (2970)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM inst AS t1
		JOIN authorship AS t2 ON t1.instid = t2.instid
		JOIN papers AS t3 ON t2.paperid = t3.paperid
		GROUP BY t1.name
		ORDER BY count(*) DESC
		LIMIT 1

	     name
	0  Google
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name_other AS name
		FROM
		  (SELECT LHS.authorder AS authorder,
		          LHS.name AS name,
		          LHS.n AS n,
		          RHS.authorder AS authorder_other,
		          RHS.name AS name_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT authorder,
		             name,
		             COUNT() AS n
		      FROM
		        (SELECT LHS.instid AS instid,
		                LHS.name AS name,
		                LHS.country AS country,
		                LHS.paperid AS paperid,
		                LHS.title AS title,
		                RHS.authid AS authid,
		                RHS.authorder AS authorder
		         FROM
		           (SELECT LHS.instid AS instid,
		                   LHS.name AS name,
		                   LHS.country AS country,
		                   RHS.paperid AS paperid,
		                   RHS.title AS title
		            FROM inst AS LHS
		            CROSS JOIN papers AS RHS) AS LHS
		         INNER JOIN authorship AS RHS ON (LHS.instid = RHS.instid
		                                             AND LHS.paperid = RHS.paperid))
		      GROUP BY authorder,
		               name) AS LHS
		   CROSS JOIN
		     (SELECT authorder,
		             name,
		             COUNT() AS n
		      FROM
		        (SELECT LHS.instid AS instid,
		                LHS.name AS name,
		                LHS.country AS country,
		                LHS.paperid AS paperid,
		                LHS.title AS title,
		                RHS.authid AS authid,
		                RHS.authorder AS authorder
		         FROM
		           (SELECT LHS.instid AS instid,
		                   LHS.name AS name,
		                   LHS.country AS country,
		                   RHS.paperid AS paperid,
		                   RHS.title AS title
		            FROM inst AS LHS
		            CROSS JOIN papers AS RHS) AS LHS
		         INNER JOIN authorship AS RHS ON (LHS.instid = RHS.instid
		                                             AND LHS.paperid = RHS.paperid))
		      GROUP BY authorder,
		               name) AS RHS)
		WHERE (n < n_other)
		ORDER BY name

	                         name
	0                      Google
	1    Portland State Universit
	2   Portland State University
	3           Tohoku University
	4      Tohoku UniversityW9jZ1
	5  University of Pennsylvania
Wrong output for fuzzied solution in instance spider/icfp_1/0014 (2972)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t1.title
		FROM papers AS t1
		JOIN authorship AS t2 ON t1.paperid = t2.paperid
		JOIN inst AS t3 ON t2.instid = t3.instid
		WHERE t3.name = "Google"

	                                               title
	0                               9rnPfBinders Unbound
	1                                     Binders Unboun
	2                                    Binders Unbound
	3  Proving the Unique Fixed-Point Principle Corre...
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT `LHS`.`paperid` AS `paperid`,
		          `LHS`.`title` AS `title`,
		          `LHS`.`authid` AS `authid`,
		          `LHS`.`instid` AS `instid`,
		          `LHS`.`authorder` AS `authorder`,
		          `RHS`.`name` AS `name`,
		          `RHS`.`country` AS `country`
		   FROM
		     (SELECT `LHS`.`paperid` AS `paperid`,
		             `LHS`.`title` AS `title`,
		             `RHS`.`authid` AS `authid`,
		             `RHS`.`instid` AS `instid`,
		             `RHS`.`authorder` AS `authorder`
		      FROM `papers` AS `LHS`
		      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`paperid` = `RHS`.`paperid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `inst`
		      WHERE (`name` = 'Google')) AS RHS ON (LHS.instid = RHS.instid))
		ORDER BY title

	                                               title
	0                               9rnPfBinders Unbound
	1                               9rnPfBinders Unbound
	2                                     Binders Unboun
	3                                    Binders Unbound
	4                                    Binders Unbound
	5  Proving the Unique Fixed-Point Principle Corre...
No solution for instance spider/icfp_1/0025 (2974)
Wrong output for fuzzied solution in instance spider/icfp_1/0010 (2977)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t1.fname,
		                t1.lname
		FROM authors AS t1
		JOIN authorship AS t2 ON t1.authid = t2.authid
		JOIN inst AS t3 ON t2.instid = t3.instid
		WHERE t3.name = "Google"

	          fname            lname
	0       Nicolas            James
	1       Nicolas  X1ZPouillardRi(
	2  NicolasT(7tm         Pouillar
	3        icolas            James
	ACTUAL OUTPUT ====

		
		SELECT `fname`,
		       `lname`
		FROM
		  (SELECT `LHS`.`authid` AS `authid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`instid` AS `instid`,
		          `LHS`.`paperid` AS `paperid`,
		          `LHS`.`authorder` AS `authorder`,
		          `RHS`.`name` AS `name`,
		          `RHS`.`country` AS `country`
		   FROM
		     (SELECT `LHS`.`authid` AS `authid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `RHS`.`instid` AS `instid`,
		             `RHS`.`paperid` AS `paperid`,
		             `RHS`.`authorder` AS `authorder`
		      FROM `authors` AS `LHS`
		      INNER JOIN `authorship` AS `RHS` ON (`LHS`.`authid` = `RHS`.`authid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `inst`
		      WHERE (`name` = 'Google')) AS RHS ON (LHS.instid = RHS.instid))
		ORDER BY fname

	          fname            lname
	0       Nicolas            James
	1       Nicolas  X1ZPouillardRi(
	2  NicolasT(7tm         Pouillar
	3  NicolasT(7tm         Pouillar
	4        icolas            James
	5        icolas            James
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_31425.sqlite3'
Wrong output for fuzzied solution in instance spider/climbing/0008 (2982)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM mountain
		ORDER BY Height DESC
		LIMIT 1

	                                   name
	0  galiema / Mt Stanley (Margherita Pk)
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM mountain
		      ORDER BY mountain_id)
		   LIMIT 1)

	                                name
	0  Ngaliema / Mt Stanley (Savoia Pk)
Wrong output for fuzzied solution in instance spider/climbing/0012 (2987)
	EXPECTED OUTPUT ====

		SELECT T2.Height
		FROM climber AS T1
		JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID
		ORDER BY T1.Points DESC
		LIMIT 1

	    height
	0  4890.02
	ACTUAL OUTPUT ====

		
		SELECT height
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM mountain AS LHS
		         WHERE NOT EXISTS
		             (SELECT 1
		              FROM climber AS RHS
		              WHERE (LHS.mountain_id = RHS.mountain_id
		                     AND LHS.name = RHS.name) ))
		      ORDER BY mountain_id)
		   LIMIT 1)

	   height
	0  4977.0
Error while executing solution for instance spider/climbing/0005 (2989)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT country) OVER () AS count_distinct_country_
FROM climber
ORDER BY count_distinct_country_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/climbing/0018 (2991)
	EXPECTED OUTPUT ====

		SELECT Country
		FROM mountain
		WHERE Height > 5600 INTERSECT
		  SELECT Country
		  FROM mountain WHERE Height < 5200

	  country
	0   Kenya
	1  Uganda
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM
		  (SELECT country
		   FROM mountain INTERSECT SELECT country
		   FROM mountain
		   WHERE (height > 5600.0
		          AND height != 5200.0))
		ORDER BY country

	       country
	0  70YKenyaMCM
	1   FQQF6Kenya
	2         Keny
	3        Kenya
	4        Ugand
	5       Uganda
	6  mQRKenyaVeV
	7  qrGClUganda
Wrong output for fuzzied solution in instance spider/climbing/0020 (2992)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM mountain
		WHERE Height > 5000
		  OR Prominence > 1000

	                                         name
	0       7sAUrJSiX7d6zEAaMfIyjnoZQn48Js2VSX 2V
	1          BZoNCL4RkijDp65bv52oybFNBLNHSIKgdb
	2                        Mount Kenya (Batian)
	3                        Mount Kenya (Batian)
	4                        Mount Kenya (Batian)
	5       Ngaliema / Mt Stanley (Margherita Pk)
	6            Ngaliema / Mt Stanley (Savoia Pk
	7           Ngaliema / Mt Stanley (Savoia Pk)
	8           Ngaliema / Mt Stanley (Savoia Pk)
	9           Ngaliema / Mt Stanley (Savoia Pk)
	10                  P83hIMount Kenya (Batian)
	11  UhSpFp2tcUqtKd7d8i2l7)mqY EW8O3oiAVnzola2
	12     cEY53Ngaliema / Mt Stanley (Savoia Pk)
	13       galiema / Mt Stanley (Margherita Pk)
	14       galiema / Mt Stanley (Margherita Pk)
	15    h1MNgaliema / Mt Stanley (Savoia Pk)Yfd
	16               hc2K712ixBe10TTswCDhUi4PBCGt
	17                        ount Kenya (Batian)
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM mountain
		WHERE (height > 5000.0
		       OR prominence = 1000.0)
		ORDER BY name

	                                         name
	0       7sAUrJSiX7d6zEAaMfIyjnoZQn48Js2VSX 2V
	1          BZoNCL4RkijDp65bv52oybFNBLNHSIKgdb
	2     CHcNgaliema / Mt Stanley (Savoia Pk)jHX
	3                        Mount Kenya (Batian)
	4                        Mount Kenya (Batian)
	5                        Mount Kenya (Batian)
	6       Ngaliema / Mt Stanley (Margherita Pk)
	7           Ngaliema / Mt Stanley (Savoia Pk)
	8           Ngaliema / Mt Stanley (Savoia Pk)
	9           Ngaliema / Mt Stanley (Savoia Pk)
	10                  P83hIMount Kenya (Batian)
	11  UhSpFp2tcUqtKd7d8i2l7)mqY EW8O3oiAVnzola2
	12     cEY53Ngaliema / Mt Stanley (Savoia Pk)
	13       galiema / Mt Stanley (Margherita Pk)
	14       galiema / Mt Stanley (Margherita Pk)
	15    h1MNgaliema / Mt Stanley (Savoia Pk)Yfd
	16               hc2K712ixBe10TTswCDhUi4PBCGt
	17                        ount Kenya (Batian)
Wrong output for fuzzied solution in instance spider/climbing/0019 (2993)
	EXPECTED OUTPUT ====

		SELECT RANGE
		FROM mountain
		GROUP BY RANGE
		ORDER BY COUNT(*) DESC
		LIMIT 1

	               range
	0  hfJqj4HUFswE1ja80
	ACTUAL OUTPUT ====

		
		SELECT RANGE
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT height,
		                RANGE,
		                COUNT() AS n
		         FROM mountain
		         GROUP BY height,
		                  RANGE)
		      ORDER BY n)
		   LIMIT 1)

	         range
	0  Mount Kenya
Wrong output for fuzzied solution in instance spider/climbing/0007 (2994)
	EXPECTED OUTPUT ====

		SELECT Country
		FROM mountain
		WHERE Height > 5000

	         country
	0      MH5kKenya
	1  3lye3Tanzania
	2          Kenya
	3         Uganda
	4         Uganda
	5         Uganda
	6           enya
	7  x3TVeTanzania
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM mountain
		WHERE (height >= 5000.0)
		ORDER BY country

	           country
	0        MH5kKenya
	1    3lye3Tanzania
	2  DR Congo Uganda
	3            Kenya
	4           Uganda
	5           Uganda
	6           Uganda
	7             enya
	8     tHbU1ES6Q3bs
	9    x3TVeTanzania
Wrong output for fuzzied solution in instance spider/climbing/0001 (2995)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM climber

	   count(*)
	0         6
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT points,
		          TIME,
		          COUNT() AS n
		   FROM climber
		   GROUP BY points,
		            TIME)
		ORDER BY count___

	   count___
	0         5
Wrong output for fuzzied solution in instance spider/climbing/0009 (2997)
	EXPECTED OUTPUT ====

		SELECT DISTINCT RANGE
		FROM mountain
		ORDER BY Prominence DESC
		LIMIT 3

	                range
	0  DY(rWmO9a6EZk2WZVg
	1   F68Mount Kenyakua
	2    jxdWLRz8Jw()0gty
	ACTUAL OUTPUT ====

		
		SELECT RANGE
		FROM
		  (SELECT RANGE
		   FROM mountain INTERSECT SELECT RANGE
		   FROM mountain)
		ORDER BY RANGE

	                 range
	0    6DkKilimanjaroiBr
	1     Bq2woKilimanjaro
	2   DY(rWmO9a6EZk2WZVg
	3    F68Mount Kenyakua
	4   GfrNReMzG6)CaO5)NV
	5          Kilimanjaro
	6     KilimanjaroMDN4B
	7          Mount Kenya
	8           Nxf86TSSBr
	9     TXfYlMount Kenya
	10    U8gj55cJT4kaYyCt
	11        WCm4Dol7GMcQ
	12    WnyRbKngBaBb3yWM
	13         YX4bFqj(ZAn
	14   Zx3KilimanjaromI8
	15   bXmKilimanjaroaaw
	16    iORrHKilimanjaro
	17          ilimanjaro
	18    jxdWLRz8Jw()0gty
	19          ount Kenya
	20         sgNHQfkqrEO
	21         wQ)yy1oPIwa
Error while executing solution for instance spider/climbing/0010 (2999)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/climbing/0010 (2999)
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0042 (3000)
	EXPECTED OUTPUT ====

		SELECT customer_name
		FROM customers
		EXCEPT
		SELECT t1.customer_name
		FROM customers AS t1
		JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id
		JOIN order_items AS t3 ON t2.order_id = t3.order_id
		JOIN products AS t4 ON t3.product_id = t4.product_id
		WHERE t4.product_details = 'Latte'

	                   customer_name
	0    )hZn1mSX2nsMXCW4W7 vpgVvD9h
	1        JwAKitty Padberg III(C6
	2         Kitty Padberg III3yMa8
	3        MUBKitty Padberg III0lL
	4                Maudie Kertzman
	5        Prof. Alexzander Hamill
	6                 Rodrick Heaney
	7         UY9w(Kitty Padberg III
	8                 Zh41Rh3(H19vlq
	9                audie Kertzmann
	10  lcTuPProf. Alexzander Hamill
	ACTUAL OUTPUT ====

		
		SELECT `customer_name`
		FROM
		  (SELECT *
		   FROM `customers` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT `LHS`.`product_id` AS `product_id`,
		                     `LHS`.`product_details` AS `product_details`,
		                     `LHS`.`order_id` AS `order_id`,
		                     `LHS`.`customer_id` AS `customer_id`,
		                     `LHS`.`order_status` AS `order_status`,
		                     `LHS`.`order_date` AS `order_date`,
		                     `LHS`.`order_details` AS `order_details`,
		                     `RHS`.`order_quantity` AS `order_quantity`
		              FROM
		                (SELECT `LHS`.`product_id` AS `product_id`,
		                        `LHS`.`product_details` AS `product_details`,
		                        `RHS`.`order_id` AS `order_id`,
		                        `RHS`.`customer_id` AS `customer_id`,
		                        `RHS`.`order_status` AS `order_status`,
		                        `RHS`.`order_date` AS `order_date`,
		                        `RHS`.`order_details` AS `order_details`
		                 FROM `products` AS `LHS`
		                 CROSS JOIN `customer_orders` AS `RHS`) AS `LHS`
		              INNER JOIN `order_items` AS `RHS` ON (`LHS`.`product_id` = `RHS`.`product_id`
		                                                       AND `LHS`.`order_id` = `RHS`.`order_id`))
		           WHERE (`product_details` = 'Latte')) AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY customer_name

	                   customer_name
	0    )hZn1mSX2nsMXCW4W7 vpgVvD9h
	1        JwAKitty Padberg III(C6
	2               Kitty Padberg II
	3               Kitty Padberg II
	4              Kitty Padberg III
	5              Kitty Padberg III
	6              Kitty Padberg III
	7         Kitty Padberg III3yMa8
	8        MUBKitty Padberg III0lL
	9                Maudie Kertzman
	10       Prof. Alexzander Hamill
	11                Rodrick Heaney
	12                Rodrick Heaney
	13        UY9w(Kitty Padberg III
	14                Zh41Rh3(H19vlq
	15               audie Kertzmann
	16  lcTuPProf. Alexzander Hamill
Wrong output for base solution in instance spider/customers_and_addresses/0036 (3004)
	EXPECTED OUTPUT ====

	  sum_t2_order_quantity_
	0                     45
	ACTUAL OUTPUT ====

		SELECT sum(t2.order_quantity)
		FROM customer_orders AS t1
		JOIN order_items AS t2 ON t1.order_id = t2.order_id
		WHERE t1.order_date < "2018-03-17 07:13:53"

	   sum(t2.order_quantity)
	0                      45
Wrong output for ground truth in instance spider/customers_and_addresses/0036 (3004)
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0017 (3005)
	EXPECTED OUTPUT ====

		SELECT DISTINCT city
		FROM addresses

	                    city
	0       Lake Geovannyton
	1  Lake Geovannytonjx5W)
	2        New Terrillport
	3        ake Geovannyton
	4         ew Terrillport
	5            leasonmouth
	ACTUAL OUTPUT ====

		
		SELECT city
		FROM addresses
		ORDER BY city

	                    city
	0       Lake Geovannyton
	1       Lake Geovannyton
	2  Lake Geovannytonjx5W)
	3        New Terrillport
	4        New Terrillport
	5        ake Geovannyton
	6         ew Terrillport
	7            leasonmouth
Wrong output for base solution in instance spider/customers_and_addresses/0039 (3007)
	EXPECTED OUTPUT ====

		SELECT t2.product_details,
		       t2.product_id
		FROM order_items AS t1
		JOIN products AS t2 ON t1.product_id = t2.product_id
		GROUP BY t1.product_id
		ORDER BY sum(t1.order_quantity)
		LIMIT 1

	  product_details  product_id
	0       Americano           1
	ACTUAL OUTPUT ====

		
		SELECT product_details,
		       product_id
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.product_id AS product_id,
		                LHS.product_details AS product_details,
		                RHS.order_id AS order_id,
		                RHS.order_quantity AS order_quantity
		         FROM products AS LHS
		         INNER JOIN order_items AS RHS ON (LHS.product_id = RHS.product_id))
		      ORDER BY order_quantity DESC)
		   LIMIT 1)

	  product_details  product_id
	0  Dove Chocolate           2
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0038 (3008)
	EXPECTED OUTPUT ====

		SELECT t2.product_details
		FROM order_items AS t1
		JOIN products AS t2 ON t1.product_id = t2.product_id
		GROUP BY t1.product_id
		ORDER BY count(*) DESC
		LIMIT 1

	  product_details
	0       Americano
	ACTUAL OUTPUT ====

		
		SELECT product_details
		FROM
		  (SELECT product_id,
		          product_details,
		          product_id_other,
		          order_quantity,
		          product_id AS order_id
		   FROM
		     (SELECT LHS.product_id AS product_id,
		             LHS.product_details AS product_details,
		             RHS.product_id AS product_id_other,
		             RHS.order_quantity AS order_quantity
		      FROM products AS LHS
		      INNER JOIN order_items AS RHS ON (LHS.product_id = RHS.order_id)))
		ORDER BY product_details

	     product_details
	0          Americano
	1          Americano
	2          Americano
	3          Americano
	4          Americano
	..               ...
	100  wEBAmericano2Jc
	101  wEBAmericano2Jc
	102  wEBAmericano2Jc
	103  wEBAmericano2Jc
	104  wEBAmericano2Jc
	
	[105 rows x 1 columns]
Wrong output for base solution in instance spider/customers_and_addresses/0003 (3009)
	EXPECTED OUTPUT ====

	   avg_order_quantity_
	0             6.333333
	ACTUAL OUTPUT ====

		SELECT avg(order_quantity)
		FROM order_items

	   avg(order_quantity)
	0             6.333333
Wrong output for ground truth in instance spider/customers_and_addresses/0003 (3009)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_31425.sqlite3'
Error while executing solution for instance spider/customers_and_addresses/0030 (3012)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `product_id`) OVER () AS `count_distinct_t3_product_id_`
FROM
  (SELECT `LHS`.`order_id` AS `order_id`,
          `LHS`.`customer_id` AS `customer_id`,
          `LHS`.`order_status` AS `order_status`,
          `LHS`.`order_date` AS `order_date`,
          `LHS`.`order_details` AS `order_details`,
          `LHS`.`product_id` AS `product_id`,
          `LHS`.`order_quantity` AS `order_quantity`,
          `RHS`.`payment_method` AS `payment_method`,
          `RHS`.`customer_name` AS `customer_name`,
          `RHS`.`date_became_customer` AS `date_became_customer`,
          `RHS`.`other_customer_details` AS `other_customer_details`
   FROM
     (SELECT `LHS`.`order_id` AS `order_id`,
             `LHS`.`customer_id` AS `customer_id`,
             `LHS`.`order_status` AS `order_status`,
             `LHS`.`order_date` AS `order_date`,
             `LHS`.`order_details` AS `order_details`,
             `RHS`.`product_id` AS `product_id`,
             `RHS`.`order_quantity` AS `order_quantity`
      FROM `customer_orders` AS `LHS`
      INNER JOIN `order_items` AS `RHS` ON (`LHS`.`order_id` = `RHS`.`order_id`)) AS `LHS`
   INNER JOIN
     (SELECT *
      FROM `customers`
      WHERE (`customer_name` = 'Rodrick Heaney')) AS RHS ON (LHS.customer_id = RHS.customer_id))
ORDER BY count_distinct_t3_product_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0013 (3013)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM customers AS t1
		JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id
		JOIN addresses AS t3 ON t2.address_id = t3.address_id
		WHERE t3.city = "Lake Geovannyton"

	   count(*)
	0        22
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `address_content`,
		          `address_id`,
		          COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`address_id` AS `address_id`,
		                `LHS`.`address_content` AS `address_content`,
		                `LHS`.`city` AS `city`,
		                `LHS`.`zip_postcode` AS `zip_postcode`,
		                `LHS`.`state_province_county` AS `state_province_county`,
		                `LHS`.`country` AS `country`,
		                `LHS`.`other_address_details` AS `other_address_details`,
		                `LHS`.`customer_id` AS `customer_id`,
		                `LHS`.`payment_method` AS `payment_method`,
		                `LHS`.`customer_name` AS `customer_name`,
		                `LHS`.`date_became_customer` AS `date_became_customer`,
		                `LHS`.`other_customer_details` AS `other_customer_details`,
		                `RHS`.`date_address_from` AS `date_address_from`,
		                `RHS`.`address_type` AS `address_type`,
		                `RHS`.`date_address_to` AS `date_address_to`
		         FROM
		           (SELECT `LHS`.`address_id` AS `address_id`,
		                   `LHS`.`address_content` AS `address_content`,
		                   `LHS`.`city` AS `city`,
		                   `LHS`.`zip_postcode` AS `zip_postcode`,
		                   `LHS`.`state_province_county` AS `state_province_county`,
		                   `LHS`.`country` AS `country`,
		                   `LHS`.`other_address_details` AS `other_address_details`,
		                   `RHS`.`customer_id` AS `customer_id`,
		                   `RHS`.`payment_method` AS `payment_method`,
		                   `RHS`.`customer_name` AS `customer_name`,
		                   `RHS`.`date_became_customer` AS `date_became_customer`,
		                   `RHS`.`other_customer_details` AS `other_customer_details`
		            FROM `addresses` AS `LHS`
		            CROSS JOIN `customers` AS `RHS`) AS `LHS`
		         INNER JOIN `customer_addresses` AS `RHS` ON (`LHS`.`address_id` = `RHS`.`address_id`
		                                                         AND `LHS`.`customer_id` = `RHS`.`customer_id`))
		      WHERE (`city` = 'Lake Geovannyton'))
		   GROUP BY address_content,
		            address_id)
		ORDER BY count___

	   count___
	0        10
	1        12
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0006 (3014)
	EXPECTED OUTPUT ====

		SELECT payment_method
		FROM customers
		GROUP BY payment_method
		ORDER BY count(*) DESC
		LIMIT 1

	  payment_method
	0    Credit Card
	ACTUAL OUTPUT ====

		
		SELECT payment_method
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT customer_name,
		                payment_method,
		                COUNT() AS n
		         FROM customers
		         GROUP BY customer_name,
		                  payment_method)
		      ORDER BY n DESC)
		   LIMIT 1)

	     payment_method
	0  Credit CardhA1fg
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0004 (3015)
	EXPECTED OUTPUT ====

		SELECT customer_name
		FROM customers
		WHERE payment_method = "Cash"

	                customer_name
	0              Clifford Pagac
	1              Clifford Pagac
	2              Clifford Pagac
	3        Dr. Julia Wuckert MD
	4        Dr. Julia Wuckert MD
	5  ZZqDr. Julia Wuckert MDByc
	6                  evin Mills
	ACTUAL OUTPUT ====

		
		SELECT `customer_name`
		FROM
		  (SELECT `customer_name`
		   FROM `customers` INTERSECT SELECT `customer_name`
		   FROM `customers`
		   WHERE (`payment_method` = 'Cash'))
		ORDER BY customer_name

	                customer_name
	0              Clifford Pagac
	1        Dr. Julia Wuckert MD
	2  ZZqDr. Julia Wuckert MDByc
	3                  evin Mills
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0015 (3018)
	EXPECTED OUTPUT ====

		SELECT city
		FROM addresses
		WHERE city NOT IN
		    (SELECT DISTINCT t3.city
		     FROM customers AS t1
		     JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id
		     JOIN addresses AS t3 ON t2.address_id = t3.address_id)

	                     city
	0       4Y9ReingertownKz6
	1       5E2vXUwriQoDxNKbD
	2        East Julianaside
	3        East Julianaside
	4        East Julianaside
	5        East Julianaside
	6             East Pascal
	7            East Pascale
	8            East Pascale
	9            East Pascale
	10      East PascaleP8RpS
	11  NkB9NEast Julianaside
	12             Reingertow
	13       ReingertownWGf17
	14         Vc3QYztF9nrUen
	15   dSJLake Waltertonvhj
	16    f4zJ2Lake Walterton
	17       nI7 BReingertown
	18           s7dwyJjDo7RY
	19     t3XEast PascalebQP
	ACTUAL OUTPUT ====

		
		SELECT city
		FROM
		  (SELECT *
		   FROM addresses AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT LHS.customer_id AS customer_id,
		                  LHS.address_id AS address_id,
		                  LHS.date_address_from AS date_address_from,
		                  LHS.address_type AS address_type,
		                  LHS.date_address_to AS date_address_to,
		                  RHS.payment_method AS payment_method,
		                  RHS.customer_name AS customer_name,
		                  RHS.date_became_customer AS date_became_customer,
		                  RHS.other_customer_details AS other_customer_details
		           FROM customer_addresses AS LHS
		           LEFT JOIN customers AS RHS ON (LHS.customer_id = RHS.customer_id)) AS RHS
		        WHERE (LHS.address_id = RHS.address_id) ))
		ORDER BY city

	                     city
	0       4Y9ReingertownKz6
	1       5E2vXUwriQoDxNKbD
	2        East Julianaside
	3        East Julianaside
	4        East Julianaside
	5        East Julianaside
	6             East Pascal
	7            East Pascale
	8            East Pascale
	9            East Pascale
	10      East PascaleP8RpS
	11       Lake Geovannyton
	12         Lake Walterton
	13         Lake Walterton
	14  NkB9NEast Julianaside
	15             Reingertow
	16            Reingertown
	17       ReingertownWGf17
	18         Vc3QYztF9nrUen
	19        ake Geovannyton
	20            ast Pascale
	21   dSJLake Waltertonvhj
	22    f4zJ2Lake Walterton
	23       nI7 BReingertown
	24           s7dwyJjDo7RY
	25     t3XEast PascalebQP
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0005 (3019)
	EXPECTED OUTPUT ====

		SELECT date_became_customer
		FROM customers
		WHERE customer_id BETWEEN 10 AND 20

	  date_became_customer
	0  2018-02-24 10:53:02
	1  2018-02-24 10:53:02
	2  2018-02-25 10:27:16
	3  2018-02-27 12:25:00
	4  2018-02-27 20:06:58
	5  2018-03-04 13:41:41
	6  2018-03-07 12:42:01
	ACTUAL OUTPUT ====

		
		SELECT date_became_customer
		FROM
		  (SELECT date_became_customer
		   FROM customers
		   WHERE (customer_id >= 10
		          AND customer_id <= 20) INTERSECT
		     SELECT date_became_customer
		     FROM customers)
		ORDER BY date_became_customer

	  date_became_customer
	0  2018-02-24 10:53:02
	1  2018-02-25 10:27:16
	2  2018-02-27 12:25:00
	3  2018-02-27 20:06:58
	4  2018-03-04 13:41:41
	5  2018-03-07 12:42:01
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0016 (3020)
	EXPECTED OUTPUT ====

		SELECT t3.city
		FROM customers AS t1
		JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id
		JOIN addresses AS t3 ON t2.address_id = t3.address_id
		GROUP BY t3.city
		ORDER BY count(*) DESC
		LIMIT 1

	              city
	0  New Terrillport
	ACTUAL OUTPUT ====

		
		SELECT city
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.address_id AS address_id,
		                LHS.address_content AS address_content,
		                LHS.city AS city,
		                LHS.zip_postcode AS zip_postcode,
		                LHS.state_province_county AS state_province_county,
		                LHS.country AS country,
		                LHS.other_address_details AS other_address_details,
		                LHS.customer_id AS customer_id,
		                LHS.payment_method AS payment_method,
		                LHS.customer_name AS customer_name,
		                LHS.date_became_customer AS date_became_customer,
		                LHS.other_customer_details AS other_customer_details,
		                LHS.date_address_from AS date_address_from,
		                LHS.address_type AS address_type,
		                LHS.date_address_to AS date_address_to,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.address_id AS address_id,
		                   LHS.address_content AS address_content,
		                   LHS.city AS city,
		                   LHS.zip_postcode AS zip_postcode,
		                   LHS.state_province_county AS state_province_county,
		                   LHS.country AS country,
		                   LHS.other_address_details AS other_address_details,
		                   LHS.customer_id AS customer_id,
		                   LHS.payment_method AS payment_method,
		                   LHS.customer_name AS customer_name,
		                   LHS.date_became_customer AS date_became_customer,
		                   LHS.other_customer_details AS other_customer_details,
		                   RHS.date_address_from AS date_address_from,
		                   RHS.address_type AS address_type,
		                   RHS.date_address_to AS date_address_to
		            FROM
		              (SELECT LHS.address_id AS address_id,
		                      LHS.address_content AS address_content,
		                      LHS.city AS city,
		                      LHS.zip_postcode AS zip_postcode,
		                      LHS.state_province_county AS state_province_county,
		                      LHS.country AS country,
		                      LHS.other_address_details AS other_address_details,
		                      RHS.customer_id AS customer_id,
		                      RHS.payment_method AS payment_method,
		                      RHS.customer_name AS customer_name,
		                      RHS.date_became_customer AS date_became_customer,
		                      RHS.other_customer_details AS other_customer_details
		               FROM addresses AS LHS
		               CROSS JOIN customers AS RHS) AS LHS
		            INNER JOIN customer_addresses AS RHS ON (LHS.address_id = RHS.address_id
		                                                        AND LHS.customer_id = RHS.customer_id)) AS LHS
		         INNER JOIN
		           (SELECT customer_id,
		                   date_address_from,
		                   COUNT() AS n
		            FROM customer_addresses
		            GROUP BY customer_id,
		                     date_address_from) AS RHS ON (LHS.customer_id = RHS.customer_id
		                                                   AND LHS.date_address_from = RHS.date_address_from))
		      ORDER BY customer_name DESC)
		   LIMIT 1)

	               city
	0  Lake Geovannyton
Error while executing solution for instance spider/customers_and_addresses/0032 (3021)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `customer_id`) OVER () AS `count_distinct_customer_id_`
FROM `customer_orders`
WHERE (`order_status` = 'Cancelled')
ORDER BY count_distinct_customer_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0041 (3023)
	EXPECTED OUTPUT ====

		SELECT customer_name
		FROM customers
		WHERE payment_method != 'Cash'

	                   customer_name
	0      AD3fhQuAcG 0Z0Av(wlzC)u7D
	1                 Clifford Pagac
	2            Clifford Pagac6sOuY
	3            Dr. Julia Wuckert M
	4           Dr. Julia Wuckert MD
	5      Dr. Julia Wuckert MDaF9OO
	6    H)yyEQWBkKpBnHVqIlzOcSfc4NE
	7              Kitty Padberg III
	8              Kitty Padberg III
	9              Kitty Padberg III
	10          Msgtb uElzI5q7w1VMcW
	11        Prof. Alexzander Hamil
	12       Prof. Alexzander Hamill
	13  Prof. Alexzander HamillQ6yj6
	14             PvrHcZIwTnGfw1dic
	15            UswhbVkhpstcGCyjS 
	16     YcY(2Dr. Julia Wuckert MD
	17         fVoLrQVFvolRzktUvoE75
	18              itty Padberg III
	19                 lifford Pagac
	20              mB4ZXDevin Mills
	21         oi7nT00PSeUQ4euurnuMS
	22          qTJClifford PagacUpf
	23         swaz)hI7mHQMJUDy5iIWr
	24         vGZhCMRRfa KamrKg8(gA
	ACTUAL OUTPUT ====

		
		SELECT `customer_name`
		FROM
		  (SELECT `customer_name`
		   FROM `customers` INTERSECT SELECT `customer_name`
		   FROM `customers`
		   WHERE (`payment_method` != 'Cash'))
		ORDER BY customer_name

	                   customer_name
	0      AD3fhQuAcG 0Z0Av(wlzC)u7D
	1                 Clifford Pagac
	2            Clifford Pagac6sOuY
	3            Dr. Julia Wuckert M
	4           Dr. Julia Wuckert MD
	5      Dr. Julia Wuckert MDaF9OO
	6    H)yyEQWBkKpBnHVqIlzOcSfc4NE
	7              Kitty Padberg III
	8           Msgtb uElzI5q7w1VMcW
	9         Prof. Alexzander Hamil
	10       Prof. Alexzander Hamill
	11  Prof. Alexzander HamillQ6yj6
	12             PvrHcZIwTnGfw1dic
	13            UswhbVkhpstcGCyjS 
	14     YcY(2Dr. Julia Wuckert MD
	15         fVoLrQVFvolRzktUvoE75
	16              itty Padberg III
	17                 lifford Pagac
	18              mB4ZXDevin Mills
	19         oi7nT00PSeUQ4euurnuMS
	20          qTJClifford PagacUpf
	21         swaz)hI7mHQMJUDy5iIWr
	22         vGZhCMRRfa KamrKg8(gA
Wrong output for base solution in instance spider/customers_and_addresses/0035 (3024)
	EXPECTED OUTPUT ====

	  sum_t2_order_quantity_
	0                     77
	ACTUAL OUTPUT ====

		SELECT sum(t2.order_quantity)
		FROM customer_orders AS t1
		JOIN order_items AS t2 ON t1.order_id = t2.order_id
		WHERE t1.order_status = "Cancelled"

	   sum(t2.order_quantity)
	0                      77
Wrong output for ground truth in instance spider/customers_and_addresses/0035 (3024)
Error while executing solution for instance spider/customers_and_addresses/0020 (3025)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT country
FROM
  (SELECT address_id,
          address_content,
          city,
          zip_postcode,
          state_province_county,
          country,
          other_address_details,
          COUNT(DISTINCT address_id) OVER () AS n_distinct
   FROM addresses)
WHERE (address_id <= 4
       OR n_distinct < address_id)
ORDER BY country]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/customers_and_addresses/0019 (3026)
No solution for instance spider/customers_and_addresses/0007 (3027)
No solution for instance spider/customers_and_addresses/0024 (3029)
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0021 (3030)
	EXPECTED OUTPUT ====

		SELECT channel_code
		FROM customer_contact_channels
		GROUP BY channel_code
		HAVING count(customer_id) < 5

	      channel_code
	0    6Q3c9Handheld
	1        9nwFax)Nm
	2         D8u1YFax
	3        F68Faxkua
	4               Fa
	5         Fax)qwda
	6         FaxFKMDd
	7         FaxLBhj1
	8        GfrFax)NV
	9          Handhel
	10   Handheld7Efeb
	11   HandhelddWLsK
	12   HandheldoAwYZ
	13   HandheldqrEOA
	14  JONHandheldReM
	15   KWyZdHandheld
	16  M 6HandheldGSQ
	17        Nx5dwFax
	18  RKiHandheldCvs
	19       TNxFaxf86
	20        U2yuaFax
	21        VGFiHFax
	22        Y(ZVgFax
	23  aUVHandheldUkX
	24         andheld
	25              ax
	26        c89hFFax
	27       cJTFax4kS
	28       w()Fax0gt
	ACTUAL OUTPUT ====

		
		SELECT channel_code
		FROM
		  (SELECT channel_code,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM customer_contact_channels
		      WHERE (customer_id > 5))
		   GROUP BY channel_code)
		WHERE (n != 5)
		ORDER BY channel_code

	     channel_code
	0   6Q3c9Handheld
	1        D8u1YFax
	2       F68Faxkua
	3             Fax
	4        FaxFKMDd
	5        FaxLBhj1
	6         Handhel
	7        Handheld
	8   HandheldoAwYZ
	9   HandheldqrEOA
	10       Nx5dwFax
	11      TNxFaxf86
	12       VGFiHFax
	13       Y(ZVgFax
	14        andheld
	15             ax
	16      cJTFax4kS
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0023 (3031)
	EXPECTED OUTPUT ====

		SELECT max(t2.active_to_date)
		FROM customers AS t1
		JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id
		WHERE t1.customer_name = "Tillman Ernser"

	  max(t2.active_to_date)
	0                   None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT MAX(`active_to_date`) OVER () AS `max_t2_active_to_date_`
		FROM
		  (SELECT *
		   FROM `customer_contact_channels` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `customers`
		           WHERE (`customer_name` != 'Tillman Ernser')) AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY max_t2_active_to_date_

	Empty DataFrame
	Columns: [max_t2_active_to_date_]
	Index: []
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0001 (3032)
	EXPECTED OUTPUT ====

		SELECT customer_name
		FROM customers

	           customer_name
	0  0J2Alexane KilbackQ9B
	1   Alexane KilbackW9jZ1
	2   Dr. Julia Wuckert MD
	3            Eunice Mora
	4           Eunice Morar
	5           Eunice Morar
	6    Prof. Reyes Berge I
	7   Prof. Reyes Berge II
	8     V8REunice MorarX5o
	9            unice Morar
	ACTUAL OUTPUT ====

		
		SELECT customer_name
		FROM
		  (SELECT customer_name
		   FROM customers INTERSECT SELECT customer_name
		   FROM customers)
		ORDER BY customer_name

	           customer_name
	0  0J2Alexane KilbackQ9B
	1   Alexane KilbackW9jZ1
	2   Dr. Julia Wuckert MD
	3            Eunice Mora
	4           Eunice Morar
	5    Prof. Reyes Berge I
	6   Prof. Reyes Berge II
	7     V8REunice MorarX5o
	8            unice Morar
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0043 (3033)
	EXPECTED OUTPUT ====

		SELECT customer_name
		FROM customers
		EXCEPT
		SELECT t1.customer_name
		FROM customers AS t1
		JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id

	                 customer_name
	0         Prof. Reyes Berge II
	1    Prof. Reyes Berge IIzvU C
	2          Tillman Ernser87YZw
	3  angWxZYW)6tBHPIgOZh(nEAsdxa
	4       rof. Ibrahim Bashirian
	ACTUAL OUTPUT ====

		
		SELECT customer_name
		FROM
		  (SELECT *
		   FROM customers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM customer_orders AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id) ))
		ORDER BY customer_name

	                 customer_name
	0         Prof. Reyes Berge II
	1         Prof. Reyes Berge II
	2         Prof. Reyes Berge II
	3    Prof. Reyes Berge IIzvU C
	4               Tillman Ernser
	5          Tillman Ernser87YZw
	6  angWxZYW)6tBHPIgOZh(nEAsdxa
	7       rof. Ibrahim Bashirian
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0009 (3035)
	EXPECTED OUTPUT ====

		SELECT DISTINCT product_details
		FROM products

	   product_details
	0        Americano
	1   AmericanoViU)d
	2   tW3ZpAmericano
	3  wEBAmericano2Jc
	ACTUAL OUTPUT ====

		
		SELECT product_details
		FROM products
		ORDER BY product_details

	   product_details
	0        Americano
	1        Americano
	2   AmericanoViU)d
	3   tW3ZpAmericano
	4  wEBAmericano2Jc
No solution for instance spider/customers_and_addresses/0025 (3036)
No solution for instance spider/customers_and_addresses/0011 (3037)
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0029 (3038)
	EXPECTED OUTPUT ====

		SELECT t1.payment_method
		FROM customers AS t1
		JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id
		JOIN order_items AS t3 ON t2.order_id = t3.order_id
		GROUP BY t1.customer_name
		ORDER BY sum(t3.order_quantity)
		LIMIT 1

	      payment_method
	0  lGPCredit CardkMe
	ACTUAL OUTPUT ====

		
		SELECT payment_method
		FROM
		  (SELECT *
		   FROM
		     (SELECT LHS.customer_id AS customer_id,
		             LHS.payment_method AS payment_method,
		             LHS.customer_name AS customer_name,
		             LHS.date_became_customer AS date_became_customer,
		             LHS.other_customer_details AS other_customer_details,
		             LHS.order_id AS order_id,
		             LHS.order_status AS order_status,
		             LHS.order_date AS order_date,
		             LHS.order_details AS order_details,
		             RHS.product_id AS product_id,
		             RHS.order_quantity AS order_quantity
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.payment_method AS payment_method,
		                LHS.customer_name AS customer_name,
		                LHS.date_became_customer AS date_became_customer,
		                LHS.other_customer_details AS other_customer_details,
		                RHS.order_id AS order_id,
		                RHS.order_status AS order_status,
		                RHS.order_date AS order_date,
		                RHS.order_details AS order_details
		         FROM customers AS LHS
		         INNER JOIN customer_orders AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS
		      INNER JOIN order_items AS RHS ON (LHS.order_id = RHS.order_id)) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM customers AS RHS
		        WHERE (LHS.customer_id = RHS.customer_id
		               AND LHS.payment_method = RHS.payment_method
		               AND LHS.customer_name = RHS.customer_name
		               AND LHS.date_became_customer = RHS.date_became_customer
		               AND LHS.other_customer_details = RHS.other_customer_details) ))
		ORDER BY payment_method

	    payment_method
	0             Cash
	1             Cash
	2             Cash
	3             Cash
	4             Cash
	..             ...
	319     wS1CashhT 
	320     wS1CashhT 
	321     wS1CashhT 
	322     wS1CashhT 
	323     wS1CashhT 
	
	[324 rows x 1 columns]
No solution for instance spider/customers_and_addresses/0010 (3039)
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0044 (3040)
	EXPECTED OUTPUT ====

		SELECT t1.customer_name
		FROM customers AS t1
		JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id
		JOIN order_items AS t3 ON t2.order_id = t3.order_id
		JOIN products AS t4 ON t3.product_id = t4.product_id
		WHERE t4.product_details = 'Latte' INTERSECT
		  SELECT t1.customer_name
		  FROM customers AS t1
		  JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id
		  JOIN order_items AS t3 ON t2.order_id = t3.order_id
		  JOIN products AS t4 ON t3.product_id = t4.product_id WHERE t4.product_details = 'Americano'

	                  customer_name
	0                Alexane Kilbac
	1           Dr. Julia Wuckert M
	2          Dr. Julia Wuckert MD
	3  Prof. Alexzander HamillW9jZ1
	4     Prof. Reyes Berge IItDdnG
	5         V8RAlexane KilbackX5o
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `customer_name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`product_id` AS `product_id`,
		                `LHS`.`product_details` AS `product_details`,
		                `LHS`.`customer_id` AS `customer_id`,
		                `LHS`.`payment_method` AS `payment_method`,
		                `LHS`.`customer_name` AS `customer_name`,
		                `LHS`.`date_became_customer` AS `date_became_customer`,
		                `LHS`.`other_customer_details` AS `other_customer_details`,
		                `LHS`.`order_id` AS `order_id`,
		                `LHS`.`order_status` AS `order_status`,
		                `LHS`.`order_date` AS `order_date`,
		                `LHS`.`order_details` AS `order_details`,
		                `RHS`.`order_quantity` AS `order_quantity`
		         FROM
		           (SELECT `LHS`.`product_id` AS `product_id`,
		                   `LHS`.`product_details` AS `product_details`,
		                   `LHS`.`customer_id` AS `customer_id`,
		                   `LHS`.`payment_method` AS `payment_method`,
		                   `LHS`.`customer_name` AS `customer_name`,
		                   `LHS`.`date_became_customer` AS `date_became_customer`,
		                   `LHS`.`other_customer_details` AS `other_customer_details`,
		                   `RHS`.`order_id` AS `order_id`,
		                   `RHS`.`order_status` AS `order_status`,
		                   `RHS`.`order_date` AS `order_date`,
		                   `RHS`.`order_details` AS `order_details`
		            FROM
		              (SELECT `LHS`.`product_id` AS `product_id`,
		                      `LHS`.`product_details` AS `product_details`,
		                      `RHS`.`customer_id` AS `customer_id`,
		                      `RHS`.`payment_method` AS `payment_method`,
		                      `RHS`.`customer_name` AS `customer_name`,
		                      `RHS`.`date_became_customer` AS `date_became_customer`,
		                      `RHS`.`other_customer_details` AS `other_customer_details`
		               FROM `products` AS `LHS`
		               CROSS JOIN `customers` AS `RHS`) AS `LHS`
		            INNER JOIN `customer_orders` AS `RHS` ON (`LHS`.`customer_id` = `RHS`.`customer_id`)) AS `LHS`
		         INNER JOIN `order_items` AS `RHS` ON (`LHS`.`product_id` = `RHS`.`product_id`
		                                                  AND `LHS`.`order_id` = `RHS`.`order_id`))
		      WHERE (`product_details` = 'Latte'
		             AND `product_details` != 'Americano')) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM customer_orders AS RHS
		        WHERE (LHS.order_date = RHS.order_date
		               AND LHS.order_details = RHS.order_details) ))
		ORDER BY customer_name

	Empty DataFrame
	Columns: [customer_name]
	Index: []
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0040 (3041)
	EXPECTED OUTPUT ====

		SELECT address_content
		FROM addresses
		WHERE city = "East Julianaside"
		  AND state_province_county = "Texas"
		UNION
		SELECT address_content
		FROM addresses
		WHERE city = "Gleasonmouth"
		  AND state_province_county = "Arizona"

	Empty DataFrame
	Columns: [address_content]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `address_content`
		FROM
		  (SELECT *
		   FROM `addresses` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `addresses`
		           WHERE (`state_province_county` = 'Texas'
		                  AND `state_province_county` = 'Arizona')) AS `RHS`
		        WHERE (`LHS`.`state_province_county` = `RHS`.`state_province_county`
		               AND `LHS`.`zip_postcode` = `RHS`.`zip_postcode`) ))
		WHERE (`city` = 'East Julianaside'
		       OR `city` = 'Gleasonmouth')
		ORDER BY address_content

	                      address_content
	0           08996 Brisa Lane Apt. 583
	1         618 Odie Villages Suite 133
	2                       9168 King Res
	3  92865 Margaretta Streets Suite 467
	4      QVFvo08996 Brisa Lane Apt. 583
Wrong output for fuzzied solution in instance spider/customers_and_addresses/0028 (3042)
	EXPECTED OUTPUT ====

		SELECT t1.customer_name
		FROM customers AS t1
		JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id
		JOIN order_items AS t3 ON t2.order_id = t3.order_id
		GROUP BY t1.customer_name
		ORDER BY sum(t3.order_quantity) DESC
		LIMIT 1

	          customer_name
	0  Prof. Reyes Berge II
	ACTUAL OUTPUT ====

		
		SELECT customer_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.payment_method AS payment_method,
		                LHS.customer_name AS customer_name,
		                LHS.date_became_customer AS date_became_customer,
		                LHS.other_customer_details AS other_customer_details,
		                LHS.order_id AS order_id,
		                LHS.order_status AS order_status,
		                LHS.order_date AS order_date,
		                LHS.order_details AS order_details,
		                RHS.product_id AS product_id,
		                RHS.order_quantity AS order_quantity
		         FROM
		           (SELECT LHS.customer_id AS customer_id,
		                   LHS.payment_method AS payment_method,
		                   LHS.customer_name AS customer_name,
		                   LHS.date_became_customer AS date_became_customer,
		                   LHS.other_customer_details AS other_customer_details,
		                   RHS.order_id AS order_id,
		                   RHS.order_status AS order_status,
		                   RHS.order_date AS order_date,
		                   RHS.order_details AS order_details
		            FROM customers AS LHS
		            INNER JOIN customer_orders AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS
		         INNER JOIN order_items AS RHS ON (LHS.order_id = RHS.order_id))
		      ORDER BY customer_name)
		   LIMIT 1)

	           customer_name
	0  0J2Alexane KilbackQ9B
Wrong output for base solution in instance spider/customers_and_addresses/0031 (3043)
	EXPECTED OUTPUT ====

	  sum_t3_order_quantity_
	0                     21
	ACTUAL OUTPUT ====

		SELECT sum(t3.order_quantity)
		FROM customers AS t1
		JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id
		JOIN order_items AS t3 ON t2.order_id = t3.order_id
		WHERE t1.customer_name = "Rodrick Heaney"

	   sum(t3.order_quantity)
	0                      21
Wrong output for ground truth in instance spider/customers_and_addresses/0031 (3043)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_31425.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_31895.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_32049.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_32253.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_32456.sqlite3'
Memout while getting results...


Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_32670.sqlite3'
Memout while getting results...


Error while executing solution for instance spider/musical/0009 (3061)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/musical/0009 (3061)
Error while getting results...

Abnormal termination
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Memout while getting results...


Wrong output for fuzzied solution in instance spider/college_2/0042 (3065)
	EXPECTED OUTPUT ====

		SELECT YEAR
		FROM SECTION
		GROUP BY YEAR
		ORDER BY count(*) DESC
		LIMIT 1

	   year
	0  2006
	ACTUAL OUTPUT ====

		
		SELECT YEAR
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.course_id AS course_id,
		                LHS.sec_id AS sec_id,
		                LHS.semester AS semester,
		                LHS.year AS YEAR,
		                LHS.building AS building,
		                LHS.room_number AS room_number,
		                LHS.time_slot_id AS time_slot_id,
		                RHS.n AS n
		         FROM section AS LHS
		         INNER JOIN
		           (SELECT building,
		                   room_number,
		                   COUNT() AS n
		            FROM section
		            GROUP BY building,
		                     room_number) AS RHS ON (LHS.building = RHS.building
		                                             AND LHS.room_number = RHS.room_number))
		      ORDER BY n DESC)
		   LIMIT 1)

	      year
	0  2002.98
Wrong output for fuzzied solution in instance spider/college_2/0033 (3066)
	EXPECTED OUTPUT ====

		SELECT T1.title,
		       T3.name
		FROM course AS T1
		JOIN teaches AS T2 ON T1.course_id = T2.course_id
		JOIN instructor AS T3 ON T2.id = T3.id
		WHERE YEAR = 2008
		ORDER BY T1.title

	                  title       name
	0  ai9nXThermal Physics  Bertolino
	1  TuEb4Thermal Physics  XcgrsLent
	ACTUAL OUTPUT ====

		
		SELECT title,
		       name
		FROM
		  (SELECT LHS.course_id AS course_id,
		          LHS.title AS title,
		          LHS.dept_name AS dept_name,
		          LHS.credits AS credits,
		          LHS.id AS id,
		          LHS.name AS name,
		          LHS.salary AS salary,
		          LHS.sec_id AS sec_id,
		          LHS.semester AS semester,
		          LHS.year AS YEAR
		   FROM
		     (SELECT LHS.course_id AS course_id,
		             LHS.title AS title,
		             LHS.dept_name AS dept_name,
		             LHS.credits AS credits,
		             LHS.id AS id,
		             LHS.name AS name,
		             LHS.salary AS salary,
		             RHS.sec_id AS sec_id,
		             RHS.semester AS semester,
		             RHS.year AS YEAR
		      FROM
		        (SELECT LHS.course_id AS course_id,
		                LHS.title AS title,
		                LHS.dept_name AS dept_name,
		                LHS.credits AS credits,
		                RHS.id AS id,
		                RHS.name AS name,
		                RHS.salary AS salary
		         FROM course AS LHS
		         INNER JOIN instructor AS RHS ON (LHS.dept_name = RHS.dept_name)) AS LHS
		      INNER JOIN teaches AS RHS ON (LHS.course_id = RHS.course_id
		                                       AND LHS.id = RHS.id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM teaches
		      WHERE (YEAR = 2008.0)) AS RHS ON (LHS.course_id = RHS.course_id
		                                        AND LHS.id = RHS.id
		                                        AND LHS.sec_id = RHS.sec_id
		                                        AND LHS.semester = RHS.semester
		                                        AND LHS.year = RHS.year))
		ORDER BY title

	Empty DataFrame
	Columns: [title, name]
	Index: []
Wrong output for base solution in instance spider/college_2/0037 (3067)
	EXPECTED OUTPUT ====

	    max_capacity_  avg_capacity_   building
	0            10.0      10.000000  Lamberton
	1            11.0      10.500000   Chandler
	2            12.0      11.000000      Power
	3            12.0      12.000000   Bronfman
	4            18.0      18.000000      Drown
	5            30.0      26.000000       Main
	6            27.0      27.000000  Fairchild
	7            28.0      28.000000      Polya
	8            34.0      34.000000      Grace
	9            47.0      36.500000     Alumni
	10           65.0      37.500000      Gates
	11          109.0      49.333333     Saucon
	12           51.0      51.000000    Lambeau
	13           59.0      59.000000   Garfield
	14           60.0      60.000000   Rathbone
	15          120.0      76.000000    Whitman
	16           92.0      92.000000     Nassau
	17          115.0      93.000000     Taylor
	18           97.0      97.000000    Painter
	19          113.0     113.000000    Stabler
	ACTUAL OUTPUT ====

		SELECT max(capacity),
		       avg(capacity),
		       building
		FROM classroom
		GROUP BY building

	    max(capacity)  avg(capacity)   building
	0              10      10.000000  Lamberton
	1              11      10.500000   Chandler
	2              12      11.000000      Power
	3              12      12.000000   Bronfman
	4              18      18.000000      Drown
	5              30      26.000000       Main
	6              27      27.000000  Fairchild
	7              28      28.000000      Polya
	8              34      34.000000      Grace
	9              47      36.500000     Alumni
	10             65      37.500000      Gates
	11            109      49.333333     Saucon
	12             51      51.000000    Lambeau
	13             59      59.000000   Garfield
	14             60      60.000000   Rathbone
	15            120      76.000000    Whitman
	16             92      92.000000     Nassau
	17            115      93.000000     Taylor
	18             97      97.000000    Painter
	19            113     113.000000    Stabler
Wrong output for ground truth in instance spider/college_2/0037 (3067)
Wrong output for fuzzied solution in instance spider/college_2/0036 (3069)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       building
		FROM classroom
		WHERE capacity > 50
		GROUP BY building

	    count(*)       building
	0          1      )1 QnMain
	1          1        )rPJ)2O
	2          1  5D4Whitman1C3
	3          1           5bCi
	4          1  5tgWhitmanHxN
	..       ...            ...
	57         1          rRz8l
	58         1        v6gUQx5
	59         1   vFYilWhitman
	60         1     yugMainSND
	61         1  zWd)zOQkQGBMy
	
	[62 rows x 2 columns]
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___,
		       building
		FROM
		  (SELECT building,
		          COUNT(DISTINCT capacity) AS n_distinct
		   FROM
		     (SELECT *
		      FROM classroom
		      WHERE (capacity > 50.0))
		   GROUP BY building)
		ORDER BY count___

	    count___       building
	0          1      )1 QnMain
	1          1        )rPJ)2O
	2          1  5D4Whitman1C3
	3          1           5bCi
	4          1  5tgWhitmanHxN
	..       ...            ...
	57         1          rRz8l
	58         1        v6gUQx5
	59         1   vFYilWhitman
	60         1     yugMainSND
	61         1  zWd)zOQkQGBMy
	
	[62 rows x 2 columns]
Wrong output for fuzzied solution in instance spider/college_2/0057 (3070)
	EXPECTED OUTPUT ====

		SELECT title
		FROM course
		WHERE course_id IN
		    (SELECT T1.prereq_id
		     FROM prereq AS T1
		     JOIN course AS T2 ON T1.course_id = T2.course_id
		     WHERE T2.title = 'Mobile Computing')

	                             title
	0            International Finance
	1            International Finance
	2            International Finance
	3            International Finance
	4   LBIoG97rQQNlz5iZm7i3tmf0DgK1N2
	5                  Mobile Computin
	6                 Mobile Computing
	7                 Music of the 50s
	8        Recursive Function Theory
	9        Recursive Function Theory
	10       Recursive Function Theory
	11  Recursive Function TheoryXh)o0
	12  YiQdRRecursive Function Theory
	13        ZYfZ2rQ0IZCQy81UgCCA0dU(
	14         kLCeSx 1F(5Rs4fSFcnQSLY
	15                 obile Computing
	16              pn iSz23G3g6Qf yS)
	17                 ractal Geometry
	18                 ractal Geometry
	19          rv)Mobile ComputingqFZ
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT `LHS`.`course_id` AS `course_id`,
		          `LHS`.`title` AS `title`,
		          `LHS`.`dept_name` AS `dept_name`,
		          `LHS`.`credits` AS `credits`,
		          `RHS`.`course_id` AS `course_id_other`
		   FROM `course` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `prereq` AS `LHS`
		      WHERE EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM `course`
		              WHERE (`title` = 'Mobile Computing')) AS RHS
		           WHERE (LHS.course_id = RHS.course_id) )) AS RHS ON (LHS.course_id = RHS.prereq_id))
		ORDER BY title

	                             title
	0            International Finance
	1            International Finance
	2            International Finance
	3            International Finance
	4   LBIoG97rQQNlz5iZm7i3tmf0DgK1N2
	5                  Mobile Computin
	6                 Mobile Computing
	7                 Music of the 50s
	8        Recursive Function Theory
	9        Recursive Function Theory
	10       Recursive Function Theory
	11       Recursive Function Theory
	12  Recursive Function TheoryXh)o0
	13  YiQdRRecursive Function Theory
	14        ZYfZ2rQ0IZCQy81UgCCA0dU(
	15         kLCeSx 1F(5Rs4fSFcnQSLY
	16                 obile Computing
	17              pn iSz23G3g6Qf yS)
	18              pn iSz23G3g6Qf yS)
	19                 ractal Geometry
	20                 ractal Geometry
	21          rv)Mobile ComputingqFZ
No solution for instance spider/college_2/0017 (3071)
Error while executing solution for instance spider/college_2/0008 (3073)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT s_id) OVER () AS count_distinct_s_id_
FROM advisor
ORDER BY count_distinct_s_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/college_2/0076 (3076)
	EXPECTED OUTPUT ====

		SELECT DISTINCT name
		FROM instructor
		ORDER BY name

	           name
	0     7wsHauawN
	1     A6WHaukdj
	2         Bondi
	3            Ha
	4           Hau
	5      HauONeN4
	6   M0hBonditmv
	7   S2UBondiBIA
	8           Tun
	9          Tung
	10           au
	11    hwX1VTung
	12         ondi
	13     rmG THau
	14          ung
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM instructor
		ORDER BY name

	           name
	0     7wsHauawN
	1     A6WHaukdj
	2         Bondi
	3         Bondi
	4         Bondi
	5         Bondi
	6         Bondi
	7         Bondi
	8         Bondi
	9         Bondi
	10           Ha
	11           Ha
	12           Ha
	13          Hau
	14          Hau
	15          Hau
	16          Hau
	17          Hau
	18          Hau
	19          Hau
	20          Hau
	21          Hau
	22     HauONeN4
	23  M0hBonditmv
	24  S2UBondiBIA
	25          Tun
	26         Tung
	27         Tung
	28         Tung
	29         Tung
	30         Tung
	31         Tung
	32         Tung
	33         Tung
	34         Tung
	35         Tung
	36         Tung
	37           au
	38    hwX1VTung
	39         ondi
	40         ondi
	41     rmG THau
	42          ung
	43          ung
	44          ung
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
No solution for instance spider/college_2/0048 (3079)
Wrong output for fuzzied solution in instance spider/college_2/0072 (3082)
	EXPECTED OUTPUT ====

		SELECT name
		FROM instructor
		WHERE dept_name = 'Comp. Sci.'
		  AND salary > 80000

	         name
	0        Mird
	1  pqvZqLembr
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `instructor`
		      WHERE (`dept_name` = 'Comp. Sci.'
		             AND salary != 80000.0)) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM instructor AS RHS
		        WHERE (LHS.id = RHS.id
		               AND LHS.name = RHS.name
		               AND LHS.dept_name = RHS.dept_name
		               AND LHS.salary = RHS.salary) ))
		ORDER BY name

	         name
	0        Mird
	1        Mird
	2  pqvZqLembr
Wrong output for fuzzied solution in instance spider/college_2/0013 (3084)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM course
		WHERE course_id NOT IN
		    (SELECT course_id
		     FROM prereq)

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT *
		   FROM course AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM prereq AS RHS
		        WHERE (LHS.course_id = RHS.course_id) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Wrong output for fuzzied solution in instance spider/college_2/0026 (3090)
	EXPECTED OUTPUT ====

		SELECT dept_name
		FROM course
		GROUP BY dept_name
		ORDER BY sum(credits) DESC
		LIMIT 1

	  dept_name
	0  Marketin
	ACTUAL OUTPUT ====

		
		SELECT dept_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT credits,
		                dept_name,
		                SUM(credits) AS sumcredits
		         FROM course
		         GROUP BY credits,
		                  dept_name)
		      ORDER BY sumcredits DESC)
		   LIMIT 1)

	   dept_name
	0  ivil Eng.
Error while executing solution for instance spider/college_2/0015 (3092)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT id) OVER () AS count__distinct_id_
FROM teaches
ORDER BY count__distinct_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/college_2/0066 (3095)
Wrong output for fuzzied solution in instance spider/college_2/0062 (3096)
	EXPECTED OUTPUT ====

		SELECT dept_name
		FROM instructor
		GROUP BY dept_name
		ORDER BY avg(salary) DESC
		LIMIT 1

	          dept_name
	0  mR6QqUHuykQGFQOv
	ACTUAL OUTPUT ====

		
		SELECT dept_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT dept_name,
		                AVG(salary) AS meansalary
		         FROM instructor
		         GROUP BY dept_name)
		      ORDER BY meansalary DESC)
		   LIMIT 1)

	         dept_name
	0  Elec. Eng.w)thI
Wrong output for fuzzied solution in instance spider/college_2/0050 (3097)
	EXPECTED OUTPUT ====

		SELECT title
		FROM course
		WHERE course_id IN
		    (SELECT T1.prereq_id
		     FROM prereq AS T1
		     JOIN course AS T2 ON T1.course_id = T2.course_id
		     WHERE T2.title = 'International Finance')

	                             title
	0                  Fractal Geometr
	1                 Fractal Geometry
	2                    Greek Tragedy
	3                    Greek Tragedy
	4             International Financ
	5            International Finance
	6            International Finance
	7            International Finance
	8            International Finance
	9            International Finance
	10  LBIoG97rQQNlz5iZm7i3tmf0DgK1N2
	11                Music of the 50s
	12        Recursive Function Theor
	13       Recursive Function Theory
	14       Recursive Function Theory
	15       Recursive Function Theory
	16       Recursive Function Theory
	17  Recursive Function TheoryXh)o0
	18  YiQdRRecursive Function Theory
	19              Z2rQ0IZCQy81UgCCA0
	20        ZYfZ2rQ0IZCQy81UgCCA0dU(
	21         kLCeSx 1F(5Rs4fSFcnQSLY
	22            nternational Finance
	23            nternational Finance
	24            nternational Finance
	25          o3OMusic of the 50sxCA
	26              pn iSz23G3g6Qf yS)
	27                 ractal Geometry
	28                 ractal Geometry
	29                 ractal Geometry
	30     rv)International FinanceqFZ
	ACTUAL OUTPUT ====

		
		SELECT `title`
		FROM
		  (SELECT `LHS`.`course_id` AS `course_id`,
		          `LHS`.`title` AS `title`,
		          `LHS`.`dept_name` AS `dept_name`,
		          `LHS`.`credits` AS `credits`,
		          `RHS`.`course_id` AS `course_id_other`,
		          `RHS`.`title` AS `title_other`,
		          `RHS`.`dept_name` AS `dept_name_other`,
		          `RHS`.`credits` AS `credits_other`
		   FROM `course` AS `LHS`
		   INNER JOIN
		     (SELECT `LHS`.`course_id` AS `course_id`,
		             `LHS`.`title` AS `title`,
		             `LHS`.`dept_name` AS `dept_name`,
		             `LHS`.`credits` AS `credits`,
		             `RHS`.`prereq_id` AS `prereq_id`
		      FROM
		        (SELECT *
		         FROM `course`
		         WHERE (`title` = 'International Finance')) AS LHS
		      LEFT JOIN prereq AS RHS ON (LHS.course_id = RHS.course_id)) AS RHS ON (LHS.course_id = RHS.prereq_id))
		ORDER BY title

	                             title
	0                  Fractal Geometr
	1                  Fractal Geometr
	2                 Fractal Geometry
	3                    Greek Tragedy
	4                    Greek Tragedy
	5             International Financ
	6             International Financ
	7            International Finance
	8            International Finance
	9            International Finance
	10           International Finance
	11           International Finance
	12           International Finance
	13           International Finance
	14           International Finance
	15           International Finance
	16           International Finance
	17           International Finance
	18  LBIoG97rQQNlz5iZm7i3tmf0DgK1N2
	19                Music of the 50s
	20        Recursive Function Theor
	21       Recursive Function Theory
	22       Recursive Function Theory
	23       Recursive Function Theory
	24       Recursive Function Theory
	25       Recursive Function Theory
	26  Recursive Function TheoryXh)o0
	27  YiQdRRecursive Function Theory
	28  YiQdRRecursive Function Theory
	29              Z2rQ0IZCQy81UgCCA0
	30              Z2rQ0IZCQy81UgCCA0
	31        ZYfZ2rQ0IZCQy81UgCCA0dU(
	32         kLCeSx 1F(5Rs4fSFcnQSLY
	33            nternational Finance
	34            nternational Finance
	35            nternational Finance
	36            nternational Finance
	37          o3OMusic of the 50sxCA
	38              pn iSz23G3g6Qf yS)
	39              pn iSz23G3g6Qf yS)
	40                 ractal Geometry
	41                 ractal Geometry
	42                 ractal Geometry
	43                 ractal Geometry
	44     rv)International FinanceqFZ
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Error while executing solution for instance spider/college_2/0063 (3102)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT meansalary AS avg_t1_salary_,
                COUNT(DISTINCT salary) OVER () AS count___
FROM
  (SELECT dept_name,
          building,
          budget,
          id,
          name,
          salary,
          AVG(salary) OVER () AS meansalary
   FROM
     (SELECT LHS.dept_name AS dept_name,
             LHS.building AS building,
             LHS.budget AS budget,
             RHS.id AS id,
             RHS.name AS name,
             RHS.salary AS salary
      FROM department AS LHS
      INNER JOIN instructor AS RHS ON (LHS.dept_name = RHS.dept_name)))
ORDER BY avg_t1_salary_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/college_2/0018 (3103)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM classroom
		WHERE building = 'Lamberton'
		  AND capacity < 50

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `building`,
		          `capacity`,
		          COUNT() AS `n`
		   FROM `classroom`
		   GROUP BY `building`,
		            `capacity`)
		WHERE (`building` = 'Lamberton'
		       AND n <= 50)
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
	3         1
	4         1
	5         2
Wrong output for fuzzied solution in instance spider/college_2/0051 (3105)
	EXPECTED OUTPUT ====

		SELECT title
		FROM course
		WHERE course_id IN
		    (SELECT T1.course_id
		     FROM prereq AS T1
		     JOIN course AS T2 ON T1.prereq_id = T2.course_id
		     WHERE T2.title = 'Differential Geometry')

	                  title
	0          Biostatistic
	1               Geology
	2               Geology
	3                 Hebre
	4          bXmHebrewaaw
	5  ifferential Geometry
	6          u2FISGeology
	ACTUAL OUTPUT ====

		
		SELECT `title_other` AS `title`
		FROM
		  (SELECT `LHS`.`course_id` AS `course_id`,
		          `LHS`.`title` AS `title`,
		          `LHS`.`dept_name` AS `dept_name`,
		          `LHS`.`credits` AS `credits`,
		          `RHS`.`course_id` AS `course_id_other`,
		          `RHS`.`title` AS `title_other`,
		          `RHS`.`dept_name` AS `dept_name_other`,
		          `RHS`.`credits` AS `credits_other`
		   FROM
		     (SELECT *
		      FROM `course`
		      WHERE (`title` = 'Differential Geometry')) AS LHS
		   INNER JOIN
		     (SELECT LHS.course_id AS course_id,
		             LHS.title AS title,
		             LHS.dept_name AS dept_name,
		             LHS.credits AS credits,
		             RHS.prereq_id AS prereq_id
		      FROM course AS LHS
		      LEFT JOIN prereq AS RHS ON (LHS.course_id = RHS.course_id)) AS RHS ON (LHS.course_id = RHS.prereq_id))
		ORDER BY title

	                  title
	0          Biostatistic
	1               Geology
	2               Geology
	3               Geology
	4                 Hebre
	5          bXmHebrewaaw
	6  ifferential Geometry
	7  ifferential Geometry
	8          u2FISGeology
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Wrong output for fuzzied solution in instance spider/college_2/0007 (3108)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM classroom
		WHERE building = 'Lamberton'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `classroom`
		WHERE (`building` = 'Lamberton')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Wrong output for fuzzied solution in instance spider/college_2/0034 (3111)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM instructor AS T1
		JOIN advisor AS T2 ON T1.id = T2.i_id
		GROUP BY T2.i_id
		HAVING count(*) > 1

	           name
	0     7wsHauawN
	1     A6WHaukdj
	2         Bondi
	3         Bondi
	4         Bondi
	5           Hau
	6           Hau
	7   M0hBonditmv
	8          Tung
	9          Tung
	10         Tung
	11         Tung
	12         ondi
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT id,
		          name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.name AS name,
		             LHS.dept_name AS dept_name,
		             LHS.salary AS salary,
		             RHS.s_id AS s_id,
		             RHS.i_id AS i_id
		      FROM instructor AS LHS
		      CROSS JOIN advisor AS RHS)
		   GROUP BY id,
		            name)
		WHERE (n >= 1)
		ORDER BY name

	           name
	0     7wsHauawN
	1     A6WHaukdj
	2         Bondi
	3         Bondi
	4         Bondi
	5         Bondi
	6         Bondi
	7         Bondi
	8         Bondi
	9         Bondi
	10           Ha
	11           Ha
	12           Ha
	13          Hau
	14          Hau
	15          Hau
	16          Hau
	17          Hau
	18          Hau
	19          Hau
	20          Hau
	21          Hau
	22     HauONeN4
	23  M0hBonditmv
	24  S2UBondiBIA
	25          Tun
	26         Tung
	27         Tung
	28         Tung
	29         Tung
	30         Tung
	31         Tung
	32         Tung
	33         Tung
	34         Tung
	35         Tung
	36         Tung
	37           au
	38    hwX1VTung
	39         ondi
	40         ondi
	41     rmG THau
	42          ung
	43          ung
	44          ung
No solution for instance spider/college_2/0023 (3115)
Wrong output for fuzzied solution in instance spider/college_2/0001 (3116)
	EXPECTED OUTPUT ====

		SELECT DISTINCT building
		FROM classroom
		WHERE capacity > 50

	        building
	0        Garfiel
	1       Garfield
	2  zING4Garfield
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT building
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM classroom
		      WHERE (capacity >= 50.0)) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM classroom AS RHS
		        WHERE (LHS.building = RHS.building
		               AND LHS.room_number = RHS.room_number
		               AND LHS.capacity = RHS.capacity) ))
		ORDER BY building

	        building
	0        Garfiel
	1       Garfield
	2         Saucon
	3  zING4Garfield
Wrong output for fuzzied solution in instance spider/college_2/0077 (3119)
	EXPECTED OUTPUT ====

		SELECT course_id
		FROM SECTION
		WHERE semester = 'Fall'
		  AND YEAR = 2009
		UNION
		SELECT course_id
		FROM SECTION
		WHERE semester = 'Spring'
		  AND YEAR = 2010

	   course_id
	0   235Okd3W
	1        3vO
	2  QdRM34PDS
	ACTUAL OUTPUT ====

		
		SELECT `course_id`
		FROM
		  (SELECT `LHS`.`course_id` AS `course_id`,
		          `LHS`.`sec_id` AS `sec_id`,
		          `LHS`.`semester` AS `semester`,
		          `LHS`.`year` AS `year`,
		          `LHS`.`building` AS `building`,
		          `LHS`.`room_number` AS `room_number`,
		          `LHS`.`time_slot_id` AS `time_slot_id`
		   FROM `section` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `section`
		      WHERE (`semester` = 'Spring'
		             OR `year` = 2009.0)) AS `RHS` ON (`LHS`.`course_id` = `RHS`.`course_id`
		                                               AND `LHS`.`sec_id` = `RHS`.`sec_id`
		                                               AND `LHS`.`semester` = `RHS`.`semester`
		                                               AND `LHS`.`year` = `RHS`.`year`
		                                               AND `LHS`.`building` = `RHS`.`building`
		                                               AND `LHS`.`room_number` = `RHS`.`room_number`
		                                               AND `LHS`.`time_slot_id` = `RHS`.`time_slot_id`))
		WHERE (`semester` = 'Fall'
		       OR YEAR >= 2010.0)
		ORDER BY course_id

	   course_id
	0   235Okd3W
	1        3vO
	2         50
	3  QdRM34PDS
Wrong output for base solution in instance spider/college_2/0082 (3120)
	EXPECTED OUTPUT ====

	      dept_name   avg__salary_
	0    Accounting   48716.592500
	1     Languages   57421.856667
	2    Psychology   61143.050000
	3       Biology   61287.250000
	4    Statistics   67795.441667
	5       English   72089.050000
	6    Elec. Eng.   74162.740000
	7     Athletics   77098.198000
	8     Astronomy   79070.080000
	9    Mech. Eng.   79813.020000
	10    Marketing   84097.437500
	11  Cybernetics   96346.567500
	12   Comp. Sci.   98133.470000
	13      Geology   99382.590000
	14    Pol. Sci.  100053.073333
	15      Finance  105311.380000
	16      Physics  114576.900000
	ACTUAL OUTPUT ====

		SELECT dept_name,
		       AVG (salary)
		FROM instructor
		GROUP BY dept_name
		HAVING AVG (salary) > 42000

	      dept_name   avg (salary)
	0    Accounting   48716.592500
	1     Languages   57421.856667
	2    Psychology   61143.050000
	3       Biology   61287.250000
	4    Statistics   67795.441667
	5       English   72089.050000
	6    Elec. Eng.   74162.740000
	7     Athletics   77098.198000
	8     Astronomy   79070.080000
	9    Mech. Eng.   79813.020000
	10    Marketing   84097.437500
	11  Cybernetics   96346.567500
	12   Comp. Sci.   98133.470000
	13      Geology   99382.590000
	14    Pol. Sci.  100053.073333
	15      Finance  105311.380000
	16      Physics  114576.900000
Wrong output for ground truth in instance spider/college_2/0082 (3120)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Error while executing solution for instance spider/college_2/0081 (3124)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `id`) OVER () AS `count__distinct_id_`
FROM `teaches`
WHERE (`semester` = 'Spring'
       AND YEAR >= 2010.0)
ORDER BY count__distinct_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/college_2/0025 (3127)
	EXPECTED OUTPUT ====

		SELECT dept_name
		FROM course
		GROUP BY dept_name
		ORDER BY count(*) DESC
		LIMIT 3

	          dept_name
	0    LXoziAthletics
	1    drSRHAthletics
	2  r97Civil Eng.7TE
	ACTUAL OUTPUT ====

		
		SELECT dept_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT dept_name,
		                COUNT() AS n
		         FROM course
		         GROUP BY dept_name)
		      ORDER BY n DESC)
		   LIMIT 3)

	         dept_name
	0  3r2Pol. Sci.mVL
	1   AkprDAthletics
	2       KGEDqUAa2R
Wrong output for fuzzied solution in instance spider/college_2/0079 (3130)
	EXPECTED OUTPUT ====

		SELECT course_id
		FROM SECTION
		WHERE semester = 'Fall'
		  AND YEAR = 2009
		EXCEPT
		SELECT course_id
		FROM SECTION
		WHERE semester = 'Spring'
		  AND YEAR = 2010

	   course_id
	0   235Okd3W
	1        3vO
	2  QdRM34PDS
	ACTUAL OUTPUT ====

		
		SELECT `course_id`
		FROM
		  (SELECT *
		   FROM `section`
		   WHERE (`semester` != 'Spring'
		          OR `year` > 2010.0))
		WHERE (`semester` != 'Fall'
		       OR YEAR = 2009.0)
		ORDER BY course_id

	   course_id
	0   235Okd3W
	1        3vO
	2         50
	3  QdRM34PDS
Wrong output for fuzzied solution in instance spider/college_2/0010 (3132)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT course_id)
		FROM course
		WHERE dept_name = 'Physics'

	   count(distinct course_id)
	0                          0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count_distinct_course_id_`
		FROM
		  (SELECT `dept_name`,
		          COUNT() AS `n`
		   FROM `course`
		   GROUP BY `dept_name`)
		WHERE (`dept_name` = 'Physics')
		ORDER BY count_distinct_course_id_

	Empty DataFrame
	Columns: [count_distinct_course_id_]
	Index: []
Wrong output for fuzzied solution in instance spider/college_2/0044 (3133)
	EXPECTED OUTPUT ====

		SELECT dept_name
		FROM student
		GROUP BY dept_name
		ORDER BY count(*) DESC
		LIMIT 1

	  dept_name
	0    nglish
	ACTUAL OUTPUT ====

		
		SELECT dept_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT dept_name,
		                tot_cred,
		                COUNT() AS n
		         FROM student
		         GROUP BY dept_name,
		                  tot_cred)
		      ORDER BY n DESC)
		   LIMIT 1)

	   dept_name
	0  )VK5(B3fF
No solution for instance spider/college_2/0040 (3135)
No solution for instance spider/college_2/0055 (3140)
No solution for instance spider/college_2/0058 (3141)
Wrong output for fuzzied solution in instance spider/document_management/0017 (3143)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM users
		WHERE user_login = 1

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT role_code,
		                COUNT() AS n
		         FROM users
		         GROUP BY role_code)
		      ORDER BY n)
		   LIMIT 1)

	   count___
	0         1
Wrong output for fuzzied solution in instance spider/document_management/0022 (3145)
	EXPECTED OUTPUT ====

		SELECT document_type_code
		FROM documents
		GROUP BY document_type_code
		HAVING count(*) > 2

	  document_type_code
	0      Advertisement
	1                 CV
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT document_type_code
		FROM
		  (SELECT document_code,
		          document_structure_code,
		          document_type_code,
		          access_count,
		          document_name,
		          COUNT(*) OVER () AS n
		   FROM documents)
		WHERE (n != 2)
		ORDER BY document_type_code

	    document_type_code
	0        Advertisement
	1   AdvertisementDPAeh
	2   Advertisementg2JVj
	3   Advertisementy0lWU
	4                   CV
	5              CVABdw 
	6              CVF1PV3
	7              FhNmNCV
	8                Paper
	9                    V
	10            w07CVyd)
Wrong output for base solution in instance spider/document_management/0013 (3146)
	EXPECTED OUTPUT ====

	   avg_t1_access_count_
	0           3671.833333
	ACTUAL OUTPUT ====

		SELECT avg(t1.access_count)
		FROM documents AS t1
		JOIN document_functional_areas AS t2 ON t1.document_code = t2.document_code
		JOIN functional_areas AS t3 ON t2.functional_area_code = t3.functional_area_code
		WHERE t3.functional_area_description = "Acknowledgement"

	   avg(t1.access_count)
	0           3671.833333
Wrong output for ground truth in instance spider/document_management/0013 (3146)
Wrong output for fuzzied solution in instance spider/document_management/0006 (3147)
	EXPECTED OUTPUT ====

		SELECT t2.document_structure_description
		FROM documents AS t1
		JOIN document_structures AS t2 ON t1.document_structure_code = t2.document_structure_code
		GROUP BY t1.document_structure_code
		ORDER BY count(*) DESC
		LIMIT 1

	  document_structure_description
	0                   Main section
	ACTUAL OUTPUT ====

		
		SELECT document_structure_description
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.document_structure_code AS document_structure_code,
		                LHS.parent_document_structure_code AS parent_document_structure_code,
		                LHS.document_structure_description AS document_structure_description,
		                LHS.document_code AS document_code,
		                LHS.document_type_code AS document_type_code,
		                LHS.access_count AS access_count,
		                LHS.document_name AS document_name,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.document_structure_code AS document_structure_code,
		                   LHS.parent_document_structure_code AS parent_document_structure_code,
		                   LHS.document_structure_description AS document_structure_description,
		                   RHS.document_code AS document_code,
		                   RHS.document_type_code AS document_type_code,
		                   RHS.access_count AS access_count,
		                   RHS.document_name AS document_name
		            FROM document_structures AS LHS
		            INNER JOIN documents AS RHS ON (LHS.document_structure_code = RHS.document_structure_code)) AS LHS
		         INNER JOIN
		           (SELECT document_structure_code,
		                   parent_document_structure_code,
		                   document_structure_description,
		                   COUNT(*) OVER () AS n
		            FROM document_structures) AS RHS ON (LHS.document_structure_code = RHS.document_structure_code
		                                                    AND LHS.parent_document_structure_code = RHS.parent_document_structure_code
		                                                    AND LHS.document_structure_description = RHS.document_structure_description))
		      ORDER BY parent_document_structure_code DESC)
		   LIMIT 1)

	  document_structure_description
	0            Author section3cv)u
Wrong output for fuzzied solution in instance spider/document_management/0004 (3148)
	EXPECTED OUTPUT ====

		SELECT sum(access_count)
		FROM documents
		GROUP BY document_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	   sum(access_count)
	0              22329
	ACTUAL OUTPUT ====

		
		SELECT sumaccess_count AS sum_access_count_
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT document_type_code,
		                SUM(access_count) AS sumaccess_count
		         FROM
		           (SELECT access_count,
		                   document_type_code,
		                   COUNT() AS n
		            FROM documents
		            GROUP BY access_count,
		                     document_type_code)
		         GROUP BY document_type_code)
		      ORDER BY sumaccess_count)
		   LIMIT 1)

	   sum_access_count_
	0               1217
Wrong output for fuzzied solution in instance spider/document_management/0012 (3149)
	EXPECTED OUTPUT ====

		SELECT user_name,
		       password
		FROM users
		GROUP BY role_code
		ORDER BY count(*) DESC
		LIMIT 1

	  user_name                                  password
	0    faye30  20241478f890508ac47870cfba472e1db04a71ca
	ACTUAL OUTPUT ====

		
		SELECT user_name,
		       password
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT user_id,
		                role_code,
		                user_name,
		                user_login,
		                password,
		                COUNT(*) OVER () AS n
		         FROM users)
		      ORDER BY role_code)
		   LIMIT 1)

	  user_name                                  password
	0   ycremin  11af7569a5c1e8b455add5755e18131be2ac8636
Wrong output for fuzzied solution in instance spider/document_management/0015 (3150)
	EXPECTED OUTPUT ====

		SELECT t1.document_name
		FROM documents AS t1
		JOIN document_sections AS t2 ON t1.document_code = t2.document_code
		GROUP BY t1.document_code
		ORDER BY count(*) DESC
		LIMIT 1

	                  document_name
	0  Life about Claude MonetS0(yN
	ACTUAL OUTPUT ====

		
		SELECT document_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT document_name,
		                document_structure_code,
		                COUNT() AS n
		         FROM
		           (SELECT LHS.document_code AS document_code,
		                   LHS.document_structure_code AS document_structure_code,
		                   LHS.document_type_code AS document_type_code,
		                   LHS.access_count AS access_count,
		                   LHS.document_name AS document_name,
		                   RHS.section_id AS section_id,
		                   RHS.section_sequence AS section_sequence,
		                   RHS.section_code AS section_code,
		                   RHS.section_title AS section_title
		            FROM documents AS LHS
		            INNER JOIN document_sections AS RHS ON (LHS.document_code = RHS.document_code))
		         GROUP BY document_name,
		                  document_structure_code)
		      ORDER BY n DESC)
		   LIMIT 1)

	                document_name
	0  Research about Art history
No solution for instance spider/document_management/0016 (3152)
Error while executing solution for instance spider/document_management/0018 (3153)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT role_description
FROM
  (SELECT LHS.role_code AS role_code,
          LHS.role_description AS role_description,
          LHS.n_distinct AS n_distinct,
          RHS.user_name AS user_name,
          RHS.user_login AS user_login,
          RHS.password AS password
   FROM
     (SELECT role_code,
             role_description,
             COUNT(DISTINCT role_code) OVER () AS n_distinct
      FROM roles) AS LHS
   INNER JOIN users AS RHS ON (LHS.n_distinct = RHS.user_id
                                  AND LHS.role_code = RHS.role_code))
ORDER BY role_description]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
No solution for instance spider/document_management/0020 (3154)
Wrong output for fuzzied solution in instance spider/document_management/0019 (3155)
	EXPECTED OUTPUT ====

		SELECT avg(access_count)
		FROM documents
		GROUP BY document_structure_code
		ORDER BY count(*) ASC
		LIMIT 1

	   avg(access_count)
	0             2047.0
	ACTUAL OUTPUT ====

		
		SELECT meanaccess_count AS avg_access_count_
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT document_structure_code,
		                AVG(access_count) AS meanaccess_count
		         FROM
		           (SELECT access_count,
		                   document_structure_code,
		                   COUNT() AS n
		            FROM documents
		            GROUP BY access_count,
		                     document_structure_code)
		         GROUP BY document_structure_code)
		      ORDER BY document_structure_code)
		   LIMIT 1)

	   avg_access_count_
	0             6119.5
Wrong output for fuzzied solution in instance spider/document_management/0014 (3159)
	EXPECTED OUTPUT ====

		SELECT document_name
		FROM documents
		EXCEPT
		SELECT t1.document_name
		FROM documents AS t1
		JOIN document_sections AS t2 ON t1.document_code = t2.document_code
		JOIN document_sections_images AS t3 ON t2.section_id = t3.section_id

	      document_name
	0  dzAFall SailsPlX
	1   yrMm9Fall Sails
	ACTUAL OUTPUT ====

		
		SELECT document_name
		FROM
		  (SELECT *
		   FROM documents AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM document_sections AS LHS
		           WHERE EXISTS
		               (SELECT 1
		                FROM document_sections_images AS RHS
		                WHERE (LHS.section_id = RHS.section_id) )) AS RHS
		        WHERE (LHS.document_code = RHS.document_code) ))
		ORDER BY document_name

	      document_name
	0        Fall Sails
	1            Joe CV
	2  dzAFall SailsPlX
	3       ummer Sails
	4   yrMm9Fall Sails
Wrong output for fuzzied solution in instance spider/document_management/0009 (3160)
	EXPECTED OUTPUT ====

		SELECT document_type_code
		FROM documents
		GROUP BY document_type_code
		HAVING sum(access_count) > 10000

	  document_type_code
	0      Advertisement
	1                 CV
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT document_type_code
		FROM
		  (SELECT document_code,
		          document_structure_code,
		          document_type_code,
		          access_count,
		          document_name,
		          SUM(access_count) OVER () AS sumaccess_count
		   FROM documents)
		WHERE (sumaccess_count > 10000
		       OR sumaccess_count = access_count)
		ORDER BY document_type_code

	    document_type_code
	0        Advertisement
	1   AdvertisementDPAeh
	2   Advertisementg2JVj
	3   Advertisementy0lWU
	4                   CV
	5              CVABdw 
	6              CVF1PV3
	7              FhNmNCV
	8                Paper
	9                    V
	10            w07CVyd)
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0002 (3165)
	EXPECTED OUTPUT ====

		SELECT date_of_notes
		FROM Assessment_Notes

	           date_of_notes
	0    1821-12-13 15:11:32
	1    1821-12-13 15:11:32
	2    1821-12-13 15:11:32
	3    1821-12-13 15:11:32
	4    1821-12-13 15:11:32
	..                   ...
	328  2094-06-22 07:35:26
	329  2094-06-22 07:35:26
	330  2094-06-22 07:35:26
	331  2094-06-22 07:35:26
	332  2094-06-22 07:35:26
	
	[333 rows x 1 columns]
	ACTUAL OUTPUT ====

		
		SELECT date_of_notes
		FROM
		  (SELECT date_of_notes
		   FROM assessment_notes INTERSECT SELECT date_of_notes
		   FROM assessment_notes)
		ORDER BY date_of_notes

	          date_of_notes
	0   1821-12-13 15:11:32
	1   1978-04-15 04:49:18
	2   1983-01-31 23:51:38
	3   1984-10-24 14:19:30
	4   1984-12-10 22:12:43
	5   1987-02-18 04:01:18
	6   1988-06-09 00:24:01
	7   1991-03-18 03:47:40
	8   1991-08-15 01:22:08
	9   1995-12-02 11:49:56
	10  1996-06-19 14:03:15
	11  2005-01-04 09:48:10
	12  2008-10-18 05:25:20
	13  2014-01-31 02:05:02
	14  2094-06-22 07:35:26
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0036 (3166)
	EXPECTED OUTPUT ====

		SELECT T1.zip_postcode
		FROM Addresses AS T1
		JOIN Teachers AS T2 ON T1.address_id = T2.address_id
		WHERE T2.first_name = "Lyla"

	  zip_postcode
	0           23
	1          544
	2     ZI0E4545
	3     ZI0E4545
	ACTUAL OUTPUT ====

		
		SELECT `zip_postcode`
		FROM
		  (SELECT *
		   FROM `addresses` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `teachers`
		           WHERE (`first_name` = 'Lyla')) AS RHS
		        WHERE (LHS.address_id = RHS.address_id) ))
		ORDER BY zip_postcode

	  zip_postcode
	0           23
	1          544
	2     ZI0E4545
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0039 (3169)
	EXPECTED OUTPUT ====

		SELECT last_name
		FROM Teachers
		EXCEPT
		SELECT T1.last_name
		FROM Teachers AS T1
		JOIN Detention AS T2 ON T1.teacher_id = T2.teacher_id

	     last_name
	0  WWbMoorerRp
	1  di2y(Hansen
	2        ecker
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT last_name
		FROM
		  (SELECT *
		   FROM teachers AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM detention AS RHS
		        WHERE (LHS.teacher_id = RHS.teacher_id) ))
		ORDER BY last_name

	     last_name
	0       Hansen
	1        Moore
	2     Schuster
	3  WWbMoorerRp
	4  di2y(Hansen
	5        ecker
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0038 (3170)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM STUDENTS
		WHERE student_id NOT IN
		    (SELECT student_id
		     FROM Behavior_Incident)

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT *
		   FROM students AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM behavior_incident AS RHS
		        WHERE (LHS.student_id = RHS.student_id) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0003 (3171)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM ADDRESSES
		WHERE zip_postcode = "197"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___
		FROM
		  (SELECT city,
		          line_3,
		          COUNT() AS n
		   FROM addresses
		   GROUP BY city,
		            line_3)
		WHERE (n < 197)
		ORDER BY count___

	   count___
	0         1
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0022 (3173)
	EXPECTED OUTPUT ====

		SELECT T1.teacher_id,
		       T2.last_name
		FROM Detention AS T1
		JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id
		WHERE T1.detention_type_code = "AFTER"
		GROUP BY T1.teacher_id
		ORDER BY count(*) DESC
		LIMIT 1

	   teacher_id last_name
	0          14      Kuhi
	ACTUAL OUTPUT ====

		
		SELECT `teacher_id`,
		       `last_name`
		FROM
		  (SELECT `LHS`.`teacher_id` AS `teacher_id`,
		          `LHS`.`address_id` AS `address_id`,
		          `LHS`.`first_name` AS `first_name`,
		          `LHS`.`middle_name` AS `middle_name`,
		          `LHS`.`last_name` AS `last_name`,
		          `LHS`.`gender` AS `gender`,
		          `LHS`.`cell_mobile_number` AS `cell_mobile_number`,
		          `LHS`.`email_address` AS `email_address`,
		          `LHS`.`other_details` AS `other_details`,
		          `RHS`.`detention_type_code` AS `detention_type_code`,
		          `RHS`.`n` AS `n`
		   FROM `teachers` AS `LHS`
		   INNER JOIN
		     (SELECT `detention_type_code`,
		             `teacher_id`,
		             COUNT() AS `n`
		      FROM `detention`
		      GROUP BY `detention_type_code`,
		               `teacher_id`) AS `RHS` ON (`LHS`.`teacher_id` = `RHS`.`teacher_id`))
		WHERE (`detention_type_code` = 'AFTER'
		       AND n > 1)
		ORDER BY teacher_id

	Empty DataFrame
	Columns: [teacher_id, last_name]
	Index: []
Error while executing solution for instance spider/behavior_monitoring/0004 (3177)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT incident_type_code) OVER () AS count_distinct_incident_type_code_
FROM
  (SELECT incident_type_code,
          COUNT(DISTINCT incident_type_code) AS n_distinct
   FROM behavior_incident
   GROUP BY incident_type_code)
ORDER BY count_distinct_incident_type_code_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0026 (3179)
	EXPECTED OUTPUT ====

		SELECT T1.detention_type_code,
		       T2.detention_type_description
		FROM Detention AS T1
		JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code = T2.detention_type_code
		GROUP BY T1.detention_type_code
		ORDER BY count(*) ASC
		LIMIT 1

	  detention_type_code detention_type_description
	0          1BM(hLUNCH                  Lunch-tim
	ACTUAL OUTPUT ====

		
		SELECT detention_type_code,
		       detention_type_description
		FROM
		  (SELECT LHS.detention_type_code AS detention_type_code,
		          LHS.n AS n,
		          RHS.detention_type_description AS detention_type_description,
		          RHS.detention_id AS detention_id,
		          RHS.datetime_detention_start AS datetime_detention_start,
		          RHS.datetime_detention_end AS datetime_detention_end,
		          RHS.detention_summary AS detention_summary,
		          RHS.other_details AS other_details
		   FROM
		     (SELECT detention_type_code,
		             COUNT() AS n
		      FROM
		        (SELECT LHS.detention_type_code AS detention_type_code,
		                LHS.detention_type_description AS detention_type_description,
		                RHS.detention_id AS detention_id,
		                RHS.teacher_id AS teacher_id,
		                RHS.datetime_detention_start AS datetime_detention_start,
		                RHS.datetime_detention_end AS datetime_detention_end,
		                RHS.detention_summary AS detention_summary,
		                RHS.other_details AS other_details
		         FROM ref_detention_type AS LHS
		         INNER JOIN detention AS RHS ON (LHS.detention_type_code = RHS.detention_type_code))
		      GROUP BY detention_type_code) AS LHS
		   INNER JOIN
		     (SELECT LHS.detention_type_code AS detention_type_code,
		             LHS.detention_type_description AS detention_type_description,
		             RHS.detention_id AS detention_id,
		             RHS.teacher_id AS teacher_id,
		             RHS.datetime_detention_start AS datetime_detention_start,
		             RHS.datetime_detention_end AS datetime_detention_end,
		             RHS.detention_summary AS detention_summary,
		             RHS.other_details AS other_details
		      FROM ref_detention_type AS LHS
		      INNER JOIN detention AS RHS ON (LHS.detention_type_code = RHS.detention_type_code)) AS RHS ON (LHS.n = RHS.teacher_id
		                                                                                                        AND LHS.detention_type_code = RHS.detention_type_code))
		ORDER BY detention_type_code

	  detention_type_code detention_type_description
	0        htlBREAK dsI                 Lunch-time
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0016 (3182)
	EXPECTED OUTPUT ====

		SELECT city
		FROM Addresses
		ORDER BY city

	                 city
	0     04N)eMeganeland
	1         Caitlynstad
	2         Caitlynstad
	3         Caitlynstad
	4     GQS1VMeganeland
	5          Meganeland
	6          Meganeland
	7          Meganeland
	8          Meganeland
	9          Meganeland
	10    MeganelandDkG0C
	11        Tressamouth
	12        Tressamouth
	13        Tressamouth
	14  b(4TressamouthssO
	15   mkdMeganelandDQE
	ACTUAL OUTPUT ====

		
		SELECT city
		FROM
		  (SELECT city
		   FROM addresses INTERSECT SELECT city
		   FROM addresses)
		ORDER BY city

	                city
	0    04N)eMeganeland
	1        Caitlynstad
	2    GQS1VMeganeland
	3         Meganeland
	4    MeganelandDkG0C
	5        Tressamouth
	6  b(4TressamouthssO
	7   mkdMeganelandDQE
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0032 (3183)
	EXPECTED OUTPUT ====

		SELECT T2.cell_mobile_number
		FROM Student_Addresses AS T1
		JOIN Students AS T2 ON T1.student_id = T2.student_id
		ORDER BY T1.monthly_rental ASC
		LIMIT 1

	   cell_mobile_number
	0  (820)260-572143jcB
	ACTUAL OUTPUT ====

		
		SELECT cell_mobile_number
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM students AS LHS
		         WHERE NOT EXISTS
		             (SELECT 1
		              FROM student_addresses AS RHS
		              WHERE (LHS.student_id = RHS.student_id
		                     AND LHS.address_id = RHS.address_id) ))
		      ORDER BY first_name)
		   LIMIT 1)

	   cell_mobile_number
	0  1-751-162-9676x115
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0035 (3185)
	EXPECTED OUTPUT ====

		SELECT T1.line_1,
		       avg(T2.monthly_rental)
		FROM Addresses AS T1
		JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id
		GROUP BY T2.address_id

	                                   line_1  avg(t2.monthly_rental)
	0        719 Pfannerstill Ridge Suite 663            8.866895e+02
	1                     11940 Pauline Shoal            2.791600e+13
	2                          2451 Wiza Inle            8.172477e+13
	3   rYzF)719 Pfannerstill Ridge Suite 663            8.641182e+13
	4                014 Runte Haven Apt. 870            9.127022e+13
	5                    11940 Pauline Shoals            9.631588e+13
	6                          451 Wiza Inlet            1.012209e+14
	7            Ou2Lu DA9ZWF217GOED8NJyNfg0K            1.052903e+14
	8                          2451 Wiza Inle            1.140586e+14
	9        719 Pfannerstill Ridge Suite 663            1.226852e+14
	10                   11940 Pauline Shoals            1.350300e+14
	11       719 Pfannerstill Ridge Suite 663            1.703628e+14
	ACTUAL OUTPUT ====

		
		SELECT line_1,
		       meanmonthly_rental AS avg_t2_monthly_rental_
		FROM
		  (SELECT line_1,
		          zip_postcode,
		          AVG(monthly_rental) AS meanmonthly_rental
		   FROM
		     (SELECT LHS.address_id AS address_id,
		             LHS.line_1 AS line_1,
		             LHS.line_2 AS line_2,
		             LHS.line_3 AS line_3,
		             LHS.city AS city,
		             LHS.zip_postcode AS zip_postcode,
		             LHS.state_province_county AS state_province_county,
		             LHS.country AS country,
		             LHS.other_address_details AS other_address_details,
		             RHS.student_id AS student_id,
		             RHS.date_address_from AS date_address_from,
		             RHS.date_address_to AS date_address_to,
		             RHS.monthly_rental AS monthly_rental,
		             RHS.other_details AS other_details
		      FROM addresses AS LHS
		      INNER JOIN student_addresses AS RHS ON (LHS.address_id = RHS.address_id))
		   GROUP BY line_1,
		            zip_postcode)
		ORDER BY line_1

	                                   line_1  avg_t2_monthly_rental_
	0        719 Pfannerstill Ridge Suite 663            8.866895e+02
	1                     11940 Pauline Shoal            2.791600e+13
	2                          2451 Wiza Inle            8.172477e+13
	3   rYzF)719 Pfannerstill Ridge Suite 663            8.641182e+13
	4                014 Runte Haven Apt. 870            9.127022e+13
	5                    11940 Pauline Shoals            9.631588e+13
	6                          451 Wiza Inlet            1.012209e+14
	7            Ou2Lu DA9ZWF217GOED8NJyNfg0K            1.052903e+14
	8                          2451 Wiza Inle            1.140586e+14
	9                    11940 Pauline Shoals            1.350300e+14
	10       719 Pfannerstill Ridge Suite 663            1.422453e+14
No solution for instance spider/behavior_monitoring/0020 (3186)
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0019 (3187)
	EXPECTED OUTPUT ====

		SELECT T1.student_id,
		       T2.first_name
		FROM Assessment_Notes AS T1
		JOIN Students AS T2 ON T1.student_id = T2.student_id
		GROUP BY T1.student_id
		ORDER BY count(*) DESC
		LIMIT 1

	   student_id first_name
	0           9    Christy
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT student_id,
		                first_name
		FROM
		  (SELECT LHS.student_id AS student_id,
		          LHS.address_id AS address_id,
		          LHS.first_name AS first_name,
		          LHS.middle_name AS middle_name,
		          LHS.last_name AS last_name,
		          LHS.cell_mobile_number AS cell_mobile_number,
		          LHS.email_address AS email_address,
		          LHS.date_first_rental AS date_first_rental,
		          LHS.date_left_university AS date_left_university,
		          LHS.other_student_details AS other_student_details,
		          RHS.teacher_id AS teacher_id
		   FROM students AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT student_id,
		                teacher_id,
		                COUNT() AS n
		         FROM assessment_notes
		         GROUP BY student_id,
		                  teacher_id)
		      WHERE (n = 1)) AS RHS ON (LHS.student_id = RHS.student_id
		                                AND LHS.address_id = RHS.n))
		ORDER BY student_id

	Empty DataFrame
	Columns: [student_id, first_name]
	Index: []
No solution for instance spider/behavior_monitoring/0024 (3190)
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0021 (3191)
	EXPECTED OUTPUT ====

		SELECT T1.student_id,
		       T2.last_name
		FROM Behavior_Incident AS T1
		JOIN Students AS T2 ON T1.student_id = T2.student_id
		GROUP BY T1.student_id
		ORDER BY count(*) DESC
		LIMIT 1

	   student_id last_name
	0          14     Rohan
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT student_id,
		                last_name
		FROM
		  (SELECT LHS.student_id AS student_id,
		          LHS.address_id AS address_id,
		          LHS.first_name AS first_name,
		          LHS.middle_name AS middle_name,
		          LHS.last_name AS last_name,
		          LHS.cell_mobile_number AS cell_mobile_number,
		          LHS.email_address AS email_address,
		          LHS.date_first_rental AS date_first_rental,
		          LHS.date_left_university AS date_left_university,
		          LHS.other_student_details AS other_student_details,
		          RHS.date_incident_start AS date_incident_start,
		          RHS.student_id AS student_id_other
		   FROM students AS LHS
		   INNER JOIN
		     (SELECT date_incident_start,
		             student_id,
		             COUNT() AS n
		      FROM behavior_incident
		      GROUP BY date_incident_start,
		               student_id) AS RHS ON (LHS.student_id = RHS.n))
		ORDER BY student_id

	Empty DataFrame
	Columns: [student_id, last_name]
	Index: []
No solution for instance spider/behavior_monitoring/0023 (3192)
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0001 (3193)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM ASSESSMENT_NOTES

	   count(*)
	0       195
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT other_details,
		          COUNT() AS n
		   FROM assessment_notes
		   GROUP BY other_details)
		ORDER BY count___

	     count___
	0           1
	1           1
	2           1
	3           1
	4           1
	..        ...
	185         1
	186         1
	187         1
	188         1
	189         6
	
	[190 rows x 1 columns]
No solution for instance spider/behavior_monitoring/0014 (3194)
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0025 (3196)
	EXPECTED OUTPUT ====

		SELECT T1.incident_type_code,
		       T2.incident_type_description
		FROM Behavior_Incident AS T1
		JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code = T2.incident_type_code
		GROUP BY T1.incident_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  incident_type_code incident_type_description
	0               NOIS                     Noise
	ACTUAL OUTPUT ====

		
		SELECT incident_type_code,
		       incident_type_description
		FROM
		  (SELECT LHS.incident_id AS incident_id,
		          LHS.incident_type_code AS incident_type_code,
		          LHS.student_id AS student_id,
		          LHS.date_incident_start AS date_incident_start,
		          LHS.date_incident_end AS date_incident_end,
		          LHS.incident_summary AS incident_summary,
		          LHS.recommendations AS recommendations,
		          LHS.other_details AS other_details,
		          RHS.incident_type_description AS incident_type_description
		   FROM behavior_incident AS LHS
		   INNER JOIN
		     (SELECT incident_type_code,
		             incident_type_description,
		             COUNT(*) OVER () AS n
		      FROM ref_incident_type) AS RHS ON (LHS.incident_id = RHS.n
		                                            AND LHS.incident_type_code = RHS.incident_type_code))
		ORDER BY incident_type_code

	  incident_type_code incident_type_description
	0       cllaXDISTURB                  Violence
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0040 (3200)
	EXPECTED OUTPUT ====

		SELECT T1.line_1
		FROM Addresses AS T1
		JOIN Students AS T2 ON T1.address_id = T2.address_id INTERSECT
		SELECT T1.line_1
		FROM Addresses AS T1
		JOIN Teachers AS T2 ON T1.address_id = T2.address_id

	                               line_1
	0        18327 Jaime Terrace Suite 34
	1  18327 Jaime Terrace Suite 343awz30
	2                     2451 Wiza Inlet
	ACTUAL OUTPUT ====

		
		SELECT line_1
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM addresses AS LHS
		      WHERE EXISTS
		          (SELECT 1
		           FROM students AS RHS
		           WHERE (LHS.address_id = RHS.address_id) )) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM teachers AS RHS
		        WHERE (LHS.address_id = RHS.address_id) ))
		ORDER BY line_1

	                               line_1
	0        18327 Jaime Terrace Suite 34
	1        18327 Jaime Terrace Suite 34
	2  18327 Jaime Terrace Suite 343awz30
	3                     2451 Wiza Inlet
Wrong output for fuzzied solution in instance spider/behavior_monitoring/0031 (3202)
	EXPECTED OUTPUT ====

		SELECT T2.address_id,
		       T1.zip_postcode
		FROM Addresses AS T1
		JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id
		ORDER BY monthly_rental DESC
		LIMIT 1

	   address_id zip_postcode
	0          19           44
	ACTUAL OUTPUT ====

		
		SELECT address_id,
		       zip_postcode
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.address_id AS address_id,
		                LHS.line_1 AS line_1,
		                LHS.line_2 AS line_2,
		                LHS.line_3 AS line_3,
		                LHS.city AS city,
		                LHS.zip_postcode AS zip_postcode,
		                LHS.state_province_county AS state_province_county,
		                LHS.country AS country,
		                LHS.other_address_details AS other_address_details,
		                RHS.student_id AS student_id,
		                RHS.date_address_from AS date_address_from,
		                RHS.date_address_to AS date_address_to,
		                RHS.monthly_rental AS monthly_rental,
		                RHS.other_details AS other_details
		         FROM addresses AS LHS
		         INNER JOIN student_addresses AS RHS ON (LHS.address_id = RHS.address_id))
		      ORDER BY date_address_from DESC)
		   LIMIT 1)

	   address_id zip_postcode
	0          13          612
Wrong output for fuzzied solution in instance spider/station_weather/0008 (3204)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       t1.network_name,
		       t1.services
		FROM station AS t1
		JOIN route AS t2 ON t1.id = t2.station_id
		GROUP BY t2.station_id

	    count(*)            network_name                                       services
	0          1   0xYW6Chafford Hundred                   W7u 52C5k)YWyzres5STmGEONcG2
	1          1         Carpenders Park        Metropolitan line and Chiltern Railways
	2          1        Chafford Hundred                                      6(cc2c8ib
	3          1   Chafford HundredFMG8X                            a6T8RGreater Anglia
	4          1   Chafford HundredaV)xh                                             c2
	5          1                  Chesha                                       WBUj5c2c
	6          1                 Chesham                                            c2c
	7          1              E 0vEaChtl                                            c2c
	8          1   Lpbn1Chafford Hundred                                            c2c
	9          1     vKSCALJVs(hnW3Oa6Er                                 Greater Anglia
	10         2         Carpenders Park  )A1Metropolitan line and Chiltern RailwaysO91
	11         2    Carpenders ParkUxhAy                                  Greater Angli
	12         2         Chafford Hundre                          dLhKhlVTo)4JehIRSFJ9H
	13         2        Chafford Hundred                                 Greater Anglia
	14         2        Chafford Hundred                                             c2
	15         2        Chafford Hundred                                             c2
	16         2        Chafford Hundred                                            c2c
	17         2                 Chesham     dzAexCKpNxen8tGokQqDDR3SbiIxbVLvb9vU)U1PlX
	18         2                 Croxley         Metropolitan line and Chiltern Railway
	19         2                 ak6aFqY                                       UDCpWc2c
	20         2         hafford Hundred        Metropolitan line and Chiltern Railways
	21         2                  hesham        Metropolitan line and Chiltern Railways
	22         2              tK9QtiYjja                                    tjMb5F3O1dv
	23         2                 x6PeIIi                                 Greater Anglia
	24         2  zWeChafford HundredJr3                    XCgdLhKhlVTo)4JehIRSFJ9H0vg
	25         3           (SpChesham4Qb                            Greater AngliaZqtuT
	26         3           5(BCheshamJGt                            MYay8Greater Anglia
	27         3           CZfCroxleyFys                                            c2c
	28         3          Carpenders Par                                 Greater Anglia
	29         3         Carpenders Park                                             2c
	30         3                  Chesha                                            c2c
	31         3                 Chesham                                  Greater Angli
	32         3                 Chesham        Metropolitan line and Chiltern Railways
	33         3                  Croxle                                 Greater Anglia
	34         3                 Croxley                               0GRtD0QbDvLhoCd1
	35         3                 Croxley        Metropolitan line and Chiltern Railways
	36         3                 Croxley                                         tjMb5F
	37         3            Croxleywq1fj        Metropolitan line and Chiltern Railways
	38         4            SlpDAQ4k2Tvx        Metropolitan line and Chiltern Railways
	39         4            p0B0rCroxley                          TTghl2RTENKXPvtmtCM21
	40         5                 Chesham                               0GRtD0QbDvLhoCd1
	41         6         Carpenders Park     S mexCKpNxen8tGokQqDDR3SbiIxbVLvb9vU)U1jmD
	42         7        Chafford Hundred                                             c2
	43         7  PJpChafford HundredVeK  a( Metropolitan line and Chiltern RailwayseFo
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       network_name,
		       services
		FROM
		  (SELECT network_name,
		          services,
		          COUNT() AS n
		   FROM
		     (SELECT id,
		             network_name,
		             services,
		             local_authority,
		             train_id,
		             id AS station_id
		      FROM
		        (SELECT LHS.id AS id,
		                LHS.network_name AS network_name,
		                LHS.services AS services,
		                LHS.local_authority AS local_authority,
		                RHS.train_id AS train_id
		         FROM station AS LHS
		         INNER JOIN route AS RHS ON (LHS.id = RHS.station_id)))
		   GROUP BY network_name,
		            services)
		ORDER BY count___

	    count___            network_name                                       services
	0          1   0xYW6Chafford Hundred                   W7u 52C5k)YWyzres5STmGEONcG2
	1          1         Carpenders Park        Metropolitan line and Chiltern Railways
	2          1        Chafford Hundred                                      6(cc2c8ib
	3          1   Chafford HundredFMG8X                            a6T8RGreater Anglia
	4          1   Chafford HundredaV)xh                                             c2
	5          1                  Chesha                                       WBUj5c2c
	6          1                 Chesham                                            c2c
	7          1              E 0vEaChtl                                            c2c
	8          1   Lpbn1Chafford Hundred                                            c2c
	9          1     vKSCALJVs(hnW3Oa6Er                                 Greater Anglia
	10         2         Carpenders Park  )A1Metropolitan line and Chiltern RailwaysO91
	11         2    Carpenders ParkUxhAy                                  Greater Angli
	12         2         Chafford Hundre                          dLhKhlVTo)4JehIRSFJ9H
	13         2        Chafford Hundred                                 Greater Anglia
	14         2        Chafford Hundred                                            c2c
	15         2                 Chesham     dzAexCKpNxen8tGokQqDDR3SbiIxbVLvb9vU)U1PlX
	16         2                 Croxley         Metropolitan line and Chiltern Railway
	17         2                 ak6aFqY                                       UDCpWc2c
	18         2         hafford Hundred        Metropolitan line and Chiltern Railways
	19         2                  hesham        Metropolitan line and Chiltern Railways
	20         2              tK9QtiYjja                                    tjMb5F3O1dv
	21         2                 x6PeIIi                                 Greater Anglia
	22         2  zWeChafford HundredJr3                    XCgdLhKhlVTo)4JehIRSFJ9H0vg
	23         3           (SpChesham4Qb                            Greater AngliaZqtuT
	24         3           5(BCheshamJGt                            MYay8Greater Anglia
	25         3           CZfCroxleyFys                                            c2c
	26         3          Carpenders Par                                 Greater Anglia
	27         3         Carpenders Park                                             2c
	28         3                  Chesha                                            c2c
	29         3                 Chesham                                  Greater Angli
	30         3                 Chesham        Metropolitan line and Chiltern Railways
	31         3                  Croxle                                 Greater Anglia
	32         3                 Croxley                               0GRtD0QbDvLhoCd1
	33         3                 Croxley        Metropolitan line and Chiltern Railways
	34         3                 Croxley                                         tjMb5F
	35         3            Croxleywq1fj        Metropolitan line and Chiltern Railways
	36         4            SlpDAQ4k2Tvx        Metropolitan line and Chiltern Railways
	37         4            p0B0rCroxley                          TTghl2RTENKXPvtmtCM21
	38         5                 Chesham                               0GRtD0QbDvLhoCd1
	39         6         Carpenders Park     S mexCKpNxen8tGokQqDDR3SbiIxbVLvb9vU)U1jmD
	40         7  PJpChafford HundredVeK  a( Metropolitan line and Chiltern RailwayseFo
	41        11        Chafford Hundred                                             c2
No solution for instance spider/station_weather/0013 (3206)
No solution for instance spider/station_weather/0004 (3208)
Wrong output for fuzzied solution in instance spider/station_weather/0005 (3211)
	EXPECTED OUTPUT ====

		SELECT train_number,
		       TIME
		FROM train
		WHERE origin = 'Chennai'
		  AND destination = 'Guruvayur'

	Empty DataFrame
	Columns: [train_number, time]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `train_number`,
		       `time`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`train_number` AS `train_number`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`origin` AS `origin`,
		          `LHS`.`destination` AS `destination`,
		          `LHS`.`time` AS `time`,
		          `LHS`.`interval` AS `interval`
		   FROM `train` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `train`
		      WHERE (`destination` != 'Chennai'
		             AND `destination` = 'Guruvayur')) AS RHS ON (LHS.id = RHS.id
		                                                          AND LHS.train_number = RHS.train_number
		                                                          AND LHS.name = RHS.name
		                                                          AND LHS.origin = RHS.origin
		                                                          AND LHS.destination = RHS.destination
		                                                          AND LHS.time = RHS.time
		                                                          AND LHS.interval = RHS.interval))
		ORDER BY train_number

	   train_number   time
	0         16524  04:20
	1         16382  16:59
Wrong output for fuzzied solution in instance spider/station_weather/0016 (3212)
	EXPECTED OUTPUT ====

		SELECT origin
		FROM train
		GROUP BY origin
		HAVING count(*) > 1

	    origin
	0  Chennai
	ACTUAL OUTPUT ====

		
		SELECT origin
		FROM
		  (SELECT interval, origin,
		                    COUNT() AS n
		   FROM train
		   GROUP BY interval, origin)
		WHERE (n > 1)
		ORDER BY origin

	Empty DataFrame
	Columns: [origin]
	Index: []
Wrong output for fuzzied solution in instance spider/station_weather/0007 (3213)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM train AS t1
		JOIN route AS t2 ON t1.id = t2.train_id
		GROUP BY t2.train_id
		ORDER BY count(*) DESC
		LIMIT 1

	             name
	0  Island Express
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.id AS id,
		                LHS.train_number AS train_number,
		                LHS.name AS name,
		                LHS.origin AS origin,
		                LHS.destination AS destination,
		                LHS.time AS TIME,
		                LHS.interval AS interval,
		                LHS.train_id AS train_id,
		                LHS.station_id AS station_id,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.id AS id,
		                   LHS.train_number AS train_number,
		                   LHS.name AS name,
		                   LHS.origin AS origin,
		                   LHS.destination AS destination,
		                   LHS.time AS TIME,
		                   LHS.interval AS interval,
		                   RHS.train_id AS train_id,
		                   RHS.station_id AS station_id
		            FROM train AS LHS
		            CROSS JOIN route AS RHS) AS LHS
		         INNER JOIN
		           (SELECT id,
		                   train_number,
		                   name,
		                   origin,
		                   destination,
		                   TIME, interval, COUNT(*) OVER () AS n
		            FROM train) AS RHS ON (LHS.id = RHS.id
		                                      AND LHS.train_number = RHS.train_number
		                                      AND LHS.name = RHS.name
		                                      AND LHS.origin = RHS.origin
		                                      AND LHS.destination = RHS.destination
		                                      AND LHS.time = RHS.time
		                                      AND LHS.interval = RHS.interval))
		      ORDER BY n DESC)
		   LIMIT 1)

	                        name
	0  R(oAnanthapuri ExpressWWA
No solution for instance spider/station_weather/0011 (3217)
No solution for instance spider/station_weather/0010 (3218)
Wrong output for fuzzied solution in instance spider/local_govt_and_lot/0008 (3221)
	EXPECTED OUTPUT ====

		SELECT T1.Customer_Event_ID ,
		       T1.property_id
		FROM Customer_Events AS T1
		JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID = T2.Customer_Event_ID
		GROUP BY T1.customer_event_id
		HAVING count(*) BETWEEN 1 AND 3

	    customer_event_id  property_id
	0         -9631498582          586
	1                 164          109
	2                 165          109
	3                 166   3871252628
	4                 167   5086054397
	5                 168          587
	6                 530          585
	7                 532          585
	8                 559          107
	9                 560          107
	10                561   5086054397
	11          142877438          588
	12         1733528901   3871252628
	13         1751889727          588
	14         1860718316   3871252628
	15         2121178090   5086054397
	16         3109393259          107
	17         3767930573          587
	18         3957779942          107
	19         4156999089          587
	20         4753925565          586
	21         4914010029          587
	22         5030516817   5086054397
	23         5447521641          584
	24         5584240964          585
	25         5924261571          587
	26         7819137089          585
	27         8121187453          585
	28         9894463262   3871252628
	ACTUAL OUTPUT ====

		
		SELECT customer_event_id,
		       property_id
		FROM
		  (SELECT *
		   FROM customer_events AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT customer_event_id,
		                     customer_event_note_id,
		                     COUNT() AS n
		              FROM customer_event_notes
		              GROUP BY customer_event_id,
		                       customer_event_note_id)
		           WHERE (n = 1
		                  OR n >= 3)) AS RHS
		        WHERE (LHS.customer_event_id = RHS.customer_event_id) ))
		ORDER BY customer_event_id

	    customer_event_id  property_id
	0         -9631498582          586
	1         -7821232907          587
	2                 164          109
	3                 165          109
	4                 166   3871252628
	5                 167   5086054397
	6                 168          587
	7                 528          109
	8                 529          585
	9                 530          585
	10                531          584
	11                532          585
	12                557          584
	13                558          585
	14                559          107
	15                560          107
	16                561   5086054397
	17          142877438          588
	18          143413750          107
	19          751000638          585
	20         1733528901   3871252628
	21         1751889727          588
	22         1860718316   3871252628
	23         2121178090   5086054397
	24         3109393259          107
	25         3767930573          587
	26         3957779942          107
	27         4156999089          587
	28         4245788400          109
	29         4753925565          586
	30         4833116769          585
	31         4914010029          587
	32         5030516817   5086054397
	33         5447521641          584
	34         5584240964          585
	35         5924261571          587
	36         6542516194          585
	37         7819137089          585
	38         7922364709          109
	39         8043400925          107
	40         8121187453          585
	41         9000334392          586
	42         9818290682          588
	43         9894463262   3871252628
Wrong output for fuzzied solution in instance spider/local_govt_and_lot/0003 (3222)
	EXPECTED OUTPUT ====

		SELECT T1.resident_id,
		       T1.other_details,
		       count(*)
		FROM Residents AS T1
		JOIN Residents_Services AS T2 ON T1.resident_id = T2.resident_id
		GROUP BY T1.resident_id
		ORDER BY count(*) DESC

	    resident_id            other_details  count(*)
	0            49        Prof. Arvel Kozey         1
	1            39        Prof. Arvel Kozey         2
	2            88   Prof. Arvel KozeyWPTXf         3
	3            66   FiHLeProf. Arvel Kozey         4
	4            37        Jacques Glover II         4
	5            65        Jacques Glover II         4
	6            67   fr)NVJacques Glover II         4
	7             7        Jacques Glover II         6
	8            40        Prof. Arvel Kozey         6
	9            38        Jacques Glover II        10
	10           45   QUex1Jacques Glover II        10
	11            5   Jacques Glover IIOAu3z        12
	12            6        Jacques Glover II        15
	13            4   Jacques Glover II6)CaO        15
	14           69   D5YQeJacques Glover II        16
	15           91  AgKJacques Glover IIDts        20
	16           92        Jacques Glover II        21
	17           47         acques Glover II        70
	18           89   Jacques Glover IINxf86        72
	19           48        Jacques Glover II        80
	20           90        Jacques Glover II       108
	ACTUAL OUTPUT ====

		
		SELECT resident_id,
		       other_details,
		       n AS count___
		FROM
		  (SELECT LHS.resident_id AS resident_id,
		          LHS.property_id AS property_id,
		          LHS.date_moved_in AS date_moved_in,
		          LHS.date_moved_out AS date_moved_out,
		          LHS.other_details AS other_details,
		          RHS.date_requested AS date_requested,
		          RHS.n AS n
		   FROM residents AS LHS
		   INNER JOIN
		     (SELECT date_requested,
		             resident_id,
		             COUNT() AS n
		      FROM residents_services
		      GROUP BY date_requested,
		               resident_id) AS RHS ON (LHS.resident_id = RHS.resident_id))
		ORDER BY resident_id

	     resident_id            other_details  count___
	0              6   2yua1Jacques Glover II         1
	1              6   2yua1Jacques Glover II         1
	2              6   2yua1Jacques Glover II         1
	3             45  5dwJacques Glover IIpes         1
	4             45  5dwJacques Glover IIpes         1
	..           ...                      ...       ...
	413           89        Jacques Glover II         3
	414           89        Jacques Glover II         3
	415           89   Jacques Glover IINxf86         3
	416           89        Prof. Arvel Kozey         3
	417           89  kuaJacques Glover IITh5         3
	
	[418 rows x 3 columns]
Wrong output for fuzzied solution in instance spider/local_govt_and_lot/0004 (3225)
	EXPECTED OUTPUT ====

		SELECT T1.service_id,
		       T1.service_details,
		       count(*)
		FROM Services AS T1
		JOIN Residents_Services AS T2 ON T1.service_id = T2.service_id
		GROUP BY T1.service_id
		ORDER BY count(*) DESC
		LIMIT 1

	   service_id service_details  count(*)
	0          10  SatisfiedYyYT0        12
	ACTUAL OUTPUT ====

		
		SELECT service_id,
		       service_details,
		       n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT service_details,
		                service_id,
		                COUNT() AS n
		         FROM
		           (SELECT LHS.resident_id AS resident_id,
		                   LHS.service_id AS service_id,
		                   LHS.date_moved_in AS date_moved_in,
		                   LHS.property_id AS property_id,
		                   LHS.date_requested AS date_requested,
		                   LHS.date_provided AS date_provided,
		                   LHS.other_details AS other_details,
		                   RHS.organization_id AS organization_id,
		                   RHS.service_type_code AS service_type_code,
		                   RHS.service_details AS service_details
		            FROM residents_services AS LHS
		            LEFT JOIN services AS RHS ON (LHS.service_id = RHS.service_id))
		         GROUP BY service_details,
		                  service_id)
		      ORDER BY service_details DESC)
		   LIMIT 1)

	   service_id service_details  count___
	0           8  kAqj4Satisfied         9
Wrong output for fuzzied solution in instance spider/local_govt_and_lot/0012 (3226)
	EXPECTED OUTPUT ====

		SELECT organization_id
		FROM organizations
		EXCEPT
		SELECT parent_organization_id
		FROM organizations

	   organization_id
	0                6
	1                7
	ACTUAL OUTPUT ====

		
		SELECT organization_id
		FROM
		  (SELECT *
		   FROM organizations AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT organization_id,
		                  organization_id AS parent_organization_id,
		                  organization_details,
		                  organization_id_other
		           FROM
		             (SELECT LHS.organization_id AS organization_id,
		                     LHS.parent_organization_id AS parent_organization_id,
		                     LHS.organization_details AS organization_details,
		                     RHS.organization_id AS organization_id_other
		              FROM organizations AS LHS
		              INNER JOIN organizations AS RHS ON (LHS.organization_id = RHS.parent_organization_id
		                                                     AND LHS.organization_details = RHS.organization_details))) AS RHS
		        WHERE (LHS.parent_organization_id = RHS.parent_organization_id) ))
		ORDER BY organization_id

	   organization_id
	0                6
	1                7
	2                9
	3               10
Error while executing solution for instance spider/local_govt_and_lot/0016 (3229)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT customer_id) OVER () AS count___
FROM
  (SELECT *
   FROM customers AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM customer_events AS RHS
        WHERE (LHS.customer_id = RHS.customer_id) ))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/local_govt_and_lot/0014 (3232)
Error while executing solution for instance spider/local_govt_and_lot/0009 (3233)

(sqlite3.OperationalError) no such function: parse_datetime
[SQL: 
SELECT DISTINCT `thing_id`,
                `type_of_thing_code`
FROM
  (SELECT `LHS`.`thing_id` AS `thing_id`,
          `LHS`.`organization_id` AS `organization_id`,
          `LHS`.`type_of_thing_code` AS `type_of_thing_code`,
          `LHS`.`service_type_code` AS `service_type_code`,
          `LHS`.`service_details` AS `service_details`,
          `RHS`.`date_and_date` AS `date_and_date`,
          `RHS`.`status_of_thing_code` AS `status_of_thing_code`
   FROM `things` AS `LHS`
   INNER JOIN `timed_status_of_things` AS `RHS` ON (`LHS`.`thing_id` = `RHS`.`thing_id`))
WHERE (`status_of_thing_code` = 'Close'
       OR `date_and_date` < parse_datetime('2017-06-19 02:59:21'))
ORDER BY thing_id]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/local_govt_and_lot/0011 (3234)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT status_of_thing_code) OVER () AS count_distinct_status_of_thing_code_
FROM timed_status_of_things
ORDER BY count_distinct_status_of_thing_code_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/local_govt_and_lot/0010 (3235)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT T2.Location_Code)
		FROM Things AS T1
		JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id = T2.thing_id
		WHERE T1.service_details = 'Unsatisfied'

	   count(distinct t2.location_code)
	0                                37
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count_distinct_t2_location_code_`
		FROM
		  (SELECT *
		   FROM `timed_locations_of_things` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `things`
		           WHERE (`service_details` != 'Unsatisfied')) AS RHS
		        WHERE (LHS.thing_id = RHS.thing_id) ))
		ORDER BY count_distinct_t2_location_code_

	   count_distinct_t2_location_code_
	0                                93
Wrong output for fuzzied solution in instance spider/program_share/0008 (3238)
	EXPECTED OUTPUT ====

		SELECT sum(Share_in_percent)
		FROM channel
		WHERE OWNER = 'CCTV'

	   sum(share_in_percent)
	0                   2.88
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT sumshare_in_percent AS sum_share_in_percent_
		FROM
		  (SELECT LHS.channel_id AS channel_id,
		          LHS.name AS name,
		          LHS.owner AS OWNER,
		          LHS.share_in_percent AS share_in_percent,
		          LHS.rating_in_percent AS rating_in_percent,
		          RHS.sumshare_in_percent AS sumshare_in_percent
		   FROM channel AS LHS
		   LEFT JOIN
		     (SELECT OWNER,
		             SUM(share_in_percent) AS sumshare_in_percent
		      FROM channel
		      GROUP BY OWNER) AS RHS ON (LHS.owner = RHS.owner))
		WHERE (sumshare_in_percent != share_in_percent)
		ORDER BY sum_share_in_percent_

	   sum_share_in_percent_
	0          -2.984519e+07
Wrong output for fuzzied solution in instance spider/program_share/0003 (3239)
	EXPECTED OUTPUT ====

		SELECT OWNER
		FROM channel
		ORDER BY rating_in_percent DESC
		LIMIT 1

	                      owner
	0  Shandong TelevisionX1ZRi
	ACTUAL OUTPUT ====

		
		SELECT OWNER
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM channel
		      ORDER BY share_in_percent DESC)
		   LIMIT 1)

	  owner
	0  CCTV
Wrong output for fuzzied solution in instance spider/program_share/0013 (3240)
	EXPECTED OUTPUT ====

		SELECT name
		FROM program
		EXCEPT
		SELECT t1.name
		FROM program AS t1
		JOIN broadcast AS t2 ON t1.program_id = t2.program_id
		WHERE t2.Time_of_day = "Morning"

	      name
	0  Toonmax
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM `program` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `broadcast`
		           WHERE (`time_of_day` != 'Morning')) AS RHS
		        WHERE (LHS.program_id = RHS.program_id) ))
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
No solution for instance spider/program_share/0006 (3241)
Wrong output for fuzzied solution in instance spider/program_share/0004 (3242)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM program

	   count(*)
	0        35
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT name,
		          OWNER,
		          COUNT() AS n
		   FROM program
		   GROUP BY name,
		            OWNER)
		ORDER BY count___

	   count___
	0        26
Error while executing solution for instance spider/program_share/0012 (3243)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT `n_distinct` AS `count_distinct_program_id_`
FROM
  (SELECT `channel_id`,
          `program_id`,
          `time_of_day`,
          COUNT(DISTINCT `time_of_day`) OVER () AS `n_distinct`
   FROM `broadcast`)
WHERE (`time_of_day` != 'Night'
       OR n_distinct > program_id)
ORDER BY count_distinct_program_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/program_share/0015 (3244)
	EXPECTED OUTPUT ====

		SELECT origin
		FROM program
		ORDER BY origin

	           origin
	0            Huna
	1            Huna
	2           Hunan
	3           Hunan
	4         Shangha
	5  ruGShanghaib1e
	ACTUAL OUTPUT ====

		
		SELECT origin
		FROM
		  (SELECT origin
		   FROM program INTERSECT SELECT origin
		   FROM program)
		ORDER BY origin

	           origin
	0            Huna
	1           Hunan
	2         Shangha
	3  ruGShanghaib1e
No solution for instance spider/program_share/0018 (3247)
No solution for instance spider/program_share/0020 (3248)
Wrong output for base solution in instance spider/program_share/0019 (3249)
	EXPECTED OUTPUT ====

	   sum_rating_in_percent_                owner
	0                    0.20     Anhui Television
	1                    2.43                 CCTV
	2                    0.53                  HBS
	3                    0.19  Shandong Television
	ACTUAL OUTPUT ====

		SELECT sum(Rating_in_percent),
		       OWNER
		FROM channel
		GROUP BY OWNER

	   sum(rating_in_percent)                owner
	0                    0.20     Anhui Television
	1                    2.43                 CCTV
	2                    0.53                  HBS
	3                    0.19  Shandong Television
Wrong output for ground truth in instance spider/program_share/0019 (3249)
Wrong output for fuzzied solution in instance spider/program_share/0007 (3250)
	EXPECTED OUTPUT ====

		SELECT name
		FROM program
		ORDER BY launch DESC
		LIMIT 1

	     name
	0  Youman
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM program
		      ORDER BY program_id DESC)
		   LIMIT 1)

	       name
	0  Aniworld
No solution for instance spider/program_share/0001 (3251)
Wrong output for fuzzied solution in instance spider/program_share/0014 (3252)
	EXPECTED OUTPUT ====

		SELECT t1.owner
		FROM program AS t1
		JOIN broadcast AS t2 ON t1.program_id = t2.program_id
		WHERE t2.Time_of_day = "Morning" INTERSECT
		  SELECT t1.owner
		  FROM program AS t1
		  JOIN broadcast AS t2 ON t1.program_id = t2.program_id WHERE t2.Time_of_day = "Night"

	Empty DataFrame
	Columns: [owner]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `owner`
		FROM
		  (SELECT *
		   FROM `program` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `broadcast`
		           WHERE (`time_of_day` != 'Morning'
		                  AND `time_of_day` = 'Night')) AS RHS
		        WHERE (LHS.program_id = RHS.program_id) ))
		ORDER BY OWNER

	                             owner
	0    Beijing Television (BTV)aF9OO
	1  Hunan Broadcasting System (HBS)
	2    YcY(2Beijing Television (BTV)
	3     waz)hI7mHQMJUDy5iIWrsmRpMsgt
Wrong output for fuzzied solution in instance spider/program_share/0011 (3254)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       time_of_day
		FROM broadcast
		GROUP BY time_of_day

	    count(*)    time_of_day
	0          1     3RdNoonk70
	1          1  6dhMorningIg7
	2          1   INw8RMorning
	3          1         Mornin
	4          1   Morning3fAjO
	5          1   Morning8YrAd
	6          1      NoonOrdWh
	7          1  QeJMorningQqv
	8          1   WiOwsMorning
	9          1     XDWNoonnxS
	10         1     bCrNoonicr
	11         1      bpn6tNoon
	12         1   dkPxCMorning
	13         1      f 7)iNoon
	14         1         orning
	15         1  uDlMorningA8v
	16         1   vjOXBMorning
	17         1  yYbMorningJTH
	18         2            Noo
	19         4        Morning
	20        12           Noon
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       time_of_day
		FROM
		  (SELECT time_of_day,
		          COUNT() AS n
		   FROM
		     (SELECT channel_id,
		             time_of_day,
		             COUNT() AS n
		      FROM broadcast
		      GROUP BY channel_id,
		               time_of_day)
		   GROUP BY time_of_day)
		ORDER BY count___

	    count___    time_of_day
	0          1     3RdNoonk70
	1          1  6dhMorningIg7
	2          1   INw8RMorning
	3          1         Mornin
	4          1   Morning3fAjO
	5          1   Morning8YrAd
	6          1      NoonOrdWh
	7          1  QeJMorningQqv
	8          1   WiOwsMorning
	9          1     XDWNoonnxS
	10         1     bCrNoonicr
	11         1      bpn6tNoon
	12         1   dkPxCMorning
	13         1      f 7)iNoon
	14         1         orning
	15         1  uDlMorningA8v
	16         1   vjOXBMorning
	17         1  yYbMorningJTH
	18         2            Noo
	19         3        Morning
	20         6           Noon
Wrong output for fuzzied solution in instance spider/program_share/0010 (3255)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM channel AS t1
		JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id
		WHERE t2.time_of_day = 'Morning' INTERSECT
		  SELECT t1.name
		  FROM channel AS t1
		  JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Night'

	           name
	0         CCTV-
	1  VPJCCTV-1YbX
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`channel_id` AS `channel_id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`owner` AS `owner`,
		          `LHS`.`share_in_percent` AS `share_in_percent`,
		          `LHS`.`rating_in_percent` AS `rating_in_percent`,
		          `LHS`.`program_id` AS `program_id`,
		          `LHS`.`time_of_day` AS `time_of_day`,
		          `RHS`.`owner` AS `owner_other`,
		          `RHS`.`share_in_percent` AS `share_in_percent_other`,
		          `RHS`.`rating_in_percent` AS `rating_in_percent_other`,
		          `RHS`.`program_id` AS `program_id_other`,
		          `RHS`.`time_of_day` AS `time_of_day_other`
		   FROM
		     (SELECT `LHS`.`channel_id` AS `channel_id`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`owner` AS `owner`,
		             `LHS`.`share_in_percent` AS `share_in_percent`,
		             `LHS`.`rating_in_percent` AS `rating_in_percent`,
		             `RHS`.`program_id` AS `program_id`,
		             `RHS`.`time_of_day` AS `time_of_day`
		      FROM `channel` AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `broadcast`
		         WHERE (`time_of_day` = 'Morning'
		                AND `time_of_day` != 'Night')) AS `RHS` ON (`LHS`.`channel_id` = `RHS`.`channel_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT `LHS`.`channel_id` AS `channel_id`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`owner` AS `owner`,
		             `LHS`.`share_in_percent` AS `share_in_percent`,
		             `LHS`.`rating_in_percent` AS `rating_in_percent`,
		             `RHS`.`program_id` AS `program_id`,
		             `RHS`.`time_of_day` AS `time_of_day`
		      FROM `channel` AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `broadcast`
		         WHERE (`time_of_day` = 'Morning'
		                AND `time_of_day` != 'Night')) AS RHS ON (LHS.channel_id = RHS.channel_id)) AS RHS ON (LHS.program_id = RHS.channel_id
		                                                                                                       AND LHS.name = RHS.name))
		ORDER BY name

	                name
	0  Anhui Satellite T
	1  Anhui Satellite T
	2  Anhui Satellite T
	3  Anhui Satellite T
	4  Anhui Satellite T
	5       VPJCCTV-1YbX
	6       VPJCCTV-1YbX
	7       VPJCCTV-1YbX
Wrong output for fuzzied solution in instance spider/allergy_1/0033 (3257)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Has_allergy
		WHERE Allergy = "Cat"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `allergy`,
		          COUNT() AS `n`
		   FROM `has_allergy`
		   GROUP BY `allergy`)
		WHERE (`allergy` = 'Cat')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/allergy_1/0037 (3258)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Has_allergy AS T1
		JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy
		WHERE T2.allergytype = "food"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`allergy` AS `allergy`,
		          `RHS`.`allergytype` AS `allergytype`
		   FROM `has_allergy` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `allergy_type`
		      WHERE (`allergytype` = 'food')) AS RHS ON (LHS.allergy = RHS.allergy))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/allergy_1/0036 (3260)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM has_allergy AS T1
		JOIN Student AS T2 ON T1.StuID = T2.StuID
		WHERE T2.sex = "F"
		  AND T1.allergy = "Milk"
		  OR T1.allergy = "Eggs"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT *
		   FROM `has_allergy` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `student`
		           WHERE (`sex` != 'F')) AS `RHS`
		        WHERE (`LHS`.`stuid` = `RHS`.`stuid`) ))
		WHERE (`allergy` = 'Milk'
		       OR `allergy` = 'Eggs')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/allergy_1/0038 (3264)
	EXPECTED OUTPUT ====

		SELECT Allergy
		FROM Has_allergy
		GROUP BY Allergy
		ORDER BY count(*) DESC
		LIMIT 1

	  allergy
	0      og
	ACTUAL OUTPUT ====

		
		SELECT allergy
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT allergy,
		                COUNT() AS n
		         FROM has_allergy
		         GROUP BY allergy)
		      ORDER BY allergy DESC)
		   LIMIT 1)

	       allergy
	0  rass Pollen
Wrong output for fuzzied solution in instance spider/allergy_1/0027 (3266)
	EXPECTED OUTPUT ====

		SELECT major
		FROM Student
		GROUP BY major
		ORDER BY count(*) DESC
		LIMIT 1

	   major
	0    600
	ACTUAL OUTPUT ====

		
		SELECT major
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT fname,
		                major,
		                COUNT() AS n
		         FROM student
		         GROUP BY fname,
		                  major)
		      ORDER BY fname)
		   LIMIT 1)

	   major
	0    599
Error while executing solution for instance spider/allergy_1/0048 (3267)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `stuid`) OVER () AS `count___`
FROM
  (SELECT `LHS`.`allergy` AS `allergy`,
          `LHS`.`allergytype` AS `allergytype`,
          `LHS`.`stuid` AS `stuid`,
          `LHS`.`lname` AS `lname`,
          `LHS`.`fname` AS `fname`,
          `LHS`.`age` AS `age`,
          `LHS`.`sex` AS `sex`,
          `LHS`.`major` AS `major`,
          `LHS`.`advisor` AS `advisor`,
          `LHS`.`city_code` AS `city_code`
   FROM
     (SELECT `LHS`.`allergy` AS `allergy`,
             `LHS`.`allergytype` AS `allergytype`,
             `LHS`.`stuid` AS `stuid`,
             `RHS`.`lname` AS `lname`,
             `RHS`.`fname` AS `fname`,
             `RHS`.`age` AS `age`,
             `RHS`.`sex` AS `sex`,
             `RHS`.`major` AS `major`,
             `RHS`.`advisor` AS `advisor`,
             `RHS`.`city_code` AS `city_code`
      FROM
        (SELECT `LHS`.`allergy` AS `allergy`,
                `LHS`.`allergytype` AS `allergytype`,
                `RHS`.`stuid` AS `stuid`
         FROM `allergy_type` AS `LHS`
         INNER JOIN `has_allergy` AS `RHS` ON (`LHS`.`allergy` = `RHS`.`allergy`)) AS `LHS`
      INNER JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`
   INNER JOIN
     (SELECT *
      FROM `allergy_type`
      WHERE (`allergytype` != 'food'
             AND `allergytype` != 'animal')) AS RHS ON (LHS.allergy = RHS.allergy
                                                        AND LHS.allergytype = RHS.allergytype))
WHERE (stuid != 18
       AND age != 18)
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/allergy_1/0022 (3268)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Student
		WHERE city_code = "HKG"
		  OR city_code = "CHI"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `student`
		WHERE (`city_code` = 'HKG'
		       OR `city_code` = 'CHI')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/allergy_1/0032 (3278)
	EXPECTED OUTPUT ====

		SELECT advisor
		FROM Student
		GROUP BY advisor
		ORDER BY count(*) DESC
		LIMIT 1

	   advisor
	0     8723
	ACTUAL OUTPUT ====

		
		SELECT advisor
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT advisor,
		                age,
		                COUNT() AS n
		         FROM student
		         GROUP BY advisor,
		                  age)
		      ORDER BY n DESC)
		   LIMIT 1)

	   advisor
	0     7134
Wrong output for fuzzied solution in instance spider/allergy_1/0018 (3280)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Student
		WHERE age = 18

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM student
		WHERE (age = 18)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance spider/allergy_1/0041 (3281)
Wrong output for fuzzied solution in instance spider/allergy_1/0020 (3283)
	EXPECTED OUTPUT ====

		SELECT city_code
		FROM Student
		WHERE LName = "Kim"

	  city_code
	0       NYC
	1       NYC
	2        YC
	3  ufUBphWz
	ACTUAL OUTPUT ====

		
		SELECT `city_code`
		FROM
		  (SELECT `city_code`
		   FROM `student` INTERSECT SELECT `city_code`
		   FROM `student`
		   WHERE (`lname` = 'Kim'))
		ORDER BY city_code

	  city_code
	0       NYC
	1        YC
	2  ufUBphWz
Wrong output for fuzzied solution in instance spider/allergy_1/0007 (3285)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Allergy_type
		WHERE allergytype = "animal"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `allergytype`,
		          COUNT() AS `n`
		   FROM `allergy_type`
		   GROUP BY `allergytype`)
		WHERE (`allergytype` = 'animal')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Wrong output for base solution in instance spider/allergy_1/0023 (3289)
	EXPECTED OUTPUT ====

	   min_age_   avg_age_  max_age_
	0        16  19.558824        27
	ACTUAL OUTPUT ====

		SELECT min(age),
		       avg(age),
		       max(age)
		FROM Student

	   min(age)   avg(age)  max(age)
	0        16  19.558824        27
Wrong output for ground truth in instance spider/allergy_1/0023 (3289)
No solution for instance spider/allergy_1/0043 (3291)
Wrong output for fuzzied solution in instance spider/allergy_1/0046 (3292)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Student
		WHERE sex = "M"
		  AND StuID IN
		    (SELECT StuID
		     FROM Has_allergy AS T1
		     JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy
		     WHERE T2.allergytype = "food")

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT `allergytype`,
		          `sex`,
		          COUNT(DISTINCT `stuid`) AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`allergy` AS `allergy`,
		             `LHS`.`allergytype` AS `allergytype`,
		             `LHS`.`stuid` AS `stuid`,
		             `RHS`.`lname` AS `lname`,
		             `RHS`.`fname` AS `fname`,
		             `RHS`.`age` AS `age`,
		             `RHS`.`sex` AS `sex`,
		             `RHS`.`major` AS `major`,
		             `RHS`.`advisor` AS `advisor`,
		             `RHS`.`city_code` AS `city_code`
		      FROM
		        (SELECT `LHS`.`allergy` AS `allergy`,
		                `LHS`.`allergytype` AS `allergytype`,
		                `RHS`.`stuid` AS `stuid`
		         FROM `allergy_type` AS `LHS`
		         INNER JOIN `has_allergy` AS `RHS` ON (`LHS`.`allergy` = `RHS`.`allergy`)) AS `LHS`
		      INNER JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`))
		   GROUP BY `allergytype`,
		            `sex`)
		WHERE (`sex` = 'M'
		       AND `allergytype` = 'food')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/allergy_1/0009 (3295)
	EXPECTED OUTPUT ====

		SELECT allergytype
		FROM Allergy_type
		GROUP BY allergytype
		ORDER BY count(*) DESC
		LIMIT 1

	     allergytype
	0  environmental
	ACTUAL OUTPUT ====

		
		SELECT allergytype
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT allergy,
		                allergytype,
		                COUNT() AS n
		         FROM allergy_type
		         GROUP BY allergy,
		                  allergytype)
		      ORDER BY allergytype DESC)
		   LIMIT 1)

	           allergytype
	0  tJoenvironmentalVGB
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Wrong output for base solution in instance spider/allergy_1/0044 (3300)
	EXPECTED OUTPUT ====

	    avg_age_
	0  18.333333
	ACTUAL OUTPUT ====

		SELECT avg(age)
		FROM Student
		WHERE StuID IN
		    (SELECT T1.StuID
		     FROM Has_allergy AS T1
		     JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy
		     WHERE T2.allergytype = "food" INTERSECT
		       SELECT T1.StuID
		       FROM Has_allergy AS T1
		       JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "animal")

	    avg(age)
	0  18.333333
Wrong output for ground truth in instance spider/allergy_1/0044 (3300)
Wrong output for fuzzied solution in instance spider/e_learning/0002 (3307)
	EXPECTED OUTPUT ====

		SELECT course_description
		FROM COURSES
		WHERE course_name = "database"

	      course_description
	0  13 HBa1DBTg)sUyBIWYVU
	1                English
	2                English
	3           EnglishI6oqg
	ACTUAL OUTPUT ====

		
		SELECT `course_description`
		FROM
		  (SELECT `course_description`
		   FROM `courses`
		   WHERE (`course_name` = 'database') INTERSECT
		     SELECT `course_description`
		     FROM `courses` WHERE (`course_name` = 'database'))
		ORDER BY course_description

	      course_description
	0  13 HBa1DBTg)sUyBIWYVU
	1                English
	2           EnglishI6oqg
Error while executing solution for instance spider/e_learning/0039 (3311)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT student_id) OVER () AS count___
FROM
  (SELECT *
   FROM students AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM student_course_enrolment AS RHS
        WHERE (LHS.student_id = RHS.student_id) ))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/e_learning/0038 (3312)
	EXPECTED OUTPUT ====

		SELECT personal_name
		FROM Students
		EXCEPT
		SELECT T1.personal_name
		FROM Students AS T1
		JOIN Student_Course_Enrolment AS T2 ON T1.student_id = T2.student_id

	    personal_name
	0        2l6l7DLD
	1   92BMarielaxjM
	2     DaTuuWilson
	3          Kryste
	4    Krystels057a
	5         Mariela
	6     WilsonYZMk5
	7           ilson
	8        oZJk)3G)
	9    rUgPEKrystel
	10         rystel
	11    se6Bq20xhWj
	12    u9vREWilson
	13    yuo6KWilson
	ACTUAL OUTPUT ====

		
		SELECT personal_name
		FROM
		  (SELECT *
		   FROM students AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM student_course_enrolment AS RHS
		        WHERE (LHS.student_id = RHS.student_id) ))
		ORDER BY personal_name

	    personal_name
	0        2l6l7DLD
	1   92BMarielaxjM
	2     DaTuuWilson
	3          Kryste
	4    Krystels057a
	5         Mariela
	6         Mariela
	7          Prince
	8          Wilson
	9     WilsonYZMk5
	10          ilson
	11          ilson
	12          ilson
	13       oZJk)3G)
	14   rUgPEKrystel
	15         rystel
	16    se6Bq20xhWj
	17    u9vREWilson
	18    yuo6KWilson
Wrong output for fuzzied solution in instance spider/e_learning/0027 (3314)
	EXPECTED OUTPUT ====

		SELECT T1.course_name
		FROM Courses AS T1
		JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id
		GROUP BY T1.course_name
		ORDER BY COUNT(*) DESC
		LIMIT 1

	    course_name
	0  SpanishMbehq
	ACTUAL OUTPUT ====

		
		SELECT course_name
		FROM
		  (SELECT course_name,
		          student_id,
		          COUNT() AS n
		   FROM
		     (SELECT course_id,
		             author_id,
		             subject_id,
		             course_name,
		             course_description,
		             student_id,
		             date_of_enrolment,
		             date_of_completion,
		             subject_id AS registration_id
		      FROM
		        (SELECT author_id AS course_id,
		                author_id,
		                subject_id,
		                course_name,
		                course_description,
		                student_id,
		                date_of_enrolment,
		                date_of_completion
		         FROM
		           (SELECT LHS.course_id AS course_id,
		                   LHS.author_id AS author_id,
		                   LHS.subject_id AS subject_id,
		                   LHS.course_name AS course_name,
		                   LHS.course_description AS course_description,
		                   RHS.student_id AS student_id,
		                   RHS.date_of_enrolment AS date_of_enrolment,
		                   RHS.date_of_completion AS date_of_completion
		            FROM courses AS LHS
		            INNER JOIN student_course_enrolment AS RHS ON (LHS.author_id = RHS.course_id
		                                                              AND LHS.subject_id = RHS.registration_id))))
		   GROUP BY course_name,
		            student_id)
		ORDER BY course_name

	Empty DataFrame
	Columns: [course_name]
	Index: []
Wrong output for fuzzied solution in instance spider/e_learning/0030 (3316)
	EXPECTED OUTPUT ====

		SELECT T1.course_name,
		       COUNT(*)
		FROM Courses AS T1
		JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id
		GROUP BY T1.course_name

	    course_name  count(*)
	0       Spanish         1
	1             A         2
	2        Spanis         2
	3      wS1AIhT          3
	4            AI         4
	5  SpanishMbehq         4
	ACTUAL OUTPUT ====

		
		SELECT course_description AS course_name,
		       n AS count___
		FROM
		  (SELECT author_id,
		          course_description,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.course_id AS course_id,
		             LHS.author_id AS author_id,
		             LHS.subject_id AS subject_id,
		             LHS.course_name AS course_name,
		             LHS.course_description AS course_description,
		             RHS.registration_id AS registration_id,
		             RHS.student_id AS student_id,
		             RHS.date_of_enrolment AS date_of_enrolment,
		             RHS.date_of_completion AS date_of_completion
		      FROM courses AS LHS
		      INNER JOIN student_course_enrolment AS RHS ON (LHS.course_id = RHS.course_id))
		   GROUP BY author_id,
		            course_description)
		ORDER BY course_name

	             course_name  count___
	0                     AI         1
	1      FIymodern Artsjv3         1
	2             odern Arts         1
	3                Spanish         2
	4                Spanish         2
	5  mxfhcmachine learning         2
	6           (4WvDSpanish         3
	7           Spanish3UNZE         4
No solution for instance spider/e_learning/0013 (3317)
Wrong output for fuzzied solution in instance spider/e_learning/0004 (3319)
	EXPECTED OUTPUT ====

		SELECT address_line_1
		FROM Course_Authors_and_Tutors

	                                       address_line_1
	0   0256 Walter Meadows Suite 523\nNorbertoborough...
	1   0256 Walter Meadows Suite 523\nNorbertoborough...
	2   0256 Walter Meadows Suite 523\nNorbertoborough...
	3   61FZwnFKMDdnA1K(JNo6rJONReMzG6)CaO5oi1TGfr)NVR...
	4   67541 Osborne Creek Suite 532\nBernhardview, W...
	5         756 Monahan Mews\nSpinkashire, NJ 64230-509
	6        756 Monahan Mews\nSpinkashire, NJ 64230-5098
	7        756 Monahan Mews\nSpinkashire, NJ 64230-5098
	8        756 Monahan Mews\nSpinkashire, NJ 64230-5098
	9        756 Monahan Mews\nSpinkashire, NJ 64230-5098
	10  9rid8qEfM 6GSQUex1C(VGFiHLeL88ulzgRKiCvs2Oz6xa...
	11  G0C(G0256 Walter Meadows Suite 523\nNorbertobo...
	12  mrFTs)4ZGb0OsOiAXAZl6BorWoXF68kuaTh5r(XzyhRz8Jw()
	13  sRL4167541 Osborne Creek Suite 532\nBernhardvi...
	14  t1pj0644 Montana Hill Suite 489\nDaijamouth, C...
	15  zhY0256 Walter Meadows Suite 523\nNorbertoboro...
	ACTUAL OUTPUT ====

		
		SELECT address_line_1
		FROM
		  (SELECT address_line_1
		   FROM course_authors_and_tutors INTERSECT SELECT address_line_1
		   FROM course_authors_and_tutors)
		ORDER BY address_line_1

	                                       address_line_1
	0   0256 Walter Meadows Suite 523\nNorbertoborough...
	1   61FZwnFKMDdnA1K(JNo6rJONReMzG6)CaO5oi1TGfr)NVR...
	2   67541 Osborne Creek Suite 532\nBernhardview, W...
	3         756 Monahan Mews\nSpinkashire, NJ 64230-509
	4        756 Monahan Mews\nSpinkashire, NJ 64230-5098
	5   9rid8qEfM 6GSQUex1C(VGFiHLeL88ulzgRKiCvs2Oz6xa...
	6   G0C(G0256 Walter Meadows Suite 523\nNorbertobo...
	7   mrFTs)4ZGb0OsOiAXAZl6BorWoXF68kuaTh5r(XzyhRz8Jw()
	8   sRL4167541 Osborne Creek Suite 532\nBernhardvi...
	9   t1pj0644 Montana Hill Suite 489\nDaijamouth, C...
	10  zhY0256 Walter Meadows Suite 523\nNorbertoboro...
Wrong output for fuzzied solution in instance spider/e_learning/0032 (3325)
	EXPECTED OUTPUT ====

		SELECT T1.date_of_completion
		FROM Student_Course_Enrolment AS T1
		JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id
		WHERE T2.test_result = "Fail"

	    date_of_completion
	0  2018-03-05 15:17:33
	1  2018-03-08 07:34:11
	2  2018-03-10 20:06:21
	3  2018-03-10 20:06:21
	4  2018-03-10 20:06:21
	5  2018-03-10 20:06:21
	6  2018-03-14 01:12:49
	7  2018-03-14 08:03:18
	ACTUAL OUTPUT ====

		
		SELECT `date_of_completion`
		FROM
		  (SELECT `LHS`.`registration_id` AS `registration_id`,
		          `LHS`.`student_id` AS `student_id`,
		          `LHS`.`course_id` AS `course_id`,
		          `LHS`.`date_of_enrolment` AS `date_of_enrolment`,
		          `LHS`.`date_of_completion` AS `date_of_completion`,
		          `LHS`.`date_test_taken` AS `date_test_taken`,
		          `LHS`.`test_result` AS `test_result`
		   FROM
		     (SELECT `LHS`.`registration_id` AS `registration_id`,
		             `LHS`.`student_id` AS `student_id`,
		             `LHS`.`course_id` AS `course_id`,
		             `LHS`.`date_of_enrolment` AS `date_of_enrolment`,
		             `LHS`.`date_of_completion` AS `date_of_completion`,
		             `RHS`.`date_test_taken` AS `date_test_taken`,
		             `RHS`.`test_result` AS `test_result`
		      FROM `student_course_enrolment` AS `LHS`
		      INNER JOIN `student_tests_taken` AS `RHS` ON (`LHS`.`registration_id` = `RHS`.`registration_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `student_tests_taken`
		      WHERE (`test_result` = 'Fail')) AS RHS ON (LHS.registration_id = RHS.registration_id
		                                                 AND LHS.date_test_taken = RHS.date_test_taken
		                                                 AND LHS.test_result = RHS.test_result))
		ORDER BY date_of_completion

	    date_of_completion
	0  2018-03-05 15:17:33
	1  2018-03-08 07:34:11
	2  2018-03-10 20:06:21
	3  2018-03-10 20:06:21
	4  2018-03-10 20:06:21
	5  2018-03-10 20:06:21
	6  2018-03-10 20:06:21
	7  2018-03-10 20:06:21
	8  2018-03-14 01:12:49
	9  2018-03-14 08:03:18
Wrong output for fuzzied solution in instance spider/e_learning/0018 (3326)
	EXPECTED OUTPUT ====

		SELECT T1.login_name
		FROM Course_Authors_and_Tutors AS T1
		JOIN Courses AS T2 ON T1.author_id = T2.author_id
		WHERE T2.course_name = "advanced database"

	       login_name
	0     antonetta19
	1  marty.bergnaum
	2  marty.bergnaum
	3  marty.bergnaum
	ACTUAL OUTPUT ====

		
		SELECT `login_name`
		FROM
		  (SELECT *
		   FROM `course_authors_and_tutors` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `courses`
		           WHERE (`course_name` = 'advanced database')) AS RHS
		        WHERE (LHS.author_id = RHS.author_id) ))
		ORDER BY login_name

	       login_name
	0     antonetta19
	1  marty.bergnaum
	2  marty.bergnaum
Wrong output for fuzzied solution in instance spider/e_learning/0035 (3327)
	EXPECTED OUTPUT ====

		SELECT T1.student_id,
		       T2.login_name
		FROM Student_Course_Enrolment AS T1
		JOIN Students AS T2 ON T1.student_id = T2.student_id
		GROUP BY T1.student_id
		ORDER BY COUNT(*) DESC
		LIMIT 1

	   student_id  login_name
	0          13  bmarquardt
	ACTUAL OUTPUT ====

		
		SELECT student_id,
		       login_name
		FROM
		  (SELECT LHS.registration_id AS registration_id,
		          LHS.student_id AS student_id,
		          LHS.course_id AS course_id,
		          LHS.date_of_enrolment AS date_of_enrolment,
		          LHS.date_of_completion AS date_of_completion,
		          RHS.date_of_registration AS date_of_registration,
		          RHS.date_of_latest_logon AS date_of_latest_logon,
		          RHS.login_name AS login_name,
		          RHS.password AS password,
		          RHS.personal_name AS personal_name,
		          RHS.middle_name AS middle_name,
		          RHS.family_name AS family_name
		   FROM student_course_enrolment AS LHS
		   INNER JOIN
		     (SELECT student_id,
		             date_of_registration,
		             date_of_latest_logon,
		             login_name,
		             password,
		             personal_name,
		             middle_name,
		             family_name,
		             COUNT(*) OVER () AS n
		      FROM students) AS RHS ON (LHS.student_id = RHS.student_id
		                                   AND LHS.course_id = RHS.n))
		ORDER BY student_id

	Empty DataFrame
	Columns: [student_id, login_name]
	Index: []
Wrong output for fuzzied solution in instance spider/e_learning/0020 (3328)
	EXPECTED OUTPUT ====

		SELECT T1.personal_name,
		       T1.family_name,
		       T2.author_id
		FROM Course_Authors_and_Tutors AS T1
		JOIN Courses AS T2 ON T1.author_id = T2.author_id
		GROUP BY T2.author_id
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  personal_name family_name  author_id
	0         Dusty     Treutel          7
	ACTUAL OUTPUT ====

		
		SELECT personal_name,
		       family_name,
		       author_id
		FROM
		  (SELECT LHS.course_id AS course_id,
		          LHS.author_id AS author_id,
		          LHS.subject_id AS subject_id,
		          LHS.course_name AS course_name,
		          LHS.course_description AS course_description,
		          RHS.author_tutor_atb AS author_tutor_atb,
		          RHS.login_name AS login_name,
		          RHS.password AS password,
		          RHS.personal_name AS personal_name,
		          RHS.middle_name AS middle_name,
		          RHS.family_name AS family_name,
		          RHS.gender_mf AS gender_mf,
		          RHS.address_line_1 AS address_line_1
		   FROM courses AS LHS
		   INNER JOIN
		     (SELECT author_id,
		             author_tutor_atb,
		             login_name,
		             password,
		             personal_name,
		             middle_name,
		             family_name,
		             gender_mf,
		             address_line_1,
		             COUNT(*) OVER () AS n
		      FROM course_authors_and_tutors) AS RHS ON (LHS.author_id = RHS.author_id
		                                                    AND LHS.course_id = RHS.n))
		ORDER BY personal_name

	Empty DataFrame
	Columns: [personal_name, family_name, author_id]
	Index: []
Wrong output for fuzzied solution in instance spider/e_learning/0019 (3329)
	EXPECTED OUTPUT ====

		SELECT T1.address_line_1
		FROM Course_Authors_and_Tutors AS T1
		JOIN Courses AS T2 ON T1.author_id = T2.author_id
		WHERE T2.course_name = "operating system"
		  OR T2.course_name = "data structure"

	                                      address_line_1
	0          5284 Champlin Roads\nCassinport, WY 54636
	1          5284 Champlin Roads\nCassinport, WY 54636
	2  644 Montana Hill Suite 489\nDaijamouth, CA 195...
	3  644 Montana Hill Suite 489\nDaijamouth, CA 195...
	4  644 Montana Hill Suite 489\nDaijamouth, CA 195...
	5    99296 Keeling Courts\nNorth Audreanne, IL 28272
	6    Xn i4)4zIJ3zH7lrxERIqi)rt0drqaRBP5R8kFF6jNDXaLc
	7     sB6znqnGLdTOKePcaX5wWBazs9gUX w8uww6oBcHdUlO0S
	ACTUAL OUTPUT ====

		
		SELECT `address_line_1`
		FROM
		  (SELECT *
		   FROM `course_authors_and_tutors` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `courses`
		           WHERE (`course_name` = 'operating system'
		                  OR `course_name` = 'data structure')) AS RHS
		        WHERE (LHS.author_id = RHS.author_id) ))
		ORDER BY address_line_1

	                                      address_line_1
	0          5284 Champlin Roads\nCassinport, WY 54636
	1          5284 Champlin Roads\nCassinport, WY 54636
	2  644 Montana Hill Suite 489\nDaijamouth, CA 195...
	3  644 Montana Hill Suite 489\nDaijamouth, CA 195...
	4    99296 Keeling Courts\nNorth Audreanne, IL 28272
	5    Xn i4)4zIJ3zH7lrxERIqi)rt0drqaRBP5R8kFF6jNDXaLc
	6     sB6znqnGLdTOKePcaX5wWBazs9gUX w8uww6oBcHdUlO0S
Error while executing solution for instance spider/e_learning/0007 (3330)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT student_id) OVER () AS count_distinct_student_id_
FROM student_course_enrolment
ORDER BY count_distinct_student_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/e_learning/0021 (3333)
	EXPECTED OUTPUT ====

		SELECT T1.address_line_1,
		       T2.author_id
		FROM Course_Authors_and_Tutors AS T1
		JOIN Courses AS T2 ON T1.author_id = T2.author_id
		GROUP BY T2.author_id
		HAVING Count(*) >= 2

	                                      address_line_1  author_id
	0  0256 Walter Meadows Suite 523\nNorbertoborough...          4
	1  zING467541 Osborne Creek Suite 532\nBernhardvi...          7
	ACTUAL OUTPUT ====

		
		SELECT address_line_1,
		       author_id
		FROM
		  (SELECT address_line_1,
		          author_id,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.author_id AS author_id,
		             LHS.author_tutor_atb AS author_tutor_atb,
		             LHS.login_name AS login_name,
		             LHS.password AS password,
		             LHS.personal_name AS personal_name,
		             LHS.middle_name AS middle_name,
		             LHS.family_name AS family_name,
		             LHS.gender_mf AS gender_mf,
		             LHS.address_line_1 AS address_line_1,
		             RHS.course_id AS course_id,
		             RHS.subject_id AS subject_id,
		             RHS.course_name AS course_name,
		             RHS.course_description AS course_description
		      FROM course_authors_and_tutors AS LHS
		      INNER JOIN courses AS RHS ON (LHS.author_id = RHS.author_id))
		   GROUP BY address_line_1,
		            author_id)
		WHERE (n = 2)
		ORDER BY address_line_1

	                                      address_line_1  author_id
	0  0256 Walter Meadows Suite 523\nNorbertoborough...          4
No solution for instance spider/e_learning/0001 (3335)
Wrong output for fuzzied solution in instance spider/e_learning/0009 (3337)
	EXPECTED OUTPUT ====

		SELECT date_test_taken
		FROM Student_Tests_Taken
		WHERE test_result = "Pass"

	       date_test_taken
	0  2018-03-25 13:50:05
	1  2018-03-25 13:50:05
	2  2018-03-25 13:50:05
	3  2018-03-25 13:50:05
	4  2018-03-25 13:50:05
	5  2018-03-25 13:50:05
	6  2018-03-25 13:50:05
	7  2018-03-25 13:50:05
	ACTUAL OUTPUT ====

		
		SELECT `date_test_taken`
		FROM
		  (SELECT `LHS`.`registration_id` AS `registration_id`,
		          `LHS`.`date_test_taken` AS `date_test_taken`,
		          `LHS`.`test_result` AS `test_result`,
		          `RHS`.`test_result` AS `test_result_other`
		   FROM
		     (SELECT *
		      FROM `student_tests_taken`
		      WHERE (`test_result` = 'Pass')) AS LHS
		   INNER JOIN student_tests_taken AS RHS ON (LHS.date_test_taken = RHS.date_test_taken
		                                                AND LHS.registration_id = RHS.registration_id))
		ORDER BY date_test_taken

	        date_test_taken
	0   2018-03-25 13:50:05
	1   2018-03-25 13:50:05
	2   2018-03-25 13:50:05
	3   2018-03-25 13:50:05
	4   2018-03-25 13:50:05
	5   2018-03-25 13:50:05
	6   2018-03-25 13:50:05
	7   2018-03-25 13:50:05
	8   2018-03-25 13:50:05
	9   2018-03-25 13:50:05
	10  2018-03-25 13:50:05
	11  2018-03-25 13:50:05
	12  2018-03-25 13:50:05
	13  2018-03-25 13:50:05
	14  2018-03-25 13:50:05
	15  2018-03-25 13:50:05
	16  2018-03-25 13:50:05
	17  2018-03-25 13:50:05
	18  2018-03-25 13:50:05
Wrong output for fuzzied solution in instance spider/e_learning/0029 (3340)
	EXPECTED OUTPUT ====

		SELECT T1.course_description,
		       T1.course_name
		FROM Courses AS T1
		JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id
		GROUP BY T1.course_name
		HAVING COUNT(*) > 2

	  course_description   course_name
	0       (4WvDSpanish      wS1AIhT 
	1            Spanish            AI
	2       Spanish3UNZE  SpanishMbehq
	ACTUAL OUTPUT ====

		
		SELECT course_description,
		       course_name
		FROM
		  (SELECT course_description,
		          course_name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.course_id AS course_id,
		             LHS.author_id AS author_id,
		             LHS.subject_id AS subject_id,
		             LHS.course_name AS course_name,
		             LHS.course_description AS course_description,
		             RHS.registration_id AS registration_id,
		             RHS.student_id AS student_id,
		             RHS.date_of_enrolment AS date_of_enrolment,
		             RHS.date_of_completion AS date_of_completion
		      FROM courses AS LHS
		      INNER JOIN student_course_enrolment AS RHS ON (LHS.course_id = RHS.course_id))
		   GROUP BY course_description,
		            course_name)
		WHERE (n > 2)
		ORDER BY course_description

	  course_description   course_name
	0       (4WvDSpanish      wS1AIhT 
	1       Spanish3UNZE  SpanishMbehq
Wrong output for fuzzied solution in instance spider/e_learning/0028 (3342)
	EXPECTED OUTPUT ====

		SELECT T1.course_name
		FROM Courses AS T1
		JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id
		GROUP BY T1.course_name
		HAVING COUNT(*) = 1

	  course_name
	0     Spanish
	ACTUAL OUTPUT ====

		
		SELECT course_name
		FROM
		  (SELECT course_id,
		          author_id,
		          subject_id,
		          course_name,
		          course_description,
		          n,
		          registration_id,
		          date_of_enrolment,
		          date_of_completion,
		          course_id AS student_id
		   FROM
		     (SELECT LHS.course_id AS course_id,
		             LHS.author_id AS author_id,
		             LHS.subject_id AS subject_id,
		             LHS.course_name AS course_name,
		             LHS.course_description AS course_description,
		             LHS.n AS n,
		             RHS.registration_id AS registration_id,
		             RHS.date_of_enrolment AS date_of_enrolment,
		             RHS.date_of_completion AS date_of_completion
		      FROM
		        (SELECT course_id,
		                author_id,
		                subject_id,
		                course_name,
		                course_description,
		                COUNT(*) OVER () AS n
		         FROM courses) AS LHS
		      INNER JOIN student_course_enrolment AS RHS ON (LHS.course_id = RHS.student_id
		                                                        AND LHS.n = RHS.course_id)))
		ORDER BY course_name

	  course_name
	0     Spanish
	1     Spanish
Wrong output for fuzzied solution in instance spider/e_learning/0031 (3343)
	EXPECTED OUTPUT ====

		SELECT T1.date_of_enrolment
		FROM Student_Course_Enrolment AS T1
		JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id
		WHERE T2.test_result = "Pass"

	     date_of_enrolment
	0  2017-08-05 15:27:22
	1  2017-08-20 05:33:55
	2  2017-09-05 03:10:57
	3  2017-09-06 11:17:25
	4  2017-09-11 19:22:38
	5  2017-09-11 19:22:38
	6  2017-09-11 19:22:38
	7  2017-10-06 10:35:32
	ACTUAL OUTPUT ====

		
		SELECT `date_of_enrolment`
		FROM
		  (SELECT `LHS`.`registration_id` AS `registration_id`,
		          `LHS`.`student_id` AS `student_id`,
		          `LHS`.`course_id` AS `course_id`,
		          `LHS`.`date_of_enrolment` AS `date_of_enrolment`,
		          `LHS`.`date_of_completion` AS `date_of_completion`,
		          `LHS`.`date_test_taken` AS `date_test_taken`,
		          `LHS`.`test_result` AS `test_result`
		   FROM
		     (SELECT `LHS`.`registration_id` AS `registration_id`,
		             `LHS`.`student_id` AS `student_id`,
		             `LHS`.`course_id` AS `course_id`,
		             `LHS`.`date_of_enrolment` AS `date_of_enrolment`,
		             `LHS`.`date_of_completion` AS `date_of_completion`,
		             `RHS`.`date_test_taken` AS `date_test_taken`,
		             `RHS`.`test_result` AS `test_result`
		      FROM `student_course_enrolment` AS `LHS`
		      INNER JOIN `student_tests_taken` AS `RHS` ON (`LHS`.`registration_id` = `RHS`.`registration_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `student_tests_taken`
		      WHERE (`test_result` = 'Pass')) AS RHS ON (LHS.registration_id = RHS.registration_id
		                                                 AND LHS.date_test_taken = RHS.date_test_taken
		                                                 AND LHS.test_result = RHS.test_result))
		ORDER BY date_of_enrolment

	     date_of_enrolment
	0  2017-08-05 15:27:22
	1  2017-08-20 05:33:55
	2  2017-09-05 03:10:57
	3  2017-09-06 11:17:25
	4  2017-09-11 19:22:38
	5  2017-09-11 19:22:38
	6  2017-09-11 19:22:38
	7  2017-09-11 19:22:38
	8  2017-09-11 19:22:38
	9  2017-10-06 10:35:32
Wrong output for fuzzied solution in instance spider/aircraft/0017 (3345)
	EXPECTED OUTPUT ====

		SELECT T1.Aircraft
		FROM aircraft AS T1
		JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft
		GROUP BY T2.Winning_Aircraft
		HAVING COUNT(*) >= 2

	                     aircraft
	0   tq8GCH-53E Super Stallion
	1  K(jrcCH-53E Super Stallion
	2                    Mil Mi-2
	3                   Mil Mi-26
	4               Robinson R-22
	5          dL8(RRobinson R-22
	ACTUAL OUTPUT ====

		
		SELECT aircraft
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.aircraft_id AS aircraft_id,
		                LHS.aircraft AS aircraft,
		                LHS.description AS description,
		                LHS.max_gross_weight AS max_gross_weight,
		                LHS.total_disk_area AS total_disk_area,
		                LHS.max_disk_loading AS max_disk_loading,
		                RHS.n AS n
		         FROM aircraft AS LHS
		         CROSS JOIN
		           (SELECT COUNT() AS n
		            FROM match) AS RHS)
		      ORDER BY max_gross_weight)
		   LIMIT 2)

	                     aircraft
	0   tq8GCH-53E Super Stallion
	1          Robinson R-22wq1fj
Wrong output for fuzzied solution in instance spider/aircraft/0003 (3347)
	EXPECTED OUTPUT ====

		SELECT avg(International_Passengers)
		FROM airport

	   avg(international_passengers)
	0                   1.474527e+07
	ACTUAL OUTPUT ====

		
		SELECT meaninternational_passengers AS avg_international_passengers_
		FROM
		  (SELECT AVG(international_passengers) AS meaninternational_passengers
		   FROM
		     (SELECT airport_id,
		             international_passengers,
		             AVG(international_passengers) AS meaninternational_passengers
		      FROM airport
		      GROUP BY airport_id,
		               international_passengers))
		ORDER BY avg_international_passengers_

	   avg_international_passengers_
	0                   1.474527e+07
Wrong output for fuzzied solution in instance spider/aircraft/0022 (3348)
	EXPECTED OUTPUT ====

		SELECT t1.name,
		       t1.age
		FROM pilot AS t1
		JOIN MATCH AS t2 ON t1.pilot_id = t2.winning_pilot
		ORDER BY t1.age
		LIMIT 1

	             name  age
	0  Della Lindgren   23
	ACTUAL OUTPUT ====

		
		SELECT name,
		       age
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.pilot_id AS pilot_id,
		                LHS.name AS name,
		                LHS.age AS age,
		                RHS.round AS round,
		                RHS.location AS LOCATION,
		                RHS.country AS country,
		                RHS.date AS date,
		                RHS.fastest_qualifying AS fastest_qualifying,
		                RHS.winning_pilot AS winning_pilot,
		                RHS.winning_aircraft AS winning_aircraft
		         FROM pilot AS LHS
		         CROSS JOIN match AS RHS)
		      ORDER BY age)
		   LIMIT 1)

	            name  age
	0  Maxwell Graha   23
No solution for instance spider/aircraft/0013 (3349)
Error while executing solution for instance spider/aircraft/0006 (3350)

(sqlite3.OperationalError) no such column: col___change_2007
[SQL: 
SELECT DISTINCT MAX(transit_passengers) OVER () AS max_transit_passengers_,
                                             mintransit_passengers AS min_transit_passengers_
FROM
  (SELECT airport_id,
          airport_name,
          total_passengers,
          col___change_2007,
          international_passengers,
          domestic_passengers,
          transit_passengers,
          aircraft_movements,
          freight_metric_tonnes,
          MIN(transit_passengers) OVER () AS mintransit_passengers
   FROM airport)
ORDER BY max_transit_passengers_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/aircraft/0004 (3351)

(sqlite3.OperationalError) no such column: LHS.col___change_2007
[SQL: 
SELECT `international_passengers`,
       `domestic_passengers`
FROM
  (SELECT *
   FROM `airport` AS `LHS`
   WHERE EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM `airport`
           WHERE (`airport_name` = 'London Heathrow')) AS RHS
        WHERE (LHS.airport_id = RHS.airport_id
               AND LHS.airport_name = RHS.airport_name
               AND LHS.total_passengers = RHS.total_passengers
               AND LHS.col___change_2007 = RHS.col___change_2007
               AND LHS.international_passengers = RHS.international_passengers
               AND LHS.domestic_passengers = RHS.domestic_passengers
               AND LHS.transit_passengers = RHS.transit_passengers
               AND LHS.aircraft_movements = RHS.aircraft_movements
               AND LHS.freight_metric_tonnes = RHS.freight_metric_tonnes) ))
ORDER BY international_passengers]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/aircraft/0012 (3352)

(sqlite3.OperationalError) no such column: RHS.col___change_2007
[SQL: 
SELECT `meantotal_passengers` AS `avg_t3_total_passengers_`
FROM
  (SELECT `domestic_passengers`,
          `international_passengers`,
          AVG(`total_passengers`) AS `meantotal_passengers`
   FROM
     (SELECT `LHS`.`aircraft_id` AS `aircraft_id`,
             `LHS`.`aircraft` AS `aircraft`,
             `LHS`.`description` AS `description`,
             `LHS`.`max_gross_weight` AS `max_gross_weight`,
             `LHS`.`total_disk_area` AS `total_disk_area`,
             `LHS`.`max_disk_loading` AS `max_disk_loading`,
             `LHS`.`airport_id` AS `airport_id`,
             `LHS`.`airport_name` AS `airport_name`,
             `LHS`.`total_passengers` AS `total_passengers`,
             `LHS`.`col___change_2007` AS `col___change_2007`,
             `LHS`.`international_passengers` AS `international_passengers`,
             `LHS`.`domestic_passengers` AS `domestic_passengers`,
             `LHS`.`transit_passengers` AS `transit_passengers`,
             `LHS`.`aircraft_movements` AS `aircraft_movements`,
             `LHS`.`freight_metric_tonnes` AS `freight_metric_tonnes`,
             `LHS`.`id` AS `id`
      FROM
        (SELECT `LHS`.`aircraft_id` AS `aircraft_id`,
                `LHS`.`aircraft` AS `aircraft`,
                `LHS`.`description` AS `description`,
                `LHS`.`max_gross_weight` AS `max_gross_weight`,
                `LHS`.`total_disk_area` AS `total_disk_area`,
                `LHS`.`max_disk_loading` AS `max_disk_loading`,
                `LHS`.`airport_id` AS `airport_id`,
                `LHS`.`airport_name` AS `airport_name`,
                `LHS`.`total_passengers` AS `total_passengers`,
                `LHS`.`col___change_2007` AS `col___change_2007`,
                `LHS`.`international_passengers` AS `international_passengers`,
                `LHS`.`domestic_passengers` AS `domestic_passengers`,
                `LHS`.`transit_passengers` AS `transit_passengers`,
                `LHS`.`aircraft_movements` AS `aircraft_movements`,
                `LHS`.`freight_metric_tonnes` AS `freight_metric_tonnes`,
                `RHS`.`id` AS `id`
         FROM
           (SELECT `LHS`.`aircraft_id` AS `aircraft_id`,
                   `LHS`.`aircraft` AS `aircraft`,
                   `LHS`.`description` AS `description`,
                   `LHS`.`max_gross_weight` AS `max_gross_weight`,
                   `LHS`.`total_disk_area` AS `total_disk_area`,
                   `LHS`.`max_disk_loading` AS `max_disk_loading`,
                   `RHS`.`airport_id` AS `airport_id`,
                   `RHS`.`airport_name` AS `airport_name`,
                   `RHS`.`total_passengers` AS `total_passengers`,
                   `RHS`.`col___change_2007` AS `col___change_2007`,
                   `RHS`.`international_passengers` AS `international_passengers`,
                   `RHS`.`domestic_passengers` AS `domestic_passengers`,
                   `RHS`.`transit_passengers` AS `transit_passengers`,
                   `RHS`.`aircraft_movements` AS `aircraft_movements`,
                   `RHS`.`freight_metric_tonnes` AS `freight_metric_tonnes`
            FROM `aircraft` AS `LHS`
            CROSS JOIN `airport` AS `RHS`) AS `LHS`
         INNER JOIN `airport_aircraft` AS `RHS` ON (`LHS`.`aircraft_id` = `RHS`.`aircraft_id`
                                                       AND `LHS`.`airport_id` = `RHS`.`airport_id`)) AS `LHS`
      INNER JOIN
        (SELECT *
         FROM `aircraft`
         WHERE (`aircraft` = 'Robinson R-22')) AS RHS ON (LHS.aircraft_id = RHS.aircraft_id
                                                          AND LHS.aircraft = RHS.aircraft
                                                          AND LHS.description = RHS.description
                                                          AND LHS.max_gross_weight = RHS.max_gross_weight
                                                          AND LHS.total_disk_area = RHS.total_disk_area
                                                          AND LHS.max_disk_loading = RHS.max_disk_loading))
   GROUP BY domestic_passengers,
            international_passengers)
ORDER BY avg_t3_total_passengers_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/aircraft/0015 (3353)
No solution for instance spider/aircraft/0005 (3354)
Error while executing solution for instance spider/aircraft/0020 (3356)

(sqlite3.OperationalError) no such column: col___change_2007
[SQL: 
SELECT airport_id,
       airport_name,
       total_passengers,
       col___change_2007,
       international_passengers,
       domestic_passengers,
       transit_passengers,
       aircraft_movements,
       freight_metric_tonnes
FROM
  (SELECT *
   FROM
     (SELECT *
      FROM airport
      ORDER BY international_passengers DESC)
   LIMIT 1)]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/aircraft/0007 (3357)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM pilot
		WHERE Age >= 25

	                        name
	0             Della Lindgren
	1             Maxwell Graham
	2  Mr. Cristian Halvorson II
	3  Mr. Cristian Halvorson II
	4  Mr. Cristian Halvorson II
	5  Mr. Cristian Halvorson II
	6  Mr. Cristian Halvorson II
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT name
		   FROM pilot INTERSECT SELECT name
		   FROM pilot
		   WHERE (age >= 25))
		ORDER BY name

	                        name
	0             Della Lindgren
	1             Maxwell Graham
	2  Mr. Cristian Halvorson II
No solution for instance spider/aircraft/0021 (3358)
No solution for instance spider/aircraft/0023 (3359)
Wrong output for fuzzied solution in instance spider/aircraft/0014 (3361)
	EXPECTED OUTPUT ====

		SELECT T1.Aircraft
		FROM aircraft AS T1
		JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft
		GROUP BY T2.Winning_Aircraft
		ORDER BY COUNT(*) DESC
		LIMIT 1

	             aircraft
	0  Wbq7gMmGXSGS8S FAy
	ACTUAL OUTPUT ====

		
		SELECT aircraft
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.aircraft_id AS aircraft_id,
		                LHS.aircraft AS aircraft,
		                LHS.description AS description,
		                LHS.max_gross_weight AS max_gross_weight,
		                LHS.total_disk_area AS total_disk_area,
		                LHS.max_disk_loading AS max_disk_loading,
		                LHS.round AS round,
		                LHS.location AS LOCATION,
		                LHS.country AS country,
		                LHS.date AS date,
		                LHS.fastest_qualifying AS fastest_qualifying,
		                LHS.winning_pilot AS winning_pilot,
		                LHS.winning_aircraft AS winning_aircraft,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.aircraft_id AS aircraft_id,
		                   LHS.aircraft AS aircraft,
		                   LHS.description AS description,
		                   LHS.max_gross_weight AS max_gross_weight,
		                   LHS.total_disk_area AS total_disk_area,
		                   LHS.max_disk_loading AS max_disk_loading,
		                   RHS.round AS round,
		                   RHS.location AS LOCATION,
		                   RHS.country AS country,
		                   RHS.date AS date,
		                   RHS.fastest_qualifying AS fastest_qualifying,
		                   RHS.winning_pilot AS winning_pilot,
		                   RHS.winning_aircraft AS winning_aircraft
		            FROM aircraft AS LHS
		            CROSS JOIN match AS RHS) AS LHS
		         INNER JOIN
		           (SELECT round,
		                   LOCATION,
		                   country, date, fastest_qualifying,
		                                  winning_pilot,
		                                  winning_aircraft,
		                                  COUNT(*) OVER () AS n
		            FROM match) AS RHS ON (LHS.round = RHS.round
		                                      AND LHS.location = RHS.location
		                                      AND LHS.country = RHS.country
		                                      AND LHS.date = RHS.date
		                                      AND LHS.fastest_qualifying = RHS.fastest_qualifying
		                                      AND LHS.winning_pilot = RHS.winning_pilot
		                                      AND LHS.winning_aircraft = RHS.winning_aircraft))
		      ORDER BY max_disk_loading)
		   LIMIT 1)

	        aircraft
	0  Robinson R-22
Error while executing solution for instance spider/aircraft/0011 (3363)

(sqlite3.OperationalError) no such column: RHS.col___change_2007
[SQL: 
SELECT aircraft,
       description
FROM
  (SELECT LHS.aircraft_id AS aircraft_id,
          LHS.aircraft AS aircraft,
          LHS.description AS description,
          LHS.max_gross_weight AS max_gross_weight,
          LHS.total_disk_area AS total_disk_area,
          LHS.max_disk_loading AS max_disk_loading,
          LHS.id AS id,
          LHS.airport_id AS airport_id,
          RHS.airport_name AS airport_name,
          RHS.total_passengers AS total_passengers,
          RHS.col___change_2007 AS col___change_2007,
          RHS.international_passengers AS international_passengers,
          RHS.domestic_passengers AS domestic_passengers,
          RHS.transit_passengers AS transit_passengers,
          RHS.aircraft_movements AS aircraft_movements,
          RHS.freight_metric_tonnes AS freight_metric_tonnes
   FROM
     (SELECT LHS.aircraft_id AS aircraft_id,
             LHS.aircraft AS aircraft,
             LHS.description AS description,
             LHS.max_gross_weight AS max_gross_weight,
             LHS.total_disk_area AS total_disk_area,
             LHS.max_disk_loading AS max_disk_loading,
             RHS.id AS id,
             RHS.airport_id AS airport_id
      FROM aircraft AS LHS
      INNER JOIN airport_aircraft AS RHS ON (LHS.aircraft_id = RHS.aircraft_id)) AS LHS
   INNER JOIN
     (SELECT *
      FROM airport
      WHERE (total_passengers >= 10000000.0)) AS RHS ON (LHS.airport_id = RHS.airport_id))
ORDER BY aircraft]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/aircraft/0010 (3364)

(sqlite3.OperationalError) no such column: RHS.col___change_2007
[SQL: 
SELECT `aircraft`
FROM
  (SELECT `LHS`.`aircraft_id` AS `aircraft_id`,
          `LHS`.`aircraft` AS `aircraft`,
          `LHS`.`description` AS `description`,
          `LHS`.`max_gross_weight` AS `max_gross_weight`,
          `LHS`.`total_disk_area` AS `total_disk_area`,
          `LHS`.`max_disk_loading` AS `max_disk_loading`,
          `LHS`.`id` AS `id`,
          `LHS`.`airport_id` AS `airport_id`,
          `RHS`.`airport_name` AS `airport_name`,
          `RHS`.`total_passengers` AS `total_passengers`,
          `RHS`.`col___change_2007` AS `col___change_2007`,
          `RHS`.`international_passengers` AS `international_passengers`,
          `RHS`.`domestic_passengers` AS `domestic_passengers`,
          `RHS`.`transit_passengers` AS `transit_passengers`,
          `RHS`.`aircraft_movements` AS `aircraft_movements`,
          `RHS`.`freight_metric_tonnes` AS `freight_metric_tonnes`
   FROM
     (SELECT `LHS`.`aircraft_id` AS `aircraft_id`,
             `LHS`.`aircraft` AS `aircraft`,
             `LHS`.`description` AS `description`,
             `LHS`.`max_gross_weight` AS `max_gross_weight`,
             `LHS`.`total_disk_area` AS `total_disk_area`,
             `LHS`.`max_disk_loading` AS `max_disk_loading`,
             `RHS`.`id` AS `id`,
             `RHS`.`airport_id` AS `airport_id`
      FROM `aircraft` AS `LHS`
      INNER JOIN `airport_aircraft` AS `RHS` ON (`LHS`.`aircraft_id` = `RHS`.`aircraft_id`)) AS `LHS`
   INNER JOIN
     (SELECT *
      FROM `airport`
      WHERE (`airport_name` = 'London Gatwick')) AS RHS ON (LHS.airport_id = RHS.airport_id))
ORDER BY aircraft]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/sports_competition/0002 (3365)
	EXPECTED OUTPUT ====

		SELECT DISTINCT Region
		FROM club
		ORDER BY Region ASC

	         region
	0     A6WUSAkdj
	1        Brazil
	2      E 0vEUSA
	3  LlgBrazil1tS
	4           USA
	5      USA42S2U
	ACTUAL OUTPUT ====

		
		SELECT region
		FROM club
		ORDER BY region

	         region
	0     A6WUSAkdj
	1        Brazil
	2      E 0vEUSA
	3  LlgBrazil1tS
	4           USA
	5           USA
	6      USA42S2U
Wrong output for base solution in instance spider/sports_competition/0003 (3368)
	EXPECTED OUTPUT ====

	   avg_gold_
	0   5.833333
	ACTUAL OUTPUT ====

		SELECT avg(Gold)
		FROM club_rank

	   avg(gold)
	0   5.833333
Wrong output for ground truth in instance spider/sports_competition/0003 (3368)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Wrong output for fuzzied solution in instance spider/sports_competition/0006 (3371)
	EXPECTED OUTPUT ====

		SELECT max(Silver),
		       min(Silver)
		FROM club_rank

	   max(silver)  min(silver)
	0         7.02         1.98
	ACTUAL OUTPUT ====

		
		SELECT gold AS max_silver_,
		       rank AS min_silver_
		FROM
		  (SELECT LHS.rank AS rank,
		          LHS.club_id AS club_id,
		          LHS.gold AS gold,
		          LHS.silver AS silver,
		          LHS.bronze AS bronze,
		          LHS.total AS total
		   FROM club_rank AS LHS
		   INNER JOIN
		     (SELECT total,
		             MAX(silver) OVER () AS silver
		      FROM
		        (SELECT total,
		                MIN(silver) AS silver
		         FROM club_rank
		         GROUP BY total)) AS RHS ON (LHS.silver = RHS.silver
		                                     AND LHS.total = RHS.total))
		ORDER BY max_silver_

	   max_silver_  min_silver_
	0         3.00         3.00
	1         3.01         5.01
Wrong output for fuzzied solution in instance spider/sports_competition/0012 (3373)
	EXPECTED OUTPUT ====

		SELECT avg(T2.Points)
		FROM club AS T1
		JOIN player AS T2 ON T1.Club_ID = T2.Club_ID
		WHERE T1.name = "AIB"

	  avg(t2.points)
	0           None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(`points`) OVER () AS `avg_t2_points_`
		FROM
		  (SELECT *
		   FROM `player` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `club`
		           WHERE (`name` != 'AIB')) AS RHS
		        WHERE (LHS.club_id = RHS.club_id) ))
		ORDER BY avg_t2_points_

	Empty DataFrame
	Columns: [avg_t2_points_]
	Index: []
Wrong output for fuzzied solution in instance spider/sports_competition/0026 (3374)
	EXPECTED OUTPUT ====

		SELECT country
		FROM competition
		EXCEPT
		SELECT country
		FROM competition
		WHERE competition_type = 'Friendly'

	           country
	0         Slovenia
	1  X1ZAustraliaRi(
	2    zING4Slovenia
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `country`
		FROM
		  (SELECT *
		   FROM `competition` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT *
		              FROM `competition`
		              WHERE (`competition_type` = 'Friendly')) AS LHS
		           WHERE EXISTS
		               (SELECT 1
		                FROM competition AS RHS
		                WHERE (LHS.competition_id = RHS.competition_id
		                       AND LHS.year = RHS.year
		                       AND LHS.competition_type = RHS.competition_type
		                       AND LHS.country = RHS.country) )) AS RHS
		        WHERE (LHS.country = RHS.country
		               AND LHS.year = RHS.year) ))
		ORDER BY country

	           country
	0         Australi
	1         Slovenia
	2  X1ZAustraliaRi(
	3    zING4Slovenia
Wrong output for fuzzied solution in instance spider/sports_competition/0016 (3377)
	EXPECTED OUTPUT ====

		SELECT Competition_type
		FROM competition
		GROUP BY Competition_type
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  competition_type
	0         Friendly
	ACTUAL OUTPUT ====

		
		SELECT competition_type
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT competition_type,
		                country,
		                COUNT() AS n
		         FROM competition
		         GROUP BY competition_type,
		                  country)
		      ORDER BY competition_type)
		   LIMIT 1)

	  competition_type
	0    Bg(YSFriendly
Wrong output for fuzzied solution in instance spider/sports_competition/0019 (3380)
	EXPECTED OUTPUT ====

		SELECT POSITION
		FROM player
		WHERE Points > 20 INTERSECT
		  SELECT POSITION
		  FROM player WHERE Points < 10

	       position
	0  Right Centre
	ACTUAL OUTPUT ====

		
		SELECT POSITION
		FROM
		  (SELECT LHS.player_id AS player_id,
		          LHS.name AS name,
		          LHS.position AS POSITION,
		          LHS.club_id AS club_id,
		          LHS.apps AS apps,
		          LHS.tries AS tries,
		          LHS.goals AS goals,
		          LHS.points AS points,
		          RHS.player_id AS player_id_other,
		          RHS.name AS name_other,
		          RHS.club_id AS club_id_other,
		          RHS.apps AS apps_other,
		          RHS.goals AS goals_other,
		          RHS.points AS points_other
		   FROM player AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM player
		      WHERE (points != 20.0
		             AND points > 10.0)) AS RHS ON (LHS.position = RHS.position
		                                            AND LHS.points = RHS.tries))
		ORDER BY POSITION

	Empty DataFrame
	Columns: [position]
	Index: []
Wrong output for fuzzied solution in instance spider/sports_competition/0024 (3382)
	EXPECTED OUTPUT ====

		SELECT country
		FROM competition
		WHERE competition_type = 'Tournament'
		GROUP BY country
		ORDER BY count(*) DESC
		LIMIT 1

	         country
	0  rDESTSlovenia
	ACTUAL OUTPUT ====

		
		SELECT `country`
		FROM
		  (SELECT `competition_type`,
		          `country`,
		          COUNT() AS `n`
		   FROM `competition`
		   GROUP BY `competition_type`,
		            `country`)
		WHERE (`competition_type` = 'Tournament'
		       AND n > 1)
		ORDER BY country

	Empty DataFrame
	Columns: [country]
	Index: []
Wrong output for fuzzied solution in instance spider/sports_competition/0021 (3383)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT POSITION)
		FROM player

	   count(distinct position)
	0                         5
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count_distinct_position_
		FROM
		  (SELECT points,
		          tries,
		          COUNT(DISTINCT POSITION) AS n_distinct
		   FROM player
		   GROUP BY points,
		            tries)
		ORDER BY count_distinct_position_

	   count_distinct_position_
	0                         6
Wrong output for fuzzied solution in instance spider/sports_competition/0023 (3384)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       POSITION
		FROM player
		WHERE points < 30
		GROUP BY POSITION

	    count(*)            position
	0          1          0iuPropCuj
	1          1     IUaEYScrum Half
	2          1  Loose Forwarde8Vmd
	3          1     MwjxuTqzi7NkHsZ
	4          1     NkU7xScrum Half
	5          1    Py6Scrum Halfv)A
	6          1           Scrum Hal
	7          1     Scrum Half(Pr5B
	8          1     Scrum HalfU8AOa
	9          1     Scrum HalfbPLtn
	10         1        oose Forward
	11         2        Loose Forwar
	12         2       Loose Forward
	13         2                Prop
	14         2                 rop
	15         3          Scrum Half
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       POSITION
		FROM
		  (SELECT POSITION,
		          COUNT() AS n
		   FROM
		     (SELECT apps,
		             POSITION,
		             COUNT() AS n
		      FROM
		        (SELECT *
		         FROM player
		         WHERE (points < 30.0))
		      GROUP BY apps,
		               POSITION)
		   GROUP BY POSITION)
		ORDER BY count___

	    count___            position
	0          1          0iuPropCuj
	1          1     IUaEYScrum Half
	2          2        Loose Forwar
	3          2       Loose Forward
	4          1  Loose Forwarde8Vmd
	5          1     MwjxuTqzi7NkHsZ
	6          1     NkU7xScrum Half
	7          1                Prop
	8          1    Py6Scrum Halfv)A
	9          1           Scrum Hal
	10         3          Scrum Half
	11         1     Scrum Half(Pr5B
	12         1     Scrum HalfU8AOa
	13         1     Scrum HalfbPLtn
	14         1        oose Forward
	15         2                 rop
Wrong output for fuzzied solution in instance spider/sports_competition/0014 (3386)
	EXPECTED OUTPUT ====

		SELECT POSITION
		FROM player
		GROUP BY name
		HAVING avg(Points) >= 20

	        position
	0  Loose Forward
	ACTUAL OUTPUT ====

		
		SELECT POSITION
		FROM
		  (SELECT apps,
		          POSITION,
		          AVG(points) AS meanpoints
		   FROM
		     (SELECT *
		      FROM player
		      WHERE (points >= 20.0))
		   GROUP BY apps,
		            POSITION)
		ORDER BY POSITION

	        position
	0       Left Win
	1  Loose Forward
Wrong output for fuzzied solution in instance spider/sports_competition/0025 (3388)
	EXPECTED OUTPUT ====

		SELECT country
		FROM competition
		WHERE competition_type = 'Friendly' INTERSECT
		  SELECT country
		  FROM competition WHERE competition_type = 'Tournament'

	   country
	0  Ireland
	ACTUAL OUTPUT ====

		
		SELECT `country`
		FROM
		  (SELECT `LHS`.`competition_id` AS `competition_id`,
		          `LHS`.`year` AS `year`,
		          `LHS`.`competition_type` AS `competition_type`,
		          `LHS`.`country` AS `country`,
		          `RHS`.`competition_id` AS `competition_id_other`,
		          `RHS`.`competition_type` AS `competition_type_other`
		   FROM
		     (SELECT *
		      FROM `competition` AS `LHS`
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM `competition`
		              WHERE (`competition_type` != 'Friendly'
		                     AND `competition_type` = 'Tournament')) AS `RHS`
		           WHERE (`LHS`.`competition_id` = `RHS`.`competition_id`) )) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `competition`
		      WHERE (`competition_type` != 'Friendly'
		             AND `competition_type` = 'Tournament')) AS RHS ON (LHS.country = RHS.country
		                                                                AND LHS.year = RHS.year))
		ORDER BY country

	Empty DataFrame
	Columns: [country]
	Index: []
Wrong output for fuzzied solution in instance spider/sports_competition/0011 (3389)
	EXPECTED OUTPUT ====

		SELECT T1.name
		FROM club AS T1
		JOIN player AS T2 ON T1.Club_ID = T2.Club_ID
		WHERE T2.Position = "Right Wing"

	      name
	0  K Slide
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`club_id` AS `club_id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`region` AS `region`,
		          `LHS`.`start_year` AS `start_year`,
		          `RHS`.`name` AS `name_other`,
		          `RHS`.`position` AS `position`,
		          `RHS`.`club_id` AS `club_id_other`,
		          `RHS`.`apps` AS `apps`,
		          `RHS`.`tries` AS `tries`,
		          `RHS`.`goals` AS `goals`,
		          `RHS`.`points` AS `points`
		   FROM `club` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `player`
		      WHERE (`position` = 'Right Wing')) AS RHS ON (LHS.club_id = RHS.player_id))
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance spider/dorm_1/0042 (3391)
	EXPECTED OUTPUT ====

		SELECT T3.amenity_name
		FROM dorm AS T1
		JOIN has_amenity AS T2 ON T1.dormid = T2.dormid
		JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid
		WHERE T1.dorm_name = 'Smith Hall'

	              amenity_name
	0                 FO)xRoof
	1                 FO)xRoof
	2                 FO)xRoof
	3                 FO)xRoof
	4                 FO)xRoof
	...                    ...
	7976  ywvCarpeted RoomsUTw
	7977  ywvCarpeted RoomsUTw
	7978  ywvCarpeted RoomsUTw
	7979  ywvCarpeted RoomsUTw
	7980  ywvCarpeted RoomsUTw
	
	[7981 rows x 1 columns]
	ACTUAL OUTPUT ====

		
		SELECT `amenity_name`
		FROM
		  (SELECT `LHS`.`dormid` AS `dormid`,
		          `LHS`.`dorm_name` AS `dorm_name`,
		          `LHS`.`student_capacity` AS `student_capacity`,
		          `LHS`.`gender` AS `gender`,
		          `LHS`.`amenid` AS `amenid`,
		          `LHS`.`amenity_name` AS `amenity_name`
		   FROM
		     (SELECT `LHS`.`dormid` AS `dormid`,
		             `LHS`.`dorm_name` AS `dorm_name`,
		             `LHS`.`student_capacity` AS `student_capacity`,
		             `LHS`.`gender` AS `gender`,
		             `LHS`.`amenid` AS `amenid`,
		             `LHS`.`amenity_name` AS `amenity_name`
		      FROM
		        (SELECT `LHS`.`dormid` AS `dormid`,
		                `LHS`.`dorm_name` AS `dorm_name`,
		                `LHS`.`student_capacity` AS `student_capacity`,
		                `LHS`.`gender` AS `gender`,
		                `RHS`.`amenid` AS `amenid`,
		                `RHS`.`amenity_name` AS `amenity_name`
		         FROM `dorm` AS `LHS`
		         CROSS JOIN `dorm_amenity` AS `RHS`) AS `LHS`
		      INNER JOIN `has_amenity` AS `RHS` ON (`LHS`.`dormid` = `RHS`.`dormid`
		                                               AND `LHS`.`amenid` = `RHS`.`amenid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `dorm`
		      WHERE (`dorm_name` = 'Smith Hall')) AS RHS ON (LHS.dormid = RHS.dormid
		                                                     AND LHS.dorm_name = RHS.dorm_name
		                                                     AND LHS.student_capacity = RHS.student_capacity
		                                                     AND LHS.gender = RHS.gender))
		ORDER BY amenity_name

	              amenity_name
	0                 FO)xRoof
	1                 FO)xRoof
	2                 FO)xRoof
	3                 FO)xRoof
	4                 FO)xRoof
	...                    ...
	8194  ywvCarpeted RoomsUTw
	8195  ywvCarpeted RoomsUTw
	8196  ywvCarpeted RoomsUTw
	8197  ywvCarpeted RoomsUTw
	8198  ywvCarpeted RoomsUTw
	
	[8199 rows x 1 columns]
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Wrong output for fuzzied solution in instance spider/dorm_1/0037 (3393)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T3.dorm_name
		FROM student AS T1
		JOIN lives_in AS T2 ON T1.stuid = T2.stuid
		JOIN dorm AS T3 ON T3.dormid = T2.dormid
		WHERE T1.age > 20
		GROUP BY T3.dorm_name

	    count(*)               dorm_name
	0          1     Dorm-plex 20003cv)u
	1          2      Grad Student Asylu
	2          2     z6 NvDorm-plex 2000
	3          4  N2)TPUniversity Hovels
	4          5           Dorm-plex 200
	5          6  QIijVUniversity Hovels
	6          6    X1ZDorm-plex 2000Ri(
	7          7     Grad Student Asylum
	8         13       University Hovels
	9         14           orm-plex 2000
	10        22          Dorm-plex 2000
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___,
		       dorm_name
		FROM
		  (SELECT dorm_name,
		          dormid,
		          COUNT(DISTINCT age) AS n_distinct
		   FROM
		     (SELECT LHS.stuid AS stuid,
		             LHS.lname AS lname,
		             LHS.fname AS fname,
		             LHS.age AS age,
		             LHS.sex AS sex,
		             LHS.major AS major,
		             LHS.advisor AS advisor,
		             LHS.city_code AS city_code,
		             LHS.dormid AS dormid,
		             LHS.dorm_name AS dorm_name,
		             LHS.student_capacity AS student_capacity,
		             LHS.gender AS gender,
		             LHS.room_number AS room_number
		      FROM
		        (SELECT LHS.stuid AS stuid,
		                LHS.lname AS lname,
		                LHS.fname AS fname,
		                LHS.age AS age,
		                LHS.sex AS sex,
		                LHS.major AS major,
		                LHS.advisor AS advisor,
		                LHS.city_code AS city_code,
		                LHS.dormid AS dormid,
		                LHS.dorm_name AS dorm_name,
		                LHS.student_capacity AS student_capacity,
		                LHS.gender AS gender,
		                RHS.room_number AS room_number
		         FROM
		           (SELECT LHS.stuid AS stuid,
		                   LHS.lname AS lname,
		                   LHS.fname AS fname,
		                   LHS.age AS age,
		                   LHS.sex AS sex,
		                   LHS.major AS major,
		                   LHS.advisor AS advisor,
		                   LHS.city_code AS city_code,
		                   RHS.dormid AS dormid,
		                   RHS.dorm_name AS dorm_name,
		                   RHS.student_capacity AS student_capacity,
		                   RHS.gender AS gender
		            FROM student AS LHS
		            CROSS JOIN dorm AS RHS) AS LHS
		         INNER JOIN lives_in AS RHS ON (LHS.stuid = RHS.stuid
		                                           AND LHS.dormid = RHS.dormid)) AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM student
		         WHERE (age > 20)) AS RHS ON (LHS.stuid = RHS.stuid
		                                      AND LHS.lname = RHS.lname
		                                      AND LHS.fname = RHS.fname
		                                      AND LHS.age = RHS.age
		                                      AND LHS.sex = RHS.sex
		                                      AND LHS.major = RHS.major
		                                      AND LHS.advisor = RHS.advisor
		                                      AND LHS.city_code = RHS.city_code))
		   GROUP BY dorm_name,
		            dormid)
		ORDER BY count___

	    count___               dorm_name
	0          1          Dorm-plex 2000
	1          1          Dorm-plex 2000
	2          1     Dorm-plex 20003cv)u
	3          1     Grad Student Asylum
	4          1     Grad Student Asylum
	5          1       University Hovels
	6          1       University Hovels
	7          1       University Hovels
	8          1       University Hovels
	9          1           orm-plex 2000
	10         1     z6 NvDorm-plex 2000
	11         2           Dorm-plex 200
	12         2          Dorm-plex 2000
	13         2          Dorm-plex 2000
	14         2          Dorm-plex 2000
	15         2      Grad Student Asylu
	16         2     Grad Student Asylum
	17         2  N2)TPUniversity Hovels
	18         2  QIijVUniversity Hovels
	19         2       University Hovels
	20         2    X1ZDorm-plex 2000Ri(
	21         2           orm-plex 2000
	22         2           orm-plex 2000
Wrong output for fuzzied solution in instance spider/dorm_1/0002 (3394)
	EXPECTED OUTPUT ====

		SELECT dorm_name
		FROM dorm
		WHERE student_capacity > 300

	                     dorm_name
	0          Anonymous Donor Hal
	1          Anonymous Donor Hal
	2         Anonymous Donor Hall
	3         Anonymous Donor Hall
	4         Anonymous Donor Hall
	5         Anonymous Donor Hall
	6         Anonymous Donor Hall
	7    Anonymous Donor Hall5FDBq
	8               Bud Jones Hall
	9               Bud Jones Hall
	10              Bud Jones Hall
	11              Bud Jones Hall
	12              Bud Jones Hall
	13         Bud Jones Hallg2JVj
	14               Dorm-plex 200
	15               Dorm-plex 200
	16              Dorm-plex 2000
	17              Dorm-plex 2000
	18              Dorm-plex 2000
	19              Dorm-plex 2000
	20              Dorm-plex 2000
	21  E2nAnonymous Donor Hall9VQ
	22    FhNmNGrad Student Asylum
	23          Grad Student Asylu
	24         Grad Student Asylum
	25         Grad Student Asylum
	26         Grad Student Asylum
	27         Grad Student Asylum
	28         Grad Student Asylum
	29         Grad Student Asylum
	30         Grad Student Asylum
	31    Grad Student Asylumm3p7S
	32   TghGrad Student Asyluml2R
	33        XCgDorm-plex 20000vg
	34         ZhIqABud Jones Hall
	35        hfJDorm-plex 2000a80
	36  oH2Anonymous Donor Hallf5B
	37               orm-plex 2000
	38               orm-plex 2000
	39               orm-plex 2000
	40               orm-plex 2000
	41               ud Jones Hall
	42   vtmGrad Student AsylumtCM
	43  w07Anonymous Donor Hallyd)
	ACTUAL OUTPUT ====

		
		SELECT dorm_name
		FROM dorm
		WHERE (student_capacity >= 300)
		ORDER BY dorm_name

	                     dorm_name
	0          Anonymous Donor Hal
	1          Anonymous Donor Hal
	2         Anonymous Donor Hall
	3         Anonymous Donor Hall
	4         Anonymous Donor Hall
	5         Anonymous Donor Hall
	6         Anonymous Donor Hall
	7    Anonymous Donor Hall5FDBq
	8               Bud Jones Hall
	9               Bud Jones Hall
	10              Bud Jones Hall
	11              Bud Jones Hall
	12              Bud Jones Hall
	13              Bud Jones Hall
	14              Bud Jones Hall
	15         Bud Jones Hallg2JVj
	16               Dorm-plex 200
	17               Dorm-plex 200
	18              Dorm-plex 2000
	19              Dorm-plex 2000
	20              Dorm-plex 2000
	21              Dorm-plex 2000
	22              Dorm-plex 2000
	23              Dorm-plex 2000
	24  E2nAnonymous Donor Hall9VQ
	25    FhNmNGrad Student Asylum
	26          Grad Student Asylu
	27         Grad Student Asylum
	28         Grad Student Asylum
	29         Grad Student Asylum
	30         Grad Student Asylum
	31         Grad Student Asylum
	32         Grad Student Asylum
	33         Grad Student Asylum
	34         Grad Student Asylum
	35    Grad Student Asylumm3p7S
	36   TghGrad Student Asyluml2R
	37   UUl5aAnonymous Donor Hall
	38        XCgDorm-plex 20000vg
	39         ZhIqABud Jones Hall
	40        hfJDorm-plex 2000a80
	41  oH2Anonymous Donor Hallf5B
	42               orm-plex 2000
	43               orm-plex 2000
	44               orm-plex 2000
	45               orm-plex 2000
	46               ud Jones Hall
	47   vtmGrad Student AsylumtCM
	48  w07Anonymous Donor Hallyd)
Wrong output for fuzzied solution in instance spider/dorm_1/0036 (3395)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       T1.dormid
		FROM dorm AS T1
		JOIN has_amenity AS T2 ON T1.dormid = T2.dormid
		WHERE T1.student_capacity > 100
		GROUP BY T1.dormid

	    count(*)  dormid
	0          1     107
	1          1     111
	2          1     162
	3          2     141
	4          6     112
	5          8     139
	6         15     161
	7         20     108
	8         30     138
	9         35     110
	10        40     142
	11        40     158
	12        45     160
	13        50     109
	14        91     140
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       dormid
		FROM
		  (SELECT dormid,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.dormid AS dormid,
		             LHS.dorm_name AS dorm_name,
		             LHS.student_capacity AS student_capacity,
		             LHS.gender AS gender,
		             LHS.amenid AS amenid
		      FROM
		        (SELECT LHS.dormid AS dormid,
		                LHS.dorm_name AS dorm_name,
		                LHS.student_capacity AS student_capacity,
		                LHS.gender AS gender,
		                RHS.amenid AS amenid
		         FROM dorm AS LHS
		         INNER JOIN has_amenity AS RHS ON (LHS.dormid = RHS.dormid)) AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM dorm
		         WHERE (student_capacity > 100)) AS RHS ON (LHS.dormid = RHS.dormid
		                                                    AND LHS.dorm_name = RHS.dorm_name
		                                                    AND LHS.student_capacity = RHS.student_capacity
		                                                    AND LHS.gender = RHS.gender))
		   GROUP BY dormid)
		ORDER BY count___

	    count___  dormid
	0          1     107
	1          1     111
	2          1     162
	3          2     141
	4          6     112
	5          8     139
	6         15     161
	7         20     108
	8         30     138
	9         35     110
	10        40     142
	11        40     158
	12        45     160
	13        50     109
	14       117     140
No solution for instance spider/dorm_1/0017 (3396)
Wrong output for fuzzied solution in instance spider/dorm_1/0008 (3397)
	EXPECTED OUTPUT ====

		SELECT sum(student_capacity)
		FROM dorm

	   sum(student_capacity)
	0                  19033
	ACTUAL OUTPUT ====

		
		SELECT sumstudent_capacity AS sum_student_capacity_
		FROM
		  (SELECT SUM(student_capacity) AS sumstudent_capacity
		   FROM
		     (SELECT dormid,
		             student_capacity,
		             SUM(student_capacity) AS sumstudent_capacity
		      FROM dorm
		      GROUP BY dormid,
		               student_capacity))
		ORDER BY sum_student_capacity_

	   sum_student_capacity_
	0                  13576
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Error while executing solution for instance spider/dorm_1/0003 (3400)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT `n_distinct` AS `count___`
FROM
  (SELECT `stuid`,
          `lname`,
          `fname`,
          `age`,
          `sex`,
          `major`,
          `advisor`,
          `city_code`,
          COUNT(DISTINCT `age`) OVER () AS `n_distinct`
   FROM `student`)
WHERE (`sex` = 'F'
       OR age > 25)
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/dorm_1/0027 (3401)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       sum(student_capacity),
		       gender
		FROM dorm
		GROUP BY gender

	   count(*)  sum(student_capacity)   gender
	0         1                    116   M3cv)u
	1         1                    117  NZRX(oW
	2         1                     86  X1ZFRi(
	3         1                    129   v6fImM
	4         1                    353   z6 NvF
	5         2                    443         
	6         3                    317        M
	7         3                    297        X
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___,
		       sumstudent_capacity AS sum_student_capacity_,
		       gender
		FROM
		  (SELECT LHS.gender AS gender,
		          LHS.sumstudent_capacity AS sumstudent_capacity,
		          RHS.n_distinct AS n_distinct
		   FROM
		     (SELECT gender,
		             SUM(student_capacity) AS sumstudent_capacity
		      FROM dorm
		      GROUP BY gender) AS LHS
		   LEFT JOIN
		     (SELECT gender,
		             COUNT(DISTINCT student_capacity) AS n_distinct
		      FROM dorm
		      GROUP BY gender) AS RHS ON (LHS.gender = RHS.gender))
		ORDER BY count___

	   count___  sum_student_capacity_   gender
	0         1                    116   M3cv)u
	1         1                    117  NZRX(oW
	2         1                     86  X1ZFRi(
	3         1                    129   v6fImM
	4         1                    353   z6 NvF
	5         2                    443         
	6         2                    317        M
	7         3                    297        X
Wrong output for fuzzied solution in instance spider/dorm_1/0048 (3402)
	EXPECTED OUTPUT ====

		SELECT T1.fname,
		       T1.lname
		FROM student AS T1
		JOIN lives_in AS T2 ON T1.stuid = T2.stuid
		WHERE T2.dormid IN
		    (SELECT T3.dormid
		     FROM has_amenity AS T3
		     JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid
		     WHERE T4.amenity_name = 'TV Lounge')

	          fname lname
	0    7cVqMBruce  Smit
	1    7cVqMBruce  Smit
	2    7cVqMBruce  Smit
	3    7cVqMBruce  Smit
	4    7cVqMBruce  Smit
	..          ...   ...
	104   yY4Iant8F    pp
	105   yY4Iant8F    pp
	106   yY4Iant8F    pp
	107   yY4Iant8F    pp
	108   yY4Iant8F    pp
	
	[109 rows x 2 columns]
	ACTUAL OUTPUT ====

		
		SELECT `fname`,
		       `lname`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`amenid` AS `amenid`,
		          `LHS`.`amenity_name` AS `amenity_name`,
		          `LHS`.`dormid` AS `dormid`,
		          `RHS`.`room_number` AS `room_number`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`amenid` AS `amenid`,
		             `LHS`.`amenity_name` AS `amenity_name`,
		             `RHS`.`dormid` AS `dormid`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`amenid` AS `amenid`,
		                `RHS`.`amenity_name` AS `amenity_name`
		         FROM `student` AS `LHS`
		         CROSS JOIN `dorm_amenity` AS `RHS`) AS `LHS`
		      INNER JOIN `has_amenity` AS `RHS` ON (`LHS`.`amenid` = `RHS`.`amenid`)) AS `LHS`
		   INNER JOIN `lives_in` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                         AND `LHS`.`dormid` = `RHS`.`dormid`))
		WHERE (`amenity_name` = 'TV Lounge')
		ORDER BY fname

	          fname lname
	0    7cVqMBruce  Smit
	1    7cVqMBruce  Smit
	2    7cVqMBruce  Smit
	3    7cVqMBruce  Smit
	4    7cVqMBruce  Smit
	..          ...   ...
	331   yY4Iant8F    pp
	332   yY4Iant8F    pp
	333   yY4Iant8F    pp
	334   yY4Iant8F    pp
	335   yY4Iant8F    pp
	
	[336 rows x 2 columns]
Wrong output for base solution in instance spider/dorm_1/0030 (3404)
	EXPECTED OUTPUT ====

	    count___   avg_age_ city_code
	0          1  17.000000       DET
	1          1  17.000000       HOU
	2          1  17.000000       PEK
	3          1  18.000000       BOS
	4          1  18.000000       DAL
	5          3  18.000000       HKG
	6          1  18.000000       LOS
	7          1  18.000000       NAR
	8          4  18.500000       BAL
	9          4  19.000000       PIT
	10         3  19.666667       PHL
	11         1  20.000000       ATL
	12         1  20.000000       CHI
	13         1  20.000000       ROC
	14         3  20.333333       NYC
	15         1  21.000000       SFO
	16         3  21.666667       WAS
	17         2  22.500000       YYZ
	18         1  27.000000       LON
	ACTUAL OUTPUT ====

		SELECT count(*),
		       avg(age),
		       city_code
		FROM student
		GROUP BY city_code

	    count(*)   avg(age) city_code
	0          1  17.000000       DET
	1          1  17.000000       HOU
	2          1  17.000000       PEK
	3          1  18.000000       BOS
	4          1  18.000000       DAL
	5          3  18.000000       HKG
	6          1  18.000000       LOS
	7          1  18.000000       NAR
	8          4  18.500000       BAL
	9          4  19.000000       PIT
	10         3  19.666667       PHL
	11         1  20.000000       ATL
	12         1  20.000000       CHI
	13         1  20.000000       ROC
	14         3  20.333333       NYC
	15         1  21.000000       SFO
	16         3  21.666667       WAS
	17         2  22.500000       YYZ
	18         1  27.000000       LON
Wrong output for ground truth in instance spider/dorm_1/0030 (3404)
Wrong output for fuzzied solution in instance spider/dorm_1/0006 (3405)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM dorm

	   count(*)
	0        13
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT dorm_name,
		          student_capacity,
		          COUNT() AS n
		   FROM dorm
		   GROUP BY dorm_name,
		            student_capacity)
		ORDER BY count___

	   count___
	0        12
No solution for instance spider/dorm_1/0015 (3409)
Wrong output for fuzzied solution in instance spider/dorm_1/0016 (3411)
	EXPECTED OUTPUT ====

		SELECT dorm_name,
		       gender
		FROM dorm
		WHERE student_capacity > 300
		  OR student_capacity < 100

	                  dorm_name   gender
	0   3qYUniversity Hovels4dI        M
	1   8fEUniversity HovelsbcN  x4FM62g
	2   GFRUniversity HovelsUVZ        F
	3    J6btqUniversity Hovels        X
	4    K(BR9University Hovels        M
	..                      ...      ...
	81         niversity Hovels        M
	82         niversity Hovels        X
	83   re3UeUniversity Hovels        F
	84   rox gUniversity Hovels   X4QGy)
	85  wS1University HovelshT    MM7r2Q
	
	[86 rows x 2 columns]
	ACTUAL OUTPUT ====

		
		SELECT dorm_name,
		       gender
		FROM dorm
		WHERE (student_capacity >= 300
		       OR student_capacity <= 100)
		ORDER BY dorm_name

	                  dorm_name   gender
	0   0J2University HovelsQ9B        M
	1   3qYUniversity Hovels4dI        M
	2   8fEUniversity HovelsbcN  x4FM62g
	3   GFRUniversity HovelsUVZ        F
	4    J6btqUniversity Hovels        X
	..                      ...      ...
	88         niversity Hovels        M
	89         niversity Hovels        X
	90   re3UeUniversity Hovels        F
	91   rox gUniversity Hovels   X4QGy)
	92  wS1University HovelshT    MM7r2Q
	
	[93 rows x 2 columns]
Wrong output for fuzzied solution in instance spider/dorm_1/0045 (3414)
	EXPECTED OUTPUT ====

		SELECT T1.fname
		FROM student AS T1
		JOIN lives_in AS T2 ON T1.stuid = T2.stuid
		WHERE T2.dormid IN
		    (SELECT T2.dormid
		     FROM dorm AS T3
		     JOIN has_amenity AS T4 ON T3.dormid = T4.dormid
		     JOIN dorm_amenity AS T5 ON T4.amenid = T5.amenid
		     GROUP BY T3.dormid
		     ORDER BY count(*) DESC
		     LIMIT 1)

	           fname
	0      0J2IanQ9B
	1      0J2IanQ9B
	2      0J2IanQ9B
	3      0J2IanQ9B
	4          Arthu
	5          Arthu
	6          Arthu
	7         Arthur
	8         Arthur
	9         Arthur
	10        Arthur
	11        Arthur
	12        Arthur
	13        Arthur
	14        Arthur
	15        Arthur
	16        Arthur
	17        Arthur
	18        Arthur
	19        Arthur
	20        Arthur
	21            Ia
	22            Ia
	23            Ia
	24            Ia
	25            Ia
	26            Ia
	27            Ia
	28            Ia
	29           Ian
	30           Ian
	31           Ian
	32           Ian
	33           Ian
	34           Ian
	35           Ian
	36           Ian
	37           Ian
	38           Ian
	39           Ian
	40  MichaelwHVqK
	41  MichaelwHVqK
	42  V8RArthurX5o
	43  V8RArthurX5o
	44  V8RArthurX5o
	45  V8RArthurX5o
	46         rthur
	47         rthur
	48  ruGStevenb1e
	49  ruGStevenb1e
	50  ruGStevenb1e
	51  ruGStevenb1e
	52  ruGStevenb1e
	ACTUAL OUTPUT ====

		
		SELECT fname
		FROM
		  (SELECT *
		   FROM
		     (SELECT stuid,
		             lname,
		             fname,
		             age,
		             sex,
		             major,
		             advisor,
		             city_code,
		             COUNT(*) OVER () AS n
		      FROM student) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT LHS.dormid AS dormid,
		                  LHS.dorm_name AS dorm_name,
		                  LHS.student_capacity AS student_capacity,
		                  LHS.gender AS gender,
		                  LHS.amenid AS amenid,
		                  LHS.amenity_name AS amenity_name,
		                  LHS.stuid AS stuid,
		                  LHS.room_number AS room_number
		           FROM
		             (SELECT LHS.dormid AS dormid,
		                     LHS.dorm_name AS dorm_name,
		                     LHS.student_capacity AS student_capacity,
		                     LHS.gender AS gender,
		                     LHS.amenid AS amenid,
		                     LHS.amenity_name AS amenity_name,
		                     RHS.stuid AS stuid,
		                     RHS.room_number AS room_number
		              FROM
		                (SELECT LHS.dormid AS dormid,
		                        LHS.dorm_name AS dorm_name,
		                        LHS.student_capacity AS student_capacity,
		                        LHS.gender AS gender,
		                        RHS.amenid AS amenid,
		                        RHS.amenity_name AS amenity_name
		                 FROM dorm AS LHS
		                 CROSS JOIN dorm_amenity AS RHS) AS LHS
		              INNER JOIN lives_in AS RHS ON (LHS.dormid = RHS.dormid)) AS LHS
		           INNER JOIN
		             (SELECT *
		              FROM has_amenity
		              WHERE (dormid >= 1)) AS RHS ON (LHS.dormid = RHS.dormid
		                                              AND LHS.amenid = RHS.amenid)) AS RHS
		        WHERE (LHS.stuid = RHS.stuid) ))
		ORDER BY fname

	          fname
	0     0J2IanQ9B
	1         Arthu
	2        Arthur
	3        Arthur
	4            Ia
	5           Ian
	6  MichaelwHVqK
	7  V8RArthurX5o
	8         rthur
	9  ruGStevenb1e
No solution for instance spider/dorm_1/0018 (3415)
Wrong output for fuzzied solution in instance spider/dorm_1/0041 (3416)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM student AS T1
		JOIN lives_in AS T2 ON T1.stuid = T2.stuid
		JOIN dorm AS T3 ON T3.dormid = T2.dormid
		WHERE T3.dorm_name = 'Smith Hall'
		  AND T1.sex = 'F'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `dorm_name`,
		          `sex`,
		          COUNT() AS `n`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`dormid` AS `dormid`,
		             `LHS`.`dorm_name` AS `dorm_name`,
		             `LHS`.`student_capacity` AS `student_capacity`,
		             `LHS`.`gender` AS `gender`,
		             `RHS`.`room_number` AS `room_number`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`dormid` AS `dormid`,
		                `RHS`.`dorm_name` AS `dorm_name`,
		                `RHS`.`student_capacity` AS `student_capacity`,
		                `RHS`.`gender` AS `gender`
		         FROM `student` AS `LHS`
		         CROSS JOIN `dorm` AS `RHS`) AS `LHS`
		      INNER JOIN `lives_in` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                            AND `LHS`.`dormid` = `RHS`.`dormid`))
		   GROUP BY `dorm_name`,
		            `sex`)
		WHERE (`dorm_name` = 'Smith Hall'
		       AND `sex` = 'F')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for base solution in instance spider/dorm_1/0035 (3417)
	EXPECTED OUTPUT ====

	   avg_t1_age_             dorm_name
	0    18.000000   Grad Student Asylum
	1    18.000000     University Hovels
	2    19.600000        Dorm-plex 2000
	3    19.666667  Anonymous Donor Hall
	4    19.777778         Fawlty Towers
	5    20.000000        Bud Jones Hall
	6    20.166667            Smith Hall
	ACTUAL OUTPUT ====

		SELECT avg(T1.age),
		       T3.dorm_name
		FROM student AS T1
		JOIN lives_in AS T2 ON T1.stuid = T2.stuid
		JOIN dorm AS T3 ON T3.dormid = T2.dormid
		GROUP BY T3.dorm_name

	   avg(t1.age)             dorm_name
	0    18.000000   Grad Student Asylum
	1    18.000000     University Hovels
	2    19.600000        Dorm-plex 2000
	3    19.666667  Anonymous Donor Hall
	4    19.777778         Fawlty Towers
	5    20.000000        Bud Jones Hall
	6    20.166667            Smith Hall
Wrong output for ground truth in instance spider/dorm_1/0035 (3417)
Wrong output for fuzzied solution in instance spider/dorm_1/0020 (3418)
	EXPECTED OUTPUT ====

		SELECT lname
		FROM student
		WHERE sex = 'F'
		  AND city_code = 'BAL'
		UNION
		SELECT lname
		FROM student
		WHERE sex = 'M'
		  AND age < 20

	  lname
	0  Adam
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `lname`
		FROM
		  (SELECT *
		   FROM `student`
		   WHERE (`sex` = 'F'
		          OR `age` < 20))
		WHERE (`city_code` = 'BAL'
		       OR `sex` = 'M')
		ORDER BY lname

	   lname
	0   Adam
	1  Adams
No solution for instance spider/dorm_1/0019 (3419)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Wrong output for fuzzied solution in instance spider/dorm_1/0023 (3424)
	EXPECTED OUTPUT ====

		SELECT city_code
		FROM student
		GROUP BY city_code
		ORDER BY count(*) DESC
		LIMIT 1

	  city_code
	0       NYC
	ACTUAL OUTPUT ====

		
		SELECT city_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.lname AS lname,
		                LHS.n AS n,
		                RHS.stuid AS stuid,
		                RHS.fname AS fname,
		                RHS.age AS age,
		                RHS.sex AS sex,
		                RHS.major AS major,
		                RHS.advisor AS advisor,
		                RHS.city_code AS city_code
		         FROM
		           (SELECT lname,
		                   COUNT() AS n
		            FROM student
		            GROUP BY lname) AS LHS
		         LEFT JOIN student AS RHS ON (LHS.lname = RHS.lname))
		      ORDER BY sex)
		   LIMIT 1)

	  city_code
	0        DA
Wrong output for fuzzied solution in instance spider/dorm_1/0001 (3425)
	EXPECTED OUTPUT ====

		SELECT dorm_name
		FROM dorm
		WHERE gender = 'F'

	                  dorm_name
	0   (YoUniversity Hovels8nt
	1   8fEUniversity HovelsbcN
	2    OtJiUUniversity Hovels
	3          University Hovel
	4          University Hovel
	5          University Hovel
	6         University Hovels
	7         University Hovels
	8         University Hovels
	9         University Hovels
	10        University Hovels
	11        University Hovels
	12        University Hovels
	13        University Hovels
	14        University Hovels
	15        University Hovels
	16        University Hovels
	17        University Hovels
	18        University Hovels
	19        University Hovels
	20        University Hovels
	21        University Hovels
	22        University Hovels
	23        University Hovels
	24   University HovelsIH7qZ
	25  iYlUniversity HovelsZMY
	26         niversity Hovels
	27         niversity Hovels
	28         niversity Hovels
	ACTUAL OUTPUT ====

		
		SELECT `dorm_name`
		FROM
		  (SELECT `dorm_name`
		   FROM `dorm`
		   WHERE (`gender` = 'F') INTERSECT
		     SELECT dorm_name
		     FROM dorm)
		ORDER BY dorm_name

	                 dorm_name
	0  (YoUniversity Hovels8nt
	1  8fEUniversity HovelsbcN
	2   OtJiUUniversity Hovels
	3         University Hovel
	4        University Hovels
	5   University HovelsIH7qZ
	6  iYlUniversity HovelsZMY
	7         niversity Hovels
Wrong output for fuzzied solution in instance spider/dorm_1/0046 (3427)
	EXPECTED OUTPUT ====

		SELECT T1.dorm_name,
		       T1.student_capacity
		FROM dorm AS T1
		JOIN has_amenity AS T2 ON T1.dormid = T2.dormid
		JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid
		GROUP BY T2.dormid
		ORDER BY count(*)
		LIMIT 1

	          dorm_name  student_capacity
	0  University Hovel               116
	ACTUAL OUTPUT ====

		
		SELECT dorm_name,
		       student_capacity
		FROM
		  (SELECT LHS.dormid AS dormid,
		          LHS.dorm_name AS dorm_name,
		          LHS.student_capacity AS student_capacity,
		          LHS.gender AS gender
		   FROM dorm AS LHS
		   INNER JOIN
		     (SELECT COUNT() AS n
		      FROM
		        (SELECT LHS.amenid AS amenid,
		                LHS.amenity_name AS amenity_name,
		                RHS.dormid AS dormid
		         FROM dorm_amenity AS LHS
		         INNER JOIN has_amenity AS RHS ON (LHS.amenid = RHS.amenid))) AS RHS ON (LHS.student_capacity = RHS.n))
		ORDER BY dorm_name

	Empty DataFrame
	Columns: [dorm_name, student_capacity]
	Index: []
Wrong output for fuzzied solution in instance spider/dorm_1/0047 (3428)
	EXPECTED OUTPUT ====

		SELECT dorm_name
		FROM dorm
		EXCEPT
		SELECT T1.dorm_name
		FROM dorm AS T1
		JOIN has_amenity AS T2 ON T1.dormid = T2.dormid
		JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid
		WHERE T3.amenity_name = 'TV Lounge'

	Empty DataFrame
	Columns: [dorm_name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `dorm_name`
		FROM
		  (SELECT *
		   FROM `dorm` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `has_amenity` AS `LHS`
		           WHERE EXISTS
		               (SELECT 1
		                FROM
		                  (SELECT *
		                   FROM `dorm_amenity`
		                   WHERE (`amenity_name` = 'TV Lounge')) AS RHS
		                WHERE (LHS.amenid = RHS.amenid) )) AS RHS
		        WHERE (LHS.dormid = RHS.dormid) ))
		ORDER BY dorm_name

	           dorm_name
	0   University Hovel
	1  University Hovels
Wrong output for base solution in instance spider/dorm_1/0010 (3434)
	EXPECTED OUTPUT ====

	     avg_age_ city_code
	0   17.000000       DET
	1   17.000000       HOU
	2   17.000000       PEK
	3   18.000000       BOS
	4   18.000000       DAL
	5   18.000000       HKG
	6   18.000000       LOS
	7   18.000000       NAR
	8   18.500000       BAL
	9   19.000000       PIT
	10  19.666667       PHL
	11  20.000000       ATL
	12  20.000000       CHI
	13  20.000000       ROC
	14  20.333333       NYC
	15  21.000000       SFO
	16  21.666667       WAS
	17  22.500000       YYZ
	18  27.000000       LON
	ACTUAL OUTPUT ====

		SELECT avg(age),
		       city_code
		FROM student
		GROUP BY city_code

	     avg(age) city_code
	0   17.000000       DET
	1   17.000000       HOU
	2   17.000000       PEK
	3   18.000000       BOS
	4   18.000000       DAL
	5   18.000000       HKG
	6   18.000000       LOS
	7   18.000000       NAR
	8   18.500000       BAL
	9   19.000000       PIT
	10  19.666667       PHL
	11  20.000000       ATL
	12  20.000000       CHI
	13  20.000000       ROC
	14  20.333333       NYC
	15  21.000000       SFO
	16  21.666667       WAS
	17  22.500000       YYZ
	18  27.000000       LON
Wrong output for ground truth in instance spider/dorm_1/0010 (3434)
Wrong output for fuzzied solution in instance spider/dorm_1/0044 (3435)
	EXPECTED OUTPUT ====

		SELECT T1.amenity_name
		FROM dorm_amenity AS T1
		JOIN has_amenity AS T2 ON T1.amenid = T2.amenid
		GROUP BY T2.amenid
		ORDER BY count(*) DESC
		LIMIT 1

	          amenity_name
	0  o5JnfEthernet Ports
	ACTUAL OUTPUT ====

		
		SELECT amenity_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.amenid AS amenid,
		                LHS.n AS n,
		                RHS.amenity_name AS amenity_name
		         FROM
		           (SELECT amenid,
		                   COUNT() AS n
		            FROM has_amenity
		            GROUP BY amenid) AS LHS
		         LEFT JOIN dorm_amenity AS RHS ON (LHS.amenid = RHS.amenid))
		      ORDER BY n DESC)
		   LIMIT 1)

	      amenity_name
	0  Pub in Basement
Wrong output for fuzzied solution in instance spider/dorm_1/0040 (3436)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM student AS T1
		JOIN lives_in AS T2 ON T1.stuid = T2.stuid
		JOIN dorm AS T3 ON T3.dormid = T2.dormid
		WHERE T3.gender = 'M'

	   count(*)
	0       311
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `dorm_name`,
		          `stuid`,
		          COUNT() AS `n`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`dormid` AS `dormid`,
		             `LHS`.`dorm_name` AS `dorm_name`,
		             `LHS`.`student_capacity` AS `student_capacity`,
		             `LHS`.`gender` AS `gender`,
		             `LHS`.`room_number` AS `room_number`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `LHS`.`dormid` AS `dormid`,
		                `LHS`.`dorm_name` AS `dorm_name`,
		                `LHS`.`student_capacity` AS `student_capacity`,
		                `LHS`.`gender` AS `gender`,
		                `RHS`.`room_number` AS `room_number`
		         FROM
		           (SELECT `LHS`.`stuid` AS `stuid`,
		                   `LHS`.`lname` AS `lname`,
		                   `LHS`.`fname` AS `fname`,
		                   `LHS`.`age` AS `age`,
		                   `LHS`.`sex` AS `sex`,
		                   `LHS`.`major` AS `major`,
		                   `LHS`.`advisor` AS `advisor`,
		                   `LHS`.`city_code` AS `city_code`,
		                   `RHS`.`dormid` AS `dormid`,
		                   `RHS`.`dorm_name` AS `dorm_name`,
		                   `RHS`.`student_capacity` AS `student_capacity`,
		                   `RHS`.`gender` AS `gender`
		            FROM `student` AS `LHS`
		            CROSS JOIN `dorm` AS `RHS`) AS `LHS`
		         INNER JOIN `lives_in` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`
		                                               AND `LHS`.`dormid` = `RHS`.`dormid`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `dorm`
		         WHERE (`gender` != 'M')) AS RHS ON (LHS.dormid = RHS.dormid
		                                             AND LHS.dorm_name = RHS.dorm_name
		                                             AND LHS.student_capacity = RHS.student_capacity
		                                             AND LHS.gender = RHS.gender))
		   GROUP BY dorm_name,
		            stuid)
		ORDER BY count___

	    count___
	0          1
	1          2
	2          3
	3          4
	4          5
	5         10
	6         14
	7         15
	8         16
	9         20
	10        22
	11        23
	12        92
	13        93
	14       103
Wrong output for fuzzied solution in instance spider/dorm_1/0049 (3438)
	EXPECTED OUTPUT ====

		SELECT T1.fname,
		       T1.age
		FROM student AS T1
		JOIN lives_in AS T2 ON T1.stuid = T2.stuid
		WHERE T2.dormid NOT IN
		    (SELECT T3.dormid
		     FROM has_amenity AS T3
		     JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid
		     WHERE T4.amenity_name = 'TV Lounge')

	         fname  age
	0        David   17
	1        David   17
	2      Michael   18
	3   7cVqMBruce   19
	4    yY4Iant8F   19
	5        David   20
	6          Ian   21
	7  tv5Lindatru   21
	8  tv5Lindatru   21
	9     srAcuIan   22
	ACTUAL OUTPUT ====

		
		SELECT `fname`,
		       `age`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `LHS`.`amenid` AS `amenid`,
		                `LHS`.`amenity_name` AS `amenity_name`,
		                `RHS`.`dormid` AS `dormid`,
		                `RHS`.`room_number` AS `room_number`
		         FROM
		           (SELECT `LHS`.`stuid` AS `stuid`,
		                   `LHS`.`lname` AS `lname`,
		                   `LHS`.`fname` AS `fname`,
		                   `LHS`.`age` AS `age`,
		                   `LHS`.`sex` AS `sex`,
		                   `LHS`.`major` AS `major`,
		                   `LHS`.`advisor` AS `advisor`,
		                   `LHS`.`city_code` AS `city_code`,
		                   `RHS`.`amenid` AS `amenid`,
		                   `RHS`.`amenity_name` AS `amenity_name`
		            FROM `student` AS `LHS`
		            CROSS JOIN `dorm_amenity` AS `RHS`) AS `LHS`
		         INNER JOIN `lives_in` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`))
		      WHERE (`amenity_name` = 'TV Lounge')) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM has_amenity AS RHS
		        WHERE (LHS.amenid = RHS.amenid
		               AND LHS.dormid = RHS.dormid) ))
		ORDER BY fname

	          fname  age
	0    DavidLazmr   16
	1    DavidLazmr   16
	2    DavidLazmr   16
	3    DavidLazmr   16
	4    DavidLazmr   16
	..          ...  ...
	168    srAcuIan   22
	169    srAcuIan   22
	170    srAcuIan   22
	171    srAcuIan   22
	172    srAcuIan   22
	
	[173 rows x 2 columns]
Wrong output for base solution in instance spider/dorm_1/0031 (3439)
	EXPECTED OUTPUT ====

	    count___   avg_age_ city_code
	0          1  17.000000       DET
	1          1  17.000000       HOU
	2          1  17.000000       PEK
	3          1  18.000000       BAL
	4          1  18.000000       BOS
	5          1  18.000000       DAL
	6          1  18.000000       LOS
	7          1  18.000000       NAR
	8          1  18.000000       WAS
	9          1  19.000000       HKG
	10         3  19.333333       PIT
	11         2  19.500000       PHL
	12         1  20.000000       ATL
	13         1  20.000000       CHI
	14         1  20.000000       ROC
	15         3  20.333333       NYC
	16         2  22.500000       YYZ
	17         1  27.000000       LON
	ACTUAL OUTPUT ====

		SELECT count(*),
		       avg(age),
		       city_code
		FROM student
		WHERE sex = 'M'
		GROUP BY city_code

	    count(*)   avg(age) city_code
	0          1  17.000000       DET
	1          1  17.000000       HOU
	2          1  17.000000       PEK
	3          1  18.000000       BAL
	4          1  18.000000       BOS
	5          1  18.000000       DAL
	6          1  18.000000       LOS
	7          1  18.000000       NAR
	8          1  18.000000       WAS
	9          1  19.000000       HKG
	10         3  19.333333       PIT
	11         2  19.500000       PHL
	12         1  20.000000       ATL
	13         1  20.000000       CHI
	14         1  20.000000       ROC
	15         3  20.333333       NYC
	16         2  22.500000       YYZ
	17         1  27.000000       LON
Wrong output for ground truth in instance spider/dorm_1/0031 (3439)
No solution for instance spider/school_finance/0017 (3441)
Wrong output for fuzzied solution in instance spider/school_finance/0008 (3442)
	EXPECTED OUTPUT ====

		SELECT county,
		       count(*),
		       sum(enrollment)
		FROM school
		GROUP BY county

	                 county  count(*)  sum(enrollment)
	0   )FU71 St. JosephJ9V         1              287
	1     2i150 Marshallfq(         1       5582236468
	2    3zMxj71 St. Joseph         1       2217592518
	3            50 Marshal         1              285
	4      50 MarshallAhvYW         1       9051297394
	5      50 MarshallVIdHx         1              621
	6      50 Marshallhe(xV         1              599
	7      50 Marshallj1Otm         1       1033060556
	8             5zxJ4b8JT         1              599
	9    71 St. Joseph0KlSO         1       2929492241
	10   71 St. Joseph1u(6n         1       5332702296
	11   71 St. JosephehNOW         1       4522461433
	12   71 St. JosephkaBSv         1              607
	13             75 Stark         1              287
	14             7NLQNC9V         1       6278020336
	15   8WhDx71 St. Joseph         1              607
	16      9nL75 StarkeTnY         1              285
	17  AyE71 St. JosephcZk         1              600
	18          HCd2xxE(Brv         1              602
	19    Hu650 MarshallXNL         1              288
	20    JD950 Marshallfnl         1       7956651963
	21  LZ(71 St. Joseph(sH         1              600
	22   MNveW71 St. Joseph         1       4862053661
	23    NXK50 Marshallj5h         1              618
	24   RRH)A71 St. Joseph         1              287
	25   W8uE971 St. Joseph         1              288
	26          Wbq7gMmGXSG         1              603
	27  Y(dE5wTem7SrVTvR4tH         1              286
	28    Yfg50 MarshalltEZ         1              601
	29      Zz875 Starkercw         1              285
	30       bnzX bAhy(o0mz         1              621
	31       cM)BGx10(XwnZC         1       4191135610
	32          ckRezk znO5         1              619
	33   e2MYz71 St. Joseph         1       7958337372
	34            gCynF9lK4         1              622
	35       gxBd275 Starke         1              287
	36  iZgbkoiD)o5UGvlI649         1       2555715337
	37     jAYIV50 Marshall         1       6295545035
	38   l8hGt1)vIDW3w5ED8u         1       7228957757
	39             lATzNEbt         1              620
	40   mfT0l71 St. Joseph         1              604
	41             nYukJW3f         1              289
	42  pc571 St. JosephNjL         1        809478155
	43         pkXk3VC0PkWS         1              602
	44     pv7Gk50 Marshall         1      -7456534081
	45      rwU75 StarkeuxT         1              599
	46   vtJ9m71 St. Joseph         1              286
	47   wZOqy)Dqido575H(pa         1              287
	48         1 St. Joseph         3             1526
	49         71 St. Josep         4      -5559992727
	50           0 Marshall         5      11794973440
	51            75 Starke         6       3067632626
	52        71 St. Joseph        16       7193005578
	53          50 Marshall        17       7059618421
	ACTUAL OUTPUT ====

		
		SELECT county,
		       n_distinct AS count___,
		       sumenrollment AS sum_enrollment_
		FROM
		  (SELECT LHS.county AS county,
		          LHS.n_distinct AS n_distinct,
		          RHS.sumenrollment AS sumenrollment
		   FROM
		     (SELECT county,
		             COUNT(DISTINCT enrollment) AS n_distinct
		      FROM school
		      GROUP BY county) AS LHS
		   LEFT JOIN
		     (SELECT county,
		             SUM(enrollment) AS sumenrollment
		      FROM school
		      GROUP BY county) AS RHS ON (LHS.county = RHS.county))
		ORDER BY county

	                 county  count___  sum_enrollment_
	0   )FU71 St. JosephJ9V         1              287
	1     2i150 Marshallfq(         1       5582236468
	2    3zMxj71 St. Joseph         1       2217592518
	3            50 Marshal         1              285
	4      50 MarshallAhvYW         1       9051297394
	5      50 MarshallVIdHx         1              621
	6      50 Marshallhe(xV         1              599
	7      50 Marshallj1Otm         1       1033060556
	8             5zxJ4b8JT         1              599
	9    71 St. Joseph0KlSO         1       2929492241
	10   71 St. Joseph1u(6n         1       5332702296
	11   71 St. JosephehNOW         1       4522461433
	12   71 St. JosephkaBSv         1              607
	13             75 Stark         1              287
	14             7NLQNC9V         1       6278020336
	15   8WhDx71 St. Joseph         1              607
	16      9nL75 StarkeTnY         1              285
	17  AyE71 St. JosephcZk         1              600
	18          HCd2xxE(Brv         1              602
	19    Hu650 MarshallXNL         1              288
	20    JD950 Marshallfnl         1       7956651963
	21  LZ(71 St. Joseph(sH         1              600
	22   MNveW71 St. Joseph         1       4862053661
	23    NXK50 Marshallj5h         1              618
	24   RRH)A71 St. Joseph         1              287
	25   W8uE971 St. Joseph         1              288
	26          Wbq7gMmGXSG         1              603
	27  Y(dE5wTem7SrVTvR4tH         1              286
	28    Yfg50 MarshalltEZ         1              601
	29      Zz875 Starkercw         1              285
	30       bnzX bAhy(o0mz         1              621
	31       cM)BGx10(XwnZC         1       4191135610
	32          ckRezk znO5         1              619
	33   e2MYz71 St. Joseph         1       7958337372
	34            gCynF9lK4         1              622
	35       gxBd275 Starke         1              287
	36  iZgbkoiD)o5UGvlI649         1       2555715337
	37     jAYIV50 Marshall         1       6295545035
	38   l8hGt1)vIDW3w5ED8u         1       7228957757
	39             lATzNEbt         1              620
	40   mfT0l71 St. Joseph         1              604
	41             nYukJW3f         1              289
	42  pc571 St. JosephNjL         1        809478155
	43         pkXk3VC0PkWS         1              602
	44     pv7Gk50 Marshall         1      -7456534081
	45      rwU75 StarkeuxT         1              599
	46   vtJ9m71 St. Joseph         1              286
	47   wZOqy)Dqido575H(pa         1              287
	48         1 St. Joseph         3             1526
	49           0 Marshall         4      11794973440
	50         71 St. Josep         4      -5559992727
	51            75 Starke         5       3067632626
	52          50 Marshall        12       7059618421
	53        71 St. Joseph        14       7193005578
No solution for instance spider/school_finance/0022 (3444)
Wrong output for fuzzied solution in instance spider/school_finance/0006 (3445)
	EXPECTED OUTPUT ====

		SELECT school_name
		FROM school
		ORDER BY enrollment
		LIMIT 1

	  school_name
	0       Glenn
	ACTUAL OUTPUT ====

		
		SELECT school_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM school
		      ORDER BY mascot)
		   LIMIT 1)

	  school_name
	0     Jimtown
No solution for instance spider/school_finance/0012 (3447)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Error while executing solution for instance spider/school_finance/0016 (3450)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT YEAR) OVER () AS count___
FROM budget
WHERE (budgeted = 3000
       OR YEAR <= 2001)
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/school_finance/0020 (3452)
	EXPECTED OUTPUT ====

		SELECT sum(T1.budgeted)
		FROM budget AS T1
		JOIN school AS T2 ON T1.school_id = T2.school_id
		WHERE T2.school_name = 'Glenn'

	   sum(t1.budgeted)
	0            422902
	ACTUAL OUTPUT ====

		
		SELECT `budgeted` AS `sum_t1_budgeted_`
		FROM
		  (SELECT `LHS`.`school_id` AS `school_id`,
		          `LHS`.`school_name` AS `school_name`,
		          `LHS`.`location` AS `location`,
		          `LHS`.`mascot` AS `mascot`,
		          `LHS`.`enrollment` AS `enrollment`,
		          `LHS`.`ihsaa_class` AS `ihsaa_class`,
		          `LHS`.`ihsaa_football_class` AS `ihsaa_football_class`,
		          `LHS`.`county` AS `county`,
		          `RHS`.`budgeted` AS `budgeted`,
		          `RHS`.`total_budget_percent_budgeted` AS `total_budget_percent_budgeted`,
		          `RHS`.`sumbudgeted` AS `sumbudgeted`
		   FROM `school` AS `LHS`
		   CROSS JOIN
		     (SELECT `budgeted`,
		             `total_budget_percent_budgeted`,
		             SUM(`budgeted`) AS `sumbudgeted`
		      FROM `budget`
		      GROUP BY `budgeted`,
		               `total_budget_percent_budgeted`) AS `RHS`)
		WHERE (`school_name` = 'Glenn'
		       AND sumbudgeted != budgeted)
		ORDER BY sum_t1_budgeted_

	    sum_t1_budgeted_
	0               4980
	1               4980
	2               4980
	3               4980
	4               6805
	5               6805
	6               6805
	7               6805
	8              61283
	9              61283
	10             61283
	11             61283
	12            119527
	13            119527
	14            119527
	15            119527
	16            119527
	17            119527
	18            119527
	19            119527
	20            119528
	21            119528
	22            119528
	23            119528
	24            119529
	25            119529
	26            119529
	27            119529
No solution for instance spider/school_finance/0024 (3455)
No solution for instance spider/school_finance/0021 (3456)
Wrong output for fuzzied solution in instance spider/school_finance/0023 (3457)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM
		  (SELECT *
		   FROM endowment
		   WHERE amount > 8.5
		   GROUP BY school_id
		   HAVING count(*) > 1)

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `endowment`
		WHERE (`amount` <= '8.5')
		ORDER BY count___

	   count___
	0         3
Wrong output for fuzzied solution in instance spider/school_finance/0014 (3459)
	EXPECTED OUTPUT ====

		SELECT donator_name
		FROM endowment
		EXCEPT
		SELECT donator_name
		FROM endowment
		WHERE amount < 9

	   donator_name
	0        Duarte
	1       Peravia
	2  PeraviaO15Cv
	ACTUAL OUTPUT ====

		
		SELECT donator_name
		FROM
		  (SELECT LHS.endowment_id AS endowment_id,
		          LHS.school_id AS school_id,
		          LHS.donator_name AS donator_name,
		          LHS.amount AS amount,
		          RHS.endowment_id AS endowment_id_other,
		          RHS.school_id AS school_id_other,
		          RHS.donator_name AS donator_name_other
		   FROM endowment AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM endowment
		      WHERE (amount > 9.0)) AS RHS ON (LHS.amount = RHS.amount))
		ORDER BY donator_name

	        donator_name
	0  Distrito Nacional
	1  Distrito Nacional
	2  Distrito Nacional
	3             Duarte
	4            Peravia
	5       PeraviaO15Cv
	6       PeraviaO15Cv
	7              uarte
Wrong output for fuzzied solution in instance spider/school_finance/0009 (3460)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT T1.donator_name)
		FROM endowment AS T1
		JOIN school AS T2 ON T1.school_id = T2.school_id
		WHERE T2.school_name = "Glenn"

	   count(distinct t1.donator_name)
	0                                1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n_distinct` AS `count_distinct_t1_donator_name_`
		FROM
		  (SELECT `LHS`.`endowment_id` AS `endowment_id`,
		          `LHS`.`school_id` AS `school_id`,
		          `LHS`.`donator_name` AS `donator_name`,
		          `LHS`.`amount` AS `amount`,
		          `LHS`.`ihsaa_class` AS `ihsaa_class`,
		          `LHS`.`ihsaa_football_class` AS `ihsaa_football_class`,
		          `LHS`.`n_distinct` AS `n_distinct`,
		          `RHS`.`county` AS `county`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`endowment_id` AS `endowment_id`,
		             `LHS`.`school_id` AS `school_id`,
		             `LHS`.`donator_name` AS `donator_name`,
		             `LHS`.`amount` AS `amount`,
		             `RHS`.`ihsaa_class` AS `ihsaa_class`,
		             `RHS`.`ihsaa_football_class` AS `ihsaa_football_class`,
		             `RHS`.`n_distinct` AS `n_distinct`
		      FROM `endowment` AS `LHS`
		      CROSS JOIN
		        (SELECT `ihsaa_class`,
		                `ihsaa_football_class`,
		                COUNT(DISTINCT `school_name`) AS `n_distinct`
		         FROM `school`
		         GROUP BY `ihsaa_class`,
		                  `ihsaa_football_class`) AS `RHS`) AS `LHS`
		   INNER JOIN
		     (SELECT `county`,
		             `ihsaa_football_class`,
		             COUNT() AS `n`
		      FROM `school`
		      WHERE (`school_name` = 'Glenn')
		      GROUP BY county,
		               ihsaa_football_class) AS RHS ON (LHS.ihsaa_football_class = RHS.ihsaa_football_class))
		ORDER BY count_distinct_t1_donator_name_

	   count_distinct_t1_donator_name_
	0                                1
	1                                2
Wrong output for fuzzied solution in instance spider/school_finance/0010 (3461)
	EXPECTED OUTPUT ====

		SELECT donator_name,
		       sum(amount)
		FROM endowment
		GROUP BY donator_name
		ORDER BY sum(amount) DESC

	        donator_name  sum(amount)
	0  Distrito Nacional        17.70
	1             Duarte         9.00
	2            Peravia        17.84
	ACTUAL OUTPUT ====

		
		SELECT donator_name,
		       sumamount AS sum_amount_
		FROM
		  (SELECT donator_name,
		          endowment_id,
		          SUM(amount) AS sumamount
		   FROM endowment
		   GROUP BY donator_name,
		            endowment_id)
		ORDER BY donator_name

	        donator_name  sum_amount_
	0  Distrito Nacional         8.85
	1  Distrito Nacional         8.85
	2             Duarte         9.00
	3            Peravia         8.85
	4            Peravia         8.99
Wrong output for fuzzied solution in instance spider/voter_2/0033 (3462)
	EXPECTED OUTPUT ====

		SELECT Major
		FROM STUDENT
		GROUP BY major
		ORDER BY count(*) DESC
		LIMIT 1

	   major
	0    102
	ACTUAL OUTPUT ====

		
		SELECT major
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT major,
		                COUNT() AS n
		         FROM student
		         GROUP BY major)
		      ORDER BY n DESC)
		   LIMIT 1)

	   major
	0     50
Wrong output for fuzzied solution in instance spider/voter_2/0002 (3463)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM VOTING_RECORD

	   count(*)
	0        84
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT election_cycle,
		          stuid,
		          COUNT() AS n
		   FROM voting_record
		   GROUP BY election_cycle,
		            stuid)
		ORDER BY count___

	   count___
	0        57
Wrong output for fuzzied solution in instance spider/voter_2/0027 (3468)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.LName
		FROM STUDENT AS T1
		JOIN VOTING_RECORD AS T2 ON T1.StuID = PRESIDENT_Vote
		EXCEPT
		SELECT DISTINCT LName
		FROM STUDENT
		WHERE Advisor = "2192"

	     lname
	0  Shieber
	1     Wood
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT lname
		FROM
		  (SELECT LHS.stuid AS stuid,
		          LHS.lname AS lname,
		          LHS.fname AS fname,
		          LHS.age AS age,
		          LHS.sex AS sex,
		          LHS.major AS major,
		          LHS.advisor AS advisor,
		          LHS.city_code AS city_code,
		          RHS.stuid AS stuid_other,
		          RHS.registration_date AS registration_date,
		          RHS.election_cycle AS election_cycle,
		          RHS.vice_president_vote AS vice_president_vote,
		          RHS.secretary_vote AS secretary_vote,
		          RHS.treasurer_vote AS treasurer_vote,
		          RHS.class_president_vote AS class_president_vote,
		          RHS.class_senator_vote AS class_senator_vote
		   FROM
		     (SELECT *
		      FROM student
		      WHERE (advisor > 2192)) AS LHS
		   INNER JOIN voting_record AS RHS ON (LHS.stuid = RHS.president_vote))
		ORDER BY lname

	Empty DataFrame
	Columns: [lname]
	Index: []
Wrong output for fuzzied solution in instance spider/voter_2/0022 (3469)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM STUDENT AS T1
		JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote
		WHERE T1.Sex = "M"
		  AND T2.Election_Cycle = "Fall"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`registration_date` AS `registration_date`,
		          `LHS`.`election_cycle` AS `election_cycle`,
		          `LHS`.`president_vote` AS `president_vote`,
		          `LHS`.`vice_president_vote` AS `vice_president_vote`,
		          `LHS`.`secretary_vote` AS `secretary_vote`,
		          `LHS`.`treasurer_vote` AS `treasurer_vote`,
		          `LHS`.`class_president_vote` AS `class_president_vote`,
		          `LHS`.`class_senator_vote` AS `class_senator_vote`,
		          `RHS`.`n` AS `n`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `RHS`.`registration_date` AS `registration_date`,
		             `RHS`.`election_cycle` AS `election_cycle`,
		             `RHS`.`president_vote` AS `president_vote`,
		             `RHS`.`vice_president_vote` AS `vice_president_vote`,
		             `RHS`.`secretary_vote` AS `secretary_vote`,
		             `RHS`.`treasurer_vote` AS `treasurer_vote`,
		             `RHS`.`class_president_vote` AS `class_president_vote`,
		             `RHS`.`class_senator_vote` AS `class_senator_vote`
		      FROM `student` AS `LHS`
		      INNER JOIN `voting_record` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`
		   INNER JOIN
		     (SELECT `election_cycle`,
		             `treasurer_vote`,
		             COUNT() AS `n`
		      FROM `voting_record`
		      GROUP BY `election_cycle`,
		               `treasurer_vote`) AS `RHS` ON (`LHS`.`election_cycle` = `RHS`.`election_cycle`
		                                              AND `LHS`.`treasurer_vote` = `RHS`.`treasurer_vote`))
		WHERE (`sex` = 'M'
		       AND `election_cycle` = 'Fall')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/voter_2/0026 (3475)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.Fname
		FROM STUDENT AS T1
		JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.VICE_PRESIDENT_Vote
		EXCEPT
		SELECT DISTINCT Fname
		FROM STUDENT
		WHERE city_code = "PIT"

	        fname
	0  (4WvDTracy
	1         Mar
	2   MarkMbehq
	3        Trac
	4       Tracy
	5  lGPMarkkMe
	6  oMm1FTracy
	ACTUAL OUTPUT ====

		
		SELECT `fname`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`
		   FROM
		     (SELECT *
		      FROM `student`
		      WHERE (`city_code` != 'PIT')) AS LHS
		   INNER JOIN
		     (SELECT vice_president_vote
		      FROM voting_record INTERSECT SELECT vice_president_vote
		      FROM voting_record) AS RHS ON (LHS.stuid = RHS.vice_president_vote))
		ORDER BY fname

	        fname
	0  (4WvDTracy
	1         Mar
	2   MarkMbehq
	3        Trac
	4       Tracy
	5       Tracy
	6  lGPMarkkMe
	7  oMm1FTracy
Wrong output for fuzzied solution in instance spider/voter_2/0005 (3477)
	EXPECTED OUTPUT ====

		SELECT LName
		FROM STUDENT
		WHERE Major = 50

	Empty DataFrame
	Columns: [lname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT lname
		FROM
		  (SELECT *
		   FROM student AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM student
		           WHERE (major <= 50)) AS RHS
		        WHERE (LHS.stuid = RHS.stuid
		               AND LHS.lname = RHS.lname
		               AND LHS.fname = RHS.fname
		               AND LHS.age = RHS.age
		               AND LHS.sex = RHS.sex
		               AND LHS.major = RHS.major
		               AND LHS.advisor = RHS.advisor
		               AND LHS.city_code = RHS.city_code) ))
		ORDER BY lname

	        lname
	0  RFmjfSmith
	1       Smith
	2        rody
Wrong output for fuzzied solution in instance spider/voter_2/0032 (3479)
	EXPECTED OUTPUT ====

		SELECT Election_Cycle,
		       count(*)
		FROM VOTING_RECORD
		GROUP BY Election_Cycle

	   election_cycle  count(*)
	0      (YoFall8nt         1
	1       )YpBXFall         1
	2       2JcGIFall         1
	3     6btqGSpring         1
	4    ERwSpringx4t         1
	5       F sqGFall         1
	6       FallGsfSj         1
	7       FallOuqno         1
	8       Falljx5W)         1
	9       Fallw9Rpc         1
	10    K(BR9Spring         1
	11     MA6FallcLn         1
	12    QF67VSpring         1
	13   QpqSpringrGC         1
	14    SpringB1Efy         1
	15    SpringcNCkC         1
	16     TITFall7FE         1
	17     YMCFallMrg         1
	18      Z6gm7Fall         1
	19    bPoTqSpring         1
	20      gUdkrFall         1
	21   gXlSpringm8f         1
	22   nViSpringU)d         1
	23    p9IqtSpring         1
	24    tW3ZpSpring         1
	25    wkURsSpring         1
	26            all         2
	27          pring         2
	28            Fal         4
	29          Sprin         6
	30           Fall        22
	31         Spring        22
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT election_cycle,
		                COUNT(*) OVER () AS count___
		FROM
		  (SELECT election_cycle,
		          secretary_vote,
		          COUNT() AS n
		   FROM voting_record
		   GROUP BY election_cycle,
		            secretary_vote)
		ORDER BY election_cycle

	   election_cycle  count___
	0      (YoFall8nt        54
	1       )YpBXFall        54
	2       2JcGIFall        54
	3     6btqGSpring        54
	4    ERwSpringx4t        54
	5       F sqGFall        54
	6             Fal        54
	7            Fall        54
	8       FallGsfSj        54
	9       FallOuqno        54
	10      Falljx5W)        54
	11      Fallw9Rpc        54
	12    K(BR9Spring        54
	13     MA6FallcLn        54
	14    QF67VSpring        54
	15   QpqSpringrGC        54
	16          Sprin        54
	17         Spring        54
	18    SpringB1Efy        54
	19    SpringcNCkC        54
	20     TITFall7FE        54
	21     YMCFallMrg        54
	22      Z6gm7Fall        54
	23            all        54
	24    bPoTqSpring        54
	25      gUdkrFall        54
	26   gXlSpringm8f        54
	27   nViSpringU)d        54
	28    p9IqtSpring        54
	29          pring        54
	30    tW3ZpSpring        54
	31    wkURsSpring        54
Wrong output for fuzzied solution in instance spider/voter_2/0018 (3480)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.Advisor
		FROM STUDENT AS T1
		JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Treasurer_Vote
		WHERE T2.Election_Cycle = "Spring"

	   advisor
	0     7134
	1     7135
	2     8721
	3     8722
	4     8723
	5     9170
	6     9172
	7     9174
	ACTUAL OUTPUT ====

		
		SELECT `advisor`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`
		   FROM `student` AS `LHS`
		   INNER JOIN
		     (SELECT `treasurer_vote`
		      FROM `voting_record` INTERSECT SELECT `treasurer_vote`
		      FROM `voting_record`
		      WHERE (`election_cycle` = 'Spring')) AS RHS ON (LHS.stuid = RHS.treasurer_vote))
		ORDER BY advisor

	   advisor
	0     7134
	1     7134
	2     7135
	3     8721
	4     8722
	5     8723
	6     8723
	7     9170
	8     9172
	9     9174
Wrong output for fuzzied solution in instance spider/voter_2/0035 (3481)
	EXPECTED OUTPUT ====

		SELECT city_code
		FROM STUDENT
		GROUP BY city_code
		ORDER BY count(*) DESC
		LIMIT 1

	  city_code
	0       BOS
	ACTUAL OUTPUT ====

		
		SELECT city_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.advisor AS advisor,
		                LHS.fname AS fname,
		                LHS.n AS n,
		                RHS.stuid AS stuid,
		                RHS.lname AS lname,
		                RHS.age AS age,
		                RHS.sex AS sex,
		                RHS.major AS major,
		                RHS.city_code AS city_code
		         FROM
		           (SELECT advisor,
		                   fname,
		                   COUNT() AS n
		            FROM student
		            GROUP BY advisor,
		                     fname) AS LHS
		         LEFT JOIN student AS RHS ON (LHS.advisor = RHS.advisor
		                                         AND LHS.fname = RHS.fname))
		      ORDER BY sex DESC)
		   LIMIT 1)

	  city_code
	0  9KCz(NYC
Wrong output for fuzzied solution in instance spider/voter_2/0034 (3485)
	EXPECTED OUTPUT ====

		SELECT Major
		FROM STUDENT
		WHERE Sex = "F"
		GROUP BY major
		ORDER BY count(*) DESC
		LIMIT 1

	   major
	0    600
	ACTUAL OUTPUT ====

		
		SELECT `major`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `major`,
		                `stuid`,
		                COUNT() AS `n`
		         FROM
		           (SELECT *
		            FROM `student`
		            WHERE (`sex` = 'F'))
		         GROUP BY major,
		                  stuid)
		      ORDER BY stuid)
		   LIMIT 1)

	   major
	0    598
Wrong output for fuzzied solution in instance spider/voter_2/0024 (3486)
	EXPECTED OUTPUT ====

		SELECT avg(T1.Age)
		FROM STUDENT AS T1
		JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote
		WHERE T1.city_code = "NYC"
		  AND T2.Election_Cycle = "Spring"

	  avg(t1.age)
	0        None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `age` AS `avg_t1_age_`
		FROM
		  (SELECT `stuid`,
		          `lname`,
		          `fname`,
		          `age`,
		          `sex`,
		          `major`,
		          `advisor`,
		          `city_code`,
		          `stuid_other`,
		          `registration_date`,
		          `election_cycle`,
		          `president_vote`,
		          `vice_president_vote`,
		          `treasurer_vote`,
		          `class_president_vote`,
		          `class_senator_vote`,
		          `stuid` AS `secretary_vote`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `RHS`.`stuid` AS `stuid_other`,
		             `RHS`.`registration_date` AS `registration_date`,
		             `RHS`.`election_cycle` AS `election_cycle`,
		             `RHS`.`president_vote` AS `president_vote`,
		             `RHS`.`vice_president_vote` AS `vice_president_vote`,
		             `RHS`.`treasurer_vote` AS `treasurer_vote`,
		             `RHS`.`class_president_vote` AS `class_president_vote`,
		             `RHS`.`class_senator_vote` AS `class_senator_vote`
		      FROM `student` AS `LHS`
		      INNER JOIN `voting_record` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`secretary_vote`)))
		WHERE (`city_code` = 'NYC'
		       AND `election_cycle` != 'Spring')
		ORDER BY avg_t1_age_

	Empty DataFrame
	Columns: [avg_t1_age_]
	Index: []
Wrong output for fuzzied solution in instance spider/voter_2/0023 (3488)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM STUDENT AS T1
		JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote
		WHERE T1.city_code = "NYC"
		  AND T2.Election_Cycle = "Spring"

	   count(*)
	0        10
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `election_cycle`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`registration_date` AS `registration_date`,
		                `RHS`.`election_cycle` AS `election_cycle`,
		                `RHS`.`president_vote` AS `president_vote`,
		                `RHS`.`vice_president_vote` AS `vice_president_vote`,
		                `RHS`.`secretary_vote` AS `secretary_vote`,
		                `RHS`.`treasurer_vote` AS `treasurer_vote`,
		                `RHS`.`class_president_vote` AS `class_president_vote`,
		                `RHS`.`class_senator_vote` AS `class_senator_vote`
		         FROM `student` AS `LHS`
		         LEFT JOIN `voting_record` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`))
		      WHERE (`city_code` = 'NYC'
		             AND `election_cycle` = 'Spring')))
		ORDER BY count___

	   count___
	0         1
No solution for instance spider/voter_2/0009 (3491)
Wrong output for fuzzied solution in instance spider/voter_2/0025 (3492)
	EXPECTED OUTPUT ====

		SELECT avg(T1.Age)
		FROM STUDENT AS T1
		JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote
		WHERE T1.Sex = "F"
		  AND T2.Election_Cycle = "Spring"

	  avg(t1.age)
	0        None
	ACTUAL OUTPUT ====

		
		SELECT `meanage` AS `avg_t1_age_`
		FROM
		  (SELECT `election_cycle`,
		          `sex`,
		          AVG(`age`) AS `meanage`
		   FROM
		     (SELECT `stuid`,
		             `lname`,
		             `fname`,
		             `age`,
		             `sex`,
		             `major`,
		             `advisor`,
		             `city_code`,
		             `stuid_other`,
		             `registration_date`,
		             `election_cycle`,
		             `president_vote`,
		             `vice_president_vote`,
		             `treasurer_vote`,
		             `class_president_vote`,
		             `class_senator_vote`,
		             `stuid` AS `secretary_vote`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`stuid` AS `stuid_other`,
		                `RHS`.`registration_date` AS `registration_date`,
		                `RHS`.`election_cycle` AS `election_cycle`,
		                `RHS`.`president_vote` AS `president_vote`,
		                `RHS`.`vice_president_vote` AS `vice_president_vote`,
		                `RHS`.`treasurer_vote` AS `treasurer_vote`,
		                `RHS`.`class_president_vote` AS `class_president_vote`,
		                `RHS`.`class_senator_vote` AS `class_senator_vote`
		         FROM `student` AS `LHS`
		         INNER JOIN `voting_record` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`secretary_vote`)))
		   GROUP BY `election_cycle`,
		            `sex`)
		WHERE (`sex` = 'F'
		       AND `election_cycle` = 'Spring')
		ORDER BY avg_t1_age_

	Empty DataFrame
	Columns: [avg_t1_age_]
	Index: []
Wrong output for fuzzied solution in instance spider/voter_2/0028 (3496)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.LName
		FROM STUDENT AS T1
		JOIN VOTING_RECORD AS T2 ON T1.StuID = PRESIDENT_Vote INTERSECT
		SELECT DISTINCT LName
		FROM STUDENT
		WHERE Advisor = "8741"

	         lname
	0  kIUSmithLo5
	ACTUAL OUTPUT ====

		
		SELECT lname
		FROM
		  (SELECT LHS.stuid AS stuid,
		          LHS.lname AS lname,
		          LHS.fname AS fname,
		          LHS.age AS age,
		          LHS.sex AS sex,
		          LHS.major AS major,
		          LHS.advisor AS advisor,
		          LHS.city_code AS city_code,
		          RHS.registration_date AS registration_date,
		          RHS.election_cycle AS election_cycle,
		          RHS.president_vote AS president_vote,
		          RHS.vice_president_vote AS vice_president_vote,
		          RHS.secretary_vote AS secretary_vote,
		          RHS.treasurer_vote AS treasurer_vote,
		          RHS.class_president_vote AS class_president_vote,
		          RHS.class_senator_vote AS class_senator_vote
		   FROM
		     (SELECT *
		      FROM student
		      WHERE (advisor = 8741)) AS LHS
		   LEFT JOIN voting_record AS RHS ON (LHS.stuid = RHS.stuid))
		ORDER BY lname

	         lname
	0  kIUSmithLo5
	1  kIUSmithLo5
	2  kIUSmithLo5
	3  kIUSmithLo5
Wrong output for fuzzied solution in instance spider/voter_2/0031 (3497)
	EXPECTED OUTPUT ====

		SELECT Major
		FROM STUDENT
		GROUP BY Major
		HAVING COUNT(*) < 3

	   major
	0    548
	1    549
	2    552
	3    598
	4    599
	5    602
	ACTUAL OUTPUT ====

		
		SELECT major
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT major,
		                COUNT() AS n
		         FROM student
		         GROUP BY major)
		      ORDER BY n)
		   LIMIT 3)

	   major
	0    548
	1    552
	2    598
Wrong output for base solution in instance spider/gas_company/0008 (3500)
	EXPECTED OUTPUT ====

	  main_industry  sum_market_value_
	0       Banking              580.4
	1  Conglomerate              415.9
	2   Oil and gas             1257.1
	ACTUAL OUTPUT ====

		SELECT main_industry,
		       sum(market_value)
		FROM company
		GROUP BY main_industry

	  main_industry  sum(market_value)
	0       Banking              580.4
	1  Conglomerate              415.9
	2   Oil and gas             1257.1
Wrong output for ground truth in instance spider/gas_company/0008 (3500)
Wrong output for fuzzied solution in instance spider/gas_company/0013 (3503)
	EXPECTED OUTPUT ====

		SELECT LOCATION,
		       count(*)
		FROM gas_station
		GROUP BY LOCATION
		ORDER BY count(*)

	           location  count(*)
	0  0J2Maindy AveQ9B         1
	1   Maindy AvewHVqK         1
	2        Newport Rd         1
	3         aindy Ave         1
	4        Herne Hill         2
	5         Maindy Av         2
	6        Maindy Ave         2
	ACTUAL OUTPUT ====

		
		SELECT LOCATION,
		       n AS count___
		FROM
		  (SELECT LOCATION,
		          manager_name,
		          COUNT() AS n
		   FROM gas_station
		   GROUP BY LOCATION,
		            manager_name)
		ORDER BY LOCATION

	           location  count___
	0  0J2Maindy AveQ9B         1
	1        Herne Hill         1
	2        Herne Hill         1
	3         Maindy Av         1
	4         Maindy Av         1
	5        Maindy Ave         1
	6        Maindy Ave         1
	7   Maindy AvewHVqK         1
	8        Newport Rd         1
	9         aindy Ave         1
Wrong output for fuzzied solution in instance spider/gas_company/0012 (3506)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM gas_station
		WHERE open_year BETWEEN 2000 AND 2005

	   count(*)
	0         5
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM gas_station
		      WHERE (open_year > 2000
		             AND open_year >= 2005)))
		ORDER BY count___

	   count___
	0         6
Wrong output for fuzzied solution in instance spider/gas_company/0015 (3507)
	EXPECTED OUTPUT ====

		SELECT headquarters
		FROM company
		EXCEPT
		SELECT headquarters
		FROM company
		WHERE main_industry = 'Banking'

	  headquarters
	0     E PfNUSA
	1   Netherland
	2  Netherlands
	3           UK
	4          USA
	5     USA)Gp3m
	ACTUAL OUTPUT ====

		
		SELECT `headquarters`
		FROM
		  (SELECT *
		   FROM `company` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `company`
		           WHERE (`main_industry` = 'Banking')) AS RHS
		        WHERE (LHS.headquarters = RHS.headquarters) ))
		ORDER BY headquarters

	   headquarters
	0      E PfNUSA
	1    Netherland
	2   Netherlands
	3   Netherlands
	4            UK
	5            UK
	6           USA
	7           USA
	8           USA
	9           USA
	10     USA)Gp3m
Wrong output for fuzzied solution in instance spider/gas_company/0016 (3509)
	EXPECTED OUTPUT ====

		SELECT T2.company,
		       count(*)
		FROM station_company AS T1
		JOIN company AS T2 ON T1.company_id = T2.company_id
		GROUP BY T1.company_id

	                                         company  count(*)
	0                                           HSBC         3
	1                                           HSBC         5
	2                                           HSBC         5
	3                                           HSBC         9
	4                                      HSBCzvU C         6
	5        Industrial and Commercial Bank of China         4
	6        Industrial and Commercial Bank of China         4
	7                         Iv(TFRoyal Dutch Shell         8
	8                               Royal Dutch Shel         6
	9                              Royal Dutch Shell         5
	10                             Royal Dutch Shell         7
	11  dxa2IIndustrial and Commercial Bank of China         5
	ACTUAL OUTPUT ====

		
		SELECT company,
		       n AS count___
		FROM
		  (SELECT company,
		          market_value,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.company_id AS company_id,
		             LHS.rank AS rank,
		             LHS.company AS company,
		             LHS.headquarters AS headquarters,
		             LHS.main_industry AS main_industry,
		             LHS.sales_billion AS sales_billion,
		             LHS.profits_billion AS profits_billion,
		             LHS.assets_billion AS assets_billion,
		             LHS.market_value AS market_value,
		             RHS.station_id AS station_id,
		             RHS.rank_of_the_year AS rank_of_the_year
		      FROM company AS LHS
		      INNER JOIN station_company AS RHS ON (LHS.company_id = RHS.company_id))
		   GROUP BY company,
		            market_value)
		ORDER BY company

	                                         company  count___
	0                                           HSBC         5
	1                                           HSBC         8
	2                                           HSBC         9
	3                                      HSBCzvU C         6
	4        Industrial and Commercial Bank of China         4
	5        Industrial and Commercial Bank of China         4
	6                         Iv(TFRoyal Dutch Shell         8
	7                               Royal Dutch Shel         6
	8                              Royal Dutch Shell         5
	9                              Royal Dutch Shell         7
	10  dxa2IIndustrial and Commercial Bank of China         5
Wrong output for fuzzied solution in instance spider/gas_company/0020 (3511)
	EXPECTED OUTPUT ====

		SELECT manager_name
		FROM gas_station
		WHERE open_year > 2000
		GROUP BY manager_name
		ORDER BY count(*) DESC
		LIMIT 1

	   manager_name
	0  Bryan Taylor
	ACTUAL OUTPUT ====

		
		SELECT manager_name
		FROM
		  (SELECT manager_name,
		          COUNT() AS n
		   FROM gas_station
		   GROUP BY manager_name)
		WHERE (n > 2000
		       OR n != 1)
		ORDER BY manager_name

	   manager_name
	0  Bryan Taylor
	1   BryanDenman
Wrong output for fuzzied solution in instance spider/gas_company/0023 (3515)
	EXPECTED OUTPUT ====

		SELECT T3.location,
		       T3.Representative_Name
		FROM station_company AS T1
		JOIN company AS T2 ON T1.company_id = T2.company_id
		JOIN gas_station AS T3 ON T1.station_id = T3.station_id
		ORDER BY T2.Assets_billion DESC
		LIMIT 3

	          location representative_name
	0        Maindy Av            Tony Gib
	1  Maindy AvewHVqK       Simon Gaywood
	2  Maindy AvewHVqK       Simon Gaywood
	ACTUAL OUTPUT ====

		
		SELECT LOCATION,
		       representative_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.company_id AS company_id,
		                LHS.rank AS rank,
		                LHS.company AS company,
		                LHS.headquarters AS headquarters,
		                LHS.main_industry AS main_industry,
		                LHS.sales_billion AS sales_billion,
		                LHS.profits_billion AS profits_billion,
		                LHS.assets_billion AS assets_billion,
		                LHS.market_value AS market_value,
		                LHS.station_id AS station_id,
		                LHS.open_year AS open_year,
		                LHS.location AS LOCATION,
		                LHS.manager_name AS manager_name,
		                LHS.vice_manager_name AS vice_manager_name,
		                LHS.representative_name AS representative_name,
		                RHS.rank_of_the_year AS rank_of_the_year
		         FROM
		           (SELECT LHS.company_id AS company_id,
		                   LHS.rank AS rank,
		                   LHS.company AS company,
		                   LHS.headquarters AS headquarters,
		                   LHS.main_industry AS main_industry,
		                   LHS.sales_billion AS sales_billion,
		                   LHS.profits_billion AS profits_billion,
		                   LHS.assets_billion AS assets_billion,
		                   LHS.market_value AS market_value,
		                   RHS.station_id AS station_id,
		                   RHS.open_year AS open_year,
		                   RHS.location AS LOCATION,
		                   RHS.manager_name AS manager_name,
		                   RHS.vice_manager_name AS vice_manager_name,
		                   RHS.representative_name AS representative_name
		            FROM company AS LHS
		            CROSS JOIN gas_station AS RHS) AS LHS
		         INNER JOIN station_company AS RHS ON (LHS.company_id = RHS.company_id
		                                                  AND LHS.station_id = RHS.station_id))
		      ORDER BY company_id)
		   LIMIT 3)

	     location representative_name
	0  Herne Hill       Simon Gaywood
	1   Maindy Av            ony Gibb
	2  Maindy Ave            Tony Gib
Wrong output for fuzzied solution in instance spider/gas_company/0001 (3516)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM company

	   count(*)
	0        12
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT company,
		          market_value,
		          COUNT() AS n
		   FROM company
		   GROUP BY company,
		            market_value)
		ORDER BY count___

	   count___
	0        11
Wrong output for fuzzied solution in instance spider/gas_company/0014 (3517)
	EXPECTED OUTPUT ====

		SELECT headquarters
		FROM company
		WHERE main_industry = 'Banking' INTERSECT
		  SELECT headquarters
		  FROM company WHERE main_industry = 'Oil and gas'

	  headquarters
	0          USA
	ACTUAL OUTPUT ====

		
		SELECT `headquarters`
		FROM
		  (SELECT *
		   FROM `company`
		   WHERE (`main_industry` = 'Banking'))
		WHERE (`main_industry` != 'Oil and gas')
		ORDER BY headquarters

	  headquarters
	0         Chin
	1   ChinagJNG5
	2          USA
	3     gXCu9USA
Wrong output for fuzzied solution in instance spider/gas_company/0009 (3518)
	EXPECTED OUTPUT ====

		SELECT main_industry,
		       count(*)
		FROM company
		GROUP BY main_industry
		ORDER BY sum(market_value) DESC
		LIMIT 1

	        main_industry  count(*)
	0  evnConglomeratejAb         1
	ACTUAL OUTPUT ====

		
		SELECT main_industry,
		       n_distinct AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT main_industry,
		                COUNT(DISTINCT market_value) AS n_distinct
		         FROM
		           (SELECT main_industry,
		                   market_value,
		                   SUM(market_value) AS summarket_value
		            FROM company
		            GROUP BY main_industry,
		                     market_value)
		         GROUP BY main_industry)
		      ORDER BY n_distinct DESC)
		   LIMIT 1)

	  main_industry  count___
	0   Oil and gas         2
Wrong output for fuzzied solution in instance spider/solvency_ii/0008 (3521)
	EXPECTED OUTPUT ====

		SELECT Product_Type_Code
		FROM Products
		GROUP BY Product_Type_Code
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  product_type_code
	0       Electronics
	ACTUAL OUTPUT ====

		
		SELECT product_type_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT product_id,
		                product_type_code,
		                COUNT() AS n
		         FROM products
		         GROUP BY product_id,
		                  product_type_code)
		      ORDER BY product_type_code DESC)
		   LIMIT 1)

	  product_type_code
	0            lothes
Wrong output for fuzzied solution in instance spider/solvency_ii/0013 (3523)
	EXPECTED OUTPUT ====

		SELECT T1.Product_Name
		FROM Products AS T1
		JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID
		GROUP BY T1.Product_Name
		HAVING COUNT(*) >= 2

	            product_name
	0  )A1Business PolicyO91
	1  Conference Equipments
	2           TV Equipment
	3          TV Equipments
	4           V Equipments
	5     a6T8RTV Equipments
	ACTUAL OUTPUT ====

		
		SELECT product_name
		FROM
		  (SELECT LHS.product_id AS product_id,
		          LHS.product_type_code AS product_type_code,
		          LHS.product_name AS product_name,
		          LHS.product_price AS product_price,
		          RHS.n AS n
		   FROM products AS LHS
		   INNER JOIN
		     (SELECT product_id,
		             COUNT() AS n
		      FROM products_in_events
		      GROUP BY product_id) AS RHS ON (LHS.product_id = RHS.product_id))
		WHERE (n >= 2)
		ORDER BY product_name

	            product_name
	0  )A1Business PolicyO91
	1  Conference Equipments
	2           TV Equipment
	3           V Equipments
	4     a6T8RTV Equipments
Wrong output for fuzzied solution in instance spider/solvency_ii/0004 (3525)
	EXPECTED OUTPUT ====

		SELECT Product_Price
		FROM Products
		WHERE Product_Name = "Dining"
		  OR Product_Name = "Trading Policy"

	   product_price
	0   1.166135e+15
	ACTUAL OUTPUT ====

		
		SELECT `product_price`
		FROM
		  (SELECT `product_price`
		   FROM `products`
		   WHERE (`product_name` = 'Trading Policy') INTERSECT
		     SELECT product_price
		     FROM products)
		ORDER BY product_price

	Empty DataFrame
	Columns: [product_price]
	Index: []
Wrong output for base solution in instance spider/solvency_ii/0005 (3528)
	EXPECTED OUTPUT ====

	   avg_product_price_
	0         2852.780667
	ACTUAL OUTPUT ====

		SELECT avg(Product_Price)
		FROM Products

	   avg(product_price)
	0         2852.780667
Wrong output for ground truth in instance spider/solvency_ii/0005 (3528)
Wrong output for fuzzied solution in instance spider/solvency_ii/0014 (3531)
	EXPECTED OUTPUT ====

		SELECT T1.Product_Name
		FROM Products AS T1
		JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID
		GROUP BY T1.Product_Name
		HAVING COUNT(*) >= 2
		ORDER BY T1.Product_Name

	            product_name
	0  )A1Business PolicyO91
	1  Conference Equipments
	2           TV Equipment
	3          TV Equipments
	4           V Equipments
	5     a6T8RTV Equipments
	ACTUAL OUTPUT ====

		
		SELECT product_name
		FROM
		  (SELECT event_id,
		          product_name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.product_id AS product_id,
		             LHS.product_type_code AS product_type_code,
		             LHS.product_name AS product_name,
		             LHS.product_price AS product_price,
		             RHS.product_in_event_id AS product_in_event_id,
		             RHS.event_id AS event_id
		      FROM products AS LHS
		      INNER JOIN products_in_events AS RHS ON (LHS.product_id = RHS.product_id))
		   GROUP BY event_id,
		            product_name)
		WHERE (n >= 2)
		ORDER BY product_name

	Empty DataFrame
	Columns: [product_name]
	Index: []
Wrong output for fuzzied solution in instance spider/solvency_ii/0009 (3532)
	EXPECTED OUTPUT ====

		SELECT Product_Type_Code
		FROM Products
		GROUP BY Product_Type_Code
		HAVING COUNT(*) >= 2

	  product_type_code
	0           Clothes
	1       Electronics
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT product_type_code
		FROM
		  (SELECT product_id,
		          product_type_code,
		          product_name,
		          product_price,
		          COUNT(*) OVER () AS n
		   FROM products)
		WHERE (n >= 2)
		ORDER BY product_type_code

	  product_type_code
	0     BU2Clothesvw5
	1              Book
	2             Books
	3            Clothe
	4           Clothes
	5      ClothesqFSEI
	6        Electronic
	7       Electronics
	8        lectronics
	9            lothes
Wrong output for fuzzied solution in instance spider/solvency_ii/0010 (3534)
	EXPECTED OUTPUT ====

		SELECT Product_Type_Code
		FROM Products
		WHERE Product_Price > 4500 INTERSECT
		  SELECT Product_Type_Code
		  FROM Products WHERE Product_Price < 3000

	  product_type_code
	0             Books
	1              Food
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT product_type_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT LHS.product_id AS product_id,
		             LHS.product_type_code AS product_type_code,
		             LHS.product_name AS product_name,
		             LHS.product_price AS product_price,
		             RHS.product_id AS product_id_other,
		             RHS.product_type_code AS product_type_code_other,
		             RHS.product_name AS product_name_other,
		             RHS.product_price AS product_price_other
		      FROM products AS LHS
		      CROSS JOIN products AS RHS)
		   WHERE (product_price > product_price_other))
		WHERE (product_price > 4500.0
		       AND product_price >= 3000.0)
		ORDER BY product_type_code

	  product_type_code
	0            1hInCz
	1             Books
	2        BooksaCk1h
	3              Food
	4         Food)ydzE
	5         JJGSKFood
	6         OKWMGRtvR
	7       PTgBooks16X
	8        Z aH1iA9Z8
	9        gfmywBooks
Wrong output for fuzzied solution in instance spider/college_3/0036 (3537)
	EXPECTED OUTPUT ====

		SELECT DName
		FROM DEPARTMENT
		WHERE Division = "AS"
		UNION
		SELECT DName
		FROM DEPARTMENT
		WHERE Division = "EN"
		  AND Building = "NEB"

	                dname
	0            Economic
	1              German
	2  History of Science
	ACTUAL OUTPUT ====

		
		SELECT `dname`
		FROM
		  (SELECT *
		   FROM `department`
		   WHERE (`division` != 'AS'
		          OR `division` != 'EN'))
		WHERE (`division` = 'AS'
		       OR `building` = 'NEB')
		ORDER BY dname

	                dname
	0            Economic
	1              German
	2              German
	3  History of Science
	4   Political Science
Wrong output for fuzzied solution in instance spider/college_3/0027 (3541)
	EXPECTED OUTPUT ====

		SELECT T2.Dname,
		       T2.Room
		FROM COURSE AS T1
		JOIN DEPARTMENT AS T2 ON T1.DNO = T2.DNO
		WHERE T1.CName = "INTRODUCTION TO COMPUTER SCIENCE"

	                 dname room
	0           athematics   12
	1           athematics   12
	2           athematics   12
	3  hemical Engineering   24
	ACTUAL OUTPUT ====

		
		SELECT `dname`,
		       `room`
		FROM
		  (SELECT *
		   FROM `department` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `course`
		           WHERE (`cname` = 'INTRODUCTION TO COMPUTER SCIENCE')) AS RHS
		        WHERE (LHS.dno = RHS.dno) ))
		ORDER BY dname

	                 dname room
	0           athematics   12
	1  hemical Engineering   24
Wrong output for fuzzied solution in instance spider/college_3/0022 (3542)
	EXPECTED OUTPUT ====

		SELECT Rank
		FROM FACULTY
		GROUP BY Rank
		ORDER BY count(*) ASC
		LIMIT 1

	            rank
	0  4vVgVAsstProf
	ACTUAL OUTPUT ====

		
		SELECT rank
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT phone,
		                rank,
		                COUNT() AS n
		         FROM faculty
		         GROUP BY phone,
		                  rank)
		      ORDER BY phone)
		   LIMIT 1)

	            rank
	0  AsstProfuLgo2
Wrong output for fuzzied solution in instance spider/college_3/0030 (3543)
	EXPECTED OUTPUT ====

		SELECT T1.Fname,
		       T1.Lname
		FROM FACULTY AS T1
		JOIN MEMBER_OF AS T2 ON T1.FacID = T2.FacID
		WHERE T2.DNO = 520

	    fname          lname
	0  Gerard        Andreou
	1   Jerry         Naiman
	2   Jerry         Naiman
	3  Robert    VeVj9Hughes
	4    olin  Giuliano)yXUz
	ACTUAL OUTPUT ====

		
		SELECT fname,
		       lname
		FROM
		  (SELECT *
		   FROM faculty AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM member_of
		           WHERE (dno = 520)) AS RHS
		        WHERE (LHS.facid = RHS.facid) ))
		ORDER BY fname

	    fname          lname
	0  Gerard        Andreou
	1   Jerry         Naiman
	2  Robert    VeVj9Hughes
	3    olin  Giuliano)yXUz
Wrong output for fuzzied solution in instance spider/college_3/0035 (3554)
	EXPECTED OUTPUT ====

		SELECT CName
		FROM COURSE
		WHERE Credits = 3
		UNION
		SELECT CName
		FROM COURSE
		WHERE Credits = 1
		  AND Hours = 4

	                                cname
	0            FIELDS, MATTER AND WAVES
	1       FIELDS, MATTER AND WAVESVbdgV
	2              TC((71t3GttHX(zOoP7TCA
	3       TOPICS IN OPERATIONS RESEARCH
	4  TOPICS IN OPERATIONS RESEARCHZxgHD
	5              Txy8N0cOamcySFnydFeGAv
	6           YVQKBMICROPROCESSOR LAB I
	7          rhJpE71UZUXAwBB)zTAC59NbsL
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT cname
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM course
		      WHERE (hours = 4
		             OR credits >= 1))
		   WHERE (credits != 1
		          OR credits < 4))
		WHERE (hours = 4
		       OR credits = 3)
		ORDER BY cname

	                                cname
	0            FIELDS, MATTER AND WAVES
	1       FIELDS, MATTER AND WAVESVbdgV
	2              TC((71t3GttHX(zOoP7TCA
	3       TOPICS IN OPERATIONS RESEARCH
	4  TOPICS IN OPERATIONS RESEARCHZxgHD
	5              Txy8N0cOamcySFnydFeGAv
	6           YVQKBMICROPROCESSOR LAB I
	7          rhJpE71UZUXAwBB)zTAC59NbsL
	8           tIEoLMICROPROCESSOR LAB I
Wrong output for fuzzied solution in instance spider/college_3/0020 (3555)
	EXPECTED OUTPUT ====

		SELECT DName
		FROM DEPARTMENT
		EXCEPT
		SELECT T1.DName
		FROM DEPARTMENT AS T1
		JOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO

	Empty DataFrame
	Columns: [dname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT dname
		FROM
		  (SELECT *
		   FROM department AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM minor_in AS RHS
		        WHERE (LHS.dno = RHS.dno) ))
		ORDER BY dname

	                  dname
	0  Chemical Engineering
Wrong output for fuzzied solution in instance spider/college_3/0019 (3556)
	EXPECTED OUTPUT ====

		SELECT T1.DName
		FROM DEPARTMENT AS T1
		JOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO
		GROUP BY T2.DNO
		ORDER BY count(*) DESC
		LIMIT 1

	                     dname
	0  (4WvDHistory of Science
	ACTUAL OUTPUT ====

		
		SELECT dname
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.dno AS dno,
		                LHS.division AS division,
		                LHS.dname AS dname,
		                LHS.room AS room,
		                LHS.building AS building,
		                LHS.dphone AS dphone,
		                LHS.stuid AS stuid,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.dno AS dno,
		                   LHS.division AS division,
		                   LHS.dname AS dname,
		                   LHS.room AS room,
		                   LHS.building AS building,
		                   LHS.dphone AS dphone,
		                   RHS.stuid AS stuid
		            FROM department AS LHS
		            INNER JOIN minor_in AS RHS ON (LHS.dno = RHS.dno)) AS LHS
		         INNER JOIN
		           (SELECT stuid,
		                   dno,
		                   COUNT(*) OVER () AS n
		            FROM minor_in) AS RHS ON (LHS.dno = RHS.dno
		                                         AND LHS.stuid = RHS.stuid))
		      ORDER BY dno DESC)
		   LIMIT 1)

	    dname
	0  German
Error while executing solution for instance spider/college_3/0007 (3557)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `stuid`) OVER () AS `count_distinct_stuid_`
FROM `enrolled_in`
WHERE (`grade` = 'B')
ORDER BY count_distinct_stuid_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/college_3/0034 (3558)
Wrong output for fuzzied solution in instance spider/college_3/0024 (3559)
	EXPECTED OUTPUT ====

		SELECT T2.Building
		FROM COURSE AS T1
		JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID
		GROUP BY T1.Instructor
		ORDER BY count(*) DESC
		LIMIT 1

	       building
	0  DScG)Krieger
	ACTUAL OUTPUT ====

		
		SELECT building
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT building,
		                hours,
		                COUNT() AS n
		         FROM
		           (SELECT LHS.facid AS facid,
		                   LHS.lname AS lname,
		                   LHS.fname AS fname,
		                   LHS.rank AS rank,
		                   LHS.sex AS sex,
		                   LHS.phone AS phone,
		                   LHS.room AS room,
		                   LHS.building AS building,
		                   RHS.cid AS cid,
		                   RHS.cname AS cname,
		                   RHS.credits AS credits,
		                   RHS.instructor AS instructor,
		                   RHS.days AS days,
		                   RHS.hours AS hours,
		                   RHS.dno AS dno
		            FROM faculty AS LHS
		            CROSS JOIN course AS RHS)
		         GROUP BY building,
		                  hours)
		      ORDER BY n DESC)
		   LIMIT 1)

	  building
	0  Krieger
Wrong output for fuzzied solution in instance spider/college_3/0021 (3560)
	EXPECTED OUTPUT ====

		SELECT T1.DName
		FROM DEPARTMENT AS T1
		JOIN MEMBER_OF AS T2 ON T1.DNO = T2.DNO
		GROUP BY T2.DNO
		ORDER BY count(*) ASC
		LIMIT 1

	                dname
	0  History of Science
	ACTUAL OUTPUT ====

		
		SELECT dname
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.dno AS dno,
		                LHS.division AS division,
		                LHS.dname AS dname,
		                LHS.room AS room,
		                LHS.building AS building,
		                LHS.dphone AS dphone,
		                LHS.facid AS facid,
		                LHS.appt_type AS appt_type,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.dno AS dno,
		                   LHS.division AS division,
		                   LHS.dname AS dname,
		                   LHS.room AS room,
		                   LHS.building AS building,
		                   LHS.dphone AS dphone,
		                   RHS.facid AS facid,
		                   RHS.appt_type AS appt_type
		            FROM department AS LHS
		            INNER JOIN member_of AS RHS ON (LHS.dno = RHS.dno)) AS LHS
		         INNER JOIN
		           (SELECT dno,
		                   division,
		                   dname,
		                   room,
		                   building,
		                   dphone,
		                   COUNT(*) OVER () AS n
		            FROM department) AS RHS ON (LHS.dno = RHS.dno
		                                           AND LHS.division = RHS.division
		                                           AND LHS.dname = RHS.dname
		                                           AND LHS.room = RHS.room
		                                           AND LHS.building = RHS.building
		                                           AND LHS.dphone = RHS.dphone))
		      ORDER BY division)
		   LIMIT 1)

	                    dname
	0  mxfhcPolitical Science
Wrong output for fuzzied solution in instance spider/college_3/0023 (3561)
	EXPECTED OUTPUT ====

		SELECT T2.Fname,
		       T2.Lname
		FROM COURSE AS T1
		JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID
		GROUP BY T1.Instructor
		ORDER BY count(*) DESC
		LIMIT 3

	   fname          lname
	0  Jerry  OtJiUGiuliano
	1  Rober         Hughes
	2  obert         Hughes
	ACTUAL OUTPUT ====

		
		SELECT fname,
		       lname
		FROM
		  (SELECT LHS.facid AS facid,
		          LHS.lname AS lname,
		          LHS.fname AS fname,
		          LHS.rank AS rank,
		          LHS.sex AS sex,
		          LHS.phone AS phone,
		          LHS.room AS room,
		          LHS.building AS building,
		          RHS.n AS n
		   FROM faculty AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT instructor,
		                COUNT() AS n
		         FROM course
		         GROUP BY instructor)
		      WHERE (n > 3)) AS RHS ON (LHS.facid = RHS.instructor))
		ORDER BY fname

	    fname          lname
	0   Colin    re3UeNaiman
	1   Jerry  OtJiUGiuliano
	2   Rober         Hughes
	3   Rober    NaimanFHYKk
	4  Robert    VeVj9Hughes
	5   obert         Hughes
No solution for instance spider/college_3/0009 (3564)
Wrong output for fuzzied solution in instance spider/college_3/0029 (3567)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T3.Fname
		FROM ENROLLED_IN AS T1
		JOIN GRADECONVERSION AS T2
		JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade
		AND T1.StuID = T3.StuID
		WHERE T2.gradepoint >= 3.8

	        fname
	0        Biog
	1  IzZhmSarah
	2        ruce
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `fname`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`cid` AS `cid`,
		          `LHS`.`grade` AS `grade`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `RHS`.`gradepoint` AS `gradepoint`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`cid` AS `cid`,
		             `LHS`.`grade` AS `grade`,
		             `RHS`.`lname` AS `lname`,
		             `RHS`.`fname` AS `fname`,
		             `RHS`.`age` AS `age`,
		             `RHS`.`sex` AS `sex`,
		             `RHS`.`major` AS `major`,
		             `RHS`.`advisor` AS `advisor`,
		             `RHS`.`city_code` AS `city_code`
		      FROM `enrolled_in` AS `LHS`
		      LEFT JOIN `student` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `gradeconversion`
		      WHERE (`gradepoint` > '3.8')) AS RHS ON (LHS.grade = RHS.lettergrade))
		ORDER BY fname

	Empty DataFrame
	Columns: [fname]
	Index: []
Wrong output for fuzzied solution in instance spider/college_3/0031 (3570)
	EXPECTED OUTPUT ====

		SELECT T2.Fname,
		       T2.Lname
		FROM MINOR_IN AS T1
		JOIN STUDENT AS T2 ON T1.StuID = T2.StuID
		WHERE T1.DNO = 140

	     fname         lname
	0   Charle  bCrNorrisicr
	1  Charles            pp
	2       Ia         Brody
	3      Ian     yYbEppJTH
	4      Ian     yYbEppJTH
	5    Stacy         Kumar
	6    Stacy         Kumar
	ACTUAL OUTPUT ====

		
		SELECT fname,
		       lname
		FROM
		  (SELECT *
		   FROM student AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM minor_in
		           WHERE (dno = 140)) AS RHS
		        WHERE (LHS.stuid = RHS.stuid) ))
		ORDER BY fname

	     fname         lname
	0   Charle  bCrNorrisicr
	1  Charles            pp
	2       Ia         Brody
	3      Ian     yYbEppJTH
	4    Stacy         Kumar
Wrong output for fuzzied solution in instance spider/workshop_paper/0008 (3572)
	EXPECTED OUTPUT ====

		SELECT College
		FROM submission
		GROUP BY College
		ORDER BY COUNT(*) DESC
		LIMIT 1

	            college
	0  West Texas State
	ACTUAL OUTPUT ====

		
		SELECT college
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT author,
		                college,
		                COUNT() AS n
		         FROM submission
		         GROUP BY author,
		                  college)
		      ORDER BY college DESC)
		   LIMIT 1)

	           college
	0  est Texas State
Wrong output for fuzzied solution in instance spider/workshop_paper/0013 (3574)
	EXPECTED OUTPUT ====

		SELECT T2.Author
		FROM acceptance AS T1
		JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID
		GROUP BY T2.Author
		HAVING COUNT(DISTINCT T1.workshop_id) > 1

	             author
	0        Andy Bolto
	1       Andy Bolton
	2  Andy BoltonFHAwK
	3        Steve Myer
	4  pLJSteve MyerFWa
	5  z6 NvAndy Bolton
	ACTUAL OUTPUT ====

		
		SELECT author
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.submission_id AS submission_id,
		                LHS.scores AS scores,
		                LHS.author AS author,
		                LHS.college AS college,
		                LHS.workshop_id AS workshop_id,
		                LHS.result AS RESULT,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.submission_id AS submission_id,
		                   LHS.scores AS scores,
		                   LHS.author AS author,
		                   LHS.college AS college,
		                   RHS.workshop_id AS workshop_id,
		                   RHS.result AS RESULT
		            FROM submission AS LHS
		            INNER JOIN acceptance AS RHS ON (LHS.submission_id = RHS.submission_id)) AS LHS
		         CROSS JOIN
		           (SELECT COUNT() AS n
		            FROM acceptance) AS RHS)
		      ORDER BY RESULT DESC)
		   LIMIT 1)

	        author
	0  Andy Bolton
Wrong output for fuzzied solution in instance spider/workshop_paper/0012 (3577)
	EXPECTED OUTPUT ====

		SELECT T2.Author,
		       COUNT(DISTINCT T1.workshop_id)
		FROM acceptance AS T1
		JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID
		GROUP BY T2.Author

	               author  count(distinct t1.workshop_id)
	0     15CvfSteve Myer                               8
	1     I(96OSteve Myer                               7
	2  MrMrMRandy Johnson                               8
	3       Randy Johnson                               8
	4        Sherman Smit                               7
	5          Steve Myer                               8
	6         Steve Raibl                               7
	7        andy Johnson                               8
	8   dOdsGSteve Raible                               7
	9         teve Raible                               7
	ACTUAL OUTPUT ====

		
		SELECT author,
		       n AS count_distinct_t1_workshop_id_
		FROM
		  (SELECT author,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.submission_id AS submission_id,
		             LHS.scores AS scores,
		             LHS.author AS author,
		             LHS.college AS college,
		             RHS.workshop_id AS workshop_id,
		             RHS.result AS RESULT
		      FROM submission AS LHS
		      INNER JOIN acceptance AS RHS ON (LHS.submission_id = RHS.submission_id))
		   GROUP BY author)
		ORDER BY author

	               author  count_distinct_t1_workshop_id_
	0     15CvfSteve Myer                               8
	1     I(96OSteve Myer                               7
	2  MrMrMRandy Johnson                               8
	3       Randy Johnson                               8
	4        Sherman Smit                               7
	5          Steve Myer                              22
	6         Steve Raibl                               7
	7        andy Johnson                               8
	8   dOdsGSteve Raible                               7
	9         teve Raible                               7
Wrong output for fuzzied solution in instance spider/workshop_paper/0011 (3583)
	EXPECTED OUTPUT ====

		SELECT T1.Result
		FROM acceptance AS T1
		JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID
		ORDER BY T2.Scores DESC
		LIMIT 1

	           result
	0  pM)Rejectedxjo
	ACTUAL OUTPUT ====

		
		SELECT RESULT
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.submission_id AS submission_id,
		                LHS.scores AS scores,
		                LHS.author AS author,
		                LHS.college AS college,
		                RHS.workshop_id AS workshop_id,
		                RHS.result AS RESULT
		         FROM submission AS LHS
		         INNER JOIN acceptance AS RHS ON (LHS.submission_id = RHS.submission_id))
		      ORDER BY author)
		   LIMIT 1)

	     result
	0  Accepted
Wrong output for fuzzied solution in instance spider/film_rank/0002 (3585)
	EXPECTED OUTPUT ====

		SELECT DISTINCT Director
		FROM film

	                director
	0   vpTaylor HackfordgCp
	1         Taylor Hackfor
	2        Taylor Hackford
	3   Taylor HackfordDGZ6J
	4         XPS4Vefpkitgdm
	5         aylor Hackford
	6  ba8Taylor HackfordOpV
	7       sCXbPWi2p(E8iwNH
	ACTUAL OUTPUT ====

		
		SELECT director
		FROM film
		ORDER BY director

	                 director
	0    vpTaylor HackfordgCp
	1          Taylor Hackfor
	2         Taylor Hackford
	3         Taylor Hackford
	4         Taylor Hackford
	5         Taylor Hackford
	6         Taylor Hackford
	7    Taylor HackfordDGZ6J
	8          XPS4Vefpkitgdm
	9          aylor Hackford
	10  ba8Taylor HackfordOpV
	11       sCXbPWi2p(E8iwNH
Wrong output for fuzzied solution in instance spider/film_rank/0017 (3586)
	EXPECTED OUTPUT ====

		SELECT Studio
		FROM film
		GROUP BY Studio
		HAVING COUNT(*) >= 2

	            studio
	0   Universal / RK
	1  Universal / RKO
	ACTUAL OUTPUT ====

		
		SELECT studio
		FROM
		  (SELECT studio,
		          COUNT() AS n
		   FROM film
		   GROUP BY studio)
		WHERE (n = 2)
		ORDER BY studio

	           studio
	0  Universal / RK
Wrong output for base solution in instance spider/film_rank/0003 (3588)
	EXPECTED OUTPUT ====

	   avg_gross_in_dollar_
	0          1.148272e+08
	ACTUAL OUTPUT ====

		SELECT avg(Gross_in_dollar)
		FROM film

	   avg(gross_in_dollar)
	0          1.148272e+08
Wrong output for ground truth in instance spider/film_rank/0003 (3588)
Wrong output for fuzzied solution in instance spider/film_rank/0012 (3593)
	EXPECTED OUTPUT ====

		SELECT avg(T2.Number_cities)
		FROM film_market_estimation AS T1
		JOIN market AS T2 ON T1.Market_ID = T2.Market_ID
		WHERE T1.Low_Estimate > 10000

	   avg(t2.number_cities)
	0                  221.0
	ACTUAL OUTPUT ====

		
		SELECT meannumber_cities AS avg_t2_number_cities_
		FROM
		  (SELECT estimation_id,
		          AVG(number_cities) AS meannumber_cities
		   FROM
		     (SELECT LHS.market_id AS market_id,
		             LHS.country AS country,
		             LHS.number_cities AS number_cities,
		             LHS.estimation_id AS estimation_id,
		             LHS.low_estimate AS low_estimate,
		             LHS.high_estimate AS high_estimate,
		             LHS.film_id AS film_id,
		             LHS.type AS TYPE,
		             LHS.year AS YEAR
		      FROM
		        (SELECT LHS.market_id AS market_id,
		                LHS.country AS country,
		                LHS.number_cities AS number_cities,
		                RHS.estimation_id AS estimation_id,
		                RHS.low_estimate AS low_estimate,
		                RHS.high_estimate AS high_estimate,
		                RHS.film_id AS film_id,
		                RHS.type AS TYPE,
		                RHS.year AS YEAR
		         FROM market AS LHS
		         INNER JOIN film_market_estimation AS RHS ON (LHS.market_id = RHS.market_id)) AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM film_market_estimation
		         WHERE (low_estimate > 10000.0)) AS RHS ON (LHS.market_id = RHS.market_id
		                                                    AND LHS.estimation_id = RHS.estimation_id
		                                                    AND LHS.low_estimate = RHS.low_estimate
		                                                    AND LHS.high_estimate = RHS.high_estimate
		                                                    AND LHS.film_id = RHS.film_id
		                                                    AND LHS.type = RHS.type
		                                                    AND LHS.year = RHS.year))
		   GROUP BY estimation_id)
		ORDER BY avg_t2_number_cities_

	   avg_t2_number_cities_
	0                  212.0
	1                  230.0
Wrong output for fuzzied solution in instance spider/film_rank/0016 (3596)
	EXPECTED OUTPUT ====

		SELECT Studio
		FROM film
		GROUP BY Studio
		ORDER BY COUNT(*) DESC
		LIMIT 1

	      studio
	0  Universal
	ACTUAL OUTPUT ====

		
		SELECT studio
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT studio,
		                title,
		                COUNT() AS n
		         FROM film
		         GROUP BY studio,
		                  title)
		      ORDER BY title)
		   LIMIT 1)

	            studio
	0  Orion / Carolco
No solution for instance spider/film_rank/0020 (3598)
Wrong output for fuzzied solution in instance spider/film_rank/0019 (3599)
	EXPECTED OUTPUT ====

		SELECT Studio
		FROM film
		WHERE Director = "Nicholas Meyer" INTERSECT
		  SELECT Studio
		  FROM film WHERE Director = "Walter Hill"

	Empty DataFrame
	Columns: [studio]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `studio`
		FROM
		  (SELECT *
		   FROM `film`
		   WHERE (`director` != 'Nicholas Meyer'))
		WHERE (`director` = 'Walter Hill')
		ORDER BY studio

	          studio
	0  United Artist
Wrong output for fuzzied solution in instance spider/film_rank/0007 (3600)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM market
		WHERE Number_cities < 300

	   count(*)
	0         6
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM market
		      WHERE (number_cities <= 300)))
		ORDER BY count___

	   count___
	0         7
Wrong output for fuzzied solution in instance spider/film_rank/0023 (3603)
	EXPECTED OUTPUT ====

		SELECT t1.title
		FROM film AS T1
		JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID
		ORDER BY high_estimate DESC
		LIMIT 1

	    title
	0  Gandhi
	ACTUAL OUTPUT ====

		
		SELECT title
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.film_id AS film_id,
		                LHS.title AS title,
		                LHS.studio AS studio,
		                LHS.director AS director,
		                LHS.gross_in_dollar AS gross_in_dollar,
		                RHS.estimation_id AS estimation_id,
		                RHS.low_estimate AS low_estimate,
		                RHS.high_estimate AS high_estimate,
		                RHS.type AS TYPE,
		                RHS.market_id AS market_id,
		                RHS.year AS YEAR
		         FROM film AS LHS
		         INNER JOIN film_market_estimation AS RHS ON (LHS.film_id = RHS.film_id))
		      ORDER BY director)
		   LIMIT 1)

	          title
	0  (V7GandhiERw
Wrong output for fuzzied solution in instance spider/film_rank/0001 (3604)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM film

	   count(*)
	0        12
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT director,
		          COUNT() AS n
		   FROM film
		   GROUP BY director)
		ORDER BY count___

	   count___
	0         8
Wrong output for fuzzied solution in instance spider/film_rank/0009 (3606)
	EXPECTED OUTPUT ====

		SELECT Country
		FROM market
		ORDER BY Number_cities DESC

	      country
	0        Chin
	1       China
	2       China
	3       China
	4  ChinaiBah1
	5       Japan
	6          US
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM
		  (SELECT country
		   FROM market INTERSECT SELECT country
		   FROM market)
		ORDER BY country

	      country
	0        Chin
	1       China
	2  ChinaiBah1
	3       Japan
	4          US
Wrong output for fuzzied solution in instance spider/film_rank/0011 (3607)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.Director
		FROM film AS T1
		JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID
		WHERE T2.Year = 1995

	             director
	0         Sidney Lume
	1      Sydney Pollack
	2  Sylvester Stallone
	3      rDWsxpHPzeZGtf
	ACTUAL OUTPUT ====

		
		SELECT director
		FROM
		  (SELECT *
		   FROM film AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM film_market_estimation
		           WHERE (YEAR = 1995)) AS RHS
		        WHERE (LHS.film_id = RHS.film_id) ))
		ORDER BY director

	             director
	0         Sidney Lume
	1      Sydney Pollack
	2  Sylvester Stallone
	3  Sylvester Stallone
	4      rDWsxpHPzeZGtf
Wrong output for fuzzied solution in instance spider/ship_mission/0008 (3610)
	EXPECTED OUTPUT ====

		SELECT TYPE
		FROM ship
		GROUP BY TYPE
		ORDER BY COUNT(*) DESC
		LIMIT 1

	          type
	0  Battle ship
	ACTUAL OUTPUT ====

		
		SELECT TYPE
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT nationality,
		                TYPE,
		                COUNT() AS n
		         FROM ship
		         GROUP BY nationality,
		                  TYPE)
		      ORDER BY n DESC)
		   LIMIT 1)

	         type
	0  8Zg9kkCRXR
Wrong output for fuzzied solution in instance spider/ship_mission/0013 (3612)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.Fate
		FROM mission AS T1
		JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID
		WHERE T2.Nationality = "United States"

	                         fate
	0          Decommissioned 195
	1         Decommissioned 1950
	2         Decommissioned 1959
	3    Decommissioned 1959xQlcx
	4          Lost (burned) 1931
	5     Lost (burned) 193199Tz0
	6         ckRezk znO58m2)RlBX
	7          ecommissioned 1960
	8   g0fryhmUUm8LRc3cxahhIFNPy
	9   gISDecommissioned 1960(zA
	10          ost (burned) 1931
	ACTUAL OUTPUT ====

		
		SELECT `fate`
		FROM
		  (SELECT *
		   FROM `mission` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `ship`
		           WHERE (`nationality` = 'United States')) AS RHS
		        WHERE (LHS.ship_id = RHS.ship_id) ))
		ORDER BY fate

	                         fate
	0          Decommissioned 195
	1         Decommissioned 1950
	2         Decommissioned 1959
	3         Decommissioned 1959
	4         Decommissioned 1959
	5    Decommissioned 1959xQlcx
	6          Lost (burned) 1931
	7     Lost (burned) 193199Tz0
	8         ckRezk znO58m2)RlBX
	9          ecommissioned 1960
	10  g0fryhmUUm8LRc3cxahhIFNPy
	11  gISDecommissioned 1960(zA
	12          ost (burned) 1931
Wrong output for fuzzied solution in instance spider/ship_mission/0006 (3613)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM ship
		ORDER BY Tonnage DESC
		LIMIT 1

	        name
	0  Corbridge
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM ship
		      ORDER BY name)
		   LIMIT 1)

	    name
	0  Appam
Wrong output for fuzzied solution in instance spider/ship_mission/0012 (3615)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM mission AS T1
		JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID
		WHERE T1.Launched_Year > 1928

	          name
	0    Corbridge
	1       Trader
	2       Trader
	3  TraderEun2W
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.ship_id AS ship_id,
		          LHS.name AS name,
		          LHS.type AS TYPE,
		          LHS.nationality AS nationality,
		          LHS.tonnage AS tonnage,
		          RHS.mission_id AS mission_id,
		          RHS.code AS code,
		          RHS.launched_year AS launched_year,
		          RHS.location AS LOCATION,
		          RHS.speed_knots AS speed_knots,
		          RHS.fate AS fate
		   FROM ship AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM mission
		      WHERE (launched_year >= 1928)) AS RHS ON (LHS.ship_id = RHS.ship_id))
		ORDER BY name

	          name
	0    Corbridge
	1       Trader
	2       Trader
	3       Trader
	4  TraderEun2W
Wrong output for fuzzied solution in instance spider/ship_mission/0015 (3616)
	EXPECTED OUTPUT ====

		SELECT TYPE
		FROM ship
		WHERE Tonnage > 6000 INTERSECT
		  SELECT TYPE
		  FROM ship WHERE Tonnage < 4000

	          type
	0   Battle shi
	1  Battle ship
	2    Cargo shi
	ACTUAL OUTPUT ====

		
		SELECT TYPE
		FROM ship
		WHERE (tonnage > 6000
		       AND tonnage > 4000)
		ORDER BY TYPE

	                type
	0         Battle shi
	1        Battle ship
	2        Battle ship
	3          Cargo shi
	4  O9ieblqPkYEgFRMBV
Wrong output for fuzzied solution in instance spider/ship_mission/0001 (3619)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM ship

	   count(*)
	0        11
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT name,
		          COUNT() AS n
		   FROM ship
		   GROUP BY name)
		ORDER BY count___

	   count___
	0         6
Wrong output for fuzzied solution in instance spider/ship_mission/0009 (3621)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM ship
		GROUP BY Nationality
		HAVING COUNT(*) > 2

	      nationality
	0  United Kingdom
	1   nited Kingdom
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT nationality
		FROM
		  (SELECT *
		   FROM
		     (SELECT name,
		             nationality,
		             COUNT() AS n
		      FROM ship
		      GROUP BY name,
		               nationality) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM ship AS RHS
		        WHERE (LHS.name = RHS.name
		               AND LHS.nationality = RHS.nationality) ))
		ORDER BY nationality

	            nationality
	0   N237xUnited Kingdom
	1         United Kingdo
	2        United Kingdom
	3   United KingdomONOl8
	4   United KingdomPCOHG
	5         nited Kingdom
	6  xgUUnited KingdomkEB
Wrong output for fuzzied solution in instance spider/product_catalog/0002 (3624)
	EXPECTED OUTPUT ====

		SELECT attribute_data_type
		FROM Attribute_Definitions
		GROUP BY attribute_data_type
		HAVING count(*) > 3

	  attribute_data_type
	0                Bool
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT attribute_data_type
		FROM
		  (SELECT attribute_id,
		          attribute_name,
		          attribute_data_type,
		          COUNT(*) OVER () AS n
		   FROM attribute_definitions)
		WHERE (n >= 3)
		ORDER BY attribute_data_type

	  attribute_data_type
	0                 Boo
	1                Bool
	2                 ool
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Wrong output for fuzzied solution in instance spider/product_catalog/0003 (3627)
	EXPECTED OUTPUT ====

		SELECT attribute_data_type
		FROM Attribute_Definitions
		WHERE attribute_name = "Green"

	Empty DataFrame
	Columns: [attribute_data_type]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `attribute_data_type`
		FROM
		  (SELECT `attribute_data_type`
		   FROM `attribute_definitions`
		   WHERE (`attribute_name` != 'Green') INTERSECT
		     SELECT attribute_data_type
		     FROM attribute_definitions)
		ORDER BY attribute_data_type

	  attribute_data_type
	0                Bool
	1           kPxCLBool
	2                 ool
Wrong output for fuzzied solution in instance spider/product_catalog/0013 (3628)
	EXPECTED OUTPUT ====

		SELECT catalog_entry_name
		FROM catalog_contents
		ORDER BY capacity ASC
		LIMIT 1

	  catalog_entry_name
	0             Ramune
	ACTUAL OUTPUT ====

		
		SELECT catalog_entry_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM catalog_contents
		      ORDER BY height DESC)
		   LIMIT 1)

	  catalog_entry_name
	0          Dr Pepper
Wrong output for fuzzied solution in instance spider/product_catalog/0006 (3629)
	EXPECTED OUTPUT ====

		SELECT catalog_publisher
		FROM catalogs
		GROUP BY catalog_publisher
		ORDER BY count(*) DESC
		LIMIT 1

	            catalog_publisher
	0  Russel-Gislason Lemon shop
	ACTUAL OUTPUT ====

		
		SELECT catalog_publisher
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT catalog_publisher,
		                date_of_latest_revision,
		                COUNT() AS n
		         FROM catalogs
		         GROUP BY catalog_publisher,
		                  date_of_latest_revision)
		      ORDER BY date_of_latest_revision DESC)
		   LIMIT 1)

	                           catalog_publisher
	0  Koepp-Rutherford handmade chocolate store
No solution for instance spider/product_catalog/0005 (3633)
Wrong output for fuzzied solution in instance spider/product_catalog/0016 (3634)
	EXPECTED OUTPUT ====

		SELECT catalog_entry_name
		FROM catalog_contents
		WHERE LENGTH < 3
		  OR width > 5

	  catalog_entry_name
	0        3EcwwRamune
	1       Fenta Orange
	2       Fenta Orange
	3        Ginger Beer
	4              Ramun
	5             Ramune
	6        ttX5iRamune
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT catalog_entry_name
		FROM
		  (SELECT LHS.catalog_entry_id AS catalog_entry_id,
		          LHS.catalog_level_number AS catalog_level_number,
		          LHS.parent_entry_id AS parent_entry_id,
		          LHS.previous_entry_id AS previous_entry_id,
		          LHS.next_entry_id AS next_entry_id,
		          LHS.catalog_entry_name AS catalog_entry_name,
		          LHS.product_stock_number AS product_stock_number,
		          LHS.price_in_dollars AS price_in_dollars,
		          LHS.price_in_euros AS price_in_euros,
		          LHS.price_in_pounds AS price_in_pounds,
		          LHS.capacity AS capacity,
		          LHS.length AS LENGTH,
		          LHS.height AS height,
		          LHS.width AS width,
		          RHS.catalog_entry_id AS catalog_entry_id_other,
		          RHS.catalog_level_number AS catalog_level_number_other,
		          RHS.parent_entry_id AS parent_entry_id_other,
		          RHS.previous_entry_id AS previous_entry_id_other,
		          RHS.next_entry_id AS next_entry_id_other,
		          RHS.catalog_entry_name AS catalog_entry_name_other,
		          RHS.product_stock_number AS product_stock_number_other,
		          RHS.price_in_dollars AS price_in_dollars_other,
		          RHS.price_in_euros AS price_in_euros_other,
		          RHS.price_in_pounds AS price_in_pounds_other,
		          RHS.capacity AS capacity_other,
		          RHS.length AS length_other,
		          RHS.height AS height_other,
		          RHS.width AS width_other
		   FROM
		     (SELECT LHS.catalog_entry_id AS catalog_entry_id,
		             LHS.catalog_level_number AS catalog_level_number,
		             LHS.parent_entry_id AS parent_entry_id,
		             LHS.previous_entry_id AS previous_entry_id,
		             LHS.next_entry_id AS next_entry_id,
		             LHS.catalog_entry_name AS catalog_entry_name,
		             LHS.product_stock_number AS product_stock_number,
		             LHS.price_in_dollars AS price_in_dollars,
		             LHS.price_in_euros AS price_in_euros,
		             LHS.price_in_pounds AS price_in_pounds,
		             LHS.capacity AS capacity,
		             LHS.length AS LENGTH,
		             LHS.height AS height,
		             LHS.width AS width
		      FROM catalog_contents AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM catalog_contents
		         WHERE (width = 3
		                OR width != 5)) AS RHS ON (LHS.catalog_entry_id = RHS.catalog_entry_id
		                                           AND LHS.catalog_level_number = RHS.catalog_level_number
		                                           AND LHS.parent_entry_id = RHS.parent_entry_id
		                                           AND LHS.previous_entry_id = RHS.previous_entry_id
		                                           AND LHS.next_entry_id = RHS.next_entry_id
		                                           AND LHS.catalog_entry_name = RHS.catalog_entry_name
		                                           AND LHS.product_stock_number = RHS.product_stock_number
		                                           AND LHS.price_in_dollars = RHS.price_in_dollars
		                                           AND LHS.price_in_euros = RHS.price_in_euros
		                                           AND LHS.price_in_pounds = RHS.price_in_pounds
		                                           AND LHS.capacity = RHS.capacity
		                                           AND LHS.length = RHS.length
		                                           AND LHS.height = RHS.height
		                                           AND LHS.width = RHS.width)) AS LHS
		   CROSS JOIN
		     (SELECT *
		      FROM catalog_contents
		      WHERE (width = 3
		             OR width != 5)) AS RHS)
		WHERE (width = length_other)
		ORDER BY catalog_entry_name

	  catalog_entry_name
	0  Fenta OrangeMAKFI
	1        Ginger Beer
	2              Ramun
	3             Ramune
Wrong output for fuzzied solution in instance spider/product_catalog/0020 (3636)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM catalog_contents

	   count(*)
	0        14
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT catalog_entry_name,
		          height,
		          COUNT() AS n
		   FROM catalog_contents
		   GROUP BY catalog_entry_name,
		            height)
		ORDER BY count___

	   count___
	0        13
Wrong output for fuzzied solution in instance spider/product_catalog/0019 (3637)
	EXPECTED OUTPUT ====

		SELECT date_of_latest_revision
		FROM Catalogs
		GROUP BY date_of_latest_revision
		HAVING count(*) > 1

	Empty DataFrame
	Columns: [date_of_latest_revision]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT date_of_latest_revision
		FROM
		  (SELECT catalog_id,
		          CATALOG_NAME,
		          catalog_publisher,
		          date_of_publication,
		          date_of_latest_revision,
		          COUNT(*) OVER () AS n
		   FROM catalogs)
		WHERE (n >= 1)
		ORDER BY date_of_latest_revision

	  date_of_latest_revision
	0     2017-09-28 06:30:03
	1     2017-10-05 07:00:10
	2     2017-10-06 02:45:08
	3     2017-10-15 11:16:59
	4     2017-10-22 11:34:31
	5     2017-11-01 05:08:00
	6     2017-11-01 16:28:28
	7     2017-11-02 17:36:04
	8     2017-11-29 11:44:21
Wrong output for fuzzied solution in instance spider/product_catalog/0007 (3638)
	EXPECTED OUTPUT ====

		SELECT t1.catalog_name,
		       t1.date_of_publication
		FROM catalogs AS t1
		JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id
		WHERE catalog_level_number > 5

	           catalog_name  date_of_publication
	0         Breakfast Tea  2012-03-16 11:49:44
	1         Breakfast Tea  2012-03-16 11:49:44
	2           Coco powder  2012-01-27 12:57:28
	3       Sparkling Water  2012-10-13 22:25:16
	4  Sparkling WaterhWGqk  2012-04-10 10:12:24
	ACTUAL OUTPUT ====

		
		SELECT CATALOG_NAME,
		       date_of_publication
		FROM
		  (SELECT *
		   FROM catalogs AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM catalog_structure
		           WHERE (catalog_level_number >= 5)) AS RHS
		        WHERE (LHS.catalog_id = RHS.catalog_id) ))
		ORDER BY CATALOG_NAME

	           catalog_name  date_of_publication
	0         Breakfast Tea  2012-03-16 11:49:44
	1    Breakfast TeaW9jZ1  2011-12-27 12:53:13
	2           Coco powder  2012-01-27 12:57:28
	3       Sparkling Water  2012-10-13 22:25:16
	4  Sparkling WaterhWGqk  2012-04-10 10:12:24
Wrong output for fuzzied solution in instance spider/product_catalog/0001 (3640)
	EXPECTED OUTPUT ====

		SELECT distinct(catalog_entry_name)
		FROM catalog_contents

	   catalog_entry_name
	0      0MFqJDr Pepper
	1          Cream Soda
	2     Cream SodaNggTx
	3            Dr Peppe
	4           Dr Pepper
	5         Ginger Beer
	6    J1SCream Sodaba8
	7        MUBRamune0lL
	8              Ramune
	9         RamuneB402y
	10        RamuneH8VFf
	11              amune
	12     lcTuPDr Pepper
	ACTUAL OUTPUT ====

		
		SELECT catalog_entry_name
		FROM catalog_contents
		ORDER BY catalog_entry_name

	   catalog_entry_name
	0      0MFqJDr Pepper
	1          Cream Soda
	2          Cream Soda
	3     Cream SodaNggTx
	4            Dr Peppe
	5           Dr Pepper
	6         Ginger Beer
	7    J1SCream Sodaba8
	8        MUBRamune0lL
	9              Ramune
	10             Ramune
	11        RamuneB402y
	12        RamuneH8VFf
	13              amune
	14     lcTuPDr Pepper
Wrong output for fuzzied solution in instance spider/product_catalog/0014 (3641)
	EXPECTED OUTPUT ====

		SELECT catalog_entry_name
		FROM catalog_contents
		WHERE product_stock_number LIKE "2%"

	  catalog_entry_name
	0  6JyGinger BeerAwy
	1    D9h06Cream Soda
	2          Dr Pepper
	ACTUAL OUTPUT ====

		
		SELECT catalog_entry_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM catalog_contents
		      ORDER BY height)
		   LIMIT 2)

	  catalog_entry_name
	0           Dr Peppe
	1             Ramune
Wrong output for fuzzied solution in instance spider/product_catalog/0009 (3642)
	EXPECTED OUTPUT ====

		SELECT catalog_entry_name
		FROM catalog_contents
		ORDER BY price_in_dollars DESC
		LIMIT 1

	  catalog_entry_name
	0              amune
	ACTUAL OUTPUT ====

		
		SELECT catalog_entry_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM catalog_contents
		      ORDER BY next_entry_id DESC)
		   LIMIT 1)

	  catalog_entry_name
	0        Ginger Beer
Wrong output for base solution in instance spider/product_catalog/0011 (3643)
	EXPECTED OUTPUT ====

	   avg_price_in_euros_  min_price_in_euros_
	0           492.863333               159.84
	ACTUAL OUTPUT ====

		SELECT avg(price_in_euros),
		       min(price_in_euros)
		FROM catalog_contents

	   avg(price_in_euros)  min(price_in_euros)
	0           492.863333               159.84
Wrong output for ground truth in instance spider/product_catalog/0011 (3643)
Wrong output for fuzzied solution in instance spider/product_catalog/0010 (3644)
	EXPECTED OUTPUT ====

		SELECT t2.catalog_level_name
		FROM catalog_contents AS t1
		JOIN catalog_structure AS t2 ON t1.catalog_level_number = t2.catalog_level_number
		ORDER BY t1.price_in_dollars
		LIMIT 1

	  catalog_level_name
	0           Category
	ACTUAL OUTPUT ====

		
		SELECT catalog_level_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.catalog_level_number AS catalog_level_number,
		                LHS.catalog_id AS catalog_id,
		                LHS.catalog_level_name AS catalog_level_name,
		                RHS.catalog_entry_id AS catalog_entry_id,
		                RHS.parent_entry_id AS parent_entry_id,
		                RHS.previous_entry_id AS previous_entry_id,
		                RHS.next_entry_id AS next_entry_id,
		                RHS.catalog_entry_name AS catalog_entry_name,
		                RHS.product_stock_number AS product_stock_number,
		                RHS.price_in_dollars AS price_in_dollars,
		                RHS.price_in_euros AS price_in_euros,
		                RHS.price_in_pounds AS price_in_pounds,
		                RHS.capacity AS capacity,
		                RHS.length AS LENGTH,
		                RHS.height AS height,
		                RHS.width AS width
		         FROM catalog_structure AS LHS
		         INNER JOIN catalog_contents AS RHS ON (LHS.catalog_level_number = RHS.catalog_level_number))
		      ORDER BY catalog_entry_id DESC)
		   LIMIT 1)

	  catalog_level_name
	0       Product( x0P
Wrong output for base solution in instance spider/news_report/0017 (3646)
	EXPECTED OUTPUT ====

	   avg_t1_age_  avg_years_working_  work_type
	0    30.333333            4.666667  Screening
	1    35.500000           14.000000      Music
	2    43.000000           16.500000       Host
	ACTUAL OUTPUT ====

		SELECT avg(t1.age),
		       avg(Years_working),
		       t2.work_type
		FROM journalist AS t1
		JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id
		GROUP BY t2.work_type

	   avg(t1.age)  avg(years_working)  work_type
	0    43.000000           16.500000       Host
	1    35.500000           14.000000      Music
	2    30.333333            4.666667  Screening
Wrong output for ground truth in instance spider/news_report/0017 (3646)
Wrong output for fuzzied solution in instance spider/news_report/0008 (3647)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM journalist
		GROUP BY Nationality
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  nationality
	0        ales
	ACTUAL OUTPUT ====

		
		SELECT nationality
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT name,
		                nationality,
		                COUNT() AS n
		         FROM journalist
		         GROUP BY name,
		                  nationality)
		      ORDER BY n DESC)
		   LIMIT 1)

	  nationality
	0     England
Wrong output for fuzzied solution in instance spider/news_report/0013 (3649)
	EXPECTED OUTPUT ====

		SELECT T3.Name,
		       COUNT(*)
		FROM news_report AS T1
		JOIN event AS T2 ON T1.Event_ID = T2.Event_ID
		JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID
		GROUP BY T3.Name

	               name  count(*)
	0        gqKopk12k1         2
	1        Fred Keeno         4
	2  Fred KeenorK6xYy         4
	3        ack Meaney         4
	4        Tom Briggs         6
	5       Fred Keenor        10
	ACTUAL OUTPUT ====

		
		SELECT name,
		       n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT name,
		             years_working,
		             COUNT() AS n
		      FROM
		        (SELECT LHS.journalist_id AS journalist_id,
		                LHS.name AS name,
		                LHS.nationality AS nationality,
		                LHS.age AS age,
		                LHS.years_working AS years_working,
		                RHS.event_id AS event_id,
		                RHS.work_type AS work_type
		         FROM journalist AS LHS
		         INNER JOIN news_report AS RHS ON (LHS.journalist_id = RHS.journalist_id))
		      GROUP BY name,
		               years_working) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM event AS RHS
		        WHERE (LHS.name = RHS.name) ))
		ORDER BY name

	               name  count___
	0        gqKopk12k1         2
	1        Fred Keeno         4
	2  Fred KeenorK6xYy         4
	3        ack Meaney         4
	4       Fred Keenor         5
	5       Fred Keenor         5
	6        Tom Briggs         6
Wrong output for fuzzied solution in instance spider/news_report/0006 (3650)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM journalist
		ORDER BY Years_working DESC
		LIMIT 1

	  nationality
	0     England
	ACTUAL OUTPUT ====

		
		SELECT nationality
		FROM
		  (SELECT LHS.journalist_id AS journalist_id,
		          LHS.name AS name,
		          LHS.nationality AS nationality,
		          LHS.age AS age,
		          LHS.years_working AS years_working,
		          RHS.journalist_id AS journalist_id_other,
		          RHS.nationality AS nationality_other,
		          RHS.age AS age_other
		   FROM journalist AS LHS
		   INNER JOIN journalist AS RHS ON (LHS.journalist_id = RHS.years_working
		                                       AND LHS.name = RHS.name))
		ORDER BY nationality

	Empty DataFrame
	Columns: [nationality]
	Index: []
Error while executing solution for instance spider/news_report/0012 (3652)

The column label 'Name' is not unique.
Error while checking ground truth in instance spider/news_report/0012 (3652)
Wrong output for fuzzied solution in instance spider/news_report/0001 (3658)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM journalist

	   count(*)
	0        31
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT age,
		             years_working,
		             COUNT() AS n
		      FROM journalist
		      GROUP BY age,
		               years_working))
		ORDER BY count___

	   count___
	0        30
Wrong output for fuzzied solution in instance spider/news_report/0014 (3659)
	EXPECTED OUTPUT ====

		SELECT T3.Name
		FROM news_report AS T1
		JOIN event AS T2 ON T1.Event_ID = T2.Event_ID
		JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID
		GROUP BY T3.Name
		HAVING COUNT(*) > 1

	                    name
	0       George Gilchrist
	1  George GilchristlFCcF
	2      Herbert Swindells
	3        eorge Gilchrist
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.journalist_id AS journalist_id,
		                LHS.name AS name,
		                LHS.nationality AS nationality,
		                LHS.age AS age,
		                LHS.years_working AS years_working,
		                LHS.event_id AS event_id,
		                LHS.work_type AS work_type,
		                RHS.venue AS venue,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.journalist_id AS journalist_id,
		                   LHS.name AS name,
		                   LHS.nationality AS nationality,
		                   LHS.age AS age,
		                   LHS.years_working AS years_working,
		                   RHS.event_id AS event_id,
		                   RHS.work_type AS work_type
		            FROM journalist AS LHS
		            INNER JOIN news_report AS RHS ON (LHS.journalist_id = RHS.journalist_id)) AS LHS
		         INNER JOIN
		           (SELECT event_id,
		                   venue,
		                   COUNT() AS n
		            FROM event
		            GROUP BY event_id,
		                     venue) AS RHS ON (LHS.event_id = RHS.event_id))
		      ORDER BY venue DESC)
		   LIMIT 1)

	                name
	0  Herbert Swindells
Wrong output for fuzzied solution in instance spider/news_report/0009 (3660)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM journalist
		WHERE Years_working > 10 INTERSECT
		  SELECT Nationality
		  FROM journalist WHERE Years_working < 3

	Empty DataFrame
	Columns: [nationality]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT nationality
		FROM journalist
		WHERE (years_working != 10
		       AND years_working < 3)
		ORDER BY nationality

	       nationality
	0           Englan
	1          England
	2  orthern Ireland
No solution for instance spider/news_report/0010 (3662)
Wrong output for fuzzied solution in instance spider/railway/0008 (3665)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM manager
		ORDER BY Age DESC
		LIMIT 1

	         name
	0  Sandy Lyle
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM manager
		      ORDER BY name DESC)
		   LIMIT 1)

	              name
	0  Sandy LyleMO0MO
No solution for instance spider/railway/0003 (3666)
No solution for instance spider/railway/0004 (3669)
No solution for instance spider/railway/0012 (3670)
Wrong output for base solution in instance spider/railway/0005 (3672)
	EXPECTED OUTPUT ====

	    avg_age_
	0  49.142857
	ACTUAL OUTPUT ====

		SELECT avg(Age)
		FROM manager

	    avg(age)
	0  49.142857
Wrong output for ground truth in instance spider/railway/0005 (3672)
Wrong output for fuzzied solution in instance spider/railway/0018 (3674)
	EXPECTED OUTPUT ====

		SELECT Country
		FROM manager
		WHERE Age > 50 INTERSECT
		  SELECT Country
		  FROM manager WHERE Age < 46

	    country
	0  ustralia
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM
		  (SELECT LHS.manager_id AS manager_id,
		          LHS.name AS name,
		          LHS.country AS country,
		          LHS.working_year_starts AS working_year_starts,
		          LHS.age AS age,
		          LHS.level AS LEVEL,
		          RHS.manager_id AS manager_id_other,
		          RHS.name AS name_other,
		          RHS.country AS country_other,
		          RHS.working_year_starts AS working_year_starts_other,
		          RHS.age AS age_other,
		          RHS.level AS level_other
		   FROM manager AS LHS
		   CROSS JOIN
		     (SELECT *
		      FROM manager
		      WHERE (age = 50
		             OR age = 46)) AS RHS)
		WHERE (age < age_other)
		ORDER BY country

	         country
	0      Australia
	1      Australia
	2  N2)TPScotland
	3  N2)TPScotland
	4       ustralia
	5       ustralia
	6       ustralia
	7       ustralia
No solution for instance spider/railway/0007 (3677)
Wrong output for fuzzied solution in instance spider/railway/0021 (3678)
	EXPECTED OUTPUT ====

		SELECT Country
		FROM manager
		WHERE Age > 50
		  OR Age < 46

	              country
	0       United States
	1       United States
	2       United States
	3  United States43jcB
	4  United StateshIFvg
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM
		  (SELECT *
		   FROM
		     (SELECT LHS.manager_id AS manager_id,
		             LHS.name AS name,
		             LHS.country AS country,
		             LHS.working_year_starts AS working_year_starts,
		             LHS.age AS age,
		             LHS.level AS LEVEL,
		             RHS.manager_id AS manager_id_other,
		             RHS.name AS name_other,
		             RHS.country AS country_other,
		             RHS.working_year_starts AS working_year_starts_other,
		             RHS.age AS age_other,
		             RHS.level AS level_other
		      FROM manager AS LHS
		      CROSS JOIN manager AS RHS)
		   WHERE (age = age_other))
		WHERE (age > 50
		       OR age < 46)
		ORDER BY country

	              country
	0       United States
	1       United States
	2       United States
	3       United States
	4  United States43jcB
	5  United States43jcB
	6  United StateshIFvg
Wrong output for fuzzied solution in instance spider/railway/0014 (3680)
	EXPECTED OUTPUT ====

		SELECT Builder
		FROM railway
		GROUP BY Builder
		ORDER BY COUNT(*) DESC
		LIMIT 1

	        builder
	0  SECR Ashford
	ACTUAL OUTPUT ====

		
		SELECT builder
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT builder,
		                COUNT() AS n
		         FROM railway
		         GROUP BY builder)
		      ORDER BY n DESC)
		   LIMIT 1)

	        builder
	0  ER Stratford
Error while executing solution for instance spider/railway/0009 (3681)

(sqlite3.OperationalError) near "FROM": syntax error
[SQL: 
SELECT name,
       LOCATION
FROM
  (SELECT LHS.train_id AS train_id,
          LHS.train_num AS train_num,
          LHS.name AS name,
          LHS.
   FROM AS
   FROM,
           LHS.arrival AS arrival,
           LHS.railway_id AS railway_id,
           RHS.railway AS railway,
           RHS.builder AS builder,
           RHS.built AS built,
           RHS.wheels AS wheels,
           RHS.location AS LOCATION,
           RHS.objectnumber AS objectnumber
   FROM train AS LHS
   LEFT JOIN
     (SELECT LHS.railway_id AS railway_id,
             LHS.railway AS railway,
             LHS.builder AS builder,
             LHS.built AS built,
             LHS.wheels AS wheels,
             LHS.location AS LOCATION,
             LHS.objectnumber AS objectnumber,
             RHS.train_id AS train_id,
             RHS.train_num AS train_num,
             RHS.name AS name,
             RHS.
      FROM AS
      FROM,
              RHS.arrival AS arrival
      FROM railway AS LHS
      INNER JOIN train AS RHS ON (LHS.railway_id = RHS.railway_id)) AS RHS ON (LHS.train_id = RHS.train_id
                                                                                  AND LHS.train_num = RHS.train_num
                                                                                  AND LHS.name = RHS.name
                                                                                  AND LHS.
                                                                                  FROM = RHS.
                                                                                  FROM
                                                                                  AND LHS.arrival = RHS.arrival
                                                                                  AND LHS.railway_id = RHS.railway_id))
ORDER BY name]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/railway/0011 (3682)

(sqlite3.OperationalError) near "FROM": syntax error
[SQL: 
SELECT railway_id,
       LOCATION
FROM
  (SELECT LOCATION,
          railway_id,
          COUNT() AS n
   FROM
     (SELECT LHS.railway_id AS railway_id,
             LHS.railway AS railway,
             LHS.builder AS builder,
             LHS.built AS built,
             LHS.wheels AS wheels,
             LHS.location AS LOCATION,
             LHS.objectnumber AS objectnumber,
             RHS.train_id AS train_id,
             RHS.train_num AS train_num,
             RHS.name AS name,
             RHS.
      FROM AS
      FROM,
              RHS.arrival AS arrival
      FROM railway AS LHS
      INNER JOIN train AS RHS ON (LHS.railway_id = RHS.railway_id))
   GROUP BY LOCATION,
            railway_id)
WHERE (n > 1)
ORDER BY railway_id]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/railway/0010 (3683)
	EXPECTED OUTPUT ====

		SELECT T1.Builder
		FROM railway AS T1
		JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID
		WHERE T2.Name = "Andaman Exp"

	               builder
	0       2NAiK()6DgHPYt
	1         ER Stratford
	2  G53GNR Doncasterrxw
	3          GWR Swindon
	4         SECR Ashford
	5         SECR Ashford
	6        Swindon Works
	7        Swindon Works
	ACTUAL OUTPUT ====

		
		SELECT `builder`
		FROM
		  (SELECT *
		   FROM `railway` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `train`
		           WHERE (`name` = 'Andaman Exp')) AS RHS
		        WHERE (LHS.railway_id = RHS.railway_id) ))
		ORDER BY builder

	               builder
	0       2NAiK()6DgHPYt
	1         ER Stratford
	2  G53GNR Doncasterrxw
	3          GWR Swindon
	4         SECR Ashford
	5        Swindon Works
Wrong output for fuzzied solution in instance spider/music_1/0042 (3684)
	EXPECTED OUTPUT ====

		SELECT T1.country
		FROM artist AS T1
		JOIN song AS T2 ON T1.artist_name = T2.artist_name
		GROUP BY T2.artist_name
		ORDER BY count(*)
		LIMIT 1

	      country
	0  bCMqRd)KoP
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.artist_name AS artist_name,
		                LHS.rating AS rating,
		                LHS.n AS n,
		                RHS.country AS country,
		                RHS.gender AS gender,
		                RHS.preferred_genre AS preferred_genre
		         FROM
		           (SELECT artist_name,
		                   rating,
		                   COUNT() AS n
		            FROM song
		            GROUP BY artist_name,
		                     rating) AS LHS
		         LEFT JOIN artist AS RHS ON (LHS.artist_name = RHS.artist_name))
		      ORDER BY artist_name)
		   LIMIT 1)

	  country
	0   India
Wrong output for fuzzied solution in instance spider/music_1/0033 (3685)
	EXPECTED OUTPUT ====

		SELECT T2.song_name
		FROM files AS T1
		JOIN song AS T2 ON T1.f_id = T2.f_id
		WHERE T1.formats = "mp3" INTERSECT
		  SELECT song_name
		  FROM song WHERE resolution < 1000

	            song_name
	0    Aj ei akash7ygwO
	1  Ami opar hoye9QDTe
	2  Ami opar hoyeg2JVj
	3    UUl5aAj ei akash
	4   hfJAj ei akasha80
	5  mI(u Ami opar hoye
	6   w07Aj ei akashyd)
	ACTUAL OUTPUT ====

		
		SELECT `song_name`
		FROM
		  (SELECT `LHS`.`f_id` AS `f_id`,
		          `LHS`.`artist_name` AS `artist_name`,
		          `LHS`.`file_size` AS `file_size`,
		          `LHS`.`duration` AS `duration`,
		          `LHS`.`formats` AS `formats`,
		          `RHS`.`song_name` AS `song_name`,
		          `RHS`.`country` AS `country`,
		          `RHS`.`genre_is` AS `genre_is`,
		          `RHS`.`rating` AS `rating`,
		          `RHS`.`languages` AS `languages`,
		          `RHS`.`releasedate` AS `releasedate`,
		          `RHS`.`resolution` AS `resolution`
		   FROM `files` AS `LHS`
		   INNER JOIN `song` AS `RHS` ON (`LHS`.`f_id` = `RHS`.`f_id`
		                                     AND `LHS`.`artist_name` = `RHS`.`artist_name`))
		WHERE (`formats` = 'mp3'
		       AND resolution <= 1000.0)
		ORDER BY song_name

	Empty DataFrame
	Columns: [song_name]
	Index: []
No solution for instance spider/music_1/0037 (3686)
No solution for instance spider/music_1/0036 (3688)
Wrong output for fuzzied solution in instance spider/music_1/0008 (3690)
	EXPECTED OUTPUT ====

		SELECT T1.artist_name,
		       T1.country
		FROM artist AS T1
		JOIN song AS T2 ON T1.artist_name = T2.artist_name
		ORDER BY T2.rating DESC
		LIMIT 3

	     artist_name      country
	0         Enriqu   IndiafwsK7
	1  c9cEnriquen2R         ndia
	2          ichel  DIeIndiav)D
	ACTUAL OUTPUT ====

		
		SELECT artist_name,
		       country
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.artist_name AS artist_name,
		                LHS.country AS country,
		                LHS.gender AS gender,
		                LHS.preferred_genre AS preferred_genre,
		                RHS.song_name AS song_name,
		                RHS.f_id AS f_id,
		                RHS.genre_is AS genre_is,
		                RHS.rating AS rating,
		                RHS.languages AS languages,
		                RHS.releasedate AS releasedate,
		                RHS.resolution AS resolution
		         FROM artist AS LHS
		         INNER JOIN song AS RHS ON (LHS.artist_name = RHS.artist_name
		                                       AND LHS.country = RHS.country))
		      ORDER BY rating DESC)
		   LIMIT 3)

	    artist_name country
	0  ()8Michel47v   India
Wrong output for fuzzied solution in instance spider/music_1/0039 (3691)
	EXPECTED OUTPUT ====

		SELECT T1.artist_name,
		       count(*)
		FROM artist AS T1
		JOIN song AS T2 ON T1.artist_name = T2.artist_name
		WHERE T2.languages = "english"
		GROUP BY T2.artist_name
		HAVING count(*) >= 1

	    artist_name  count(*)
	0     3SQ LTopu         1
	1     Iv(TFTopu         2
	2     Topu03mQc         3
	3     Topu8vHho         1
	4  gISFarida(zA         1
	5     jsu7nTopu         1
	6           opu         2
	7         vjont         2
	8    xu(TopupHu         1
	ACTUAL OUTPUT ====

		
		SELECT `artist_name`,
		       `n` AS `count___`
		FROM
		  (SELECT `artist_name`,
		          `languages`,
		          COUNT() AS `n`
		   FROM
		     (SELECT `LHS`.`artist_name` AS `artist_name`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`gender` AS `gender`,
		             `LHS`.`preferred_genre` AS `preferred_genre`,
		             `RHS`.`song_name` AS `song_name`,
		             `RHS`.`f_id` AS `f_id`,
		             `RHS`.`genre_is` AS `genre_is`,
		             `RHS`.`rating` AS `rating`,
		             `RHS`.`languages` AS `languages`,
		             `RHS`.`releasedate` AS `releasedate`,
		             `RHS`.`resolution` AS `resolution`
		      FROM `artist` AS `LHS`
		      INNER JOIN `song` AS `RHS` ON (`LHS`.`artist_name` = `RHS`.`artist_name`
		                                        AND `LHS`.`country` = `RHS`.`country`))
		   GROUP BY `artist_name`,
		            `languages`)
		WHERE (`languages` = 'english'
		       OR n > 1)
		ORDER BY artist_name

	Empty DataFrame
	Columns: [artist_name, count___]
	Index: []
Wrong output for fuzzied solution in instance spider/music_1/0038 (3692)
	EXPECTED OUTPUT ====

		SELECT min(T1.duration),
		       min(T2.rating),
		       T2.genre_is
		FROM files AS T1
		JOIN song AS T2 ON T1.f_id = T2.f_id
		GROUP BY T2.genre_is
		ORDER BY T2.genre_is

	   min(t1.duration)  min(t2.rating)      genre_is
	0         4:30ONOl8            5.99    N2)TPblues
	1              3:45            6.02   QIijVnazrul
	2         4:30uLgo2            6.00  RDXnazrulNfP
	3              2:56            6.00     bYRpopvH9
	4         4:30npOO(            6.01          blue
	5              3:45            5.98    bluesFZjIj
	6         4:30ONOl8            5.99  kIUnazrulLo5
	7              3:45            5.98   nazrul3cv)u
	8         3:4549XLS            5.99   pLJbluesFWa
	9              3:45            6.00           pop
	10        gDLaz3:45            6.00      popFHAwK
	11        2:56)78Pv            6.02      z6 Nvpop
	ACTUAL OUTPUT ====

		
		SELECT duration AS min_t1_duration_,
		       rating AS min_t2_rating_,
		       genre_is
		FROM
		  (SELECT duration,
		          genre_is,
		          MIN(rating) AS rating
		   FROM
		     (SELECT LHS.f_id AS f_id,
		             LHS.artist_name AS artist_name,
		             LHS.file_size AS file_size,
		             LHS.duration AS duration,
		             LHS.formats AS formats,
		             RHS.song_name AS song_name,
		             RHS.country AS country,
		             RHS.genre_is AS genre_is,
		             RHS.rating AS rating,
		             RHS.languages AS languages,
		             RHS.releasedate AS releasedate,
		             RHS.resolution AS resolution
		      FROM files AS LHS
		      INNER JOIN song AS RHS ON (LHS.f_id = RHS.f_id
		                                    AND LHS.artist_name = RHS.artist_name))
		   GROUP BY duration,
		            genre_is)
		ORDER BY min_t1_duration_

	  min_t1_duration_  min_t2_rating_      genre_is
	0        4:30uLgo2            6.00  RDXnazrulNfP
	1             3:45            7.98    bluesFZjIj
	2        4:30ONOl8            6.00  kIUnazrulLo5
Wrong output for fuzzied solution in instance spider/music_1/0027 (3694)
	EXPECTED OUTPUT ====

		SELECT f_id
		FROM files
		WHERE formats = "mp4"
		UNION
		SELECT f_id
		FROM song
		WHERE resolution > 720

	   f_id
	0  1.99
	1  2.00
	2  2.01
	3  2.02
	4  2.99
	5  3.00
	6  3.01
	7  4.01
	8  4.02
	ACTUAL OUTPUT ====

		
		SELECT `f_id`
		FROM
		  (SELECT `LHS`.`f_id` AS `f_id`,
		          `LHS`.`artist_name` AS `artist_name`,
		          `LHS`.`file_size` AS `file_size`,
		          `LHS`.`duration` AS `duration`,
		          `LHS`.`formats` AS `formats`,
		          `RHS`.`song_name` AS `song_name`,
		          `RHS`.`country` AS `country`,
		          `RHS`.`genre_is` AS `genre_is`,
		          `RHS`.`rating` AS `rating`,
		          `RHS`.`languages` AS `languages`,
		          `RHS`.`releasedate` AS `releasedate`,
		          `RHS`.`resolution` AS `resolution`
		   FROM `files` AS `LHS`
		   INNER JOIN `song` AS `RHS` ON (`LHS`.`f_id` = `RHS`.`f_id`
		                                     AND `LHS`.`artist_name` = `RHS`.`artist_name`))
		WHERE (`formats` = 'mp4'
		       OR resolution > 720.0)
		ORDER BY f_id

	   f_id
	0     2
	1     3
Wrong output for fuzzied solution in instance spider/music_1/0048 (3695)
	EXPECTED OUTPUT ====

		SELECT T1.duration,
		       T1.file_size,
		       T1.formats
		FROM files AS T1
		JOIN song AS T2 ON T1.f_id = T2.f_id
		WHERE T2.genre_is = "pop"
		ORDER BY T2.song_name

	       duration      file_size    formats
	0     (g2pu4:30        4.58 MB    4OE mp3
	1    0XG4:12PXl        3.78 MB        mp4
	2          2FLy         .78 MB   blGRbmp3
	3          4:12         .69 MB        mp3
	4          4:12        3.69 MB   mp43eZgO
	5          4:12         3.78 M   4hpMIStS
	6          4:12       I6bjnrk)        rGY
	7          4:12  rwL4.58 MBDK3        mp3
	8           4:3   ZBP675.10 MB        mp4
	9          4:30        3.78 MB  eT5mp4ORd
	10         4:30         4.58 M       YPCz
	11         4:30        4.58 MB        mp3
	12         4:30        5.10 MB        mp3
	13         4:30  jyE4.58 MBoJD        Y74
	14         4:30        peAO)rc        mp3
	15         4:34        3.69 MB        mp4
	16         7bf3        5.10 MB  7Bemp3jsq
	17          :12   5.10 MB6s9HQ        mp4
	18          :30  Wjz4.58 MB5Un        mp3
	19          :34        5.10 MB   iHSDVmp3
	20        G3bii        4.58 MB         p4
	21  HendsVyocQ)  3a97O2prQpA9b   3pSTump3
	22   OM34:342j7       RYK gCJe        mp3
	23         Qua9        5.10 MB   G2tfdmp4
	24   RZn4:34CKS        4.58 MB   mp3XznD8
	25    TrtWo4:34        aJ1VNpZ         p3
	26         cIGt        4.58 MB         mp
	27    cgrs68z1E        3.69 MB   zkCg07nE
	ACTUAL OUTPUT ====

		
		SELECT `duration`,
		       `file_size`,
		       `formats`
		FROM
		  (SELECT *
		   FROM `files` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `song`
		           WHERE (`genre_is` = 'pop')) AS RHS
		        WHERE (LHS.f_id = RHS.f_id
		               AND LHS.artist_name = RHS.artist_name) ))
		ORDER BY duration

	  duration file_size   formats
	0     Qua9   5.10 MB  G2tfdmp4
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
No solution for instance spider/music_1/0030 (3697)
Wrong output for fuzzied solution in instance spider/music_1/0013 (3698)
	EXPECTED OUTPUT ====

		SELECT artist_name
		FROM artist
		WHERE country = "UK" INTERSECT
		  SELECT artist_name
		  FROM song WHERE languages = "english"

	    artist_name
	0  Lpbn1Enrique
	ACTUAL OUTPUT ====

		
		SELECT `artist_name`
		FROM
		  (SELECT *
		   FROM `artist` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `song`
		           WHERE (`country` = 'UK'
		                  AND `languages` = 'english')) AS RHS
		        WHERE (LHS.artist_name = RHS.artist_name
		               AND LHS.country = RHS.country) ))
		ORDER BY artist_name

	Empty DataFrame
	Columns: [artist_name]
	Index: []
Wrong output for fuzzied solution in instance spider/music_1/0006 (3699)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.file_size,
		                T1.formats
		FROM files AS T1
		JOIN song AS T2 ON T1.f_id = T2.f_id
		WHERE T2.resolution < 800

	        file_size   formats
	0         4.10 MB       mp4
	1    4.10 MBFMG8X       mp4
	2    4.10 MBaV)xh  PV36omp4
	3         4.12 MB       mp3
	4         4.12 MB       mp4
	5         4.12 MB        p4
	6         4.12 MB  yrMm9mp4
	7          4.58 M        p4
	8         4.58 MB        mp
	9    4.58 MB6W4Sk       mp3
	10  9DO4.12 MBoNt  l5azJmp4
	11   dL8(R4.12 MB       mp4
	ACTUAL OUTPUT ====

		
		SELECT file_size,
		       formats
		FROM
		  (SELECT *
		   FROM files AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM song
		           WHERE (resolution >= 800.0)) AS RHS
		        WHERE (LHS.artist_name = RHS.artist_name
		               AND LHS.f_id = RHS.f_id) ))
		ORDER BY file_size

	        file_size   formats
	0         4.10 MB       mp4
	1    4.10 MBFMG8X       mp4
	2    4.10 MBaV)xh  PV36omp4
	3         4.12 MB       mp3
	4         4.12 MB       mp4
	5         4.12 MB       mp4
	6         4.12 MB       mp4
	7         4.12 MB        p4
	8         4.12 MB  yrMm9mp4
	9          4.58 M        p4
	10        4.58 MB        mp
	11        4.58 MB        mp
	12   4.58 MB6W4Sk       mp3
	13  9DO4.12 MBoNt  l5azJmp4
	14   dL8(R4.12 MB       mp4
Wrong output for fuzzied solution in instance spider/music_1/0012 (3701)
	EXPECTED OUTPUT ====

		SELECT formats
		FROM files
		GROUP BY formats
		ORDER BY COUNT (*) DESC
		LIMIT 1

	  formats
	0     mp4
	ACTUAL OUTPUT ====

		
		SELECT formats
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT duration,
		                formats,
		                COUNT() AS n
		         FROM files
		         GROUP BY duration,
		                  formats)
		      ORDER BY formats DESC)
		   LIMIT 1)

	     formats
	0  w()mp30gt
Wrong output for fuzzied solution in instance spider/music_1/0015 (3703)
	EXPECTED OUTPUT ====

		SELECT T1.country
		FROM artist AS T1
		JOIN song AS T2 ON T1.artist_name = T2.artist_name
		WHERE T1.gender = "Female"
		  AND T2.languages = "bangla"

	       country
	0     AJfUKN)L
	1     AJfUKN)L
	2     AJfUKN)L
	3      EWSGaUK
	4  GZJIndiaTj2
	5           UK
	6           UK
	7   aD8TqIndia
	ACTUAL OUTPUT ====

		
		SELECT `country`
		FROM
		  (SELECT `LHS`.`artist_name` AS `artist_name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`gender` AS `gender`,
		          `LHS`.`preferred_genre` AS `preferred_genre`,
		          `RHS`.`song_name` AS `song_name`,
		          `RHS`.`f_id` AS `f_id`,
		          `RHS`.`genre_is` AS `genre_is`,
		          `RHS`.`rating` AS `rating`,
		          `RHS`.`languages` AS `languages`,
		          `RHS`.`releasedate` AS `releasedate`,
		          `RHS`.`resolution` AS `resolution`
		   FROM `artist` AS `LHS`
		   INNER JOIN `song` AS `RHS` ON (`LHS`.`artist_name` = `RHS`.`artist_name`
		                                     AND `LHS`.`country` = `RHS`.`country`))
		WHERE (`gender` = 'Female'
		       AND `languages` = 'bangla')
		ORDER BY country

	Empty DataFrame
	Columns: [country]
	Index: []
Wrong output for fuzzied solution in instance spider/music_1/0005 (3704)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.artist_name,
		                T1.country
		FROM artist AS T1
		JOIN song AS T2 ON T1.artist_name = T2.artist_name
		WHERE T2.rating > 9

	    artist_name     country
	0  Lpbn1Enrique    2CqUKp21
	1    M0hToputmv       India
	2           Top       India
	3          rity  India(k52B
	ACTUAL OUTPUT ====

		
		SELECT artist_name,
		       country
		FROM
		  (SELECT LHS.artist_name AS artist_name,
		          LHS.country AS country,
		          LHS.gender AS gender,
		          LHS.preferred_genre AS preferred_genre,
		          RHS.song_name AS song_name,
		          RHS.f_id AS f_id,
		          RHS.genre_is AS genre_is,
		          RHS.rating AS rating,
		          RHS.languages AS languages,
		          RHS.releasedate AS releasedate,
		          RHS.resolution AS resolution
		   FROM artist AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM song
		      WHERE (rating > 9.0)) AS RHS ON (LHS.artist_name = RHS.artist_name
		                                       AND LHS.country = RHS.country))
		ORDER BY artist_name

	Empty DataFrame
	Columns: [artist_name, country]
	Index: []
No solution for instance spider/music_1/0016 (3705)
Wrong output for fuzzied solution in instance spider/music_1/0050 (3706)
	EXPECTED OUTPUT ====

		SELECT DISTINCT artist_name
		FROM artist
		WHERE country = "Bangladesh"
		EXCEPT
		SELECT DISTINCT artist_name
		FROM song
		WHERE rating > 7

	    artist_name
	0  rmG TEnrique
	ACTUAL OUTPUT ====

		
		SELECT `artist_name`
		FROM
		  (SELECT *
		   FROM `song` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM `artist` AS `RHS`
		        WHERE (`LHS`.`artist_name` = `RHS`.`artist_name`
		               AND `LHS`.`country` = `RHS`.`country`) ))
		WHERE (`country` = 'Bangladesh'
		       AND rating <= 7.0)
		ORDER BY artist_name

	Empty DataFrame
	Columns: [artist_name]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
No solution for instance spider/music_1/0018 (3709)
No solution for instance spider/music_1/0041 (3710)
Wrong output for fuzzied solution in instance spider/music_1/0035 (3711)
	EXPECTED OUTPUT ====

		SELECT avg(rating),
		       avg(resolution)
		FROM song
		WHERE languages = "bangla"

	  avg(rating) avg(resolution)
	0        None            None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(`rating`) OVER () AS `avg_rating_`,
		                                   `meanresolution` AS `avg_resolution_`
		FROM
		  (SELECT `song_name`,
		          `artist_name`,
		          `country`,
		          `f_id`,
		          `genre_is`,
		          `rating`,
		          `languages`,
		          `releasedate`,
		          `resolution`,
		          AVG(`resolution`) OVER () AS `meanresolution`
		   FROM
		     (SELECT *
		      FROM `song`
		      WHERE (`languages` = 'bangla')))
		ORDER BY avg_rating_

	Empty DataFrame
	Columns: [avg_rating_, avg_resolution_]
	Index: []
Wrong output for fuzzied solution in instance spider/music_1/0019 (3713)
	EXPECTED OUTPUT ====

		SELECT T1.gender,
		       T1.artist_name
		FROM artist AS T1
		JOIN song AS T2 ON T1.artist_name = T2.artist_name
		ORDER BY T2.resolution
		LIMIT 1

	         gender artist_name
	0  tv5Femaletru        Prit
	ACTUAL OUTPUT ====

		
		SELECT gender,
		       artist_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.artist_name AS artist_name,
		                LHS.country AS country,
		                LHS.gender AS gender,
		                LHS.preferred_genre AS preferred_genre,
		                RHS.song_name AS song_name,
		                RHS.f_id AS f_id,
		                RHS.genre_is AS genre_is,
		                RHS.rating AS rating,
		                RHS.languages AS languages,
		                RHS.releasedate AS releasedate,
		                RHS.resolution AS resolution
		         FROM artist AS LHS
		         INNER JOIN song AS RHS ON (LHS.artist_name = RHS.artist_name
		                                       AND LHS.country = RHS.country))
		      ORDER BY resolution)
		   LIMIT 1)

	  gender   artist_name
	0  Femal  ()8Michel47v
Wrong output for fuzzied solution in instance spider/music_1/0007 (3714)
	EXPECTED OUTPUT ====

		SELECT T1.artist_name
		FROM song AS T1
		JOIN files AS T2 ON T1.f_id = T2.f_id
		ORDER BY T2.duration
		LIMIT 1

	  artist_name
	0      Enriqu
	ACTUAL OUTPUT ====

		
		SELECT artist_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.f_id AS f_id,
		                LHS.artist_name AS artist_name,
		                LHS.file_size AS file_size,
		                LHS.duration AS duration,
		                LHS.formats AS formats,
		                RHS.song_name AS song_name,
		                RHS.country AS country,
		                RHS.genre_is AS genre_is,
		                RHS.rating AS rating,
		                RHS.languages AS languages,
		                RHS.releasedate AS releasedate,
		                RHS.resolution AS resolution
		         FROM files AS LHS
		         INNER JOIN song AS RHS ON (LHS.f_id = RHS.f_id
		                                       AND LHS.artist_name = RHS.artist_name))
		      ORDER BY duration)
		   LIMIT 1)

	  artist_name
	0        Prit
Wrong output for fuzzied solution in instance spider/music_1/0034 (3715)
	EXPECTED OUTPUT ====

		SELECT artist_name
		FROM artist
		WHERE country = "UK" INTERSECT
		  SELECT T1.artist_name
		  FROM artist AS T1
		  JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = "english"

	    artist_name
	0  Lpbn1Enrique
	ACTUAL OUTPUT ====

		
		SELECT `artist_name`
		FROM
		  (SELECT *
		   FROM `artist` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `song`
		           WHERE (`country` = 'UK'
		                  AND `languages` = 'english')) AS RHS
		        WHERE (LHS.artist_name = RHS.artist_name
		               AND LHS.country = RHS.country) ))
		ORDER BY artist_name

	Empty DataFrame
	Columns: [artist_name]
	Index: []
Wrong output for fuzzied solution in instance spider/music_1/0024 (3716)
	EXPECTED OUTPUT ====

		SELECT T1.artist_name,
		       T1.gender
		FROM artist AS T1
		JOIN song AS T2 ON T1.artist_name = T2.artist_name
		WHERE T2.releasedate LIKE "%Mar%"

	     artist_name       gender
	0   (R9wd8eA9L6)       Female
	1   (R9wd8eA9L6)       Female
	2   )OSwcH7N1McZ    7vXI(8TFy
	3   )OSwcH7N1McZ    7vXI(8TFy
	4           1yLY    MaleNjLgC
	..           ...          ...
	82   qXz4htBbHY2       Female
	83   qXz4htBbHY2       Female
	84          rity  WHu6XFemale
	85          rity  WHu6XFemale
	86          rity  WHu6XFemale
	
	[87 rows x 2 columns]
	ACTUAL OUTPUT ====

		
		SELECT artist_name,
		       gender
		FROM
		  (SELECT *
		   FROM artist AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT song_name,
		                  artist_name,
		                  country,
		                  f_id,
		                  genre_is,
		                  f_id AS rating,
		                  languages,
		                  releasedate,
		                  resolution,
		                  song_name_other,
		                  artist_name_other,
		                  country_other,
		                  f_id_other,
		                  genre_is_other,
		                  languages_other,
		                  releasedate_other,
		                  resolution_other
		           FROM
		             (SELECT LHS.song_name AS song_name,
		                     LHS.artist_name AS artist_name,
		                     LHS.country AS country,
		                     LHS.f_id AS f_id,
		                     LHS.genre_is AS genre_is,
		                     LHS.rating AS rating,
		                     LHS.languages AS languages,
		                     LHS.releasedate AS releasedate,
		                     LHS.resolution AS resolution,
		                     RHS.song_name AS song_name_other,
		                     RHS.artist_name AS artist_name_other,
		                     RHS.country AS country_other,
		                     RHS.f_id AS f_id_other,
		                     RHS.genre_is AS genre_is_other,
		                     RHS.languages AS languages_other,
		                     RHS.releasedate AS releasedate_other,
		                     RHS.resolution AS resolution_other
		              FROM song AS LHS
		              INNER JOIN song AS RHS ON (LHS.f_id = RHS.rating))) AS RHS
		        WHERE (LHS.artist_name = RHS.artist_name
		               AND LHS.country = RHS.country) ))
		ORDER BY artist_name

	    artist_name        gender
	0  (R9wd8eA9L6)        Female
	1    BhxOGPrity  RlBFemaleXwT
	2         Prity   gi6HSFemale
	3           Top     MaleGs5Gj
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
No solution for instance spider/music_1/0023 (3718)
Wrong output for fuzzied solution in instance spider/music_1/0001 (3719)
	EXPECTED OUTPUT ====

		SELECT song_name,
		       releasedate
		FROM song
		ORDER BY releasedate DESC
		LIMIT 1

	          song_name  releasedate
	0  G25HRAj ei akash  28-JUL-1999
	ACTUAL OUTPUT ====

		
		SELECT song_name,
		       releasedate
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM song
		      ORDER BY resolution)
		   LIMIT 1)

	             song_name  releasedate
	0  NJUAmi opar hoyeDCp  28-JUL-1999
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
No solution for instance spider/music_1/0046 (3721)
Wrong output for fuzzied solution in instance spider/music_1/0014 (3723)
	EXPECTED OUTPUT ====

		SELECT f_id
		FROM files
		WHERE formats = "mp4" INTERSECT
		  SELECT f_id
		  FROM song WHERE resolution < 1000

	   f_id
	0  1.99
	1  2.00
	2  2.02
	3  2.99
	4  3.00
	5  3.01
	ACTUAL OUTPUT ====

		
		SELECT `f_id`
		FROM
		  (SELECT `LHS`.`f_id` AS `f_id`,
		          `LHS`.`artist_name` AS `artist_name`,
		          `LHS`.`file_size` AS `file_size`,
		          `LHS`.`duration` AS `duration`,
		          `LHS`.`formats` AS `formats`,
		          `RHS`.`song_name` AS `song_name`,
		          `RHS`.`country` AS `country`,
		          `RHS`.`genre_is` AS `genre_is`,
		          `RHS`.`rating` AS `rating`,
		          `RHS`.`languages` AS `languages`,
		          `RHS`.`releasedate` AS `releasedate`,
		          `RHS`.`resolution` AS `resolution`
		   FROM `files` AS `LHS`
		   INNER JOIN `song` AS `RHS` ON (`LHS`.`f_id` = `RHS`.`f_id`
		                                     AND `LHS`.`artist_name` = `RHS`.`artist_name`))
		WHERE (`formats` = 'mp4'
		       AND resolution <= 1000.0)
		ORDER BY f_id

	   f_id
	0     2
	1     3
No solution for instance spider/music_1/0009 (3724)
Wrong output for base solution in instance spider/music_1/0011 (3726)
	EXPECTED OUTPUT ====

	   avg_t2_rating_
	0        7.333333
	ACTUAL OUTPUT ====

		SELECT avg(T2.rating)
		FROM artist AS T1
		JOIN song AS T2 ON T1.artist_name = T2.artist_name
		WHERE T1.gender = "Female"

	   avg(t2.rating)
	0        7.333333
Wrong output for ground truth in instance spider/music_1/0011 (3726)
Wrong output for fuzzied solution in instance spider/music_1/0029 (3727)
	EXPECTED OUTPUT ====

		SELECT languages
		FROM song
		GROUP BY languages
		ORDER BY count(*) DESC
		LIMIT 1

	  languages
	0   english
	ACTUAL OUTPUT ====

		
		SELECT languages
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT languages,
		                COUNT() AS n
		         FROM song
		         GROUP BY languages)
		      ORDER BY n DESC)
		   LIMIT 1)

	  languages
	0    bangla
Wrong output for fuzzied solution in instance spider/music_1/0040 (3729)
	EXPECTED OUTPUT ====

		SELECT T1.artist_name,
		       T1.country
		FROM artist AS T1
		JOIN song AS T2 ON T1.artist_name = T2.artist_name
		WHERE T2.resolution > 900
		GROUP BY T2.artist_name
		HAVING count(*) >= 1

	   artist_name     country
	0    fet(2Topu          UK
	1  kxG42Farida       India
	2    mGuzjTopu  aD8TqIndia
	ACTUAL OUTPUT ====

		
		SELECT artist_name,
		       country
		FROM
		  (SELECT LHS.artist_name AS artist_name,
		          LHS.country AS country,
		          LHS.gender AS gender,
		          LHS.preferred_genre AS preferred_genre,
		          RHS.song_name AS song_name,
		          RHS.f_id AS f_id,
		          RHS.genre_is AS genre_is,
		          RHS.rating AS rating,
		          RHS.languages AS languages,
		          RHS.releasedate AS releasedate,
		          RHS.resolution AS resolution
		   FROM artist AS LHS
		   INNER JOIN song AS RHS ON (LHS.artist_name = RHS.artist_name
		                                 AND LHS.country = RHS.country))
		WHERE (resolution >= 900.0
		       OR resolution <= 1.0)
		ORDER BY artist_name

	Empty DataFrame
	Columns: [artist_name, country]
	Index: []
No solution for instance spider/music_1/0028 (3730)
Wrong output for fuzzied solution in instance spider/music_1/0049 (3731)
	EXPECTED OUTPUT ====

		SELECT DISTINCT artist_name
		FROM song
		WHERE languages = "english"
		EXCEPT
		SELECT DISTINCT artist_name
		FROM song
		WHERE rating > 8

	     artist_name
	0      TopuX3hSC
	1  ybqEnrique77G
	ACTUAL OUTPUT ====

		
		SELECT `artist_name`
		FROM `song`
		WHERE (`languages` = 'english'
		       AND rating <= 8.0)
		ORDER BY artist_name

	     artist_name
	0      F d1YTopu
	1     LlgTopu1tS
	2      TopuX3hSC
	3  ybqEnrique77G
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0037 (3735)
	EXPECTED OUTPUT ====

		SELECT T2.location_name,
		       T1.location_code
		FROM Document_locations AS T1
		JOIN Ref_locations AS T2 ON T1.location_code = T2.location_code
		GROUP BY T1.location_code
		ORDER BY count(*) ASC
		LIMIT 1

	  location_name location_code
	0   CanadaX1ZRi             b
	ACTUAL OUTPUT ====

		
		SELECT location_name,
		       location_code
		FROM
		  (SELECT location_code,
		          location_name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.location_code AS location_code,
		             LHS.location_name AS location_name,
		             LHS.location_description AS location_description,
		             RHS.document_id AS document_id,
		             RHS.date_in_location_from AS date_in_location_from,
		             RHS.date_in_locaton_to AS date_in_locaton_to
		      FROM ref_locations AS LHS
		      INNER JOIN document_locations AS RHS ON (LHS.location_code = RHS.location_code))
		   GROUP BY location_code,
		            location_name)
		WHERE (n <= 1)
		ORDER BY location_name

	Empty DataFrame
	Columns: [location_name, location_code]
	Index: []
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0036 (3737)
	EXPECTED OUTPUT ====

		SELECT location_code
		FROM Document_locations
		GROUP BY location_code
		HAVING count(*) >= 3

	  location_code
	0              
	1        (4WvDe
	2       B4HbQ(o
	3       FIynjv3
	4             b
	5             e
	6        e3UNZE
	7        mxfhcn
	ACTUAL OUTPUT ====

		
		SELECT location_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT date_in_locaton_to,
		                location_code,
		                COUNT() AS n
		         FROM document_locations
		         GROUP BY date_in_locaton_to,
		                  location_code)
		      ORDER BY date_in_locaton_to)
		   LIMIT 3)

	  location_code
	0              
	1        (4WvDe
	2       B4HbQ(o
Error while executing solution for instance spider/cre_Doc_Tracking_DB/0038 (3741)

The column label 'Employee_Name' is not unique.
Error while checking ground truth in instance spider/cre_Doc_Tracking_DB/0038 (3741)
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0003 (3742)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Ref_document_types

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT document_type_description,
		          COUNT() AS n
		   FROM ref_document_types
		   GROUP BY document_type_description)
		ORDER BY count___

	   count___
	0         1
	1         1
	2         6
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0027 (3743)
	EXPECTED OUTPUT ====

		SELECT T2.role_name,
		       T2.role_description
		FROM Employees AS T1
		JOIN ROLES AS T2 ON T1.role_code = T2.role_code
		WHERE T1.employee_name = "Ebba"

	         role_name                                   role_description
	0          Manager  (VBRwguoDvhybEx4weeaB9fEga3razb6nhh2Lg nefMzYn...
	1           Manage  Aut modi nihil molestias temporibus sit rerum....
	2          Manager  Aut modi nihil molestias temporibus sit rerum....
	3   O40csM5XXLXPTX  Aut modi nihil molestias temporibus sit rerum....
	4          Manager  Aut modi nihil molestias temporibus sit rerum....
	5     Manager5VduO  D9xUKEt totam est quibusdam aspernatur ut. Vit...
	6     ManagerJuVhk  Et totam est quibusdam aspernatur ut. Vitae pe...
	7          Manager  Ut sed quae eaque mollitia qui hic. Natus ea e...
	8     ManagerLJ(1Q  Ut sed quae eaque mollitia qui hic. Natus ea e...
	9        C4nhhng8b  Vero harum corrupti odit ipsa vero et odio. Is...
	10       C4nhhng8b  Vero harum corrupti odit ipsa vero et odio. Is...
	11           Photo  u(VBRwguoDvhybEx4weeaB9fEga3razb6nhh2Lg nefMzY...
	ACTUAL OUTPUT ====

		
		SELECT `role_name`,
		       `role_description`
		FROM
		  (SELECT *
		   FROM `roles` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `employees`
		           WHERE (`employee_name` = 'Ebba')) AS RHS
		        WHERE (LHS.role_code = RHS.role_code) ))
		ORDER BY role_name

	         role_name                                   role_description
	0          Manager  (VBRwguoDvhybEx4weeaB9fEga3razb6nhh2Lg nefMzYn...
	1           Manage  Aut modi nihil molestias temporibus sit rerum....
	2          Manager  Aut modi nihil molestias temporibus sit rerum....
	3   O40csM5XXLXPTX  Aut modi nihil molestias temporibus sit rerum....
	4          Manager  Aut modi nihil molestias temporibus sit rerum....
	5     Manager5VduO  D9xUKEt totam est quibusdam aspernatur ut. Vit...
	6     ManagerJuVhk  Et totam est quibusdam aspernatur ut. Vitae pe...
	7          Manager  Ut sed quae eaque mollitia qui hic. Natus ea e...
	8     ManagerLJ(1Q  Ut sed quae eaque mollitia qui hic. Natus ea e...
	9        C4nhhng8b  Vero harum corrupti odit ipsa vero et odio. Is...
	10           Photo  u(VBRwguoDvhybEx4weeaB9fEga3razb6nhh2Lg nefMzY...
Wrong output for base solution in instance spider/cre_Doc_Tracking_DB/0013 (3746)
	EXPECTED OUTPUT ====

	  location_name location_description
	0        Xiamen                  NaN
	ACTUAL OUTPUT ====

		SELECT location_name,
		       location_description
		FROM Ref_locations
		WHERE location_code = "x"

	  location_name location_description
	0        Xiamen                     
Wrong output for ground truth in instance spider/cre_Doc_Tracking_DB/0013 (3746)
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0026 (3750)
	EXPECTED OUTPUT ====

		SELECT role_code
		FROM Employees
		GROUP BY role_code
		ORDER BY count(*) ASC
		LIMIT 1

	  role_code
	0   HRW9jZ1
	ACTUAL OUTPUT ====

		
		SELECT role_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT gender_mfu,
		                role_code,
		                COUNT() AS n
		         FROM employees
		         GROUP BY gender_mfu,
		                  role_code)
		      ORDER BY n)
		   LIMIT 1)

	  role_code
	0         R
Wrong output for base solution in instance spider/cre_Doc_Tracking_DB/0005 (3752)
	EXPECTED OUTPUT ====

	  document_type_name document_type_description
	0             Review                       NaN
	ACTUAL OUTPUT ====

		SELECT document_type_name,
		       document_type_description
		FROM Ref_document_types
		WHERE document_type_code = "RV"

	  document_type_name document_type_description
	0             Review                          
Wrong output for ground truth in instance spider/cre_Doc_Tracking_DB/0005 (3752)
No solution for instance spider/cre_Doc_Tracking_DB/0045 (3755)
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0035 (3758)
	EXPECTED OUTPUT ====

		SELECT location_code
		FROM Document_locations
		GROUP BY location_code
		ORDER BY count(*) DESC
		LIMIT 1

	  location_code
	0             e
	ACTUAL OUTPUT ====

		
		SELECT location_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT date_in_locaton_to,
		                location_code,
		                COUNT() AS n
		         FROM document_locations
		         GROUP BY date_in_locaton_to,
		                  location_code)
		      ORDER BY date_in_locaton_to)
		   LIMIT 1)

	  location_code
	0              
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0007 (3761)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM All_documents
		WHERE document_type_code = "CV"
		  OR document_type_code = "BK"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `all_documents`
		WHERE (`document_type_code` = 'CV'
		       OR `document_type_code` = 'BK')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0024 (3763)
	EXPECTED OUTPUT ====

		SELECT role_code
		FROM Employees
		GROUP BY role_code
		ORDER BY count(*) DESC
		LIMIT 1

	  role_code
	0         E
	ACTUAL OUTPUT ====

		
		SELECT role_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT date_of_birth,
		                role_code,
		                COUNT() AS n
		         FROM employees
		         GROUP BY date_of_birth,
		                  role_code)
		      ORDER BY role_code)
		   LIMIT 1)

	  role_code
	0   9KCz(PR
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0025 (3770)
	EXPECTED OUTPUT ====

		SELECT role_code
		FROM Employees
		GROUP BY role_code
		HAVING count(*) >= 3

	  role_code
	0   9KCz(PR
	1         E
	2        PT
	3   rox gED
	ACTUAL OUTPUT ====

		
		SELECT role_code
		FROM
		  (SELECT other_details,
		          role_code,
		          COUNT() AS n
		   FROM employees
		   GROUP BY other_details,
		            role_code)
		WHERE (n > 3)
		ORDER BY role_code

	Empty DataFrame
	Columns: [role_code]
	Index: []
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0010 (3773)
	EXPECTED OUTPUT ====

		SELECT T2.document_type_name
		FROM All_documents AS T1
		JOIN Ref_document_types AS T2 ON T1.document_type_code = T2.document_type_code
		WHERE T1.document_name = "How to read a book"

	  document_type_name
	0              Paper
	1              Paper
	2              Paper
	3         Paper7AQEw
	4               aper
	ACTUAL OUTPUT ====

		
		SELECT `document_type_name`
		FROM
		  (SELECT *
		   FROM `ref_document_types` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `all_documents`
		           WHERE (`document_name` = 'How to read a book')) AS RHS
		        WHERE (LHS.document_type_code = RHS.document_type_code) ))
		ORDER BY document_type_name

	  document_type_name
	0              Paper
	1              Paper
	2         Paper7AQEw
	3               aper
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0044 (3774)
	EXPECTED OUTPUT ====

		SELECT employee_id
		FROM Employees
		EXCEPT
		SELECT Destroyed_by_Employee_ID
		FROM Documents_to_be_destroyed

	    employee_id
	0            30
	1            32
	2            38
	3            39
	4            53
	5            55
	6            57
	7           154
	8           155
	9           156
	10          158
	11          179
	12          182
	ACTUAL OUTPUT ====

		
		SELECT employee_id
		FROM
		  (SELECT *
		   FROM employees AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT employee_id,
		                  role_code,
		                  employee_name,
		                  gender_mfu,
		                  date_of_birth,
		                  other_details,
		                  document_id,
		                  destruction_authorised_by_employee_id,
		                  planned_destruction_date,
		                  actual_destruction_date,
		                  other_details_other,
		                  employee_id AS destroyed_by_employee_id
		           FROM
		             (SELECT LHS.employee_id AS employee_id,
		                     LHS.role_code AS role_code,
		                     LHS.employee_name AS employee_name,
		                     LHS.gender_mfu AS gender_mfu,
		                     LHS.date_of_birth AS date_of_birth,
		                     LHS.other_details AS other_details,
		                     RHS.document_id AS document_id,
		                     RHS.destruction_authorised_by_employee_id AS destruction_authorised_by_employee_id,
		                     RHS.planned_destruction_date AS planned_destruction_date,
		                     RHS.actual_destruction_date AS actual_destruction_date,
		                     RHS.other_details AS other_details_other
		              FROM employees AS LHS
		              INNER JOIN documents_to_be_destroyed AS RHS ON (LHS.employee_id = RHS.destroyed_by_employee_id))) AS RHS
		        WHERE (LHS.employee_name = RHS.employee_name) ))
		ORDER BY employee_id

	   employee_id
	0           30
	1           32
	2           38
	3           39
	4          154
	5          182
Wrong output for fuzzied solution in instance spider/cre_Doc_Tracking_DB/0040 (3775)
	EXPECTED OUTPUT ====

		SELECT Destroyed_by_Employee_ID,
		       count(*)
		FROM Documents_to_be_destroyed
		GROUP BY Destroyed_by_Employee_ID

	   destroyed_by_employee_id  count(*)
	0                        28         1
	1                        31         1
	2                        40         1
	3                        54         1
	4                        56         1
	5                       183         1
	6                       157         2
	7                       181         2
	ACTUAL OUTPUT ====

		
		SELECT destroyed_by_employee_id,
		       n AS count___
		FROM
		  (SELECT destroyed_by_employee_id,
		          other_details,
		          COUNT() AS n
		   FROM documents_to_be_destroyed
		   GROUP BY destroyed_by_employee_id,
		            other_details)
		ORDER BY destroyed_by_employee_id

	   destroyed_by_employee_id  count___
	0                        28         1
	1                        31         1
	2                        40         1
	3                        54         1
	4                        56         1
	5                       157         1
	6                       157         1
	7                       181         1
	8                       181         1
	9                       183         1
Wrong output for fuzzied solution in instance spider/storm_record/0017 (3779)
	EXPECTED OUTPUT ====

		SELECT name
		FROM storm
		EXCEPT
		SELECT T1.name
		FROM storm AS T1
		JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id
		GROUP BY T1.storm_id
		HAVING count(*) >= 2

	     name
	0    E22b
	1  lTFsna
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM storm AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT storm_id,
		                     COUNT() AS n
		              FROM affected_region
		              GROUP BY storm_id)
		           WHERE (n >= 2)) AS RHS
		        WHERE (LHS.storm_id = RHS.storm_id) ))
		ORDER BY name

	     name
	0    E22b
	1    Four
	2  lTFsna
Wrong output for base solution in instance spider/storm_record/0008 (3780)
	EXPECTED OUTPUT ====

	   sum_number_deaths_  sum_damage_millions_usd_
	0                   5                    40.529
	ACTUAL OUTPUT ====

		SELECT sum(number_deaths),
		       sum(damage_millions_USD)
		FROM storm
		WHERE max_speed >
		    (SELECT avg(max_speed)
		     FROM storm)

	   sum(number_deaths)  sum(damage_millions_usd)
	0                   5                    40.529
Wrong output for ground truth in instance spider/storm_record/0008 (3780)
Wrong output for fuzzied solution in instance spider/storm_record/0003 (3781)
	EXPECTED OUTPUT ====

		SELECT region_name
		FROM region
		ORDER BY region_name

	    region_name
	0  0yHnGAndorra
	1   Afghanistan
	2   Afghanistan
	3       Algeria
	4        Andorr
	5  AndorraBIQ)G
	6         Angol
	7         ngola
	8  vIL5PAndorra
	ACTUAL OUTPUT ====

		
		SELECT region_name
		FROM
		  (SELECT LHS.region_name AS region_name
		   FROM
		     (SELECT region_name
		      FROM region INTERSECT SELECT region_name
		      FROM region) AS LHS
		   INNER JOIN
		     (SELECT region_name
		      FROM region INTERSECT SELECT region_name
		      FROM region) AS RHS ON (LHS.region_name = RHS.region_name))
		ORDER BY region_name

	    region_name
	0  0yHnGAndorra
	1   Afghanistan
	2       Algeria
	3        Andorr
	4  AndorraBIQ)G
	5         Angol
	6         ngola
	7  vIL5PAndorra
Wrong output for fuzzied solution in instance spider/storm_record/0022 (3782)
	EXPECTED OUTPUT ====

		SELECT T3.Name
		FROM affected_region AS T1
		JOIN region AS T2 ON T1.region_id = T2.region_id
		JOIN storm AS T3 ON T1.storm_id = T3.storm_id
		WHERE T2.Region_name = 'Afghanistan' INTERSECT
		  SELECT T3.Name
		  FROM affected_region AS T1
		  JOIN region AS T2 ON T1.region_id = T2.region_id
		  JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Albania'

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `name`
		FROM
		  (SELECT `LHS`.`storm_id` AS `storm_id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`dates_active` AS `dates_active`,
		          `LHS`.`max_speed` AS `max_speed`,
		          `LHS`.`damage_millions_usd` AS `damage_millions_usd`,
		          `LHS`.`number_deaths` AS `number_deaths`,
		          `LHS`.`region_id` AS `region_id`,
		          `LHS`.`number_city_affected` AS `number_city_affected`,
		          `RHS`.`region_code` AS `region_code`,
		          `RHS`.`region_name` AS `region_name`
		   FROM
		     (SELECT `LHS`.`storm_id` AS `storm_id`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`dates_active` AS `dates_active`,
		             `LHS`.`max_speed` AS `max_speed`,
		             `LHS`.`damage_millions_usd` AS `damage_millions_usd`,
		             `LHS`.`number_deaths` AS `number_deaths`,
		             `RHS`.`region_id` AS `region_id`,
		             `RHS`.`number_city_affected` AS `number_city_affected`
		      FROM `storm` AS `LHS`
		      INNER JOIN `affected_region` AS `RHS` ON (`LHS`.`storm_id` = `RHS`.`storm_id`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `region`
		      WHERE (`region_name` = 'Afghanistan'
		             OR `region_name` = 'Albania')) AS RHS ON (LHS.storm_id = RHS.region_id))
		ORDER BY name

	  name
	0  Six
Wrong output for fuzzied solution in instance spider/storm_record/0013 (3783)
	EXPECTED OUTPUT ====

		SELECT T1.name,
		       count(*)
		FROM storm AS T1
		JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id
		GROUP BY T1.storm_id

	         name  count(*)
	0         Nin         3
	1        Nine         5
	2         Six         5
	3       Three         5
	4  m5dNine21J         5
	5        Thre         6
	6       Three         6
	7    MrgowSix         7
	8         Six         7
	9         Six         8
	ACTUAL OUTPUT ====

		
		SELECT name,
		       n AS count___
		FROM
		  (SELECT max_speed,
		          name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.storm_id AS storm_id,
		             LHS.name AS name,
		             LHS.dates_active AS dates_active,
		             LHS.max_speed AS max_speed,
		             LHS.damage_millions_usd AS damage_millions_usd,
		             LHS.number_deaths AS number_deaths,
		             RHS.region_id AS region_id,
		             RHS.number_city_affected AS number_city_affected
		      FROM storm AS LHS
		      INNER JOIN affected_region AS RHS ON (LHS.storm_id = RHS.storm_id))
		   GROUP BY max_speed,
		            name)
		ORDER BY name

	         name  count___
	0         Nin         3
	1        Nine         5
	2       Three         5
	3  m5dNine21J         5
	4        Thre         6
	5       Three         6
	6    MrgowSix         7
	7         Six        20
Wrong output for fuzzied solution in instance spider/storm_record/0004 (3785)
	EXPECTED OUTPUT ====

		SELECT region_name
		FROM region
		WHERE region_name != 'Denmark'

	      region_name
	0    0yHnGAndorra
	1    2y(AngolanXL
	2     Afghanistan
	3         Algeria
	4         Algeria
	5          Andorr
	6    Andorrau4)1C
	7           Angol
	8   dYPAlgeria1hM
	9          ndorra
	10         ndorra
	ACTUAL OUTPUT ====

		
		SELECT `region_name`
		FROM
		  (SELECT `region_name`
		   FROM `region`
		   WHERE (`region_name` != 'Denmark') INTERSECT
		     SELECT region_name
		     FROM region)
		ORDER BY region_name

	     region_name
	0   0yHnGAndorra
	1   2y(AngolanXL
	2    Afghanistan
	3        Algeria
	4         Andorr
	5   Andorrau4)1C
	6          Angol
	7  dYPAlgeria1hM
	8         ndorra
Wrong output for fuzzied solution in instance spider/storm_record/0012 (3786)
	EXPECTED OUTPUT ====

		SELECT T1.region_name,
		       count(*)
		FROM region AS T1
		JOIN affected_region AS T2 ON T1.region_id = T2.region_id
		GROUP BY T1.region_id

	    region_name  count(*)
	0       Algeria         5
	1   Afghanistan         6
	2  AndorraBIQ)G         6
	3         ngola         6
	4  vIL5PAndorra         6
	5  0yHnGAndorra         7
	6   Afghanistan         7
	7        Andorr         7
	8         Angol         7
	ACTUAL OUTPUT ====

		
		SELECT region_name,
		       n AS count___
		FROM
		  (SELECT region_name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.region_id AS region_id,
		             LHS.region_code AS region_code,
		             LHS.region_name AS region_name,
		             RHS.storm_id AS storm_id,
		             RHS.number_city_affected AS number_city_affected
		      FROM region AS LHS
		      INNER JOIN affected_region AS RHS ON (LHS.region_id = RHS.region_id))
		   GROUP BY region_name)
		ORDER BY region_name

	    region_name  count___
	0       Algeria         5
	1  AndorraBIQ)G         6
	2         ngola         6
	3  vIL5PAndorra         6
	4  0yHnGAndorra         7
	5        Andorr         7
	6         Angol         7
	7   Afghanistan        13
Wrong output for fuzzied solution in instance spider/storm_record/0005 (3788)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM storm
		WHERE Number_Deaths > 0

	   count(*)
	0         6
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM storm
		WHERE (number_deaths != 0)
		ORDER BY count___

	   count___
	0         9
No solution for instance spider/storm_record/0016 (3789)
Wrong output for fuzzied solution in instance spider/storm_record/0018 (3790)
	EXPECTED OUTPUT ====

		SELECT T2.region_name
		FROM affected_region AS T1
		JOIN region AS T2 ON T1.region_id = T2.region_id
		JOIN storm AS T3 ON T1.storm_id = T3.storm_id
		WHERE T3.number_deaths >= 10

	     region_name
	0       Anguilla
	1      Antarctic
	2     Antarctica
	3   Denmarkj1Otm
	4   cmuDeDenmark
	5         enmark
	6  jLgCbAnguilla
	7         lbania
	ACTUAL OUTPUT ====

		
		SELECT region_name
		FROM
		  (SELECT LHS.region_id AS region_id,
		          LHS.region_code AS region_code,
		          LHS.region_name AS region_name,
		          LHS.storm_id AS storm_id,
		          LHS.number_city_affected AS number_city_affected,
		          RHS.name AS name,
		          RHS.dates_active AS dates_active,
		          RHS.max_speed AS max_speed,
		          RHS.damage_millions_usd AS damage_millions_usd,
		          RHS.number_deaths AS number_deaths
		   FROM
		     (SELECT LHS.region_id AS region_id,
		             LHS.region_code AS region_code,
		             LHS.region_name AS region_name,
		             RHS.storm_id AS storm_id,
		             RHS.number_city_affected AS number_city_affected
		      FROM region AS LHS
		      INNER JOIN affected_region AS RHS ON (LHS.region_id = RHS.region_id)) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM storm
		      WHERE (number_deaths > 10)) AS RHS ON (LHS.storm_id = RHS.storm_id))
		ORDER BY region_name

	Empty DataFrame
	Columns: [region_name]
	Index: []
Wrong output for fuzzied solution in instance spider/storm_record/0020 (3791)
	EXPECTED OUTPUT ====

		SELECT T1.region_name
		FROM region AS T1
		JOIN affected_region AS T2 ON T1.region_id = T2.region_id
		GROUP BY T1.region_id
		HAVING count(*) >= 2

	    region_name
	0  0yHnGAndorra
	1   Afghanistan
	2   Afghanistan
	3       Algeria
	4        Andorr
	5  AndorraBIQ)G
	6         Angol
	7         ngola
	8  vIL5PAndorra
	ACTUAL OUTPUT ====

		
		SELECT region_name
		FROM
		  (SELECT LHS.region_id AS region_id,
		          LHS.region_name AS region_name,
		          LHS.n AS n,
		          RHS.number_city_affected AS number_city_affected
		   FROM
		     (SELECT region_id,
		             region_name,
		             COUNT() AS n
		      FROM region
		      GROUP BY region_id,
		               region_name) AS LHS
		   INNER JOIN affected_region AS RHS ON (LHS.region_id = RHS.region_id
		                                            AND LHS.n = RHS.storm_id))
		ORDER BY region_name

	    region_name
	0  0yHnGAndorra
	1   Afghanistan
	2  AndorraBIQ)G
	3         Angol
	4         ngola
	5  vIL5PAndorra
No solution for instance spider/storm_record/0007 (3793)
Wrong output for fuzzied solution in instance spider/storm_record/0021 (3794)
	EXPECTED OUTPUT ====

		SELECT T2.region_name
		FROM affected_region AS T1
		JOIN region AS T2 ON T1.region_id = T2.region_id
		JOIN storm AS T3 ON T1.storm_id = T3.storm_id
		ORDER BY T3.Number_Deaths DESC
		LIMIT 1

	  region_name
	0      Andorr
	ACTUAL OUTPUT ====

		
		SELECT region_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.storm_id AS storm_id,
		                LHS.name AS name,
		                LHS.dates_active AS dates_active,
		                LHS.max_speed AS max_speed,
		                LHS.damage_millions_usd AS damage_millions_usd,
		                LHS.number_deaths AS number_deaths,
		                LHS.region_id AS region_id,
		                LHS.region_code AS region_code,
		                LHS.region_name AS region_name,
		                RHS.number_city_affected AS number_city_affected
		         FROM
		           (SELECT LHS.storm_id AS storm_id,
		                   LHS.name AS name,
		                   LHS.dates_active AS dates_active,
		                   LHS.max_speed AS max_speed,
		                   LHS.damage_millions_usd AS damage_millions_usd,
		                   LHS.number_deaths AS number_deaths,
		                   RHS.region_id AS region_id,
		                   RHS.region_code AS region_code,
		                   RHS.region_name AS region_name
		            FROM storm AS LHS
		            CROSS JOIN region AS RHS) AS LHS
		         INNER JOIN affected_region AS RHS ON (LHS.storm_id = RHS.storm_id
		                                                  AND LHS.region_id = RHS.region_id))
		      ORDER BY region_code DESC)
		   LIMIT 1)

	  region_name
	0       Angol
Wrong output for fuzzied solution in instance spider/storm_record/0001 (3795)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM region

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT region_code,
		          region_name,
		          COUNT() AS n
		   FROM region
		   GROUP BY region_code,
		            region_name)
		ORDER BY count___

	   count___
	0         6
Wrong output for fuzzied solution in instance spider/storm_record/0014 (3796)
	EXPECTED OUTPUT ====

		SELECT T1.name,
		       T1.max_speed
		FROM storm AS T1
		JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id
		GROUP BY T1.storm_id
		ORDER BY count(*) DESC
		LIMIT 1

	  name  max_speed
	0  Six        988
	ACTUAL OUTPUT ====

		
		SELECT name,
		       max_speed
		FROM
		  (SELECT LHS.region_id AS region_id,
		          LHS.storm_id AS storm_id,
		          LHS.number_city_affected AS number_city_affected,
		          LHS.n AS n,
		          RHS.storm_id AS storm_id_other,
		          RHS.name AS name,
		          RHS.dates_active AS dates_active,
		          RHS.max_speed AS max_speed,
		          RHS.damage_millions_usd AS damage_millions_usd
		   FROM
		     (SELECT region_id,
		             storm_id,
		             number_city_affected,
		             COUNT(*) OVER () AS n
		      FROM affected_region) AS LHS
		   INNER JOIN storm AS RHS ON (LHS.storm_id = RHS.number_deaths))
		ORDER BY name

	          name  max_speed
	0   m5dNine21J        986
	1   m5dNine21J        986
	2   m5dNine21J        986
	3   m5dNine21J        986
	4   m5dNine21J        986
	5         Nine        987
	6         Nine        987
	7         Nine        987
	8         Nine        987
	9         Nine        987
	10    MrgowSix        988
	11    MrgowSix        988
	12    MrgowSix        988
	13    MrgowSix        988
	14    MrgowSix        988
	15    MrgowSix        988
	16         Six        988
	17         Six        988
	18         Six        988
	19         Six        988
	20         Six        988
	21         Six        988
	22         Six        988
	23         Six        988
	24         Six        988
	25         Six        988
	26         Six        988
	27         Six        988
	28         Six        988
	29       Three        988
	30       Three        988
	31       Three        988
	32       Three        988
	33       Three        988
	34       Three        988
	35       Three        988
	36         Nin        990
	37         Nin        990
	38         Nin        990
	39         Nin        990
	40         Nin        990
	41         Nin        990
	42         Nin        990
No solution for instance spider/game_injury/0008 (3802)
Wrong output for fuzzied solution in instance spider/game_injury/0013 (3804)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT T1.injury)
		FROM injury_accident AS T1
		JOIN game AS T2 ON T1.game_id = T2.id
		WHERE T2.season > 2010

	   count(distinct t1.injury)
	0                          3
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count_distinct_t1_injury_
		FROM
		  (SELECT LHS.id AS id,
		          LHS.n AS n,
		          RHS.stadium_id AS stadium_id,
		          RHS.season AS season,
		          RHS.date AS date,
		          RHS.home_team AS home_team,
		          RHS.away_team AS away_team,
		          RHS.score AS score,
		          RHS.competition AS competition
		   FROM
		     (SELECT id,
		             COUNT() AS n
		      FROM injury_accident
		      GROUP BY id) AS LHS
		   LEFT JOIN
		     (SELECT *
		      FROM game
		      WHERE (season < 2010)) AS RHS ON (LHS.id = RHS.id))
		ORDER BY count_distinct_t1_injury_

	   count_distinct_t1_injury_
	0                          1
Wrong output for fuzzied solution in instance spider/game_injury/0004 (3806)
	EXPECTED OUTPUT ====

		SELECT max(home_games),
		       min(home_games),
		       avg(home_games)
		FROM stadium

	   max(home_games)  min(home_games)  avg(home_games)
	0                8                6             7.25
	ACTUAL OUTPUT ====

		
		SELECT home_games AS max_home_games_,
		       minhome_games AS min_home_games_,
		       MAX(home_games) OVER () AS avg_home_games_
		FROM
		  (SELECT home_games,
		          MIN(home_games) AS minhome_games
		   FROM
		     (SELECT home_games,
		             AVG(home_games) AS meanhome_games
		      FROM stadium
		      GROUP BY home_games)
		   GROUP BY home_games)
		ORDER BY max_home_games_

	   max_home_games_  min_home_games_  avg_home_games_
	0                6                6                8
	1                7                7                8
	2                8                8                8
No solution for instance spider/game_injury/0012 (3807)
No solution for instance spider/game_injury/0015 (3808)
Wrong output for fuzzied solution in instance spider/game_injury/0005 (3809)
	EXPECTED OUTPUT ====

		SELECT average_attendance
		FROM stadium
		WHERE capacity_percentage > 100

	    average_attendance
	0         6.914298e+04
	1         6.914299e+04
	2         6.914300e+04
	3         6.914300e+04
	4         7.108002e+04
	5         7.108002e+04
	6         7.122699e+04
	7         7.122699e+04
	8         7.122701e+04
	9         7.490799e+04
	10        2.348418e+09
	ACTUAL OUTPUT ====

		
		SELECT average_attendance
		FROM
		  (SELECT average_attendance
		   FROM stadium
		   WHERE (capacity_percentage > 100.0) INTERSECT
		     SELECT average_attendance
		     FROM stadium WHERE (capacity_percentage > 100.0))
		ORDER BY average_attendance

	   average_attendance
	0        6.914298e+04
	1        6.914299e+04
	2        6.914300e+04
	3        7.108002e+04
	4        7.122699e+04
	5        7.122701e+04
	6        7.490799e+04
	7        2.348418e+09
No solution for instance spider/game_injury/0016 (3810)
Wrong output for fuzzied solution in instance spider/game_injury/0018 (3811)
	EXPECTED OUTPUT ====

		SELECT T1.date,
		       T2.player
		FROM game AS T1
		JOIN injury_accident AS T2 ON T1.id = T2.game_id
		ORDER BY T1.season DESC

	               date                     player
	0   31 October 2010        Dejan Stanković (2)
	1     6 August 2008   1iCShDejan Stanković (2)
	2     6 August 2008         3PJDiego MilitopVe
	3     6 August 2008               Diego Milito
	4     6 August 2008      Thiago Motta (2)kBdOZ
	5     8 August 2013        Dejan Stanković (2)
	6     8 August 2013               Diego Milito
	7     8 August 2013             Javier Zanetti
	8     8 August 2013       V0Yj Wesley Sneijder
	9     8 August 2013     nW3Thiago Motta (2)Oa6
	10    9 August 2012  )3(Dejan Stanković (2)Wdg
	11    9 August 2012         Dejan Stanković (2
	12    9 August 2012          ahe5KDiego Milito
	ACTUAL OUTPUT ====

		
		SELECT date, player
		FROM
		  (SELECT LHS.stadium_id AS stadium_id,
		          LHS.id AS id,
		          LHS.season AS season,
		          LHS.date AS date,
		          LHS.home_team AS home_team,
		          LHS.away_team AS away_team,
		          LHS.score AS score,
		          LHS.competition AS competition,
		          RHS.id AS id_other,
		          RHS.player AS player,
		          RHS.injury AS injury,
		          RHS.number_of_matches AS number_of_matches,
		          RHS.source AS SOURCE
		   FROM
		     (SELECT *
		      FROM game AS LHS
		      WHERE EXISTS
		          (SELECT 1
		           FROM injury_accident AS RHS
		           WHERE (LHS.id = RHS.id) )) AS LHS
		   INNER JOIN injury_accident AS RHS ON (LHS.id = RHS.game_id))
		ORDER BY date

	              date                     player
	0  31 October 2010        Dejan Stanković (2)
	1    6 August 2008         3PJDiego MilitopVe
	2    8 August 2013        Dejan Stanković (2)
	3    8 August 2013               Diego Milito
	4    8 August 2013             Javier Zanetti
	5    8 August 2013     nW3Thiago Motta (2)Oa6
	6    9 August 2012  )3(Dejan Stanković (2)Wdg
	7    9 August 2012         Dejan Stanković (2
	8    9 August 2012          ahe5KDiego Milito
Wrong output for fuzzied solution in instance spider/game_injury/0014 (3814)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM game AS T1
		JOIN stadium AS T2 ON T1.stadium_id = T2.id
		JOIN injury_accident AS T3 ON T1.id = T3.game_id
		WHERE T3.player = 'Walter Samuel' INTERSECT
		  SELECT T2.name
		  FROM game AS T1
		  JOIN stadium AS T2 ON T1.stadium_id = T2.id
		  JOIN injury_accident AS T3 ON T1.id = T3.game_id WHERE T3.player = 'Thiago Motta'

	                         name
	0  Invesco Field at Mile High
	1               LP FieldrDUxj
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`home_games` AS `home_games`,
		          `LHS`.`average_attendance` AS `average_attendance`,
		          `LHS`.`total_attendance` AS `total_attendance`,
		          `LHS`.`capacity_percentage` AS `capacity_percentage`,
		          `RHS`.`stadium_id` AS `stadium_id`,
		          `RHS`.`id` AS `id_other`,
		          `RHS`.`season` AS `season`,
		          `RHS`.`date` AS `date`,
		          `RHS`.`home_team` AS `home_team`,
		          `RHS`.`away_team` AS `away_team`,
		          `RHS`.`score` AS `score`,
		          `RHS`.`competition` AS `competition`,
		          `RHS`.`player` AS `player`,
		          `RHS`.`injury` AS `injury`,
		          `RHS`.`number_of_matches` AS `number_of_matches`,
		          `RHS`.`source` AS `source`
		   FROM `stadium` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`stadium_id` AS `stadium_id`,
		                `LHS`.`id` AS `id`,
		                `LHS`.`season` AS `season`,
		                `LHS`.`date` AS `date`,
		                `LHS`.`home_team` AS `home_team`,
		                `LHS`.`away_team` AS `away_team`,
		                `LHS`.`score` AS `score`,
		                `LHS`.`competition` AS `competition`,
		                `RHS`.`game_id` AS `game_id`,
		                `RHS`.`player` AS `player`,
		                `RHS`.`injury` AS `injury`,
		                `RHS`.`number_of_matches` AS `number_of_matches`,
		                `RHS`.`source` AS `source`
		         FROM `game` AS `LHS`
		         INNER JOIN `injury_accident` AS `RHS` ON (`LHS`.`id` = `RHS`.`id`))
		      WHERE (`player` != 'Walter Samuel'
		             AND `player` = 'Thiago Motta')) AS RHS ON (LHS.id = RHS.game_id))
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance spider/game_injury/0009 (3815)
	EXPECTED OUTPUT ====

		SELECT T1.id,
		       T1.name
		FROM stadium AS T1
		JOIN game AS T2 ON T1.id = T2.stadium_id
		JOIN injury_accident AS T3 ON T2.id = T3.game_id
		GROUP BY T1.id
		ORDER BY count(*) DESC
		LIMIT 1

	   id        name
	0   9  FedExField
	ACTUAL OUTPUT ====

		
		SELECT id,
		       name
		FROM
		  (SELECT game_id,
		          id,
		          player,
		          injury,
		          number_of_matches,
		          SOURCE,
		          name,
		          average_attendance,
		          total_attendance,
		          capacity_percentage,
		          game_id AS home_games
		   FROM
		     (SELECT LHS.game_id AS game_id,
		             LHS.id AS id,
		             LHS.player AS player,
		             LHS.injury AS injury,
		             LHS.number_of_matches AS number_of_matches,
		             LHS.source AS SOURCE,
		             RHS.name AS name,
		             RHS.average_attendance AS average_attendance,
		             RHS.total_attendance AS total_attendance,
		             RHS.capacity_percentage AS capacity_percentage
		      FROM injury_accident AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM stadium AS LHS
		         WHERE EXISTS
		             (SELECT 1
		              FROM game AS RHS
		              WHERE (LHS.id = RHS.id) )) AS RHS ON (LHS.id = RHS.id
		                                                    AND LHS.game_id = RHS.home_games)))
		ORDER BY id

	Empty DataFrame
	Columns: [id, name]
	Index: []
Wrong output for fuzzied solution in instance spider/game_injury/0011 (3816)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT SOURCE)
		FROM injury_accident

	   count(distinct source)
	0                       7
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count_distinct_source_
		FROM
		  (SELECT id,
		          COUNT() AS n
		   FROM injury_accident
		   GROUP BY id)
		ORDER BY count_distinct_source_

	   count_distinct_source_
	0                       1
No solution for instance spider/game_injury/0010 (3817)
Wrong output for fuzzied solution in instance spider/inn_1/0002 (3819)
	EXPECTED OUTPUT ====

		SELECT roomName,
		       RoomId
		FROM Rooms
		WHERE basePrice > 160
		  AND maxOccupancy > 2;

	                         roomname     roomid
	0        Thrift and accolade)voPW   1ogiiRND
	1         Immutable before decoru  8CmRNDw46
	2             Thrift and accolade   9HiD RND
	3           Harbinger but bequest         ND
	4             Thrift and accolade         RN
	5              hrift and accolade   RNDMzwyz
	6            arbinger but bequest   RNDQJA8s
	7        Immutable before decorum  RhPTAA5ul
	8             Thrift and accolade         TA
	9             Thrift and accolade        TAA
	10       LeL88Thrift and accolade   TAA5FDBq
	11            Thrift and accolade  YjZRTEasC
	12  c89hFImmutable before decorum  dzARNDPlX
	13  Immutable before decorumLBhj1   w 93QRTE
	14      aUVThrift and accoladeUkX  w07TAAyd)
	15       lfmtNThrift and accolade  xwETAA6sK
	16       Thrift and accoladep0B0r   yRb14RND
	ACTUAL OUTPUT ====

		
		SELECT roomname,
		       roomid
		FROM
		  (SELECT *
		   FROM rooms
		   WHERE (baseprice <= 160
		          OR baseprice >= maxoccupancy))
		WHERE (baseprice >= 160
		       AND maxoccupancy >= 2)
		ORDER BY roomname

	                          roomname     roomid
	0         Thrift and accolade)voPW   1ogiiRND
	1   (ONImmutable before decorumJuT  6(cRTE8ib
	2          Immutable before decoru  8CmRNDw46
	3              Thrift and accolade   9HiD RND
	4              Thrift and accolade  E2nTAA9VQ
	5         Immutable before decorum   HI3u6RND
	6            Harbinger but bequest         ND
	7              Thrift and accolade         RN
	8             Recluse and defiance   RNDF1PV3
	9               hrift and accolade   RNDMzwyz
	10            arbinger but bequest   RNDQJA8s
	11             Thrift and accolade   RNDg2JVj
	12      zhYRecluse and defianceAB2   RTEK6xYy
	13        Immutable before decorum  RhPTAA5ul
	14             Thrift and accolade         TA
	15             Thrift and accolade        TAA
	16        LeL88Thrift and accolade   TAA5FDBq
	17           Harbinger but bequest  TghRNDl2R
	18             Thrift and accolade  YjZRTEasC
	19             Thrift and accolade   ZhIqARND
	20           Harbinger but bequest  bXmRNDaaw
	21   c89hFImmutable before decorum  dzARNDPlX
	22            Recluse and defiance   lvxyyTAA
	23           Harbinger but bequest   oCd1aTAA
	24             Thrift and accolade   res5SRND
	25   Immutable before decorumLBhj1   w 93QRTE
	26       aUVThrift and accoladeUkX  w07TAAyd)
	27        lfmtNThrift and accolade  xwETAA6sK
	28        Thrift and accoladep0B0r   yRb14RND
	29           Harbinger but bequest   z577eRTE
No solution for instance spider/inn_1/0036 (3820)
No solution for instance spider/inn_1/0017 (3821)
No solution for instance spider/inn_1/0003 (3822)
Wrong output for fuzzied solution in instance spider/inn_1/0027 (3823)
	EXPECTED OUTPUT ====

		SELECT decor,
		       count(*)
		FROM Rooms
		WHERE basePrice > 120
		GROUP BY decor;

	        decor  count(*)
	0      huohnV         1
	1  kpdV(1ZOTQ         1
	2      modern         1
	3      rustic         1
	ACTUAL OUTPUT ====

		
		SELECT decor,
		       n AS count___
		FROM
		  (SELECT decor,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM rooms
		      WHERE (baseprice >= 120))
		   GROUP BY decor)
		ORDER BY decor

	               decor  count___
	0             huohnV         1
	1  jrotraditionalNkm         1
	2         kpdV(1ZOTQ         1
	3             modern         1
	4             rustic         1
Wrong output for fuzzied solution in instance spider/inn_1/0030 (3825)
	EXPECTED OUTPUT ====

		SELECT RoomId,
		       roomName
		FROM Rooms
		ORDER BY basePrice DESC
		LIMIT 3;

	      roomid                 roomname
	0  8C IBDRJC  mmutable before decorum
	1   Bg(YSRTE    Mendicant with crypti
	2   Vv6kpRTE    endicant with cryptic
	ACTUAL OUTPUT ====

		
		SELECT roomid,
		       roomname
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM rooms
		      ORDER BY roomname)
		   LIMIT 3)

	     roomid                  roomname
	0       IBD      Interim but salutary
	1  RTE9awO)      Harbinger but beques
	2  rqrHJIBD  Immutable before decorum
No solution for instance spider/inn_1/0006 (3827)
Wrong output for fuzzied solution in instance spider/inn_1/0004 (3828)
	EXPECTED OUTPUT ====

		SELECT kids
		FROM Reservations
		WHERE FirstName = "ROY"
		  AND LastName = "SWEAZY";

	Empty DataFrame
	Columns: [kids]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `kids`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `reservations`
		      WHERE (`firstname` = 'ROY'
		             OR `lastname` = 'SWEAZY')) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM reservations AS RHS
		        WHERE (LHS.code = RHS.code
		               AND LHS.room = RHS.room
		               AND LHS.checkin = RHS.checkin
		               AND LHS.checkout = RHS.checkout
		               AND LHS.rate = RHS.rate
		               AND LHS.lastname = RHS.lastname
		               AND LHS.firstname = RHS.firstname
		               AND LHS.adults = RHS.adults
		               AND LHS.kids = RHS.kids) ))
		ORDER BY kids

	   kids
	0     1
	1     2
Wrong output for fuzzied solution in instance spider/inn_1/0012 (3829)
	EXPECTED OUTPUT ====

		SELECT decor
		FROM Rooms
		WHERE roomName = "Recluse and defiance";

	         decor
	0       modern
	1  pFZvLrustic
	2   raditional
	3   traditiona
	4   traditiona
	5   traditiona
	6  traditional
	7  traditional
	ACTUAL OUTPUT ====

		
		SELECT `decor`
		FROM
		  (SELECT `decor`
		   FROM `rooms`
		   WHERE (`roomname` = 'Recluse and defiance') INTERSECT
		     SELECT decor
		     FROM rooms)
		ORDER BY decor

	         decor
	0       modern
	1  pFZvLrustic
	2   raditional
	3   traditiona
	4  traditional
Wrong output for fuzzied solution in instance spider/inn_1/0015 (3831)
	EXPECTED OUTPUT ====

		SELECT T2.decor
		FROM Reservations AS T1
		JOIN Rooms AS T2 ON T1.Room = T2.RoomId
		GROUP BY T2.decor
		ORDER BY count(T2.decor) ASC
		LIMIT 1;

	          decor
	0  kIUmodernLo5
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT decor
		FROM
		  (SELECT LHS.code AS code,
		          LHS.room AS room,
		          LHS.checkin AS checkin,
		          LHS.checkout AS checkout,
		          LHS.rate AS rate,
		          LHS.lastname AS lastname,
		          LHS.firstname AS firstname,
		          LHS.adults AS adults,
		          LHS.kids AS kids,
		          RHS.decor AS decor
		   FROM reservations AS LHS
		   INNER JOIN
		     (SELECT decor,
		             COUNT() AS n
		      FROM rooms
		      GROUP BY decor) AS RHS ON (LHS.kids = RHS.n))
		ORDER BY decor

	          decor
	0   LE9rnrustic
	1  kIUmodernLo5
	2        modern
	3         odern
	4         rusti
	5    traditiona
Wrong output for fuzzied solution in instance spider/inn_1/0005 (3832)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Reservations
		WHERE FirstName = "ROY"
		  AND LastName = "SWEAZY";

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `reservations`
		WHERE (`firstname` = 'ROY'
		       OR `lastname` = 'SWEAZY')
		ORDER BY count___

	   count___
	0         2
No solution for instance spider/inn_1/0016 (3833)
Wrong output for fuzzied solution in instance spider/inn_1/0032 (3834)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM rooms
		WHERE roomid NOT IN
		    (SELECT DISTINCT room
		     FROM reservations)

	   count(*)
	0        34
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT roomid,
		             roomname,
		             beds,
		             bedtype,
		             maxoccupancy,
		             baseprice,
		             decor,
		             code,
		             room,
		             checkin,
		             rate,
		             firstname,
		             adults,
		             kids,
		             checkout,
		             roomname AS lastname
		      FROM
		        (SELECT roomid,
		                roomname,
		                beds,
		                bedtype,
		                maxoccupancy,
		                baseprice,
		                decor,
		                code,
		                room,
		                checkin,
		                rate,
		                firstname,
		                adults,
		                kids,
		                roomid AS checkout
		         FROM
		           (SELECT LHS.roomid AS roomid,
		                   LHS.roomname AS roomname,
		                   LHS.beds AS beds,
		                   LHS.bedtype AS bedtype,
		                   LHS.maxoccupancy AS maxoccupancy,
		                   LHS.baseprice AS baseprice,
		                   LHS.decor AS decor,
		                   RHS.code AS code,
		                   RHS.room AS room,
		                   RHS.checkin AS checkin,
		                   RHS.rate AS rate,
		                   RHS.firstname AS firstname,
		                   RHS.adults AS adults,
		                   RHS.kids AS kids
		            FROM rooms AS LHS
		            INNER JOIN reservations AS RHS ON (LHS.roomid = RHS.checkout
		                                                  AND LHS.roomname = RHS.lastname)))))
		ORDER BY count___

	   count___
	0         0
No solution for instance spider/inn_1/0034 (3839)
Wrong output for fuzzied solution in instance spider/inn_1/0021 (3841)
	EXPECTED OUTPUT ====

		SELECT roomName
		FROM Rooms
		ORDER BY maxOccupancy DESC
		LIMIT 1;

	               roomname
	0  eqtbGweS8xDPxBw(FqAf
	ACTUAL OUTPUT ====

		
		SELECT roomname
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM rooms
		      ORDER BY bedtype DESC)
		   LIMIT 1)

	                   roomname
	0  Immutable before decorum
Wrong output for fuzzied solution in instance spider/inn_1/0001 (3843)
	EXPECTED OUTPUT ====

		SELECT roomName
		FROM Rooms
		WHERE basePrice < 160
		  AND beds = 2
		  AND decor = 'modern';

	                roomname
	0  Harbinger but bequest
	ACTUAL OUTPUT ====

		
		SELECT `roomname`
		FROM
		  (SELECT *
		   FROM `rooms`
		   WHERE (`decor` = 'modern'
		          AND beds = 2))
		WHERE (beds <= 160)
		ORDER BY roomname

	                roomname
	0  Harbinger but bequest
	1    Thrift and accolade
Wrong output for fuzzied solution in instance spider/inn_1/0014 (3844)
	EXPECTED OUTPUT ====

		SELECT sum(maxOccupancy)
		FROM Rooms
		WHERE decor = 'modern';

	  sum(maxoccupancy)
	0              None
	ACTUAL OUTPUT ====

		
		SELECT `summaxoccupancy` AS `sum_maxoccupancy_`
		FROM
		  (SELECT `decor`,
		          SUM(`maxoccupancy`) AS `summaxoccupancy`
		   FROM `rooms`
		   GROUP BY `decor`)
		WHERE (`decor` = 'modern')
		ORDER BY sum_maxoccupancy_

	Empty DataFrame
	Columns: [sum_maxoccupancy_]
	Index: []
Wrong output for fuzzied solution in instance spider/inn_1/0011 (3847)
	EXPECTED OUTPUT ====

		SELECT roomName,
		       basePrice
		FROM Rooms
		ORDER BY basePrice ASC
		LIMIT 1;

	               roomname  baseprice
	0  Harbinger but beques        101
	ACTUAL OUTPUT ====

		
		SELECT roomname,
		       baseprice
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM rooms
		      ORDER BY roomname DESC)
		   LIMIT 1)

	                  roomname  baseprice
	0  mmutable before decorum        152
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Wrong output for fuzzied solution in instance spider/entrepreneur/0006 (3857)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM entrepreneur AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID

	                   name
	0      Alberto Angelini
	1      Alberto Angelini
	2      Alberto Angelini
	3       Leonardo Binchi
	4    Roberto Calcaterra
	5    Roberto Calcaterra
	6  zING4Maurizio Felugo
	7  zING4Maurizio Felugo
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM entrepreneur AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY name

	                   name
	0      Alberto Angelini
	1      Alberto Angelini
	2       Leonardo Binchi
	3    Roberto Calcaterra
	4  zING4Maurizio Felugo
Wrong output for base solution in instance spider/entrepreneur/0004 (3858)
	EXPECTED OUTPUT ====

	   avg_money_requested_
	0          93166.666667
	ACTUAL OUTPUT ====

		SELECT avg(Money_Requested)
		FROM entrepreneur

	   avg(money_requested)
	0          93166.666667
Wrong output for ground truth in instance spider/entrepreneur/0004 (3858)
Wrong output for fuzzied solution in instance spider/entrepreneur/0012 (3859)
	EXPECTED OUTPUT ====

		SELECT T2.Weight
		FROM entrepreneur AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T1.Money_Requested DESC

	   weight
	0   57.00
	1   57.00
	2   57.02
	3   75.01
	4   75.01
	5   80.00
	6   80.00
	7   80.00
	ACTUAL OUTPUT ====

		
		SELECT weight
		FROM
		  (SELECT weight
		   FROM
		     (SELECT LHS.entrepreneur_id AS entrepreneur_id,
		             LHS.people_id AS people_id,
		             LHS.company AS company,
		             LHS.money_requested AS money_requested,
		             LHS.investor AS investor,
		             RHS.name AS name,
		             RHS.height AS height,
		             RHS.weight AS weight,
		             RHS.date_of_birth AS date_of_birth
		      FROM entrepreneur AS LHS
		      INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id)) INTERSECT SELECT weight
		   FROM
		     (SELECT LHS.entrepreneur_id AS entrepreneur_id,
		             LHS.people_id AS people_id,
		             LHS.company AS company,
		             LHS.money_requested AS money_requested,
		             LHS.investor AS investor,
		             RHS.name AS name,
		             RHS.height AS height,
		             RHS.weight AS weight,
		             RHS.date_of_birth AS date_of_birth
		      FROM entrepreneur AS LHS
		      INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id)))
		ORDER BY weight

	   weight
	0   57.00
	1   57.02
	2   75.01
	3   80.00
Wrong output for fuzzied solution in instance spider/entrepreneur/0018 (3863)
	EXPECTED OUTPUT ====

		SELECT Investor
		FROM entrepreneur
		WHERE Money_Requested > 140000 INTERSECT
		  SELECT Investor
		  FROM entrepreneur WHERE Money_Requested < 120000

	Empty DataFrame
	Columns: [investor]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT investor
		FROM entrepreneur
		WHERE (money_requested > 140000.0
		       AND money_requested > 120000.0)
		ORDER BY investor

	              investor
	0  4QGy)Rachel Elnaugh
	1       Rachel Elnaugh
	2       Rachel Elnaugh
Wrong output for fuzzied solution in instance spider/entrepreneur/0020 (3864)
	EXPECTED OUTPUT ====

		SELECT T1.Company
		FROM entrepreneur AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T2.Height DESC
		LIMIT 1

	                company
	0  Elizabeth Galton Ltd
	ACTUAL OUTPUT ====

		
		SELECT company
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.entrepreneur_id AS entrepreneur_id,
		                LHS.people_id AS people_id,
		                LHS.company AS company,
		                LHS.money_requested AS money_requested,
		                LHS.investor AS investor,
		                RHS.name AS name,
		                RHS.height AS height,
		                RHS.weight AS weight,
		                RHS.date_of_birth AS date_of_birth
		         FROM entrepreneur AS LHS
		         INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))
		      ORDER BY entrepreneur_id DESC)
		   LIMIT 1)

	      company
	0  Le Beanock
Wrong output for fuzzied solution in instance spider/entrepreneur/0019 (3865)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT Company)
		FROM entrepreneur

	   count(distinct company)
	0                        5
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count_distinct_company_
		FROM entrepreneur
		ORDER BY count_distinct_company_

	   count_distinct_company_
	0                        8
Wrong output for fuzzied solution in instance spider/entrepreneur/0007 (3866)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM entrepreneur AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		WHERE T1.Investor != "Rachel Elnaugh"

	                 name
	0   Roberto Calcaterr
	1   Roberto Calcaterr
	2  Roberto Calcaterra
	3  Roberto Calcaterra
	4  Roberto Calcaterra
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM `people` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `entrepreneur`
		           WHERE (`investor` != 'Rachel Elnaugh')) AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY name

	                 name
	0   Roberto Calcaterr
	1  Roberto Calcaterra
	2  Roberto Calcaterra
No solution for instance spider/entrepreneur/0001 (3867)
Wrong output for fuzzied solution in instance spider/entrepreneur/0014 (3868)
	EXPECTED OUTPUT ====

		SELECT Investor
		FROM entrepreneur
		GROUP BY Investor
		ORDER BY COUNT(*) DESC
		LIMIT 1

	           investor
	0  Duncan Bannatyne
	ACTUAL OUTPUT ====

		
		SELECT investor
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT entrepreneur_id,
		                investor,
		                COUNT() AS n
		         FROM entrepreneur
		         GROUP BY entrepreneur_id,
		                  investor)
		      ORDER BY n DESC)
		   LIMIT 1)

	                investor
	0  )A1Simon WoodroffeO91
Wrong output for fuzzied solution in instance spider/entrepreneur/0009 (3869)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM entrepreneur AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T2.Weight DESC
		LIMIT 1

	                name
	0  abrizio Buonocore
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.entrepreneur_id AS entrepreneur_id,
		                LHS.people_id AS people_id,
		                LHS.company AS company,
		                LHS.money_requested AS money_requested,
		                LHS.investor AS investor,
		                RHS.name AS name,
		                RHS.height AS height,
		                RHS.weight AS weight,
		                RHS.date_of_birth AS date_of_birth
		         FROM entrepreneur AS LHS
		         INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))
		      ORDER BY date_of_birth DESC)
		   LIMIT 1)

	           name
	0  wT7(uIEHjPFC
Wrong output for fuzzied solution in instance spider/entrepreneur/0011 (3870)
	EXPECTED OUTPUT ====

		SELECT T2.Date_of_Birth
		FROM entrepreneur AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		WHERE T1.Investor = "Simon Woodroffe"
		  OR T1.Investor = "Peter Jones"

	     date_of_birth
	0  1972-02-06Hc)kL
	1       1975-08-27
	2       1975-08-27
	3       1981-03-04
	4       1981-03-04
	ACTUAL OUTPUT ====

		
		SELECT `date_of_birth`
		FROM
		  (SELECT *
		   FROM `people` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `entrepreneur`
		           WHERE (`investor` = 'Simon Woodroffe'
		                  OR `investor` = 'Peter Jones')) AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY date_of_birth

	     date_of_birth
	0  1972-02-06Hc)kL
	1       1975-08-27
	2       1981-03-04
	3       1981-03-04
Wrong output for fuzzied solution in instance spider/entrepreneur/0010 (3871)
	EXPECTED OUTPUT ====

		SELECT sum(T1.Money_Requested)
		FROM entrepreneur AS T1
		JOIN people AS T2 ON T1.People_ID = T2.People_ID
		WHERE T2.Height > 1.85

	   sum(t1.money_requested)
	0             1.313676e+09
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT SUM(`money_requested`) OVER () AS `sum_t1_money_requested_`
		FROM
		  (SELECT `LHS`.`entrepreneur_id` AS `entrepreneur_id`,
		          `LHS`.`people_id` AS `people_id`,
		          `LHS`.`company` AS `company`,
		          `LHS`.`money_requested` AS `money_requested`,
		          `LHS`.`investor` AS `investor`,
		          `RHS`.`name` AS `name`,
		          `RHS`.`height` AS `height`,
		          `RHS`.`weight` AS `weight`,
		          `RHS`.`date_of_birth` AS `date_of_birth`
		   FROM `entrepreneur` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `people`
		      WHERE (`height` >= '1.85')) AS RHS ON (LHS.people_id = RHS.people_id))
		ORDER BY sum_t1_money_requested_

	   sum_t1_money_requested_
	0             1.313776e+09
Wrong output for fuzzied solution in instance spider/riding_club/0017 (3873)
	EXPECTED OUTPUT ====

		SELECT T1.club_id,
		       T1.gold
		FROM match_result AS T1
		JOIN coach AS T2 ON T1.club_id = T2.club_id
		GROUP BY T1.club_id
		ORDER BY count(*) DESC
		LIMIT 1

	   club_id  gold
	0        1    12
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT rank AS club_id,
		                gold
		FROM
		  (SELECT LHS.rank AS rank,
		          LHS.club_id AS club_id,
		          LHS.gold AS gold,
		          LHS.big_silver AS big_silver,
		          LHS.small_silver AS small_silver,
		          LHS.bronze AS bronze,
		          LHS.points AS points,
		          RHS.coach_name AS coach_name,
		          RHS.gender AS gender
		   FROM match_result AS LHS
		   INNER JOIN
		     (SELECT coach_name,
		             gender,
		             COUNT() AS n
		      FROM coach
		      GROUP BY coach_name,
		               gender) AS RHS ON (LHS.rank = RHS.n))
		ORDER BY club_id

	   club_id  gold
	0        1     3
	1        1    11
	2        1    12
Wrong output for fuzzied solution in instance spider/riding_club/0008 (3874)
	EXPECTED OUTPUT ====

		SELECT Occupation
		FROM player
		GROUP BY Occupation
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  occupation
	0    Student
	ACTUAL OUTPUT ====

		
		SELECT occupation
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT occupation,
		                sponsor_name,
		                COUNT() AS n
		         FROM player
		         GROUP BY occupation,
		                  sponsor_name)
		      ORDER BY sponsor_name DESC)
		   LIMIT 1)

	  occupation
	0     tudent
Wrong output for fuzzied solution in instance spider/riding_club/0012 (3879)
	EXPECTED OUTPUT ====

		SELECT T3.Player_name,
		       T3.gender
		FROM player_coach AS T1
		JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID
		JOIN player AS T3 ON T1.Player_ID = T3.Player_ID
		WHERE T1.Starting_year > 2011

	              player_name   gender
	0   Matt SchaubroeckMbehq         
	1         Matt Schaubroec   9KCz(F
	2        Patricia Cordner        F
	3        Patricia Cordner        F
	4        Patricia Cordner        F
	5        Patricia Cordner   FInAHi
	6        Patricia Cordner   FInAHi
	7        Matt Schaubroeck        M
	8        Patricia Cordner        M
	9        Patricia Cordner        M
	10        att Schaubroeck        M
	11     Judy Wasylycia-Lei   MW9jZ1
	12    Judy Wasylycia-Leis  ruGMb1e
	ACTUAL OUTPUT ====

		
		SELECT player_name,
		       gender
		FROM
		  (SELECT *
		   FROM player AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT *
		              FROM player_coach
		              WHERE (starting_year > 2011)) AS LHS
		           WHERE EXISTS
		               (SELECT 1
		                FROM coach AS RHS
		                WHERE (LHS.coach_id = RHS.coach_id) )) AS RHS
		        WHERE (LHS.player_id = RHS.player_id) ))
		ORDER BY player_name

	             player_name   gender
	0  Matt SchaubroeckMbehq         
	1        Matt Schaubroec   9KCz(F
	2       Patricia Cordner        F
	3       Patricia Cordner        F
	4       Patricia Cordner   FInAHi
	5       Matt Schaubroeck        M
	6       Patricia Cordner        M
	7        att Schaubroeck        M
	8     Judy Wasylycia-Lei   MW9jZ1
	9    Judy Wasylycia-Leis  ruGMb1e
Wrong output for fuzzied solution in instance spider/riding_club/0015 (3880)
	EXPECTED OUTPUT ====

		SELECT Residence
		FROM player
		WHERE gender = "M" INTERSECT
		  SELECT Residence
		  FROM player WHERE gender = "F"

	Empty DataFrame
	Columns: [residence]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `residence`
		FROM
		  (SELECT *
		   FROM `player` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT `rank`
		           FROM `player`
		           WHERE (`gender` != 'M'
		                  OR `gender` = 'F') INTERSECT
		             SELECT rank
		             FROM player) AS RHS
		        WHERE (LHS.rank = RHS.rank) ))
		ORDER BY residence

	  residence
	0   Winnipe
Wrong output for fuzzied solution in instance spider/riding_club/0007 (3883)
	EXPECTED OUTPUT ====

		SELECT Occupation,
		       COUNT(*)
		FROM player
		GROUP BY Occupation

	                occupation  count(*)
	0       Design Coordinator         1
	1  Design CoordinatorEEfCk         1
	2            LGeStudentY s         1
	3          ResearchergJNG5         1
	4             Student7wlbi         1
	5                   tudent         1
	6                Researche         2
	7               Researcher         2
	8                  Student         4
	ACTUAL OUTPUT ====

		
		SELECT occupation,
		       n AS count___
		FROM
		  (SELECT occupation,
		          rank,
		          COUNT() AS n
		   FROM player
		   GROUP BY occupation,
		            rank)
		ORDER BY occupation

	                 occupation  count___
	0        Design Coordinator         1
	1   Design CoordinatorEEfCk         1
	2             LGeStudentY s         1
	3                 Researche         1
	4                 Researche         1
	5           ResearchergJNG5         1
	6                   Student         1
	7                   Student         1
	8              Student7wlbi         1
	9                    tudent         1
	10               Researcher         2
	11                  Student         2
Wrong output for fuzzied solution in instance spider/riding_club/0001 (3884)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM player

	   count(*)
	0        14
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT occupation,
		          votes,
		          COUNT() AS n
		   FROM player
		   GROUP BY occupation,
		            votes)
		ORDER BY count___

	   count___
	0        12
Wrong output for fuzzied solution in instance spider/riding_club/0009 (3886)
	EXPECTED OUTPUT ====

		SELECT Residence
		FROM player
		GROUP BY Residence
		HAVING COUNT(*) >= 2

	  residence
	0   Brandon
	1  Winnipeg
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT residence
		FROM
		  (SELECT *
		   FROM
		     (SELECT gender,
		             residence,
		             COUNT() AS n
		      FROM player
		      GROUP BY gender,
		               residence) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM player AS RHS
		        WHERE (LHS.gender = RHS.gender
		               AND LHS.residence = RHS.residence) ))
		WHERE (n > 2)
		ORDER BY residence

	  residence
	0  Winnipeg
Error while executing solution for instance spider/match_season/0008 (3891)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT team) OVER () AS count_distinct_team_
FROM match_season
ORDER BY count_distinct_team_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance spider/match_season/0003 (3892)
Wrong output for fuzzied solution in instance spider/match_season/0006 (3896)
	EXPECTED OUTPUT ====

		SELECT DISTINCT POSITION
		FROM match_season
		WHERE College = "UCLA"
		  OR College = "Duke"

	        position
	0       Defender
	1        Forward
	2     Midfielder
	3  XDWForwardnxS
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `position`
		FROM
		  (SELECT *
		   FROM `match_season`
		   WHERE (`college` != 'Duke'))
		WHERE (`college` = 'UCLA')
		ORDER BY POSITION

	        position
	0       Defender
	1     Midfielder
	2  XDWForwardnxS
Wrong output for fuzzied solution in instance spider/match_season/0012 (3898)
	EXPECTED OUTPUT ====

		SELECT T2.Player
		FROM country AS T1
		JOIN match_season AS T2 ON T1.Country_id = T2.Country
		WHERE T1.Country_name = "Indonesia"

	                                              player
	0            Ben Olsen Category:Articles with hCards
	1       Ben Olsen Category:Articles with hCards0IZCQ
	2    Michael Parkhurst Category:Articles with hCards
	3    Michael Parkhurst Category:Articles with hCards
	4  Michael Parkhurst Category:Articles with hCard...
	5   iLeFmRodrigo Faria Category:Articles with hCards
	6         odrigo Faria Category:Articles with hCards
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `player_other` AS `player`
		FROM
		  (SELECT `LHS`.`player_id` AS `player_id`,
		          `LHS`.`player` AS `player`,
		          `LHS`.`years_played` AS `years_played`,
		          `LHS`.`total_wl` AS `total_wl`,
		          `LHS`.`singles_wl` AS `singles_wl`,
		          `LHS`.`doubles_wl` AS `doubles_wl`,
		          `LHS`.`team` AS `team`,
		          `LHS`.`country_id` AS `country_id`,
		          `LHS`.`country_name` AS `country_name`,
		          `LHS`.`capital` AS `capital`,
		          `LHS`.`official_native_language` AS `official_native_language`,
		          `RHS`.`season` AS `season`,
		          `RHS`.`player` AS `player_other`,
		          `RHS`.`position` AS `position`,
		          `RHS`.`team` AS `team_other`,
		          `RHS`.`draft_pick_number` AS `draft_pick_number`,
		          `RHS`.`draft_class` AS `draft_class`,
		          `RHS`.`college` AS `college`
		   FROM
		     (SELECT `LHS`.`player_id` AS `player_id`,
		             `LHS`.`player` AS `player`,
		             `LHS`.`years_played` AS `years_played`,
		             `LHS`.`total_wl` AS `total_wl`,
		             `LHS`.`singles_wl` AS `singles_wl`,
		             `LHS`.`doubles_wl` AS `doubles_wl`,
		             `LHS`.`team` AS `team`,
		             `RHS`.`country_id` AS `country_id`,
		             `RHS`.`country_name` AS `country_name`,
		             `RHS`.`capital` AS `capital`,
		             `RHS`.`official_native_language` AS `official_native_language`
		      FROM `player` AS `LHS`
		      CROSS JOIN
		        (SELECT *
		         FROM `country`
		         WHERE (`country_name` = 'Indonesia')) AS RHS) AS LHS
		   INNER JOIN match_season AS RHS ON (LHS.country_id = RHS.country))
		ORDER BY player

	                                              player
	0            Ben Olsen Category:Articles with hCards
	1       Ben Olsen Category:Articles with hCards0IZCQ
	2    Michael Parkhurst Category:Articles with hCards
	3  Michael Parkhurst Category:Articles with hCard...
	4   iLeFmRodrigo Faria Category:Articles with hCards
	5         odrigo Faria Category:Articles with hCards
Wrong output for fuzzied solution in instance spider/match_season/0026 (3899)
	EXPECTED OUTPUT ====

		SELECT College
		FROM match_season
		GROUP BY College
		HAVING count(*) >= 2
		ORDER BY College DESC

	       college
	0     Virginia
	1   Wake Fores
	2  Wake Forest
	ACTUAL OUTPUT ====

		
		SELECT college
		FROM
		  (SELECT college,
		          COUNT() AS n
		   FROM
		     (SELECT college,
		             draft_pick_number,
		             COUNT() AS n
		      FROM match_season
		      GROUP BY college,
		               draft_pick_number)
		   GROUP BY college)
		WHERE (n >= 2)
		ORDER BY college

	       college
	0     Virginia
	1  Wake Forest
Error while executing solution for instance spider/match_season/0015 (3900)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `position`) OVER () AS `count_distinct_t1_official_native_language_`
FROM
  (SELECT `LHS`.`country_id` AS `country_id`,
          `LHS`.`country_name` AS `country_name`,
          `LHS`.`capital` AS `capital`,
          `LHS`.`official_native_language` AS `official_native_language`,
          `RHS`.`season` AS `season`,
          `RHS`.`player` AS `player`,
          `RHS`.`position` AS `position`,
          `RHS`.`country` AS `country`,
          `RHS`.`team` AS `team`,
          `RHS`.`draft_pick_number` AS `draft_pick_number`,
          `RHS`.`draft_class` AS `draft_class`,
          `RHS`.`college` AS `college`
   FROM `country` AS `LHS`
   CROSS JOIN
     (SELECT *
      FROM `match_season`
      WHERE (`position` != 'Defender')) AS RHS)
ORDER BY count_distinct_t1_official_native_language_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/match_season/0005 (3901)
	EXPECTED OUTPUT ====

		SELECT Player
		FROM match_season
		WHERE College = "UCLA"

	                                        player
	0  Sean Franklin Category:Articles with hCards
	ACTUAL OUTPUT ====

		
		SELECT `player`
		FROM
		  (SELECT *
		   FROM `match_season` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM `player` AS `RHS`
		        WHERE (`LHS`.`team` = `RHS`.`team`) ))
		WHERE (`college` = 'UCLA')
		ORDER BY player

	Empty DataFrame
	Columns: [player]
	Index: []
Wrong output for fuzzied solution in instance spider/match_season/0018 (3903)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT T1.College)
		FROM match_season AS T1
		JOIN team AS T2 ON T1.Team = T2.Team_id
		WHERE T2.Name = "Columbus Crew"

	   count(distinct t1.college)
	0                           2
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `team_id` AS `count_distinct_t1_college_`
		FROM
		  (SELECT `LHS`.`team_id` AS `team_id`,
		          `LHS`.`name` AS `name`,
		          `RHS`.`season` AS `season`,
		          `RHS`.`player` AS `player`,
		          `RHS`.`position` AS `position`,
		          `RHS`.`country` AS `country`,
		          `RHS`.`team` AS `team`,
		          `RHS`.`draft_pick_number` AS `draft_pick_number`,
		          `RHS`.`draft_class` AS `draft_class`,
		          `RHS`.`college` AS `college`
		   FROM `team` AS `LHS`
		   CROSS JOIN `match_season` AS `RHS`)
		WHERE (`name` = 'Columbus Crew')
		ORDER BY count_distinct_t1_college_

	   count_distinct_t1_college_
	0                           6
Wrong output for fuzzied solution in instance spider/match_season/0024 (3907)
	EXPECTED OUTPUT ====

		SELECT College
		FROM match_season
		GROUP BY College
		ORDER BY count(*) DESC
		LIMIT 3

	       college
	0  Connecticut
	1   onnecticut
	2        urman
	ACTUAL OUTPUT ====

		
		SELECT college
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT college,
		                COUNT() AS n
		         FROM match_season
		         GROUP BY college)
		      ORDER BY n DESC)
		   LIMIT 3)

	       college
	0  3lye3Furman
	1          CLA
	2  Connecticut
Wrong output for fuzzied solution in instance spider/match_season/0021 (3908)
	EXPECTED OUTPUT ====

		SELECT Country_name,
		       COUNT(*)
		FROM country AS T1
		JOIN match_season AS T2 ON T1.Country_id = T2.Country
		GROUP BY T1.Country_name

	   country_name  count(*)
	0  2JcGIIreland         1
	1        reland         1
	2       Ireland         2
	3  IrelandGsfSj         2
	4        Irelan         4
	ACTUAL OUTPUT ====

		
		SELECT country_name,
		       n AS count___
		FROM
		  (SELECT LHS.country_id AS country_id,
		          LHS.country_name AS country_name,
		          LHS.capital AS capital,
		          LHS.official_native_language AS official_native_language,
		          RHS.n AS n
		   FROM country AS LHS
		   INNER JOIN
		     (SELECT country,
		             COUNT() AS n
		      FROM match_season
		      GROUP BY country) AS RHS ON (LHS.country_id = RHS.country))
		ORDER BY country_name

	   country_name  count___
	0  2JcGIIreland         1
	1        Irelan         1
	2        reland         1
	3       Ireland         2
	4  IrelandGsfSj         2
	5        Irelan         3
Wrong output for fuzzied solution in instance spider/match_season/0023 (3909)
	EXPECTED OUTPUT ====

		SELECT POSITION
		FROM match_season
		GROUP BY POSITION
		ORDER BY count(*) DESC
		LIMIT 1

	   position
	0  Defender
	ACTUAL OUTPUT ====

		
		SELECT POSITION
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT POSITION,
		                team,
		                COUNT() AS n
		         FROM match_season
		         GROUP BY POSITION,
		                  team)
		      ORDER BY n)
		   LIMIT 1)

	       position
	0  D8u1YForward
Wrong output for fuzzied solution in instance spider/match_season/0001 (3910)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM country

	   count(*)
	0        13
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT capital,
		          official_native_language,
		          COUNT() AS n
		   FROM country
		   GROUP BY capital,
		            official_native_language)
		ORDER BY count___

	   count___
	0        12
Wrong output for fuzzied solution in instance spider/match_season/0029 (3915)
	EXPECTED OUTPUT ====

		SELECT College
		FROM match_season
		WHERE POSITION = "Midfielder" INTERSECT
		  SELECT College
		  FROM match_season WHERE POSITION = "Defender"

	  college
	0    UCLA
	ACTUAL OUTPUT ====

		
		SELECT `college`
		FROM
		  (SELECT `college`
		   FROM `match_season`
		   WHERE (`position` != 'Midfielder'
		          OR `position` = 'Defender') INTERSECT
		     SELECT `college`
		     FROM
		       (SELECT *
		        FROM `match_season` AS `LHS`
		        WHERE NOT EXISTS
		            (SELECT 1
		             FROM
		               (SELECT *
		                FROM `match_season`
		                WHERE (`position` != 'Midfielder'
		                       OR `position` = 'Defender')) AS RHS
		             WHERE (LHS.college = RHS.college
		                    AND LHS.draft_pick_number = RHS.draft_pick_number) )))
		ORDER BY college

	    college
	0      UCLA
	1  Virginia
	2     urman
Wrong output for fuzzied solution in instance spider/match_season/0028 (3917)
	EXPECTED OUTPUT ====

		SELECT T1.Country_name
		FROM country AS T1
		JOIN match_season AS T2 ON T1.Country_id = T2.Country
		WHERE T2.Position = "Forward" INTERSECT
		  SELECT T1.Country_name
		  FROM country AS T1
		  JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = "Defender"

	    country_name
	0            Ira
	1  United States
	2         reland
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `country_name`
		FROM
		  (SELECT `season`,
		          `player`,
		          `position`,
		          `team` AS `country`,
		          `team`,
		          `draft_pick_number`,
		          `draft_class`,
		          `college`,
		          `country_name`,
		          `capital`,
		          `official_native_language`,
		          `season_other`,
		          `player_other`,
		          `position_other`,
		          `team_other`,
		          `draft_pick_number_other`,
		          `draft_class_other`,
		          `college_other`
		   FROM
		     (SELECT `LHS`.`season` AS `season`,
		             `LHS`.`player` AS `player`,
		             `LHS`.`position` AS `position`,
		             `LHS`.`country` AS `country`,
		             `LHS`.`team` AS `team`,
		             `LHS`.`draft_pick_number` AS `draft_pick_number`,
		             `LHS`.`draft_class` AS `draft_class`,
		             `LHS`.`college` AS `college`,
		             `RHS`.`country_name` AS `country_name`,
		             `RHS`.`capital` AS `capital`,
		             `RHS`.`official_native_language` AS `official_native_language`,
		             `RHS`.`season` AS `season_other`,
		             `RHS`.`player` AS `player_other`,
		             `RHS`.`position` AS `position_other`,
		             `RHS`.`team` AS `team_other`,
		             `RHS`.`draft_pick_number` AS `draft_pick_number_other`,
		             `RHS`.`draft_class` AS `draft_class_other`,
		             `RHS`.`college` AS `college_other`
		      FROM
		        (SELECT *
		         FROM `match_season`
		         WHERE (`position` != 'Forward'
		                AND `position` != 'Defender')) AS LHS
		      INNER JOIN
		        (SELECT LHS.country_id AS country_id,
		                LHS.country_name AS country_name,
		                LHS.capital AS capital,
		                LHS.official_native_language AS official_native_language,
		                RHS.season AS season,
		                RHS.player AS player,
		                RHS.position AS POSITION,
		                RHS.country AS country,
		                RHS.team AS team,
		                RHS.draft_pick_number AS draft_pick_number,
		                RHS.draft_class AS draft_class,
		                RHS.college AS college
		         FROM country AS LHS
		         CROSS JOIN match_season AS RHS) AS RHS ON (LHS.team = RHS.country
		                                                       AND LHS.draft_pick_number = RHS.country_id)))
		ORDER BY country_name

	   country_name
	0  United State
No solution for instance spider/soccer_2/0037 (3920)
Wrong output for fuzzied solution in instance spider/soccer_2/0002 (3921)
	EXPECTED OUTPUT ====

		SELECT avg(enr)
		FROM College

	       avg(enr)
	0  31665.969091
	ACTUAL OUTPUT ====

		
		SELECT meanenr AS avg_enr_
		FROM
		  (SELECT AVG(enr) AS meanenr
		   FROM
		     (SELECT enr,
		             AVG(enr) AS meanenr
		      FROM college
		      GROUP BY enr))
		ORDER BY avg_enr_

	       avg_enr_
	0  37132.356727
Wrong output for fuzzied solution in instance spider/soccer_2/0036 (3922)
	EXPECTED OUTPUT ====

		SELECT max(T1.HS),
		       pPos
		FROM player AS T1
		JOIN tryout AS T2 ON T1.pID = T2.pID
		WHERE T1.HS > 1000
		GROUP BY T2.pPos

	    max(t1.hs)          ppos
	0      1599.98   MIgoalieCb8
	1      1599.98   1iCShgoalie
	2      1599.98   goalie7pDs5
	3      1599.98   hLHP)goalie
	4      1599.98   s(hnWgoalie
	5      1599.99   K(jrcgoalie
	6      1599.99   M7tzzgoalie
	7      1599.99   OZLFMgoalie
	8      1599.99   V0Yj goalie
	9      1599.99   XtRRGgoalie
	10     1599.99  YBQgoalietIP
	11     1600.00   OGbHdgoalie
	12     1600.00   ahe5Kgoalie
	13     1600.00         goali
	14     1600.00        goalie
	15     1600.00   goalieMx5Yl
	16     1600.00         oalie
	17     1600.00  r58goalieXnQ
	18     1600.00  s egoalie6)(
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT MAX(hs) OVER () AS max_t1_hs_,
		                             ppos
		FROM
		  (SELECT LHS.pid AS pid,
		          LHS.pname AS pname,
		          LHS.ycard AS ycard,
		          LHS.hs AS hs,
		          RHS.cname AS cname,
		          RHS.ppos AS ppos,
		          RHS.decision AS decision
		   FROM player AS LHS
		   INNER JOIN tryout AS RHS ON (LHS.pid = RHS.pid))
		WHERE (hs >= 1000.0)
		ORDER BY max_t1_hs_

	    max_t1_hs_          ppos
	0         1600   MIgoalieCb8
	1         1600   1iCShgoalie
	2         1600   7UxDfgoalie
	3         1600  8Zggoalie9kk
	4         1600   K(jrcgoalie
	5         1600   M7tzzgoalie
	6         1600   NVkpUgoalie
	7         1600   OGbHdgoalie
	8         1600   OZLFMgoalie
	9         1600   V0Yj goalie
	10        1600   XtRRGgoalie
	11        1600  YBQgoalietIP
	12        1600   ahe5Kgoalie
	13        1600  gFogoalie49D
	14        1600         goali
	15        1600        goalie
	16        1600   goalie6VGpl
	17        1600   goalie7pDs5
	18        1600   goalieMx5Yl
	19        1600   goaliezk2jW
	20        1600   hLHP)goalie
	21        1600   muM sgoalie
	22        1600         oalie
	23        1600  r58goalieXnQ
	24        1600  s egoalie6)(
	25        1600   s(hnWgoalie
Error while executing solution for instance spider/soccer_2/0052 (3924)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT enr) OVER () AS count_distinct_state_
FROM
  (SELECT LHS.enr AS enr,
          LHS.state AS state,
          LHS.meanenr AS meanenr,
          RHS.cname AS cname,
          RHS.state AS state_other,
          RHS.enr AS enr_other
   FROM
     (SELECT enr,
             state,
             AVG(enr) AS meanenr
      FROM college
      GROUP BY enr,
               state) AS LHS
   CROSS JOIN college AS RHS)
WHERE (enr > enr_other
       OR meanenr > enr_other)
ORDER BY count_distinct_state_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Wrong output for fuzzied solution in instance spider/soccer_2/0027 (3929)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.state
		FROM college AS T1
		JOIN tryout AS T2 ON T1.cName = T2.cName
		WHERE T2.decision = 'yes'

	      state
	0   (4WvDFL
	1  3qYAZ4dI
	2        AZ
	3   AZMO0MO
	4         F
	5        FL
	6         L
	7   mxfhcFL
	8   v6fImFL
	9   zING4AZ
	ACTUAL OUTPUT ====

		
		SELECT `state`
		FROM
		  (SELECT `LHS`.`cname` AS `cname`,
		          `LHS`.`state` AS `state`,
		          `LHS`.`enr` AS `enr`,
		          `LHS`.`pid` AS `pid`,
		          `LHS`.`ppos` AS `ppos`,
		          `LHS`.`decision` AS `decision`
		   FROM
		     (SELECT `LHS`.`cname` AS `cname`,
		             `LHS`.`state` AS `state`,
		             `LHS`.`enr` AS `enr`,
		             `RHS`.`pid` AS `pid`,
		             `RHS`.`ppos` AS `ppos`,
		             `RHS`.`decision` AS `decision`
		      FROM `college` AS `LHS`
		      INNER JOIN `tryout` AS `RHS` ON (`LHS`.`cname` = `RHS`.`cname`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `tryout`
		      WHERE (`decision` = 'yes')) AS RHS ON (LHS.cname = RHS.cname
		                                             AND LHS.pid = RHS.pid
		                                             AND LHS.ppos = RHS.ppos
		                                             AND LHS.decision = RHS.decision))
		ORDER BY state

	       state
	0    (4WvDFL
	1   3qYAZ4dI
	2         AZ
	3         AZ
	4         AZ
	5         AZ
	6         AZ
	7         AZ
	8    AZMO0MO
	9          F
	10        FL
	11        FL
	12        FL
	13        FL
	14         L
	15   mxfhcFL
	16   v6fImFL
	17   zING4AZ
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Wrong output for fuzzied solution in instance spider/soccer_2/0030 (3933)
	EXPECTED OUTPUT ====

		SELECT T1.pName,
		       T1.HS
		FROM player AS T1
		JOIN tryout AS T2 ON T1.pID = T2.pID
		WHERE T2.decision = 'yes'

	           pname       hs
	0          Drago   599.98
	1     mWS9EBlake   599.99
	2     mWS9EBlake   599.99
	3        Charles   600.00
	4        Charles   600.00
	5   CharlesBIQ)G   600.00
	6           rago   600.00
	7           rago   600.00
	8           rago   600.00
	9           rago   600.00
	10       Charles   600.01
	11       Charles   600.01
	12       Charles   600.01
	13         David  1599.99
	14         Drago  1600.02
	15         Drago  1600.02
	16         Drago  1600.02
	17         Drago  1600.02
	ACTUAL OUTPUT ====

		
		SELECT `pname`,
		       `hs`
		FROM
		  (SELECT *
		   FROM `player` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `tryout`
		           WHERE (`decision` = 'yes')) AS RHS
		        WHERE (LHS.pid = RHS.pid) ))
		ORDER BY pname

	          pname       hs
	0         Drago   599.98
	1    mWS9EBlake   599.99
	2       Charles   600.00
	3  CharlesBIQ)G   600.00
	4          rago   600.00
	5       Charles   600.01
	6         David  1599.99
	7         Drago  1600.02
Wrong output for fuzzied solution in instance spider/soccer_2/0013 (3934)
	EXPECTED OUTPUT ====

		SELECT avg(enr)
		FROM College
		WHERE state = 'FL'

	       avg(enr)
	0  20692.314615
	ACTUAL OUTPUT ====

		
		SELECT `enr` AS `avg_enr_`
		FROM `college`
		WHERE (`state` = 'FL')
		ORDER BY avg_enr_

	    avg_enr_
	0   17999.99
	1   18000.01
	2   18999.99
	3   19000.00
	4   19000.02
	5   21999.98
	6   22000.00
	7   22000.01
	8   22000.01
	9   22000.02
	10  22000.02
	11  22000.02
	12  22000.02
Wrong output for fuzzied solution in instance spider/soccer_2/0004 (3936)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Player
		WHERE HS > 1000

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM player
		      WHERE (hs >= 1000.0)))
		ORDER BY count___

	   count___
	0         9
Wrong output for fuzzied solution in instance spider/soccer_2/0026 (3938)
	EXPECTED OUTPUT ====

		SELECT DISTINCT state
		FROM college AS T1
		JOIN tryout AS T2 ON T1.cName = T2.cName

	      state
	0        FL
	1   FLEun2W
	2         Z
	3  kIUAZLo5
	ACTUAL OUTPUT ====

		
		SELECT state
		FROM college
		ORDER BY state

	      state
	0        FL
	1        FL
	2        FL
	3   FLEun2W
	4         Z
	5  kIUAZLo5
No solution for instance spider/soccer_2/0015 (3939)
Wrong output for fuzzied solution in instance spider/soccer_2/0005 (3940)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM College
		WHERE enr > 15000

	   count(*)
	0        31
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT enr) AS n_distinct
		   FROM
		     (SELECT *
		      FROM college
		      WHERE (enr >= 15000.0)))
		ORDER BY count___

	   count___
	0        12
Wrong output for fuzzied solution in instance spider/soccer_2/0016 (3941)
	EXPECTED OUTPUT ====

		SELECT cName,
		       enr
		FROM College
		WHERE enr > 10000
		  AND state = "LA"

	Empty DataFrame
	Columns: [cname, enr]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `cname`,
		       `enr`
		FROM `college`
		WHERE (`state` = 'LA'
		       OR enr = 10000.0)
		ORDER BY cname

	  cname    enr
	0    AS  10000
	1  Bb3y  10000
	2    OU  10000
	3    ZZ  10000
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Wrong output for fuzzied solution in instance spider/soccer_2/0045 (3944)
	EXPECTED OUTPUT ====

		SELECT cName
		FROM tryout
		WHERE pPos = 'mid'
		EXCEPT
		SELECT cName
		FROM tryout
		WHERE pPos = 'goalie'

	      cname
	0   OUCShPn
	1  vKSCAFSU
	ACTUAL OUTPUT ====

		
		SELECT `cname`
		FROM
		  (SELECT *
		   FROM `tryout` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT `LHS`.`pid` AS `pid`,
		                     `LHS`.`cname` AS `cname`,
		                     `LHS`.`ppos` AS `ppos`,
		                     `LHS`.`decision` AS `decision`,
		                     `RHS`.`pid` AS `pid_other`,
		                     `RHS`.`cname` AS `cname_other`,
		                     `RHS`.`ppos` AS `ppos_other`,
		                     `RHS`.`decision` AS `decision_other`
		              FROM
		                (SELECT *
		                 FROM `tryout`
		                 WHERE (`ppos` != 'mid'
		                        OR `ppos` = 'goalie')) AS LHS
		              CROSS JOIN tryout AS RHS)
		           WHERE (ppos != ppos_other)) AS RHS
		        WHERE (LHS.cname = RHS.cname) ))
		ORDER BY cname

	Empty DataFrame
	Columns: [cname]
	Index: []
Wrong output for fuzzied solution in instance spider/soccer_2/0041 (3946)
	EXPECTED OUTPUT ====

		SELECT cName
		FROM College
		WHERE enr < 13000
		  AND state = "AZ"
		UNION
		SELECT cName
		FROM College
		WHERE enr > 15000
		  AND state = "LA"

	       cname
	0  B4HFSUQ(o
	1   FSU3UNZE
	ACTUAL OUTPUT ====

		
		SELECT `cname`
		FROM
		  (SELECT *
		   FROM `college`
		   WHERE (`state` != 'AZ'
		          OR `enr` < 15000.0))
		WHERE (`state` = 'LA'
		       OR enr <= 13000.0)
		ORDER BY cname

	       cname
	0   (4WvDFSU
	1  B4HFSUQ(o
	2   FSU3UNZE
	3         LS
	4   LSU3cv)u
	5   QIijVFSU
Wrong output for fuzzied solution in instance spider/soccer_2/0051 (3947)
	EXPECTED OUTPUT ====

		SELECT sum(enr)
		FROM college
		WHERE cName NOT IN
		    (SELECT cName
		     FROM tryout
		     WHERE pPos = "goalie")

	  sum(enr)
	0     None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT SUM(`enr`) OVER () AS `sum_enr_`
		FROM
		  (SELECT *
		   FROM `college` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `tryout`
		           WHERE (`ppos` = 'goalie')) AS RHS
		        WHERE (LHS.cname = RHS.cname) ))
		ORDER BY sum_enr_

	Empty DataFrame
	Columns: [sum_enr_]
	Index: []
Wrong output for fuzzied solution in instance spider/soccer_2/0035 (3948)
	EXPECTED OUTPUT ====

		SELECT avg(T1.HS)
		FROM player AS T1
		JOIN tryout AS T2 ON T1.pID = T2.pID
		WHERE T2.decision = 'no'

	  avg(t1.hs)
	0       None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(`hs`) OVER () AS `avg_t1_hs_`
		FROM
		  (SELECT `LHS`.`pid` AS `pid`,
		          `LHS`.`pname` AS `pname`,
		          `LHS`.`ycard` AS `ycard`,
		          `LHS`.`hs` AS `hs`,
		          `RHS`.`cname` AS `cname`,
		          `RHS`.`ppos` AS `ppos`,
		          `RHS`.`decision` AS `decision`
		   FROM `player` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `tryout`
		      WHERE (`decision` = 'no')) AS RHS ON (LHS.pid = RHS.pid))
		ORDER BY avg_t1_hs_

	Empty DataFrame
	Columns: [avg_t1_hs_]
	Index: []
Wrong output for fuzzied solution in instance spider/soccer_2/0007 (3951)
	EXPECTED OUTPUT ====

		SELECT pName,
		       HS
		FROM Player
		WHERE HS < 1500

	           pname       hs
	0          Blake   599.98
	1     Ofqe3Drago   599.99
	2    lGPDavidkMe   599.99
	3          Drago   600.00
	4  GFRCharlesUVZ   600.00
	5   Y8nq4Charles  1499.98
	ACTUAL OUTPUT ====

		
		SELECT pname,
		       hs
		FROM player
		WHERE (hs <= 1500.0)
		ORDER BY pname

	           pname       hs
	0          Blake   599.98
	1     Ofqe3Drago   599.99
	2    lGPDavidkMe   599.99
	3          Drago   600.00
	4  GFRCharlesUVZ   600.00
	5   Y8nq4Charles  1499.98
	6          Blake  1500.00
	7     BlakeMO0MO  1500.00
Wrong output for fuzzied solution in instance spider/soccer_2/0034 (3952)
	EXPECTED OUTPUT ====

		SELECT avg(T1.HS),
		       max(T1.HS)
		FROM player AS T1
		JOIN tryout AS T2 ON T1.pID = T2.pID
		WHERE T2.decision = 'yes'

	   avg(t1.hs)  max(t1.hs)
	0  877.781111     1600.02
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `meanhs` AS `avg_t1_hs_`,
		                MAX(`hs`) OVER () AS `max_t1_hs_`
		FROM
		  (SELECT `pid`,
		          `pname`,
		          `ycard`,
		          `hs`,
		          AVG(`hs`) OVER () AS `meanhs`
		   FROM
		     (SELECT *
		      FROM `player` AS `LHS`
		      WHERE EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM `tryout`
		              WHERE (`decision` = 'yes')) AS RHS
		           WHERE (LHS.pid = RHS.pid) )))
		ORDER BY avg_t1_hs_

	   avg_t1_hs_  max_t1_hs_
	0   849.99875     1600.02
Wrong output for fuzzied solution in instance spider/soccer_2/0024 (3953)
	EXPECTED OUTPUT ====

		SELECT cName
		FROM college
		ORDER BY enr DESC
		LIMIT 3

	     cname
	0      LSU
	1        O
	2  kJl4lOU
	ACTUAL OUTPUT ====

		
		SELECT cname
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM college
		      ORDER BY state DESC)
		   LIMIT 3)

	     cname
	0       OU
	1  iiO5oOU
	2  kJl4lOU
Wrong output for fuzzied solution in instance spider/soccer_2/0021 (3954)
	EXPECTED OUTPUT ====

		SELECT pPos
		FROM tryout
		GROUP BY pPos
		ORDER BY count(*) DESC
		LIMIT 1

	     ppos
	0  goalie
	ACTUAL OUTPUT ====

		
		SELECT ppos
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT decision,
		                ppos,
		                COUNT() AS n
		         FROM tryout
		         GROUP BY decision,
		                  ppos)
		      ORDER BY decision)
		   LIMIT 1)

	  ppos
	0  mid
Wrong output for fuzzied solution in instance spider/soccer_2/0023 (3955)
	EXPECTED OUTPUT ====

		SELECT min(T2.HS),
		       T1.pPos
		FROM tryout AS T1
		JOIN player AS T2 ON T1.pID = T2.pID
		GROUP BY T1.pPos

	   min(t2.hs)          ppos
	0      599.98   goalie9awO)
	1      599.98  pLJgoalieFWa
	2      600.00  G4vgoalieT90
	3      600.00   SXvflgoalie
	4      600.00  bYRgoalievH9
	5      600.00        goalie
	6      600.00         oalie
	7     1599.98         goali
	8     1599.98   goaliesONnL
	9     1600.02   goalieFGi42
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT minhs AS min_t2_hs_,
		                ppos
		FROM
		  (SELECT decision,
		          ppos,
		          MIN(hs) AS minhs
		   FROM
		     (SELECT LHS.pid AS pid,
		             LHS.pname AS pname,
		             LHS.ycard AS ycard,
		             LHS.hs AS hs,
		             RHS.cname AS cname,
		             RHS.ppos AS ppos,
		             RHS.decision AS decision
		      FROM player AS LHS
		      INNER JOIN tryout AS RHS ON (LHS.pid = RHS.pid))
		   GROUP BY decision,
		            ppos)
		ORDER BY min_t2_hs_

	    min_t2_hs_          ppos
	0       599.98   goalie9awO)
	1       599.98  pLJgoalieFWa
	2       600.00  G4vgoalieT90
	3       600.00   SXvflgoalie
	4       600.00  bYRgoalievH9
	5       600.00        goalie
	6       600.00         oalie
	7      1599.98         goali
	8      1599.98        goalie
	9      1599.98   goaliesONnL
	10     1600.02        goalie
	11     1600.02   goalieFGi42
Wrong output for fuzzied solution in instance spider/soccer_2/0043 (3957)
	EXPECTED OUTPUT ====

		SELECT T1.state
		FROM college AS T1
		JOIN tryout AS T2 ON T1.cName = T2.cName
		WHERE T2.pPos = 'goalie' INTERSECT
		  SELECT T1.state
		  FROM college AS T1
		  JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid'

	     state
	0       AZ
	1       FL
	2  N2)TPFL
	ACTUAL OUTPUT ====

		
		SELECT `state`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `college` AS `LHS`
		      WHERE EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM `tryout`
		              WHERE (`ppos` = 'goalie'
		                     AND `ppos` != 'mid')) AS `RHS`
		           WHERE (`LHS`.`cname` = `RHS`.`cname`) )) AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `tryout` AS `LHS`
		           WHERE NOT EXISTS
		               (SELECT 1
		                FROM
		                  (SELECT *
		                   FROM `tryout`
		                   WHERE (`ppos` = 'goalie'
		                          AND `ppos` != 'mid')) AS RHS
		                WHERE (LHS.pid = RHS.pid) )) AS RHS
		        WHERE (LHS.cname = RHS.cname) ))
		ORDER BY state

	  state
	0    AZ
	1    FL
	2    FL
Wrong output for fuzzied solution in instance spider/soccer_2/0046 (3958)
	EXPECTED OUTPUT ====

		SELECT T1.state
		FROM college AS T1
		JOIN tryout AS T2 ON T1.cName = T2.cName
		WHERE T2.pPos = 'mid'
		EXCEPT
		SELECT T1.state
		FROM college AS T1
		JOIN tryout AS T2 ON T1.cName = T2.cName
		WHERE T2.pPos = 'goalie'

	      state
	0   MILACb8
	1       s74
	ACTUAL OUTPUT ====

		
		SELECT `state`
		FROM
		  (SELECT *
		   FROM `college` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `tryout`
		           WHERE (`ppos` != 'mid'
		                  OR `ppos` = 'goalie')) AS RHS
		        WHERE (LHS.cname = RHS.cname) ))
		ORDER BY state

	Empty DataFrame
	Columns: [state]
	Index: []
Wrong output for fuzzied solution in instance spider/soccer_2/0047 (3959)
	EXPECTED OUTPUT ====

		SELECT COUNT(*)
		FROM
		  (SELECT T1.state
		   FROM college AS T1
		   JOIN tryout AS T2 ON T1.cName = T2.cName
		   WHERE T2.pPos = 'mid'
		   EXCEPT SELECT T1.state
		   FROM college AS T1
		   JOIN tryout AS T2 ON T1.cName = T2.cName
		   WHERE T2.pPos = 'goalie')

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`cname` AS `cname`,
		          `LHS`.`enr` AS `enr`,
		          `LHS`.`n` AS `n`,
		          `RHS`.`pid` AS `pid`,
		          `RHS`.`ppos` AS `ppos`,
		          `RHS`.`decision` AS `decision`
		   FROM
		     (SELECT `cname`,
		             `enr`,
		             COUNT() AS `n`
		      FROM `college`
		      GROUP BY `cname`,
		               `enr`) AS `LHS`
		   LEFT JOIN
		     (SELECT *
		      FROM `tryout`
		      WHERE (`ppos` != 'mid'
		             AND `ppos` != 'goalie')) AS RHS ON (LHS.cname = RHS.cname))
		ORDER BY count___

	   count___
	0         1
Wrong output for fuzzied solution in instance spider/soccer_2/0025 (3962)
	EXPECTED OUTPUT ====

		SELECT cName,
		       state,
		       min(enr)
		FROM college
		GROUP BY state

	     cname     state  min(enr)
	0      FSU        FL  11999.99
	1       OU  kIUAZLo5  17999.98
	2  iiO5oOU         Z  11999.98
	3  kJl4lOU   FLEun2W  18000.01
	ACTUAL OUTPUT ====

		
		SELECT cname,
		       state,
		       enr AS min_enr_
		FROM college
		ORDER BY cname

	     cname     state  min_enr_
	0      FSU        FL  11999.99
	1      LSU        FL  18000.02
	2        O        FL  17999.99
	3       OU  kIUAZLo5  17999.98
	4  iiO5oOU         Z  11999.98
	5  kJl4lOU   FLEun2W  18000.01
Error while executing solution for instance spider/soccer_2/0011 (3963)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT `n_distinct` AS `count___`
FROM
  (SELECT `pid`,
          `cname`,
          `ppos`,
          `decision`,
          COUNT(DISTINCT `ppos`) OVER () AS `n_distinct`
   FROM `tryout`)
WHERE (`ppos` = 'goalie')
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance spider/soccer_2/0010 (3965)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT `n_distinct` AS `count___`
FROM
  (SELECT `pid`,
          `cname`,
          `ppos`,
          `decision`,
          COUNT(DISTINCT `decision`) OVER () AS `n_distinct`
   FROM `tryout`)
WHERE (`decision` != 'yes')
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance spider/soccer_2/0044 (3966)
	EXPECTED OUTPUT ====

		SELECT COUNT(*)
		FROM
		  (SELECT cName
		   FROM tryout
		   WHERE pPos = 'goalie' INTERSECT
		     SELECT cName
		     FROM tryout WHERE pPos = 'mid')

	   count(*)
	0         5
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n_distinct` AS `count___`
		FROM
		  (SELECT `cname`,
		          `decision`,
		          COUNT(DISTINCT `ppos`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM `tryout`
		      WHERE (`ppos` != 'goalie'
		             AND `ppos` = 'mid'))
		   GROUP BY cname,
		            decision)
		ORDER BY count___

	   count___
	0         1
Wrong output for fuzzied solution in instance spider/soccer_2/0040 (3967)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.state,
		                T1.enr
		FROM college AS T1
		JOIN tryout AS T2 ON T1.cName = T2.cName
		WHERE T2.decision = 'yes'

	       state       enr
	0         AZ  18000.00
	1    v6fImFL  18999.98
	2    zING4AZ  19000.01
	3         AZ  21999.98
	4         AZ  21999.99
	5          F  21999.99
	6         FL  21999.99
	7         AZ  22000.00
	8         FL  22000.00
	9    (4WvDFL  22000.01
	10         L  22000.01
	11   mxfhcFL  22000.01
	12  3qYAZ4dI  22000.02
	13   AZMO0MO  22000.02
	14        FL  22000.02
	ACTUAL OUTPUT ====

		
		SELECT `state`,
		       `enr`
		FROM
		  (SELECT *
		   FROM `college` AS `LHS`
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `tryout`
		           WHERE (`decision` = 'yes')) AS RHS
		        WHERE (LHS.cname = RHS.cname) ))
		ORDER BY state

	       state       enr
	0         AZ  18000.00
	1    v6fImFL  18999.98
	2    zING4AZ  19000.01
	3         AZ  21999.98
	4         AZ  21999.99
	5          F  21999.99
	6         FL  21999.99
	7         AZ  22000.00
	8         FL  22000.00
	9    (4WvDFL  22000.01
	10         L  22000.01
	11   mxfhcFL  22000.01
	12  3qYAZ4dI  22000.02
	13   AZMO0MO  22000.02
	14        FL  22000.02
	15        FL  22000.02
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_363.sqlite3'
Wrong output for fuzzied solution in instance spider/customer_complaints/0017 (3972)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM customers
		GROUP BY customer_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT LHS.customer_type_code AS customer_type_code,
		          LHS.n AS n,
		          RHS.customer_type_code AS customer_type_code_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT customer_type_code,
		             COUNT() AS n
		      FROM customers
		      GROUP BY customer_type_code) AS LHS
		   CROSS JOIN
		     (SELECT customer_type_code,
		             COUNT() AS n
		      FROM customers
		      GROUP BY customer_type_code) AS RHS)
		WHERE (n > n_other)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance spider/customer_complaints/0003 (3974)
	EXPECTED OUTPUT ====

		SELECT town_city
		FROM customers
		WHERE customer_type_code = "Good Credit Rating"
		GROUP BY town_city
		ORDER BY count(*)
		LIMIT 1

	          town_city
	0  North Alisaville
	ACTUAL OUTPUT ====

		
		SELECT `town_city`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `town_city`,
		                COUNT(DISTINCT `customer_type_code`) AS `n_distinct`
		         FROM
		           (SELECT *
		            FROM `customers`
		            WHERE (`customer_type_code` = 'Good Credit Rating'))
		         GROUP BY town_city)
		      ORDER BY n_distinct DESC)
		   LIMIT 1)

	  town_city
	0   Funksta
No solution for instance spider/customer_complaints/0022 (3975)
Wrong output for fuzzied solution in instance spider/customer_complaints/0013 (3976)
	EXPECTED OUTPUT ====

		SELECT avg(product_price),
		       product_category_code
		FROM products
		GROUP BY product_category_code

	   avg(product_price) product_category_code
	0            2.880000         n7cXfHardware
	1           23.340000        5Q)Hardware lp
	2           23.350000                  Food
	3           23.360000               Hardwar
	4          109.970000            FiZFoodTex
	5          109.983333              Hardware
	ACTUAL OUTPUT ====

		
		SELECT meanproduct_price AS avg_product_price_,
		       product_category_code
		FROM
		  (SELECT product_category_code,
		          AVG(product_price) AS meanproduct_price
		   FROM
		     (SELECT product_category_code,
		             product_price,
		             AVG(product_price) AS meanproduct_price
		      FROM products
		      GROUP BY product_category_code,
		               product_price)
		   GROUP BY product_category_code)
		ORDER BY avg_product_price_

	   avg_product_price_ product_category_code
	0                2.88         n7cXfHardware
	1               23.34        5Q)Hardware lp
	2               23.35                  Food
	3               23.36               Hardwar
	4              109.97            FiZFoodTex
	5              109.98              Hardware
Wrong output for fuzzied solution in instance spider/customer_complaints/0006 (3977)
	EXPECTED OUTPUT ====

		SELECT DISTINCT t1.product_name
		FROM products AS t1
		JOIN complaints AS t2 ON t1.product_id = t2.product_id
		JOIN customers AS t3
		GROUP BY t3.customer_id
		ORDER BY count(*)
		LIMIT 1

	       product_name
	0  The Great Gatsby
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT product_name
		FROM
		  (SELECT LHS.complaint_type_code AS complaint_type_code,
		          LHS.staff_id AS staff_id,
		          LHS.n AS n,
		          RHS.customer_id AS customer_id,
		          RHS.customer_type_code AS customer_type_code,
		          RHS.address_line_1 AS address_line_1,
		          RHS.address_line_2 AS address_line_2,
		          RHS.town_city AS town_city,
		          RHS.state AS state,
		          RHS.email_address AS email_address,
		          RHS.phone_number AS phone_number,
		          RHS.product_id AS product_id,
		          RHS.product_category_code AS product_category_code,
		          RHS.date_product_first_available AS date_product_first_available,
		          RHS.date_product_discontinued AS date_product_discontinued,
		          RHS.product_name AS product_name,
		          RHS.product_description AS product_description,
		          RHS.product_price AS product_price,
		          RHS.complaint_id AS complaint_id,
		          RHS.complaint_outcome_code AS complaint_outcome_code,
		          RHS.complaint_status_code AS complaint_status_code,
		          RHS.complaint_type_code AS complaint_type_code_other,
		          RHS.date_complaint_raised AS date_complaint_raised,
		          RHS.date_complaint_closed AS date_complaint_closed,
		          RHS.n AS n_other
		   FROM
		     (SELECT complaint_type_code,
		             staff_id,
		             COUNT() AS n
		      FROM complaints
		      GROUP BY complaint_type_code,
		               staff_id) AS LHS
		   INNER JOIN
		     (SELECT LHS.customer_id AS customer_id,
		             LHS.customer_type_code AS customer_type_code,
		             LHS.address_line_1 AS address_line_1,
		             LHS.address_line_2 AS address_line_2,
		             LHS.town_city AS town_city,
		             LHS.state AS state,
		             LHS.email_address AS email_address,
		             LHS.phone_number AS phone_number,
		             LHS.product_id AS product_id,
		             LHS.parent_product_id AS parent_product_id,
		             LHS.product_category_code AS product_category_code,
		             LHS.date_product_first_available AS date_product_first_available,
		             LHS.date_product_discontinued AS date_product_discontinued,
		             LHS.product_name AS product_name,
		             LHS.product_description AS product_description,
		             LHS.product_price AS product_price,
		             LHS.complaint_id AS complaint_id,
		             LHS.complaint_outcome_code AS complaint_outcome_code,
		             LHS.complaint_status_code AS complaint_status_code,
		             LHS.complaint_type_code AS complaint_type_code,
		             LHS.date_complaint_raised AS date_complaint_raised,
		             LHS.date_complaint_closed AS date_complaint_closed,
		             LHS.staff_id AS staff_id,
		             RHS.n AS n
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.customer_type_code AS customer_type_code,
		                LHS.address_line_1 AS address_line_1,
		                LHS.address_line_2 AS address_line_2,
		                LHS.town_city AS town_city,
		                LHS.state AS state,
		                LHS.email_address AS email_address,
		                LHS.phone_number AS phone_number,
		                LHS.product_id AS product_id,
		                LHS.parent_product_id AS parent_product_id,
		                LHS.product_category_code AS product_category_code,
		                LHS.date_product_first_available AS date_product_first_available,
		                LHS.date_product_discontinued AS date_product_discontinued,
		                LHS.product_name AS product_name,
		                LHS.product_description AS product_description,
		                LHS.product_price AS product_price,
		                RHS.complaint_id AS complaint_id,
		                RHS.complaint_outcome_code AS complaint_outcome_code,
		                RHS.complaint_status_code AS complaint_status_code,
		                RHS.complaint_type_code AS complaint_type_code,
		                RHS.date_complaint_raised AS date_complaint_raised,
		                RHS.date_complaint_closed AS date_complaint_closed,
		                RHS.staff_id AS staff_id
		         FROM
		           (SELECT LHS.customer_id AS customer_id,
		                   LHS.customer_type_code AS customer_type_code,
		                   LHS.address_line_1 AS address_line_1,
		                   LHS.address_line_2 AS address_line_2,
		                   LHS.town_city AS town_city,
		                   LHS.state AS state,
		                   LHS.email_address AS email_address,
		                   LHS.phone_number AS phone_number,
		                   RHS.product_id AS product_id,
		                   RHS.parent_product_id AS parent_product_id,
		                   RHS.product_category_code AS product_category_code,
		                   RHS.date_product_first_available AS date_product_first_available,
		                   RHS.date_product_discontinued AS date_product_discontinued,
		                   RHS.product_name AS product_name,
		                   RHS.product_description AS product_description,
		                   RHS.product_price AS product_price
		            FROM customers AS LHS
		            CROSS JOIN products AS RHS) AS LHS
		         INNER JOIN complaints AS RHS ON (LHS.customer_id = RHS.customer_id
		                                             AND LHS.product_id = RHS.product_id)) AS LHS
		      INNER JOIN
		        (SELECT complaint_type_code,
		                staff_id,
		                COUNT() AS n
		         FROM complaints
		         GROUP BY complaint_type_code,
		                  staff_id) AS RHS ON (LHS.complaint_type_code = RHS.complaint_type_code
		                                       AND LHS.staff_id = RHS.staff_id)) AS RHS ON (LHS.staff_id = RHS.staff_id
		                                                                                    AND LHS.n = RHS.parent_product_id))
		ORDER BY product_name

	             product_name
	0                Chocolat
	1               Chocolate
	2        The Great Gatsby
	3   The Great GatsbyJITas
	4  zvEThe Great GatsbyzRM
Wrong output for fuzzied solution in instance spider/customer_complaints/0004 (3978)
	EXPECTED OUTPUT ====

		SELECT t1.product_name,
		       count(*)
		FROM products AS t1
		JOIN complaints AS t2 ON t1.product_id = t2.product_id
		GROUP BY t1.product_name

	             product_name  count(*)
	0                Chocolat        16
	1  zvEThe Great GatsbyzRM        21
	2   The Great GatsbyJITas        22
	3        The Great Gatsby        48
	4               Chocolate        66
	ACTUAL OUTPUT ====

		
		SELECT product_name,
		       n AS count___
		FROM
		  (SELECT product_category_code,
		          product_name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.product_id AS product_id,
		             LHS.parent_product_id AS parent_product_id,
		             LHS.product_category_code AS product_category_code,
		             LHS.date_product_first_available AS date_product_first_available,
		             LHS.date_product_discontinued AS date_product_discontinued,
		             LHS.product_name AS product_name,
		             LHS.product_description AS product_description,
		             LHS.product_price AS product_price,
		             RHS.complaint_id AS complaint_id,
		             RHS.customer_id AS customer_id,
		             RHS.complaint_outcome_code AS complaint_outcome_code,
		             RHS.complaint_status_code AS complaint_status_code,
		             RHS.complaint_type_code AS complaint_type_code,
		             RHS.date_complaint_raised AS date_complaint_raised,
		             RHS.date_complaint_closed AS date_complaint_closed,
		             RHS.staff_id AS staff_id
		      FROM products AS LHS
		      INNER JOIN complaints AS RHS ON (LHS.product_id = RHS.product_id))
		   GROUP BY product_category_code,
		            product_name)
		ORDER BY product_name

	             product_name  count___
	0               Chocolate        13
	1                Chocolat        16
	2  zvEThe Great GatsbyzRM        21
	3   The Great GatsbyJITas        22
	4               Chocolate        23
	5        The Great Gatsby        23
	6        The Great Gatsby        25
	7               Chocolate        30
Wrong output for fuzzied solution in instance spider/customer_complaints/0005 (3980)
	EXPECTED OUTPUT ====

		SELECT t1.email_address
		FROM customers AS t1
		JOIN complaints AS t2 ON t1.customer_id = t2.customer_id
		GROUP BY t1.customer_id
		ORDER BY count(*)
		LIMIT 1

	                 email_address
	0  gvCvbogisich@example.org3L1
	ACTUAL OUTPUT ====

		
		SELECT email_address
		FROM
		  (SELECT LHS.customer_id AS customer_id,
		          LHS.customer_type_code AS customer_type_code,
		          LHS.address_line_1 AS address_line_1,
		          LHS.address_line_2 AS address_line_2,
		          LHS.town_city AS town_city,
		          LHS.state AS state,
		          LHS.email_address AS email_address,
		          LHS.phone_number AS phone_number,
		          LHS.complaint_id AS complaint_id,
		          LHS.product_id AS product_id,
		          LHS.complaint_outcome_code AS complaint_outcome_code,
		          LHS.complaint_status_code AS complaint_status_code,
		          LHS.complaint_type_code AS complaint_type_code,
		          LHS.date_complaint_raised AS date_complaint_raised,
		          LHS.date_complaint_closed AS date_complaint_closed,
		          LHS.staff_id AS staff_id,
		          RHS.complaint_outcome_code AS complaint_outcome_code_other
		   FROM
		     (SELECT LHS.customer_id AS customer_id,
		             LHS.customer_type_code AS customer_type_code,
		             LHS.address_line_1 AS address_line_1,
		             LHS.address_line_2 AS address_line_2,
		             LHS.town_city AS town_city,
		             LHS.state AS state,
		             LHS.email_address AS email_address,
		             LHS.phone_number AS phone_number,
		             RHS.complaint_id AS complaint_id,
		             RHS.product_id AS product_id,
		             RHS.complaint_outcome_code AS complaint_outcome_code,
		             RHS.complaint_status_code AS complaint_status_code,
		             RHS.complaint_type_code AS complaint_type_code,
		             RHS.date_complaint_raised AS date_complaint_raised,
		             RHS.date_complaint_closed AS date_complaint_closed,
		             RHS.staff_id AS staff_id
		      FROM customers AS LHS
		      LEFT JOIN complaints AS RHS ON (LHS.customer_id = RHS.customer_id)) AS LHS
		   INNER JOIN
		     (SELECT complaint_outcome_code,
		             staff_id,
		             COUNT() AS n
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.customer_type_code AS customer_type_code,
		                LHS.address_line_1 AS address_line_1,
		                LHS.address_line_2 AS address_line_2,
		                LHS.town_city AS town_city,
		                LHS.state AS state,
		                LHS.email_address AS email_address,
		                LHS.phone_number AS phone_number,
		                RHS.complaint_id AS complaint_id,
		                RHS.product_id AS product_id,
		                RHS.complaint_outcome_code AS complaint_outcome_code,
		                RHS.complaint_status_code AS complaint_status_code,
		                RHS.complaint_type_code AS complaint_type_code,
		                RHS.date_complaint_raised AS date_complaint_raised,
		                RHS.date_complaint_closed AS date_complaint_closed,
		                RHS.staff_id AS staff_id
		         FROM customers AS LHS
		         LEFT JOIN complaints AS RHS ON (LHS.customer_id = RHS.customer_id))
		      GROUP BY complaint_outcome_code,
		               staff_id) AS RHS ON (LHS.complaint_id = RHS.n
		                                    AND LHS.staff_id = RHS.staff_id))
		ORDER BY email_address

	                  email_address
	0      AJfubeier@example.orgN)L
	1      AJfubeier@example.orgN)L
	2      AJfubeier@example.orgN)L
	3      AJfubeier@example.orgN)L
	4      AJfubeier@example.orgN)L
	..                          ...
	183  vbogisich@example.orgA7Y(m
	184  vbogisich@example.orgA7Y(m
	185  vbogisich@example.orgA7Y(m
	186  vbogisich@example.orgA7Y(m
	187  vbogisich@example.orgA7Y(m
	
	[188 rows x 1 columns]
No solution for instance spider/customer_complaints/0016 (3981)
Wrong output for fuzzied solution in instance spider/customer_complaints/0018 (3982)
	EXPECTED OUTPUT ====

		SELECT t1.last_name
		FROM staff AS t1
		JOIN complaints AS t2 ON t1.staff_id = t2.staff_id
		ORDER BY t2.date_complaint_raised
		LIMIT 1

	  last_name
	0    Erdman
	ACTUAL OUTPUT ====

		
		SELECT last_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.staff_id AS staff_id,
		                LHS.gender AS gender,
		                LHS.first_name AS first_name,
		                LHS.last_name AS last_name,
		                LHS.email_address AS email_address,
		                LHS.phone_number AS phone_number,
		                RHS.complaint_id AS complaint_id,
		                RHS.product_id AS product_id,
		                RHS.customer_id AS customer_id,
		                RHS.complaint_outcome_code AS complaint_outcome_code,
		                RHS.complaint_status_code AS complaint_status_code,
		                RHS.complaint_type_code AS complaint_type_code,
		                RHS.date_complaint_raised AS date_complaint_raised,
		                RHS.date_complaint_closed AS date_complaint_closed
		         FROM staff AS LHS
		         INNER JOIN complaints AS RHS ON (LHS.staff_id = RHS.staff_id))
		      ORDER BY staff_id DESC)
		   LIMIT 1)

	  last_name
	0     rdman
Wrong output for base solution in instance spider/customer_complaints/0007 (3985)
	EXPECTED OUTPUT ====

		SELECT t1.phone_number
		FROM customers AS t1
		JOIN complaints AS t2 ON t1.customer_id = t2.customer_id
		ORDER BY t2.date_complaint_raised DESC
		LIMIT 1

	       phone_number
	0  +38(3)9011433816
	ACTUAL OUTPUT ====

		
		SELECT phone_number
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.customer_id AS customer_id,
		                LHS.customer_type_code AS customer_type_code,
		                LHS.address_line_1 AS address_line_1,
		                LHS.address_line_2 AS address_line_2,
		                LHS.town_city AS town_city,
		                LHS.state AS state,
		                LHS.email_address AS email_address,
		                LHS.phone_number AS phone_number,
		                RHS.complaint_id AS complaint_id,
		                RHS.product_id AS product_id,
		                RHS.complaint_outcome_code AS complaint_outcome_code,
		                RHS.complaint_status_code AS complaint_status_code,
		                RHS.complaint_type_code AS complaint_type_code,
		                RHS.date_complaint_raised AS date_complaint_raised,
		                RHS.date_complaint_closed AS date_complaint_closed,
		                RHS.staff_id AS staff_id
		         FROM customers AS LHS
		         INNER JOIN complaints AS RHS ON (LHS.customer_id = RHS.customer_id))
		      ORDER BY customer_type_code)
		   LIMIT 1)

	       phone_number
	0  578.019.7943x328
Wrong output for fuzzied solution in instance spider/customer_complaints/0021 (3986)
	EXPECTED OUTPUT ====

		SELECT complaint_status_code,
		       count(*)
		FROM complaints
		WHERE complaint_type_code = "Product Failure"
		GROUP BY complaint_status_code

	   complaint_status_code  count(*)
	0           0(XClosedwnZ         1
	1            1ExxQClosed         1
	2            1YdH8Closed         1
	3            C95xnClosed         1
	4                  Close         5
	5                 Closed        18
	6            ClosedHDIRb         1
	7            Closedj5DFN         1
	8                    Ope         1
	9                   Open         6
	10           QDOFnClosed         1
	11            bk7OpenNLQ         1
	12           ksF37Closed         1
	13                 losed         2
	14                   pen         1
	ACTUAL OUTPUT ====

		
		SELECT `complaint_status_code`,
		       `n_distinct` AS `count___`
		FROM
		  (SELECT `complaint_status_code`,
		          `complaint_type_code`,
		          COUNT(DISTINCT `complaint_type_code`) AS `n_distinct`
		   FROM `complaints`
		   GROUP BY `complaint_status_code`,
		            `complaint_type_code`)
		WHERE (`complaint_type_code` = 'Product Failure')
		ORDER BY complaint_status_code

	   complaint_status_code  count___
	0           0(XClosedwnZ         1
	1            1ExxQClosed         1
	2            1YdH8Closed         1
	3            C95xnClosed         1
	4                  Close         1
	5                 Closed         1
	6            ClosedHDIRb         1
	7            Closedj5DFN         1
	8                    Ope         1
	9                   Open         1
	10           QDOFnClosed         1
	11            bk7OpenNLQ         1
	12           ksF37Closed         1
	13                 losed         1
	14                   pen         1
Wrong output for fuzzied solution in instance spider/customer_complaints/0023 (3987)
	EXPECTED OUTPUT ====

		SELECT state
		FROM customers
		GROUP BY state
		ORDER BY count(*)
		LIMIT 1

	      state
	0  Colorado
	ACTUAL OUTPUT ====

		
		SELECT state
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT customer_type_code,
		                state,
		                COUNT() AS n
		         FROM customers
		         GROUP BY customer_type_code,
		                  state)
		      ORDER BY customer_type_code)
		   LIMIT 1)

	            state
	0  P83hITennessee
Wrong output for fuzzied solution in instance spider/customer_complaints/0001 (3988)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM customers

	   count(*)
	0        41
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT address_line_2,
		          town_city,
		          COUNT() AS n
		   FROM customers
		   GROUP BY address_line_2,
		            town_city)
		ORDER BY count___

	   count___
	0        38
Wrong output for fuzzied solution in instance spider/customer_complaints/0014 (3989)
	EXPECTED OUTPUT ====

		SELECT t1.last_name
		FROM staff AS t1
		JOIN complaints AS t2 ON t1.staff_id = t2.staff_id
		JOIN products AS t3 ON t2.product_id = t3.product_id
		ORDER BY t3.product_price
		LIMIT 1

	  last_name
	0    Erdman
	ACTUAL OUTPUT ====

		
		SELECT last_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.staff_id AS staff_id,
		                LHS.gender AS gender,
		                LHS.first_name AS first_name,
		                LHS.last_name AS last_name,
		                LHS.email_address AS email_address,
		                LHS.phone_number AS phone_number,
		                LHS.product_id AS product_id,
		                LHS.parent_product_id AS parent_product_id,
		                LHS.product_category_code AS product_category_code,
		                LHS.date_product_first_available AS date_product_first_available,
		                LHS.date_product_discontinued AS date_product_discontinued,
		                LHS.product_name AS product_name,
		                LHS.product_description AS product_description,
		                LHS.product_price AS product_price,
		                RHS.complaint_id AS complaint_id,
		                RHS.customer_id AS customer_id,
		                RHS.complaint_outcome_code AS complaint_outcome_code,
		                RHS.complaint_status_code AS complaint_status_code,
		                RHS.complaint_type_code AS complaint_type_code,
		                RHS.date_complaint_raised AS date_complaint_raised,
		                RHS.date_complaint_closed AS date_complaint_closed
		         FROM
		           (SELECT LHS.staff_id AS staff_id,
		                   LHS.gender AS gender,
		                   LHS.first_name AS first_name,
		                   LHS.last_name AS last_name,
		                   LHS.email_address AS email_address,
		                   LHS.phone_number AS phone_number,
		                   RHS.product_id AS product_id,
		                   RHS.parent_product_id AS parent_product_id,
		                   RHS.product_category_code AS product_category_code,
		                   RHS.date_product_first_available AS date_product_first_available,
		                   RHS.date_product_discontinued AS date_product_discontinued,
		                   RHS.product_name AS product_name,
		                   RHS.product_description AS product_description,
		                   RHS.product_price AS product_price
		            FROM staff AS LHS
		            CROSS JOIN products AS RHS) AS LHS
		         INNER JOIN complaints AS RHS ON (LHS.staff_id = RHS.staff_id
		                                             AND LHS.product_id = RHS.product_id))
		      ORDER BY parent_product_id DESC)
		   LIMIT 1)

	     last_name
	0  ErdmanCeWVR
No solution for instance spider/customer_complaints/0009 (3990)
Wrong output for fuzzied solution in instance spider/customer_complaints/0011 (3991)
	EXPECTED OUTPUT ====

		SELECT product_name,
		       product_category_code
		FROM products
		ORDER BY product_price DESC
		LIMIT 1

	             product_name product_category_code
	0  zvEThe Great GatsbyzRM              Hardware
	ACTUAL OUTPUT ====

		
		SELECT product_name,
		       product_category_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM products
		      ORDER BY date_product_discontinued DESC)
		   LIMIT 1)

	            product_name product_category_code
	0  The Great GatsbyJITas                  Food
Wrong output for fuzzied solution in instance spider/customer_complaints/0010 (3992)
	EXPECTED OUTPUT ====

		SELECT product_description
		FROM products
		WHERE product_name = "Chocolate"

	       product_description
	0       Designed for games
	1       Designed for games
	2  Designed for gamesBbUSS
	3        Handmade chocolat
	ACTUAL OUTPUT ====

		
		SELECT `product_description`
		FROM
		  (SELECT `product_description`
		   FROM `products`
		   WHERE (`product_name` = 'Chocolate') INTERSECT
		     SELECT product_description
		     FROM products)
		ORDER BY product_description

	       product_description
	0       Designed for games
	1  Designed for gamesBbUSS
	2        Handmade chocolat
No solution for instance db2csv/orchestra/0021_dev (3994)
Wrong output for fuzzied solution in instance db2csv/orchestra/0018_dev (3995)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM conductor
		ORDER BY Year_of_Work DESC
		LIMIT 1

	               name
	0  zXJmgSeiji Ozawa
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT conductor_id,
		          name,
		          age,
		          nationality,
		          year_of_work,
		          MAX(year_of_work) OVER () AS maxyear_of_work
		   FROM conductor)
		WHERE (maxyear_of_work = year_of_work)
		ORDER BY name

	                   name
	0  Igor StravinskyWmqdX
	1      zXJmgSeiji Ozawa
No solution for instance db2csv/orchestra/0039_dev (3997)
Wrong output for fuzzied solution in instance db2csv/orchestra/0037_dev (3999)
	EXPECTED OUTPUT ====

		SELECT COUNT(*)
		FROM orchestra
		WHERE Major_Record_Format = "CD"
		  OR Major_Record_Format = "DVD"

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT `LHS`.`orchestra_id` AS `orchestra_id`,
		          `LHS`.`orchestra` AS `orchestra`,
		          `LHS`.`conductor_id` AS `conductor_id`,
		          `LHS`.`record_company` AS `record_company`,
		          `LHS`.`year_of_founded` AS `year_of_founded`,
		          `LHS`.`major_record_format` AS `major_record_format`
		   FROM `orchestra` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `orchestra`
		      WHERE (`major_record_format` != 'DVD'
		             OR `major_record_format` = 'CD')) AS RHS ON (LHS.orchestra_id = RHS.orchestra_id
		                                                          AND LHS.orchestra = RHS.orchestra
		                                                          AND LHS.conductor_id = RHS.conductor_id
		                                                          AND LHS.record_company = RHS.record_company
		                                                          AND LHS.year_of_founded = RHS.year_of_founded
		                                                          AND LHS.major_record_format = RHS.major_record_format))
		ORDER BY count___

	   count___
	0         9
Error while executing solution for instance db2csv/orchestra/0012_dev (4000)

(sqlite3.OperationalError) no such column: official_ratings__millions_
[SQL: 
SELECT DISTINCT MAX(`share`) OVER () AS `max_share_`,
                                  `date` AS `min_share_`
FROM
  (SELECT `performance_id`,
          `orchestra_id`,
          `type`,
          `date`,
          `official_ratings__millions_`,
          `weekly_rank`,
          `share`,
          MIN(`type`) OVER () AS `mintype`
   FROM
     (SELECT *
      FROM `performance`
      WHERE (`type` != 'Live final')))
ORDER BY max_share_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/orchestra/0038_dev (4001)
	EXPECTED OUTPUT ====

		SELECT COUNT(*)
		FROM orchestra
		WHERE Major_Record_Format = "CD"
		  OR Major_Record_Format = "DVD"

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT `LHS`.`orchestra_id` AS `orchestra_id`,
		          `LHS`.`orchestra` AS `orchestra`,
		          `LHS`.`conductor_id` AS `conductor_id`,
		          `LHS`.`record_company` AS `record_company`,
		          `LHS`.`year_of_founded` AS `year_of_founded`,
		          `LHS`.`major_record_format` AS `major_record_format`
		   FROM `orchestra` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `orchestra`
		      WHERE (`major_record_format` != 'DVD'
		             OR `major_record_format` = 'CD')) AS RHS ON (LHS.orchestra_id = RHS.orchestra_id
		                                                          AND LHS.orchestra = RHS.orchestra
		                                                          AND LHS.conductor_id = RHS.conductor_id
		                                                          AND LHS.record_company = RHS.record_company
		                                                          AND LHS.year_of_founded = RHS.year_of_founded
		                                                          AND LHS.major_record_format = RHS.major_record_format))
		ORDER BY count___

	   count___
	0         9
Wrong output for fuzzied solution in instance db2csv/orchestra/0036_dev (4002)
	EXPECTED OUTPUT ====

		SELECT Record_Company
		FROM orchestra
		WHERE Year_of_Founded < 2003 INTERSECT
		  SELECT Record_Company
		  FROM orchestra WHERE Year_of_Founded > 2003

	  record_company
	0  Decca Records
	1            EMI
	ACTUAL OUTPUT ====

		
		SELECT record_company
		FROM
		  (SELECT record_company
		   FROM
		     (SELECT *
		      FROM orchestra AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM orchestra
		              WHERE (year_of_founded >= 2003.0)) AS RHS
		           WHERE (LHS.conductor_id = RHS.conductor_id
		                  AND LHS.orchestra = RHS.orchestra) )) INTERSECT SELECT record_company
		   FROM orchestra
		   WHERE (year_of_founded >= 2003.0))
		ORDER BY record_company

	  record_company
	0  Decca Records
	1            EMI
	2            RCA
No solution for instance db2csv/orchestra/0034_dev (4005)
Error while executing solution for instance db2csv/orchestra/0011_dev (4006)

(sqlite3.OperationalError) no such column: official_ratings__millions_
[SQL: 
SELECT DISTINCT `date` AS `max_share_`,
                `share` AS `min_share_`
FROM
  (SELECT `performance_id`,
          `orchestra_id`,
          `type`,
          `date`,
          `official_ratings__millions_`,
          `weekly_rank`,
          MIN(`share`) OVER () AS `share`,
                            `maxshare`
   FROM
     (SELECT `performance_id`,
             `orchestra_id`,
             `type`,
             `date`,
             `official_ratings__millions_`,
             `weekly_rank`,
             `share`,
             MAX(`share`) OVER () AS `maxshare`
      FROM `performance`))
WHERE (`type` != 'Live final')
ORDER BY max_share_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for base solution in instance db2csv/orchestra/0024_dev (4007)
	EXPECTED OUTPUT ====

	           name
	0  Antal Doráti
	ACTUAL OUTPUT ====

		SELECT T1.Name
		FROM conductor AS T1
		JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
		GROUP BY T2.Conductor_ID
		ORDER BY COUNT(*) DESC
		LIMIT 1

	                    name
	0  Michael Tilson Thomas
Wrong output for ground truth in instance db2csv/orchestra/0024_dev (4007)
Wrong output for fuzzied solution in instance db2csv/orchestra/0017_dev (4008)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM conductor
		ORDER BY Year_of_Work DESC
		LIMIT 1

	               name
	0  zXJmgSeiji Ozawa
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.conductor_id AS conductor_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.nationality AS nationality,
		          LHS.year_of_work AS year_of_work
		   FROM conductor AS LHS
		   INNER JOIN
		     (SELECT MAX(year_of_work) AS year_of_work
		      FROM conductor) AS RHS ON (LHS.year_of_work = RHS.year_of_work))
		ORDER BY name

	                   name
	0  Igor StravinskyWmqdX
	1      zXJmgSeiji Ozawa
Wrong output for fuzzied solution in instance db2csv/orchestra/0035_dev (4010)
	EXPECTED OUTPUT ====

		SELECT Record_Company
		FROM orchestra
		WHERE Year_of_Founded < 2003 INTERSECT
		  SELECT Record_Company
		  FROM orchestra WHERE Year_of_Founded > 2003

	Empty DataFrame
	Columns: [record_company]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT record_company
		FROM
		  (SELECT record_company
		   FROM
		     (SELECT *
		      FROM orchestra AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM
		             (SELECT *
		              FROM orchestra
		              WHERE (year_of_founded <= 2003.0)) AS RHS
		           WHERE (LHS.orchestra = RHS.orchestra
		                  AND LHS.orchestra_id = RHS.orchestra_id) )) INTERSECT SELECT record_company
		   FROM orchestra
		   WHERE (year_of_founded <= 2003.0))
		ORDER BY record_company

	                 record_company
	0  Koch Records / Naxos Records
	1                           RCA
No solution for instance db2csv/orchestra/0009_dev (4012)
Wrong output for fuzzied solution in instance db2csv/orchestra/0002_dev (4013)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM conductor

	   count(*)
	0        46
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT age,
		             year_of_work,
		             COUNT() AS n
		      FROM conductor
		      GROUP BY age,
		               year_of_work))
		ORDER BY count___

	   count___
	0        43
Wrong output for fuzzied solution in instance db2csv/orchestra/0019_dev (4015)
	EXPECTED OUTPUT ====

		SELECT T1.Name,
		       T2.Orchestra
		FROM conductor AS T1
		JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID

	                    name                        orchestra
	0     3qYRobert Craft4dI           Philharmonia Orchestra
	1     B4HRobert CraftQ(o        Seattle Symphony Orchestr
	2            Colin Davis  Seattle Symphony OrchestragJNG5
	3   Michael Tilson Thoma  EWSGaSeattle Symphony Orchestra
	4   Michael Tilson Thoma               Orchestre de Paris
	5   Michael Tilson Thoma          aD8TqOrchestre de Paris
	6  Michael Tilson Thomas    Royal Concertgebouw Orchestra
	7           Robert Craft               Orchestre de Paris
	8           Robert Craft       Seattle Symphony Orchestra
	ACTUAL OUTPUT ====

		
		SELECT name,
		       orchestra
		FROM
		  (SELECT LHS.conductor_id AS conductor_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.nationality AS nationality,
		          LHS.year_of_work AS year_of_work,
		          RHS.orchestra_id AS orchestra_id,
		          RHS.orchestra AS orchestra,
		          RHS.record_company AS record_company,
		          RHS.year_of_founded AS year_of_founded,
		          RHS.major_record_format AS major_record_format
		   FROM conductor AS LHS
		   LEFT JOIN orchestra AS RHS ON (LHS.conductor_id = RHS.conductor_id))
		ORDER BY name

	                          name                        orchestra
	0   (4WvDMichael Tilson Thomas                             None
	1           3qYRobert Craft4dI           Philharmonia Orchestra
	2           B4HRobert CraftQ(o        Seattle Symphony Orchestr
	3                  Colin Davis  Seattle Symphony OrchestragJNG5
	4         Michael Tilson Thoma  EWSGaSeattle Symphony Orchestra
	5         Michael Tilson Thoma               Orchestre de Paris
	6         Michael Tilson Thoma          aD8TqOrchestre de Paris
	7        Michael Tilson Thomas    Royal Concertgebouw Orchestra
	8        Michael Tilson Thomas                             None
	9                 Robert Craft               Orchestre de Paris
	10                Robert Craft       Seattle Symphony Orchestra
	11               erard Schwarz                             None
Wrong output for fuzzied solution in instance db2csv/orchestra/0006_dev (4016)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM conductor
		WHERE Nationality != 'USA'

	                    name
	0  Michael Tilson Thomas
	1  Michael Tilson Thomas
	2  Michael Tilson Thomas
	3          erard Schwarz
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `name`
		   FROM `conductor`
		   WHERE (`nationality` != 'USA') INTERSECT
		     SELECT name
		     FROM conductor)
		ORDER BY name

	                    name
	0  Michael Tilson Thomas
	1          erard Schwarz
No solution for instance db2csv/orchestra/0040_dev (4017)
No solution for instance db2csv/orchestra/0022_dev (4021)
Error while executing solution for instance db2csv/orchestra/0013_dev (4022)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT nationality) OVER () AS count_distinct_nationality_
FROM
  (SELECT age,
          nationality,
          COUNT() AS n
   FROM conductor
   GROUP BY age,
            nationality)
ORDER BY count_distinct_nationality_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance db2csv/orchestra/0014_dev (4023)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT nationality) OVER () AS count_distinct_nationality_
FROM conductor
ORDER BY count_distinct_nationality_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/orchestra/0031_dev (4024)
	EXPECTED OUTPUT ====

		SELECT Record_Company
		FROM orchestra
		GROUP BY Record_Company
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  record_company
	0         Philip
	ACTUAL OUTPUT ====

		
		SELECT record_company
		FROM
		  (SELECT record_company,
		          n,
		          MAX(n) OVER () AS maxn
		   FROM
		     (SELECT record_company,
		             COUNT() AS n
		      FROM orchestra
		      GROUP BY record_company))
		WHERE (maxn = n)
		ORDER BY record_company

	  record_company
	0  Delos Records
	1         Kultur
	2         Philip
Wrong output for fuzzied solution in instance db2csv/orchestra/0020_dev (4028)
	EXPECTED OUTPUT ====

		SELECT T1.Name,
		       T2.Orchestra
		FROM conductor AS T1
		JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID

	                    name                        orchestra
	0     3qYRobert Craft4dI           Philharmonia Orchestra
	1     B4HRobert CraftQ(o        Seattle Symphony Orchestr
	2            Colin Davis  Seattle Symphony OrchestragJNG5
	3   Michael Tilson Thoma  EWSGaSeattle Symphony Orchestra
	4   Michael Tilson Thoma               Orchestre de Paris
	5   Michael Tilson Thoma          aD8TqOrchestre de Paris
	6  Michael Tilson Thomas    Royal Concertgebouw Orchestra
	7           Robert Craft               Orchestre de Paris
	8           Robert Craft       Seattle Symphony Orchestra
	ACTUAL OUTPUT ====

		
		SELECT name,
		       orchestra
		FROM
		  (SELECT LHS.conductor_id AS conductor_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.nationality AS nationality,
		          LHS.year_of_work AS year_of_work,
		          RHS.orchestra_id AS orchestra_id,
		          RHS.orchestra AS orchestra,
		          RHS.record_company AS record_company,
		          RHS.year_of_founded AS year_of_founded,
		          RHS.major_record_format AS major_record_format
		   FROM conductor AS LHS
		   LEFT JOIN orchestra AS RHS ON (LHS.conductor_id = RHS.conductor_id))
		ORDER BY name

	                          name                        orchestra
	0   (4WvDMichael Tilson Thomas                             None
	1           3qYRobert Craft4dI           Philharmonia Orchestra
	2           B4HRobert CraftQ(o        Seattle Symphony Orchestr
	3                  Colin Davis  Seattle Symphony OrchestragJNG5
	4         Michael Tilson Thoma  EWSGaSeattle Symphony Orchestra
	5         Michael Tilson Thoma               Orchestre de Paris
	6         Michael Tilson Thoma          aD8TqOrchestre de Paris
	7        Michael Tilson Thomas    Royal Concertgebouw Orchestra
	8        Michael Tilson Thomas                             None
	9                 Robert Craft               Orchestre de Paris
	10                Robert Craft       Seattle Symphony Orchestra
	11               erard Schwarz                             None
Wrong output for base solution in instance db2csv/orchestra/0023_dev (4030)
	EXPECTED OUTPUT ====

	           name
	0  Antal Doráti
	ACTUAL OUTPUT ====

		SELECT T1.Name
		FROM conductor AS T1
		JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
		GROUP BY T2.Conductor_ID
		ORDER BY COUNT(*) DESC
		LIMIT 1

	                    name
	0  Michael Tilson Thomas
Wrong output for ground truth in instance db2csv/orchestra/0023_dev (4030)
Wrong output for fuzzied solution in instance db2csv/orchestra/0032_dev (4032)
	EXPECTED OUTPUT ====

		SELECT Record_Company
		FROM orchestra
		GROUP BY Record_Company
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  record_company
	0         Philip
	ACTUAL OUTPUT ====

		
		SELECT record_company
		FROM
		  (SELECT LHS.n AS n,
		          RHS.record_company AS record_company
		   FROM
		     (SELECT MAX(n) AS n
		      FROM
		        (SELECT record_company,
		                COUNT() AS n
		         FROM orchestra
		         GROUP BY record_company)) AS LHS
		   LEFT JOIN
		     (SELECT record_company,
		             COUNT() AS n
		      FROM orchestra
		      GROUP BY record_company) AS RHS ON (LHS.n = RHS.n))
		ORDER BY record_company

	  record_company
	0  Delos Records
	1         Kultur
	2         Philip
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0060_dev (4034)
	EXPECTED OUTPUT ====

		SELECT transcript_date,
		       other_details
		FROM Transcripts
		ORDER BY transcript_date ASC
		LIMIT 1

	       transcript_date other_details
	0  1989-02-02 11:32:48  oMm1F)AQRY8n
	ACTUAL OUTPUT ====

		
		SELECT mintranscript_date AS transcript_date,
		       other_details
		FROM
		  (SELECT other_details,
		          MIN(transcript_date) AS mintranscript_date
		   FROM transcripts
		   GROUP BY other_details)
		ORDER BY transcript_date

	       transcript_date              other_details
	0  1989-02-02 11:32:48           1iIjGwmthA1fgl7)
	1  1989-02-02 11:32:48                   Bkf8OXKz
	2  2001-12-19 05:23:51                   HFFhwS1h
	3  2001-12-19 05:23:51               XB4HQZD(4WvD
	4  1989-02-02 11:32:48                     e(3RJp
	5  2001-12-19 05:23:51          e3qY4dIlGPkMeXhHO
	6  1989-02-02 11:32:48               oMm1F)AQRY8n
	7  2001-12-19 05:23:51  tdbXshWGqk6MbehqfJp2qJy4X
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0063_dev (4035)
	EXPECTED OUTPUT ====

		SELECT transcript_date
		FROM Transcripts
		ORDER BY transcript_date DESC
		LIMIT 1

	       transcript_date
	0  2001-12-19 05:23:51
	ACTUAL OUTPUT ====

		
		SELECT maxtranscript_date AS transcript_date
		FROM
		  (SELECT other_details,
		          MAX(transcript_date) AS maxtranscript_date
		   FROM transcripts
		   GROUP BY other_details)
		ORDER BY transcript_date

	       transcript_date
	0  1989-02-02 11:32:48
	1  1989-02-02 11:32:48
	2  1989-02-02 11:32:48
	3  1989-02-02 11:32:48
	4  2001-12-19 05:23:51
	5  2001-12-19 05:23:51
	6  2001-12-19 05:23:51
	7  2001-12-19 05:23:51
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0058_dev (4037)
	EXPECTED OUTPUT ====

	   avg_transcript_date_
	0           1989.933333
	ACTUAL OUTPUT ====

		SELECT avg(transcript_date)
		FROM Transcripts

	   avg(transcript_date)
	0           1989.933333
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0058_dev (4037)
No solution for instance db2csv/student_transcripts_tracking/0018_dev (4038)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0033_dev (4039)
	EXPECTED OUTPUT ====

		SELECT T1.degree_program_id,
		       T1.degree_summary_name
		FROM Degree_Programs AS T1
		JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id
		GROUP BY T1.degree_program_id
		ORDER BY count(*) DESC
		LIMIT 1

	   degree_program_id degree_summary_name
	0         3440720695           U0YPHD3b5
	ACTUAL OUTPUT ====

		
		SELECT degree_program_id,
		       degree_summary_name
		FROM
		  (SELECT LHS.degree_program_id AS degree_program_id,
		          LHS.department_id AS department_id,
		          LHS.degree_summary_name AS degree_summary_name,
		          LHS.degree_summary_description AS degree_summary_description,
		          LHS.other_details AS other_details,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.degree_program_id AS degree_program_id,
		             LHS.department_id AS department_id,
		             LHS.degree_summary_name AS degree_summary_name,
		             LHS.degree_summary_description AS degree_summary_description,
		             LHS.other_details AS other_details,
		             RHS.n AS n
		      FROM degree_programs AS LHS
		      INNER JOIN
		        (SELECT degree_program_id,
		                COUNT() AS n
		         FROM student_enrolment
		         GROUP BY degree_program_id) AS RHS ON (LHS.degree_program_id = RHS.degree_program_id)) AS LHS
		   INNER JOIN
		     (SELECT degree_program_id,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT degree_program_id,
		                COUNT() AS n
		         FROM student_enrolment
		         GROUP BY degree_program_id)) AS RHS ON (LHS.degree_program_id = RHS.degree_program_id
		                                                 AND LHS.n = RHS.n))
		ORDER BY degree_program_id

	   degree_program_id degree_summary_name
	0         2162386511           wJ3unKFxM
	1         3440720695           U0YPHD3b5
No solution for instance db2csv/student_transcripts_tracking/0054_dev (4042)
No solution for instance db2csv/student_transcripts_tracking/0048_dev (4043)
Timeout while getting results...


Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0003_dev (4048)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Courses

	   count(*)
	0         7
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT other_details,
		          COUNT() AS n
		   FROM
		     (SELECT course_id,
		             other_details,
		             COUNT() AS n
		      FROM courses
		      GROUP BY course_id,
		               other_details)
		   GROUP BY other_details)
		ORDER BY count___

	   count___
	0         1
	1         1
	2         1
	3         1
	4         1
	5         1
	6         1
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0053_dev (4049)
	EXPECTED OUTPUT ====

		SELECT first_name
		FROM Students
		WHERE current_address_id != permanent_address_id

	   first_name
	0     Delaney
	1        Deon
	2       Frida
	3       Gregg
	4       Helga
	5      Hobart
	6      Jarvis
	7        Jett
	8       Jordy
	9       Orrin
	10       Reva
	11   Stanford
	12   Timmothy
	13     Warren
	ACTUAL OUTPUT ====

		
		SELECT first_name
		FROM
		  (SELECT *
		   FROM students AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT ssn
		           FROM students INTERSECT SELECT ssn
		           FROM students) AS RHS
		        WHERE (LHS.ssn = RHS.ssn) ))
		ORDER BY first_name

	   first_name
	0     Delaney
	1        Deon
	2       Frida
	3       Gregg
	4       Helga
	5      Hobart
	6      Jarvis
	7        Jett
	8       Jordy
	9      Milton
	10      Orrin
	11       Reva
	12   Stanford
	13   Timmothy
	14     Warren
No solution for instance db2csv/student_transcripts_tracking/0078_dev (4050)
No solution for instance db2csv/student_transcripts_tracking/0001_dev (4051)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0034_dev (4052)
	EXPECTED OUTPUT ====

		SELECT T1.degree_program_id,
		       T1.degree_summary_name
		FROM Degree_Programs AS T1
		JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id
		GROUP BY T1.degree_program_id
		ORDER BY count(*) DESC
		LIMIT 1

	   degree_program_id degree_summary_name
	0         3440720695           U0YPHD3b5
	ACTUAL OUTPUT ====

		
		SELECT degree_program_id,
		       degree_summary_name
		FROM
		  (SELECT LHS.degree_program_id AS degree_program_id,
		          LHS.department_id AS department_id,
		          LHS.degree_summary_name AS degree_summary_name,
		          LHS.degree_summary_description AS degree_summary_description,
		          LHS.other_details AS other_details,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.degree_program_id AS degree_program_id,
		             LHS.department_id AS department_id,
		             LHS.degree_summary_name AS degree_summary_name,
		             LHS.degree_summary_description AS degree_summary_description,
		             LHS.other_details AS other_details,
		             RHS.n AS n
		      FROM degree_programs AS LHS
		      INNER JOIN
		        (SELECT degree_program_id,
		                COUNT() AS n
		         FROM student_enrolment
		         GROUP BY degree_program_id) AS RHS ON (LHS.degree_program_id = RHS.degree_program_id)) AS LHS
		   INNER JOIN
		     (SELECT MAX(n) AS n
		      FROM
		        (SELECT degree_program_id,
		                COUNT() AS n
		         FROM student_enrolment
		         GROUP BY degree_program_id)) AS RHS ON (LHS.n = RHS.n))
		ORDER BY degree_program_id

	   degree_program_id degree_summary_name
	0         2162386511           wJ3unKFxM
	1         3440720695           U0YPHD3b5
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0064_dev (4055)
	EXPECTED OUTPUT ====

		SELECT transcript_date
		FROM Transcripts
		ORDER BY transcript_date DESC
		LIMIT 1

	       transcript_date
	0  2001-12-19 05:23:51
	ACTUAL OUTPUT ====

		
		SELECT maxtranscript_date AS transcript_date
		FROM
		  (SELECT other_details,
		          MAX(transcript_date) AS maxtranscript_date
		   FROM transcripts
		   GROUP BY other_details)
		ORDER BY transcript_date

	       transcript_date
	0  1989-02-02 11:32:48
	1  1989-02-02 11:32:48
	2  1989-02-02 11:32:48
	3  1989-02-02 11:32:48
	4  2001-12-19 05:23:51
	5  2001-12-19 05:23:51
	6  2001-12-19 05:23:51
	7  2001-12-19 05:23:51
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0043_dev (4056)
	EXPECTED OUTPUT ====

		SELECT T1.last_name
		FROM Students AS T1
		JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id
		WHERE T2.state_province_county = 'NorthCarolina'
		EXCEPT
		SELECT DISTINCT T3.last_name
		FROM Students AS T3
		JOIN Student_Enrolment AS T4 ON T3.student_id = T4.student_id

	Empty DataFrame
	Columns: [last_name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `last_name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT `student_id`,
		             `current_address_id`,
		             `permanent_address_id`,
		             `first_name`,
		             `middle_name`,
		             `last_name`,
		             `cell_mobile_number`,
		             `email_address`,
		             `ssn`,
		             `date_first_registered`,
		             `date_left`,
		             `other_student_details`,
		             `line_1`,
		             `line_2`,
		             `line_3`,
		             `city`,
		             `zip_postcode`,
		             `state_province_county`,
		             `country`,
		             `other_address_details`,
		             `current_address_id` AS `address_id`
		      FROM
		        (SELECT `LHS`.`student_id` AS `student_id`,
		                `LHS`.`current_address_id` AS `current_address_id`,
		                `LHS`.`permanent_address_id` AS `permanent_address_id`,
		                `LHS`.`first_name` AS `first_name`,
		                `LHS`.`middle_name` AS `middle_name`,
		                `LHS`.`last_name` AS `last_name`,
		                `LHS`.`cell_mobile_number` AS `cell_mobile_number`,
		                `LHS`.`email_address` AS `email_address`,
		                `LHS`.`ssn` AS `ssn`,
		                `LHS`.`date_first_registered` AS `date_first_registered`,
		                `LHS`.`date_left` AS `date_left`,
		                `LHS`.`other_student_details` AS `other_student_details`,
		                `RHS`.`line_1` AS `line_1`,
		                `RHS`.`line_2` AS `line_2`,
		                `RHS`.`line_3` AS `line_3`,
		                `RHS`.`city` AS `city`,
		                `RHS`.`zip_postcode` AS `zip_postcode`,
		                `RHS`.`state_province_county` AS `state_province_county`,
		                `RHS`.`country` AS `country`,
		                `RHS`.`other_address_details` AS `other_address_details`
		         FROM `students` AS `LHS`
		         INNER JOIN
		           (SELECT *
		            FROM `addresses`
		            WHERE (`state_province_county` = 'NorthCarolina')) AS RHS ON (LHS.current_address_id = RHS.address_id))) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM student_enrolment AS RHS
		        WHERE (LHS.student_id = RHS.student_id) ))
		ORDER BY last_name

	  last_name
	0    Rogahn
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0042_dev (4058)
	EXPECTED OUTPUT ====

	  course_name
	0          la
	ACTUAL OUTPUT ====

		SELECT T1.course_name
		FROM Courses AS T1
		JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
		GROUP BY T1.course_name
		ORDER BY count(*) DESC
		LIMIT 1

	  course_name
	0          rs
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0042_dev (4058)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0024_dev (4059)
	EXPECTED OUTPUT ====

		SELECT T1.semester_name,
		       T1.semester_id
		FROM Semesters AS T1
		JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id
		GROUP BY T1.semester_id
		ORDER BY count(*) DESC
		LIMIT 1

	      semester_name  semester_id
	0  Ligqtspring 2015   8344313591
	ACTUAL OUTPUT ====

		
		SELECT semester_name,
		       semester_id
		FROM
		  (SELECT LHS.semester_id AS semester_id,
		          LHS.semester_name AS semester_name,
		          LHS.semester_description AS semester_description,
		          LHS.other_details AS other_details,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.semester_id AS semester_id,
		             LHS.semester_name AS semester_name,
		             LHS.semester_description AS semester_description,
		             LHS.other_details AS other_details,
		             RHS.n AS n
		      FROM semesters AS LHS
		      INNER JOIN
		        (SELECT semester_id,
		                COUNT() AS n
		         FROM student_enrolment
		         GROUP BY semester_id) AS RHS ON (LHS.semester_id = RHS.semester_id)) AS LHS
		   INNER JOIN
		     (SELECT semester_id,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT semester_id,
		                COUNT() AS n
		         FROM student_enrolment
		         GROUP BY semester_id)) AS RHS ON (LHS.semester_id = RHS.semester_id
		                                           AND LHS.n = RHS.n))
		ORDER BY semester_name

	      semester_name  semester_id
	0       spring 2018            8
	1       spring 2015           11
	2  Ligqtspring 2015   8344313591
No solution for instance db2csv/student_transcripts_tracking/0077_dev (4062)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0066_dev (4063)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       student_course_id
		FROM Transcript_Contents
		GROUP BY student_course_id
		ORDER BY count(*) DESC
		LIMIT 1

	   count(*)  student_course_id
	0         3         4936402482
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       student_course_id
		FROM
		  (SELECT LHS.n AS n,
		          RHS.student_course_id AS student_course_id
		   FROM
		     (SELECT MAX(n) AS n
		      FROM
		        (SELECT student_course_id,
		                COUNT() AS n
		         FROM transcript_contents
		         GROUP BY student_course_id)) AS LHS
		   LEFT JOIN
		     (SELECT student_course_id,
		             COUNT() AS n
		      FROM transcript_contents
		      GROUP BY student_course_id) AS RHS ON (LHS.n = RHS.n))
		ORDER BY count___

	   count___  student_course_id
	0         3         -384623210
	1         3         4936402482
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0049_dev (4064)
	EXPECTED OUTPUT ====

		SELECT first_name,
		       middle_name,
		       last_name
		FROM Students
		ORDER BY date_first_registered ASC
		LIMIT 1

	  first_name middle_name          last_name
	0     Milton     Aaliyah  ChristiansenFjwQr
	ACTUAL OUTPUT ====

		
		SELECT first_name,
		       middle_name,
		       last_name
		FROM
		  (SELECT student_id,
		          current_address_id,
		          permanent_address_id,
		          first_name,
		          middle_name,
		          last_name,
		          cell_mobile_number,
		          email_address,
		          ssn,
		          date_first_registered,
		          date_left,
		          other_student_details,
		          MIN(date_first_registered) OVER () AS mindate_first_registered
		   FROM students)
		WHERE (mindate_first_registered >= date_first_registered)
		ORDER BY first_name

	  first_name middle_name          last_name
	0     Milton       aughn       Christiansen
	1     Milton     Aaliyah  ChristiansenFjwQr
No solution for instance db2csv/student_transcripts_tracking/0026_dev (4065)
Timeout while getting results...


Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0016_dev (4068)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Departments AS T1
		JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id
		WHERE T1.department_name = 'engineer'

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT COUNT(DISTINCT `department_name`) AS `n_distinct`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `LHS`.`department_id` AS `department_id`,
		                `LHS`.`department_name` AS `department_name`,
		                `LHS`.`department_description` AS `department_description`,
		                `LHS`.`other_details` AS `other_details`,
		                `RHS`.`degree_program_id` AS `degree_program_id`,
		                `RHS`.`degree_summary_name` AS `degree_summary_name`,
		                `RHS`.`degree_summary_description` AS `degree_summary_description`
		         FROM `departments` AS `LHS`
		         INNER JOIN `degree_programs` AS `RHS` ON (`LHS`.`department_id` = `RHS`.`department_id`
		                                                      AND `LHS`.`other_details` = `RHS`.`other_details`))
		      WHERE (`department_name` != 'engineer')))
		ORDER BY count___

	   count___
	0         0
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0009_dev (4069)
	EXPECTED OUTPUT ====

		SELECT T2.department_name,
		       T1.department_id
		FROM Degree_Programs AS T1
		JOIN Departments AS T2 ON T1.department_id = T2.department_id
		GROUP BY T1.department_id
		ORDER BY count(*) DESC
		LIMIT 1

	  department_name  department_id
	0      statistics             13
	ACTUAL OUTPUT ====

		
		SELECT department_name,
		       department_id
		FROM
		  (SELECT LHS.department_id AS department_id,
		          LHS.department_name AS department_name,
		          LHS.department_description AS department_description,
		          LHS.other_details AS other_details,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.department_id AS department_id,
		             LHS.department_name AS department_name,
		             LHS.department_description AS department_description,
		             LHS.other_details AS other_details,
		             RHS.n AS n
		      FROM departments AS LHS
		      INNER JOIN
		        (SELECT department_id,
		                COUNT() AS n
		         FROM degree_programs
		         GROUP BY department_id) AS RHS ON (LHS.department_id = RHS.department_id)) AS LHS
		   INNER JOIN
		     (SELECT MAX(n) AS n
		      FROM
		        (SELECT department_id,
		                COUNT() AS n
		         FROM degree_programs
		         GROUP BY department_id)) AS RHS ON (LHS.n = RHS.n))
		ORDER BY department_name

	  department_name  department_id
	0      management              9
	1      statistics             13
No solution for instance db2csv/student_transcripts_tracking/0002_dev (4070)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0065_dev (4071)
	EXPECTED OUTPUT ====

		SELECT count(*),
		       student_course_id
		FROM Transcript_Contents
		GROUP BY student_course_id
		ORDER BY count(*) DESC
		LIMIT 1

	   count(*)  student_course_id
	0         3         4936402482
	ACTUAL OUTPUT ====

		
		SELECT n AS count___,
		       student_course_id
		FROM
		  (SELECT LHS.n AS n,
		          RHS.student_course_id AS student_course_id
		   FROM
		     (SELECT MAX(n) AS n
		      FROM
		        (SELECT student_course_id,
		                COUNT() AS n
		         FROM transcript_contents
		         GROUP BY student_course_id)) AS LHS
		   LEFT JOIN
		     (SELECT student_course_id,
		             COUNT() AS n
		      FROM transcript_contents
		      GROUP BY student_course_id) AS RHS ON (LHS.n = RHS.n))
		ORDER BY count___

	   count___  student_course_id
	0         3         -384623210
	1         3         4936402482
No solution for instance db2csv/student_transcripts_tracking/0055_dev (4072)
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0057_dev (4074)
	EXPECTED OUTPUT ====

	   avg_transcript_date_
	0           1989.933333
	ACTUAL OUTPUT ====

		SELECT avg(transcript_date)
		FROM Transcripts

	   avg(transcript_date)
	0           1989.933333
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0057_dev (4074)
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0008_dev (4076)
	EXPECTED OUTPUT ====

	   zip_postcode
	0           148
	ACTUAL OUTPUT ====

		SELECT zip_postcode
		FROM Addresses
		WHERE city = 'Port Chelsea'

	  zip_postcode
	0          148
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0008_dev (4076)
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0041_dev (4077)
	EXPECTED OUTPUT ====

	  course_name
	0          la
	ACTUAL OUTPUT ====

		SELECT T1.course_name
		FROM Courses AS T1
		JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
		GROUP BY T1.course_name
		ORDER BY count(*) DESC
		LIMIT 1

	  course_name
	0          rs
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0041_dev (4077)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0006_dev (4080)
	EXPECTED OUTPUT ====

		SELECT course_description
		FROM Courses
		WHERE course_name = 'math'

	  course_description
	0                   
	1                   
	2                 Yh
	3                  b
	4                  b
	ACTUAL OUTPUT ====

		
		SELECT `course_description`
		FROM
		  (SELECT `course_description`
		   FROM `courses`
		   WHERE (`course_name` = 'math') INTERSECT
		     SELECT course_description
		     FROM courses)
		ORDER BY course_description

	  course_description
	0                   
	1                 Yh
	2                  b
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0052_dev (4081)
	EXPECTED OUTPUT ====

		SELECT first_name,
		       middle_name,
		       last_name
		FROM Students
		ORDER BY date_left ASC
		LIMIT 1

	  first_name  middle_name    last_name
	0     Hobart  QxoGoldaNZ4  Kemmern8NAQ
	ACTUAL OUTPUT ====

		
		SELECT first_name,
		       middle_name,
		       last_name
		FROM
		  (SELECT student_id,
		          current_address_id,
		          permanent_address_id,
		          first_name,
		          middle_name,
		          last_name,
		          cell_mobile_number,
		          email_address,
		          ssn,
		          date_first_registered,
		          date_left,
		          other_student_details,
		          MIN(date_left) OVER () AS mindate_left
		   FROM students)
		WHERE (mindate_left >= date_left)
		ORDER BY first_name

	  first_name    middle_name    last_name
	0      Hobar       Brooklyn       Kemmer
	1     Hobart    QxoGoldaNZ4  Kemmern8NAQ
	2       rida  5kww7Brooklyn       Kemmer
Error while executing solution for instance db2csv/student_transcripts_tracking/0071_dev (4084)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT current_address_id) OVER () AS count_distinct_current_address_id_
FROM students
ORDER BY count_distinct_current_address_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0069_dev (4085)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.semester_id
		FROM Degree_Programs AS T1
		JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id
		WHERE degree_summary_name = 'Master' INTERSECT
		  SELECT DISTINCT T2.semester_id
		  FROM Degree_Programs AS T1
		  JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Bachelor'

	   semester_id
	0           12
	ACTUAL OUTPUT ====

		
		SELECT `department_id` AS `semester_id`
		FROM
		  (SELECT *
		   FROM `degree_programs` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM `student_enrolment` AS `RHS`
		        WHERE (`LHS`.`degree_program_id` = `RHS`.`degree_program_id`) ))
		WHERE (`degree_summary_name` = 'Master'
		       AND `degree_summary_name` != 'Bachelor')
		ORDER BY semester_id

	Empty DataFrame
	Columns: [semester_id]
	Index: []
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0004_dev (4086)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Courses

	   count(*)
	0        37
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT LHS.course_id AS course_id,
		             LHS.course_name AS course_name,
		             LHS.course_description AS course_description,
		             LHS.other_details AS other_details,
		             RHS.course_id AS course_id_other,
		             RHS.other_details AS other_details_other
		      FROM courses AS LHS
		      INNER JOIN courses AS RHS ON (LHS.course_description = RHS.course_description
		                                       AND LHS.course_name = RHS.course_name)))
		ORDER BY count___

	   count___
	0        41
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0068_dev (4087)
	EXPECTED OUTPUT ====

		SELECT T2.transcript_date,
		       T1.transcript_id
		FROM Transcript_Contents AS T1
		JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id
		GROUP BY T1.transcript_id
		ORDER BY count(*) ASC
		LIMIT 1

	       transcript_date  transcript_id
	0  1989-02-02 11:32:48              8
	ACTUAL OUTPUT ====

		
		SELECT transcript_date,
		       minn AS transcript_id
		FROM
		  (SELECT transcript_id,
		          minn,
		          transcript_date,
		          other_details,
		          transcript_id AS n
		   FROM
		     (SELECT LHS.transcript_id AS transcript_id,
		             LHS.minn AS minn,
		             RHS.transcript_date AS transcript_date,
		             RHS.other_details AS other_details
		      FROM
		        (SELECT transcript_id,
		                MIN(n) AS minn
		         FROM
		           (SELECT transcript_id,
		                   COUNT() AS n
		            FROM transcript_contents
		            GROUP BY transcript_id)
		         GROUP BY transcript_id) AS LHS
		      INNER JOIN
		        (SELECT transcript_id,
		                transcript_date,
		                other_details,
		                COUNT(*) OVER () AS n
		         FROM transcripts) AS RHS ON (LHS.transcript_id = RHS.n
		                                         AND LHS.minn = RHS.transcript_id)))
		ORDER BY transcript_date

	Empty DataFrame
	Columns: [transcript_date, transcript_id]
	Index: []
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0059_dev (4091)
	EXPECTED OUTPUT ====

		SELECT transcript_date,
		       other_details
		FROM Transcripts
		ORDER BY transcript_date ASC
		LIMIT 1

	       transcript_date other_details
	0  1989-02-02 11:32:48  oMm1F)AQRY8n
	ACTUAL OUTPUT ====

		
		SELECT mintranscript_date AS transcript_date,
		       other_details
		FROM
		  (SELECT other_details,
		          MIN(transcript_date) AS mintranscript_date
		   FROM transcripts
		   GROUP BY other_details)
		ORDER BY transcript_date

	       transcript_date              other_details
	0  1989-02-02 11:32:48           1iIjGwmthA1fgl7)
	1  1989-02-02 11:32:48                   Bkf8OXKz
	2  2001-12-19 05:23:51                   HFFhwS1h
	3  2001-12-19 05:23:51               XB4HQZD(4WvD
	4  1989-02-02 11:32:48                     e(3RJp
	5  2001-12-19 05:23:51          e3qY4dIlGPkMeXhHO
	6  1989-02-02 11:32:48               oMm1F)AQRY8n
	7  2001-12-19 05:23:51  tdbXshWGqk6MbehqfJp2qJy4X
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0051_dev (4092)
	EXPECTED OUTPUT ====

		SELECT first_name,
		       middle_name,
		       last_name
		FROM Students
		ORDER BY date_left ASC
		LIMIT 1

	  first_name  middle_name    last_name
	0     Hobart  QxoGoldaNZ4  Kemmern8NAQ
	ACTUAL OUTPUT ====

		
		SELECT first_name,
		       middle_name,
		       last_name
		FROM
		  (SELECT student_id,
		          current_address_id,
		          permanent_address_id,
		          first_name,
		          middle_name,
		          last_name,
		          cell_mobile_number,
		          email_address,
		          ssn,
		          date_first_registered,
		          date_left,
		          other_student_details,
		          MIN(date_left) OVER () AS mindate_left
		   FROM students)
		WHERE (mindate_left = date_left)
		ORDER BY first_name

	  first_name    middle_name    last_name
	0      Hobar       Brooklyn       Kemmer
	1     Hobart    QxoGoldaNZ4  Kemmern8NAQ
	2       rida  5kww7Brooklyn       Kemmer
Error while executing solution for instance db2csv/student_transcripts_tracking/0013_dev (4094)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT degree_summary_name) OVER () AS count_distinct_degree_summary_name_
FROM
  (SELECT degree_program_id,
          degree_summary_name,
          COUNT() AS n
   FROM degree_programs
   GROUP BY degree_program_id,
            degree_summary_name)
ORDER BY count_distinct_degree_summary_name_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0031_dev (4096)
	EXPECTED OUTPUT ====

		SELECT T1.degree_summary_name
		FROM Degree_Programs AS T1
		JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id
		GROUP BY T1.degree_summary_name
		ORDER BY count(*) DESC
		LIMIT 1

	  degree_summary_name
	0               aster
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT degree_summary_name
		FROM
		  (SELECT LHS.student_enrolment_id AS student_enrolment_id,
		          LHS.degree_program_id AS degree_program_id,
		          LHS.semester_id AS semester_id,
		          LHS.student_id AS student_id,
		          LHS.other_details AS other_details,
		          LHS.degree_summary_name AS degree_summary_name,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.student_enrolment_id AS student_enrolment_id,
		             LHS.degree_program_id AS degree_program_id,
		             LHS.semester_id AS semester_id,
		             LHS.student_id AS student_id,
		             LHS.other_details AS other_details,
		             RHS.degree_summary_name AS degree_summary_name,
		             RHS.n AS n
		      FROM student_enrolment AS LHS
		      CROSS JOIN
		        (SELECT degree_summary_name,
		                COUNT() AS n
		         FROM degree_programs
		         GROUP BY degree_summary_name) AS RHS) AS LHS
		   INNER JOIN
		     (SELECT degree_summary_name,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT degree_summary_name,
		                COUNT() AS n
		         FROM degree_programs
		         GROUP BY degree_summary_name)) AS RHS ON (LHS.degree_summary_name = RHS.degree_summary_name
		                                                   AND LHS.n = RHS.n))
		ORDER BY degree_summary_name

	  degree_summary_name
	0              Master
Error while executing solution for instance db2csv/student_transcripts_tracking/0072_dev (4097)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT current_address_id) OVER () AS count_distinct_current_address_id_
FROM students
ORDER BY count_distinct_current_address_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for base solution in instance db2csv/student_transcripts_tracking/0007_dev (4098)
	EXPECTED OUTPUT ====

	   zip_postcode
	0           148
	ACTUAL OUTPUT ====

		SELECT zip_postcode
		FROM Addresses
		WHERE city = 'Port Chelsea'

	  zip_postcode
	0          148
Wrong output for ground truth in instance db2csv/student_transcripts_tracking/0007_dev (4098)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0010_dev (4100)
	EXPECTED OUTPUT ====

		select t2.department_name,
		       t1.department_id
		from degree_programs as t1
		join departments as t2 on t1.department_id = t2.department_id
		group by t1.department_id
		order by count(*) desc
		limit 1

	  department_name  department_id
	0      statistics             13
	ACTUAL OUTPUT ====

		
		SELECT department_name,
		       department_id
		FROM
		  (SELECT LHS.department_id AS department_id,
		          LHS.department_name AS department_name,
		          LHS.department_description AS department_description,
		          LHS.other_details AS other_details,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.department_id AS department_id,
		             LHS.department_name AS department_name,
		             LHS.department_description AS department_description,
		             LHS.other_details AS other_details,
		             RHS.n AS n
		      FROM departments AS LHS
		      INNER JOIN
		        (SELECT department_id,
		                COUNT() AS n
		         FROM degree_programs
		         GROUP BY department_id) AS RHS ON (LHS.department_id = RHS.department_id)) AS LHS
		   INNER JOIN
		     (SELECT department_id,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT department_id,
		                COUNT() AS n
		         FROM degree_programs
		         GROUP BY department_id)) AS RHS ON (LHS.department_id = RHS.department_id
		                                             AND LHS.n = RHS.n))
		ORDER BY department_name

	  department_name  department_id
	0      management              9
	1      statistics             13
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0044_dev (4101)
	EXPECTED OUTPUT ====

		SELECT T1.last_name
		FROM Students AS T1
		JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id
		WHERE T2.state_province_county = 'NorthCarolina'
		EXCEPT
		SELECT DISTINCT T3.last_name
		FROM Students AS T3
		JOIN Student_Enrolment AS T4 ON T3.student_id = T4.student_id

	Empty DataFrame
	Columns: [last_name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `last_name`
		FROM
		  (SELECT `LHS`.`student_id` AS `student_id`,
		          `LHS`.`current_address_id` AS `current_address_id`,
		          `LHS`.`permanent_address_id` AS `permanent_address_id`,
		          `LHS`.`first_name` AS `first_name`,
		          `LHS`.`middle_name` AS `middle_name`,
		          `LHS`.`last_name` AS `last_name`,
		          `LHS`.`cell_mobile_number` AS `cell_mobile_number`,
		          `LHS`.`email_address` AS `email_address`,
		          `LHS`.`ssn` AS `ssn`,
		          `LHS`.`date_first_registered` AS `date_first_registered`,
		          `LHS`.`date_left` AS `date_left`,
		          `LHS`.`other_student_details` AS `other_student_details`,
		          `RHS`.`line_1` AS `line_1`,
		          `RHS`.`line_2` AS `line_2`,
		          `RHS`.`line_3` AS `line_3`,
		          `RHS`.`city` AS `city`,
		          `RHS`.`zip_postcode` AS `zip_postcode`,
		          `RHS`.`state_province_county` AS `state_province_county`,
		          `RHS`.`country` AS `country`,
		          `RHS`.`other_address_details` AS `other_address_details`
		   FROM
		     (SELECT *
		      FROM `students` AS `LHS`
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM `student_enrolment` AS `RHS`
		           WHERE (`LHS`.`student_id` = `RHS`.`student_id`) )) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `addresses`
		      WHERE (`state_province_county` = 'NorthCarolina')) AS RHS ON (LHS.current_address_id = RHS.address_id))
		ORDER BY last_name

	  last_name
	0    Rogahn
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0067_dev (4102)
	EXPECTED OUTPUT ====

		SELECT T2.transcript_date,
		       T1.transcript_id
		FROM Transcript_Contents AS T1
		JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id
		GROUP BY T1.transcript_id
		ORDER BY count(*) ASC
		LIMIT 1

	       transcript_date  transcript_id
	0  1989-02-02 11:32:48              8
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT transcript_date,
		                transcript_id
		FROM
		  (SELECT LHS.transcript_id AS transcript_id,
		          LHS.n AS n,
		          LHS.transcript_date AS transcript_date,
		          LHS.other_details AS other_details,
		          RHS.transcript_id AS transcript_id_other,
		          RHS.minn AS minn
		   FROM
		     (SELECT LHS.transcript_id AS transcript_id,
		             LHS.n AS n,
		             RHS.transcript_date AS transcript_date,
		             RHS.other_details AS other_details
		      FROM
		        (SELECT transcript_id,
		                COUNT() AS n
		         FROM transcript_contents
		         GROUP BY transcript_id) AS LHS
		      LEFT JOIN transcripts AS RHS ON (LHS.transcript_id = RHS.transcript_id)) AS LHS
		   INNER JOIN
		     (SELECT transcript_id,
		             n,
		             MIN(n) OVER () AS minn
		      FROM
		        (SELECT transcript_id,
		                COUNT() AS n
		         FROM transcript_contents
		         GROUP BY transcript_id)) AS RHS ON (LHS.transcript_id = RHS.n))
		ORDER BY transcript_date

	Empty DataFrame
	Columns: [transcript_date, transcript_id]
	Index: []
No solution for instance db2csv/student_transcripts_tracking/0056_dev (4103)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0020_dev (4104)
	EXPECTED OUTPUT ====

		SELECT T1.course_name,
		       T1.course_id
		FROM Courses AS T1
		JOIN Sections AS T2 ON T1.course_id = T2.course_id
		GROUP BY T1.course_id
		HAVING count(*) <= 2

	  course_name  course_id
	0          ml          4
	1         nlp          6
	2    xPYla Y8          7
	3          ml          9
	4     P83hIla         12
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT course_name,
		                course_id
		FROM
		  (SELECT LHS.course_id AS course_id,
		          LHS.course_name AS course_name,
		          LHS.course_description AS course_description,
		          LHS.other_details AS other_details,
		          LHS.n AS n,
		          RHS.section_id AS section_id,
		          RHS.section_name AS section_name,
		          RHS.section_description AS section_description,
		          RHS.other_details AS other_details_other
		   FROM
		     (SELECT *
		      FROM
		        (SELECT course_id,
		                course_name,
		                course_description,
		                other_details,
		                COUNT(*) OVER () AS n
		         FROM courses)
		      WHERE (n >= 2)) AS LHS
		   INNER JOIN sections AS RHS ON (LHS.course_id = RHS.course_id))
		ORDER BY course_name

	  course_name  course_id
	0    nlps(oUH          1
	1   h1MnlpYfd          2
	2          ml          4
	3         nlp          6
	4    xPYla Y8          7
	5          ml          9
	6     P83hIla         12
No solution for instance db2csv/student_transcripts_tracking/0025_dev (4105)
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0070_dev (4106)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.semester_id
		FROM Degree_Programs AS T1
		JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id
		WHERE degree_summary_name = 'Master' INTERSECT
		  SELECT DISTINCT T2.semester_id
		  FROM Degree_Programs AS T1
		  JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Bachelor'

	   semester_id
	0           12
	ACTUAL OUTPUT ====

		
		SELECT `department_id` AS `semester_id`
		FROM
		  (SELECT `department_id`
		   FROM
		     (SELECT *
		      FROM `degree_programs` AS `LHS`
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM `student_enrolment` AS `RHS`
		           WHERE (`LHS`.`degree_program_id` = `RHS`.`degree_program_id`) ))
		   WHERE (`degree_summary_name` = 'Master'
		          AND `degree_summary_name` != 'Bachelor') INTERSECT
		     SELECT department_id
		     FROM degree_programs)
		ORDER BY semester_id

	Empty DataFrame
	Columns: [semester_id]
	Index: []
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0023_dev (4107)
	EXPECTED OUTPUT ====

		SELECT T1.semester_name,
		       T1.semester_id
		FROM Semesters AS T1
		JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id
		GROUP BY T1.semester_id
		ORDER BY count(*) DESC
		LIMIT 1

	      semester_name  semester_id
	0  Ligqtspring 2015   8344313591
	ACTUAL OUTPUT ====

		
		SELECT semester_name,
		       semester_id
		FROM
		  (SELECT LHS.semester_id AS semester_id,
		          LHS.semester_name AS semester_name,
		          LHS.semester_description AS semester_description,
		          LHS.other_details AS other_details,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.semester_id AS semester_id,
		             LHS.semester_name AS semester_name,
		             LHS.semester_description AS semester_description,
		             LHS.other_details AS other_details,
		             RHS.n AS n
		      FROM semesters AS LHS
		      INNER JOIN
		        (SELECT semester_id,
		                COUNT() AS n
		         FROM student_enrolment
		         GROUP BY semester_id) AS RHS ON (LHS.semester_id = RHS.semester_id)) AS LHS
		   INNER JOIN
		     (SELECT semester_id,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT semester_id,
		                COUNT() AS n
		         FROM student_enrolment
		         GROUP BY semester_id)) AS RHS ON (LHS.semester_id = RHS.semester_id
		                                           AND LHS.n = RHS.n))
		ORDER BY semester_name

	      semester_name  semester_id
	0       spring 2018            8
	1       spring 2015           11
	2  Ligqtspring 2015   8344313591
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0050_dev (4108)
	EXPECTED OUTPUT ====

		SELECT first_name,
		       middle_name,
		       last_name
		FROM Students
		ORDER BY date_first_registered ASC
		LIMIT 1

	  first_name middle_name          last_name
	0     Milton     Aaliyah  ChristiansenFjwQr
	ACTUAL OUTPUT ====

		
		SELECT first_name,
		       middle_name,
		       last_name
		FROM
		  (SELECT student_id,
		          current_address_id,
		          permanent_address_id,
		          first_name,
		          middle_name,
		          last_name,
		          cell_mobile_number,
		          email_address,
		          ssn,
		          date_first_registered,
		          date_left,
		          other_student_details,
		          MIN(date_first_registered) OVER () AS mindate_first_registered
		   FROM students)
		WHERE (mindate_first_registered = date_first_registered)
		ORDER BY first_name

	  first_name middle_name          last_name
	0     Milton       aughn       Christiansen
	1     Milton     Aaliyah  ChristiansenFjwQr
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0005_dev (4109)
	EXPECTED OUTPUT ====

		SELECT course_description
		FROM Courses
		WHERE course_name = 'math'

	  course_description
	0                   
	1                   
	2                 Yh
	3                  b
	4                  b
	ACTUAL OUTPUT ====

		
		SELECT `course_description`
		FROM
		  (SELECT `course_description`
		   FROM `courses`
		   WHERE (`course_name` = 'math') INTERSECT
		     SELECT course_description
		     FROM courses)
		ORDER BY course_description

	  course_description
	0                   
	1                 Yh
	2                  b
Wrong output for fuzzied solution in instance db2csv/student_transcripts_tracking/0032_dev (4110)
	EXPECTED OUTPUT ====

		SELECT T1.degree_summary_name
		FROM Degree_Programs AS T1
		JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id
		GROUP BY T1.degree_summary_name
		ORDER BY count(*) DESC
		LIMIT 1

	  degree_summary_name
	0               aster
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT degree_summary_name
		FROM
		  (SELECT LHS.student_enrolment_id AS student_enrolment_id,
		          LHS.degree_program_id AS degree_program_id,
		          LHS.semester_id AS semester_id,
		          LHS.student_id AS student_id,
		          LHS.other_details AS other_details,
		          LHS.degree_summary_name AS degree_summary_name,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.student_enrolment_id AS student_enrolment_id,
		             LHS.degree_program_id AS degree_program_id,
		             LHS.semester_id AS semester_id,
		             LHS.student_id AS student_id,
		             LHS.other_details AS other_details,
		             RHS.degree_summary_name AS degree_summary_name,
		             RHS.n AS n
		      FROM student_enrolment AS LHS
		      CROSS JOIN
		        (SELECT degree_summary_name,
		                COUNT() AS n
		         FROM degree_programs
		         GROUP BY degree_summary_name) AS RHS) AS LHS
		   INNER JOIN
		     (SELECT MAX(n) AS n
		      FROM
		        (SELECT degree_summary_name,
		                COUNT() AS n
		         FROM degree_programs
		         GROUP BY degree_summary_name)) AS RHS ON (LHS.n = RHS.n))
		ORDER BY degree_summary_name

	  degree_summary_name
	0              Master
Wrong output for fuzzied solution in instance db2csv/pets_1/0021_dev (4112)
	EXPECTED OUTPUT ====

		SELECT T1.fname,
		       T1.age
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		JOIN pets AS T3 ON T3.petid = T2.petid
		WHERE T3.pettype = 'dog'
		  AND T1.stuid NOT IN
		    (SELECT T1.stuid
		     FROM student AS T1
		     JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		     JOIN pets AS T3 ON T3.petid = T2.petid
		     WHERE T3.pettype = 'cat')

	Empty DataFrame
	Columns: [fname, age]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `fname`,
		       `age`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`petid` AS `petid`,
		          `RHS`.`pettype` AS `pettype`,
		          `RHS`.`pet_age` AS `pet_age`,
		          `RHS`.`weight` AS `weight`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `RHS`.`petid` AS `petid`
		      FROM `student` AS `LHS`
		      INNER JOIN `has_pet` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `pets`
		      WHERE (`pettype` = 'dog'
		             AND `pettype` != 'cat')) AS RHS ON (LHS.petid = RHS.petid))
		ORDER BY fname

	           fname  age
	0          Susan   16
	1          Susan   16
	2          Susan   16
	3   r5eArthur47P   16
	4   r5eArthur47P   16
	5   r5eArthur47P   16
	6   r5eArthur47P   16
	7   r5eArthur47P   16
	8   r5eArthur47P   16
	9          Susan   17
	10         Susan   17
	11         Susan   17
	12        Arthur   18
	13        Arthur   18
	14        Arthur   18
	15        Arthur   18
	16           ric   18
	17           ric   18
	18           ric   18
	19          usan   18
	20           ndy   19
	21           ndy   19
	22           ndy   19
	23          Andy   20
	24        Arthur   20
	25        Arthur   20
	26        Arthur   20
	27        Arthur   20
	28         Susan   20
	29         Susan   20
	30         Susan   20
	31         Susan   20
	32          Andy   21
	33          Andy   21
	34          Andy   21
	35          Andy   21
	36        Arthur   21
	37         Susan   21
	38         Susan   21
	39         Susan   21
	40         Susan   21
	41     Andys(oUH   22
	42     Andys(oUH   22
	43     Andys(oUH   22
	44          Eric   22
	45          Eric   22
	46         Susan   22
	47         Susan   22
	48         Susan   22
	49        Arthur   24
	50        Arthur   24
	51        Arthur   24
Wrong output for fuzzied solution in instance db2csv/pets_1/0039_dev (4115)
	EXPECTED OUTPUT ====

		SELECT T1.lname
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		JOIN pets AS T3 ON T3.petid = T2.petid
		WHERE T3.pet_age = 3
		  AND T3.pettype = 'cat'

	       lname
	0   4QGy)Tai
	1   4QGy)Tai
	2      Smith
	3      Smith
	4      Smith
	5        Tai
	6        Tai
	7        Tai
	8        Tai
	9        Tai
	10       Tai
	11       Tai
	12       Tai
	13       Tai
	14       Tai
	15  fet(2Tai
	ACTUAL OUTPUT ====

		
		SELECT `lname`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`petid` AS `petid`,
		          `RHS`.`pettype` AS `pettype`,
		          `RHS`.`pet_age` AS `pet_age`,
		          `RHS`.`weight` AS `weight`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `RHS`.`petid` AS `petid`
		      FROM `student` AS `LHS`
		      INNER JOIN `has_pet` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `pets`
		      WHERE (`pettype` = 'cat'
		             OR pet_age > 3)) AS RHS ON (LHS.petid = RHS.petid))
		ORDER BY lname

	         lname
	0     4QGy)Tai
	1     4QGy)Tai
	2     4QGy)Tai
	3     4QGy)Tai
	4     4QGy)Tai
	..         ...
	72  kxG42Smith
	73    mGuzjTai
	74    mGuzjTai
	75    mGuzjTai
	76    mGuzjTai
	
	[77 rows x 1 columns]
Wrong output for base solution in instance db2csv/pets_1/0029_dev (4116)
	EXPECTED OUTPUT ====

	   avg_weight_ pettype
	0        11.35     dog
	1        12.00     cat
	ACTUAL OUTPUT ====

		SELECT avg(weight),
		       pettype
		FROM pets
		GROUP BY pettype

	   avg(weight) pettype
	0        12.00     cat
	1        11.35     dog
Wrong output for ground truth in instance db2csv/pets_1/0029_dev (4116)
Wrong output for fuzzied solution in instance db2csv/pets_1/0037_dev (4117)
	EXPECTED OUTPUT ====

		SELECT T1.fname,
		       T1.sex
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		GROUP BY T1.stuid
		HAVING count(*) > 1

	          fname      sex
	0       Michael   ZiiO5M
	1  MichaelFZjIj         
	2         Sarah        M
	3         Sarah  NzFFUkJ
	4         Susan  RDXMNfP
	5           ndy        M
	ACTUAL OUTPUT ====

		
		SELECT fname,
		       sex
		FROM
		  (SELECT LHS.stuid AS stuid,
		          LHS.lname AS lname,
		          LHS.fname AS fname,
		          LHS.age AS age,
		          LHS.sex AS sex,
		          LHS.major AS major,
		          LHS.advisor AS advisor,
		          LHS.city_code AS city_code,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.stuid AS stuid,
		             LHS.lname AS lname,
		             LHS.fname AS fname,
		             LHS.age AS age,
		             LHS.sex AS sex,
		             LHS.major AS major,
		             LHS.advisor AS advisor,
		             LHS.city_code AS city_code,
		             RHS.n AS n
		      FROM student AS LHS
		      INNER JOIN
		        (SELECT stuid,
		                COUNT() AS n
		         FROM has_pet
		         GROUP BY stuid) AS RHS ON (LHS.stuid = RHS.stuid)) AS LHS
		   INNER JOIN
		     (SELECT stuid,
		             COUNT(*) OVER () AS n
		      FROM
		        (SELECT stuid,
		                COUNT() AS n
		         FROM has_pet
		         GROUP BY stuid)) AS RHS ON (LHS.stuid = RHS.stuid
		                                     AND LHS.n = RHS.n))
		ORDER BY fname

	   fname      sex
	0  Sarah        M
	1  Susan  RDXMNfP
Wrong output for fuzzied solution in instance db2csv/pets_1/0038_dev (4119)
	EXPECTED OUTPUT ====

		SELECT T1.fname,
		       T1.sex
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		GROUP BY T1.stuid
		HAVING count(*) > 1

	          fname      sex
	0       Michael   ZiiO5M
	1  MichaelFZjIj         
	2         Sarah        M
	3         Sarah  NzFFUkJ
	4         Susan  RDXMNfP
	5           ndy        M
	ACTUAL OUTPUT ====

		
		SELECT fname,
		       sex
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.stuid AS stuid,
		                LHS.lname AS lname,
		                LHS.fname AS fname,
		                LHS.age AS age,
		                LHS.sex AS sex,
		                LHS.major AS major,
		                LHS.advisor AS advisor,
		                LHS.city_code AS city_code,
		                RHS.n AS n
		         FROM student AS LHS
		         INNER JOIN
		           (SELECT stuid,
		                   COUNT() AS n
		            FROM has_pet
		            GROUP BY stuid) AS RHS ON (LHS.stuid = RHS.stuid))
		      ORDER BY n DESC)
		   LIMIT 1)

	     fname     sex
	0  Michael  ZiiO5M
Wrong output for fuzzied solution in instance db2csv/pets_1/0003_dev (4121)
	EXPECTED OUTPUT ====

		SELECT weight
		FROM pets
		ORDER BY pet_age
		LIMIT 1

	   weight
	0   13.39
	ACTUAL OUTPUT ====

		
		SELECT weight
		FROM
		  (SELECT *
		   FROM
		     (SELECT petid,
		             pettype,
		             MIN(pet_age) OVER () AS pet_age,
		                               weight
		      FROM pets) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM pets AS RHS
		        WHERE (LHS.petid = RHS.petid
		               AND LHS.pettype = RHS.pettype
		               AND LHS.pet_age = RHS.pet_age
		               AND LHS.weight = RHS.weight) ))
		ORDER BY weight

	         weight
	0  9.280000e+00
	1  1.339000e+01
	2  9.335411e+09
Error while executing solution for instance db2csv/pets_1/0001_dev (4122)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT weight) OVER () AS count___
FROM pets
WHERE (weight > 10.0)
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance db2csv/pets_1/0011_dev (4124)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT pettype) OVER () AS count_distinct_pettype_
FROM pets
ORDER BY count_distinct_pettype_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/pets_1/0042_dev (4125)
	EXPECTED OUTPUT ====

		select avg(age)
		from student
		where stuid not in
		    (select stuid
		     from has_pet)

	  avg(age)
	0     None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(age) OVER () AS avg_age_
		FROM
		  (SELECT *
		   FROM student AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM has_pet AS RHS
		        WHERE (LHS.stuid = RHS.stuid) ))
		ORDER BY avg_age_

	Empty DataFrame
	Columns: [avg_age_]
	Index: []
Wrong output for fuzzied solution in instance db2csv/pets_1/0024_dev (4126)
	EXPECTED OUTPUT ====

		SELECT pettype,
		       weight
		FROM pets
		ORDER BY pet_age
		LIMIT 1

	  pettype  weight
	0     dog   13.39
	ACTUAL OUTPUT ====

		
		SELECT pettype,
		       weight
		FROM
		  (SELECT LHS.pet_age AS pet_age,
		          RHS.petid AS petid,
		          RHS.pettype AS pettype,
		          RHS.pet_age AS pet_age_other,
		          RHS.weight AS weight
		   FROM
		     (SELECT MIN(pet_age) AS pet_age
		      FROM pets) AS LHS
		   CROSS JOIN pets AS RHS)
		WHERE (pet_age = pet_age_other)
		ORDER BY pettype

	  pettype        weight
	0     dog  9.280000e+00
	1     dog  1.339000e+01
	2     dog  9.335411e+09
No solution for instance db2csv/pets_1/0016_dev (4130)
Wrong output for fuzzied solution in instance db2csv/pets_1/0009_dev (4131)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		JOIN pets AS T3 ON T2.petid = T3.petid
		WHERE T1.sex = 'F'
		  AND T3.pettype = 'dog'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `pettype`,
		          `sex`,
		          COUNT() AS `n`
		   FROM
		     (SELECT `LHS`.`petid` AS `petid`,
		             `LHS`.`pettype` AS `pettype`,
		             `LHS`.`pet_age` AS `pet_age`,
		             `LHS`.`weight` AS `weight`,
		             `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`
		      FROM
		        (SELECT `LHS`.`petid` AS `petid`,
		                `LHS`.`pettype` AS `pettype`,
		                `LHS`.`pet_age` AS `pet_age`,
		                `LHS`.`weight` AS `weight`,
		                `RHS`.`stuid` AS `stuid`,
		                `RHS`.`lname` AS `lname`,
		                `RHS`.`fname` AS `fname`,
		                `RHS`.`age` AS `age`,
		                `RHS`.`sex` AS `sex`,
		                `RHS`.`major` AS `major`,
		                `RHS`.`advisor` AS `advisor`,
		                `RHS`.`city_code` AS `city_code`
		         FROM `pets` AS `LHS`
		         CROSS JOIN `student` AS `RHS`) AS `LHS`
		      INNER JOIN `has_pet` AS `RHS` ON (`LHS`.`petid` = `RHS`.`petid`
		                                           AND `LHS`.`stuid` = `RHS`.`stuid`))
		   GROUP BY `pettype`,
		            `sex`)
		WHERE (`pettype` = 'dog'
		       AND `sex` = 'F')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Error while executing solution for instance db2csv/pets_1/0002_dev (4132)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT weight) OVER () AS count___
FROM pets
WHERE (weight > 10.0)
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/pets_1/0008_dev (4133)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		WHERE T1.age > 20

	   count(*)
	0        46
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT age) AS n_distinct
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.stuid AS stuid,
		                LHS.lname AS lname,
		                LHS.fname AS fname,
		                LHS.age AS age,
		                LHS.sex AS sex,
		                LHS.major AS major,
		                LHS.advisor AS advisor,
		                LHS.city_code AS city_code,
		                RHS.petid AS petid
		         FROM student AS LHS
		         INNER JOIN has_pet AS RHS ON (LHS.stuid = RHS.stuid))
		      WHERE (age = 20)))
		ORDER BY count___

	   count___
	0         1
Wrong output for fuzzied solution in instance db2csv/pets_1/0041_dev (4134)
	EXPECTED OUTPUT ====

		select avg(age)
		from student
		where stuid not in
		    (select stuid
		     from has_pet)

	  avg(age)
	0     None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(age) OVER () AS avg_age_
		FROM
		  (SELECT *
		   FROM student AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM has_pet AS RHS
		        WHERE (LHS.stuid = RHS.stuid) ))
		ORDER BY avg_age_

	Empty DataFrame
	Columns: [avg_age_]
	Index: []
Wrong output for fuzzied solution in instance db2csv/pets_1/0040_dev (4137)
	EXPECTED OUTPUT ====

		SELECT T1.lname
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		JOIN pets AS T3 ON T3.petid = T2.petid
		WHERE T3.pet_age = 3
		  AND T3.pettype = 'cat'

	         lname
	0     4nJwd8eA
	1     4nJwd8eA
	2     4nJwd8eA
	3     4nJwd8eA
	4         Rugh
	5          Tai
	6  Zz8Adamsrcw
	7  Zz8Adamsrcw
	8   gi6RughHSA
	ACTUAL OUTPUT ====

		
		SELECT `lname`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`petid` AS `petid`,
		          `RHS`.`pettype` AS `pettype`,
		          `RHS`.`pet_age` AS `pet_age`,
		          `RHS`.`weight` AS `weight`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `RHS`.`petid` AS `petid`
		      FROM `student` AS `LHS`
		      INNER JOIN `has_pet` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `pets`
		      WHERE (`pettype` = 'cat'
		             AND pet_age <= 3)) AS RHS ON (LHS.petid = RHS.petid))
		ORDER BY lname

	          lname
	0    )FURughJ9V
	1      4nJwd8eA
	2      4nJwd8eA
	3      4nJwd8eA
	4      4nJwd8eA
	5      4nJwd8eA
	6      4nJwd8eA
	7          Adam
	8          Rugh
	9          Rugh
	10      Shieber
	11   SimmsWSkgC
	12          Tai
	13          Tai
	14  Zz8Adamsrcw
	15  Zz8Adamsrcw
	16   gi6RughHSA
	17         imms
Wrong output for fuzzied solution in instance db2csv/pets_1/0004_dev (4138)
	EXPECTED OUTPUT ====

		SELECT weight
		FROM pets
		ORDER BY pet_age
		LIMIT 1

	   weight
	0   13.39
	ACTUAL OUTPUT ====

		
		SELECT weight
		FROM
		  (SELECT LHS.pet_age AS pet_age,
		          RHS.petid AS petid,
		          RHS.pettype AS pettype,
		          RHS.pet_age AS pet_age_other,
		          RHS.weight AS weight
		   FROM
		     (SELECT MIN(pet_age) AS pet_age
		      FROM pets) AS LHS
		   CROSS JOIN pets AS RHS)
		WHERE (pet_age = pet_age_other)
		ORDER BY weight

	         weight
	0  9.280000e+00
	1  1.339000e+01
	2  9.335411e+09
Wrong output for base solution in instance db2csv/pets_1/0030_dev (4139)
	EXPECTED OUTPUT ====

	   avg_weight_ pettype
	0        11.35     dog
	1        12.00     cat
	ACTUAL OUTPUT ====

		SELECT avg(weight),
		       pettype
		FROM pets
		GROUP BY pettype

	   avg(weight) pettype
	0        12.00     cat
	1        11.35     dog
Wrong output for ground truth in instance db2csv/pets_1/0030_dev (4139)
Wrong output for fuzzied solution in instance db2csv/pets_1/0022_dev (4141)
	EXPECTED OUTPUT ====

		SELECT T1.fname,
		       T1.age
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		JOIN pets AS T3 ON T3.petid = T2.petid
		WHERE T3.pettype = 'dog'
		  AND T1.stuid NOT IN
		    (SELECT T1.stuid
		     FROM student AS T1
		     JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		     JOIN pets AS T3 ON T3.petid = T2.petid
		     WHERE T3.pettype = 'cat')

	Empty DataFrame
	Columns: [fname, age]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `fname`,
		       `age`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`petid` AS `petid`,
		          `LHS`.`pettype` AS `pettype`,
		          `LHS`.`pet_age` AS `pet_age`,
		          `LHS`.`weight` AS `weight`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `LHS`.`petid` AS `petid`,
		             `RHS`.`pettype` AS `pettype`,
		             `RHS`.`pet_age` AS `pet_age`,
		             `RHS`.`weight` AS `weight`
		      FROM
		        (SELECT `LHS`.`stuid` AS `stuid`,
		                `LHS`.`lname` AS `lname`,
		                `LHS`.`fname` AS `fname`,
		                `LHS`.`age` AS `age`,
		                `LHS`.`sex` AS `sex`,
		                `LHS`.`major` AS `major`,
		                `LHS`.`advisor` AS `advisor`,
		                `LHS`.`city_code` AS `city_code`,
		                `RHS`.`petid` AS `petid`
		         FROM `student` AS `LHS`
		         INNER JOIN `has_pet` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `pets`
		         WHERE (`pettype` = 'dog'
		                OR `pettype` != 'cat')) AS `RHS` ON (`LHS`.`petid` = `RHS`.`petid`)) AS `LHS`
		   INNER JOIN
		     (SELECT `LHS`.`petid` AS `petid`,
		             `LHS`.`pettype` AS `pettype`,
		             `LHS`.`pet_age` AS `pet_age`,
		             `LHS`.`weight` AS `weight`,
		             `LHS`.`stuid` AS `stuid`
		      FROM
		        (SELECT `LHS`.`petid` AS `petid`,
		                `LHS`.`pettype` AS `pettype`,
		                `LHS`.`pet_age` AS `pet_age`,
		                `LHS`.`weight` AS `weight`,
		                `RHS`.`stuid` AS `stuid`
		         FROM `pets` AS `LHS`
		         INNER JOIN `has_pet` AS `RHS` ON (`LHS`.`petid` = `RHS`.`petid`)) AS `LHS`
		      INNER JOIN
		        (SELECT *
		         FROM `pets`
		         WHERE (`pettype` = 'dog'
		                OR `pettype` != 'cat')) AS RHS ON (LHS.petid = RHS.petid
		                                                   AND LHS.pettype = RHS.pettype
		                                                   AND LHS.pet_age = RHS.pet_age
		                                                   AND LHS.weight = RHS.weight)) AS RHS ON (LHS.stuid = RHS.stuid
		                                                                                            AND LHS.petid = RHS.petid
		                                                                                            AND LHS.pettype = RHS.pettype
		                                                                                            AND LHS.pet_age = RHS.pet_age
		                                                                                            AND LHS.weight = RHS.weight))
		ORDER BY fname

	      fname  age
	0     Susan   16
	1     Susan   16
	2     Susan   16
	3     Susan   16
	4     Susan   16
	..      ...  ...
	133  Arthur   24
	134  Arthur   24
	135  Arthur   24
	136  Arthur   24
	137  Arthur   24
	
	[138 rows x 2 columns]
Wrong output for fuzzied solution in instance db2csv/pets_1/0014_dev (4143)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.Fname
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		JOIN pets AS T3 ON T3.petid = T2.petid
		WHERE T3.pettype = 'cat'
		  OR T3.pettype = 'dog'

	         fname
	0          (Fd
	1          4fL
	2    9q dVEric
	3         Eric
	4           Ia
	5          Ian
	6     IannGLdT
	7        Linda
	8   LindaSHeHy
	9          Mar
	10        Mark
	11      QfP6E 
	12      Steven
	13  hAIfoDb65z
	14       teven
	15   uwwIan6oB
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `fname`
		FROM
		  (SELECT `LHS`.`stuid` AS `stuid`,
		          `LHS`.`lname` AS `lname`,
		          `LHS`.`fname` AS `fname`,
		          `LHS`.`age` AS `age`,
		          `LHS`.`sex` AS `sex`,
		          `LHS`.`major` AS `major`,
		          `LHS`.`advisor` AS `advisor`,
		          `LHS`.`city_code` AS `city_code`,
		          `LHS`.`petid` AS `petid`,
		          `RHS`.`pettype` AS `pettype`,
		          `RHS`.`pet_age` AS `pet_age`,
		          `RHS`.`weight` AS `weight`
		   FROM
		     (SELECT `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`,
		             `RHS`.`petid` AS `petid`
		      FROM `student` AS `LHS`
		      INNER JOIN `has_pet` AS `RHS` ON (`LHS`.`stuid` = `RHS`.`stuid`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `pets`
		      WHERE (`pettype` != 'cat'
		             OR `pettype` != 'dog')) AS RHS ON (LHS.petid = RHS.petid))
		ORDER BY fname

	           fname
	0            (Fd
	1            4fL
	2      9q dVEric
	3      Ekg5uMark
	4           Eric
	5             Ia
	6            Ian
	7       IannGLdT
	8          Linda
	9     LindaSHeHy
	10           Mar
	11          Mark
	12        QfP6E 
	13        Steven
	14   StevenCMxln
	15            an
	16    ehwMarkZ3s
	17  fnc7cez2GWDK
	18    hAIfoDb65z
	19          inda
	20     nAmHc2gfd
	21        rxzyY5
	22         teven
	23    u6uEric20t
	24     uwwIan6oB
Wrong output for fuzzied solution in instance db2csv/pets_1/0031_dev (4144)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.fname,
		                T1.age
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid

	            fname         age
	0       1DKRaUghX -6314016665
	1       lZYmnPaul          16
	2            Paul          17
	3    QdOShielawqD          17
	4    Tt5Shiela)DO          17
	5    32XeRcBrm5HQ          18
	6    683ShielaZke          18
	7           Shiel          18
	8         William          18
	9            Czd4          19
	10          GFjkz          19
	11      PaulNggTx          19
	12    ShielaL8L9i          19
	13        William          19
	14            aul          19
	15   38gzHH5fMU69          20
	16  Cd0odnGNnKjR6          20
	17           EgMs          20
	18           Paul          20
	19            aul          20
	20  ABsWilliamAob          21
	21            Pau          21
	22         Shiela          21
	23            aul          21
	24          3oycd          22
	25      NlAsGPaul          22
	26           Paul          22
	27          Shiel          22
	28        William          22
	29            aul          22
	30          jZO7P          22
	31           Paul          23
	32    ShielaVNabW          23
	33   WilliamTbC8Z          23
	34  YKeWilliamde           24
	35          tCFFK   736994457
	36          hiela  1146195520
	37        William  2671777698
	38           Paul  2687034466
	39         Shiela  2792262576
	40    ShielaoVXSC  2792448755
	41    mcXq)gWrsWl  2844124790
	42           Paul  5617684964
	43           Paul  6516504975
	44   nS4ShielaKo1  6543471894
	ACTUAL OUTPUT ====

		
		SELECT fname,
		       age
		FROM
		  (SELECT *
		   FROM student AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM has_pet AS RHS
		        WHERE (LHS.stuid = RHS.stuid) ))
		ORDER BY fname

	            fname         age
	0       1DKRaUghX -6314016665
	1       lZYmnPaul          16
	2            Paul          17
	3    QdOShielawqD          17
	4    Tt5Shiela)DO          17
	5    32XeRcBrm5HQ          18
	6    683ShielaZke          18
	7           Shiel          18
	8         William          18
	9            Czd4          19
	10          GFjkz          19
	11      PaulNggTx          19
	12    ShielaL8L9i          19
	13        William          19
	14            aul          19
	15            aul          19
	16   38gzHH5fMU69          20
	17  Cd0odnGNnKjR6          20
	18           EgMs          20
	19           Paul          20
	20           Paul          20
	21           Paul          20
	22           Paul          20
	23            aul          20
	24  ABsWilliamAob          21
	25            Pau          21
	26         Shiela          21
	27            aul          21
	28          3oycd          22
	29      NlAsGPaul          22
	30           Paul          22
	31          Shiel          22
	32        William          22
	33            aul          22
	34          jZO7P          22
	35           Paul          23
	36    ShielaVNabW          23
	37   WilliamTbC8Z          23
	38  YKeWilliamde           24
	39          tCFFK   736994457
	40          hiela  1146195520
	41        William  2671777698
	42           Paul  2687034466
	43         Shiela  2792262576
	44    ShielaoVXSC  2792448755
	45    mcXq)gWrsWl  2844124790
	46           Paul  5617684964
	47           Paul  6516504975
	48   nS4ShielaKo1  6543471894
Wrong output for fuzzied solution in instance db2csv/pets_1/0007_dev (4145)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		WHERE T1.age > 20

	   count(*)
	0        46
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM
		        (SELECT *
		         FROM student
		         WHERE (age > 20)) AS LHS
		      WHERE EXISTS
		          (SELECT 1
		           FROM has_pet AS RHS
		           WHERE (LHS.stuid = RHS.stuid) )))
		ORDER BY count___

	   count___
	0         8
No solution for instance db2csv/pets_1/0015_dev (4146)
Wrong output for fuzzied solution in instance db2csv/pets_1/0010_dev (4147)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM student AS T1
		JOIN has_pet AS T2 ON T1.stuid = T2.stuid
		JOIN pets AS T3 ON T2.petid = T3.petid
		WHERE T1.sex = 'F'
		  AND T3.pettype = 'dog'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `pettype`,
		          `sex`,
		          COUNT() AS `n`
		   FROM
		     (SELECT `LHS`.`petid` AS `petid`,
		             `LHS`.`pettype` AS `pettype`,
		             `LHS`.`pet_age` AS `pet_age`,
		             `LHS`.`weight` AS `weight`,
		             `LHS`.`stuid` AS `stuid`,
		             `LHS`.`lname` AS `lname`,
		             `LHS`.`fname` AS `fname`,
		             `LHS`.`age` AS `age`,
		             `LHS`.`sex` AS `sex`,
		             `LHS`.`major` AS `major`,
		             `LHS`.`advisor` AS `advisor`,
		             `LHS`.`city_code` AS `city_code`
		      FROM
		        (SELECT `LHS`.`petid` AS `petid`,
		                `LHS`.`pettype` AS `pettype`,
		                `LHS`.`pet_age` AS `pet_age`,
		                `LHS`.`weight` AS `weight`,
		                `RHS`.`stuid` AS `stuid`,
		                `RHS`.`lname` AS `lname`,
		                `RHS`.`fname` AS `fname`,
		                `RHS`.`age` AS `age`,
		                `RHS`.`sex` AS `sex`,
		                `RHS`.`major` AS `major`,
		                `RHS`.`advisor` AS `advisor`,
		                `RHS`.`city_code` AS `city_code`
		         FROM `pets` AS `LHS`
		         CROSS JOIN `student` AS `RHS`) AS `LHS`
		      INNER JOIN `has_pet` AS `RHS` ON (`LHS`.`petid` = `RHS`.`petid`
		                                           AND `LHS`.`stuid` = `RHS`.`stuid`))
		   GROUP BY `pettype`,
		            `sex`)
		WHERE (`pettype` = 'dog'
		       AND `sex` = 'F')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance db2csv/pets_1/0023_dev (4150)
	EXPECTED OUTPUT ====

		SELECT pettype,
		       weight
		FROM pets
		ORDER BY pet_age
		LIMIT 1

	  pettype  weight
	0     dog   13.39
	ACTUAL OUTPUT ====

		
		SELECT pettype,
		       weight
		FROM
		  (SELECT LHS.pet_age AS pet_age,
		          RHS.petid AS petid,
		          RHS.pettype AS pettype,
		          RHS.weight AS weight
		   FROM
		     (SELECT MIN(pet_age) AS pet_age
		      FROM pets) AS LHS
		   INNER JOIN pets AS RHS ON (LHS.pet_age = RHS.pet_age))
		ORDER BY pettype

	  pettype        weight
	0     dog  9.280000e+00
	1     dog  1.339000e+01
	2     dog  9.335411e+09
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_1897.sqlite3'
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0060_dev (4154)
	EXPECTED OUTPUT ====

		SELECT cost_of_treatment
		FROM Treatments
		ORDER BY date_of_treatment DESC
		LIMIT 1

	   cost_of_treatment
	0             428.01
	ACTUAL OUTPUT ====

		
		SELECT cost_of_treatment
		FROM
		  (SELECT treatment_id,
		          dog_id,
		          professional_id,
		          treatment_type_code,
		          date_of_treatment,
		          cost_of_treatment,
		          MAX(date_of_treatment) OVER () AS maxdate_of_treatment
		   FROM treatments)
		WHERE (maxdate_of_treatment <= date_of_treatment)
		ORDER BY cost_of_treatment

	   cost_of_treatment
	0       4.280100e+02
	1       3.452067e+14
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0021_dev (4156)
	EXPECTED OUTPUT ====

		SELECT T1.treatment_type_description
		FROM Treatment_types AS T1
		JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code
		GROUP BY T1.treatment_type_code
		ORDER BY sum(cost_of_treatment) ASC
		LIMIT 1

	  treatment_type_description
	0            Take for a Walk
	ACTUAL OUTPUT ====

		
		SELECT treatment_type_description
		FROM
		  (SELECT LHS.treatment_type_code AS treatment_type_code,
		          LHS.treatment_type_description AS treatment_type_description,
		          LHS.treatment_id AS treatment_id,
		          LHS.dog_id AS dog_id,
		          LHS.professional_id AS professional_id,
		          LHS.date_of_treatment AS date_of_treatment,
		          LHS.cost_of_treatment AS cost_of_treatment,
		          RHS.sumcost_of_treatment AS sumcost_of_treatment
		   FROM
		     (SELECT LHS.treatment_type_code AS treatment_type_code,
		             LHS.treatment_type_description AS treatment_type_description,
		             LHS.treatment_id AS treatment_id,
		             LHS.dog_id AS dog_id,
		             LHS.professional_id AS professional_id,
		             LHS.date_of_treatment AS date_of_treatment,
		             LHS.cost_of_treatment AS cost_of_treatment
		      FROM
		        (SELECT LHS.treatment_type_code AS treatment_type_code,
		                LHS.treatment_type_description AS treatment_type_description,
		                RHS.treatment_id AS treatment_id,
		                RHS.dog_id AS dog_id,
		                RHS.professional_id AS professional_id,
		                RHS.date_of_treatment AS date_of_treatment,
		                RHS.cost_of_treatment AS cost_of_treatment
		         FROM treatment_types AS LHS
		         INNER JOIN treatments AS RHS ON (LHS.treatment_type_code = RHS.treatment_type_code)) AS LHS
		      INNER JOIN
		        (SELECT MIN(cost_of_treatment) AS cost_of_treatment
		         FROM treatments) AS RHS ON (LHS.cost_of_treatment = RHS.cost_of_treatment)) AS LHS
		   INNER JOIN
		     (SELECT cost_of_treatment,
		             SUM(cost_of_treatment) OVER () AS sumcost_of_treatment
		      FROM
		        (SELECT MIN(cost_of_treatment) AS cost_of_treatment
		         FROM treatments)) AS RHS ON (LHS.cost_of_treatment = RHS.cost_of_treatment))
		ORDER BY treatment_type_description

	  treatment_type_description
	0                Vaccination
No solution for instance db2csv/dog_kennels/0058_dev (4157)
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0018_dev (4158)
	EXPECTED OUTPUT ====

		SELECT T1.breed_name
		FROM Breeds AS T1
		JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code
		GROUP BY T1.breed_name
		ORDER BY count(*) DESC
		LIMIT 1

	  breed_name
	0      Husky
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT breed_name
		FROM
		  (SELECT LHS.breed_name AS breed_name,
		          LHS.n AS n,
		          RHS.breed_name AS breed_name_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT breed_name,
		             COUNT() AS n
		      FROM
		        (SELECT LHS.breed_code AS breed_code,
		                LHS.breed_name AS breed_name,
		                RHS.dog_id AS dog_id,
		                RHS.owner_id AS owner_id,
		                RHS.abandoned_yn AS abandoned_yn,
		                RHS.size_code AS size_code,
		                RHS.name AS name,
		                RHS.age AS age,
		                RHS.date_of_birth AS date_of_birth,
		                RHS.gender AS gender,
		                RHS.weight AS weight,
		                RHS.date_arrived AS date_arrived,
		                RHS.date_adopted AS date_adopted,
		                RHS.date_departed AS date_departed
		         FROM breeds AS LHS
		         LEFT JOIN dogs AS RHS ON (LHS.breed_code = RHS.breed_code))
		      GROUP BY breed_name) AS LHS
		   INNER JOIN
		     (SELECT breed_name,
		             n,
		             MAX(n) OVER () AS maxn
		      FROM
		        (SELECT breed_name,
		                COUNT() AS n
		         FROM
		           (SELECT LHS.breed_code AS breed_code,
		                   LHS.breed_name AS breed_name,
		                   RHS.dog_id AS dog_id,
		                   RHS.owner_id AS owner_id,
		                   RHS.abandoned_yn AS abandoned_yn,
		                   RHS.size_code AS size_code,
		                   RHS.name AS name,
		                   RHS.age AS age,
		                   RHS.date_of_birth AS date_of_birth,
		                   RHS.gender AS gender,
		                   RHS.weight AS weight,
		                   RHS.date_arrived AS date_arrived,
		                   RHS.date_adopted AS date_adopted,
		                   RHS.date_departed AS date_departed
		            FROM breeds AS LHS
		            LEFT JOIN dogs AS RHS ON (LHS.breed_code = RHS.breed_code))
		         GROUP BY breed_name)) AS RHS ON (LHS.n = RHS.maxn))
		ORDER BY breed_name

	  breed_name
	0     Eskimo
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0081_dev (4161)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.first_name,
		                T3.treatment_type_description
		FROM professionals AS T1
		JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id
		JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code

	     first_name treatment_type_description
	0          Dann            Take for a Walk
	1         Danny             Take for a Wal
	2         Danny            Take for a Walk
	3         Danny                Vaccination
	4         Danny             ake for a Walk
	5         Danny       rRazmTake for a Walk
	6    Danny5q7w1                Vaccination
	7         Erick       rRazmTake for a Walk
	8   HQMDannyJUD            Take for a Walk
	9    ZXzF2Danny            Take for a Walk
	10         anny            Take for a Walk
	11         anny                Vaccination
	ACTUAL OUTPUT ====

		
		SELECT first_name,
		       treatment_type_description
		FROM
		  (SELECT *
		   FROM
		     (SELECT LHS.professional_id AS professional_id,
		             LHS.role_code AS role_code,
		             LHS.first_name AS first_name,
		             LHS.street AS street,
		             LHS.city AS city,
		             LHS.state AS state,
		             LHS.zip_code AS zip_code,
		             LHS.last_name AS last_name,
		             LHS.email_address AS email_address,
		             LHS.home_phone AS home_phone,
		             LHS.cell_number AS cell_number,
		             RHS.treatment_type_code AS treatment_type_code,
		             RHS.treatment_type_description AS treatment_type_description
		      FROM professionals AS LHS
		      CROSS JOIN treatment_types AS RHS) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM treatments AS RHS
		        WHERE (LHS.professional_id = RHS.professional_id
		               AND LHS.treatment_type_code = RHS.treatment_type_code) ))
		ORDER BY first_name

	     first_name treatment_type_description
	0          Dann            Take for a Walk
	1         Danny             Take for a Wal
	2         Danny             Take for a Wal
	3         Danny             Take for a Wal
	4         Danny            Take for a Walk
	5         Danny            Take for a Walk
	6         Danny                Vaccination
	7         Danny             ake for a Walk
	8         Danny       rRazmTake for a Walk
	9    Danny5q7w1                Vaccination
	10        Erick       rRazmTake for a Walk
	11  HQMDannyJUD            Take for a Walk
	12   ZXzF2Danny            Take for a Walk
	13         anny            Take for a Walk
	14         anny                Vaccination
No solution for instance db2csv/dog_kennels/0054_dev (4163)
No solution for instance db2csv/dog_kennels/0037_dev (4165)
No solution for instance db2csv/dog_kennels/0038_dev (4167)
No solution for instance db2csv/dog_kennels/0053_dev (4170)
No solution for instance db2csv/dog_kennels/0078_dev (4171)
Error while executing solution for instance db2csv/dog_kennels/0061_dev (4175)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT dog_id) OVER () AS count___
FROM
  (SELECT *
   FROM dogs AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM treatments AS RHS
        WHERE (LHS.dog_id = RHS.dog_id) ))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance db2csv/dog_kennels/0064_dev (4176)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT owner_id) OVER () AS count___
FROM
  (SELECT *
   FROM owners AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM dogs AS RHS
        WHERE (LHS.owner_id = RHS.owner_id) ))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_1897.sqlite3'
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0042_dev (4179)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.date_arrived,
		                T1.date_departed
		FROM Dogs AS T1
		JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id

	           date_arrived        date_departed
	0   2017-10-09 20:04:40  2018-03-25 13:21:48
	1   2017-10-09 20:04:40  2018-03-25 13:32:56
	2   2017-10-09 20:04:40  2018-03-25 13:43:48
	3   2017-10-09 20:04:40  2018-03-25 15:05:16
	4   2017-12-21 10:09:21  2018-03-25 13:21:48
	5   2017-12-21 10:09:21  2018-03-25 13:43:48
	6   2017-12-21 10:09:21  2018-03-25 13:56:49
	7   2017-12-21 10:09:21  2018-03-25 15:05:16
	8   2017-12-23 22:48:00  2018-03-25 13:21:48
	9   2017-12-23 22:48:00  2018-03-25 13:56:49
	10  2017-12-29 23:24:13  2018-03-25 13:21:48
	11  2018-01-03 16:16:21  2018-03-25 13:21:48
	12  2018-01-03 16:16:21  2018-03-25 13:43:48
	ACTUAL OUTPUT ====

		
		SELECT date_arrived,
		       date_departed
		FROM
		  (SELECT *
		   FROM dogs AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM treatments AS RHS
		        WHERE (LHS.dog_id = RHS.dog_id) ))
		ORDER BY date_arrived

	           date_arrived        date_departed
	0   2017-10-09 20:04:40  2018-03-25 13:21:48
	1   2017-10-09 20:04:40  2018-03-25 13:32:56
	2   2017-10-09 20:04:40  2018-03-25 13:43:48
	3   2017-10-09 20:04:40  2018-03-25 13:43:48
	4   2017-10-09 20:04:40  2018-03-25 15:05:16
	5   2017-12-21 10:09:21  2018-03-25 13:21:48
	6   2017-12-21 10:09:21  2018-03-25 13:43:48
	7   2017-12-21 10:09:21  2018-03-25 13:56:49
	8   2017-12-21 10:09:21  2018-03-25 13:56:49
	9   2017-12-21 10:09:21  2018-03-25 13:56:49
	10  2017-12-21 10:09:21  2018-03-25 15:05:16
	11  2017-12-23 22:48:00  2018-03-25 13:21:48
	12  2017-12-23 22:48:00  2018-03-25 13:56:49
	13  2017-12-23 22:48:00  2018-03-25 13:56:49
	14  2017-12-23 22:48:00  2018-03-25 13:56:49
	15  2017-12-29 23:24:13  2018-03-25 13:21:48
	16  2018-01-03 16:16:21  2018-03-25 13:21:48
	17  2018-01-03 16:16:21  2018-03-25 13:21:48
	18  2018-01-03 16:16:21  2018-03-25 13:43:48
Wrong output for base solution in instance db2csv/dog_kennels/0024_dev (4180)
	EXPECTED OUTPUT ====

	   owner_id  zip_code
	0         3      2647
	ACTUAL OUTPUT ====

		SELECT T1.owner_id,
		       T1.zip_code
		FROM Owners AS T1
		JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
		JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id
		GROUP BY T1.owner_id
		ORDER BY sum(T3.cost_of_treatment) DESC
		LIMIT 1

	   owner_id zip_code
	0         3    02647
Wrong output for ground truth in instance db2csv/dog_kennels/0024_dev (4180)
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0017_dev (4181)
	EXPECTED OUTPUT ====

		SELECT T1.breed_name
		FROM Breeds AS T1
		JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code
		GROUP BY T1.breed_name
		ORDER BY count(*) DESC
		LIMIT 1

	  breed_name
	0      Husky
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT breed_name
		FROM
		  (SELECT LHS.breed_name AS breed_name,
		          LHS.n AS n,
		          RHS.breed_name AS breed_name_other,
		          RHS.n AS n_other
		   FROM
		     (SELECT breed_name,
		             COUNT() AS n
		      FROM
		        (SELECT LHS.dog_id AS dog_id,
		                LHS.owner_id AS owner_id,
		                LHS.abandoned_yn AS abandoned_yn,
		                LHS.breed_code AS breed_code,
		                LHS.size_code AS size_code,
		                LHS.name AS name,
		                LHS.age AS age,
		                LHS.date_of_birth AS date_of_birth,
		                LHS.gender AS gender,
		                LHS.weight AS weight,
		                LHS.date_arrived AS date_arrived,
		                LHS.date_adopted AS date_adopted,
		                LHS.date_departed AS date_departed,
		                RHS.breed_name AS breed_name
		         FROM dogs AS LHS
		         INNER JOIN breeds AS RHS ON (LHS.breed_code = RHS.breed_code))
		      GROUP BY breed_name) AS LHS
		   CROSS JOIN
		     (SELECT breed_name,
		             COUNT() AS n
		      FROM
		        (SELECT LHS.dog_id AS dog_id,
		                LHS.owner_id AS owner_id,
		                LHS.abandoned_yn AS abandoned_yn,
		                LHS.breed_code AS breed_code,
		                LHS.size_code AS size_code,
		                LHS.name AS name,
		                LHS.age AS age,
		                LHS.date_of_birth AS date_of_birth,
		                LHS.gender AS gender,
		                LHS.weight AS weight,
		                LHS.date_arrived AS date_arrived,
		                LHS.date_adopted AS date_adopted,
		                LHS.date_departed AS date_departed,
		                RHS.breed_name AS breed_name
		         FROM dogs AS LHS
		         INNER JOIN breeds AS RHS ON (LHS.breed_code = RHS.breed_code))
		      GROUP BY breed_name) AS RHS)
		WHERE (n > n_other)
		ORDER BY breed_name

	    breed_name
	0       Eskimo
	1  EskimohU5QT
	2        Husky
Error while executing solution for instance db2csv/dog_kennels/0062_dev (4182)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT dog_id) OVER () AS count___
FROM
  (SELECT *
   FROM dogs AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM treatments AS RHS
        WHERE (LHS.dog_id = RHS.dog_id) ))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance db2csv/dog_kennels/0077_dev (4183)
No solution for instance db2csv/dog_kennels/0009_dev (4190)
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0065_dev (4192)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Professionals
		WHERE professional_id NOT IN
		    (SELECT professional_id
		     FROM Treatments)

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT *
		   FROM professionals AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM treatments AS RHS
		        WHERE (LHS.professional_id = RHS.professional_id) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance db2csv/dog_kennels/0055_dev (4193)
No solution for instance db2csv/dog_kennels/0057_dev (4195)
No solution for instance db2csv/dog_kennels/0008_dev (4197)
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0041_dev (4198)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.date_arrived,
		                T1.date_departed
		FROM Dogs AS T1
		JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id

	           date_arrived        date_departed
	0   2017-10-09 20:04:40  2018-03-25 13:21:48
	1   2017-10-09 20:04:40  2018-03-25 13:32:56
	2   2017-10-09 20:04:40  2018-03-25 13:43:48
	3   2017-10-09 20:04:40  2018-03-25 15:05:16
	4   2017-12-21 10:09:21  2018-03-25 13:21:48
	5   2017-12-21 10:09:21  2018-03-25 13:43:48
	6   2017-12-21 10:09:21  2018-03-25 13:56:49
	7   2017-12-21 10:09:21  2018-03-25 15:05:16
	8   2017-12-23 22:48:00  2018-03-25 13:21:48
	9   2017-12-23 22:48:00  2018-03-25 13:56:49
	10  2017-12-29 23:24:13  2018-03-25 13:21:48
	11  2018-01-03 16:16:21  2018-03-25 13:21:48
	12  2018-01-03 16:16:21  2018-03-25 13:43:48
	ACTUAL OUTPUT ====

		
		SELECT date_arrived,
		       date_departed
		FROM
		  (SELECT *
		   FROM dogs AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM treatments AS RHS
		        WHERE (LHS.dog_id = RHS.dog_id) ))
		ORDER BY date_arrived

	           date_arrived        date_departed
	0   2017-10-09 20:04:40  2018-03-25 13:21:48
	1   2017-10-09 20:04:40  2018-03-25 13:32:56
	2   2017-10-09 20:04:40  2018-03-25 13:43:48
	3   2017-10-09 20:04:40  2018-03-25 13:43:48
	4   2017-10-09 20:04:40  2018-03-25 15:05:16
	5   2017-12-21 10:09:21  2018-03-25 13:21:48
	6   2017-12-21 10:09:21  2018-03-25 13:43:48
	7   2017-12-21 10:09:21  2018-03-25 13:56:49
	8   2017-12-21 10:09:21  2018-03-25 13:56:49
	9   2017-12-21 10:09:21  2018-03-25 13:56:49
	10  2017-12-21 10:09:21  2018-03-25 15:05:16
	11  2017-12-23 22:48:00  2018-03-25 13:21:48
	12  2017-12-23 22:48:00  2018-03-25 13:56:49
	13  2017-12-23 22:48:00  2018-03-25 13:56:49
	14  2017-12-23 22:48:00  2018-03-25 13:56:49
	15  2017-12-29 23:24:13  2018-03-25 13:21:48
	16  2018-01-03 16:16:21  2018-03-25 13:21:48
	17  2018-01-03 16:16:21  2018-03-25 13:21:48
	18  2018-01-03 16:16:21  2018-03-25 13:43:48
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0019_dev (4199)
	EXPECTED OUTPUT ====

		SELECT T1.owner_id,
		       T1.last_name
		FROM Owners AS T1
		JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
		JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id
		GROUP BY T1.owner_id
		ORDER BY count(*) DESC
		LIMIT 1

	   owner_id   last_name
	0        10  2Y4FeilM6M
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT owner_id,
		                last_name
		FROM
		  (SELECT LHS.treatment_id AS treatment_id,
		          LHS.dog_id AS dog_id,
		          LHS.professional_id AS professional_id,
		          LHS.treatment_type_code AS treatment_type_code,
		          LHS.date_of_treatment AS date_of_treatment,
		          LHS.cost_of_treatment AS cost_of_treatment,
		          LHS.owner_id AS owner_id,
		          LHS.first_name AS first_name,
		          LHS.last_name AS last_name,
		          LHS.street AS street,
		          LHS.city AS city,
		          LHS.state AS state,
		          LHS.zip_code AS zip_code,
		          LHS.email_address AS email_address,
		          LHS.home_phone AS home_phone,
		          LHS.cell_number AS cell_number,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.treatment_id AS treatment_id,
		             LHS.dog_id AS dog_id,
		             LHS.professional_id AS professional_id,
		             LHS.treatment_type_code AS treatment_type_code,
		             LHS.date_of_treatment AS date_of_treatment,
		             LHS.cost_of_treatment AS cost_of_treatment,
		             LHS.owner_id AS owner_id,
		             LHS.first_name AS first_name,
		             LHS.last_name AS last_name,
		             LHS.street AS street,
		             LHS.city AS city,
		             LHS.state AS state,
		             LHS.zip_code AS zip_code,
		             LHS.email_address AS email_address,
		             LHS.home_phone AS home_phone,
		             LHS.cell_number AS cell_number,
		             RHS.n AS n
		      FROM
		        (SELECT LHS.treatment_id AS treatment_id,
		                LHS.dog_id AS dog_id,
		                LHS.professional_id AS professional_id,
		                LHS.treatment_type_code AS treatment_type_code,
		                LHS.date_of_treatment AS date_of_treatment,
		                LHS.cost_of_treatment AS cost_of_treatment,
		                RHS.owner_id AS owner_id,
		                RHS.first_name AS first_name,
		                RHS.last_name AS last_name,
		                RHS.street AS street,
		                RHS.city AS city,
		                RHS.state AS state,
		                RHS.zip_code AS zip_code,
		                RHS.email_address AS email_address,
		                RHS.home_phone AS home_phone,
		                RHS.cell_number AS cell_number
		         FROM treatments AS LHS
		         CROSS JOIN owners AS RHS) AS LHS
		      INNER JOIN
		        (SELECT owner_id,
		                COUNT() AS n
		         FROM dogs
		         GROUP BY owner_id) AS RHS ON (LHS.owner_id = RHS.owner_id)) AS LHS
		   INNER JOIN
		     (SELECT owner_id,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT owner_id,
		                COUNT() AS n
		         FROM dogs
		         GROUP BY owner_id)) AS RHS ON (LHS.owner_id = RHS.owner_id
		                                        AND LHS.n = RHS.n))
		ORDER BY owner_id

	   owner_id    last_name
	0         7         Feil
	1        14  Stoltenberg
Error while executing solution for instance db2csv/dog_kennels/0052_dev (4202)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT professional_id) OVER () AS count_distinct_professional_id_
FROM treatments
ORDER BY count_distinct_professional_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for base solution in instance db2csv/dog_kennels/0071_dev (4205)
	EXPECTED OUTPUT ====

	   max_age_
	0         9
	ACTUAL OUTPUT ====

		SELECT max(age)
		FROM Dogs

	  max(age)
	0        9
Wrong output for ground truth in instance db2csv/dog_kennels/0071_dev (4205)
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0069_dev (4206)
	EXPECTED OUTPUT ====

		SELECT avg(age)
		FROM Dogs

	   avg(age)
	0  2.943396
	ACTUAL OUTPUT ====

		
		SELECT meanage AS avg_age_
		FROM
		  (SELECT AVG(age) AS meanage
		   FROM
		     (SELECT age,
		             date_adopted,
		             AVG(age) AS meanage
		      FROM dogs
		      GROUP BY age,
		               date_adopted))
		ORDER BY avg_age_

	   avg_age_
	0  2.882353
Wrong output for base solution in instance db2csv/dog_kennels/0068_dev (4208)
	EXPECTED OUTPUT ====

	         name  age  weight
	0  Evangeline    1    4.01
	1       Lyric    4    4.36
	2       Kacey    6    7.57
	ACTUAL OUTPUT ====

		SELECT name,
		       age,
		       weight
		FROM Dogs
		WHERE abandoned_yn = 1

	         name age weight
	0  Evangeline   1   4.01
	1       Lyric   4   4.36
	2       Kacey   6   7.57
Wrong output for ground truth in instance db2csv/dog_kennels/0068_dev (4208)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_1897.sqlite3'
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0059_dev (4212)
	EXPECTED OUTPUT ====

		SELECT cost_of_treatment
		FROM Treatments
		ORDER BY date_of_treatment DESC
		LIMIT 1

	   cost_of_treatment
	0             428.01
	ACTUAL OUTPUT ====

		
		SELECT cost_of_treatment
		FROM
		  (SELECT treatment_id,
		          dog_id,
		          professional_id,
		          treatment_type_code,
		          date_of_treatment,
		          cost_of_treatment,
		          MAX(date_of_treatment) OVER () AS maxdate_of_treatment
		   FROM treatments)
		WHERE (maxdate_of_treatment <= date_of_treatment)
		ORDER BY cost_of_treatment

	   cost_of_treatment
	0       4.280100e+02
	1       3.452067e+14
Error while executing solution for instance db2csv/dog_kennels/0051_dev (4213)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT professional_id) OVER () AS count_distinct_professional_id_
FROM treatments
ORDER BY count_distinct_professional_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0022_dev (4214)
	EXPECTED OUTPUT ====

		SELECT T1.treatment_type_description
		FROM Treatment_types AS T1
		JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code
		GROUP BY T1.treatment_type_code
		ORDER BY sum(cost_of_treatment) ASC
		LIMIT 1

	  treatment_type_description
	0       g2Ge6Take for a Walk
	ACTUAL OUTPUT ====

		
		SELECT treatment_type_description
		FROM
		  (SELECT LHS.treatment_type_code AS treatment_type_code,
		          LHS.treatment_type_description AS treatment_type_description,
		          LHS.sumcost_of_treatment AS sumcost_of_treatment
		   FROM
		     (SELECT LHS.treatment_type_code AS treatment_type_code,
		             LHS.treatment_type_description AS treatment_type_description,
		             RHS.sumcost_of_treatment AS sumcost_of_treatment
		      FROM treatment_types AS LHS
		      INNER JOIN
		        (SELECT treatment_type_code,
		                SUM(cost_of_treatment) AS sumcost_of_treatment
		         FROM treatments
		         GROUP BY treatment_type_code) AS RHS ON (LHS.treatment_type_code = RHS.treatment_type_code)) AS LHS
		   INNER JOIN
		     (SELECT treatment_type_code,
		             MIN(sumcost_of_treatment) OVER () AS sumcost_of_treatment
		      FROM
		        (SELECT treatment_type_code,
		                SUM(cost_of_treatment) AS sumcost_of_treatment
		         FROM treatments
		         GROUP BY treatment_type_code)) AS RHS ON (LHS.treatment_type_code = RHS.treatment_type_code
		                                                   AND LHS.sumcost_of_treatment = RHS.sumcost_of_treatment))
		ORDER BY treatment_type_description

	  treatment_type_description
	0       0VqKoTake for a Walk
	1                Vaccination
	2       g2Ge6Take for a Walk
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0013_dev (4216)
	EXPECTED OUTPUT ====

		SELECT T1.owner_id,
		       T2.first_name,
		       T2.last_name
		FROM Dogs AS T1
		JOIN Owners AS T2 ON T1.owner_id = T2.owner_id
		GROUP BY T1.owner_id
		ORDER BY count(*) DESC
		LIMIT 1

	   owner_id first_name    last_name
	0        14      Loren  Stoltenberg
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT owner_id,
		                first_name,
		                last_name
		FROM
		  (SELECT LHS.owner_id AS owner_id,
		          LHS.first_name AS first_name,
		          LHS.last_name AS last_name,
		          LHS.street AS street,
		          LHS.city AS city,
		          LHS.state AS state,
		          LHS.zip_code AS zip_code,
		          LHS.email_address AS email_address,
		          LHS.home_phone AS home_phone,
		          LHS.cell_number AS cell_number,
		          LHS.dog_id AS dog_id,
		          LHS.abandoned_yn AS abandoned_yn,
		          LHS.breed_code AS breed_code,
		          LHS.size_code AS size_code,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.date_of_birth AS date_of_birth,
		          LHS.gender AS gender,
		          LHS.weight AS weight,
		          LHS.date_arrived AS date_arrived,
		          LHS.date_adopted AS date_adopted,
		          LHS.date_departed AS date_departed,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.owner_id AS owner_id,
		             LHS.first_name AS first_name,
		             LHS.last_name AS last_name,
		             LHS.street AS street,
		             LHS.city AS city,
		             LHS.state AS state,
		             LHS.zip_code AS zip_code,
		             LHS.email_address AS email_address,
		             LHS.home_phone AS home_phone,
		             LHS.cell_number AS cell_number,
		             LHS.dog_id AS dog_id,
		             LHS.abandoned_yn AS abandoned_yn,
		             LHS.breed_code AS breed_code,
		             LHS.size_code AS size_code,
		             LHS.name AS name,
		             LHS.age AS age,
		             LHS.date_of_birth AS date_of_birth,
		             LHS.gender AS gender,
		             LHS.weight AS weight,
		             LHS.date_arrived AS date_arrived,
		             LHS.date_adopted AS date_adopted,
		             LHS.date_departed AS date_departed,
		             RHS.n AS n
		      FROM
		        (SELECT LHS.owner_id AS owner_id,
		                LHS.first_name AS first_name,
		                LHS.last_name AS last_name,
		                LHS.street AS street,
		                LHS.city AS city,
		                LHS.state AS state,
		                LHS.zip_code AS zip_code,
		                LHS.email_address AS email_address,
		                LHS.home_phone AS home_phone,
		                LHS.cell_number AS cell_number,
		                RHS.dog_id AS dog_id,
		                RHS.abandoned_yn AS abandoned_yn,
		                RHS.breed_code AS breed_code,
		                RHS.size_code AS size_code,
		                RHS.name AS name,
		                RHS.age AS age,
		                RHS.date_of_birth AS date_of_birth,
		                RHS.gender AS gender,
		                RHS.weight AS weight,
		                RHS.date_arrived AS date_arrived,
		                RHS.date_adopted AS date_adopted,
		                RHS.date_departed AS date_departed
		         FROM owners AS LHS
		         INNER JOIN dogs AS RHS ON (LHS.owner_id = RHS.owner_id)) AS LHS
		      INNER JOIN
		        (SELECT owner_id,
		                COUNT() AS n
		         FROM dogs
		         GROUP BY owner_id) AS RHS ON (LHS.owner_id = RHS.owner_id)) AS LHS
		   INNER JOIN
		     (SELECT owner_id,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT owner_id,
		                COUNT() AS n
		         FROM dogs
		         GROUP BY owner_id)) AS RHS ON (LHS.owner_id = RHS.owner_id
		                                        AND LHS.n = RHS.n))
		ORDER BY owner_id

	   owner_id first_name    last_name
	0         7     Adelle         Feil
	1        14      Loren  Stoltenberg
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0014_dev (4217)
	EXPECTED OUTPUT ====

		SELECT T1.owner_id,
		       T2.first_name,
		       T2.last_name
		FROM Dogs AS T1
		JOIN Owners AS T2 ON T1.owner_id = T2.owner_id
		GROUP BY T1.owner_id
		ORDER BY count(*) DESC
		LIMIT 1

	   owner_id first_name    last_name
	0        14      Loren  Stoltenberg
	ACTUAL OUTPUT ====

		
		SELECT owner_id,
		       first_name,
		       last_name
		FROM
		  (SELECT LHS.owner_id AS owner_id,
		          LHS.first_name AS first_name,
		          LHS.last_name AS last_name,
		          LHS.street AS street,
		          LHS.city AS city,
		          LHS.state AS state,
		          LHS.zip_code AS zip_code,
		          LHS.email_address AS email_address,
		          LHS.home_phone AS home_phone,
		          LHS.cell_number AS cell_number,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.owner_id AS owner_id,
		             LHS.first_name AS first_name,
		             LHS.last_name AS last_name,
		             LHS.street AS street,
		             LHS.city AS city,
		             LHS.state AS state,
		             LHS.zip_code AS zip_code,
		             LHS.email_address AS email_address,
		             LHS.home_phone AS home_phone,
		             LHS.cell_number AS cell_number,
		             RHS.n AS n
		      FROM owners AS LHS
		      INNER JOIN
		        (SELECT owner_id,
		                COUNT() AS n
		         FROM dogs
		         GROUP BY owner_id) AS RHS ON (LHS.owner_id = RHS.owner_id)) AS LHS
		   INNER JOIN
		     (SELECT owner_id,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT owner_id,
		                COUNT() AS n
		         FROM dogs
		         GROUP BY owner_id)) AS RHS ON (LHS.owner_id = RHS.owner_id
		                                        AND LHS.n = RHS.n))
		ORDER BY owner_id

	   owner_id first_name    last_name
	0         7     Adelle         Feil
	1        14      Loren  Stoltenberg
Wrong output for base solution in instance db2csv/dog_kennels/0072_dev (4219)
	EXPECTED OUTPUT ====

	   max_age_
	0         9
	ACTUAL OUTPUT ====

		SELECT max(age)
		FROM Dogs

	  max(age)
	0        9
Wrong output for ground truth in instance db2csv/dog_kennels/0072_dev (4219)
No solution for instance db2csv/dog_kennels/0007_dev (4220)
No solution for instance db2csv/dog_kennels/0010_dev (4222)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_1897.sqlite3'
Wrong output for base solution in instance db2csv/dog_kennels/0067_dev (4224)
	EXPECTED OUTPUT ====

	         name  age  weight
	0  Evangeline    1    4.01
	1       Lyric    4    4.36
	2       Kacey    6    7.57
	ACTUAL OUTPUT ====

		SELECT name,
		       age,
		       weight
		FROM Dogs
		WHERE abandoned_yn = 1

	         name age weight
	0  Evangeline   1   4.01
	1       Lyric   4   4.36
	2       Kacey   6   7.57
Wrong output for ground truth in instance db2csv/dog_kennels/0067_dev (4224)
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0082_dev (4225)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.first_name,
		                T3.treatment_type_description
		FROM professionals AS T1
		JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id
		JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code

	     first_name treatment_type_description
	0          Dann            Take for a Walk
	1         Danny             Take for a Wal
	2         Danny            Take for a Walk
	3         Danny                Vaccination
	4         Danny             ake for a Walk
	5         Danny       rRazmTake for a Walk
	6    Danny5q7w1                Vaccination
	7         Erick       rRazmTake for a Walk
	8   HQMDannyJUD            Take for a Walk
	9    ZXzF2Danny            Take for a Walk
	10         anny            Take for a Walk
	11         anny                Vaccination
	ACTUAL OUTPUT ====

		
		SELECT first_name,
		       treatment_type_description
		FROM
		  (SELECT *
		   FROM
		     (SELECT LHS.professional_id AS professional_id,
		             LHS.role_code AS role_code,
		             LHS.first_name AS first_name,
		             LHS.street AS street,
		             LHS.city AS city,
		             LHS.state AS state,
		             LHS.zip_code AS zip_code,
		             LHS.last_name AS last_name,
		             LHS.email_address AS email_address,
		             LHS.home_phone AS home_phone,
		             LHS.cell_number AS cell_number,
		             RHS.treatment_type_code AS treatment_type_code,
		             RHS.treatment_type_description AS treatment_type_description
		      FROM professionals AS LHS
		      CROSS JOIN treatment_types AS RHS) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM treatments AS RHS
		        WHERE (LHS.professional_id = RHS.professional_id
		               AND LHS.treatment_type_code = RHS.treatment_type_code) ))
		ORDER BY first_name

	     first_name treatment_type_description
	0          Dann            Take for a Walk
	1         Danny             Take for a Wal
	2         Danny             Take for a Wal
	3         Danny             Take for a Wal
	4         Danny            Take for a Walk
	5         Danny            Take for a Walk
	6         Danny                Vaccination
	7         Danny             ake for a Walk
	8         Danny       rRazmTake for a Walk
	9    Danny5q7w1                Vaccination
	10        Erick       rRazmTake for a Walk
	11  HQMDannyJUD            Take for a Walk
	12   ZXzF2Danny            Take for a Walk
	13         anny            Take for a Walk
	14         anny                Vaccination
No solution for instance db2csv/dog_kennels/0056_dev (4226)
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0020_dev (4227)
	EXPECTED OUTPUT ====

		SELECT T1.owner_id,
		       T1.last_name
		FROM Owners AS T1
		JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
		JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id
		GROUP BY T1.owner_id
		ORDER BY count(*) DESC
		LIMIT 1

	   owner_id   last_name
	0        10  2Y4FeilM6M
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT owner_id,
		                last_name
		FROM
		  (SELECT LHS.treatment_id AS treatment_id,
		          LHS.dog_id AS dog_id,
		          LHS.professional_id AS professional_id,
		          LHS.treatment_type_code AS treatment_type_code,
		          LHS.date_of_treatment AS date_of_treatment,
		          LHS.cost_of_treatment AS cost_of_treatment,
		          LHS.owner_id AS owner_id,
		          LHS.first_name AS first_name,
		          LHS.last_name AS last_name,
		          LHS.street AS street,
		          LHS.city AS city,
		          LHS.state AS state,
		          LHS.zip_code AS zip_code,
		          LHS.email_address AS email_address,
		          LHS.home_phone AS home_phone,
		          LHS.cell_number AS cell_number,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.treatment_id AS treatment_id,
		             LHS.dog_id AS dog_id,
		             LHS.professional_id AS professional_id,
		             LHS.treatment_type_code AS treatment_type_code,
		             LHS.date_of_treatment AS date_of_treatment,
		             LHS.cost_of_treatment AS cost_of_treatment,
		             LHS.owner_id AS owner_id,
		             LHS.first_name AS first_name,
		             LHS.last_name AS last_name,
		             LHS.street AS street,
		             LHS.city AS city,
		             LHS.state AS state,
		             LHS.zip_code AS zip_code,
		             LHS.email_address AS email_address,
		             LHS.home_phone AS home_phone,
		             LHS.cell_number AS cell_number,
		             RHS.n AS n
		      FROM
		        (SELECT LHS.treatment_id AS treatment_id,
		                LHS.dog_id AS dog_id,
		                LHS.professional_id AS professional_id,
		                LHS.treatment_type_code AS treatment_type_code,
		                LHS.date_of_treatment AS date_of_treatment,
		                LHS.cost_of_treatment AS cost_of_treatment,
		                RHS.owner_id AS owner_id,
		                RHS.first_name AS first_name,
		                RHS.last_name AS last_name,
		                RHS.street AS street,
		                RHS.city AS city,
		                RHS.state AS state,
		                RHS.zip_code AS zip_code,
		                RHS.email_address AS email_address,
		                RHS.home_phone AS home_phone,
		                RHS.cell_number AS cell_number
		         FROM treatments AS LHS
		         CROSS JOIN owners AS RHS) AS LHS
		      INNER JOIN
		        (SELECT owner_id,
		                COUNT() AS n
		         FROM dogs
		         GROUP BY owner_id) AS RHS ON (LHS.owner_id = RHS.owner_id)) AS LHS
		   INNER JOIN
		     (SELECT MAX(n) AS n
		      FROM
		        (SELECT owner_id,
		                COUNT() AS n
		         FROM dogs
		         GROUP BY owner_id)) AS RHS ON (LHS.n = RHS.n))
		ORDER BY owner_id

	   owner_id    last_name
	0         7         Feil
	1        14  Stoltenberg
Wrong output for fuzzied solution in instance db2csv/dog_kennels/0070_dev (4230)
	EXPECTED OUTPUT ====

		SELECT avg(age)
		FROM Dogs

	   avg(age)
	0  2.943396
	ACTUAL OUTPUT ====

		
		SELECT meanage AS avg_age_
		FROM
		  (SELECT AVG(age) AS meanage
		   FROM
		     (SELECT age,
		             name,
		             AVG(age) AS meanage
		      FROM dogs
		      GROUP BY age,
		               name))
		ORDER BY avg_age_

	   avg_age_
	0  2.961538
Wrong output for base solution in instance db2csv/dog_kennels/0023_dev (4231)
	EXPECTED OUTPUT ====

	   owner_id  zip_code
	0         3      2647
	ACTUAL OUTPUT ====

		SELECT T1.owner_id,
		       T1.zip_code
		FROM Owners AS T1
		JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
		JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id
		GROUP BY T1.owner_id
		ORDER BY sum(T3.cost_of_treatment) DESC
		LIMIT 1

	   owner_id zip_code
	0         3    02647
Wrong output for ground truth in instance db2csv/dog_kennels/0023_dev (4231)
Error while executing solution for instance db2csv/dog_kennels/0050_dev (4232)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT dog_id) OVER () AS count_distinct_dog_id_
FROM treatments
ORDER BY count_distinct_dog_id_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0021_dev (4236)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM employee AS t1
		JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID
		ORDER BY t2.bonus DESC
		LIMIT 1

	       name
	0  im Payne
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.employee_id AS employee_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.city AS city,
		          LHS.year_awarded AS year_awarded,
		          LHS.bonus AS bonus
		   FROM
		     (SELECT LHS.employee_id AS employee_id,
		             LHS.name AS name,
		             LHS.age AS age,
		             LHS.city AS city,
		             RHS.year_awarded AS year_awarded,
		             RHS.bonus AS bonus
		      FROM employee AS LHS
		      INNER JOIN evaluation AS RHS ON (LHS.employee_id = RHS.employee_id)) AS LHS
		   INNER JOIN
		     (SELECT MAX(bonus) AS bonus
		      FROM evaluation) AS RHS ON (LHS.bonus = RHS.bonus))
		ORDER BY name

	              name
	0  Steve Borthwick
	1         im Payne
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_1897.sqlite3'
Wrong output for base solution in instance db2csv/employee_hire_evaluation/0033_dev (4238)
	EXPECTED OUTPUT ====

	   shop_id  employee_id  start_from is_full_time
	0        1            1        2009            T
	1        1            2        2003            T
	2        8            3        2011            F
	3        4            4        2012            T
	4        5            5        2013            T
	5        2            6        2010            F
	6        6            7        2008            T
	ACTUAL OUTPUT ====

		SELECT *
		FROM hiring

	   shop_id  employee_id start_from is_full_time
	0        1            1       2009            T
	1        1            2       2003            T
	2        8            3       2011            F
	3        4            4       2012            T
	4        5            5       2013            T
	5        2            6       2010            F
	6        6            7       2008            T
Wrong output for ground truth in instance db2csv/employee_hire_evaluation/0033_dev (4238)
Error while executing solution for instance db2csv/employee_hire_evaluation/0037_dev (4240)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT LOCATION) OVER () AS count_distinct_location_
FROM shop
ORDER BY count_distinct_location_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0012_dev (4241)
	EXPECTED OUTPUT ====

		SELECT manager_name,
		       district
		FROM shop
		ORDER BY number_products DESC
		LIMIT 1

	           manager_name                district
	0  5bYAntti MuurinenRvH  Tapiolan Urheilupuisto
	ACTUAL OUTPUT ====

		
		SELECT manager_name,
		       district
		FROM
		  (SELECT *
		   FROM
		     (SELECT shop_id,
		             name,
		             LOCATION,
		             district,
		             MAX(number_products) OVER () AS number_products,
		                                       manager_name
		      FROM shop) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM shop AS RHS
		        WHERE (LHS.shop_id = RHS.shop_id
		               AND LHS.name = RHS.name
		               AND LHS.location = RHS.location
		               AND LHS.district = RHS.district
		               AND LHS.number_products = RHS.number_products
		               AND LHS.manager_name = RHS.manager_name) ))
		ORDER BY manager_name

	           manager_name                district
	0          lli Huttunen      2y(nXMagnum Areena
	1  5bYAntti MuurinenRvH  Tapiolan Urheilupuisto
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0038_dev (4242)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT LOCATION)
		FROM shop

	   count(distinct location)
	0                         4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count_distinct_location_
		FROM
		  (SELECT number_products,
		          COUNT(DISTINCT LOCATION) AS n_distinct
		   FROM shop
		   GROUP BY number_products)
		ORDER BY count_distinct_location_

	   count_distinct_location_
	0                         3
No solution for instance db2csv/employee_hire_evaluation/0036_dev (4243)
Wrong output for base solution in instance db2csv/employee_hire_evaluation/0034_dev (4246)
	EXPECTED OUTPUT ====

	   shop_id  employee_id  start_from is_full_time
	0        1            1        2009            T
	1        1            2        2003            T
	2        8            3        2011            F
	3        4            4        2012            T
	4        5            5        2013            T
	5        2            6        2010            F
	6        6            7        2008            T
	ACTUAL OUTPUT ====

		SELECT *
		FROM hiring

	   shop_id  employee_id start_from is_full_time
	0        1            1       2009            T
	1        1            2       2003            T
	2        8            3       2011            F
	3        4            4       2012            T
	4        5            5       2013            T
	5        2            6       2010            F
	6        6            7       2008            T
Wrong output for ground truth in instance db2csv/employee_hire_evaluation/0034_dev (4246)
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0011_dev (4247)
	EXPECTED OUTPUT ====

		SELECT manager_name,
		       district
		FROM shop
		ORDER BY number_products DESC
		LIMIT 1

	           manager_name                district
	0  5bYAntti MuurinenRvH  Tapiolan Urheilupuisto
	ACTUAL OUTPUT ====

		
		SELECT manager_name,
		       district
		FROM
		  (SELECT *
		   FROM
		     (SELECT shop_id,
		             name,
		             LOCATION,
		             district,
		             MAX(number_products) OVER () AS number_products,
		                                       manager_name
		      FROM shop) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM shop AS RHS
		        WHERE (LHS.shop_id = RHS.shop_id
		               AND LHS.name = RHS.name
		               AND LHS.location = RHS.location
		               AND LHS.district = RHS.district
		               AND LHS.number_products = RHS.number_products
		               AND LHS.manager_name = RHS.manager_name) ))
		ORDER BY manager_name

	           manager_name                district
	0          lli Huttunen      2y(nXMagnum Areena
	1  5bYAntti MuurinenRvH  Tapiolan Urheilupuisto
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_1897.sqlite3'
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0026_dev (4250)
	EXPECTED OUTPUT ====

		SELECT t2.name
		FROM hiring AS t1
		JOIN shop AS t2 ON t1.shop_id = t2.shop_id
		GROUP BY t1.shop_id
		ORDER BY count(*) DESC
		LIMIT 1

	                 name
	0  aB1B4IFK Mariehamn
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.shop_id AS shop_id,
		          LHS.employee_id AS employee_id,
		          LHS.start_from AS start_from,
		          LHS.is_full_time AS is_full_time,
		          LHS.name AS name,
		          LHS.location AS LOCATION,
		          LHS.district AS district,
		          LHS.number_products AS number_products,
		          LHS.manager_name AS manager_name,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.shop_id AS shop_id,
		             LHS.employee_id AS employee_id,
		             LHS.start_from AS start_from,
		             LHS.is_full_time AS is_full_time,
		             LHS.name AS name,
		             LHS.location AS LOCATION,
		             LHS.district AS district,
		             LHS.number_products AS number_products,
		             LHS.manager_name AS manager_name,
		             RHS.n AS n
		      FROM
		        (SELECT LHS.shop_id AS shop_id,
		                LHS.employee_id AS employee_id,
		                LHS.start_from AS start_from,
		                LHS.is_full_time AS is_full_time,
		                RHS.name AS name,
		                RHS.location AS LOCATION,
		                RHS.district AS district,
		                RHS.number_products AS number_products,
		                RHS.manager_name AS manager_name
		         FROM hiring AS LHS
		         INNER JOIN shop AS RHS ON (LHS.shop_id = RHS.shop_id)) AS LHS
		      INNER JOIN
		        (SELECT shop_id,
		                COUNT() AS n
		         FROM hiring
		         GROUP BY shop_id) AS RHS ON (LHS.shop_id = RHS.shop_id)) AS LHS
		   INNER JOIN
		     (SELECT shop_id,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT shop_id,
		                COUNT() AS n
		         FROM hiring
		         GROUP BY shop_id)) AS RHS ON (LHS.shop_id = RHS.shop_id
		                                       AND LHS.n = RHS.n))
		ORDER BY name

	                 name
	0            FC Lahti
	1  aB1B4IFK Mariehamn
	2            fJa80yoT
No solution for instance db2csv/employee_hire_evaluation/0035_dev (4251)
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0008_dev (4255)
	EXPECTED OUTPUT ====

		SELECT city
		FROM employee
		WHERE age < 30
		GROUP BY city
		HAVING count(*) > 1

	Empty DataFrame
	Columns: [city]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT city
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT city,
		                COUNT(DISTINCT age) AS n_distinct
		         FROM
		           (SELECT *
		            FROM employee
		            WHERE (age != 1
		                   OR age > 30))
		         GROUP BY city)
		      ORDER BY city)
		   LIMIT 1)

	      city
	0  Bristol
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0019_dev (4256)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM employee AS t1
		JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID
		GROUP BY t2.Employee_ID
		ORDER BY count(*) DESC
		LIMIT 1

	       name
	0  im Payne
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.employee_id AS employee_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.city AS city,
		          LHS.year_awarded AS year_awarded,
		          LHS.bonus AS bonus,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.employee_id AS employee_id,
		             LHS.name AS name,
		             LHS.age AS age,
		             LHS.city AS city,
		             LHS.year_awarded AS year_awarded,
		             LHS.bonus AS bonus,
		             RHS.n AS n
		      FROM
		        (SELECT LHS.employee_id AS employee_id,
		                LHS.name AS name,
		                LHS.age AS age,
		                LHS.city AS city,
		                RHS.year_awarded AS year_awarded,
		                RHS.bonus AS bonus
		         FROM employee AS LHS
		         INNER JOIN evaluation AS RHS ON (LHS.employee_id = RHS.employee_id)) AS LHS
		      INNER JOIN
		        (SELECT employee_id,
		                COUNT() AS n
		         FROM evaluation
		         GROUP BY employee_id) AS RHS ON (LHS.employee_id = RHS.employee_id)) AS LHS
		   INNER JOIN
		     (SELECT employee_id,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT employee_id,
		                COUNT() AS n
		         FROM evaluation
		         GROUP BY employee_id)) AS RHS ON (LHS.employee_id = RHS.employee_id
		                                           AND LHS.n = RHS.n))
		ORDER BY name

	       name
	0  Tim Payn
	1  im Payne
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0022_dev (4261)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM employee AS t1
		JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID
		ORDER BY t2.bonus DESC
		LIMIT 1

	       name
	0  im Payne
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.employee_id AS employee_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.city AS city,
		          LHS.year_awarded AS year_awarded,
		          LHS.bonus AS bonus
		   FROM
		     (SELECT LHS.employee_id AS employee_id,
		             LHS.name AS name,
		             LHS.age AS age,
		             LHS.city AS city,
		             RHS.year_awarded AS year_awarded,
		             RHS.bonus AS bonus
		      FROM employee AS LHS
		      INNER JOIN evaluation AS RHS ON (LHS.employee_id = RHS.employee_id)) AS LHS
		   INNER JOIN
		     (SELECT employee_id,
		             year_awarded,
		             MAX(bonus) OVER () AS bonus
		      FROM evaluation) AS RHS ON (LHS.employee_id = RHS.employee_id
		                                     AND LHS.year_awarded = RHS.year_awarded
		                                     AND LHS.bonus = RHS.bonus))
		ORDER BY name

	              name
	0  Steve Borthwick
	1         im Payne
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0007_dev (4265)
	EXPECTED OUTPUT ====

		SELECT city
		FROM employee
		WHERE age < 30
		GROUP BY city
		HAVING count(*) > 1

	Empty DataFrame
	Columns: [city]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT city
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT city,
		                COUNT(DISTINCT age) AS n_distinct
		         FROM
		           (SELECT *
		            FROM employee
		            WHERE (age > 1
		                   AND age < 30))
		         GROUP BY city)
		      ORDER BY n_distinct)
		   LIMIT 1)

	           city
	0  BristolX1ZRi
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0020_dev (4268)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM employee AS t1
		JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID
		GROUP BY t2.Employee_ID
		ORDER BY count(*) DESC
		LIMIT 1

	       name
	0  im Payne
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.employee_id AS employee_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.city AS city,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.employee_id AS employee_id,
		             LHS.name AS name,
		             LHS.age AS age,
		             LHS.city AS city,
		             RHS.n AS n
		      FROM employee AS LHS
		      INNER JOIN
		        (SELECT employee_id,
		                COUNT() AS n
		         FROM evaluation
		         GROUP BY employee_id) AS RHS ON (LHS.employee_id = RHS.employee_id)) AS LHS
		   INNER JOIN
		     (SELECT employee_id,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT employee_id,
		                COUNT() AS n
		         FROM evaluation
		         GROUP BY employee_id)) AS RHS ON (LHS.employee_id = RHS.employee_id
		                                           AND LHS.n = RHS.n))
		ORDER BY name

	       name
	0  Tim Payn
	1  im Payne
Wrong output for fuzzied solution in instance db2csv/employee_hire_evaluation/0025_dev (4269)
	EXPECTED OUTPUT ====

		SELECT t2.name
		FROM hiring AS t1
		JOIN shop AS t2 ON t1.shop_id = t2.shop_id
		GROUP BY t1.shop_id
		ORDER BY count(*) DESC
		LIMIT 1

	                 name
	0  aB1B4IFK Mariehamn
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.shop_id AS shop_id,
		          LHS.name AS name,
		          LHS.location AS LOCATION,
		          LHS.district AS district,
		          LHS.number_products AS number_products,
		          LHS.manager_name AS manager_name,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.shop_id AS shop_id,
		             LHS.name AS name,
		             LHS.location AS LOCATION,
		             LHS.district AS district,
		             LHS.number_products AS number_products,
		             LHS.manager_name AS manager_name,
		             RHS.n AS n
		      FROM shop AS LHS
		      INNER JOIN
		        (SELECT shop_id,
		                COUNT() AS n
		         FROM hiring
		         GROUP BY shop_id) AS RHS ON (LHS.shop_id = RHS.shop_id)) AS LHS
		   INNER JOIN
		     (SELECT MAX(n) AS n
		      FROM
		        (SELECT shop_id,
		                COUNT() AS n
		         FROM hiring
		         GROUP BY shop_id)) AS RHS ON (LHS.n = RHS.n))
		ORDER BY name

	                 name
	0            FC Lahti
	1            FC Lahti
	2            FC Lahti
	3  aB1B4IFK Mariehamn
	4            fJa80yoT
No solution for instance db2csv/voter_1/0012_dev (4273)
Wrong output for fuzzied solution in instance db2csv/voter_1/0011_dev (4276)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM contestants
		WHERE contestant_number NOT IN
		    (SELECT contestant_number
		     FROM votes)

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT *
		   FROM contestants AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM votes AS RHS
		        WHERE (LHS.contestant_number = RHS.contestant_number) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance db2csv/voter_1/0009_dev (4277)
	EXPECTED OUTPUT ====

		SELECT T1.contestant_number,
		       T1.contestant_name
		FROM contestants AS T1
		JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number
		GROUP BY T1.contestant_number
		ORDER BY count(*) ASC
		LIMIT 1

	   contestant_number     contestant_name
	0                  0  Alana BregmanWS9Ei
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT contestant_number,
		                contestant_name_other AS contestant_name
		FROM
		  (SELECT n AS contestant_number,
		          contestant_name,
		          vote_id,
		          phone_number,
		          state,
		          created,
		          n,
		          minn,
		          contestant_name_other,
		          vote_id_other,
		          phone_number_other,
		          state_other,
		          created_other
		   FROM
		     (SELECT LHS.contestant_number AS contestant_number,
		             LHS.contestant_name AS contestant_name,
		             LHS.vote_id AS vote_id,
		             LHS.phone_number AS phone_number,
		             LHS.state AS state,
		             LHS.created AS created,
		             LHS.n AS n,
		             LHS.minn AS minn,
		             RHS.contestant_name AS contestant_name_other,
		             RHS.vote_id AS vote_id_other,
		             RHS.phone_number AS phone_number_other,
		             RHS.state AS state_other,
		             RHS.created AS created_other
		      FROM
		        (SELECT contestant_number,
		                contestant_name,
		                vote_id,
		                phone_number,
		                state,
		                created,
		                n,
		                MIN(n) OVER () AS minn
		         FROM
		           (SELECT LHS.contestant_number AS contestant_number,
		                   LHS.contestant_name AS contestant_name,
		                   LHS.vote_id AS vote_id,
		                   LHS.phone_number AS phone_number,
		                   LHS.state AS state,
		                   LHS.created AS created,
		                   RHS.n AS n
		            FROM
		              (SELECT LHS.contestant_number AS contestant_number,
		                      LHS.contestant_name AS contestant_name,
		                      RHS.vote_id AS vote_id,
		                      RHS.phone_number AS phone_number,
		                      RHS.state AS state,
		                      RHS.created AS created
		               FROM contestants AS LHS
		               INNER JOIN votes AS RHS ON (LHS.contestant_number = RHS.contestant_number)) AS LHS
		            INNER JOIN
		              (SELECT contestant_number,
		                      COUNT() AS n
		               FROM votes
		               GROUP BY contestant_number) AS RHS ON (LHS.contestant_number = RHS.contestant_number))) AS LHS
		      INNER JOIN
		        (SELECT LHS.contestant_number AS contestant_number,
		                LHS.contestant_name AS contestant_name,
		                LHS.vote_id AS vote_id,
		                LHS.phone_number AS phone_number,
		                LHS.state AS state,
		                LHS.created AS created,
		                RHS.n AS n
		         FROM
		           (SELECT LHS.contestant_number AS contestant_number,
		                   LHS.contestant_name AS contestant_name,
		                   RHS.vote_id AS vote_id,
		                   RHS.phone_number AS phone_number,
		                   RHS.state AS state,
		                   RHS.created AS created
		            FROM contestants AS LHS
		            INNER JOIN votes AS RHS ON (LHS.contestant_number = RHS.contestant_number)) AS LHS
		         INNER JOIN
		           (SELECT contestant_number,
		                   COUNT() AS n
		            FROM votes
		            GROUP BY contestant_number) AS RHS ON (LHS.contestant_number = RHS.contestant_number)) AS RHS ON (LHS.n = RHS.contestant_number
		                                                                                                              AND LHS.minn = RHS.n)))
		ORDER BY contestant_number

	Empty DataFrame
	Columns: [contestant_number, contestant_name]
	Index: []
Wrong output for fuzzied solution in instance db2csv/voter_1/0014_dev (4283)
	EXPECTED OUTPUT ====

		SELECT T3.area_code
		FROM contestants AS T1
		JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number
		JOIN area_code_state AS T3 ON T2.state = T3.state
		WHERE T1.contestant_name = 'Tabatha Gehling' INTERSECT
		  SELECT T3.area_code
		  FROM contestants AS T1
		  JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number
		  JOIN area_code_state AS T3 ON T2.state = T3.state WHERE T1.contestant_name = 'Kelly Clauss'

	Empty DataFrame
	Columns: [area_code]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT `area_code`
		FROM
		  (SELECT `LHS`.`contestant_number` AS `contestant_number`,
		          `LHS`.`contestant_name` AS `contestant_name`,
		          `LHS`.`area_code` AS `area_code`,
		          `LHS`.`state` AS `state`,
		          `RHS`.`vote_id` AS `vote_id`,
		          `RHS`.`phone_number` AS `phone_number`,
		          `RHS`.`created` AS `created`
		   FROM
		     (SELECT `LHS`.`contestant_number` AS `contestant_number`,
		             `LHS`.`contestant_name` AS `contestant_name`,
		             `RHS`.`area_code` AS `area_code`,
		             `RHS`.`state` AS `state`
		      FROM `contestants` AS `LHS`
		      CROSS JOIN `area_code_state` AS `RHS`) AS `LHS`
		   INNER JOIN `votes` AS `RHS` ON (`LHS`.`contestant_number` = `RHS`.`contestant_number`
		                                      AND `LHS`.`state` = `RHS`.`state`))
		WHERE (`contestant_name` = 'Tabatha Gehling'
		       AND `contestant_name` != 'Kelly Clauss')
		ORDER BY area_code

	    area_code
	0         601
	1         604
	2         614
	3  1110900821
Wrong output for fuzzied solution in instance db2csv/voter_1/0007_dev (4284)
	EXPECTED OUTPUT ====

		SELECT DISTINCT state,
		                created
		FROM votes

	       state              created
	0         FL  1822-07-11 20:25:46
	1        NB1  1849-07-08 21:35:08
	2         MT  1885-02-17 14:22:25
	3     MH5kTX  1894-12-24 03:43:48
	4         GA  1996-02-27 13:14:12
	5   Fi0FL4N)  2018-03-09 19:03:21
	6         GA  2018-03-09 19:03:21
	7         MT  2018-03-09 19:03:21
	8         TX  2018-03-09 19:03:21
	9         MT  2018-03-09 19:03:22
	10         T  2018-03-09 19:03:22
	11        FL  2018-03-09 19:03:23
	12  8iWMTGan  2018-03-09 19:03:24
	13        PA  2018-03-09 19:03:24
	14   x3TVePA  2018-03-09 19:03:24
	15        FL  2018-03-09 19:03:26
	16        GA  2018-03-09 19:03:26
	17         T  2018-03-09 19:03:26
	18        FL  2018-03-09 19:03:27
	19  Fi0FL4N)  2018-03-09 19:03:27
	20        ig  2018-03-09 19:03:27
	21        MT  2018-03-09 19:03:28
	22        FL  2018-03-09 19:03:29
	23  Fi0FL4N)  2018-03-09 19:03:29
	24  Fi0FL4N)  2018-03-09 19:03:30
	25        GA  2018-03-09 19:03:30
	26       NB1  2018-03-09 19:03:30
	27         T  2018-03-09 19:03:30
	28        FL  2018-03-09 19:03:31
	29        MT  2018-03-09 19:03:32
	30   x3TVePA  2018-03-09 19:03:33
	31        FL  2018-03-09 19:03:34
	32   x3TVePA  2018-03-09 19:03:35
	33        GA  2018-03-09 19:03:36
	34        MT  2018-03-09 19:03:36
	35        MT  2018-03-09 19:03:37
	36        TX  2018-03-09 19:03:37
	37        ig  2018-03-09 19:03:37
	38        FL  2018-03-09 19:03:38
	39        ig  2018-03-09 19:03:38
	40        MT  2018-03-09 19:03:39
	41        PA  2018-03-09 19:03:39
	42    MH5kTX  2018-03-09 19:03:40
	43        AI  2018-03-09 19:03:40
	44        FL  2018-03-09 19:03:40
	45  Fi0FL4N)  2018-03-09 19:03:40
	46  RxnPAA0g  2018-03-09 19:03:40
	47         T  2018-03-09 19:03:40
	48        FL  2031-01-16 20:06:29
	ACTUAL OUTPUT ====

		
		SELECT state,
		       created
		FROM votes
		ORDER BY state

	       state              created
	0         FL  1822-07-11 20:25:46
	1        NB1  1849-07-08 21:35:08
	2         MT  1885-02-17 14:22:25
	3     MH5kTX  1894-12-24 03:43:48
	4         GA  1996-02-27 13:14:12
	5   Fi0FL4N)  2018-03-09 19:03:21
	6         GA  2018-03-09 19:03:21
	7         GA  2018-03-09 19:03:21
	8         MT  2018-03-09 19:03:21
	9         TX  2018-03-09 19:03:21
	10        MT  2018-03-09 19:03:22
	11         T  2018-03-09 19:03:22
	12        FL  2018-03-09 19:03:23
	13  8iWMTGan  2018-03-09 19:03:24
	14        PA  2018-03-09 19:03:24
	15   x3TVePA  2018-03-09 19:03:24
	16        FL  2018-03-09 19:03:26
	17        GA  2018-03-09 19:03:26
	18         T  2018-03-09 19:03:26
	19        FL  2018-03-09 19:03:27
	20  Fi0FL4N)  2018-03-09 19:03:27
	21        ig  2018-03-09 19:03:27
	22        MT  2018-03-09 19:03:28
	23        FL  2018-03-09 19:03:29
	24  Fi0FL4N)  2018-03-09 19:03:29
	25  Fi0FL4N)  2018-03-09 19:03:30
	26        GA  2018-03-09 19:03:30
	27       NB1  2018-03-09 19:03:30
	28         T  2018-03-09 19:03:30
	29        FL  2018-03-09 19:03:31
	30        MT  2018-03-09 19:03:32
	31   x3TVePA  2018-03-09 19:03:33
	32        FL  2018-03-09 19:03:34
	33   x3TVePA  2018-03-09 19:03:35
	34        GA  2018-03-09 19:03:36
	35        MT  2018-03-09 19:03:36
	36        MT  2018-03-09 19:03:37
	37        MT  2018-03-09 19:03:37
	38        TX  2018-03-09 19:03:37
	39        ig  2018-03-09 19:03:37
	40        FL  2018-03-09 19:03:38
	41        ig  2018-03-09 19:03:38
	42        MT  2018-03-09 19:03:39
	43        MT  2018-03-09 19:03:39
	44        MT  2018-03-09 19:03:39
	45        PA  2018-03-09 19:03:39
	46    MH5kTX  2018-03-09 19:03:40
	47        AI  2018-03-09 19:03:40
	48        FL  2018-03-09 19:03:40
	49  Fi0FL4N)  2018-03-09 19:03:40
	50  RxnPAA0g  2018-03-09 19:03:40
	51         T  2018-03-09 19:03:40
	52        FL  2031-01-16 20:06:29
No solution for instance db2csv/voter_1/0015_dev (4285)
Error while executing solution for instance db2csv/voter_1/0010_dev (4286)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT `n_distinct` AS `count___`
FROM
  (SELECT `vote_id`,
          `phone_number`,
          `state`,
          `contestant_number`,
          `created`,
          COUNT(DISTINCT `state`) OVER () AS `n_distinct`
   FROM `votes`)
WHERE (`state` = 'CA'
       OR `state` = 'NY')
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/voter_1/0005_dev (4287)
	EXPECTED OUTPUT ====

		SELECT max(created)
		FROM votes
		WHERE state = 'CA'

	          max(created)
	0  2018-03-09 19:03:29
	ACTUAL OUTPUT ====

		
		SELECT `created` AS `max_created_`
		FROM
		  (SELECT `created`,
		          `state`,
		          MAX(`created`) AS `maxcreated`
		   FROM `votes`
		   GROUP BY `created`,
		            `state`)
		WHERE (`state` = 'CA'
		       OR maxcreated < created)
		ORDER BY max_created_

	          max_created_
	0  2018-03-09 19:03:24
	1  2018-03-09 19:03:29
Wrong output for fuzzied solution in instance db2csv/poker_player/0021_dev (4289)
	EXPECTED OUTPUT ====

		SELECT T2.Money_Rank
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T1.Height DESC
		LIMIT 1

	     money_rank
	0  3.793369e+09
	ACTUAL OUTPUT ====

		
		SELECT money_rank
		FROM
		  (SELECT LHS.poker_player_id AS poker_player_id,
		          LHS.people_id AS people_id,
		          LHS.final_table_made AS final_table_made,
		          LHS.best_finish AS best_finish,
		          LHS.money_rank AS money_rank,
		          LHS.earnings AS earnings,
		          LHS.nationality AS nationality,
		          LHS.name AS name,
		          LHS.birth_date AS birth_date,
		          LHS.height AS height
		   FROM
		     (SELECT LHS.poker_player_id AS poker_player_id,
		             LHS.people_id AS people_id,
		             LHS.final_table_made AS final_table_made,
		             LHS.best_finish AS best_finish,
		             LHS.money_rank AS money_rank,
		             LHS.earnings AS earnings,
		             RHS.nationality AS nationality,
		             RHS.name AS name,
		             RHS.birth_date AS birth_date,
		             RHS.height AS height
		      FROM poker_player AS LHS
		      INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id)) AS LHS
		   INNER JOIN
		     (SELECT MAX(height) AS height
		      FROM people) AS RHS ON (LHS.height = RHS.height))
		ORDER BY money_rank

	     money_rank
	0  5.802000e+01
	1  3.793369e+09
Wrong output for base solution in instance db2csv/poker_player/0033_dev (4291)
	EXPECTED OUTPUT ====

	                 name birth_date
	0    Semen Poltavskiy 1981-02-08
	1     Teodor Salparov 1982-08-16
	2        Maksim Botin 1983-07-14
	3   Aleksey Ostapenko 1986-05-26
	4  Yevgeni Sivozhelez 1986-08-08
	5      Sergey Grankin 1987-01-22
	6        Roman Bragin 1987-04-17
	ACTUAL OUTPUT ====

		SELECT Name,
		       Birth_Date
		FROM people
		ORDER BY Name ASC

	                 name        birth_date
	0        Roman Bragin    April 17, 1987
	1     Teodor Salparov   August 16, 1982
	2  Yevgeni Sivozhelez    August 8, 1986
	3    Semen Poltavskiy  February 8, 1981
	4      Sergey Grankin  January 22, 1987
	5        Maksim Botin     July 14, 1983
	6   Aleksey Ostapenko      May 26, 1986
Wrong output for ground truth in instance db2csv/poker_player/0033_dev (4291)
Wrong output for base solution in instance db2csv/poker_player/0039_dev (4292)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT Nationality)
		FROM people

	   count(distinct nationality)
	0                            2
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count_distinct_nationality_
		FROM
		  (SELECT birth_date,
		          COUNT(DISTINCT nationality) AS n_distinct
		   FROM
		     (SELECT birth_date,
		             nationality,
		             COUNT() AS n
		      FROM people
		      GROUP BY birth_date,
		               nationality)
		   GROUP BY birth_date)
		ORDER BY count_distinct_nationality_

	   count_distinct_nationality_
	0                            1
	1                            1
	2                            1
	3                            1
	4                            1
	5                            1
	6                            1
Wrong output for fuzzied solution in instance db2csv/poker_player/0029_dev (4293)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM people
		GROUP BY Nationality
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  nationality
	0    tWkjDGDp
	ACTUAL OUTPUT ====

		
		SELECT nationality
		FROM
		  (SELECT LHS.n AS n,
		          RHS.nationality AS nationality
		   FROM
		     (SELECT MAX(n) AS n
		      FROM
		        (SELECT nationality,
		                COUNT() AS n
		         FROM people
		         GROUP BY nationality)) AS LHS
		   LEFT JOIN
		     (SELECT nationality,
		             COUNT() AS n
		      FROM people
		      GROUP BY nationality) AS RHS ON (LHS.n = RHS.n))
		ORDER BY nationality

	  nationality
	0    2i zXK)m
	1    Bulgaria
	2      Russia
	3    tWkjDGDp
Wrong output for fuzzied solution in instance db2csv/poker_player/0036_dev (4297)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM people
		WHERE Nationality != "Russia"

	                     name
	0   (ONTeodor SalparovJuT
	1        HMqhOks)qwdahiU8
	2            Maksim Botin
	3            Maksim Botin
	4       Maksim Botin9P6 k
	5            Roman Bragin
	6            Roman Bragin
	7            Roman Bragin
	8            Roman Bragin
	9            Roman Bragin
	10         Teodor Salparo
	11        Teodor Salparov
	12      XjZqGRoman Bragin
	13     Yevgeni Sivozhelez
	14         aYyCt9pS9nw)Nm
	15    aYyCt9pS9nw)Nm0qwy)
	16   c89hFTeodor Salparov
	17     cJTRoman Bragin4kS
	18      evgeni Sivozhelez
	19      evgeni Sivozhelez
	20      lHMqhOks)qwdahiU8
	21            oman Bragin
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `name`
		   FROM `people`
		   WHERE (`nationality` != 'Russia') INTERSECT
		     SELECT name
		     FROM people)
		ORDER BY name

	                     name
	0   (ONTeodor SalparovJuT
	1        HMqhOks)qwdahiU8
	2            Maksim Botin
	3       Maksim Botin9P6 k
	4            Roman Bragin
	5          Teodor Salparo
	6         Teodor Salparov
	7       XjZqGRoman Bragin
	8      Yevgeni Sivozhelez
	9          aYyCt9pS9nw)Nm
	10    aYyCt9pS9nw)Nm0qwy)
	11   c89hFTeodor Salparov
	12     cJTRoman Bragin4kS
	13      evgeni Sivozhelez
	14      lHMqhOks)qwdahiU8
	15            oman Bragin
Wrong output for fuzzied solution in instance db2csv/poker_player/0003_dev (4298)
	EXPECTED OUTPUT ====

		SELECT Earnings
		FROM poker_player
		ORDER BY Earnings DESC

	        earnings
	0  -4.973206e+08
	1   1.048710e+05
	2   1.048710e+05
	3   1.428000e+05
	4   1.428000e+05
	5   1.428000e+05
	6   1.428000e+05
	7   1.892330e+05
	8   1.892330e+05
	9   1.892330e+05
	10  4.760900e+05
	11  4.760900e+05
	12  5.964620e+05
	13  5.964620e+05
	14  5.964620e+05
	15  5.964620e+05
	16  5.964620e+05
	17  5.964620e+05
	18  3.226296e+09
	19  3.226296e+09
	20  3.226296e+09
	21  6.175974e+09
	ACTUAL OUTPUT ====

		
		SELECT earnings
		FROM
		  (SELECT earnings
		   FROM poker_player INTERSECT SELECT earnings
		   FROM poker_player)
		ORDER BY earnings

	        earnings
	0  -4.973206e+08
	1   1.048710e+05
	2   1.048710e+05
	3   1.428000e+05
	4   1.428000e+05
	5   1.428000e+05
	6   1.428000e+05
	7   1.892330e+05
	8   1.892330e+05
	9   4.760900e+05
	10  4.760900e+05
	11  5.964620e+05
	12  5.964620e+05
	13  3.226296e+09
	14  3.226296e+09
	15  6.175974e+09
Wrong output for base solution in instance db2csv/poker_player/0034_dev (4300)
	EXPECTED OUTPUT ====

	                 name birth_date
	0    Semen Poltavskiy 1981-02-08
	1     Teodor Salparov 1982-08-16
	2        Maksim Botin 1983-07-14
	3   Aleksey Ostapenko 1986-05-26
	4  Yevgeni Sivozhelez 1986-08-08
	5      Sergey Grankin 1987-01-22
	6        Roman Bragin 1987-04-17
	ACTUAL OUTPUT ====

		SELECT Name,
		       Birth_Date
		FROM people
		ORDER BY Name ASC

	                 name        birth_date
	0        Roman Bragin    April 17, 1987
	1     Teodor Salparov   August 16, 1982
	2  Yevgeni Sivozhelez    August 8, 1986
	3    Semen Poltavskiy  February 8, 1981
	4      Sergey Grankin  January 22, 1987
	5        Maksim Botin     July 14, 1983
	6   Aleksey Ostapenko      May 26, 1986
Wrong output for ground truth in instance db2csv/poker_player/0034_dev (4300)
Wrong output for fuzzied solution in instance db2csv/poker_player/0024_dev (4302)
	EXPECTED OUTPUT ====

		SELECT avg(T2.Earnings)
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		WHERE T1.Height > 200

	  avg(t2.earnings)
	0             None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(earnings) OVER () AS avg_t2_earnings_
		FROM
		  (SELECT LHS.poker_player_id AS poker_player_id,
		          LHS.people_id AS people_id,
		          LHS.final_table_made AS final_table_made,
		          LHS.best_finish AS best_finish,
		          LHS.money_rank AS money_rank,
		          LHS.earnings AS earnings,
		          RHS.nationality AS nationality,
		          RHS.name AS name,
		          RHS.birth_date AS birth_date,
		          RHS.height AS height
		   FROM poker_player AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM people
		      WHERE (height >= 200.0)) AS RHS ON (LHS.people_id = RHS.people_id))
		ORDER BY avg_t2_earnings_

	Empty DataFrame
	Columns: [avg_t2_earnings_]
	Index: []
Wrong output for fuzzied solution in instance db2csv/poker_player/0035_dev (4305)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM people
		WHERE Nationality != "Russia"

	                     name
	0   (ONTeodor SalparovJuT
	1        HMqhOks)qwdahiU8
	2            Maksim Botin
	3            Maksim Botin
	4       Maksim Botin9P6 k
	5            Roman Bragin
	6            Roman Bragin
	7            Roman Bragin
	8            Roman Bragin
	9            Roman Bragin
	10         Teodor Salparo
	11        Teodor Salparov
	12      XjZqGRoman Bragin
	13     Yevgeni Sivozhelez
	14         aYyCt9pS9nw)Nm
	15    aYyCt9pS9nw)Nm0qwy)
	16   c89hFTeodor Salparov
	17     cJTRoman Bragin4kS
	18      evgeni Sivozhelez
	19      evgeni Sivozhelez
	20      lHMqhOks)qwdahiU8
	21            oman Bragin
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `name`
		   FROM `people`
		   WHERE (`nationality` != 'Russia') INTERSECT
		     SELECT name
		     FROM people)
		ORDER BY name

	                     name
	0   (ONTeodor SalparovJuT
	1        HMqhOks)qwdahiU8
	2            Maksim Botin
	3       Maksim Botin9P6 k
	4            Roman Bragin
	5          Teodor Salparo
	6         Teodor Salparov
	7       XjZqGRoman Bragin
	8      Yevgeni Sivozhelez
	9          aYyCt9pS9nw)Nm
	10    aYyCt9pS9nw)Nm0qwy)
	11   c89hFTeodor Salparov
	12     cJTRoman Bragin4kS
	13      evgeni Sivozhelez
	14      lHMqhOks)qwdahiU8
	15            oman Bragin
Wrong output for fuzzied solution in instance db2csv/poker_player/0009_dev (4307)
	EXPECTED OUTPUT ====

		SELECT Money_Rank
		FROM poker_player
		ORDER BY Earnings DESC
		LIMIT 1

	   money_rank
	0      154.01
	ACTUAL OUTPUT ====

		
		SELECT money_rank
		FROM
		  (SELECT *
		   FROM poker_player AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT poker_player_id,
		                  people_id,
		                  final_table_made,
		                  best_finish,
		                  money_rank,
		                  MAX(earnings) OVER () AS earnings
		           FROM poker_player) AS RHS
		        WHERE (LHS.poker_player_id = RHS.poker_player_id
		               AND LHS.people_id = RHS.people_id
		               AND LHS.final_table_made = RHS.final_table_made
		               AND LHS.best_finish = RHS.best_finish
		               AND LHS.money_rank = RHS.money_rank
		               AND LHS.earnings = RHS.earnings) ))
		ORDER BY money_rank

	   money_rank
	0      141.00
	1      154.01
Wrong output for fuzzied solution in instance db2csv/poker_player/0002_dev (4308)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM poker_player

	   count(*)
	0        22
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT earnings,
		          COUNT() AS n
		   FROM poker_player
		   GROUP BY earnings)
		ORDER BY count___

	   count___
	0        16
Wrong output for base solution in instance db2csv/poker_player/0019_dev (4310)
	EXPECTED OUTPUT ====

		SELECT T1.Birth_Date
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T2.Earnings ASC
		LIMIT 1

	       birth_date
	0  August 8, 1986
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT birth_date
		FROM
		  (SELECT birth_date,
		          people_id,
		          MIN(earnings) AS minearnings
		   FROM
		     (SELECT LHS.poker_player_id AS poker_player_id,
		             LHS.people_id AS people_id,
		             LHS.final_table_made AS final_table_made,
		             LHS.best_finish AS best_finish,
		             LHS.money_rank AS money_rank,
		             LHS.earnings AS earnings,
		             RHS.nationality AS nationality,
		             RHS.name AS name,
		             RHS.birth_date AS birth_date,
		             RHS.height AS height
		      FROM poker_player AS LHS
		      INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id))
		   GROUP BY birth_date,
		            people_id)
		ORDER BY birth_date

	         birth_date
	0   August 16, 1982
	1    August 8, 1986
	2  February 8, 1981
	3     July 14, 1983
	4      May 26, 1986
Wrong output for base solution in instance db2csv/poker_player/0040_dev (4312)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT Nationality)
		FROM people

	   count(distinct nationality)
	0                            2
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count_distinct_nationality_
		FROM
		  (SELECT birth_date,
		          COUNT(DISTINCT nationality) AS n_distinct
		   FROM
		     (SELECT birth_date,
		             nationality,
		             COUNT() AS n
		      FROM people
		      GROUP BY birth_date,
		               nationality)
		   GROUP BY birth_date)
		ORDER BY count_distinct_nationality_

	   count_distinct_nationality_
	0                            1
	1                            1
	2                            1
	3                            1
	4                            1
	5                            1
	6                            1
Wrong output for fuzzied solution in instance db2csv/poker_player/0004_dev (4313)
	EXPECTED OUTPUT ====

		SELECT Earnings
		FROM poker_player
		ORDER BY Earnings DESC

	        earnings
	0  -4.973206e+08
	1   1.048710e+05
	2   1.048710e+05
	3   1.428000e+05
	4   1.428000e+05
	5   1.428000e+05
	6   1.428000e+05
	7   1.892330e+05
	8   1.892330e+05
	9   1.892330e+05
	10  4.760900e+05
	11  4.760900e+05
	12  5.964620e+05
	13  5.964620e+05
	14  5.964620e+05
	15  5.964620e+05
	16  5.964620e+05
	17  5.964620e+05
	18  3.226296e+09
	19  3.226296e+09
	20  3.226296e+09
	21  6.175974e+09
	ACTUAL OUTPUT ====

		
		SELECT earnings
		FROM
		  (SELECT earnings
		   FROM poker_player INTERSECT SELECT earnings
		   FROM poker_player)
		ORDER BY earnings

	        earnings
	0  -4.973206e+08
	1   1.048710e+05
	2   1.048710e+05
	3   1.428000e+05
	4   1.428000e+05
	5   1.428000e+05
	6   1.428000e+05
	7   1.892330e+05
	8   1.892330e+05
	9   4.760900e+05
	10  4.760900e+05
	11  5.964620e+05
	12  5.964620e+05
	13  3.226296e+09
	14  3.226296e+09
	15  6.175974e+09
Wrong output for fuzzied solution in instance db2csv/poker_player/0030_dev (4314)
	EXPECTED OUTPUT ====

		SELECT Nationality
		FROM people
		GROUP BY Nationality
		ORDER BY COUNT(*) DESC
		LIMIT 1

	  nationality
	0    tWkjDGDp
	ACTUAL OUTPUT ====

		
		SELECT nationality
		FROM
		  (SELECT nationality,
		          n,
		          MAX(n) OVER () AS maxn
		   FROM
		     (SELECT nationality,
		             COUNT() AS n
		      FROM people
		      GROUP BY nationality))
		WHERE (maxn <= n)
		ORDER BY nationality

	  nationality
	0    2i zXK)m
	1    Bulgaria
	2      Russia
	3    tWkjDGDp
Wrong output for fuzzied solution in instance db2csv/poker_player/0022_dev (4316)
	EXPECTED OUTPUT ====

		SELECT T2.Money_Rank
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T1.Height DESC
		LIMIT 1

	     money_rank
	0  3.793369e+09
	ACTUAL OUTPUT ====

		
		SELECT money_rank
		FROM
		  (SELECT LHS.poker_player_id AS poker_player_id,
		          LHS.people_id AS people_id,
		          LHS.final_table_made AS final_table_made,
		          LHS.best_finish AS best_finish,
		          LHS.money_rank AS money_rank,
		          LHS.earnings AS earnings,
		          LHS.nationality AS nationality,
		          LHS.name AS name,
		          LHS.birth_date AS birth_date,
		          LHS.height AS height
		   FROM
		     (SELECT LHS.poker_player_id AS poker_player_id,
		             LHS.people_id AS people_id,
		             LHS.final_table_made AS final_table_made,
		             LHS.best_finish AS best_finish,
		             LHS.money_rank AS money_rank,
		             LHS.earnings AS earnings,
		             RHS.nationality AS nationality,
		             RHS.name AS name,
		             RHS.birth_date AS birth_date,
		             RHS.height AS height
		      FROM poker_player AS LHS
		      INNER JOIN people AS RHS ON (LHS.people_id = RHS.people_id)) AS LHS
		   INNER JOIN
		     (SELECT MAX(height) AS height
		      FROM people) AS RHS ON (LHS.height = RHS.height))
		ORDER BY money_rank

	     money_rank
	0  5.802000e+01
	1  3.793369e+09
Wrong output for fuzzied solution in instance db2csv/poker_player/0010_dev (4322)
	EXPECTED OUTPUT ====

		SELECT Money_Rank
		FROM poker_player
		ORDER BY Earnings DESC
		LIMIT 1

	   money_rank
	0      154.01
	ACTUAL OUTPUT ====

		
		SELECT money_rank
		FROM
		  (SELECT LHS.earnings AS earnings,
		          RHS.poker_player_id AS poker_player_id,
		          RHS.people_id AS people_id,
		          RHS.final_table_made AS final_table_made,
		          RHS.best_finish AS best_finish,
		          RHS.money_rank AS money_rank,
		          RHS.earnings AS earnings_other
		   FROM
		     (SELECT MAX(earnings) AS earnings
		      FROM poker_player) AS LHS
		   CROSS JOIN poker_player AS RHS)
		WHERE (earnings = earnings_other)
		ORDER BY money_rank

	   money_rank
	0      141.00
	1      154.01
Wrong output for base solution in instance db2csv/poker_player/0020_dev (4323)
	EXPECTED OUTPUT ====

		SELECT T1.Birth_Date
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		ORDER BY T2.Earnings ASC
		LIMIT 1

	       birth_date
	0  August 8, 1986
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT birth_date
		FROM
		  (SELECT *
		   FROM people AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT best_finish,
		                  people_id,
		                  MIN(earnings) AS minearnings
		           FROM poker_player
		           GROUP BY best_finish,
		                    people_id) AS RHS
		        WHERE (LHS.people_id = RHS.people_id) ))
		ORDER BY birth_date

	         birth_date
	0    April 17, 1987
	1  January 22, 1987
Wrong output for fuzzied solution in instance db2csv/poker_player/0023_dev (4325)
	EXPECTED OUTPUT ====

		SELECT avg(T2.Earnings)
		FROM people AS T1
		JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID
		WHERE T1.Height > 200

	  avg(t2.earnings)
	0             None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(earnings) OVER () AS avg_t2_earnings_
		FROM
		  (SELECT LHS.poker_player_id AS poker_player_id,
		          LHS.people_id AS people_id,
		          LHS.final_table_made AS final_table_made,
		          LHS.best_finish AS best_finish,
		          LHS.money_rank AS money_rank,
		          LHS.earnings AS earnings,
		          RHS.nationality AS nationality,
		          RHS.name AS name,
		          RHS.birth_date AS birth_date,
		          RHS.height AS height
		   FROM poker_player AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM people
		      WHERE (height >= 200.0)) AS RHS ON (LHS.people_id = RHS.people_id))
		ORDER BY avg_t2_earnings_

	Empty DataFrame
	Columns: [avg_t2_earnings_]
	Index: []
Wrong output for fuzzied solution in instance db2csv/museum_visit/0018_dev (4328)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM museum
		WHERE open_year > 2013
		  OR open_year < 2008

	   count(*)
	0         6
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___
		FROM
		  (SELECT name,
		          COUNT() AS n
		   FROM
		     (SELECT *
		      FROM museum
		      WHERE (open_year >= 2008
		             OR open_year = 2013))
		   GROUP BY name)
		ORDER BY count___

	   count___
	0         1
	1         2
Wrong output for fuzzied solution in instance db2csv/museum_visit/0003_dev (4330)
	EXPECTED OUTPUT ====

		SELECT avg(age)
		FROM visitor
		WHERE Level_of_membership <= 4

	   avg(age)
	0      29.6
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(age) OVER () AS avg_age_
		FROM visitor
		WHERE (level_of_membership < 4
		       AND age >= level_of_membership)
		ORDER BY avg_age_

	   avg_age_
	0      28.0
Wrong output for fuzzied solution in instance db2csv/museum_visit/0001_dev (4331)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM visitor
		WHERE age < 30

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM visitor
		WHERE (age > 30)
		ORDER BY count___

	   count___
	0         5
Wrong output for fuzzied solution in instance db2csv/museum_visit/0011_dev (4332)
	EXPECTED OUTPUT ====

		SELECT t2.Museum_ID,
		       t1.name
		FROM museum AS t1
		JOIN visit AS t2 ON t1.Museum_ID = t2.Museum_ID
		GROUP BY t2.Museum_ID
		ORDER BY count(*) DESC
		LIMIT 1

	   museum_id                               name
	0          0  Jefferson Development MuseumIH7qZ
	ACTUAL OUTPUT ====

		
		SELECT museum_id,
		       name
		FROM
		  (SELECT LHS.museum_id AS museum_id,
		          LHS.name AS name,
		          LHS.num_of_staff AS num_of_staff,
		          LHS.open_year AS open_year
		   FROM museum AS LHS
		   INNER JOIN
		     (SELECT MAX(n) AS maxn
		      FROM
		        (SELECT museum_id,
		                COUNT() AS n
		         FROM visit
		         GROUP BY museum_id)) AS RHS ON (LHS.museum_id = RHS.maxn))
		ORDER BY museum_id

	   museum_id              name
	0          8  RiverPark Museum
Wrong output for base solution in instance db2csv/museum_visit/0017_dev (4333)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM visitor
		WHERE id NOT IN
		    (SELECT t2.visitor_id
		     FROM museum AS t1
		     JOIN visit AS t2 ON t1.Museum_ID = t2.Museum_ID
		     WHERE t1.open_year > 2010)

	   count(*)
	0         3
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT LHS.museum_id AS museum_id,
		          LHS.name AS name,
		          LHS.num_of_staff AS num_of_staff,
		          LHS.open_year AS open_year,
		          LHS.visitor_id AS visitor_id,
		          LHS.num_of_ticket AS num_of_ticket,
		          LHS.total_spent AS total_spent,
		          LHS.id AS id,
		          LHS.level_of_membership AS level_of_membership,
		          LHS.age AS age,
		          RHS.n_distinct AS n_distinct
		   FROM
		     (SELECT LHS.museum_id AS museum_id,
		             LHS.name AS name,
		             LHS.num_of_staff AS num_of_staff,
		             LHS.open_year AS open_year,
		             LHS.visitor_id AS visitor_id,
		             LHS.num_of_ticket AS num_of_ticket,
		             LHS.total_spent AS total_spent,
		             RHS.id AS id,
		             RHS.level_of_membership AS level_of_membership,
		             RHS.age AS age
		      FROM
		        (SELECT LHS.museum_id AS museum_id,
		                LHS.name AS name,
		                LHS.num_of_staff AS num_of_staff,
		                LHS.open_year AS open_year,
		                RHS.visitor_id AS visitor_id,
		                RHS.num_of_ticket AS num_of_ticket,
		                RHS.total_spent AS total_spent
		         FROM museum AS LHS
		         INNER JOIN visit AS RHS ON (LHS.museum_id = RHS.museum_id)) AS LHS
		      INNER JOIN visitor AS RHS ON (LHS.name = RHS.name)) AS LHS
		   CROSS JOIN
		     (SELECT COUNT(DISTINCT open_year) AS n_distinct
		      FROM museum
		      WHERE (open_year < 2010)) AS RHS)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance db2csv/museum_visit/0016_dev (4334)
	EXPECTED OUTPUT ====

		SELECT t1.name
		FROM visitor AS t1
		JOIN visit AS t2 ON t1.id = t2.visitor_id
		JOIN museum AS t3 ON t3.Museum_ID = t2.Museum_ID
		WHERE t3.open_year < 2009 INTERSECT
		  SELECT t1.name
		  FROM visitor AS t1
		  JOIN visit AS t2 ON t1.id = t2.visitor_id
		  JOIN museum AS t3 ON t3.Museum_ID = t2.Museum_ID WHERE t3.open_year > 2011

	                    name
	0          Fernando Gago
	1   Rafael van der Vaart
	2  X1ZGuti MidfielderRi(
	3    afael van der Vaart
	ACTUAL OUTPUT ====

		
		SELECT name_other AS name
		FROM
		  (SELECT LHS.museum_id AS museum_id,
		          LHS.name AS name,
		          LHS.num_of_staff AS num_of_staff,
		          LHS.open_year AS open_year,
		          LHS.visitor_id AS visitor_id,
		          LHS.num_of_ticket AS num_of_ticket,
		          LHS.total_spent AS total_spent,
		          RHS.name AS name_other,
		          RHS.level_of_membership AS level_of_membership,
		          RHS.age AS age
		   FROM
		     (SELECT *
		      FROM
		        (SELECT LHS.museum_id AS museum_id,
		                LHS.name AS name,
		                LHS.num_of_staff AS num_of_staff,
		                LHS.open_year AS open_year,
		                RHS.visitor_id AS visitor_id,
		                RHS.num_of_ticket AS num_of_ticket,
		                RHS.total_spent AS total_spent
		         FROM museum AS LHS
		         INNER JOIN visit AS RHS ON (LHS.museum_id = RHS.museum_id))
		      WHERE (open_year < 2009
		             AND open_year < 2011)) AS LHS
		   INNER JOIN visitor AS RHS ON (LHS.visitor_id = RHS.id))
		ORDER BY name

	                     name
	0           Fernando Gago
	1           Fernando Gago
	2           Fernando Gago
	3          Guti Midfielde
	4          Guti Midfielde
	5      N2)TPFernando Gago
	6      N2)TPFernando Gago
	7      N2)TPFernando Gago
	8      N2)TPFernando Gago
	9    Rafael van der Vaart
	10   Rafael van der Vaart
	11   Rafael van der Vaart
	12   Rafael van der Vaart
	13   Rafael van der Vaart
	14   Rafael van der Vaart
	15   Rafael van der Vaart
	16   Rafael van der Vaart
	17   Rafael van der Vaart
	18   Rafael van der Vaart
	19   Rafael van der Vaart
	20   Rafael van der Vaart
	21  X1ZGuti MidfielderRi(
	22  X1ZGuti MidfielderRi(
	23  X1ZGuti MidfielderRi(
	24  X1ZGuti MidfielderRi(
	25    afael van der Vaart
	26    afael van der Vaart
	27    afael van der Vaart
Wrong output for base solution in instance db2csv/museum_visit/0009_dev (4335)
	EXPECTED OUTPUT ====

		SELECT t1.id,
		       t1.name,
		       t1.age
		FROM visitor AS t1
		JOIN visit AS t2 ON t1.id = t2.visitor_id
		GROUP BY t1.id
		HAVING count(*) > 1

	   id                  name  age
	0   6  Rafael van der Vaart   25
	1   3          Arjen Robben   27
	2   5         Fernando Gago   36
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT visitor_id AS id,
		                name,
		                age
		FROM
		  (SELECT LHS.museum_id AS museum_id,
		          LHS.visitor_id AS visitor_id,
		          LHS.num_of_ticket AS num_of_ticket,
		          LHS.total_spent AS total_spent,
		          LHS.n AS n,
		          RHS.name AS name,
		          RHS.level_of_membership AS level_of_membership,
		          RHS.age AS age
		   FROM
		     (SELECT *
		      FROM
		        (SELECT museum_id,
		                visitor_id,
		                num_of_ticket,
		                total_spent,
		                COUNT(*) OVER () AS n
		         FROM visit)
		      WHERE (n >= 1)) AS LHS
		   INNER JOIN visitor AS RHS ON (LHS.visitor_id = RHS.id))
		ORDER BY id

	  id                  name  age
	0  6  Rafael van der Vaart   25
	1  3          Arjen Robben   27
	2  5         Fernando Gago   36
Wrong output for fuzzied solution in instance db2csv/museum_visit/0002_dev (4336)
	EXPECTED OUTPUT ====

		SELECT name
		FROM visitor
		WHERE Level_of_membership > 4
		ORDER BY Level_of_membership DESC

	              name
	0  N2)TPRaúl Brown
	1        Raúl Brow
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM visitor
		WHERE (level_of_membership >= 4)
		ORDER BY name

	               name
	0   N2)TPRaúl Brown
	1         Raúl Brow
	2  X1ZRaúl BrownRi(
No solution for instance db2csv/museum_visit/0008_dev (4337)
Wrong output for base solution in instance db2csv/museum_visit/0006_dev (4338)
	EXPECTED OUTPUT ====

	   avg_num_of_staff_
	0          31.333333
	ACTUAL OUTPUT ====

		SELECT avg(num_of_staff)
		FROM museum
		WHERE open_year < 2009

	   avg(num_of_staff)
	0          31.333333
Wrong output for ground truth in instance db2csv/museum_visit/0006_dev (4338)
Wrong output for fuzzied solution in instance db2csv/museum_visit/0004_dev (4339)
	EXPECTED OUTPUT ====

		SELECT name,
		       Level_of_membership
		FROM visitor
		WHERE Level_of_membership > 4
		ORDER BY age DESC

	              name  level_of_membership
	0        Raúl Brow                    5
	1  N2)TPRaúl Brown                    7
	ACTUAL OUTPUT ====

		
		SELECT name,
		       level_of_membership
		FROM visitor
		WHERE (level_of_membership >= 4)
		ORDER BY name

	               name  level_of_membership
	0  X1ZRaúl BrownRi(                    4
	1         Raúl Brow                    5
	2   N2)TPRaúl Brown                    7
Wrong output for fuzzied solution in instance db2csv/museum_visit/0013_dev (4340)
	EXPECTED OUTPUT ====

		SELECT t1.name,
		       t1.age
		FROM visitor AS t1
		JOIN visit AS t2 ON t1.id = t2.visitor_id
		ORDER BY t2.num_of_ticket DESC
		LIMIT 1

	                   name  age
	0  Rafael van der Vaart   35
	ACTUAL OUTPUT ====

		
		SELECT name,
		       age
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.level_of_membership AS level_of_membership,
		          LHS.age AS age,
		          RHS.visitor_id AS visitor_id,
		          RHS.maxnum_of_ticket AS maxnum_of_ticket
		   FROM visitor AS LHS
		   INNER JOIN
		     (SELECT visitor_id,
		             num_of_ticket,
		             MAX(num_of_ticket) OVER () AS maxnum_of_ticket
		      FROM
		        (SELECT visitor_id,
		                MAX(num_of_ticket) AS num_of_ticket
		         FROM visit
		         GROUP BY visitor_id)) AS RHS ON (LHS.id = RHS.num_of_ticket))
		ORDER BY name

	Empty DataFrame
	Columns: [name, age]
	Index: []
Wrong output for base solution in instance db2csv/museum_visit/0007_dev (4342)
	EXPECTED OUTPUT ====

	   num_of_staff  open_year
	0            62       2000
	ACTUAL OUTPUT ====

		SELECT Num_of_Staff,
		       Open_Year
		FROM museum
		WHERE name = 'Plaza Museum'

	   num_of_staff open_year
	0            62      2000
Wrong output for ground truth in instance db2csv/museum_visit/0007_dev (4342)
Wrong output for fuzzied solution in instance db2csv/museum_visit/0015_dev (4343)
	EXPECTED OUTPUT ====

		SELECT sum(t2.Total_spent)
		FROM visitor AS t1
		JOIN visit AS t2 ON t1.id = t2.visitor_id
		WHERE t1.Level_of_membership = 1

	  sum(t2.total_spent)
	0                None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT SUM(total_spent) OVER () AS sum_t2_total_spent_
		FROM
		  (SELECT museum_id,
		          visitor_id,
		          num_of_ticket,
		          total_spent,
		          name,
		          level_of_membership,
		          age,
		          visitor_id AS id
		   FROM
		     (SELECT LHS.museum_id AS museum_id,
		             LHS.visitor_id AS visitor_id,
		             LHS.num_of_ticket AS num_of_ticket,
		             LHS.total_spent AS total_spent,
		             RHS.name AS name,
		             RHS.level_of_membership AS level_of_membership,
		             RHS.age AS age
		      FROM visit AS LHS
		      INNER JOIN
		        (SELECT *
		         FROM visitor
		         WHERE (level_of_membership = 1)) AS RHS ON (LHS.visitor_id = RHS.id)))
		ORDER BY sum_t2_total_spent_

	Empty DataFrame
	Columns: [sum_t2_total_spent_]
	Index: []
Wrong output for base solution in instance db2csv/museum_visit/0010_dev (4344)
	EXPECTED OUTPUT ====

	   visitor_id          name  level_of_membership
	0           3  Arjen Robben                    1
	ACTUAL OUTPUT ====

		SELECT t2.visitor_id,
		       t1.name,
		       t1.Level_of_membership
		FROM visitor AS t1
		JOIN visit AS t2 ON t1.id = t2.visitor_id
		GROUP BY t2.visitor_id
		ORDER BY sum(t2.Total_spent) DESC
		LIMIT 1

	  visitor_id          name  level_of_membership
	0          3  Arjen Robben                    1
Wrong output for ground truth in instance db2csv/museum_visit/0010_dev (4344)
Wrong output for fuzzied solution in instance db2csv/museum_visit/0005_dev (4345)
	EXPECTED OUTPUT ====

		SELECT museum_id,
		       name
		FROM museum
		ORDER BY num_of_staff DESC
		LIMIT 1

	   museum_id                  name
	0          3  Willow Grande Museum
	ACTUAL OUTPUT ====

		
		SELECT museum_id,
		       name
		FROM
		  (SELECT *
		   FROM museum AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT museum_id,
		                  name,
		                  MAX(num_of_staff) OVER () AS num_of_staff,
		                                         open_year
		           FROM museum) AS RHS
		        WHERE (LHS.museum_id = RHS.museum_id
		               AND LHS.name = RHS.name
		               AND LHS.num_of_staff = RHS.num_of_staff
		               AND LHS.open_year = RHS.open_year) ))
		ORDER BY museum_id

	   museum_id                  name
	0          3  Willow Grande Museum
	1          4       iverPark Museum
Wrong output for fuzzied solution in instance db2csv/real_estate_properties/0003_dev (4346)
	EXPECTED OUTPUT ====

		SELECT T2.property_type_description
		FROM Properties AS T1
		JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code
		GROUP BY T1.property_type_code

	            property_type_description
	0         Apartment, Flat, Condo, etc
	1         Apartment, Flat, Condo, etc
	2        Apartment, Flat, Condo, etc.
	3               House, Bungalow, etc.
	4           SXvflShop, Retail Outlet.
	5                 Shop, Retail Outlet
	6                Shop, Retail Outlet.
	7                Shop, Retail Outlet.
	8  X1ZApartment, Flat, Condo, etc.Ri(
	9           mxfhcShop, Retail Outlet.
	ACTUAL OUTPUT ====

		
		SELECT property_type_description
		FROM ref_property_types
		ORDER BY property_type_description

	             property_type_description
	0          Apartment, Flat, Condo, etc
	1          Apartment, Flat, Condo, etc
	2          Apartment, Flat, Condo, etc
	3          Apartment, Flat, Condo, etc
	4         Apartment, Flat, Condo, etc.
	5         Apartment, Flat, Condo, etc.
	6         Apartment, Flat, Condo, etc.
	7         Apartment, Flat, Condo, etc.
	8         Apartment, Flat, Condo, etc.
	9         Apartment, Flat, Condo, etc.
	10        Apartment, Flat, Condo, etc.
	11   Apartment, Flat, Condo, etc.3cv)u
	12   Apartment, Flat, Condo, etc.Mbehq
	13         BkfHouse, Bungalow, etc.ba8
	14                House, Bungalow, etc
	15               House, Bungalow, etc.
	16               House, Bungalow, etc.
	17               House, Bungalow, etc.
	18           SXvflShop, Retail Outlet.
	19                 Shop, Retail Outlet
	20                Shop, Retail Outlet.
	21                Shop, Retail Outlet.
	22                Shop, Retail Outlet.
	23                Shop, Retail Outlet.
	24                Shop, Retail Outlet.
	25                Shop, Retail Outlet.
	26                Shop, Retail Outlet.
	27  X1ZApartment, Flat, Condo, etc.Ri(
	28                 hop, Retail Outlet.
	29           mxfhcShop, Retail Outlet.
	30  vDEApartment, Flat, Condo, etc.K6X
Wrong output for fuzzied solution in instance db2csv/real_estate_properties/0004_dev (4349)
	EXPECTED OUTPUT ====

		SELECT property_name
		FROM Properties
		WHERE property_type_code = "House"
		UNION
		SELECT property_name
		FROM Properties
		WHERE property_type_code = "Apartment"
		  AND room_count > 1

	  property_name
	0  FpqrenoirRVF
	1   n14)vrenoir
	2     ten tower
	ACTUAL OUTPUT ====

		
		SELECT `property_name`
		FROM
		  (SELECT *
		   FROM `properties`
		   WHERE (`property_type_code` = 'Apartment'
		          OR `property_type_code` = 'House'))
		WHERE (`property_type_code` = 'Apartment'
		       OR room_count >= 1)
		ORDER BY property_name

	  property_name
	0  FpqrenoirRVF
	1   n14)vrenoir
	2          park
	3     ten tower
Wrong output for fuzzied solution in instance db2csv/flight_2/0027_dev (4350)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS
		WHERE DestAirport = "ATO"

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT destairport) AS n_distinct
		   FROM
		     (SELECT *
		      FROM flights AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM
		             (SELECT destairport
		              FROM flights INTERSECT SELECT destairport
		              FROM flights) AS RHS
		           WHERE (LHS.destairport = RHS.destairport) )))
		ORDER BY count___

	   count___
	0         0
No solution for instance db2csv/flight_2/0060_dev (4351)
Wrong output for fuzzied solution in instance db2csv/flight_2/0063_dev (4352)
	EXPECTED OUTPUT ====

		SELECT T1.Airline
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline
		GROUP BY T1.Airline
		HAVING count(*) > 10

	Empty DataFrame
	Columns: [airline]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT airline
		FROM
		  (SELECT LHS.uid AS UID,
		          LHS.airline AS airline,
		          LHS.abbreviation AS abbreviation,
		          LHS.country AS country,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.uid AS UID,
		             LHS.airline AS airline,
		             LHS.abbreviation AS abbreviation,
		             LHS.country AS country,
		             RHS.n AS n
		      FROM airlines AS LHS
		      CROSS JOIN
		        (SELECT COUNT() AS n
		         FROM flights) AS RHS) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT COUNT() AS n
		         FROM flights)
		      WHERE (n >= 10)) AS RHS ON (LHS.n = RHS.n))
		ORDER BY airline

	                airline
	0   BgNjjVirgin America
	1   Continental Airline
	2        Delta Airlines
	3  eB5Delta AirlinesveW
	4        etBlue Airways
No solution for instance db2csv/flight_2/0058_dev (4354)
No solution for instance db2csv/flight_2/0033_dev (4356)
No solution for instance db2csv/flight_2/0029_dev (4358)
No solution for instance db2csv/flight_2/0054_dev (4359)
No solution for instance db2csv/flight_2/0048_dev (4360)
Wrong output for fuzzied solution in instance db2csv/flight_2/0037_dev (4361)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid
		WHERE T1.Airline = "United Airlines"
		  AND T2.DestAirport = "ASY"

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n_distinct` AS `count___`
		FROM
		  (SELECT `LHS`.`uid` AS `uid`,
		          `LHS`.`airline` AS `airline`,
		          `LHS`.`abbreviation` AS `abbreviation`,
		          `LHS`.`country` AS `country`,
		          `RHS`.`n_distinct` AS `n_distinct`
		   FROM `airlines` AS `LHS`
		   CROSS JOIN
		     (SELECT COUNT(DISTINCT `airline`) AS `n_distinct`
		      FROM `flights`
		      WHERE (`airline` = 'United Airlines')) AS RHS)
		ORDER BY count___

	   count___
	0         0
Wrong output for fuzzied solution in instance db2csv/flight_2/0038_dev (4363)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid
		WHERE T1.Airline = "United Airlines"
		  AND T2.DestAirport = "ASY"

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`uid` AS `uid`,
		          `LHS`.`airline` AS `airline`,
		          `LHS`.`abbreviation` AS `abbreviation`,
		          `LHS`.`country` AS `country`,
		          `RHS`.`n` AS `n`
		   FROM `airlines` AS `LHS`
		   CROSS JOIN
		     (SELECT COUNT() AS `n`
		      FROM `flights`
		      WHERE (`airline` = 'United Airlines')) AS RHS)
		ORDER BY count___

	   count___
	0         0
Wrong output for fuzzied solution in instance db2csv/flight_2/0036_dev (4364)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRLINES AS T2 ON T1.Airline = T2.uid
		WHERE T2.Airline = "JetBlue Airways"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT `uid`,
		          `uid` AS `airline`,
		          `abbreviation`,
		          `country`,
		          `flightno`,
		          `sourceairport`,
		          `destairport`
		   FROM
		     (SELECT `LHS`.`uid` AS `uid`,
		             `LHS`.`airline` AS `airline`,
		             `LHS`.`abbreviation` AS `abbreviation`,
		             `LHS`.`country` AS `country`,
		             `RHS`.`flightno` AS `flightno`,
		             `RHS`.`sourceairport` AS `sourceairport`,
		             `RHS`.`destairport` AS `destairport`
		      FROM
		        (SELECT *
		         FROM `airlines`
		         WHERE (`airline` = 'JetBlue Airways')) AS LHS
		      INNER JOIN flights AS RHS ON (LHS.uid = RHS.airline)))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance db2csv/flight_2/0053_dev (4366)
No solution for instance db2csv/flight_2/0078_dev (4367)
Wrong output for fuzzied solution in instance db2csv/flight_2/0001_dev (4368)
	EXPECTED OUTPUT ====

		SELECT Country
		FROM AIRLINES
		WHERE Airline = "JetBlue Airways"

	    country
	0  ZiiO5USA
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `country`
		FROM `airlines`
		WHERE (`airline` != 'JetBlue Airways')
		ORDER BY country

	     country
	0  RDXUSANfP
	1         US
	2        USA
	3   USAEun2W
No solution for instance db2csv/flight_2/0034_dev (4369)
No solution for instance db2csv/flight_2/0073_dev (4370)
No solution for instance db2csv/flight_2/0061_dev (4371)
Wrong output for fuzzied solution in instance db2csv/flight_2/0064_dev (4372)
	EXPECTED OUTPUT ====

		SELECT T1.Airline
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline
		GROUP BY T1.Airline
		HAVING count(*) > 10

	Empty DataFrame
	Columns: [airline]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT airline_other AS airline
		FROM
		  (SELECT airline,
		          flightno,
		          sourceairport,
		          destairport,
		          airline_other,
		          airline AS n
		   FROM
		     (SELECT LHS.airline AS airline,
		             LHS.flightno AS flightno,
		             LHS.sourceairport AS sourceairport,
		             LHS.destairport AS destairport,
		             RHS.airline AS airline_other
		      FROM flights AS LHS
		      INNER JOIN
		        (SELECT airline,
		                COUNT() AS n
		         FROM airlines
		         GROUP BY airline) AS RHS ON (LHS.airline = RHS.n)))
		WHERE (n < 10)
		ORDER BY airline

	                airline
	0   BgNjjVirgin America
	1   Continental Airline
	2        Delta Airlines
	3  eB5Delta AirlinesveW
	4        etBlue Airways
No solution for instance db2csv/flight_2/0043_dev (4373)
Wrong output for base solution in instance db2csv/flight_2/0042_dev (4375)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode
		JOIN AIRLINES AS T3 ON T3.uid = T1.Airline
		WHERE T2.City = "Aberdeen"
		  AND T3.Airline = "United Airlines"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT `LHS`.`uid` AS `uid`,
		          `LHS`.`airline` AS `airline`,
		          `LHS`.`abbreviation` AS `abbreviation`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`city` AS `city`,
		          `LHS`.`airportcode` AS `airportcode`,
		          `LHS`.`airportname` AS `airportname`,
		          `LHS`.`countryabbrev` AS `countryabbrev`,
		          `RHS`.`n_distinct` AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`uid` AS `uid`,
		             `LHS`.`airline` AS `airline`,
		             `LHS`.`abbreviation` AS `abbreviation`,
		             `LHS`.`country` AS `country`,
		             `RHS`.`city` AS `city`,
		             `RHS`.`airportcode` AS `airportcode`,
		             `RHS`.`airportname` AS `airportname`,
		             `RHS`.`countryabbrev` AS `countryabbrev`
		      FROM `airlines` AS `LHS`
		      INNER JOIN `airports` AS `RHS` ON (`LHS`.`country` = `RHS`.`country`)) AS `LHS`
		   CROSS JOIN
		     (SELECT COUNT(DISTINCT `airline`) AS `n_distinct`
		      FROM `flights`
		      WHERE (`airline` = 'United Airlines')) AS RHS)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance db2csv/flight_2/0024_dev (4376)
Wrong output for fuzzied solution in instance db2csv/flight_2/0017_dev (4377)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM AIRLINES
		WHERE Country = "USA"

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `uid`,
		          `airline`,
		          `abbreviation`,
		          `country`,
		          COUNT(*) OVER () AS `n`
		   FROM `airlines`)
		WHERE (`country` = 'USA')
		ORDER BY count___

	   count___
	0        10
No solution for instance db2csv/flight_2/0062_dev (4378)
No solution for instance db2csv/flight_2/0077_dev (4379)
No solution for instance db2csv/flight_2/0066_dev (4380)
No solution for instance db2csv/flight_2/0049_dev (4381)
Wrong output for fuzzied solution in instance db2csv/flight_2/0026_dev (4382)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS
		WHERE SourceAirport = "APG"

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count___
		FROM
		  (SELECT COUNT(DISTINCT sourceairport) AS n_distinct
		   FROM
		     (SELECT *
		      FROM flights AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM
		             (SELECT flightno,
		                     sourceairport,
		                     COUNT() AS n
		              FROM flights
		              GROUP BY flightno,
		                       sourceairport) AS RHS
		           WHERE (LHS.flightno = RHS.flightno
		                  AND LHS.sourceairport = RHS.sourceairport) )))
		ORDER BY count___

	   count___
	0         0
No solution for instance db2csv/flight_2/0045_dev (4383)
Wrong output for fuzzied solution in instance db2csv/flight_2/0035_dev (4384)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRLINES AS T2 ON T1.Airline = T2.uid
		WHERE T2.Airline = "JetBlue Airways"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT `uid`,
		          `uid` AS `airline`,
		          `abbreviation`,
		          `country`,
		          `flightno`,
		          `sourceairport`,
		          `destairport`
		   FROM
		     (SELECT `LHS`.`uid` AS `uid`,
		             `LHS`.`airline` AS `airline`,
		             `LHS`.`abbreviation` AS `abbreviation`,
		             `LHS`.`country` AS `country`,
		             `RHS`.`flightno` AS `flightno`,
		             `RHS`.`sourceairport` AS `sourceairport`,
		             `RHS`.`destairport` AS `destairport`
		      FROM
		        (SELECT *
		         FROM `airlines`
		         WHERE (`airline` = 'JetBlue Airways')) AS LHS
		      INNER JOIN flights AS RHS ON (LHS.uid = RHS.airline)))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance db2csv/flight_2/0016_dev (4385)
	EXPECTED OUTPUT ====

		SELECT Airline
		FROM AIRLINES
		WHERE Abbreviation = "UAL"

	                airline
	0         Allegiant Air
	1  Continental Airlines
	2  Continental Airlines
	3            US Airways
	4       US AirwaystbIIj
	ACTUAL OUTPUT ====

		
		SELECT `airline`
		FROM
		  (SELECT `airline`
		   FROM `airlines`
		   WHERE (`abbreviation` = 'UAL') INTERSECT
		     SELECT airline
		     FROM airlines)
		ORDER BY airline

	                airline
	0         Allegiant Air
	1  Continental Airlines
	2            US Airways
	3       US AirwaystbIIj
Wrong output for fuzzied solution in instance db2csv/flight_2/0065_dev (4388)
	EXPECTED OUTPUT ====

		SELECT T1.Airline
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline
		GROUP BY T1.Airline
		HAVING count(*) < 200

	                airline
	0   BgNjjVirgin America
	1  eB5Delta AirlinesveW
	2        etBlue Airways
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT airline_other AS airline
		FROM
		  (SELECT LHS.airline AS airline,
		          LHS.flightno AS flightno,
		          LHS.sourceairport AS sourceairport,
		          LHS.destairport AS destairport,
		          RHS.uid AS UID,
		          RHS.airline AS airline_other,
		          RHS.abbreviation AS abbreviation,
		          RHS.country AS country
		   FROM flights AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT UID,
		                airline,
		                abbreviation,
		                country,
		                COUNT(*) OVER () AS n
		         FROM airlines)
		      WHERE (n < 200)) AS RHS ON (LHS.airline = RHS.n))
		ORDER BY airline

	                airline
	0   BgNjjVirgin America
	1   Continental Airline
	2        Delta Airlines
	3  eB5Delta AirlinesveW
	4        etBlue Airways
No solution for instance db2csv/flight_2/0055_dev (4389)
No solution for instance db2csv/flight_2/0046_dev (4390)
No solution for instance db2csv/flight_2/0057_dev (4391)
No solution for instance db2csv/flight_2/0074_dev (4392)
No solution for instance db2csv/flight_2/0008_dev (4393)
Wrong output for base solution in instance db2csv/flight_2/0041_dev (4394)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS AS T1
		JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode
		JOIN AIRLINES AS T3 ON T3.uid = T1.Airline
		WHERE T2.City = "Aberdeen"
		  AND T3.Airline = "United Airlines"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count___`
		FROM
		  (SELECT `LHS`.`uid` AS `uid`,
		          `LHS`.`airline` AS `airline`,
		          `LHS`.`abbreviation` AS `abbreviation`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`city` AS `city`,
		          `LHS`.`airportcode` AS `airportcode`,
		          `LHS`.`airportname` AS `airportname`,
		          `LHS`.`countryabbrev` AS `countryabbrev`,
		          `RHS`.`n_distinct` AS `n_distinct`
		   FROM
		     (SELECT `LHS`.`uid` AS `uid`,
		             `LHS`.`airline` AS `airline`,
		             `LHS`.`abbreviation` AS `abbreviation`,
		             `LHS`.`country` AS `country`,
		             `RHS`.`city` AS `city`,
		             `RHS`.`airportcode` AS `airportcode`,
		             `RHS`.`airportname` AS `airportname`,
		             `RHS`.`countryabbrev` AS `countryabbrev`
		      FROM `airlines` AS `LHS`
		      INNER JOIN `airports` AS `RHS` ON (`LHS`.`country` = `RHS`.`country`)) AS `LHS`
		   CROSS JOIN
		     (SELECT COUNT(DISTINCT `airline`) AS `n_distinct`
		      FROM `flights`
		      WHERE (`airline` = 'United Airlines')) AS RHS)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance db2csv/flight_2/0019_dev (4395)
No solution for instance db2csv/flight_2/0047_dev (4396)
Wrong output for base solution in instance db2csv/flight_2/0052_dev (4398)
	EXPECTED OUTPUT ====

	           airline
	0  AirTran Airways
	ACTUAL OUTPUT ====

		SELECT T1.Airline
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline
		GROUP BY T1.Airline
		ORDER BY count(*) DESC
		LIMIT 1

	          airline
	0  Virgin America
Wrong output for ground truth in instance db2csv/flight_2/0052_dev (4398)
No solution for instance db2csv/flight_2/0075_dev (4399)
No solution for instance db2csv/flight_2/0071_dev (4401)
No solution for instance db2csv/flight_2/0069_dev (4402)
Wrong output for fuzzied solution in instance db2csv/flight_2/0004_dev (4403)
	EXPECTED OUTPUT ====

		SELECT Abbreviation
		FROM AIRLINES
		WHERE Airline = "JetBlue Airways"

	   abbreviation
	0    DeltaAmTph
	1     Southwest
	2           UAL
	3           UAL
	4  zWd)zOQkQYjB
	ACTUAL OUTPUT ====

		
		SELECT `abbreviation`
		FROM
		  (SELECT `abbreviation`
		   FROM `airlines`
		   WHERE (`airline` = 'JetBlue Airways') INTERSECT
		     SELECT abbreviation
		     FROM airlines)
		ORDER BY abbreviation

	   abbreviation
	0    DeltaAmTph
	1     Southwest
	2           UAL
	3  zWd)zOQkQYjB
No solution for instance db2csv/flight_2/0076_dev (4405)
No solution for instance db2csv/flight_2/0030_dev (4406)
No solution for instance db2csv/flight_2/0028_dev (4407)
No solution for instance db2csv/flight_2/0059_dev (4408)
Wrong output for base solution in instance db2csv/flight_2/0051_dev (4409)
	EXPECTED OUTPUT ====

	           airline
	0  AirTran Airways
	ACTUAL OUTPUT ====

		SELECT T1.Airline
		FROM AIRLINES AS T1
		JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline
		GROUP BY T1.Airline
		ORDER BY count(*) DESC
		LIMIT 1

	          airline
	0  Virgin America
Wrong output for ground truth in instance db2csv/flight_2/0051_dev (4409)
Wrong output for fuzzied solution in instance db2csv/flight_2/0079_dev (4411)
	EXPECTED OUTPUT ====

		SELECT AirportName
		FROM Airports
		WHERE AirportCode NOT IN
		    (SELECT SourceAirport
		     FROM Flights
		     UNION SELECT DestAirport
		     FROM Flights)

	Empty DataFrame
	Columns: [airportname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT airportname
		FROM airports
		ORDER BY airportname

	        airportname
	0        Anita Bay 
	1   Anita Bay FZjIj
	2           Ashley 
	3  NzFMunicipal UkJ
	4  RDXMunicipal NfP
No solution for instance db2csv/flight_2/0031_dev (4414)
No solution for instance db2csv/flight_2/0072_dev (4415)
No solution for instance db2csv/flight_2/0007_dev (4416)
Wrong output for fuzzied solution in instance db2csv/flight_2/0015_dev (4417)
	EXPECTED OUTPUT ====

		SELECT Airline
		FROM AIRLINES
		WHERE Abbreviation = "UAL"

	                airline
	0         Allegiant Air
	1  Continental Airlines
	2  Continental Airlines
	3            US Airways
	4       US AirwaystbIIj
	ACTUAL OUTPUT ====

		
		SELECT `airline`
		FROM
		  (SELECT `airline`
		   FROM `airlines`
		   WHERE (`abbreviation` = 'UAL') INTERSECT
		     SELECT airline
		     FROM airlines)
		ORDER BY airline

	                airline
	0         Allegiant Air
	1  Continental Airlines
	2            US Airways
	3       US AirwaystbIIj
No solution for instance db2csv/flight_2/0044_dev (4419)
No solution for instance db2csv/flight_2/0056_dev (4421)
No solution for instance db2csv/flight_2/0020_dev (4422)
Wrong output for fuzzied solution in instance db2csv/flight_2/0025_dev (4423)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM FLIGHTS
		WHERE SourceAirport = "APG"

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM flights AS LHS
		      WHERE NOT EXISTS
		          (SELECT 1
		           FROM
		             (SELECT flightno
		              FROM flights INTERSECT SELECT flightno
		              FROM flights) AS RHS
		           WHERE (LHS.flightno = RHS.flightno) )))
		ORDER BY count___

	   count___
	0         0
Wrong output for fuzzied solution in instance db2csv/flight_2/0080_dev (4424)
	EXPECTED OUTPUT ====

		SELECT AirportName
		FROM Airports
		WHERE AirportCode NOT IN
		    (SELECT SourceAirport
		     FROM Flights
		     UNION SELECT DestAirport
		     FROM Flights)

	Empty DataFrame
	Columns: [airportname]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT airportname
		FROM airports
		ORDER BY airportname

	        airportname
	0        Anita Bay 
	1   Anita Bay FZjIj
	2           Ashley 
	3  NzFMunicipal UkJ
	4  RDXMunicipal NfP
No solution for instance db2csv/flight_2/0070_dev (4425)
No solution for instance db2csv/flight_2/0023_dev (4426)
No solution for instance db2csv/flight_2/0050_dev (4427)
No solution for instance db2csv/flight_2/0032_dev (4429)
Error while executing solution for instance db2csv/wta_1/0027_dev (4430)

(sqlite3.OperationalError) Could not decode to UTF-8 column 'last_name' with text 'Treyes Albarrac��N'
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while checking ground truth in instance db2csv/wta_1/0027_dev (4430)
No solution for instance db2csv/wta_1/0060_dev (4431)
Wrong output for fuzzied solution in instance db2csv/wta_1/0021_dev (4432)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM matches
		WHERE YEAR = 2013
		  OR YEAR = 2016

	   count(*)
	0        33
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT *
		      FROM
		        (SELECT tourney_name,
		                winner_id,
		                COUNT() AS n
		         FROM matches
		         GROUP BY tourney_name,
		                  winner_id)
		      WHERE (n < 2013
		             OR n < 2016)))
		ORDER BY count___

	   count___
	0        90
Wrong output for fuzzied solution in instance db2csv/wta_1/0058_dev (4433)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT winner_name)
		FROM matches
		WHERE tourney_name = 'WTA Championships'
		  AND winner_hand = 'L'

	   count(distinct winner_name)
	0                            0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count_distinct_winner_name_`
		FROM
		  (SELECT `tourney_name`,
		          `winner_hand`,
		          COUNT(DISTINCT `winner_name`) AS `n_distinct`
		   FROM `matches`
		   GROUP BY `tourney_name`,
		            `winner_hand`)
		WHERE (`tourney_name` = 'WTA Championships'
		       AND `winner_hand` = 'L')
		ORDER BY count_distinct_winner_name_

	Empty DataFrame
	Columns: [count_distinct_winner_name_]
	Index: []
Wrong output for fuzzied solution in instance db2csv/wta_1/0018_dev (4434)
	EXPECTED OUTPUT ====

		SELECT tourney_name
		FROM matches
		GROUP BY tourney_name
		HAVING count(*) > 10

	  tourney_name
	0    New Haven
	1     Stanford
	ACTUAL OUTPUT ====

		
		SELECT tourney_name
		FROM
		  (SELECT tourney_name,
		          COUNT() AS n
		   FROM matches
		   GROUP BY tourney_name)
		WHERE (n >= 10)
		ORDER BY tourney_name

	      tourney_name
	0  Australian Open
	1        New Haven
	2         Stanford
Wrong output for fuzzied solution in instance db2csv/wta_1/0033_dev (4435)
	EXPECTED OUTPUT ====

		SELECT YEAR
		FROM matches
		GROUP BY YEAR
		ORDER BY count(*) DESC
		LIMIT 1

	   year
	0  2017
	ACTUAL OUTPUT ====

		
		SELECT YEAR
		FROM
		  (SELECT YEAR,
		          n,
		          MAX(n) OVER () AS maxn
		   FROM
		     (SELECT YEAR,
		             COUNT() AS n
		      FROM matches
		      GROUP BY YEAR))
		WHERE (maxn <= n)
		ORDER BY YEAR

	   year
	0  2016
	1  2017
Wrong output for fuzzied solution in instance db2csv/wta_1/0039_dev (4436)
	EXPECTED OUTPUT ====

		SELECT winner_name,
		       loser_name
		FROM matches
		ORDER BY minutes DESC
		LIMIT 1

	          winner_name       loser_name
	0  Ekaterina Makarova  Angelique Kerbe
	ACTUAL OUTPUT ====

		
		SELECT winner_name,
		       loser_name
		FROM
		  (SELECT best_of,
		          draw_size,
		          loser_age,
		          loser_entry,
		          loser_hand,
		          loser_ht,
		          loser_id,
		          loser_ioc,
		          loser_name,
		          loser_rank,
		          loser_rank_points,
		          loser_seed,
		          match_num,
		          minutes,
		          round,
		          score,
		          surface,
		          tourney_date,
		          tourney_id,
		          tourney_level,
		          tourney_name,
		          winner_age,
		          winner_entry,
		          winner_hand,
		          winner_ht,
		          winner_id,
		          winner_ioc,
		          winner_name,
		          winner_rank,
		          winner_rank_points,
		          winner_seed,
		          YEAR,
		          MAX(minutes) OVER () AS maxminutes
		   FROM matches)
		WHERE (maxminutes <= minutes)
		ORDER BY winner_name

	            winner_name                      loser_name
	0     Ekaterina Makarov             Agnieszka Radwanska
	1    Ekaterina Makarova                 Angelique Kerbe
	2         Elena Vesnina  QAyAnastasia PavlyuchenkovaodM
	3  bCrLesia Tsurenkoicr                     Simona Hale
	4      Angelique Kerber         nastasia Pavlyuchenkova
	5         Elena Vesnina           xofleAngelique Kerber
Wrong output for fuzzied solution in instance db2csv/wta_1/0048_dev (4439)
	EXPECTED OUTPUT ====

		SELECT country_code
		FROM players
		GROUP BY country_code
		ORDER BY count(*) DESC
		LIMIT 1

	  country_code
	0          VEN
	ACTUAL OUTPUT ====

		
		SELECT country_code
		FROM
		  (SELECT *
		   FROM
		     (SELECT country_code,
		             COUNT() AS n
		      FROM players
		      GROUP BY country_code) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT country_code,
		                  MAX(n) OVER () AS n
		           FROM
		             (SELECT country_code,
		                     COUNT() AS n
		              FROM players
		              GROUP BY country_code)) AS RHS
		        WHERE (LHS.country_code = RHS.country_code
		               AND LHS.n = RHS.n) ))
		ORDER BY country_code

	  country_code
	0          AUS
	1          CUB
	2          VEN
Wrong output for fuzzied solution in instance db2csv/wta_1/0037_dev (4440)
	EXPECTED OUTPUT ====

		SELECT winner_name
		FROM matches
		WHERE tourney_name = 'Australian Open'
		ORDER BY winner_rank_points DESC
		LIMIT 1

	          winner_name
	0  Elena Vesnina8oCto
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `winner_name`
		FROM
		  (SELECT `best_of`,
		          `draw_size`,
		          `loser_age`,
		          `loser_entry`,
		          `loser_hand`,
		          `loser_ht`,
		          `loser_id`,
		          `loser_ioc`,
		          `loser_name`,
		          `loser_rank`,
		          `loser_rank_points`,
		          `loser_seed`,
		          `match_num`,
		          `minutes`,
		          `round`,
		          `score`,
		          `surface`,
		          `tourney_date`,
		          `tourney_id`,
		          `tourney_level`,
		          `tourney_name`,
		          `winner_age`,
		          `winner_entry`,
		          `winner_hand`,
		          `winner_ht`,
		          `winner_id`,
		          `winner_ioc`,
		          `winner_name`,
		          `winner_rank`,
		          `winner_rank_points`,
		          `winner_seed`,
		          `year`,
		          MAX(`winner_rank_points`) OVER () AS `maxwinner_rank_points`
		   FROM `matches`)
		WHERE (`tourney_name` != 'Australian Open'
		       AND maxwinner_rank_points = winner_rank_points)
		ORDER BY winner_name

	                winner_name
	0     3oGgLAngelique Kerber
	1   Ekaterina MakarovaA7Y(m
	2            Lesia Tsurenko
	3      OgNLesia Tsurenkof0n
	4  XIfEkaterina MakarovaByM
	5    oWKAngelique Kerber2gD
	6       uDlElena VesninaA8v
Wrong output for fuzzied solution in instance db2csv/wta_1/0038_dev (4442)
	EXPECTED OUTPUT ====

		SELECT winner_name
		FROM matches
		WHERE tourney_name = 'Australian Open'
		ORDER BY winner_rank_points DESC
		LIMIT 1

	          winner_name
	0  Elena Vesnina8oCto
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `winner_name`
		FROM
		  (SELECT `best_of`,
		          `draw_size`,
		          `loser_age`,
		          `loser_entry`,
		          `loser_hand`,
		          `loser_ht`,
		          `loser_id`,
		          `loser_ioc`,
		          `loser_name`,
		          `loser_rank`,
		          `loser_rank_points`,
		          `loser_seed`,
		          `match_num`,
		          `minutes`,
		          `round`,
		          `score`,
		          `surface`,
		          `tourney_date`,
		          `tourney_id`,
		          `tourney_level`,
		          `tourney_name`,
		          `winner_age`,
		          `winner_entry`,
		          `winner_hand`,
		          `winner_ht`,
		          `winner_id`,
		          `winner_ioc`,
		          `winner_name`,
		          `winner_rank`,
		          `winner_rank_points`,
		          `winner_seed`,
		          `year`,
		          MAX(`winner_rank_points`) OVER () AS `maxwinner_rank_points`
		   FROM `matches`)
		WHERE (`tourney_name` != 'Australian Open'
		       AND maxwinner_rank_points <= winner_rank_points)
		ORDER BY winner_name

	                winner_name
	0     3oGgLAngelique Kerber
	1   Ekaterina MakarovaA7Y(m
	2            Lesia Tsurenko
	3      OgNLesia Tsurenkof0n
	4  XIfEkaterina MakarovaByM
	5    oWKAngelique Kerber2gD
	6       uDlElena VesninaA8v
Wrong output for base solution in instance db2csv/wta_1/0036_dev (4443)
	EXPECTED OUTPUT ====

	        winner_name  winner_rank_points
	0  Angelique Kerber                7340
	ACTUAL OUTPUT ====

		SELECT winner_name,
		       winner_rank_points
		FROM matches
		GROUP BY winner_name
		ORDER BY count(*) DESC
		LIMIT 1

	        winner_name  winner_rank_points
	0  Angelique Kerber                3715
Wrong output for ground truth in instance db2csv/wta_1/0036_dev (4443)
Wrong output for fuzzied solution in instance db2csv/wta_1/0034_dev (4447)
	EXPECTED OUTPUT ====

		SELECT YEAR
		FROM matches
		GROUP BY YEAR
		ORDER BY count(*) DESC
		LIMIT 1

	   year
	0  2017
	ACTUAL OUTPUT ====

		
		SELECT YEAR
		FROM
		  (SELECT YEAR,
		          n,
		          MAX(n) OVER () AS maxn
		   FROM
		     (SELECT YEAR,
		             COUNT() AS n
		      FROM matches
		      GROUP BY YEAR))
		WHERE (maxn <= n)
		ORDER BY YEAR

	   year
	0  2016
	1  2017
Wrong output for base solution in instance db2csv/wta_1/0061_dev (4448)
	EXPECTED OUTPUT ====

	   count___ hand
	0       487    L
	1       954  NaN
	2      5028    R
	3     14193    U
	ACTUAL OUTPUT ====

		SELECT count(*),
		       hand
		FROM players
		GROUP BY hand

	   count(*) hand
	0       487    L
	1       954     
	2      5028    R
	3     14193    U
Wrong output for ground truth in instance db2csv/wta_1/0061_dev (4448)
Wrong output for base solution in instance db2csv/wta_1/0042_dev (4451)
	EXPECTED OUTPUT ====

	      avg_ranking_ first_name
	0        14.654295     Serena
	1        32.984863      Venus
	2        82.131124         Na
	3        95.034660     Kimiko
	4       114.055714        Jie
	...            ...        ...
	1575   1281.846154  Chanikarn
	1576   1332.073770    Micaela
	1577   1382.153846     Beauty
	1578   1397.500000  Olawaseun
	1579   1493.000000   Damilola
	
	[1580 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT avg(ranking),
		       T1.first_name
		FROM players AS T1
		JOIN rankings AS T2 ON T1.player_id = T2.player_id
		GROUP BY T1.first_name

	      avg(ranking) first_name
	0        14.654295     Serena
	1        32.984863      Venus
	2        82.131124         Na
	3        95.034660     Kimiko
	4       114.055714        Jie
	...            ...        ...
	1575   1281.846154  Chanikarn
	1576   1332.073770    Micaela
	1577   1382.153846     Beauty
	1578   1397.500000  Olawaseun
	1579   1493.000000   Damilola
	
	[1580 rows x 2 columns]
Wrong output for ground truth in instance db2csv/wta_1/0042_dev (4451)
No solution for instance db2csv/wta_1/0024_dev (4452)
Wrong output for fuzzied solution in instance db2csv/wta_1/0017_dev (4453)
	EXPECTED OUTPUT ====

		SELECT tourney_name
		FROM matches
		GROUP BY tourney_name
		HAVING count(*) > 10

	  tourney_name
	0    New Haven
	1     Stanford
	ACTUAL OUTPUT ====

		
		SELECT tourney_name
		FROM
		  (SELECT tourney_name,
		          COUNT() AS n
		   FROM matches
		   GROUP BY tourney_name)
		WHERE (n >= 10)
		ORDER BY tourney_name

	      tourney_name
	0  Australian Open
	1        New Haven
	2         Stanford
Wrong output for base solution in instance db2csv/wta_1/0062_dev (4454)
	EXPECTED OUTPUT ====

	   count___ hand
	0       487    L
	1       954  NaN
	2      5028    R
	3     14193    U
	ACTUAL OUTPUT ====

		SELECT count(*),
		       hand
		FROM players
		GROUP BY hand

	   count(*) hand
	0       487    L
	1       954     
	2      5028    R
	3     14193    U
Wrong output for ground truth in instance db2csv/wta_1/0062_dev (4454)
No solution for instance db2csv/wta_1/0026_dev (4456)
Wrong output for base solution in instance db2csv/wta_1/0035_dev (4458)
	EXPECTED OUTPUT ====

	        winner_name  winner_rank_points
	0  Angelique Kerber                7340
	ACTUAL OUTPUT ====

		SELECT winner_name,
		       winner_rank_points
		FROM matches
		GROUP BY winner_name
		ORDER BY count(*) DESC
		LIMIT 1

	        winner_name  winner_rank_points
	0  Angelique Kerber                3715
Wrong output for ground truth in instance db2csv/wta_1/0035_dev (4458)
Wrong output for base solution in instance db2csv/wta_1/0009_dev (4460)
	EXPECTED OUTPUT ====

	   avg_winner_rank_
	0         13.715827
	ACTUAL OUTPUT ====

		SELECT avg(winner_rank)
		FROM matches

	   avg(winner_rank)
	0         13.715827
Wrong output for ground truth in instance db2csv/wta_1/0009_dev (4460)
No solution for instance db2csv/wta_1/0055_dev (4462)
Wrong output for fuzzied solution in instance db2csv/wta_1/0057_dev (4464)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT winner_name)
		FROM matches
		WHERE tourney_name = 'WTA Championships'
		  AND winner_hand = 'L'

	   count(distinct winner_name)
	0                            0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count_distinct_winner_name_`
		FROM
		  (SELECT `tourney_name`,
		          `winner_hand`,
		          COUNT(DISTINCT `winner_name`) AS `n_distinct`
		   FROM `matches`
		   GROUP BY `tourney_name`,
		            `winner_hand`)
		WHERE (`tourney_name` = 'WTA Championships'
		       AND `winner_hand` = 'L')
		ORDER BY count_distinct_winner_name_

	Empty DataFrame
	Columns: [count_distinct_winner_name_]
	Index: []
Wrong output for base solution in instance db2csv/wta_1/0041_dev (4466)
	EXPECTED OUTPUT ====

	      avg_ranking_ first_name
	0        14.654295     Serena
	1        32.984863      Venus
	2        82.131124         Na
	3        95.034660     Kimiko
	4       114.055714        Jie
	...            ...        ...
	1575   1281.846154  Chanikarn
	1576   1332.073770    Micaela
	1577   1382.153846     Beauty
	1578   1397.500000  Olawaseun
	1579   1493.000000   Damilola
	
	[1580 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT avg(ranking),
		       T1.first_name
		FROM players AS T1
		JOIN rankings AS T2 ON T1.player_id = T2.player_id
		GROUP BY T1.first_name

	      avg(ranking) first_name
	0        14.654295     Serena
	1        32.984863      Venus
	2        82.131124         Na
	3        95.034660     Kimiko
	4       114.055714        Jie
	...            ...        ...
	1575   1281.846154  Chanikarn
	1576   1332.073770    Micaela
	1577   1382.153846     Beauty
	1578   1397.500000  Olawaseun
	1579   1493.000000   Damilola
	
	[1580 rows x 2 columns]
Wrong output for ground truth in instance db2csv/wta_1/0041_dev (4466)
No solution for instance db2csv/wta_1/0019_dev (4467)
Wrong output for fuzzied solution in instance db2csv/wta_1/0047_dev (4468)
	EXPECTED OUTPUT ====

		SELECT country_code
		FROM players
		GROUP BY country_code
		ORDER BY count(*) DESC
		LIMIT 1

	  country_code
	0          VEN
	ACTUAL OUTPUT ====

		
		SELECT country_code
		FROM
		  (SELECT country_code,
		          n,
		          MAX(n) OVER () AS maxn
		   FROM
		     (SELECT country_code,
		             COUNT() AS n
		      FROM players
		      GROUP BY country_code))
		WHERE (maxn <= n)
		ORDER BY country_code

	  country_code
	0          AUS
	1          CUB
	2          VEN
Wrong output for base solution in instance db2csv/wta_1/0006_dev (4469)
	EXPECTED OUTPUT ====

	     first_name  birth_date
	0       Pauline  19190806.0
	1      Gertrude  19230908.0
	2         Betty  19250415.0
	3         Doris  19250620.0
	4       Dorothy  19250703.0
	...         ...         ...
	2212        NaN         NaN
	2213        NaN         NaN
	2214        NaN         NaN
	2215        NaN         NaN
	2216        NaN         NaN
	
	[2217 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT first_name,
		       birth_date
		FROM players
		WHERE country_code = 'USA'

	     first_name birth_date
	0       Pauline   19190806
	1      Gertrude   19230908
	2         Betty   19250415
	3         Doris   19250620
	4       Dorothy   19250703
	...         ...        ...
	2212   Victoria           
	2213       Vija           
	2214   Virginia           
	2215      Wendy           
	2216      Wendy           
	
	[2217 rows x 2 columns]
Wrong output for ground truth in instance db2csv/wta_1/0006_dev (4469)
Wrong output for fuzzied solution in instance db2csv/wta_1/0040_dev (4471)
	EXPECTED OUTPUT ====

		SELECT winner_name,
		       loser_name
		FROM matches
		ORDER BY minutes DESC
		LIMIT 1

	          winner_name       loser_name
	0  Ekaterina Makarova  Angelique Kerbe
	ACTUAL OUTPUT ====

		
		SELECT winner_name,
		       loser_name
		FROM
		  (SELECT best_of,
		          draw_size,
		          loser_age,
		          loser_entry,
		          loser_hand,
		          loser_ht,
		          loser_id,
		          loser_ioc,
		          loser_name,
		          loser_rank,
		          loser_rank_points,
		          loser_seed,
		          match_num,
		          minutes,
		          round,
		          score,
		          surface,
		          tourney_date,
		          tourney_id,
		          tourney_level,
		          tourney_name,
		          winner_age,
		          winner_entry,
		          winner_hand,
		          winner_ht,
		          winner_id,
		          winner_ioc,
		          winner_name,
		          winner_rank,
		          winner_rank_points,
		          winner_seed,
		          YEAR,
		          MAX(minutes) OVER () AS maxminutes
		   FROM matches)
		WHERE (maxminutes <= minutes)
		ORDER BY winner_name

	            winner_name                      loser_name
	0     Ekaterina Makarov             Agnieszka Radwanska
	1    Ekaterina Makarova                 Angelique Kerbe
	2         Elena Vesnina  QAyAnastasia PavlyuchenkovaodM
	3  bCrLesia Tsurenkoicr                     Simona Hale
	4      Angelique Kerber         nastasia Pavlyuchenkova
	5         Elena Vesnina           xofleAngelique Kerber
Error while executing solution for instance db2csv/wta_1/0028_dev (4474)

(sqlite3.OperationalError) Could not decode to UTF-8 column 'last_name' with text 'Treyes Albarrac��N'
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while checking ground truth in instance db2csv/wta_1/0028_dev (4474)
No solution for instance db2csv/wta_1/0059_dev (4475)
Wrong output for fuzzied solution in instance db2csv/wta_1/0022_dev (4477)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM matches
		WHERE YEAR = 2013
		  OR YEAR = 2016

	   count(*)
	0        33
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM matches
		WHERE (YEAR = 2013
		       OR YEAR <= 2016)
		ORDER BY count___

	   count___
	0        82
Error while executing solution for instance db2csv/wta_1/0013_dev (4478)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT country_code) OVER () AS count_distinct_country_code_
FROM players
ORDER BY count_distinct_country_code_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance db2csv/wta_1/0014_dev (4479)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT country_code) OVER () AS count_distinct_country_code_
FROM players
ORDER BY count_distinct_country_code_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance db2csv/wta_1/0031_dev (4480)
Wrong output for base solution in instance db2csv/wta_1/0010_dev (4483)
	EXPECTED OUTPUT ====

	   avg_winner_rank_
	0         13.715827
	ACTUAL OUTPUT ====

		SELECT avg(winner_rank)
		FROM matches

	   avg(winner_rank)
	0         13.715827
Wrong output for ground truth in instance db2csv/wta_1/0010_dev (4483)
No solution for instance db2csv/wta_1/0056_dev (4485)
No solution for instance db2csv/wta_1/0020_dev (4486)
No solution for instance db2csv/wta_1/0025_dev (4487)
No solution for instance db2csv/wta_1/0023_dev (4488)
Wrong output for base solution in instance db2csv/wta_1/0005_dev (4490)
	EXPECTED OUTPUT ====

	     first_name  birth_date
	0       Pauline  19190806.0
	1      Gertrude  19230908.0
	2         Betty  19250415.0
	3         Doris  19250620.0
	4       Dorothy  19250703.0
	...         ...         ...
	2212        NaN         NaN
	2213        NaN         NaN
	2214        NaN         NaN
	2215        NaN         NaN
	2216        NaN         NaN
	
	[2217 rows x 2 columns]
	ACTUAL OUTPUT ====

		SELECT first_name,
		       birth_date
		FROM players
		WHERE country_code = 'USA'

	     first_name birth_date
	0       Pauline   19190806
	1      Gertrude   19230908
	2         Betty   19250415
	3         Doris   19250620
	4       Dorothy   19250703
	...         ...        ...
	2212   Victoria           
	2213       Vija           
	2214   Virginia           
	2215      Wendy           
	2216      Wendy           
	
	[2217 rows x 2 columns]
Wrong output for ground truth in instance db2csv/wta_1/0005_dev (4490)
No solution for instance db2csv/wta_1/0032_dev (4491)
Wrong output for fuzzied solution in instance db2csv/singer/0021_dev (4493)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.Name
		FROM singer AS T1
		JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID
		WHERE T2.Sales > 300000

	              name
	0  Jacqueline Mars
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.singer_id AS singer_id,
		          LHS.name AS name,
		          LHS.birth_year AS birth_year,
		          LHS.net_worth_millions AS net_worth_millions,
		          LHS.citizenship AS citizenship,
		          RHS.song_id AS song_id,
		          RHS.title AS title,
		          RHS.sales AS sales,
		          RHS.highest_position AS highest_position
		   FROM singer AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM song
		      WHERE (sales >= 300000.0)) AS RHS ON (LHS.singer_id = RHS.singer_id))
		ORDER BY name

	              name
	0    Gina Rinehart
	1  Jacqueline Mars
Wrong output for fuzzied solution in instance db2csv/singer/0029_dev (4495)
	EXPECTED OUTPUT ====

		SELECT Citizenship
		FROM singer
		WHERE Birth_Year < 1945 INTERSECT
		  SELECT Citizenship
		  FROM singer WHERE Birth_Year > 1955

	  citizenship
	0       Chile
	ACTUAL OUTPUT ====

		
		SELECT citizenship_other AS citizenship
		FROM
		  (SELECT LHS.singer_id AS singer_id,
		          LHS.name AS name,
		          LHS.birth_year AS birth_year,
		          LHS.net_worth_millions AS net_worth_millions,
		          LHS.citizenship AS citizenship,
		          RHS.singer_id AS singer_id_other,
		          RHS.name AS name_other,
		          RHS.birth_year AS birth_year_other,
		          RHS.net_worth_millions AS net_worth_millions_other,
		          RHS.citizenship AS citizenship_other
		   FROM singer AS LHS
		   CROSS JOIN
		     (SELECT LHS.singer_id AS singer_id,
		             LHS.name AS name,
		             LHS.birth_year AS birth_year,
		             LHS.net_worth_millions AS net_worth_millions,
		             LHS.citizenship AS citizenship
		      FROM
		        (SELECT *
		         FROM singer
		         WHERE (birth_year >= 1945.0
		                AND birth_year > 1955.0)) AS LHS
		      LEFT JOIN singer AS RHS ON (LHS.singer_id = RHS.singer_id
		                                     AND LHS.name = RHS.name
		                                     AND LHS.birth_year = RHS.birth_year
		                                     AND LHS.net_worth_millions = RHS.net_worth_millions
		                                     AND LHS.citizenship = RHS.citizenship)) AS RHS)
		WHERE (birth_year > birth_year_other)
		ORDER BY citizenship

	  citizenship
	0        Chil
	1        Chil
	2        Chil
	3       Chile
	4       Chile
	5       Chile
Wrong output for fuzzied solution in instance db2csv/singer/0012_dev (4496)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM singer
		ORDER BY Net_Worth_Millions DESC
		LIMIT 1

	           name
	0  Gina Rinehar
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.singer_id AS singer_id,
		          LHS.name AS name,
		          LHS.birth_year AS birth_year,
		          LHS.net_worth_millions AS net_worth_millions,
		          LHS.citizenship AS citizenship,
		          LHS.maxnet_worth_millions AS maxnet_worth_millions,
		          RHS.singer_id AS singer_id_other,
		          RHS.name AS name_other,
		          RHS.net_worth_millions AS net_worth_millions_other,
		          RHS.citizenship AS citizenship_other
		   FROM
		     (SELECT singer_id,
		             name,
		             birth_year,
		             net_worth_millions,
		             citizenship,
		             MAX(net_worth_millions) OVER () AS maxnet_worth_millions
		      FROM singer) AS LHS
		   INNER JOIN
		     (SELECT singer_id,
		             name,
		             birth_year,
		             net_worth_millions,
		             citizenship,
		             MAX(net_worth_millions) OVER () AS maxnet_worth_millions
		      FROM singer) AS RHS ON (LHS.birth_year = RHS.birth_year
		                                 AND LHS.net_worth_millions = RHS.maxnet_worth_millions))
		ORDER BY name

	                  name
	0         Gina Rinehar
	1  X1ZIris FontbonaRi(
	2  X1ZIris FontbonaRi(
Wrong output for fuzzied solution in instance db2csv/singer/0001_dev (4498)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM singer

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT birth_year,
		             COUNT() AS n
		      FROM singer
		      GROUP BY birth_year))
		ORDER BY count___

	   count___
	0         6
Wrong output for fuzzied solution in instance db2csv/singer/0011_dev (4499)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM singer
		ORDER BY Net_Worth_Millions DESC
		LIMIT 1

	           name
	0  Gina Rinehar
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.singer_id AS singer_id,
		          LHS.name AS name,
		          LHS.birth_year AS birth_year,
		          LHS.net_worth_millions AS net_worth_millions,
		          LHS.citizenship AS citizenship,
		          LHS.maxnet_worth_millions AS maxnet_worth_millions,
		          RHS.singer_id AS singer_id_other,
		          RHS.name AS name_other,
		          RHS.net_worth_millions AS net_worth_millions_other,
		          RHS.citizenship AS citizenship_other
		   FROM
		     (SELECT singer_id,
		             name,
		             birth_year,
		             net_worth_millions,
		             citizenship,
		             MAX(net_worth_millions) OVER () AS maxnet_worth_millions
		      FROM singer) AS LHS
		   INNER JOIN
		     (SELECT singer_id,
		             name,
		             birth_year,
		             net_worth_millions,
		             citizenship,
		             MAX(net_worth_millions) OVER () AS maxnet_worth_millions
		      FROM singer) AS RHS ON (LHS.birth_year = RHS.birth_year
		                                 AND LHS.net_worth_millions = RHS.maxnet_worth_millions))
		ORDER BY name

	                  name
	0         Gina Rinehar
	1  X1ZIris FontbonaRi(
	2  X1ZIris FontbonaRi(
Wrong output for fuzzied solution in instance db2csv/singer/0016_dev (4503)
	EXPECTED OUTPUT ====

		select citizenship
		from singer
		group by citizenship
		order by count(*) desc
		limit 1

	     citizenship
	0  United States
	ACTUAL OUTPUT ====

		
		SELECT citizenship
		FROM
		  (SELECT LHS.citizenship AS citizenship,
		          LHS.n AS n
		   FROM
		     (SELECT citizenship,
		             COUNT() AS n
		      FROM singer
		      GROUP BY citizenship) AS LHS
		   INNER JOIN
		     (SELECT citizenship,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT citizenship,
		                COUNT() AS n
		         FROM singer
		         GROUP BY citizenship)) AS RHS ON (LHS.citizenship = RHS.citizenship
		                                           AND LHS.n = RHS.n))
		ORDER BY citizenship

	     citizenship
	0        Germany
	1  United States
Wrong output for fuzzied solution in instance db2csv/singer/0009_dev (4504)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM singer
		WHERE Birth_Year = 1948
		  OR Birth_Year = 1949

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.singer_id AS singer_id,
		          LHS.name AS name,
		          LHS.birth_year AS birth_year,
		          LHS.net_worth_millions AS net_worth_millions,
		          LHS.citizenship AS citizenship,
		          RHS.singer_id AS singer_id_other,
		          RHS.name AS name_other,
		          RHS.birth_year AS birth_year_other,
		          RHS.citizenship AS citizenship_other
		   FROM
		     (SELECT *
		      FROM singer
		      WHERE (birth_year >= 1948.0
		             AND birth_year <= 1949.0)) AS LHS
		   INNER JOIN singer AS RHS ON (LHS.net_worth_millions = RHS.net_worth_millions))
		ORDER BY name

	              name
	0  Jacqueline Mars
Wrong output for fuzzied solution in instance db2csv/singer/0002_dev (4505)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM singer

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM
		     (SELECT birth_year,
		             COUNT() AS n
		      FROM singer
		      GROUP BY birth_year))
		ORDER BY count___

	   count___
	0         6
Wrong output for fuzzied solution in instance db2csv/singer/0030_dev (4510)
	EXPECTED OUTPUT ====

		SELECT Citizenship
		FROM singer
		WHERE Birth_Year < 1945 INTERSECT
		  SELECT Citizenship
		  FROM singer WHERE Birth_Year > 1955

	  citizenship
	0       Chile
	ACTUAL OUTPUT ====

		
		SELECT citizenship
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM singer
		      WHERE (birth_year >= 1945.0
		             OR birth_year <= 1955.0)) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM
		             (SELECT LHS.singer_id AS singer_id,
		                     LHS.name AS name,
		                     LHS.birth_year AS birth_year,
		                     LHS.net_worth_millions AS net_worth_millions,
		                     LHS.citizenship AS citizenship,
		                     RHS.singer_id AS singer_id_other,
		                     RHS.name AS name_other,
		                     RHS.birth_year AS birth_year_other,
		                     RHS.net_worth_millions AS net_worth_millions_other,
		                     RHS.citizenship AS citizenship_other
		              FROM
		                (SELECT *
		                 FROM singer
		                 WHERE (birth_year >= 1945.0
		                        OR birth_year <= 1955.0)) AS LHS
		              CROSS JOIN singer AS RHS)
		           WHERE (birth_year > birth_year_other)) AS RHS
		        WHERE (LHS.birth_year = RHS.birth_year
		               AND LHS.name = RHS.name) ))
		ORDER BY citizenship

	   citizenship
	0  lGeChilejkc
Wrong output for fuzzied solution in instance db2csv/singer/0022_dev (4512)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.Name
		FROM singer AS T1
		JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID
		WHERE T2.Sales > 300000

	              name
	0  Jacqueline Mars
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.singer_id AS singer_id,
		          LHS.name AS name,
		          LHS.birth_year AS birth_year,
		          LHS.net_worth_millions AS net_worth_millions,
		          LHS.citizenship AS citizenship,
		          RHS.song_id AS song_id,
		          RHS.title AS title,
		          RHS.sales AS sales,
		          RHS.highest_position AS highest_position
		   FROM singer AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM song
		      WHERE (sales >= 300000.0)) AS RHS ON (LHS.singer_id = RHS.singer_id))
		ORDER BY name

	              name
	0    Gina Rinehart
	1  Jacqueline Mars
Wrong output for fuzzied solution in instance db2csv/singer/0015_dev (4516)
	EXPECTED OUTPUT ====

		SELECT Citizenship
		FROM singer
		GROUP BY Citizenship
		ORDER BY COUNT(*) DESC
		LIMIT 1

	     citizenship
	0  United States
	ACTUAL OUTPUT ====

		
		SELECT citizenship
		FROM
		  (SELECT LHS.n AS n,
		          RHS.citizenship AS citizenship
		   FROM
		     (SELECT MAX(n) AS n
		      FROM
		        (SELECT citizenship,
		                COUNT() AS n
		         FROM singer
		         GROUP BY citizenship)) AS LHS
		   LEFT JOIN
		     (SELECT citizenship,
		             COUNT() AS n
		      FROM singer
		      GROUP BY citizenship) AS RHS ON (LHS.n = RHS.n))
		ORDER BY citizenship

	     citizenship
	0        Germany
	1  United States
Wrong output for fuzzied solution in instance db2csv/singer/0010_dev (4517)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM singer
		WHERE Birth_Year = 1948
		  OR Birth_Year = 1949

	              name
	0  Jacqueline Mars
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.singer_id AS singer_id,
		          LHS.name AS name,
		          LHS.birth_year AS birth_year,
		          LHS.net_worth_millions AS net_worth_millions,
		          LHS.citizenship AS citizenship,
		          RHS.singer_id AS singer_id_other,
		          RHS.name AS name_other,
		          RHS.birth_year AS birth_year_other,
		          RHS.net_worth_millions AS net_worth_millions_other,
		          RHS.citizenship AS citizenship_other
		   FROM
		     (SELECT *
		      FROM singer
		      WHERE (birth_year >= 1948.0
		             AND birth_year <= 1949.0)) AS LHS
		   CROSS JOIN
		     (SELECT *
		      FROM singer
		      WHERE (birth_year >= 1948.0
		             AND birth_year <= 1949.0)) AS RHS)
		WHERE (birth_year != birth_year_other)
		ORDER BY name

	              name
	0  Jacqueline Mars
	1    hristy Walton
Wrong output for base solution in instance db2csv/tvshow/0060_dev (4523)
	EXPECTED OUTPUT ====

	     id
	0   701
	1   703
	2   705
	3   706
	4   708
	5   709
	6   713
	7   714
	8   715
	9   717
	10  719
	ACTUAL OUTPUT ====

		SELECT id
		FROM TV_Channel
		EXCEPT
		SELECT channel
		FROM cartoon
		WHERE directed_by = 'Ben Jones'

	     id
	0   701
	1   703
	2   705
	3   706
	4   708
	5   709
	6   713
	7   714
	8   715
	9   717
	10  719
Wrong output for ground truth in instance db2csv/tvshow/0060_dev (4523)
Wrong output for fuzzied solution in instance db2csv/tvshow/0021_dev (4524)
	EXPECTED OUTPUT ====

		SELECT LANGUAGE,
		       count(*)
		FROM TV_Channel
		GROUP BY LANGUAGE
		ORDER BY count(*) ASC
		LIMIT 1;

	        language  count(*)
	0  3RdItaliank70         1
	ACTUAL OUTPUT ====

		
		SELECT LANGUAGE,
		       n AS count___
		FROM
		  (SELECT LHS.n AS n,
		          RHS.language AS LANGUAGE
		   FROM
		     (SELECT MIN(n) AS n
		      FROM
		        (SELECT LANGUAGE,
		                COUNT() AS n
		         FROM tv_channel
		         GROUP BY LANGUAGE)) AS LHS
		   LEFT JOIN
		     (SELECT LANGUAGE,
		             COUNT() AS n
		      FROM tv_channel
		      GROUP BY LANGUAGE) AS RHS ON (LHS.n = RHS.n))
		ORDER BY LANGUAGE

	         language  count___
	0   3RdItaliank70         1
	1   6dhEnglishIg7         1
	2    BY3I1Italian         1
	3         English         1
	4    EnglishNCL4R         1
	5    EnglishX2mzI         1
	6    GtWn8Italian         1
	7    Italian4MoFo         1
	8    Italian8oCto         1
	9    ItalianjOXBu         1
	10   LAqWeItalian         1
	11  LNHEnglishSIK         1
	12  QeJEnglishQqv         1
	13  ROWEnglishXLk         1
	14   WiOwsItalian         1
	15  XIfItalianByM         1
	16  bCrItalianicr         1
	17   dkPxCItalian         1
	18  mFFItalian9ow         1
	19  q)kEnglishYHY         1
	20  qY9ItalianDdW         1
	21   swCDhItalian         1
	22  yYbItalianJTH         1
Wrong output for base solution in instance db2csv/tvshow/0058_dev (4525)
	EXPECTED OUTPUT ====

	    id
	0  728
	ACTUAL OUTPUT ====

		SELECT id
		FROM tv_channel
		GROUP BY country
		HAVING count(*) > 2

	    id
	0  700
Wrong output for ground truth in instance db2csv/tvshow/0058_dev (4525)
Wrong output for fuzzied solution in instance db2csv/tvshow/0018_dev (4526)
	EXPECTED OUTPUT ====

		SELECT Package_Option
		FROM TV_Channel
		WHERE series_name = "Sky Radio";

	       package_option
	0        Sky Famiglia
	1        Sky Famiglia
	2   bPoTqSky Famiglia
	3  ruGSky Famigliab1e
	ACTUAL OUTPUT ====

		
		SELECT `package_option`
		FROM
		  (SELECT `package_option`
		   FROM `tv_channel`
		   WHERE (`series_name` = 'Sky Radio') INTERSECT
		     SELECT package_option
		     FROM tv_channel)
		ORDER BY package_option

	       package_option
	0        Sky Famiglia
	1   bPoTqSky Famiglia
	2  ruGSky Famigliab1e
Error while executing solution for instance db2csv/tvshow/0033_dev (4527)

(sqlite3.OperationalError) no such column: col_18_49_rating_share
[SQL: 
SELECT DISTINCT MAX(SHARE) OVER () AS max_share_,
                                minshare AS min_share_
FROM
  (SELECT id,
          episode,
          air_date,
          rating,
          SHARE,
          col_18_49_rating_share,
          viewers_m,
          weekly_rank,
          channel,
          MIN(SHARE) OVER () AS minshare
   FROM tv_series)
ORDER BY max_share_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while executing solution for instance db2csv/tvshow/0039_dev (4528)

(sqlite3.OperationalError) no such column: RHS.col_18_49_rating_share
[SQL: 
SELECT `series_name`
FROM
  (SELECT `LHS`.`id` AS `id`,
          `LHS`.`series_name` AS `series_name`,
          `LHS`.`country` AS `country`,
          `LHS`.`language` AS `language`,
          `LHS`.`content` AS `content`,
          `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
          `LHS`.`hight_definition_tv` AS `hight_definition_tv`,
          `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
          `LHS`.`package_option` AS `package_option`,
          `RHS`.`id` AS `id_other`,
          `RHS`.`episode` AS `episode`,
          `RHS`.`air_date` AS `air_date`,
          `RHS`.`rating` AS `rating`,
          `RHS`.`share` AS `share`,
          `RHS`.`col_18_49_rating_share` AS `col_18_49_rating_share`,
          `RHS`.`viewers_m` AS `viewers_m`,
          `RHS`.`weekly_rank` AS `weekly_rank`
   FROM `tv_channel` AS `LHS`
   INNER JOIN
     (SELECT *
      FROM `tv_series`
      WHERE (`episode` = 'A Love of a Lifetime')) AS RHS ON (LHS.id = RHS.channel))
ORDER BY series_name]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance db2csv/tvshow/0054_dev (4530)
Wrong output for base solution in instance db2csv/tvshow/0048_dev (4531)
	EXPECTED OUTPUT ====

		SELECT package_option,
		       series_name
		FROM TV_Channel
		WHERE hight_definition_TV = "yes"

	          package_option  series_name
	0  Sky Famiglia + Sky HD  MTV Live HD
	ACTUAL OUTPUT ====

		
		SELECT pixel_aspect_ratio_par AS package_option,
		       series_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM tv_channel
		      ORDER BY hight_definition_tv DESC)
		   LIMIT 1)

	  package_option  series_name
	0           16:9  MTV Live HD
Wrong output for fuzzied solution in instance db2csv/tvshow/0037_dev (4532)
	EXPECTED OUTPUT ====

		SELECT Weekly_Rank
		FROM TV_series
		WHERE Episode = "A Love of a Lifetime";

	   weekly_rank
	0        50.00
	1        50.00
	2        50.01
	3        50.02
	4        71.00
	ACTUAL OUTPUT ====

		
		SELECT `weekly_rank`
		FROM
		  (SELECT `weekly_rank`
		   FROM `tv_series`
		   WHERE (`episode` = 'A Love of a Lifetime') INTERSECT
		     SELECT weekly_rank
		     FROM tv_series)
		ORDER BY weekly_rank

	   weekly_rank
	0        50.00
	1        50.01
	2        50.02
	3        71.00
Wrong output for fuzzied solution in instance db2csv/tvshow/0012_dev (4533)
	EXPECTED OUTPUT ====

		SELECT Country,
		       count(*)
		FROM TV_Channel
		GROUP BY Country
		ORDER BY count(*) DESC
		LIMIT 1;

	  country  count(*)
	0  Poland         4
	ACTUAL OUTPUT ====

		
		SELECT country,
		       n AS count___
		FROM
		  (SELECT *
		   FROM
		     (SELECT country,
		             COUNT() AS n
		      FROM tv_channel
		      GROUP BY country) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT country,
		                  MAX(n) OVER () AS n
		           FROM
		             (SELECT country,
		                     COUNT() AS n
		              FROM tv_channel
		              GROUP BY country)) AS RHS
		        WHERE (LHS.country = RHS.country
		               AND LHS.n = RHS.n) ))
		ORDER BY country

	  country  count___
	0    Ital         4
	1   Italy         4
	2  Poland         4
Wrong output for fuzzied solution in instance db2csv/tvshow/0038_dev (4534)
	EXPECTED OUTPUT ====

		SELECT Weekly_Rank
		FROM TV_series
		WHERE Episode = "A Love of a Lifetime";

	   weekly_rank
	0        50.00
	1        50.00
	2        50.01
	3        50.02
	4        71.00
	ACTUAL OUTPUT ====

		
		SELECT `weekly_rank`
		FROM
		  (SELECT `weekly_rank`
		   FROM `tv_series`
		   WHERE (`episode` = 'A Love of a Lifetime') INTERSECT
		     SELECT weekly_rank
		     FROM tv_series)
		ORDER BY weekly_rank

	   weekly_rank
	0        50.00
	1        50.01
	2        50.02
	3        71.00
No solution for instance db2csv/tvshow/0053_dev (4537)
Error while executing solution for instance db2csv/tvshow/0034_dev (4539)

(sqlite3.OperationalError) no such column: col_18_49_rating_share
[SQL: 
SELECT DISTINCT MAX(SHARE) OVER () AS max_share_,
                                minshare AS min_share_
FROM
  (SELECT id,
          episode,
          air_date,
          rating,
          SHARE,
          col_18_49_rating_share,
          viewers_m,
          weekly_rank,
          channel,
          MIN(SHARE) OVER () AS minshare
   FROM tv_series)
ORDER BY max_share_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance db2csv/tvshow/0061_dev (4540)
Wrong output for fuzzied solution in instance db2csv/tvshow/0011_dev (4542)
	EXPECTED OUTPUT ====

		SELECT Country,
		       count(*)
		FROM TV_Channel
		GROUP BY Country
		ORDER BY count(*) DESC
		LIMIT 1;

	  country  count(*)
	0  Poland         4
	ACTUAL OUTPUT ====

		
		SELECT country,
		       n AS count___
		FROM
		  (SELECT LHS.n AS n,
		          RHS.country AS country
		   FROM
		     (SELECT MAX(n) AS n
		      FROM
		        (SELECT country,
		                COUNT() AS n
		         FROM tv_channel
		         GROUP BY country)) AS LHS
		   LEFT JOIN
		     (SELECT country,
		             COUNT() AS n
		      FROM tv_channel
		      GROUP BY country) AS RHS ON (LHS.n = RHS.n))
		ORDER BY country

	  country  count___
	0    Ital         4
	1   Italy         4
	2  Poland         4
Error while executing solution for instance db2csv/tvshow/0042_dev (4543)

(sqlite3.OperationalError) no such column: RHS.col_18_49_rating_share
[SQL: 
SELECT `episode`
FROM
  (SELECT `LHS`.`id` AS `id`,
          `LHS`.`series_name` AS `series_name`,
          `LHS`.`country` AS `country`,
          `LHS`.`language` AS `language`,
          `LHS`.`content` AS `content`,
          `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
          `LHS`.`hight_definition_tv` AS `hight_definition_tv`,
          `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
          `LHS`.`package_option` AS `package_option`,
          `RHS`.`id` AS `id_other`,
          `RHS`.`episode` AS `episode`,
          `RHS`.`air_date` AS `air_date`,
          `RHS`.`rating` AS `rating`,
          `RHS`.`share` AS `share`,
          `RHS`.`col_18_49_rating_share` AS `col_18_49_rating_share`,
          `RHS`.`viewers_m` AS `viewers_m`,
          `RHS`.`weekly_rank` AS `weekly_rank`
   FROM
     (SELECT *
      FROM `tv_channel`
      WHERE (`series_name` = 'Sky Radio')) AS LHS
   INNER JOIN tv_series AS RHS ON (LHS.id = RHS.channel))
ORDER BY episode]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/tvshow/0017_dev (4545)
	EXPECTED OUTPUT ====

		SELECT Package_Option
		FROM TV_Channel
		WHERE series_name = "Sky Radio";

	       package_option
	0        Sky Famiglia
	1        Sky Famiglia
	2   bPoTqSky Famiglia
	3  ruGSky Famigliab1e
	ACTUAL OUTPUT ====

		
		SELECT `package_option`
		FROM
		  (SELECT `package_option`
		   FROM `tv_channel`
		   WHERE (`series_name` = 'Sky Radio') INTERSECT
		     SELECT package_option
		     FROM tv_channel)
		ORDER BY package_option

	       package_option
	0        Sky Famiglia
	1   bPoTqSky Famiglia
	2  ruGSky Famigliab1e
No solution for instance db2csv/tvshow/0062_dev (4546)
Wrong output for base solution in instance db2csv/tvshow/0045_dev (4549)
	EXPECTED OUTPUT ====

	   production_code  channel
	0            102.0      701
	ACTUAL OUTPUT ====

		select production_code,
		       channel
		from cartoon
		order by original_air_date desc
		limit 1

	   production_code channel
	0            102.0     701
Wrong output for ground truth in instance db2csv/tvshow/0045_dev (4549)
Wrong output for base solution in instance db2csv/tvshow/0055_dev (4554)
	EXPECTED OUTPUT ====

	   pixel_aspect_ratio_par country
	0                     NaT   Italy
	1                     NaT   Italy
	2                     NaT   Italy
	3                     NaT   Italy
	4                     NaT   Italy
	5                     NaT   Italy
	6                     NaT   Italy
	7                     NaT   Italy
	8                     NaT   Italy
	9                     NaT   Italy
	10                    NaT   Italy
	11                    NaT   Italy
	ACTUAL OUTPUT ====

		SELECT Pixel_aspect_ratio_PAR,
		       country
		FROM tv_channel
		WHERE LANGUAGE != 'English'

	   pixel_aspect_ratio_par country
	0                    16:9   Italy
	1                    16:9   Italy
	2                    16:9   Italy
	3                     4:3   Italy
	4                     4:3   Italy
	5                     4:3   Italy
	6                     4:3   Italy
	7                     4:3   Italy
	8                     4:3   Italy
	9              4:3 / 16:9   Italy
	10             4:3 / 16:9   Italy
	11             4:3 / 16:9   Italy
Wrong output for ground truth in instance db2csv/tvshow/0055_dev (4554)
Wrong output for base solution in instance db2csv/tvshow/0046_dev (4555)
	EXPECTED OUTPUT ====

	   production_code  channel
	0            102.0      701
	ACTUAL OUTPUT ====

		select production_code,
		       channel
		from cartoon
		order by original_air_date desc
		limit 1

	   production_code channel
	0            102.0     701
Wrong output for ground truth in instance db2csv/tvshow/0046_dev (4555)
Wrong output for base solution in instance db2csv/tvshow/0057_dev (4556)
	EXPECTED OUTPUT ====

	    id
	0  728
	ACTUAL OUTPUT ====

		SELECT id
		FROM tv_channel
		GROUP BY country
		HAVING count(*) > 2

	    id
	0  700
Wrong output for ground truth in instance db2csv/tvshow/0057_dev (4556)
Error while executing solution for instance db2csv/tvshow/0041_dev (4558)

(sqlite3.OperationalError) no such column: RHS.col_18_49_rating_share
[SQL: 
SELECT `episode`
FROM
  (SELECT `LHS`.`id` AS `id`,
          `LHS`.`series_name` AS `series_name`,
          `LHS`.`country` AS `country`,
          `LHS`.`language` AS `language`,
          `LHS`.`content` AS `content`,
          `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
          `LHS`.`hight_definition_tv` AS `hight_definition_tv`,
          `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
          `LHS`.`package_option` AS `package_option`,
          `RHS`.`id` AS `id_other`,
          `RHS`.`episode` AS `episode`,
          `RHS`.`air_date` AS `air_date`,
          `RHS`.`rating` AS `rating`,
          `RHS`.`share` AS `share`,
          `RHS`.`col_18_49_rating_share` AS `col_18_49_rating_share`,
          `RHS`.`viewers_m` AS `viewers_m`,
          `RHS`.`weekly_rank` AS `weekly_rank`
   FROM
     (SELECT *
      FROM `tv_channel`
      WHERE (`series_name` = 'Sky Radio')) AS LHS
   INNER JOIN tv_series AS RHS ON (LHS.id = RHS.channel))
ORDER BY episode]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/tvshow/0019_dev (4559)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM TV_Channel
		WHERE LANGUAGE = "English";

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `language`,
		          COUNT() AS `n`
		   FROM `tv_channel`
		   GROUP BY `language`)
		WHERE (`language` = 'English')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for base solution in instance db2csv/tvshow/0047_dev (4560)
	EXPECTED OUTPUT ====

		SELECT package_option,
		       series_name
		FROM TV_Channel
		WHERE hight_definition_TV = "yes"

	          package_option  series_name
	0  Sky Famiglia + Sky HD  MTV Live HD
	ACTUAL OUTPUT ====

		
		SELECT pixel_aspect_ratio_par AS package_option,
		       series_name
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM tv_channel
		      ORDER BY hight_definition_tv DESC)
		   LIMIT 1)

	  package_option  series_name
	0           16:9  MTV Live HD
Wrong output for base solution in instance db2csv/tvshow/0006_dev (4561)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Cartoon
		WHERE Written_by = "Joseph Kuhr";

	   count(*)
	0         2
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`original_air_date` AS `original_air_date`,
		          `LHS`.`written_by` AS `written_by`,
		          `LHS`.`n` AS `n`,
		          `RHS`.`id` AS `id`,
		          `RHS`.`title` AS `title`,
		          `RHS`.`directed_by` AS `directed_by`,
		          `RHS`.`production_code` AS `production_code`,
		          `RHS`.`channel` AS `channel`
		   FROM
		     (SELECT `original_air_date`,
		             `written_by`,
		             COUNT() AS `n`
		      FROM `cartoon`
		      WHERE (`written_by` = 'Joseph Kuhr')
		      GROUP BY `original_air_date`,
		               `written_by`) AS `LHS`
		   LEFT JOIN
		     (SELECT *
		      FROM `cartoon`
		      WHERE (`written_by` = 'Joseph Kuhr')) AS RHS ON (LHS.original_air_date = RHS.original_air_date
		                                                       AND LHS.written_by = RHS.written_by))
		ORDER BY count___

	   count___
	0         1
	1         1
No solution for instance db2csv/tvshow/0052_dev (4562)
Error while executing solution for instance db2csv/tvshow/0040_dev (4563)

(sqlite3.OperationalError) no such column: RHS.col_18_49_rating_share
[SQL: 
SELECT `series_name`
FROM
  (SELECT `LHS`.`id` AS `id`,
          `LHS`.`series_name` AS `series_name`,
          `LHS`.`country` AS `country`,
          `LHS`.`language` AS `language`,
          `LHS`.`content` AS `content`,
          `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
          `LHS`.`hight_definition_tv` AS `hight_definition_tv`,
          `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
          `LHS`.`package_option` AS `package_option`,
          `RHS`.`id` AS `id_other`,
          `RHS`.`episode` AS `episode`,
          `RHS`.`air_date` AS `air_date`,
          `RHS`.`rating` AS `rating`,
          `RHS`.`share` AS `share`,
          `RHS`.`col_18_49_rating_share` AS `col_18_49_rating_share`,
          `RHS`.`viewers_m` AS `viewers_m`,
          `RHS`.`weekly_rank` AS `weekly_rank`
   FROM `tv_channel` AS `LHS`
   INNER JOIN
     (SELECT *
      FROM `tv_series`
      WHERE (`episode` = 'A Love of a Lifetime')) AS RHS ON (LHS.id = RHS.channel))
ORDER BY series_name]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for base solution in instance db2csv/tvshow/0059_dev (4567)
	EXPECTED OUTPUT ====

	     id
	0   701
	1   703
	2   705
	3   706
	4   708
	5   709
	6   713
	7   714
	8   715
	9   717
	10  719
	ACTUAL OUTPUT ====

		SELECT id
		FROM TV_Channel
		EXCEPT
		SELECT channel
		FROM cartoon
		WHERE directed_by = 'Ben Jones'

	     id
	0   701
	1   703
	2   705
	3   706
	4   708
	5   709
	6   713
	7   714
	8   715
	9   717
	10  719
Wrong output for ground truth in instance db2csv/tvshow/0059_dev (4567)
Wrong output for base solution in instance db2csv/tvshow/0051_dev (4568)
	EXPECTED OUTPUT ====

		SELECT country
		FROM TV_Channel
		EXCEPT
		SELECT T1.country
		FROM TV_Channel AS T1
		JOIN cartoon AS T2 ON T1.id = T2.Channel
		WHERE T2.written_by = 'Todd Casey'

	  country
	0  Poland
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `pixel_aspect_ratio_par` AS `country`
		FROM
		  (SELECT *
		   FROM `tv_channel` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `cartoon`
		           WHERE (`written_by` = 'Todd Casey')) AS RHS
		        WHERE (LHS.id = RHS.id) ))
		ORDER BY country

	      country
	0        16:9
	1         4:3
	2  4:3 / 16:9
Wrong output for fuzzied solution in instance db2csv/tvshow/0022_dev (4569)
	EXPECTED OUTPUT ====

		SELECT LANGUAGE,
		       count(*)
		FROM TV_Channel
		GROUP BY LANGUAGE
		ORDER BY count(*) ASC
		LIMIT 1;

	        language  count(*)
	0  3RdItaliank70         1
	ACTUAL OUTPUT ====

		
		SELECT LANGUAGE,
		       n AS count___
		FROM
		  (SELECT LHS.n AS n,
		          RHS.language AS LANGUAGE
		   FROM
		     (SELECT MIN(n) AS n
		      FROM
		        (SELECT LANGUAGE,
		                COUNT() AS n
		         FROM tv_channel
		         GROUP BY LANGUAGE)) AS LHS
		   LEFT JOIN
		     (SELECT LANGUAGE,
		             COUNT() AS n
		      FROM tv_channel
		      GROUP BY LANGUAGE) AS RHS ON (LHS.n = RHS.n))
		ORDER BY LANGUAGE

	         language  count___
	0   3RdItaliank70         1
	1   6dhEnglishIg7         1
	2    BY3I1Italian         1
	3         English         1
	4    EnglishNCL4R         1
	5    EnglishX2mzI         1
	6    GtWn8Italian         1
	7    Italian4MoFo         1
	8    Italian8oCto         1
	9    ItalianjOXBu         1
	10   LAqWeItalian         1
	11  LNHEnglishSIK         1
	12  QeJEnglishQqv         1
	13  ROWEnglishXLk         1
	14   WiOwsItalian         1
	15  XIfItalianByM         1
	16  bCrItalianicr         1
	17   dkPxCItalian         1
	18  mFFItalian9ow         1
	19  q)kEnglishYHY         1
	20  qY9ItalianDdW         1
	21   swCDhItalian         1
	22  yYbItalianJTH         1
Wrong output for fuzzied solution in instance db2csv/tvshow/0013_dev (4570)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT series_name),
		       count(DISTINCT content)
		FROM TV_Channel;

	   count(distinct series_name)  count(distinct content)
	0                           23                       16
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count_distinct_series_name_,
		       COUNT(*) OVER () AS count_distinct_content_
		FROM
		  (SELECT content,
		          pay_per_view_ppv,
		          COUNT(DISTINCT series_name) AS n_distinct
		   FROM tv_channel
		   GROUP BY content,
		            pay_per_view_ppv)
		ORDER BY count_distinct_series_name_

	    count_distinct_series_name_  count_distinct_content_
	0                             1                       28
	1                             1                       28
	2                             1                       28
	3                             1                       28
	4                             1                       28
	5                             1                       28
	6                             1                       28
	7                             1                       28
	8                             1                       28
	9                             1                       28
	10                            1                       28
	11                            1                       28
	12                            1                       28
	13                            1                       28
	14                            1                       28
	15                            1                       28
	16                            1                       28
	17                            1                       28
	18                            1                       28
	19                            1                       28
	20                            1                       28
	21                            1                       28
	22                            1                       28
	23                            1                       28
	24                            2                       28
	25                            4                       28
	26                            5                       28
	27                           10                       28
Wrong output for fuzzied solution in instance db2csv/tvshow/0014_dev (4571)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT series_name),
		       count(DISTINCT content)
		FROM TV_Channel;

	   count(distinct series_name)  count(distinct content)
	0                           23                       16
	ACTUAL OUTPUT ====

		
		SELECT n_distinct AS count_distinct_series_name_,
		       COUNT(*) OVER () AS count_distinct_content_
		FROM
		  (SELECT content,
		          pay_per_view_ppv,
		          COUNT(DISTINCT series_name) AS n_distinct
		   FROM tv_channel
		   GROUP BY content,
		            pay_per_view_ppv)
		ORDER BY count_distinct_series_name_

	    count_distinct_series_name_  count_distinct_content_
	0                             1                       28
	1                             1                       28
	2                             1                       28
	3                             1                       28
	4                             1                       28
	5                             1                       28
	6                             1                       28
	7                             1                       28
	8                             1                       28
	9                             1                       28
	10                            1                       28
	11                            1                       28
	12                            1                       28
	13                            1                       28
	14                            1                       28
	15                            1                       28
	16                            1                       28
	17                            1                       28
	18                            1                       28
	19                            1                       28
	20                            1                       28
	21                            1                       28
	22                            1                       28
	23                            1                       28
	24                            2                       28
	25                            4                       28
	26                            5                       28
	27                           10                       28
Wrong output for base solution in instance db2csv/tvshow/0031_dev (4572)
	EXPECTED OUTPUT ====

	                episode  rating
	0  A Love of a Lifetime     5.8
	1        Friendly Skies     5.3
	2            Game Three     4.4
	ACTUAL OUTPUT ====

		SELECT Episode,
		       Rating
		FROM TV_series
		ORDER BY Rating DESC
		LIMIT 3;

	                episode rating
	0  A Love of a Lifetime    5.8
	1        Friendly Skies    5.3
	2            Game Three    4.4
Wrong output for ground truth in instance db2csv/tvshow/0031_dev (4572)
Wrong output for base solution in instance db2csv/tvshow/0056_dev (4577)
	EXPECTED OUTPUT ====

	   pixel_aspect_ratio_par country
	0                     NaT   Italy
	1                     NaT   Italy
	2                     NaT   Italy
	3                     NaT   Italy
	4                     NaT   Italy
	5                     NaT   Italy
	6                     NaT   Italy
	7                     NaT   Italy
	8                     NaT   Italy
	9                     NaT   Italy
	10                    NaT   Italy
	11                    NaT   Italy
	ACTUAL OUTPUT ====

		SELECT Pixel_aspect_ratio_PAR,
		       country
		FROM tv_channel
		WHERE LANGUAGE != 'English'

	   pixel_aspect_ratio_par country
	0                    16:9   Italy
	1                    16:9   Italy
	2                    16:9   Italy
	3                     4:3   Italy
	4                     4:3   Italy
	5                     4:3   Italy
	6                     4:3   Italy
	7                     4:3   Italy
	8                     4:3   Italy
	9              4:3 / 16:9   Italy
	10             4:3 / 16:9   Italy
	11             4:3 / 16:9   Italy
Wrong output for ground truth in instance db2csv/tvshow/0056_dev (4577)
Wrong output for fuzzied solution in instance db2csv/tvshow/0020_dev (4578)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM TV_Channel
		WHERE LANGUAGE = "English";

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT `language`,
		          COUNT() AS `n`
		   FROM `tv_channel`
		   GROUP BY `language`)
		WHERE (`language` = 'English')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for base solution in instance db2csv/tvshow/0025_dev (4579)
	EXPECTED OUTPUT ====

		SELECT T1.series_name
		FROM TV_Channel AS T1
		JOIN Cartoon AS T2 ON T1.id = T2.Channel
		WHERE T2.Title = "The Rise of the Blue Beetle!";

	  series_name
	0   Sky Radio
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `pixel_aspect_ratio_par` AS `series_name`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`series_name` AS `series_name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`language` AS `language`,
		          `LHS`.`content` AS `content`,
		          `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
		          `LHS`.`hight_definition_tv` AS `hight_definition_tv`,
		          `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
		          `LHS`.`package_option` AS `package_option`,
		          `RHS`.`id` AS `id_other`,
		          `RHS`.`title` AS `title`,
		          `RHS`.`directed_by` AS `directed_by`,
		          `RHS`.`written_by` AS `written_by`,
		          `RHS`.`original_air_date` AS `original_air_date`,
		          `RHS`.`production_code` AS `production_code`
		   FROM `tv_channel` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `cartoon`
		      WHERE (`title` != 'The Rise of the Blue Beetle!')) AS RHS ON (LHS.id = RHS.channel))
		ORDER BY series_name

	  series_name
	0        16:9
	1         4:3
	2  4:3 / 16:9
Wrong output for fuzzied solution in instance db2csv/tvshow/0050_dev (4581)
	EXPECTED OUTPUT ====

		SELECT T1.country
		FROM TV_Channel AS T1
		JOIN cartoon AS T2 ON T1.id = T2.Channel
		WHERE T2.written_by = 'Todd Casey'

	Empty DataFrame
	Columns: [country]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `country`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`series_name` AS `series_name`,
		          `LHS`.`country` AS `country`,
		          `LHS`.`language` AS `language`,
		          `LHS`.`content` AS `content`,
		          `LHS`.`pixel_aspect_ratio_par` AS `pixel_aspect_ratio_par`,
		          `LHS`.`hight_definition_tv` AS `hight_definition_tv`,
		          `LHS`.`pay_per_view_ppv` AS `pay_per_view_ppv`,
		          `LHS`.`package_option` AS `package_option`,
		          `RHS`.`id` AS `id_other`,
		          `RHS`.`title` AS `title`,
		          `RHS`.`directed_by` AS `directed_by`,
		          `RHS`.`written_by` AS `written_by`,
		          `RHS`.`original_air_date` AS `original_air_date`,
		          `RHS`.`production_code` AS `production_code`
		   FROM `tv_channel` AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `cartoon`
		      WHERE (`written_by` != 'Todd Casey')) AS RHS ON (LHS.id = RHS.channel))
		ORDER BY country

	       country
	0  GFRItalyUVZ
	1        Italy
	2   ItalyInAHi
	3       Poland
Wrong output for fuzzied solution in instance db2csv/tvshow/0005_dev (4582)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Cartoon
		WHERE Written_by = "Joseph Kuhr";

	   count(*)
	0         8
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT `title`
		      FROM `cartoon` INTERSECT SELECT `title`
		      FROM `cartoon`
		      WHERE (`written_by` = 'Joseph Kuhr')))
		ORDER BY count___

	   count___
	0         7
Wrong output for base solution in instance db2csv/tvshow/0032_dev (4583)
	EXPECTED OUTPUT ====

	                episode  rating
	0  A Love of a Lifetime     5.8
	1        Friendly Skies     5.3
	2            Game Three     4.4
	ACTUAL OUTPUT ====

		SELECT Episode,
		       Rating
		FROM TV_series
		ORDER BY Rating DESC
		LIMIT 3;

	                episode rating
	0  A Love of a Lifetime    5.8
	1        Friendly Skies    5.3
	2            Game Three    4.4
Wrong output for ground truth in instance db2csv/tvshow/0032_dev (4583)
Wrong output for fuzzied solution in instance db2csv/world_1/0027_dev (4585)
	EXPECTED OUTPUT ====

		SELECT sum(Population)
		FROM city
		WHERE District = "Gelderland"

	   sum(population)
	0           781538
	ACTUAL OUTPUT ====

		
		SELECT `sumpopulation` AS `sum_population_`
		FROM
		  (SELECT `countrycode`,
		          `district`,
		          SUM(`population`) AS `sumpopulation`
		   FROM
		     (SELECT *
		      FROM `city`
		      WHERE (`district` = 'Gelderland'))
		   GROUP BY countrycode,
		            district)
		ORDER BY sum_population_

	   sum_population_
	0           260512
	1           260513
	2           260513
No solution for instance db2csv/world_1/0060_dev (4586)
Wrong output for fuzzied solution in instance db2csv/world_1/0084_dev (4587)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T2.Name
		FROM country AS T1
		JOIN city AS T2 ON T2.CountryCode = T1.Code
		WHERE T1.Continent = 'Europe'
		  AND T1.Name NOT IN
		    (SELECT T3.Name
		     FROM country AS T3
		     JOIN countrylanguage AS T4 ON T3.Code = T4.CountryCode
		     WHERE T4.IsOfficial = 'T'
		       AND T4.Language = 'English')

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `id`,
		                `name`,
		                `countrycode`,
		                `district`,
		                `population`,
		                `name_other`,
		                `continent`,
		                `region`,
		                `surfacearea`,
		                `indepyear`,
		                `population_other`,
		                `lifeexpectancy`,
		                `gnp`,
		                `gnpold`,
		                `localname`,
		                `governmentform`,
		                `headofstate`,
		                `capital`,
		                `code2`,
		                `countrycode` AS `code`
		         FROM
		           (SELECT `LHS`.`id` AS `id`,
		                   `LHS`.`name` AS `name`,
		                   `LHS`.`countrycode` AS `countrycode`,
		                   `LHS`.`district` AS `district`,
		                   `LHS`.`population` AS `population`,
		                   `RHS`.`name` AS `name_other`,
		                   `RHS`.`continent` AS `continent`,
		                   `RHS`.`region` AS `region`,
		                   `RHS`.`surfacearea` AS `surfacearea`,
		                   `RHS`.`indepyear` AS `indepyear`,
		                   `RHS`.`population` AS `population_other`,
		                   `RHS`.`lifeexpectancy` AS `lifeexpectancy`,
		                   `RHS`.`gnp` AS `gnp`,
		                   `RHS`.`gnpold` AS `gnpold`,
		                   `RHS`.`localname` AS `localname`,
		                   `RHS`.`governmentform` AS `governmentform`,
		                   `RHS`.`headofstate` AS `headofstate`,
		                   `RHS`.`capital` AS `capital`,
		                   `RHS`.`code2` AS `code2`
		            FROM `city` AS `LHS`
		            INNER JOIN `country` AS `RHS` ON (`LHS`.`countrycode` = `RHS`.`code`)))
		      WHERE (`continent` = 'Europe')) AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `countrylanguage`
		           WHERE (`isofficial` = 'T'
		                  AND `language` = 'English')) AS RHS
		        WHERE (LHS.countrycode = RHS.countrycode) ))
		ORDER BY name

	                      name
	0  4UH6GSão João de Meriti
	1              p4y lBurgas
No solution for instance db2csv/world_1/0063_dev (4588)
No solution for instance db2csv/world_1/0021_dev (4589)
No solution for instance db2csv/world_1/0103_dev (4590)
No solution for instance db2csv/world_1/0058_dev (4591)
No solution for instance db2csv/world_1/0107_dev (4592)
Wrong output for fuzzied solution in instance db2csv/world_1/0018_dev (4593)
	EXPECTED OUTPUT ====

		SELECT avg(LifeExpectancy)
		FROM country
		WHERE Region = "Central Africa"

	  avg(lifeexpectancy)
	0                None
	ACTUAL OUTPUT ====

		
		SELECT `meanlifeexpectancy` AS `avg_lifeexpectancy_`
		FROM
		  (SELECT `region`,
		          AVG(`lifeexpectancy`) AS `meanlifeexpectancy`
		   FROM
		     (SELECT *
		      FROM `country`
		      WHERE (`region` = 'Central Africa'))
		   GROUP BY region)
		ORDER BY avg_lifeexpectancy_

	Empty DataFrame
	Columns: [avg_lifeexpectancy_]
	Index: []
Wrong output for fuzzied solution in instance db2csv/world_1/0033_dev (4594)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT GovernmentForm)
		FROM country
		WHERE Continent = "Africa"

	   count(distinct governmentform)
	0                               0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count_distinct_governmentform_`
		FROM
		  (SELECT `continent`,
		          COUNT(DISTINCT `governmentform`) AS `n_distinct`
		   FROM `country`
		   GROUP BY `continent`)
		WHERE (`continent` = 'Africa')
		ORDER BY count_distinct_governmentform_

	Empty DataFrame
	Columns: [count_distinct_governmentform_]
	Index: []
Wrong output for base solution in instance db2csv/world_1/0039_dev (4595)
	EXPECTED OUTPUT ====

	     name
	0  Canada
	ACTUAL OUTPUT ====

		SELECT T1.Name
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		GROUP BY T1.Name
		ORDER BY COUNT(*) DESC
		LIMIT 1

	            name
	0  United States
Wrong output for ground truth in instance db2csv/world_1/0039_dev (4595)
Wrong output for fuzzied solution in instance db2csv/world_1/0088_dev (4596)
	EXPECTED OUTPUT ====

		SELECT Name,
		       SurfaceArea,
		       IndepYear
		FROM country
		ORDER BY Population
		LIMIT 1

	            name  surfacearea  indepyear
	0  Norfolk Islan    1267000.0       1960
	ACTUAL OUTPUT ====

		
		SELECT name,
		       surfacearea,
		       indepyear
		FROM
		  (SELECT code,
		          continent AS name,
		          continent,
		          region,
		          surfacearea,
		          indepyear,
		          population,
		          lifeexpectancy,
		          gnp,
		          gnpold,
		          localname,
		          governmentform,
		          headofstate,
		          capital,
		          code2,
		          code_other,
		          continent_other,
		          region_other,
		          surfacearea_other,
		          indepyear_other,
		          population_other,
		          lifeexpectancy_other,
		          gnp_other,
		          gnpold_other,
		          localname_other,
		          governmentform_other,
		          capital_other,
		          code2_other
		   FROM
		     (SELECT LHS.code AS code,
		             LHS.name AS name,
		             LHS.continent AS continent,
		             LHS.region AS region,
		             LHS.surfacearea AS surfacearea,
		             LHS.indepyear AS indepyear,
		             LHS.population AS population,
		             LHS.lifeexpectancy AS lifeexpectancy,
		             LHS.gnp AS gnp,
		             LHS.gnpold AS gnpold,
		             LHS.localname AS localname,
		             LHS.governmentform AS governmentform,
		             LHS.headofstate AS headofstate,
		             LHS.capital AS capital,
		             LHS.code2 AS code2,
		             RHS.code AS code_other,
		             RHS.continent AS continent_other,
		             RHS.region AS region_other,
		             RHS.surfacearea AS surfacearea_other,
		             RHS.indepyear AS indepyear_other,
		             RHS.population AS population_other,
		             RHS.lifeexpectancy AS lifeexpectancy_other,
		             RHS.gnp AS gnp_other,
		             RHS.gnpold AS gnpold_other,
		             RHS.localname AS localname_other,
		             RHS.governmentform AS governmentform_other,
		             RHS.capital AS capital_other,
		             RHS.code2 AS code2_other
		      FROM country AS LHS
		      INNER JOIN country AS RHS ON (LHS.continent = RHS.name
		                                       AND LHS.headofstate = RHS.headofstate)))
		ORDER BY name

	Empty DataFrame
	Columns: [name, surfacearea, indepyear]
	Index: []
No solution for instance db2csv/world_1/0081_dev (4597)
No solution for instance db2csv/world_1/0096_dev (4598)
Wrong output for base solution in instance db2csv/world_1/0029_dev (4599)
	EXPECTED OUTPUT ====

	     avg_gnp_  sum_population_
	0  510.333333           329000
	ACTUAL OUTPUT ====

		SELECT avg(GNP),
		       sum(population)
		FROM country
		WHERE GovernmentForm = "US Territory"

	     avg(gnp)  sum(population)
	0  510.333333           329000
Wrong output for ground truth in instance db2csv/world_1/0029_dev (4599)
No solution for instance db2csv/world_1/0083_dev (4600)
No solution for instance db2csv/world_1/0054_dev (4601)
No solution for instance db2csv/world_1/0048_dev (4602)
No solution for instance db2csv/world_1/0101_dev (4603)
No solution for instance db2csv/world_1/0099_dev (4604)
Error while executing solution for instance db2csv/world_1/0037_dev (4605)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT `n_distinct` AS `count___`
FROM
  (SELECT `code`,
          `name`,
          `continent`,
          `region`,
          `surfacearea`,
          `indepyear`,
          `population`,
          `lifeexpectancy`,
          `gnp`,
          `gnpold`,
          `localname`,
          `governmentform`,
          `headofstate`,
          `capital`,
          `code2`,
          `countrycode`,
          `language`,
          `isofficial`,
          `percentage`,
          COUNT(DISTINCT `isofficial`) OVER () AS `n_distinct`
   FROM
     (SELECT `LHS`.`code` AS `code`,
             `LHS`.`name` AS `name`,
             `LHS`.`continent` AS `continent`,
             `LHS`.`region` AS `region`,
             `LHS`.`surfacearea` AS `surfacearea`,
             `LHS`.`indepyear` AS `indepyear`,
             `LHS`.`population` AS `population`,
             `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
             `LHS`.`gnp` AS `gnp`,
             `LHS`.`gnpold` AS `gnpold`,
             `LHS`.`localname` AS `localname`,
             `LHS`.`governmentform` AS `governmentform`,
             `LHS`.`headofstate` AS `headofstate`,
             `LHS`.`capital` AS `capital`,
             `LHS`.`code2` AS `code2`,
             `RHS`.`countrycode` AS `countrycode`,
             `RHS`.`language` AS `language`,
             `RHS`.`isofficial` AS `isofficial`,
             `RHS`.`percentage` AS `percentage`
      FROM `country` AS `LHS`
      CROSS JOIN `countrylanguage` AS `RHS`))
WHERE (`isofficial` = 'T'
       AND `name` != 'Afghanistan')
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/world_1/0012_dev (4606)
	EXPECTED OUTPUT ====

		SELECT T2.Language
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		WHERE T1.Name = "Aruba"
		ORDER BY Percentage DESC
		LIMIT 1

	       language
	0  c1C3NSlovene
	ACTUAL OUTPUT ====

		
		SELECT `language`
		FROM
		  (SELECT `isofficial`,
		          `language`,
		          MAX(`name`) AS `name`
		   FROM
		     (SELECT `code`,
		             `name`,
		             `continent`,
		             `region`,
		             `surfacearea`,
		             `indepyear`,
		             `population`,
		             `lifeexpectancy`,
		             `gnp`,
		             `gnpold`,
		             `localname`,
		             `governmentform`,
		             `headofstate`,
		             `capital`,
		             `code2`,
		             `language`,
		             `isofficial`,
		             `percentage`,
		             `code` AS `countrycode`
		      FROM
		        (SELECT `LHS`.`code` AS `code`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`continent` AS `continent`,
		                `LHS`.`region` AS `region`,
		                `LHS`.`surfacearea` AS `surfacearea`,
		                `LHS`.`indepyear` AS `indepyear`,
		                `LHS`.`population` AS `population`,
		                `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
		                `LHS`.`gnp` AS `gnp`,
		                `LHS`.`gnpold` AS `gnpold`,
		                `LHS`.`localname` AS `localname`,
		                `LHS`.`governmentform` AS `governmentform`,
		                `LHS`.`headofstate` AS `headofstate`,
		                `LHS`.`capital` AS `capital`,
		                `LHS`.`code2` AS `code2`,
		                `RHS`.`language` AS `language`,
		                `RHS`.`isofficial` AS `isofficial`,
		                `RHS`.`percentage` AS `percentage`
		         FROM `country` AS `LHS`
		         INNER JOIN `countrylanguage` AS `RHS` ON (`LHS`.`code` = `RHS`.`countrycode`)))
		   GROUP BY `isofficial`,
		            `language`)
		WHERE (`name` = 'Aruba')
		ORDER BY LANGUAGE

	           language
	0     7hcSpanishQ8b
	1  Belorussian7ygwO
	2           Slovene
	3      Slovene iwGf
	4      c1C3NSlovene
	5  unnzMMarshallese
No solution for instance db2csv/world_1/0038_dev (4607)
Wrong output for fuzzied solution in instance db2csv/world_1/0036_dev (4608)
	EXPECTED OUTPUT ====

		SELECT COUNT(T2.Language)
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		WHERE T1.Name = "Aruba"

	   count(t2.language)
	0                   6
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count_t2_language_`
		FROM
		  (SELECT `population`,
		          `region`,
		          COUNT(DISTINCT `language`) AS `n_distinct`
		   FROM
		     (SELECT `code`,
		             `name`,
		             `continent`,
		             `region`,
		             `surfacearea`,
		             `indepyear`,
		             `population`,
		             `lifeexpectancy`,
		             `gnp`,
		             `gnpold`,
		             `localname`,
		             `governmentform`,
		             `headofstate`,
		             `capital`,
		             `code2`,
		             `language`,
		             `isofficial`,
		             `percentage`,
		             `code` AS `countrycode`
		      FROM
		        (SELECT `LHS`.`code` AS `code`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`continent` AS `continent`,
		                `LHS`.`region` AS `region`,
		                `LHS`.`surfacearea` AS `surfacearea`,
		                `LHS`.`indepyear` AS `indepyear`,
		                `LHS`.`population` AS `population`,
		                `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
		                `LHS`.`gnp` AS `gnp`,
		                `LHS`.`gnpold` AS `gnpold`,
		                `LHS`.`localname` AS `localname`,
		                `LHS`.`governmentform` AS `governmentform`,
		                `LHS`.`headofstate` AS `headofstate`,
		                `LHS`.`capital` AS `capital`,
		                `LHS`.`code2` AS `code2`,
		                `RHS`.`language` AS `language`,
		                `RHS`.`isofficial` AS `isofficial`,
		                `RHS`.`percentage` AS `percentage`
		         FROM
		           (SELECT *
		            FROM `country`
		            WHERE (`name` = 'Aruba')) AS LHS
		         INNER JOIN countrylanguage AS RHS ON (LHS.code = RHS.countrycode)))
		   GROUP BY population,
		            region)
		ORDER BY count_t2_language_

	   count_t2_language_
	0                   1
	1                   2
	2                   3
Wrong output for fuzzied solution in instance db2csv/world_1/0003_dev (4609)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM country
		WHERE GovernmentForm = "Republic"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `country`
		WHERE (`governmentform` = 'Republic')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance db2csv/world_1/0053_dev (4610)
No solution for instance db2csv/world_1/0104_dev (4611)
Wrong output for fuzzied solution in instance db2csv/world_1/0001_dev (4613)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM country
		WHERE IndepYear > 1950

	                   name
	0   3I5VYNorfolk Island
	1            3lye3Samoa
	2         Cayman Island
	3        Cayman Islands
	4        Cayman Islands
	5        Cayman Islands
	6        Cayman Islands
	7        Cayman Islands
	8        Cayman Islands
	9         Norfolk Islan
	10       Norfolk Island
	11       Norfolk Island
	12       Norfolk Island
	13       Norfolk Island
	14       Norfolk Island
	15                 Samo
	16                Samoa
	17                Samoa
	18      Solomon Islands
	19      Solomon Islands
	20      Solomon Islands
	21  oAIb(Norfolk Island
	22       olomon Islands
	23        orfolk Island
	24        orfolk Island
	25  plUeDCayman Islands
	26  t1pj0Cayman Islands
	27          w()Samoa0gt
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM country
		WHERE (indepyear >= 1950.0)
		ORDER BY name

	                    name
	0    3I5VYNorfolk Island
	1             3lye3Samoa
	2          Cayman Island
	3         Cayman Islands
	4         Cayman Islands
	5         Cayman Islands
	6         Cayman Islands
	7         Cayman Islands
	8         Cayman Islands
	9         Cayman Islands
	10        Cayman Islands
	11         Norfolk Islan
	12        Norfolk Island
	13        Norfolk Island
	14        Norfolk Island
	15        Norfolk Island
	16        Norfolk Island
	17                  Samo
	18                 Samoa
	19                 Samoa
	20                 Samoa
	21       Solomon Islands
	22       Solomon Islands
	23       Solomon Islands
	24   oAIb(Norfolk Island
	25        olomon Islands
	26         orfolk Island
	27         orfolk Island
	28   plUeDCayman Islands
	29   t1pj0Cayman Islands
	30  vaAmhSolomon Islands
	31           w()Samoa0gt
Wrong output for fuzzied solution in instance db2csv/world_1/0105_dev (4614)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM country
		WHERE continent = "Asia"

	   count(*)
	0         9
	ACTUAL OUTPUT ====

		
		SELECT `n` AS `count___`
		FROM
		  (SELECT COUNT() AS `n`
		   FROM
		     (SELECT *
		      FROM
		        (SELECT `continent`,
		                `surfacearea`,
		                COUNT(DISTINCT `continent`) AS `n_distinct`
		         FROM `country`
		         GROUP BY `continent`,
		                  `surfacearea`)
		      WHERE (`continent` = 'Asia')))
		ORDER BY count___

	   count___
	0         5
Wrong output for fuzzied solution in instance db2csv/world_1/0034_dev (4615)
	EXPECTED OUTPUT ====

		SELECT count(DISTINCT GovernmentForm)
		FROM country
		WHERE Continent = "Africa"

	   count(distinct governmentform)
	0                               0
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count_distinct_governmentform_`
		FROM
		  (SELECT `continent`,
		          COUNT(DISTINCT `governmentform`) AS `n_distinct`
		   FROM `country`
		   GROUP BY `continent`)
		WHERE (`continent` = 'Africa')
		ORDER BY count_distinct_governmentform_

	Empty DataFrame
	Columns: [count_distinct_governmentform_]
	Index: []
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_1897.sqlite3'
Wrong output for fuzzied solution in instance db2csv/world_1/0087_dev (4618)
	EXPECTED OUTPUT ====

		SELECT Name,
		       SurfaceArea,
		       IndepYear
		FROM country
		ORDER BY Population
		LIMIT 1

	            name  surfacearea  indepyear
	0  Norfolk Islan    1267000.0       1960
	ACTUAL OUTPUT ====

		
		SELECT name,
		       surfacearea,
		       indepyear
		FROM
		  (SELECT code,
		          continent AS name,
		          continent,
		          region,
		          surfacearea,
		          indepyear,
		          population,
		          lifeexpectancy,
		          gnp,
		          gnpold,
		          localname,
		          governmentform,
		          headofstate,
		          capital,
		          code2,
		          code_other,
		          continent_other,
		          region_other,
		          surfacearea_other,
		          indepyear_other,
		          population_other,
		          lifeexpectancy_other,
		          gnp_other,
		          gnpold_other,
		          localname_other,
		          governmentform_other,
		          capital_other,
		          code2_other
		   FROM
		     (SELECT LHS.code AS code,
		             LHS.name AS name,
		             LHS.continent AS continent,
		             LHS.region AS region,
		             LHS.surfacearea AS surfacearea,
		             LHS.indepyear AS indepyear,
		             LHS.population AS population,
		             LHS.lifeexpectancy AS lifeexpectancy,
		             LHS.gnp AS gnp,
		             LHS.gnpold AS gnpold,
		             LHS.localname AS localname,
		             LHS.governmentform AS governmentform,
		             LHS.headofstate AS headofstate,
		             LHS.capital AS capital,
		             LHS.code2 AS code2,
		             RHS.code AS code_other,
		             RHS.continent AS continent_other,
		             RHS.region AS region_other,
		             RHS.surfacearea AS surfacearea_other,
		             RHS.indepyear AS indepyear_other,
		             RHS.population AS population_other,
		             RHS.lifeexpectancy AS lifeexpectancy_other,
		             RHS.gnp AS gnp_other,
		             RHS.gnpold AS gnpold_other,
		             RHS.localname AS localname_other,
		             RHS.governmentform AS governmentform_other,
		             RHS.capital AS capital_other,
		             RHS.code2 AS code2_other
		      FROM country AS LHS
		      INNER JOIN country AS RHS ON (LHS.continent = RHS.name
		                                       AND LHS.headofstate = RHS.headofstate)))
		ORDER BY name

	Empty DataFrame
	Columns: [name, surfacearea, indepyear]
	Index: []
No solution for instance db2csv/world_1/0061_dev (4619)
No solution for instance db2csv/world_1/0064_dev (4620)
No solution for instance db2csv/world_1/0043_dev (4621)
Wrong output for fuzzied solution in instance db2csv/world_1/0110_dev (4622)
	EXPECTED OUTPUT ====

		select sum(population),
		       avg(surfacearea)
		from country
		where continent = "north america"
		  and surfacearea > 3000

	  sum(population) avg(surfacearea)
	0            None             None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT indepyear AS sum_population_,
		                lifeexpectancy AS avg_surfacearea_
		FROM
		  (SELECT code,
		          name,
		          continent,
		          region,
		          surfacearea,
		          indepyear,
		          population,
		          lifeexpectancy,
		          gnp,
		          gnpold,
		          localname,
		          governmentform,
		          headofstate,
		          capital,
		          code2,
		          AVG(population) OVER () AS meanpopulation
		   FROM
		     (SELECT *
		      FROM country
		      WHERE (population < 3000
		             AND surfacearea >= population)))
		ORDER BY sum_population_

	Empty DataFrame
	Columns: [sum_population_, avg_surfacearea_]
	Index: []
Wrong output for fuzzied solution in instance db2csv/world_1/0011_dev (4623)
	EXPECTED OUTPUT ====

		SELECT T2.Language
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		WHERE T1.Name = "Aruba"
		ORDER BY Percentage DESC
		LIMIT 1

	       language
	0  c1C3NSlovene
	ACTUAL OUTPUT ====

		
		SELECT `language`
		FROM
		  (SELECT `isofficial`,
		          `language`,
		          MAX(`name`) AS `name`
		   FROM
		     (SELECT `code`,
		             `name`,
		             `continent`,
		             `region`,
		             `surfacearea`,
		             `indepyear`,
		             `population`,
		             `lifeexpectancy`,
		             `gnp`,
		             `gnpold`,
		             `localname`,
		             `governmentform`,
		             `headofstate`,
		             `capital`,
		             `code2`,
		             `language`,
		             `isofficial`,
		             `percentage`,
		             `code` AS `countrycode`
		      FROM
		        (SELECT `LHS`.`code` AS `code`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`continent` AS `continent`,
		                `LHS`.`region` AS `region`,
		                `LHS`.`surfacearea` AS `surfacearea`,
		                `LHS`.`indepyear` AS `indepyear`,
		                `LHS`.`population` AS `population`,
		                `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
		                `LHS`.`gnp` AS `gnp`,
		                `LHS`.`gnpold` AS `gnpold`,
		                `LHS`.`localname` AS `localname`,
		                `LHS`.`governmentform` AS `governmentform`,
		                `LHS`.`headofstate` AS `headofstate`,
		                `LHS`.`capital` AS `capital`,
		                `LHS`.`code2` AS `code2`,
		                `RHS`.`language` AS `language`,
		                `RHS`.`isofficial` AS `isofficial`,
		                `RHS`.`percentage` AS `percentage`
		         FROM `country` AS `LHS`
		         INNER JOIN `countrylanguage` AS `RHS` ON (`LHS`.`code` = `RHS`.`countrycode`)))
		   GROUP BY `isofficial`,
		            `language`)
		WHERE (`name` = 'Aruba')
		ORDER BY LANGUAGE

	           language
	0     7hcSpanishQ8b
	1  Belorussian7ygwO
	2           Slovene
	3      Slovene iwGf
	4      c1C3NSlovene
	5  unnzMMarshallese
Wrong output for fuzzied solution in instance db2csv/world_1/0042_dev (4624)
	EXPECTED OUTPUT ====

		SELECT T1.Continent
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		GROUP BY T1.Continent
		ORDER BY COUNT(*) DESC
		LIMIT 1

	       continent
	0  North America
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT continent
		FROM
		  (SELECT LHS.countrycode AS countrycode,
		          LHS.language AS LANGUAGE,
		          LHS.isofficial AS isofficial,
		          LHS.percentage AS percentage,
		          LHS.continent AS continent,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.countrycode AS countrycode,
		             LHS.language AS LANGUAGE,
		             LHS.isofficial AS isofficial,
		             LHS.percentage AS percentage,
		             RHS.continent AS continent,
		             RHS.n AS n
		      FROM countrylanguage AS LHS
		      CROSS JOIN
		        (SELECT continent,
		                COUNT() AS n
		         FROM country
		         GROUP BY continent) AS RHS) AS LHS
		   INNER JOIN
		     (SELECT continent,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT continent,
		                COUNT() AS n
		         FROM country
		         GROUP BY continent)) AS RHS ON (LHS.continent = RHS.continent
		                                         AND LHS.n = RHS.n))
		ORDER BY continent

	            continent
	0              Africa
	1                Asia
	2       North America
	3  North America iwGf
	4                 sia
Error while executing solution for instance db2csv/world_1/0117_dev (4625)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT COUNT(DISTINCT `language`) OVER () AS `count___`,
                                       `percentage` AS `max_percentage_`
FROM
  (SELECT `countrycode`,
          MAX(`language`) OVER () AS `language`,
                               `isofficial`,
                               `percentage`
   FROM
     (SELECT *
      FROM `countrylanguage`
      WHERE (`language` = 'Spanish')))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_1897.sqlite3'
No solution for instance db2csv/world_1/0116_dev (4627)
Wrong output for fuzzied solution in instance db2csv/world_1/0024_dev (4628)
	EXPECTED OUTPUT ====

		SELECT avg(LifeExpectancy)
		FROM country
		WHERE Continent = "Africa"
		  AND GovernmentForm = "Republic"

	  avg(lifeexpectancy)
	0                None
	ACTUAL OUTPUT ====

		
		SELECT `meanlifeexpectancy` AS `avg_lifeexpectancy_`
		FROM
		  (SELECT `continent`,
		          `governmentform`,
		          AVG(`lifeexpectancy`) AS `meanlifeexpectancy`
		   FROM `country`
		   GROUP BY `continent`,
		            `governmentform`)
		WHERE (`continent` = 'Africa'
		       AND `governmentform` = 'Republic')
		ORDER BY avg_lifeexpectancy_

	Empty DataFrame
	Columns: [avg_lifeexpectancy_]
	Index: []
Wrong output for fuzzied solution in instance db2csv/world_1/0017_dev (4629)
	EXPECTED OUTPUT ====

		SELECT avg(LifeExpectancy)
		FROM country
		WHERE Region = "Central Africa"

	   avg(lifeexpectancy)
	0                 49.8
	ACTUAL OUTPUT ====

		
		SELECT `meanlifeexpectancy` AS `avg_lifeexpectancy_`
		FROM
		  (SELECT `continent`,
		          `region`,
		          AVG(`lifeexpectancy`) AS `meanlifeexpectancy`
		   FROM `country`
		   GROUP BY `continent`,
		            `region`)
		WHERE (`region` = 'Central Africa')
		ORDER BY avg_lifeexpectancy_

	   avg_lifeexpectancy_
	0                 49.8
	1                 49.8
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_1897.sqlite3'
No solution for instance db2csv/world_1/0062_dev (4631)
No solution for instance db2csv/world_1/0066_dev (4633)
Wrong output for fuzzied solution in instance db2csv/world_1/0114_dev (4634)
	EXPECTED OUTPUT ====

		SELECT LANGUAGE
		FROM countrylanguage
		GROUP BY LANGUAGE
		ORDER BY count(*) DESC
		LIMIT 1

	     language
	0  Portuguese
	ACTUAL OUTPUT ====

		
		SELECT LANGUAGE
		FROM
		  (SELECT LHS.language AS LANGUAGE,
		          LHS.n AS n
		   FROM
		     (SELECT LANGUAGE,
		             COUNT() AS n
		      FROM countrylanguage
		      GROUP BY LANGUAGE) AS LHS
		   INNER JOIN
		     (SELECT LANGUAGE,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT LANGUAGE,
		                COUNT() AS n
		         FROM countrylanguage
		         GROUP BY LANGUAGE)) AS RHS ON (LHS.language = RHS.language
		                                        AND LHS.n = RHS.n))
		ORDER BY LANGUAGE

	     language
	0      Arabic
	1  Portuguese
Error while executing solution for instance db2csv/world_1/0049_dev (4635)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `continent`) OVER () AS `count__distinct_continent_`
FROM
  (SELECT `code`,
          `name`,
          `continent`,
          `region`,
          `surfacearea`,
          `indepyear`,
          `population`,
          `lifeexpectancy`,
          `gnp`,
          `gnpold`,
          `localname`,
          `governmentform`,
          `headofstate`,
          `capital`,
          `code2`,
          `language`,
          `isofficial`,
          `percentage`,
          `code` AS `countrycode`
   FROM
     (SELECT `LHS`.`code` AS `code`,
             `LHS`.`name` AS `name`,
             `LHS`.`continent` AS `continent`,
             `LHS`.`region` AS `region`,
             `LHS`.`surfacearea` AS `surfacearea`,
             `LHS`.`indepyear` AS `indepyear`,
             `LHS`.`population` AS `population`,
             `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
             `LHS`.`gnp` AS `gnp`,
             `LHS`.`gnpold` AS `gnpold`,
             `LHS`.`localname` AS `localname`,
             `LHS`.`governmentform` AS `governmentform`,
             `LHS`.`headofstate` AS `headofstate`,
             `LHS`.`capital` AS `capital`,
             `LHS`.`code2` AS `code2`,
             `RHS`.`language` AS `language`,
             `RHS`.`isofficial` AS `isofficial`,
             `RHS`.`percentage` AS `percentage`
      FROM `country` AS `LHS`
      INNER JOIN
        (SELECT *
         FROM `countrylanguage`
         WHERE (`language` = 'Chinese')) AS RHS ON (LHS.code = RHS.countrycode)))
ORDER BY count__distinct_continent_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance db2csv/world_1/0102_dev (4636)
Wrong output for fuzzied solution in instance db2csv/world_1/0026_dev (4637)
	EXPECTED OUTPUT ====

		SELECT sum(SurfaceArea)
		FROM country
		WHERE Continent = "Asia"
		  OR Continent = "Europe"

	  sum(surfacearea)
	0             None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT SUM(`surfacearea`) OVER () AS `sum_surfacearea_`
		FROM `country`
		WHERE (`continent` = 'Asia'
		       OR `continent` = 'Europe')
		ORDER BY sum_surfacearea_

	Empty DataFrame
	Columns: [sum_surfacearea_]
	Index: []
No solution for instance db2csv/world_1/0045_dev (4638)
Wrong output for base solution in instance db2csv/world_1/0098_dev (4639)
	EXPECTED OUTPUT ====

	   sum_population_  avg_lifeexpectancy_      continent
	0        784475000            52.571930         Africa
	1       3705025700            67.441176           Asia
	2         30401150            69.715000        Oceania
	3        345780000            70.946154  South America
	ACTUAL OUTPUT ====

		SELECT sum(Population),
		       avg(LifeExpectancy),
		       Continent
		FROM country
		GROUP BY Continent
		HAVING avg(LifeExpectancy) < 72

	   sum(population)  avg(lifeexpectancy)      continent
	0        784475000            52.571930         Africa
	1       3705025700            67.441176           Asia
	2         30401150            69.715000        Oceania
	3        345780000            70.946154  South America
Wrong output for ground truth in instance db2csv/world_1/0098_dev (4639)
Wrong output for fuzzied solution in instance db2csv/world_1/0035_dev (4640)
	EXPECTED OUTPUT ====

		SELECT COUNT(T2.Language)
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		WHERE T1.Name = "Aruba"

	   count(t2.language)
	0                   6
	ACTUAL OUTPUT ====

		
		SELECT `n_distinct` AS `count_t2_language_`
		FROM
		  (SELECT `surfacearea`,
		          COUNT(DISTINCT `language`) AS `n_distinct`
		   FROM
		     (SELECT `code`,
		             `name`,
		             `continent`,
		             `region`,
		             `surfacearea`,
		             `indepyear`,
		             `population`,
		             `lifeexpectancy`,
		             `gnp`,
		             `gnpold`,
		             `localname`,
		             `governmentform`,
		             `headofstate`,
		             `capital`,
		             `code2`,
		             `language`,
		             `isofficial`,
		             `percentage`,
		             `code` AS `countrycode`
		      FROM
		        (SELECT `LHS`.`code` AS `code`,
		                `LHS`.`name` AS `name`,
		                `LHS`.`continent` AS `continent`,
		                `LHS`.`region` AS `region`,
		                `LHS`.`surfacearea` AS `surfacearea`,
		                `LHS`.`indepyear` AS `indepyear`,
		                `LHS`.`population` AS `population`,
		                `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
		                `LHS`.`gnp` AS `gnp`,
		                `LHS`.`gnpold` AS `gnpold`,
		                `LHS`.`localname` AS `localname`,
		                `LHS`.`governmentform` AS `governmentform`,
		                `LHS`.`headofstate` AS `headofstate`,
		                `LHS`.`capital` AS `capital`,
		                `LHS`.`code2` AS `code2`,
		                `RHS`.`language` AS `language`,
		                `RHS`.`isofficial` AS `isofficial`,
		                `RHS`.`percentage` AS `percentage`
		         FROM
		           (SELECT *
		            FROM `country`
		            WHERE (`name` = 'Aruba')) AS LHS
		         INNER JOIN countrylanguage AS RHS ON (LHS.code = RHS.countrycode)))
		   GROUP BY surfacearea)
		ORDER BY count_t2_language_

	   count_t2_language_
	0                   1
	1                   2
	2                   3
Wrong output for fuzzied solution in instance db2csv/world_1/0002_dev (4644)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM country
		WHERE IndepYear > 1950

	                   name
	0   3I5VYNorfolk Island
	1            3lye3Samoa
	2         Cayman Island
	3        Cayman Islands
	4        Cayman Islands
	5        Cayman Islands
	6        Cayman Islands
	7        Cayman Islands
	8        Cayman Islands
	9         Norfolk Islan
	10       Norfolk Island
	11       Norfolk Island
	12       Norfolk Island
	13       Norfolk Island
	14       Norfolk Island
	15                 Samo
	16                Samoa
	17                Samoa
	18      Solomon Islands
	19      Solomon Islands
	20      Solomon Islands
	21  oAIb(Norfolk Island
	22       olomon Islands
	23        orfolk Island
	24        orfolk Island
	25  plUeDCayman Islands
	26  t1pj0Cayman Islands
	27          w()Samoa0gt
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM country
		WHERE (indepyear >= 1950.0)
		ORDER BY name

	                    name
	0    3I5VYNorfolk Island
	1             3lye3Samoa
	2          Cayman Island
	3         Cayman Islands
	4         Cayman Islands
	5         Cayman Islands
	6         Cayman Islands
	7         Cayman Islands
	8         Cayman Islands
	9         Cayman Islands
	10        Cayman Islands
	11         Norfolk Islan
	12        Norfolk Island
	13        Norfolk Island
	14        Norfolk Island
	15        Norfolk Island
	16        Norfolk Island
	17                  Samo
	18                 Samoa
	19                 Samoa
	20                 Samoa
	21       Solomon Islands
	22       Solomon Islands
	23       Solomon Islands
	24   oAIb(Norfolk Island
	25        olomon Islands
	26         orfolk Island
	27         orfolk Island
	28   plUeDCayman Islands
	29   t1pj0Cayman Islands
	30  vaAmhSolomon Islands
	31           w()Samoa0gt
Error while executing solution for instance db2csv/world_1/0118_dev (4645)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT COUNT(DISTINCT `language`) OVER () AS `count___`,
                                       `percentage` AS `max_percentage_`
FROM
  (SELECT `countrycode`,
          MAX(`language`) OVER () AS `language`,
                               `isofficial`,
                               `percentage`
   FROM
     (SELECT *
      FROM `countrylanguage`
      WHERE (`language` = 'Spanish')))
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance db2csv/world_1/0065_dev (4647)
Wrong output for fuzzied solution in instance db2csv/world_1/0106_dev (4648)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM country
		WHERE continent = "Asia"

	   count(*)
	0         9
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT `capital`,
		          `continent`,
		          COUNT(DISTINCT `continent`) AS `n_distinct`
		   FROM `country`
		   GROUP BY `capital`,
		            `continent`)
		WHERE (`continent` = 'Asia')
		ORDER BY count___

	   count___
	0         8
No solution for instance db2csv/world_1/0055_dev (4649)
No solution for instance db2csv/world_1/0046_dev (4650)
No solution for instance db2csv/world_1/0057_dev (4651)
No solution for instance db2csv/world_1/0074_dev (4652)
Wrong output for fuzzied solution in instance db2csv/world_1/0041_dev (4654)
	EXPECTED OUTPUT ====

		SELECT T1.Continent
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		GROUP BY T1.Continent
		ORDER BY COUNT(*) DESC
		LIMIT 1

	       continent
	0  North America
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT continent
		FROM
		  (SELECT LHS.countrycode AS countrycode,
		          LHS.language AS LANGUAGE,
		          LHS.isofficial AS isofficial,
		          LHS.percentage AS percentage,
		          LHS.continent AS continent,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.countrycode AS countrycode,
		             LHS.language AS LANGUAGE,
		             LHS.isofficial AS isofficial,
		             LHS.percentage AS percentage,
		             RHS.continent AS continent,
		             RHS.n AS n
		      FROM countrylanguage AS LHS
		      CROSS JOIN
		        (SELECT continent,
		                COUNT() AS n
		         FROM country
		         GROUP BY continent) AS RHS) AS LHS
		   INNER JOIN
		     (SELECT MAX(n) AS n
		      FROM
		        (SELECT continent,
		                COUNT() AS n
		         FROM country
		         GROUP BY continent)) AS RHS ON (LHS.n = RHS.n))
		ORDER BY continent

	            continent
	0              Africa
	1                Asia
	2       North America
	3  North America iwGf
	4                 sia
Wrong output for fuzzied solution in instance db2csv/world_1/0019_dev (4655)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM country
		WHERE Continent = "Asia"
		ORDER BY LifeExpectancy
		LIMIT 1

	     name
	0  Sweden
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `name`
		FROM
		  (SELECT `LHS`.`code` AS `code`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`continent` AS `continent`,
		          `LHS`.`region` AS `region`,
		          `LHS`.`surfacearea` AS `surfacearea`,
		          `LHS`.`indepyear` AS `indepyear`,
		          `LHS`.`population` AS `population`,
		          `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
		          `LHS`.`gnp` AS `gnp`,
		          `LHS`.`gnpold` AS `gnpold`,
		          `LHS`.`localname` AS `localname`,
		          `LHS`.`governmentform` AS `governmentform`,
		          `LHS`.`headofstate` AS `headofstate`,
		          `LHS`.`capital` AS `capital`,
		          `LHS`.`code2` AS `code2`,
		          `LHS`.`minlifeexpectancy` AS `minlifeexpectancy`,
		          `RHS`.`code` AS `code_other`,
		          `RHS`.`name` AS `name_other`,
		          `RHS`.`continent` AS `continent_other`,
		          `RHS`.`region` AS `region_other`,
		          `RHS`.`surfacearea` AS `surfacearea_other`,
		          `RHS`.`indepyear` AS `indepyear_other`,
		          `RHS`.`population` AS `population_other`,
		          `RHS`.`lifeexpectancy` AS `lifeexpectancy_other`,
		          `RHS`.`gnp` AS `gnp_other`,
		          `RHS`.`gnpold` AS `gnpold_other`,
		          `RHS`.`localname` AS `localname_other`,
		          `RHS`.`governmentform` AS `governmentform_other`,
		          `RHS`.`headofstate` AS `headofstate_other`,
		          `RHS`.`capital` AS `capital_other`,
		          `RHS`.`code2` AS `code2_other`
		   FROM
		     (SELECT `code`,
		             `name`,
		             `continent`,
		             `region`,
		             `surfacearea`,
		             `indepyear`,
		             `population`,
		             `lifeexpectancy`,
		             `gnp`,
		             `gnpold`,
		             `localname`,
		             `governmentform`,
		             `headofstate`,
		             `capital`,
		             `code2`,
		             MIN(`lifeexpectancy`) OVER () AS `minlifeexpectancy`
		      FROM `country`
		      WHERE (`continent` = 'Asia')) AS `LHS`
		   CROSS JOIN
		     (SELECT *
		      FROM `country`
		      WHERE (`continent` = 'Asia')) AS RHS)
		WHERE (lifeexpectancy <= minlifeexpectancy
		       OR minlifeexpectancy > lifeexpectancy_other)
		ORDER BY name

	     name
	0  Sweden
	1   weden
No solution for instance db2csv/world_1/0047_dev (4656)
Wrong output for fuzzied solution in instance db2csv/world_1/0006_dev (4657)
	EXPECTED OUTPUT ====

		SELECT sum(SurfaceArea)
		FROM country
		WHERE Region = "Caribbean"

	   sum(surfacearea)
	0        3696559.98
	ACTUAL OUTPUT ====

		
		SELECT `sumsurfacearea` AS `sum_surfacearea_`
		FROM
		  (SELECT `continent`,
		          `region`,
		          SUM(`surfacearea`) AS `sumsurfacearea`
		   FROM `country`
		   GROUP BY `continent`,
		            `region`)
		WHERE (`region` = 'Caribbean')
		ORDER BY sum_surfacearea_

	   sum_surfacearea_
	0          67701.98
	1        1284000.02
	2        2344857.98
Wrong output for fuzzied solution in instance db2csv/world_1/0052_dev (4658)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.Region
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		WHERE T2.Language = "English"
		  OR T2.Language = "Dutch"

	                region
	0       CaribbeankFf5k
	1       Eastern Africa
	2         Eastern Asia
	3  ukHZzWestern Africa
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `region`
		FROM
		  (SELECT `code`,
		          `name`,
		          `continent`,
		          `region`,
		          `surfacearea`,
		          `indepyear`,
		          `population`,
		          `lifeexpectancy`,
		          `gnp`,
		          `gnpold`,
		          `localname`,
		          `governmentform`,
		          `headofstate`,
		          `capital`,
		          `code2`,
		          `language`,
		          `isofficial`,
		          `percentage`,
		          `code` AS `countrycode`
		   FROM
		     (SELECT `LHS`.`code` AS `code`,
		             `LHS`.`name` AS `name`,
		             `LHS`.`continent` AS `continent`,
		             `LHS`.`region` AS `region`,
		             `LHS`.`surfacearea` AS `surfacearea`,
		             `LHS`.`indepyear` AS `indepyear`,
		             `LHS`.`population` AS `population`,
		             `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
		             `LHS`.`gnp` AS `gnp`,
		             `LHS`.`gnpold` AS `gnpold`,
		             `LHS`.`localname` AS `localname`,
		             `LHS`.`governmentform` AS `governmentform`,
		             `LHS`.`headofstate` AS `headofstate`,
		             `LHS`.`capital` AS `capital`,
		             `LHS`.`code2` AS `code2`,
		             `RHS`.`language` AS `language`,
		             `RHS`.`isofficial` AS `isofficial`,
		             `RHS`.`percentage` AS `percentage`
		      FROM `country` AS `LHS`
		      INNER JOIN `countrylanguage` AS `RHS` ON (`LHS`.`code` = `RHS`.`countrycode`)))
		WHERE (`language` != 'Dutch'
		       AND `language` = 'English')
		ORDER BY region

	                region
	0       Eastern Africa
	1         Eastern Asia
	2  ukHZzWestern Africa
No solution for instance db2csv/world_1/0075_dev (4659)
Wrong output for base solution in instance db2csv/world_1/0040_dev (4660)
	EXPECTED OUTPUT ====

	     name
	0  Canada
	ACTUAL OUTPUT ====

		SELECT T1.Name
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		GROUP BY T1.Name
		ORDER BY COUNT(*) DESC
		LIMIT 1

	            name
	0  United States
Wrong output for ground truth in instance db2csv/world_1/0040_dev (4660)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_1897.sqlite3'
Error while executing solution for instance db2csv/world_1/0069_dev (4662)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `language`) OVER () AS `count_distinct_t2_language_`
FROM
  (SELECT `code`,
          `name`,
          `continent`,
          `region`,
          `surfacearea`,
          `indepyear`,
          `population`,
          `lifeexpectancy`,
          `gnp`,
          `gnpold`,
          `localname`,
          `governmentform`,
          `headofstate`,
          `capital`,
          `code2`,
          `language`,
          `isofficial`,
          `percentage`,
          `code` AS `countrycode`
   FROM
     (SELECT `LHS`.`code` AS `code`,
             `LHS`.`name` AS `name`,
             `LHS`.`continent` AS `continent`,
             `LHS`.`region` AS `region`,
             `LHS`.`surfacearea` AS `surfacearea`,
             `LHS`.`indepyear` AS `indepyear`,
             `LHS`.`population` AS `population`,
             `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
             `LHS`.`gnp` AS `gnp`,
             `LHS`.`gnpold` AS `gnpold`,
             `LHS`.`localname` AS `localname`,
             `LHS`.`governmentform` AS `governmentform`,
             `LHS`.`headofstate` AS `headofstate`,
             `LHS`.`capital` AS `capital`,
             `LHS`.`code2` AS `code2`,
             `RHS`.`language` AS `language`,
             `RHS`.`isofficial` AS `isofficial`,
             `RHS`.`percentage` AS `percentage`
      FROM `country` AS `LHS`
      INNER JOIN `countrylanguage` AS `RHS` ON (`LHS`.`code` = `RHS`.`countrycode`)))
WHERE (`isofficial` = 'T'
       AND indepyear <= 1930.0)
ORDER BY count_distinct_t2_language_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/world_1/0004_dev (4663)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM country
		WHERE GovernmentForm = "Republic"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `country`
		WHERE (`governmentform` = 'Republic')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance db2csv/world_1/0113_dev (4664)
	EXPECTED OUTPUT ====

		SELECT LANGUAGE
		FROM countrylanguage
		GROUP BY LANGUAGE
		ORDER BY count(*) DESC
		LIMIT 1

	     language
	0  Portuguese
	ACTUAL OUTPUT ====

		
		SELECT LANGUAGE
		FROM
		  (SELECT LHS.language AS LANGUAGE,
		          LHS.n AS n
		   FROM
		     (SELECT LANGUAGE,
		             COUNT() AS n
		      FROM countrylanguage
		      GROUP BY LANGUAGE) AS LHS
		   INNER JOIN
		     (SELECT LANGUAGE,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT LANGUAGE,
		                COUNT() AS n
		         FROM countrylanguage
		         GROUP BY LANGUAGE)) AS RHS ON (LHS.language = RHS.language
		                                        AND LHS.n = RHS.n))
		ORDER BY LANGUAGE

	     language
	0      Arabic
	1  Portuguese
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_1897.sqlite3'
Wrong output for base solution in instance db2csv/world_1/0030_dev (4667)
	EXPECTED OUTPUT ====

	     avg_gnp_  sum_population_
	0  510.333333           329000
	ACTUAL OUTPUT ====

		SELECT avg(GNP),
		       sum(population)
		FROM country
		WHERE GovernmentForm = "US Territory"

	     avg(gnp)  sum(population)
	0  510.333333           329000
Wrong output for ground truth in instance db2csv/world_1/0030_dev (4667)
No solution for instance db2csv/world_1/0085_dev (4668)
Wrong output for fuzzied solution in instance db2csv/world_1/0028_dev (4669)
	EXPECTED OUTPUT ====

		SELECT sum(Population)
		FROM city
		WHERE District = "Gelderland"

	  sum(population)
	0            None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT SUM(`population`) OVER () AS `sum_population_`
		FROM `city`
		WHERE (`district` = 'Gelderland')
		ORDER BY sum_population_

	Empty DataFrame
	Columns: [sum_population_]
	Index: []
Wrong output for fuzzied solution in instance db2csv/world_1/0089_dev (4670)
	EXPECTED OUTPUT ====

		SELECT Name,
		       population,
		       HeadOfState
		FROM country
		ORDER BY SurfaceArea DESC
		LIMIT 1

	                  name  population         headofstate
	0  Cayman IslandssdV2R   126714000  France-Albert René
	ACTUAL OUTPUT ====

		
		SELECT name,
		       population,
		       headofstate
		FROM
		  (SELECT LHS.code AS code,
		          LHS.name AS name,
		          LHS.continent AS continent,
		          LHS.region AS region,
		          LHS.surfacearea AS surfacearea,
		          LHS.indepyear AS indepyear,
		          LHS.population AS population,
		          LHS.lifeexpectancy AS lifeexpectancy,
		          LHS.gnp AS gnp,
		          LHS.gnpold AS gnpold,
		          LHS.localname AS localname,
		          LHS.governmentform AS governmentform,
		          LHS.headofstate AS headofstate,
		          LHS.capital AS capital,
		          LHS.code2 AS code2
		   FROM country AS LHS
		   INNER JOIN
		     (SELECT code,
		             name,
		             continent,
		             region,
		             MAX(surfacearea) OVER () AS surfacearea,
		                                   indepyear,
		                                   population,
		                                   lifeexpectancy,
		                                   gnp,
		                                   gnpold,
		                                   localname,
		                                   governmentform,
		                                   headofstate,
		                                   capital,
		                                   code2
		      FROM country) AS RHS ON (LHS.code = RHS.code
		                                  AND LHS.name = RHS.name
		                                  AND LHS.continent = RHS.continent
		                                  AND LHS.region = RHS.region
		                                  AND LHS.surfacearea = RHS.surfacearea
		                                  AND LHS.indepyear = RHS.indepyear
		                                  AND LHS.population = RHS.population
		                                  AND LHS.lifeexpectancy = RHS.lifeexpectancy
		                                  AND LHS.gnp = RHS.gnp
		                                  AND LHS.gnpold = RHS.gnpold
		                                  AND LHS.localname = RHS.localname
		                                  AND LHS.governmentform = RHS.governmentform
		                                  AND LHS.headofstate = RHS.headofstate
		                                  AND LHS.capital = RHS.capital
		                                  AND LHS.code2 = RHS.code2))
		ORDER BY name

	                  name  population         headofstate
	0  Cayman IslandssdV2R   126714000  France-Albert René
	1       Norfolk Island      286002   rance-Albert René
No solution for instance db2csv/world_1/0059_dev (4671)
No solution for instance db2csv/world_1/0022_dev (4673)
Wrong output for base solution in instance db2csv/world_1/0097_dev (4674)
	EXPECTED OUTPUT ====

	   sum_population_  avg_lifeexpectancy_      continent
	0        784475000            52.571930         Africa
	1       3705025700            67.441176           Asia
	2         30401150            69.715000        Oceania
	3        345780000            70.946154  South America
	ACTUAL OUTPUT ====

		SELECT sum(Population),
		       avg(LifeExpectancy),
		       Continent
		FROM country
		GROUP BY Continent
		HAVING avg(LifeExpectancy) < 72

	   sum(population)  avg(lifeexpectancy)      continent
	0        784475000            52.571930         Africa
	1       3705025700            67.441176           Asia
	2         30401150            69.715000        Oceania
	3        345780000            70.946154  South America
Wrong output for ground truth in instance db2csv/world_1/0097_dev (4674)
No solution for instance db2csv/world_1/0100_dev (4678)
Error while executing solution for instance db2csv/world_1/0031_dev (4680)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT LANGUAGE) OVER () AS count_distinct_language_
FROM countrylanguage
ORDER BY count_distinct_language_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_1897.sqlite3'
No solution for instance db2csv/world_1/0044_dev (4685)
Wrong output for fuzzied solution in instance db2csv/world_1/0086_dev (4687)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T3.Name
		FROM country AS T1
		JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
		JOIN city AS T3 ON T1.Code = T3.CountryCode
		WHERE T2.IsOfficial = 'T'
		  AND T2.Language = 'Chinese'
		  AND T1.Continent = "Asia"

	Empty DataFrame
	Columns: [name]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `name`
		FROM
		  (SELECT `LHS`.`countrycode` AS `countrycode`,
		          `LHS`.`language` AS `language`,
		          `LHS`.`isofficial` AS `isofficial`,
		          `LHS`.`percentage` AS `percentage`,
		          `LHS`.`id` AS `id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`district` AS `district`,
		          `LHS`.`population` AS `population`,
		          `RHS`.`name` AS `name_other`,
		          `RHS`.`continent` AS `continent`,
		          `RHS`.`region` AS `region`,
		          `RHS`.`surfacearea` AS `surfacearea`,
		          `RHS`.`indepyear` AS `indepyear`,
		          `RHS`.`population` AS `population_other`,
		          `RHS`.`lifeexpectancy` AS `lifeexpectancy`,
		          `RHS`.`gnp` AS `gnp`,
		          `RHS`.`gnpold` AS `gnpold`,
		          `RHS`.`localname` AS `localname`,
		          `RHS`.`governmentform` AS `governmentform`,
		          `RHS`.`headofstate` AS `headofstate`,
		          `RHS`.`capital` AS `capital`,
		          `RHS`.`code2` AS `code2`
		   FROM
		     (SELECT `LHS`.`countrycode` AS `countrycode`,
		             `LHS`.`language` AS `language`,
		             `LHS`.`isofficial` AS `isofficial`,
		             `LHS`.`percentage` AS `percentage`,
		             `RHS`.`id` AS `id`,
		             `RHS`.`name` AS `name`,
		             `RHS`.`district` AS `district`,
		             `RHS`.`population` AS `population`
		      FROM
		        (SELECT *
		         FROM `countrylanguage`
		         WHERE (`isofficial` = 'T'
		                AND `language` = 'Chinese')) AS `LHS`
		      LEFT JOIN `city` AS `RHS` ON (`LHS`.`countrycode` = `RHS`.`countrycode`)) AS `LHS`
		   INNER JOIN
		     (SELECT *
		      FROM `country`
		      WHERE (`continent` = 'Asia')) AS RHS ON (LHS.countrycode = RHS.code))
		ORDER BY name

	   name
	0  None
No solution for instance db2csv/world_1/0082_dev (4688)
No solution for instance db2csv/world_1/0056_dev (4689)
Wrong output for fuzzied solution in instance db2csv/world_1/0020_dev (4690)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM country
		WHERE Continent = "Asia"
		ORDER BY LifeExpectancy
		LIMIT 1

	     name
	0  Sweden
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT `LHS`.`code` AS `code`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`continent` AS `continent`,
		          `LHS`.`region` AS `region`,
		          `LHS`.`surfacearea` AS `surfacearea`,
		          `LHS`.`indepyear` AS `indepyear`,
		          `LHS`.`population` AS `population`,
		          `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
		          `LHS`.`gnp` AS `gnp`,
		          `LHS`.`gnpold` AS `gnpold`,
		          `LHS`.`localname` AS `localname`,
		          `LHS`.`governmentform` AS `governmentform`,
		          `LHS`.`headofstate` AS `headofstate`,
		          `LHS`.`capital` AS `capital`,
		          `LHS`.`code2` AS `code2`
		   FROM `country` AS `LHS`
		   INNER JOIN
		     (SELECT `continent`,
		             MIN(`lifeexpectancy`) AS `lifeexpectancy`
		      FROM `country`
		      WHERE (`continent` = 'Asia')
		      GROUP BY continent) AS RHS ON (LHS.continent = RHS.continent
		                                     AND LHS.lifeexpectancy = RHS.lifeexpectancy))
		ORDER BY name

	     name
	0  Sweden
	1   weden
Wrong output for fuzzied solution in instance db2csv/world_1/0025_dev (4691)
	EXPECTED OUTPUT ====

		SELECT sum(SurfaceArea)
		FROM country
		WHERE Continent = "Asia"
		  OR Continent = "Europe"

	  sum(surfacearea)
	0             None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT SUM(`surfacearea`) OVER () AS `sum_surfacearea_`
		FROM `country`
		WHERE (`continent` = 'Asia'
		       OR `continent` = 'Europe')
		ORDER BY sum_surfacearea_

	Empty DataFrame
	Columns: [sum_surfacearea_]
	Index: []
Wrong output for fuzzied solution in instance db2csv/world_1/0109_dev (4693)
	EXPECTED OUTPUT ====

		select sum(population),
		       avg(surfacearea)
		from country
		where continent = "north america"
		  and surfacearea > 3000

	  sum(population) avg(surfacearea)
	0            None             None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT lifeexpectancy AS sum_population_,
		                gnpold AS avg_surfacearea_
		FROM
		  (SELECT code,
		          name,
		          continent,
		          region,
		          surfacearea,
		          indepyear,
		          population,
		          lifeexpectancy,
		          gnp,
		          gnpold,
		          localname,
		          governmentform,
		          headofstate,
		          capital,
		          code2,
		          AVG(population) OVER () AS meanpopulation
		   FROM
		     (SELECT *
		      FROM country
		      WHERE (population <= 3000)))
		ORDER BY sum_population_

	Empty DataFrame
	Columns: [sum_population_, avg_surfacearea_]
	Index: []
No solution for instance db2csv/world_1/0115_dev (4695)
Wrong output for fuzzied solution in instance db2csv/world_1/0090_dev (4696)
	EXPECTED OUTPUT ====

		SELECT Name,
		       population,
		       HeadOfState
		FROM country
		ORDER BY SurfaceArea DESC
		LIMIT 1

	                  name  population         headofstate
	0  Cayman IslandssdV2R   126714000  France-Albert René
	ACTUAL OUTPUT ====

		
		SELECT name,
		       population,
		       headofstate
		FROM
		  (SELECT LHS.code AS code,
		          LHS.name AS name,
		          LHS.continent AS continent,
		          LHS.region AS region,
		          LHS.surfacearea AS surfacearea,
		          LHS.indepyear AS indepyear,
		          LHS.population AS population,
		          LHS.lifeexpectancy AS lifeexpectancy,
		          LHS.gnp AS gnp,
		          LHS.gnpold AS gnpold,
		          LHS.localname AS localname,
		          LHS.governmentform AS governmentform,
		          LHS.headofstate AS headofstate,
		          LHS.capital AS capital,
		          LHS.code2 AS code2
		   FROM country AS LHS
		   INNER JOIN
		     (SELECT code,
		             name,
		             continent,
		             region,
		             MAX(surfacearea) OVER () AS surfacearea,
		                                   indepyear,
		                                   population,
		                                   lifeexpectancy,
		                                   gnp,
		                                   gnpold,
		                                   localname,
		                                   governmentform,
		                                   headofstate,
		                                   capital,
		                                   code2
		      FROM country) AS RHS ON (LHS.code = RHS.code
		                                  AND LHS.name = RHS.name
		                                  AND LHS.continent = RHS.continent
		                                  AND LHS.region = RHS.region
		                                  AND LHS.surfacearea = RHS.surfacearea
		                                  AND LHS.indepyear = RHS.indepyear
		                                  AND LHS.population = RHS.population
		                                  AND LHS.lifeexpectancy = RHS.lifeexpectancy
		                                  AND LHS.gnp = RHS.gnp
		                                  AND LHS.gnpold = RHS.gnpold
		                                  AND LHS.localname = RHS.localname
		                                  AND LHS.governmentform = RHS.governmentform
		                                  AND LHS.headofstate = RHS.headofstate
		                                  AND LHS.capital = RHS.capital
		                                  AND LHS.code2 = RHS.code2))
		ORDER BY name

	                  name  population         headofstate
	0  Cayman IslandssdV2R   126714000  France-Albert René
	1       Norfolk Island      286002   rance-Albert René
Error while executing solution for instance db2csv/world_1/0070_dev (4697)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `language`) OVER () AS `count_distinct_t2_language_`
FROM
  (SELECT `code`,
          `name`,
          `continent`,
          `region`,
          `surfacearea`,
          `indepyear`,
          `population`,
          `lifeexpectancy`,
          `gnp`,
          `gnpold`,
          `localname`,
          `governmentform`,
          `headofstate`,
          `capital`,
          `code2`,
          `language`,
          `isofficial`,
          `percentage`,
          `code` AS `countrycode`
   FROM
     (SELECT `LHS`.`code` AS `code`,
             `LHS`.`name` AS `name`,
             `LHS`.`continent` AS `continent`,
             `LHS`.`region` AS `region`,
             `LHS`.`surfacearea` AS `surfacearea`,
             `LHS`.`indepyear` AS `indepyear`,
             `LHS`.`population` AS `population`,
             `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
             `LHS`.`gnp` AS `gnp`,
             `LHS`.`gnpold` AS `gnpold`,
             `LHS`.`localname` AS `localname`,
             `LHS`.`governmentform` AS `governmentform`,
             `LHS`.`headofstate` AS `headofstate`,
             `LHS`.`capital` AS `capital`,
             `LHS`.`code2` AS `code2`,
             `RHS`.`language` AS `language`,
             `RHS`.`isofficial` AS `isofficial`,
             `RHS`.`percentage` AS `percentage`
      FROM `country` AS `LHS`
      INNER JOIN `countrylanguage` AS `RHS` ON (`LHS`.`code` = `RHS`.`countrycode`)))
WHERE (`isofficial` = 'T'
       AND indepyear <= 1930.0)
ORDER BY count_distinct_t2_language_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/world_1/0023_dev (4699)
	EXPECTED OUTPUT ====

		SELECT avg(LifeExpectancy)
		FROM country
		WHERE Continent = "Africa"
		  AND GovernmentForm = "Republic"

	  avg(lifeexpectancy)
	0                None
	ACTUAL OUTPUT ====

		
		SELECT `meanlifeexpectancy` AS `avg_lifeexpectancy_`
		FROM
		  (SELECT `continent`,
		          `governmentform`,
		          AVG(`lifeexpectancy`) AS `meanlifeexpectancy`
		   FROM `country`
		   GROUP BY `continent`,
		            `governmentform`)
		WHERE (`continent` = 'Africa'
		       AND `governmentform` = 'Republic')
		ORDER BY avg_lifeexpectancy_

	Empty DataFrame
	Columns: [avg_lifeexpectancy_]
	Index: []
Error while executing solution for instance db2csv/world_1/0050_dev (4700)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `continent`) OVER () AS `count__distinct_continent_`
FROM
  (SELECT `code`,
          `name`,
          `continent`,
          `region`,
          `surfacearea`,
          `indepyear`,
          `population`,
          `lifeexpectancy`,
          `gnp`,
          `gnpold`,
          `localname`,
          `governmentform`,
          `headofstate`,
          `capital`,
          `code2`,
          `language`,
          `isofficial`,
          `percentage`,
          `code` AS `countrycode`
   FROM
     (SELECT `LHS`.`code` AS `code`,
             `LHS`.`name` AS `name`,
             `LHS`.`continent` AS `continent`,
             `LHS`.`region` AS `region`,
             `LHS`.`surfacearea` AS `surfacearea`,
             `LHS`.`indepyear` AS `indepyear`,
             `LHS`.`population` AS `population`,
             `LHS`.`lifeexpectancy` AS `lifeexpectancy`,
             `LHS`.`gnp` AS `gnp`,
             `LHS`.`gnpold` AS `gnpold`,
             `LHS`.`localname` AS `localname`,
             `LHS`.`governmentform` AS `governmentform`,
             `LHS`.`headofstate` AS `headofstate`,
             `LHS`.`capital` AS `capital`,
             `LHS`.`code2` AS `code2`,
             `RHS`.`language` AS `language`,
             `RHS`.`isofficial` AS `isofficial`,
             `RHS`.`percentage` AS `percentage`
      FROM `country` AS `LHS`
      INNER JOIN
        (SELECT *
         FROM `countrylanguage`
         WHERE (`language` = 'Chinese')) AS RHS ON (LHS.code = RHS.countrycode)))
ORDER BY count__distinct_continent_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/world_1/0005_dev (4701)
	EXPECTED OUTPUT ====

		SELECT sum(SurfaceArea)
		FROM country
		WHERE Region = "Caribbean"

	   sum(surfacearea)
	0        3696559.98
	ACTUAL OUTPUT ====

		
		SELECT `sumsurfacearea` AS `sum_surfacearea_`
		FROM
		  (SELECT `continent`,
		          `region`,
		          SUM(`surfacearea`) AS `sumsurfacearea`
		   FROM `country`
		   GROUP BY `continent`,
		            `region`)
		WHERE (`region` = 'Caribbean')
		ORDER BY sum_surfacearea_

	   sum_surfacearea_
	0          67701.98
	1        1284000.02
	2        2344857.98
Error while executing solution for instance db2csv/world_1/0032_dev (4702)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT LANGUAGE) OVER () AS count_distinct_language_
FROM countrylanguage
ORDER BY count_distinct_language_]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance db2csv/world_1/0108_dev (4703)
Wrong output for fuzzied solution in instance db2csv/network_1/0027_dev (4704)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		GROUP BY T1.student_id
		HAVING count(*) >= 3

	           name
	0        Jordan
	1        Jordan
	2          Kris
	3          Kris
	4          Kris
	5          Kris
	6      assandra
	7  nPfJordan jW
	8           ris
	9           ris
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT student_id,
		          n,
		          name,
		          grade,
		          student_id AS id
		   FROM
		     (SELECT LHS.student_id AS student_id,
		             LHS.n AS n,
		             RHS.name AS name,
		             RHS.grade AS grade
		      FROM
		        (SELECT student_id,
		                COUNT() AS n
		         FROM friend
		         GROUP BY student_id) AS LHS
		      INNER JOIN highschooler AS RHS ON (LHS.student_id = RHS.id)))
		WHERE (n = 3)
		ORDER BY name

	   name
	0  Kris
Wrong output for base solution in instance db2csv/network_1/0018_dev (4706)
	EXPECTED OUTPUT ====

	   grade
	0      9
	ACTUAL OUTPUT ====

		SELECT grade
		FROM Highschooler
		GROUP BY grade
		ORDER BY count(*) DESC
		LIMIT 1

	   grade
	0     12
Wrong output for ground truth in instance db2csv/network_1/0018_dev (4706)
No solution for instance db2csv/network_1/0039_dev (4708)
Wrong output for fuzzied solution in instance db2csv/network_1/0029_dev (4709)
	EXPECTED OUTPUT ====

		SELECT T3.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		JOIN Highschooler AS T3 ON T1.friend_id = T3.id
		WHERE T2.name = "Kyle"

	          name
	0       Andrew
	1       Andrew
	2  AndrewA7Y(m
	3     Brittany
	4     Brittany
	5       Jordan
	6         Kyle
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `highschooler`
		      WHERE (`name` != 'Kyle')) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT student_id,
		                  friend_id,
		                  name,
		                  grade,
		                  friend_id AS id
		           FROM
		             (SELECT LHS.student_id AS student_id,
		                     LHS.friend_id AS friend_id,
		                     RHS.name AS name,
		                     RHS.grade AS grade
		              FROM friend AS LHS
		              INNER JOIN highschooler AS RHS ON (LHS.friend_id = RHS.id))) AS RHS
		        WHERE (LHS.grade = RHS.grade
		               AND LHS.name = RHS.name) ))
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
No solution for instance db2csv/network_1/0048_dev (4711)
Wrong output for fuzzied solution in instance db2csv/network_1/0037_dev (4712)
	EXPECTED OUTPUT ====

		SELECT student_id
		FROM Friend INTERSECT
		SELECT liked_id
		FROM Likes

	    student_id
	0         1023
	1         1024
	2         1025
	3         1027
	4         1303
	5         1305
	6         1306
	7         1660
	8         1661
	9         1663
	10        1780
	11        1781
	12        1782
	13        1783
	14        1784
	15        1910
	16        1911
	17        1912
	18        1913
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT liked_id AS student_id
		FROM
		  (SELECT LHS.student_id AS student_id,
		          LHS.liked_id AS liked_id,
		          RHS.friend_id AS friend_id
		   FROM likes AS LHS
		   LEFT JOIN friend AS RHS ON (LHS.student_id = RHS.student_id))
		ORDER BY student_id

	    student_id
	0         1023
	1         1024
	2         1025
	3         1026
	4         1027
	5         1302
	6         1303
	7         1304
	8         1305
	9         1306
	10        1659
	11        1660
	12        1661
	13        1662
	14        1663
	15        1780
	16        1781
	17        1782
	18        1783
	19        1784
	20        1909
	21        1910
	22        1911
	23        1912
	24        1913
Wrong output for fuzzied solution in instance db2csv/network_1/0038_dev (4714)
	EXPECTED OUTPUT ====

		SELECT student_id
		FROM Friend INTERSECT
		SELECT liked_id
		FROM Likes

	    student_id
	0         1023
	1         1024
	2         1025
	3         1027
	4         1303
	5         1305
	6         1306
	7         1660
	8         1661
	9         1663
	10        1780
	11        1781
	12        1782
	13        1783
	14        1784
	15        1910
	16        1911
	17        1912
	18        1913
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT liked_id AS student_id
		FROM
		  (SELECT LHS.student_id AS student_id,
		          LHS.liked_id AS liked_id,
		          RHS.student_id AS student_id_other
		   FROM likes AS LHS
		   INNER JOIN friend AS RHS ON (LHS.student_id = RHS.friend_id))
		ORDER BY student_id

	    student_id
	0         1023
	1         1024
	2         1025
	3         1026
	4         1027
	5         1302
	6         1303
	7         1304
	8         1305
	9         1306
	10        1659
	11        1660
	12        1661
	13        1663
	14        1780
	15        1781
	16        1782
	17        1783
	18        1784
	19        1909
	20        1910
	21        1911
	22        1912
	23        1913
Wrong output for fuzzied solution in instance db2csv/network_1/0036_dev (4715)
	EXPECTED OUTPUT ====

		SELECT name
		FROM Highschooler
		EXCEPT
		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id

	     name
	0     Kri
	1  abriel
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM highschooler AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT id,
		                  name,
		                  grade,
		                  friend_id,
		                  id AS student_id
		           FROM
		             (SELECT LHS.id AS id,
		                     LHS.name AS name,
		                     LHS.grade AS grade,
		                     RHS.friend_id AS friend_id
		              FROM highschooler AS LHS
		              INNER JOIN friend AS RHS ON (LHS.id = RHS.student_id))) AS RHS
		        WHERE (LHS.id = RHS.id
		               AND LHS.name = RHS.name
		               AND LHS.grade = RHS.grade) ))
		ORDER BY name

	      name
	0   Alexis
	1  Gabriel
	2      Kri
	3     Kyle
	4   abriel
	5    lexis
Wrong output for fuzzied solution in instance db2csv/network_1/0001_dev (4718)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Highschooler

	   count(*)
	0        10
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT grade,
		          name,
		          COUNT() AS n
		   FROM highschooler
		   GROUP BY grade,
		            name)
		ORDER BY count___

	   count___
	0         7
Wrong output for fuzzied solution in instance db2csv/network_1/0042_dev (4722)
	EXPECTED OUTPUT ====

		SELECT student_id,
		       count(*)
		FROM Likes
		GROUP BY student_id

	   student_id  count(*)
	0        1711         3
	1        1708         4
	2        1500         5
	3        1501         5
	4        1304         6
	5        1503         6
	6        1709         6
	7        1302         7
	8        1303         7
	9        1305         8
	ACTUAL OUTPUT ====

		
		SELECT student_id,
		       n AS count___
		FROM
		  (SELECT LHS.student_id AS student_id,
		          LHS.liked_id AS liked_id,
		          RHS.n AS n
		   FROM likes AS LHS
		   INNER JOIN
		     (SELECT student_id,
		             COUNT() AS n
		      FROM likes
		      GROUP BY student_id) AS RHS ON (LHS.student_id = RHS.student_id))
		ORDER BY student_id

	    student_id  count___
	0         1711         3
	1         1711         3
	2         1711         3
	3         1708         4
	4         1708         4
	5         1708         4
	6         1708         4
	7         1500         5
	8         1500         5
	9         1500         5
	10        1500         5
	11        1500         5
	12        1501         5
	13        1501         5
	14        1501         5
	15        1501         5
	16        1501         5
	17        1304         6
	18        1304         6
	19        1304         6
	20        1304         6
	21        1304         6
	22        1304         6
	23        1503         6
	24        1503         6
	25        1503         6
	26        1503         6
	27        1503         6
	28        1503         6
	29        1709         6
	30        1709         6
	31        1709         6
	32        1709         6
	33        1709         6
	34        1709         6
	35        1302         7
	36        1302         7
	37        1302         7
	38        1302         7
	39        1302         7
	40        1302         7
	41        1302         7
	42        1303         7
	43        1303         7
	44        1303         7
	45        1303         7
	46        1303         7
	47        1303         7
	48        1303         7
	49        1305         8
	50        1305         8
	51        1305         8
	52        1305         8
	53        1305         8
	54        1305         8
	55        1305         8
	56        1305         8
Wrong output for base solution in instance db2csv/network_1/0017_dev (4724)
	EXPECTED OUTPUT ====

	   grade
	0      9
	ACTUAL OUTPUT ====

		SELECT grade
		FROM Highschooler
		GROUP BY grade
		ORDER BY count(*) DESC
		LIMIT 1

	   grade
	0     12
Wrong output for ground truth in instance db2csv/network_1/0017_dev (4724)
Wrong output for fuzzied solution in instance db2csv/network_1/0049_dev (4725)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		WHERE T2.grade > 5
		GROUP BY T1.student_id
		HAVING count(*) >= 2

	              name
	0        Cassandra
	1        Cassandra
	2           Jordan
	3           Jordan
	4           Jordan
	5             Kris
	6             Kris
	7        KrisEun2W
	8      iiO5oJordan
	9  kIUCassandraLo5
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT student_id,
		          n,
		          name,
		          grade,
		          student_id AS id
		   FROM
		     (SELECT LHS.student_id AS student_id,
		             LHS.n AS n,
		             RHS.name AS name,
		             RHS.grade AS grade
		      FROM
		        (SELECT student_id,
		                COUNT() AS n
		         FROM friend
		         GROUP BY student_id) AS LHS
		      INNER JOIN highschooler AS RHS ON (LHS.student_id = RHS.id)))
		WHERE (grade = 2
		       OR n >= 2)
		ORDER BY name

	               name
	0         Cassandra
	1         Cassandra
	2         Cassandra
	3         Cassandra
	4            Jordan
	5            Jordan
	6            Jordan
	7              Kris
	8              Kris
	9         KrisEun2W
	10      iiO5oJordan
	11  kIUCassandraLo5
Wrong output for fuzzied solution in instance db2csv/network_1/0026_dev (4726)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		GROUP BY T1.student_id
		ORDER BY count(*) DESC
		LIMIT 1

	   name
	0  Kris
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.student_id AS student_id,
		          LHS.n AS n,
		          RHS.name AS name,
		          RHS.grade AS grade,
		          RHS.student_id AS student_id_other
		   FROM
		     (SELECT student_id,
		             COUNT() AS n
		      FROM friend
		      GROUP BY student_id) AS LHS
		   INNER JOIN
		     (SELECT LHS.id AS id,
		             LHS.name AS name,
		             LHS.grade AS grade,
		             LHS.student_id AS student_id,
		             LHS.n AS n
		      FROM
		        (SELECT LHS.id AS id,
		                LHS.name AS name,
		                LHS.grade AS grade,
		                RHS.student_id AS student_id,
		                RHS.n AS n
		         FROM highschooler AS LHS
		         CROSS JOIN
		           (SELECT student_id,
		                   COUNT() AS n
		            FROM friend
		            GROUP BY student_id) AS RHS) AS LHS
		      INNER JOIN
		        (SELECT MAX(n) AS n
		         FROM
		           (SELECT student_id,
		                   COUNT() AS n
		            FROM friend
		            GROUP BY student_id)) AS RHS ON (LHS.n = RHS.n)) AS RHS ON (LHS.student_id = RHS.id
		                                                                        AND LHS.n = RHS.n))
		ORDER BY name

	     name
	0  Jordan
	1  Jordan
	2    Kris
	3    Kris
No solution for instance db2csv/network_1/0045_dev (4727)
Wrong output for fuzzied solution in instance db2csv/network_1/0035_dev (4728)
	EXPECTED OUTPUT ====

		SELECT name
		FROM Highschooler
		EXCEPT
		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id

	     name
	0     Kri
	1  abriel
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM highschooler AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT id,
		                  name,
		                  grade,
		                  friend_id,
		                  id AS student_id
		           FROM
		             (SELECT LHS.id AS id,
		                     LHS.name AS name,
		                     LHS.grade AS grade,
		                     RHS.friend_id AS friend_id
		              FROM highschooler AS LHS
		              INNER JOIN friend AS RHS ON (LHS.id = RHS.student_id))) AS RHS
		        WHERE (LHS.id = RHS.id
		               AND LHS.name = RHS.name
		               AND LHS.grade = RHS.grade) ))
		ORDER BY name

	      name
	0   Alexis
	1  Gabriel
	2      Kri
	3     Kyle
	4   abriel
	5    lexis
Wrong output for fuzzied solution in instance db2csv/network_1/0055_dev (4732)
	EXPECTED OUTPUT ====

		SELECT min(grade)
		FROM Highschooler
		WHERE id NOT IN
		    (SELECT T1.student_id
		     FROM Friend AS T1
		     JOIN Highschooler AS T2 ON T1.student_id = T2.id)

	  min(grade)
	0       None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT MIN(grade) OVER () AS min_grade_
		FROM
		  (SELECT *
		   FROM highschooler AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT id,
		                  name,
		                  grade,
		                  friend_id,
		                  id AS student_id
		           FROM
		             (SELECT LHS.id AS id,
		                     LHS.name AS name,
		                     LHS.grade AS grade,
		                     RHS.friend_id AS friend_id
		              FROM highschooler AS LHS
		              INNER JOIN friend AS RHS ON (LHS.id = RHS.student_id))) AS RHS
		        WHERE (LHS.id = RHS.id
		               AND LHS.name = RHS.name
		               AND LHS.grade = RHS.grade) ))
		ORDER BY min_grade_

	Empty DataFrame
	Columns: [min_grade_]
	Index: []
No solution for instance db2csv/network_1/0046_dev (4733)
Wrong output for fuzzied solution in instance db2csv/network_1/0008_dev (4734)
	EXPECTED OUTPUT ====

		SELECT grade
		FROM Highschooler
		WHERE name = "Kyle"

	        grade
	0           9
	1           9
	2          12
	3  6613830006
	ACTUAL OUTPUT ====

		
		SELECT `grade`
		FROM
		  (SELECT `grade`
		   FROM `highschooler`
		   WHERE (`name` = 'Kyle') INTERSECT
		     SELECT grade
		     FROM highschooler)
		ORDER BY grade

	        grade
	0           9
	1          12
	2  6613830006
Wrong output for fuzzied solution in instance db2csv/network_1/0019_dev (4736)
	EXPECTED OUTPUT ====

		SELECT grade
		FROM Highschooler
		GROUP BY grade
		HAVING count(*) >= 4

	   grade
	0     10
	1     12
	ACTUAL OUTPUT ====

		
		SELECT grade
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM
		        (SELECT grade,
		                COUNT() AS n
		         FROM highschooler
		         GROUP BY grade)
		      ORDER BY grade)
		   LIMIT 4)

	   grade
	0      9
	1     10
	2     12
No solution for instance db2csv/network_1/0047_dev (4737)
Wrong output for fuzzied solution in instance db2csv/network_1/0052_dev (4739)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Likes AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		WHERE T2.name = "Kyle"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`student_id` AS `student_id`,
		          `LHS`.`liked_id` AS `liked_id`,
		          `RHS`.`id` AS `id`,
		          `RHS`.`name` AS `name`,
		          `RHS`.`grade` AS `grade`,
		          `RHS`.`n` AS `n`
		   FROM `likes` AS `LHS`
		   CROSS JOIN
		     (SELECT `id`,
		             `name`,
		             `grade`,
		             COUNT(*) OVER () AS `n`
		      FROM `highschooler`
		      WHERE (`name` = 'Kyle')) AS RHS)
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance db2csv/network_1/0040_dev (4740)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id INTERSECT
		SELECT T2.name
		FROM Likes AS T1
		JOIN Highschooler AS T2 ON T1.liked_id = T2.id

	           name
	0        Alexis
	1   AlexisjfNTN
	2   BY3I1Alexis
	3       Gabriel
	4          Kris
	5     Kriss(oUH
	6          Kyle
	7     Kyle1MYfd
	8     KyleVnmTn
	9    d8iKris2l7
	10        lexis
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.grade AS grade,
		          RHS.student_id AS student_id,
		          RHS.friend_id AS friend_id
		   FROM highschooler AS LHS
		   INNER JOIN
		     (SELECT LHS.student_id AS student_id,
		             LHS.liked_id AS liked_id,
		             RHS.friend_id AS friend_id
		      FROM likes AS LHS
		      LEFT JOIN friend AS RHS ON (LHS.student_id = RHS.student_id)) AS RHS ON (LHS.id = RHS.liked_id))
		ORDER BY name

	           name
	0        Alexis
	1   AlexisjfNTN
	2   BY3I1Alexis
	3       Gabriel
	4           Kri
	5          Kris
	6     Kriss(oUH
	7          Kyle
	8     Kyle1MYfd
	9     KyleVnmTn
	10       abriel
	11   d8iKris2l7
	12        lexis
Wrong output for fuzzied solution in instance db2csv/network_1/0030_dev (4742)
	EXPECTED OUTPUT ====

		SELECT T3.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		JOIN Highschooler AS T3 ON T1.friend_id = T3.id
		WHERE T2.name = "Kyle"

	          name
	0       Andrew
	1       Andrew
	2  AndrewA7Y(m
	3     Brittany
	4     Brittany
	5       Jordan
	6         Kyle
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM
		     (SELECT *
		      FROM `highschooler`
		      WHERE (`name` != 'Kyle')) AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT student_id,
		                  friend_id,
		                  name,
		                  grade,
		                  friend_id AS id
		           FROM
		             (SELECT LHS.student_id AS student_id,
		                     LHS.friend_id AS friend_id,
		                     RHS.name AS name,
		                     RHS.grade AS grade
		              FROM friend AS LHS
		              INNER JOIN highschooler AS RHS ON (LHS.friend_id = RHS.id))) AS RHS
		        WHERE (LHS.id = RHS.id
		               AND LHS.name = RHS.name) ))
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance db2csv/network_1/0028_dev (4743)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		GROUP BY T1.student_id
		HAVING count(*) >= 3

	           name
	0        Jordan
	1        Jordan
	2          Kris
	3          Kris
	4          Kris
	5          Kris
	6      assandra
	7  nPfJordan jW
	8           ris
	9           ris
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.student_id AS student_id,
		          LHS.n AS n,
		          RHS.name AS name,
		          RHS.grade AS grade
		   FROM
		     (SELECT *
		      FROM
		        (SELECT student_id,
		                COUNT() AS n
		         FROM friend
		         GROUP BY student_id)
		      WHERE (n = 3)) AS LHS
		   INNER JOIN highschooler AS RHS ON (LHS.student_id = RHS.id))
		ORDER BY name

	   name
	0  Kris
No solution for instance db2csv/network_1/0051_dev (4744)
Wrong output for fuzzied solution in instance db2csv/network_1/0013_dev (4746)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Highschooler
		WHERE grade = 9
		  OR grade = 10

	   count(*)
	0        11
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM highschooler
		WHERE (grade = 9
		       OR grade <= 10)
		ORDER BY count___

	   count___
	0        13
Wrong output for fuzzied solution in instance db2csv/network_1/0014_dev (4747)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Highschooler
		WHERE grade = 9
		  OR grade = 10

	   count(*)
	0        11
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM highschooler
		WHERE (grade = 9
		       OR grade <= 10)
		ORDER BY count___

	   count___
	0        13
No solution for instance db2csv/network_1/0031_dev (4748)
Wrong output for fuzzied solution in instance db2csv/network_1/0056_dev (4753)
	EXPECTED OUTPUT ====

		SELECT min(grade)
		FROM Highschooler
		WHERE id NOT IN
		    (SELECT T1.student_id
		     FROM Friend AS T1
		     JOIN Highschooler AS T2 ON T1.student_id = T2.id)

	  min(grade)
	0       None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT MIN(grade) OVER () AS min_grade_
		FROM
		  (SELECT LHS.id AS id,
		          LHS.name AS name,
		          LHS.grade AS grade,
		          LHS.student_id AS student_id,
		          LHS.friend_id AS friend_id,
		          RHS.id_other AS id_other,
		          RHS.name_other AS name_other,
		          RHS.grade_other AS grade_other
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.name AS name,
		             LHS.grade AS grade,
		             RHS.student_id AS student_id,
		             RHS.friend_id AS friend_id
		      FROM highschooler AS LHS
		      CROSS JOIN friend AS RHS) AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT LHS.id AS id,
		                LHS.name AS name,
		                LHS.grade AS grade,
		                RHS.id AS id_other,
		                RHS.name AS name_other,
		                RHS.grade AS grade_other
		         FROM highschooler AS LHS
		         CROSS JOIN highschooler AS RHS)
		      WHERE (id <= id_other
		             AND grade > grade_other)) AS RHS ON (LHS.id = RHS.id
		                                                  AND LHS.name = RHS.name
		                                                  AND LHS.grade = RHS.grade))
		ORDER BY min_grade_

	   min_grade_
	0          10
Wrong output for fuzzied solution in instance db2csv/network_1/0020_dev (4754)
	EXPECTED OUTPUT ====

		SELECT grade
		FROM Highschooler
		GROUP BY grade
		HAVING count(*) >= 4

	   grade
	0     10
	1     12
	ACTUAL OUTPUT ====

		
		SELECT grade
		FROM
		  (SELECT grade,
		          COUNT() AS n
		   FROM
		     (SELECT grade,
		             COUNT() AS n
		      FROM highschooler
		      GROUP BY grade)
		   GROUP BY grade)
		ORDER BY grade

	   grade
	0      9
	1     10
	2     12
Wrong output for fuzzied solution in instance db2csv/network_1/0025_dev (4755)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		GROUP BY T1.student_id
		ORDER BY count(*) DESC
		LIMIT 1

	   name
	0  Kris
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT name
		FROM
		  (SELECT student_id,
		          n,
		          student_id_other,
		          friend_id,
		          name,
		          grade,
		          n_other,
		          student_id AS id
		   FROM
		     (SELECT LHS.student_id AS student_id,
		             LHS.n AS n,
		             RHS.student_id AS student_id_other,
		             RHS.friend_id AS friend_id,
		             RHS.name AS name,
		             RHS.grade AS grade,
		             RHS.n AS n_other
		      FROM
		        (SELECT student_id,
		                COUNT() AS n
		         FROM friend
		         GROUP BY student_id) AS LHS
		      INNER JOIN
		        (SELECT student_id,
		                friend_id,
		                id,
		                name,
		                grade,
		                n,
		                MAX(n) OVER () AS maxn
		         FROM
		           (SELECT LHS.student_id AS student_id,
		                   LHS.friend_id AS friend_id,
		                   LHS.id AS id,
		                   LHS.name AS name,
		                   LHS.grade AS grade,
		                   RHS.n AS n
		            FROM
		              (SELECT LHS.student_id AS student_id,
		                      LHS.friend_id AS friend_id,
		                      RHS.id AS id,
		                      RHS.name AS name,
		                      RHS.grade AS grade
		               FROM friend AS LHS
		               CROSS JOIN highschooler AS RHS) AS LHS
		            INNER JOIN
		              (SELECT student_id,
		                      COUNT() AS n
		               FROM friend
		               GROUP BY student_id) AS RHS ON (LHS.student_id = RHS.student_id))) AS RHS ON (LHS.student_id = RHS.id
		                                                                                             AND LHS.n = RHS.maxn)))
		ORDER BY name

	     name
	0  Jordan
	1    Kris
Wrong output for fuzzied solution in instance db2csv/network_1/0050_dev (4757)
	EXPECTED OUTPUT ====

		SELECT T2.name
		FROM Friend AS T1
		JOIN Highschooler AS T2 ON T1.student_id = T2.id
		WHERE T2.grade > 5
		GROUP BY T1.student_id
		HAVING count(*) >= 2

	              name
	0        Cassandra
	1        Cassandra
	2           Jordan
	3           Jordan
	4           Jordan
	5             Kris
	6             Kris
	7        KrisEun2W
	8      iiO5oJordan
	9  kIUCassandraLo5
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.student_id AS student_id,
		          LHS.n AS n,
		          RHS.name AS name,
		          RHS.grade AS grade
		   FROM
		     (SELECT *
		      FROM
		        (SELECT student_id,
		                COUNT() AS n
		         FROM friend
		         GROUP BY student_id)
		      WHERE (n >= 2)) AS LHS
		   INNER JOIN highschooler AS RHS ON (LHS.student_id = RHS.id))
		ORDER BY name

	               name
	0         Cassandra
	1         Cassandra
	2         Cassandra
	3         Cassandra
	4            Jordan
	5            Jordan
	6            Jordan
	7              Kris
	8              Kris
	9         KrisEun2W
	10      iiO5oJordan
	11  kIUCassandraLo5
Error while executing solution for instance db2csv/network_1/0032_dev (4759)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT COUNT(DISTINCT `name`) OVER () AS `count___`
FROM
  (SELECT `LHS`.`student_id` AS `student_id`,
          `LHS`.`friend_id` AS `friend_id`,
          `RHS`.`id` AS `id`,
          `RHS`.`name` AS `name`,
          `RHS`.`grade` AS `grade`
   FROM `friend` AS `LHS`
   CROSS JOIN `highschooler` AS `RHS`)
WHERE (`name` = 'Kyle')
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
Wrong output for fuzzied solution in instance db2csv/battle_death/0011_dev (4763)
	EXPECTED OUTPUT ====

		SELECT name
		FROM battle
		WHERE bulgarian_commander = 'Kaloyan'
		  AND latin_commander = 'Baldwin I'

	                         name
	0  apyBattle of Adrianoplear)
	ACTUAL OUTPUT ====

		
		SELECT `name`
		FROM
		  (SELECT *
		   FROM `battle`
		   WHERE (`latin_commander` = 'Baldwin I'
		          OR `bulgarian_commander` = 'Kaloyan'))
		WHERE (`latin_commander` = 'Baldwin I'
		       OR `bulgarian_commander` != 'Kaloyan')
		ORDER BY name

	                            name
	0  A4USiege of Constantinople8EN
	1           Battle of Adrianople
	2      Battle of AdrianopleW3K T
	3        Battle of Philippopolis
	4      H biclM)BxqVC95xnfNXj5DFN
	5     apyBattle of Adrianoplear)
No solution for instance db2csv/battle_death/0016_dev (4764)
No solution for instance db2csv/battle_death/0009_dev (4765)
Wrong output for fuzzied solution in instance db2csv/battle_death/0008_dev (4767)
	EXPECTED OUTPUT ====

		SELECT DISTINCT T1.id,
		                T1.name
		FROM battle AS T1
		JOIN ship AS T2 ON T1.id = T2.lost_in_battle
		WHERE T2.ship_type = 'Brig'

	   id                    name
	0   1  WHFk(Battle of Rodosto
	1   3       Battle of Rodosto
	ACTUAL OUTPUT ====

		
		SELECT `lost_in_battle` AS `id`,
		       `name_other` AS `name`
		FROM
		  (SELECT `LHS`.`lost_in_battle` AS `lost_in_battle`,
		          `LHS`.`id` AS `id`,
		          `LHS`.`name` AS `name`,
		          `LHS`.`tonnage` AS `tonnage`,
		          `LHS`.`ship_type` AS `ship_type`,
		          `LHS`.`location` AS `location`,
		          `LHS`.`disposition_of_ship` AS `disposition_of_ship`,
		          `RHS`.`name` AS `name_other`,
		          `RHS`.`date` AS `date`,
		          `RHS`.`bulgarian_commander` AS `bulgarian_commander`,
		          `RHS`.`latin_commander` AS `latin_commander`,
		          `RHS`.`result` AS `result`
		   FROM
		     (SELECT *
		      FROM `ship`
		      WHERE (`ship_type` = 'Brig')) AS LHS
		   INNER JOIN battle AS RHS ON (LHS.lost_in_battle = RHS.id))
		ORDER BY id

	   id                    name
	0   1  WHFk(Battle of Rodosto
	1   1  WHFk(Battle of Rodosto
	2   1  WHFk(Battle of Rodosto
	3   3       Battle of Rodosto
Wrong output for fuzzied solution in instance db2csv/battle_death/0013_dev (4770)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM battle
		WHERE id NOT IN
		    (SELECT lost_in_battle
		     FROM ship
		     WHERE tonnage = '225' );

	   count(*)
	0        42
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT id
		   FROM ship INTERSECT SELECT id
		   FROM battle)
		WHERE (id != 225)
		ORDER BY count___

	   count___
	0         8
Wrong output for base solution in instance db2csv/battle_death/0014_dev (4771)
	EXPECTED OUTPUT ====

	                      name  date
	0  Siege of Constantinople  1235
	ACTUAL OUTPUT ====

		SELECT T1.name,
		       T1.date
		FROM battle AS T1
		JOIN ship AS T2 ON T1.id = T2.lost_in_battle
		WHERE T2.name = 'Lettice' INTERSECT
		  SELECT T1.name,
		         T1.date
		  FROM battle AS T1
		  JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = 'HMS Atalanta'

	                      name  date
	0  Siege of Constantinople  1235
Wrong output for ground truth in instance db2csv/battle_death/0014_dev (4771)
No solution for instance db2csv/battle_death/0015_dev (4773)
Wrong output for base solution in instance db2csv/battle_death/0010_dev (4774)
	EXPECTED OUTPUT ====

	   id  name
	0   3  Mary
	ACTUAL OUTPUT ====

		SELECT T2.id,
		       T2.name
		FROM death AS T1
		JOIN ship AS t2 ON T1.caused_by_ship_id = T2.id
		GROUP BY T2.id
		ORDER BY count(*) DESC
		LIMIT 1

	   id            name
	0   5  Three Brothers
Wrong output for ground truth in instance db2csv/battle_death/0010_dev (4774)
Wrong output for fuzzied solution in instance db2csv/course_teach/0027_dev (4776)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM course_arrange AS T1
		JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID
		GROUP BY T2.Name
		HAVING COUNT(*) >= 2

	                  name
	0          John Deloor
	1        Kearsley Brow
	2  Kearsley BrownEun2W
	3    Vicente Carretero
	4     fLbblJohn Deloor
	5  iiO5oKearsley Brown
	6  kJl4lKearsley Brown
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT name,
		          COUNT() AS n
		   FROM
		     (SELECT LHS.teacher_id AS teacher_id,
		             LHS.name AS name,
		             LHS.age AS age,
		             LHS.hometown AS hometown,
		             RHS.course_id AS course_id,
		             RHS.grade AS grade
		      FROM teacher AS LHS
		      INNER JOIN course_arrange AS RHS ON (LHS.teacher_id = RHS.teacher_id))
		   GROUP BY name)
		WHERE (n = 2)
		ORDER BY name

	          name
	0  John Deloor
No solution for instance db2csv/course_teach/0018_dev (4778)
Wrong output for fuzzied solution in instance db2csv/course_teach/0012_dev (4780)
	EXPECTED OUTPUT ====

		SELECT Hometown
		FROM teacher
		ORDER BY Age ASC
		LIMIT 1

	               hometown
	0  Bolton County Boroug
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT hometown_other AS hometown
		FROM
		  (SELECT LHS.teacher_id AS teacher_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.hometown AS hometown,
		          RHS.teacher_id AS teacher_id_other,
		          RHS.name AS name_other,
		          RHS.hometown AS hometown_other
		   FROM
		     (SELECT teacher_id,
		             name,
		             MIN(age) OVER () AS age,
		                           hometown
		      FROM teacher) AS LHS
		   INNER JOIN teacher AS RHS ON (LHS.age = RHS.age))
		ORDER BY hometown

	                hometown
	0   Bolton County Boroug
	1  Turton Urban District
Wrong output for fuzzied solution in instance db2csv/course_teach/0011_dev (4783)
	EXPECTED OUTPUT ====

		SELECT Hometown
		FROM teacher
		ORDER BY Age ASC
		LIMIT 1

	               hometown
	0  Bolton County Boroug
	ACTUAL OUTPUT ====

		
		SELECT hometown
		FROM
		  (SELECT *
		   FROM teacher AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT teacher_id,
		                  name,
		                  MIN(age) OVER () AS age,
		                                hometown
		           FROM teacher) AS RHS
		        WHERE (LHS.teacher_id = RHS.teacher_id
		               AND LHS.name = RHS.name
		               AND LHS.age = RHS.age
		               AND LHS.hometown = RHS.hometown) ))
		ORDER BY hometown

	                hometown
	0   Bolton County Boroug
	1  Turton Urban District
No solution for instance db2csv/course_teach/0017_dev (4785)
Wrong output for base solution in instance db2csv/course_teach/0016_dev (4787)
	EXPECTED OUTPUT ====

	                  hometown
	0  Blackrod Urban District
	ACTUAL OUTPUT ====

		SELECT Hometown
		FROM teacher
		GROUP BY Hometown
		ORDER BY COUNT(*) DESC
		LIMIT 1

	                hometown
	0  Turton Urban District
Wrong output for ground truth in instance db2csv/course_teach/0016_dev (4787)
Wrong output for fuzzied solution in instance db2csv/course_teach/0009_dev (4788)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM teacher
		WHERE Age = 32
		  OR Age = 33

	                      name
	0               Anne Walke
	1              John Deloor
	2              John Deloor
	3                Lucy Wong
	4   Vicente CarreterojBi26
	5  q1aVicente CarreteromMF
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.teacher_id AS teacher_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.hometown AS hometown
		   FROM teacher AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM teacher
		      WHERE (age >= 32
		             AND age <= 33)) AS RHS ON (LHS.teacher_id = RHS.teacher_id
		                                        AND LHS.name = RHS.name
		                                        AND LHS.age = RHS.age
		                                        AND LHS.hometown = RHS.hometown))
		ORDER BY name

	                      name
	0               Anne Walke
	1        Dq1Anne WalkerfyG
	2              John Deloor
	3              John Deloor
	4                Lucy Wong
	5   Vicente CarreterojBi26
	6  q1aVicente CarreteromMF
Wrong output for fuzzied solution in instance db2csv/course_teach/0008_dev (4790)
	EXPECTED OUTPUT ====

		select name
		from teacher
		where hometown != "little lever urban district"

	                  name
	0        Kearsley Brow
	1       Kearsley Brown
	2       Kearsley Brown
	3    Vicente Carretero
	4    Vicente Carretero
	5        earsley Brown
	6  iiO5oKearsley Brown
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT name
		   FROM teacher INTERSECT SELECT name
		   FROM teacher)
		ORDER BY name

	                  name
	0        Kearsley Brow
	1       Kearsley Brown
	2    Vicente Carretero
	3        earsley Brown
	4  iiO5oKearsley Brown
Wrong output for base solution in instance db2csv/course_teach/0006_dev (4792)
	EXPECTED OUTPUT ====

	   age                     hometown
	0   26  Farnworth Municipal Borough
	1   29        Bolton County Borough
	2   32      Blackrod Urban District
	3   33       Horwich Urban District
	4   39        Turton Urban District
	5   41  Little Lever Urban District
	6   45      Kearsley Urban District
	ACTUAL OUTPUT ====

		SELECT Age,
		       Hometown
		FROM teacher

	  age                     hometown
	0  26  Farnworth Municipal Borough
	1  29        Bolton County Borough
	2  32      Blackrod Urban District
	3  33       Horwich Urban District
	4  39        Turton Urban District
	5  41  Little Lever Urban District
	6  45      Kearsley Urban District
Wrong output for ground truth in instance db2csv/course_teach/0006_dev (4792)
Wrong output for fuzzied solution in instance db2csv/course_teach/0028_dev (4795)
	EXPECTED OUTPUT ====

		SELECT T2.Name
		FROM course_arrange AS T1
		JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID
		GROUP BY T2.Name
		HAVING COUNT(*) >= 2

	                  name
	0          John Deloor
	1        Kearsley Brow
	2  Kearsley BrownEun2W
	3    Vicente Carretero
	4     fLbblJohn Deloor
	5  iiO5oKearsley Brown
	6  kJl4lKearsley Brown
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT teacher_id,
		          name,
		          age,
		          hometown,
		          teacher_id AS n
		   FROM
		     (SELECT LHS.teacher_id AS teacher_id,
		             LHS.name AS name,
		             LHS.age AS age,
		             LHS.hometown AS hometown
		      FROM teacher AS LHS
		      INNER JOIN
		        (SELECT COUNT() AS n
		         FROM course_arrange) AS RHS ON (LHS.teacher_id = RHS.n)))
		WHERE (n > 2)
		ORDER BY name

	Empty DataFrame
	Columns: [name]
	Index: []
Wrong output for fuzzied solution in instance db2csv/course_teach/0013_dev (4797)
	EXPECTED OUTPUT ====

		SELECT Hometown,
		       COUNT(*)
		FROM teacher
		GROUP BY Hometown

	                             hometown  count(*)
	0     tq8GLittle Lever Urban District         1
	1         3lye3Horwich Urban District         1
	2          4KDOFtuGF d1YCrjkv6WCLYIbK         1
	3          58YBQtIPzfZIPnqAV7Pfh5r5(B         1
	4         7UxDfHorwich Urban District         1
	5          BIA67Bolton County Borough         1
	6                Bolton County Boroug         1
	7    Farnworth Municipal BoroughF0z0W         1
	8               Horwich Urban Distric         1
	9         KM0htmv92ohTONeN4eSKBHJvKRl         1
	10         Little Lever Urban Distric         1
	11   Little Lever Urban DistrictGQYVP         1
	12         QVboXBolton County Borough         1
	13   cSEE Farnworth Municipal Borough         1
	14           fuNhoIox4F62gs(U)LWl2qD1         1
	15           g(hak6aFqYXCJxBulQSlpDAQ         1
	16            he5KCojtzwd2uv3Pg4)TKqg         1
	17       igs(q(28LbGplUeDtcWfqQXj4NPA         1
	18         ittle Lever Urban District         1
	19   lFi04Little Lever Urban District         1
	20               olton County Borough         1
	21            oqeJITasbi52YNrY1U4SL7x         1
	22   qlHEJLittle Lever Urban District         1
	23  sNrFarnworth Municipal Boroughs e         1
	24   tArF5tSzk5UoQmAOuuQkALi96)3XU7ws         1
	25        vxnTxHorwich Urban District         1
	26              Bolton County Borough         2
	27        Farnworth Municipal Borough         2
	28             Horwich Urban District         3
	29        Little Lever Urban District         4
	ACTUAL OUTPUT ====

		
		SELECT hometown,
		       n AS count___
		FROM
		  (SELECT hometown,
		          COUNT() AS n
		   FROM
		     (SELECT hometown,
		             COUNT() AS n
		      FROM teacher
		      GROUP BY hometown)
		   GROUP BY hometown)
		ORDER BY hometown

	                             hometown  count___
	0     tq8GLittle Lever Urban District         1
	1         3lye3Horwich Urban District         1
	2          4KDOFtuGF d1YCrjkv6WCLYIbK         1
	3          58YBQtIPzfZIPnqAV7Pfh5r5(B         1
	4         7UxDfHorwich Urban District         1
	5          BIA67Bolton County Borough         1
	6                Bolton County Boroug         1
	7               Bolton County Borough         1
	8         Farnworth Municipal Borough         1
	9    Farnworth Municipal BoroughF0z0W         1
	10              Horwich Urban Distric         1
	11             Horwich Urban District         1
	12        KM0htmv92ohTONeN4eSKBHJvKRl         1
	13         Little Lever Urban Distric         1
	14        Little Lever Urban District         1
	15   Little Lever Urban DistrictGQYVP         1
	16         QVboXBolton County Borough         1
	17   cSEE Farnworth Municipal Borough         1
	18           fuNhoIox4F62gs(U)LWl2qD1         1
	19           g(hak6aFqYXCJxBulQSlpDAQ         1
	20            he5KCojtzwd2uv3Pg4)TKqg         1
	21       igs(q(28LbGplUeDtcWfqQXj4NPA         1
	22         ittle Lever Urban District         1
	23   lFi04Little Lever Urban District         1
	24               olton County Borough         1
	25            oqeJITasbi52YNrY1U4SL7x         1
	26   qlHEJLittle Lever Urban District         1
	27  sNrFarnworth Municipal Boroughs e         1
	28   tArF5tSzk5UoQmAOuuQkALi96)3XU7ws         1
	29        vxnTxHorwich Urban District         1
Wrong output for fuzzied solution in instance db2csv/course_teach/0014_dev (4798)
	EXPECTED OUTPUT ====

		SELECT Hometown,
		       COUNT(*)
		FROM teacher
		GROUP BY Hometown

	                             hometown  count(*)
	0     tq8GLittle Lever Urban District         1
	1         3lye3Horwich Urban District         1
	2          4KDOFtuGF d1YCrjkv6WCLYIbK         1
	3          58YBQtIPzfZIPnqAV7Pfh5r5(B         1
	4         7UxDfHorwich Urban District         1
	5          BIA67Bolton County Borough         1
	6                Bolton County Boroug         1
	7    Farnworth Municipal BoroughF0z0W         1
	8               Horwich Urban Distric         1
	9         KM0htmv92ohTONeN4eSKBHJvKRl         1
	10         Little Lever Urban Distric         1
	11   Little Lever Urban DistrictGQYVP         1
	12         QVboXBolton County Borough         1
	13   cSEE Farnworth Municipal Borough         1
	14           fuNhoIox4F62gs(U)LWl2qD1         1
	15           g(hak6aFqYXCJxBulQSlpDAQ         1
	16            he5KCojtzwd2uv3Pg4)TKqg         1
	17       igs(q(28LbGplUeDtcWfqQXj4NPA         1
	18         ittle Lever Urban District         1
	19   lFi04Little Lever Urban District         1
	20               olton County Borough         1
	21            oqeJITasbi52YNrY1U4SL7x         1
	22   qlHEJLittle Lever Urban District         1
	23  sNrFarnworth Municipal Boroughs e         1
	24   tArF5tSzk5UoQmAOuuQkALi96)3XU7ws         1
	25        vxnTxHorwich Urban District         1
	26              Bolton County Borough         2
	27        Farnworth Municipal Borough         2
	28             Horwich Urban District         3
	29        Little Lever Urban District         4
	ACTUAL OUTPUT ====

		
		SELECT hometown,
		       n AS count___
		FROM
		  (SELECT hometown,
		          COUNT() AS n
		   FROM
		     (SELECT hometown,
		             COUNT() AS n
		      FROM teacher
		      GROUP BY hometown)
		   GROUP BY hometown)
		ORDER BY hometown

	                             hometown  count___
	0     tq8GLittle Lever Urban District         1
	1         3lye3Horwich Urban District         1
	2          4KDOFtuGF d1YCrjkv6WCLYIbK         1
	3          58YBQtIPzfZIPnqAV7Pfh5r5(B         1
	4         7UxDfHorwich Urban District         1
	5          BIA67Bolton County Borough         1
	6                Bolton County Boroug         1
	7               Bolton County Borough         1
	8         Farnworth Municipal Borough         1
	9    Farnworth Municipal BoroughF0z0W         1
	10              Horwich Urban Distric         1
	11             Horwich Urban District         1
	12        KM0htmv92ohTONeN4eSKBHJvKRl         1
	13         Little Lever Urban Distric         1
	14        Little Lever Urban District         1
	15   Little Lever Urban DistrictGQYVP         1
	16         QVboXBolton County Borough         1
	17   cSEE Farnworth Municipal Borough         1
	18           fuNhoIox4F62gs(U)LWl2qD1         1
	19           g(hak6aFqYXCJxBulQSlpDAQ         1
	20            he5KCojtzwd2uv3Pg4)TKqg         1
	21       igs(q(28LbGplUeDtcWfqQXj4NPA         1
	22         ittle Lever Urban District         1
	23   lFi04Little Lever Urban District         1
	24               olton County Borough         1
	25            oqeJITasbi52YNrY1U4SL7x         1
	26   qlHEJLittle Lever Urban District         1
	27  sNrFarnworth Municipal Boroughs e         1
	28   tArF5tSzk5UoQmAOuuQkALi96)3XU7ws         1
	29        vxnTxHorwich Urban District         1
Wrong output for fuzzied solution in instance db2csv/course_teach/0007_dev (4799)
	EXPECTED OUTPUT ====

		select name
		from teacher
		where hometown != "little lever urban district"

	                  name
	0        Kearsley Brow
	1       Kearsley Brown
	2       Kearsley Brown
	3    Vicente Carretero
	4    Vicente Carretero
	5        earsley Brown
	6  iiO5oKearsley Brown
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT name
		   FROM teacher INTERSECT SELECT name
		   FROM teacher)
		ORDER BY name

	                  name
	0        Kearsley Brow
	1       Kearsley Brown
	2    Vicente Carretero
	3        earsley Brown
	4  iiO5oKearsley Brown
Wrong output for base solution in instance db2csv/course_teach/0015_dev (4800)
	EXPECTED OUTPUT ====

	                  hometown
	0  Blackrod Urban District
	ACTUAL OUTPUT ====

		SELECT Hometown
		FROM teacher
		GROUP BY Hometown
		ORDER BY COUNT(*) DESC
		LIMIT 1

	                hometown
	0  Turton Urban District
Wrong output for ground truth in instance db2csv/course_teach/0015_dev (4800)
Wrong output for fuzzied solution in instance db2csv/course_teach/0010_dev (4801)
	EXPECTED OUTPUT ====

		SELECT Name
		FROM teacher
		WHERE Age = 32
		  OR Age = 33

	                      name
	0               Anne Walke
	1              John Deloor
	2              John Deloor
	3                Lucy Wong
	4   Vicente CarreterojBi26
	5  q1aVicente CarreteromMF
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT LHS.teacher_id AS teacher_id,
		          LHS.name AS name,
		          LHS.age AS age,
		          LHS.hometown AS hometown
		   FROM teacher AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM teacher
		      WHERE (age >= 32
		             AND age <= 33)) AS RHS ON (LHS.teacher_id = RHS.teacher_id
		                                        AND LHS.name = RHS.name
		                                        AND LHS.age = RHS.age
		                                        AND LHS.hometown = RHS.hometown))
		ORDER BY name

	                      name
	0               Anne Walke
	1        Dq1Anne WalkerfyG
	2              John Deloor
	3              John Deloor
	4                Lucy Wong
	5   Vicente CarreterojBi26
	6  q1aVicente CarreteromMF
Wrong output for base solution in instance db2csv/course_teach/0005_dev (4805)
	EXPECTED OUTPUT ====

	   age                     hometown
	0   26  Farnworth Municipal Borough
	1   29        Bolton County Borough
	2   32      Blackrod Urban District
	3   33       Horwich Urban District
	4   39        Turton Urban District
	5   41  Little Lever Urban District
	6   45      Kearsley Urban District
	ACTUAL OUTPUT ====

		SELECT Age,
		       Hometown
		FROM teacher

	  age                     hometown
	0  26  Farnworth Municipal Borough
	1  29        Bolton County Borough
	2  32      Blackrod Urban District
	3  33       Horwich Urban District
	4  39        Turton Urban District
	5  41  Little Lever Urban District
	6  45      Kearsley Urban District
Wrong output for ground truth in instance db2csv/course_teach/0005_dev (4805)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0084_dev (4808)
	EXPECTED OUTPUT ====

		SELECT document_id
		FROM Paragraphs
		WHERE paragraph_text = 'Brazil' INTERSECT
		  SELECT document_id
		  FROM Paragraphs WHERE paragraph_text = 'Ireland'

	   document_id
	0           78
	ACTUAL OUTPUT ====

		
		SELECT `document_id`
		FROM `paragraphs`
		WHERE (`paragraph_text` = 'Ireland'
		       AND `paragraph_text` != 'Brazil')
		ORDER BY document_id

	   document_id
	0           78
	1      3540025
	2      3540026
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0063_dev (4809)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Paragraphs AS T1
		JOIN Documents AS T2 ON T1.document_ID = T2.document_ID
		WHERE T2.document_name = 'Summer Show'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n` AS `count___`
		FROM
		  (SELECT `LHS`.`other_details` AS `other_details`,
		          `LHS`.`paragraph_id` AS `paragraph_id`,
		          `LHS`.`n` AS `n`,
		          `RHS`.`document_id` AS `document_id`,
		          `RHS`.`template_id` AS `template_id`,
		          `RHS`.`document_name` AS `document_name`,
		          `RHS`.`document_description` AS `document_description`
		   FROM
		     (SELECT `other_details`,
		             `paragraph_id`,
		             COUNT() AS `n`
		      FROM `paragraphs`
		      GROUP BY `other_details`,
		               `paragraph_id`) AS `LHS`
		   LEFT JOIN
		     (SELECT *
		      FROM `documents`
		      WHERE (`document_name` = 'Summer Show')) AS RHS ON (LHS.other_details = RHS.other_details))
		ORDER BY count___

	   count___
	0         1
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0021_dev (4810)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Templates

	   count(*)
	0        14
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT template_details,
		          COUNT() AS n
		   FROM templates
		   GROUP BY template_details)
		ORDER BY count___

	   count___
	0         1
	1         1
	2        12
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0039_dev (4814)
	EXPECTED OUTPUT ====

		SELECT min(Version_Number),
		       template_type_code
		FROM Templates

	   min(version_number) template_type_code
	0                    0                  A
	ACTUAL OUTPUT ====

		
		SELECT version_number AS min_version_number_,
		       template_type_code
		FROM
		  (SELECT *
		   FROM templates AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT MIN(version_number) AS version_number
		           FROM templates) AS RHS
		        WHERE (LHS.version_number = RHS.version_number) ))
		ORDER BY min_version_number_

	   min_version_number_ template_type_code
	0                    0                  A
	1                    0            ADE9rnP
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0029_dev (4816)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Templates
		WHERE template_type_code = "CV"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `templates`
		WHERE (`template_type_code` = 'CV')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0083_dev (4817)
	EXPECTED OUTPUT ====

		SELECT document_id
		FROM Paragraphs
		WHERE paragraph_text = 'Brazil' INTERSECT
		  SELECT document_id
		  FROM Paragraphs WHERE paragraph_text = 'Ireland'

	   document_id
	0           78
	ACTUAL OUTPUT ====

		
		SELECT `document_id`
		FROM `paragraphs`
		WHERE (`paragraph_text` = 'Ireland'
		       AND `paragraph_text` != 'Brazil')
		ORDER BY document_id

	   document_id
	0           78
	1      3540025
	2      3540026
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0048_dev (4819)
	EXPECTED OUTPUT ====

		SELECT T1.template_type_code
		FROM Templates AS T1
		JOIN Documents AS T2 ON T1.template_id = T2.template_id
		GROUP BY T1.template_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  template_type_code
	0                  A
	ACTUAL OUTPUT ====

		
		SELECT template_type_code
		FROM
		  (SELECT LHS.template_id AS template_id,
		          LHS.version_number AS version_number,
		          LHS.template_type_code AS template_type_code,
		          LHS.date_effective_from AS date_effective_from,
		          LHS.date_effective_to AS date_effective_to,
		          LHS.template_details AS template_details,
		          RHS.maxn AS maxn
		   FROM templates AS LHS
		   INNER JOIN
		     (SELECT n,
		             MAX(n) OVER () AS maxn
		      FROM
		        (SELECT COUNT() AS n
		         FROM
		           (SELECT *
		            FROM templates AS LHS
		            WHERE NOT EXISTS
		                (SELECT 1
		                 FROM documents AS RHS
		                 WHERE (LHS.template_id = RHS.template_id) )))) AS RHS ON (LHS.template_id = RHS.n))
		ORDER BY template_type_code

	Empty DataFrame
	Columns: [template_type_code]
	Index: []
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0012_dev (4821)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Documents AS T1
		JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
		WHERE T2.Template_Type_Code = 'PPT'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT *
		   FROM `documents` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `templates`
		           WHERE (`template_type_code` != 'PPT')) AS RHS
		        WHERE (LHS.template_id = RHS.template_id) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for base solution in instance db2csv/cre_Doc_Template_Mgt/0036_dev (4823)
	EXPECTED OUTPUT ====

	  template_type_code
	0                 BK
	ACTUAL OUTPUT ====

		SELECT template_type_code
		FROM Templates
		GROUP BY template_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  template_type_code
	0                 PP
Wrong output for ground truth in instance db2csv/cre_Doc_Template_Mgt/0036_dev (4823)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0078_dev (4826)
	EXPECTED OUTPUT ====

		SELECT T1.document_id,
		       T2.document_name
		FROM Paragraphs AS T1
		JOIN Documents AS T2 ON T1.document_id = T2.document_id
		GROUP BY T1.document_id
		ORDER BY count(*) DESC
		LIMIT 1

	   document_id      document_name
	0   8474256560  How to write a CV
	ACTUAL OUTPUT ====

		
		SELECT document_id,
		       document_name
		FROM
		  (SELECT LHS.document_id AS document_id,
		          LHS.template_id AS template_id,
		          LHS.document_name AS document_name,
		          LHS.document_description AS document_description,
		          LHS.other_details AS other_details,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.document_id AS document_id,
		             LHS.template_id AS template_id,
		             LHS.document_name AS document_name,
		             LHS.document_description AS document_description,
		             LHS.other_details AS other_details,
		             RHS.n AS n
		      FROM documents AS LHS
		      INNER JOIN
		        (SELECT document_id,
		                COUNT() AS n
		         FROM paragraphs
		         GROUP BY document_id) AS RHS ON (LHS.document_id = RHS.document_id)) AS LHS
		   INNER JOIN
		     (SELECT document_id,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT document_id,
		                COUNT() AS n
		         FROM paragraphs
		         GROUP BY document_id)) AS RHS ON (LHS.document_id = RHS.document_id
		                                           AND LHS.n = RHS.n))
		ORDER BY document_id

	   document_id      document_name
	0       801800       Palm reading
	1   6993125125      CLZ(CAiB04S3h
	2   8474256560  How to write a CV
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0061_dev (4830)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Paragraphs

	   count(*)
	0        20
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT other_details,
		          COUNT() AS n
		   FROM paragraphs
		   GROUP BY other_details)
		ORDER BY count___

	    count___
	0          1
	1          1
	2          1
	3          1
	4          1
	5          1
	6          1
	7          1
	8          1
	9          1
	10         1
	11         1
	12         1
	13         1
	14         1
	15         1
	16         1
	17         1
	18         2
No solution for instance db2csv/cre_Doc_Template_Mgt/0064_dev (4831)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0011_dev (4833)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Documents AS T1
		JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID
		WHERE T2.Template_Type_Code = 'PPT'

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM
		  (SELECT *
		   FROM `documents` AS `LHS`
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM `templates`
		           WHERE (`template_type_code` != 'PPT')) AS RHS
		        WHERE (LHS.template_id = RHS.template_id) ))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0062_dev (4837)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Paragraphs

	   count(*)
	0        20
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT other_details,
		          COUNT() AS n
		   FROM paragraphs
		   GROUP BY other_details)
		ORDER BY count___

	    count___
	0          1
	1          1
	2          1
	3          1
	4          1
	5          1
	6          1
	7          1
	8          1
	9          1
	10         1
	11         1
	12         1
	13         1
	14         1
	15         1
	16         1
	17         1
	18         2
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0077_dev (4838)
	EXPECTED OUTPUT ====

		SELECT T1.document_id,
		       T2.document_name
		FROM Paragraphs AS T1
		JOIN Documents AS T2 ON T1.document_id = T2.document_id
		GROUP BY T1.document_id
		ORDER BY count(*) DESC
		LIMIT 1

	   document_id      document_name
	0   8474256560  How to write a CV
	ACTUAL OUTPUT ====

		
		SELECT document_id,
		       document_name
		FROM
		  (SELECT LHS.document_id AS document_id,
		          LHS.template_id AS template_id,
		          LHS.document_name AS document_name,
		          LHS.document_description AS document_description,
		          LHS.other_details AS other_details,
		          LHS.n AS n
		   FROM
		     (SELECT LHS.document_id AS document_id,
		             LHS.template_id AS template_id,
		             LHS.document_name AS document_name,
		             LHS.document_description AS document_description,
		             LHS.other_details AS other_details,
		             RHS.n AS n
		      FROM documents AS LHS
		      INNER JOIN
		        (SELECT document_id,
		                COUNT() AS n
		         FROM paragraphs
		         GROUP BY document_id) AS RHS ON (LHS.document_id = RHS.document_id)) AS LHS
		   INNER JOIN
		     (SELECT document_id,
		             MAX(n) OVER () AS n
		      FROM
		        (SELECT document_id,
		                COUNT() AS n
		         FROM paragraphs
		         GROUP BY document_id)) AS RHS ON (LHS.document_id = RHS.document_id
		                                           AND LHS.n = RHS.n))
		ORDER BY document_id

	   document_id      document_name
	0       801800       Palm reading
	1   6993125125      CLZ(CAiB04S3h
	2   8474256560  How to write a CV
Wrong output for base solution in instance db2csv/cre_Doc_Template_Mgt/0066_dev (4839)
	EXPECTED OUTPUT ====

	Empty DataFrame
	Columns: [other_details]
	Index: []
	ACTUAL OUTPUT ====

		select other_details
		from paragraphs
		where paragraph_text like 'korea'

	  other_details
	0          None
	1          None
Wrong output for ground truth in instance db2csv/cre_Doc_Template_Mgt/0066_dev (4839)
Wrong output for base solution in instance db2csv/cre_Doc_Template_Mgt/0035_dev (4843)
	EXPECTED OUTPUT ====

	  template_type_code
	0                 BK
	ACTUAL OUTPUT ====

		SELECT template_type_code
		FROM Templates
		GROUP BY template_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  template_type_code
	0                 PP
Wrong output for ground truth in instance db2csv/cre_Doc_Template_Mgt/0035_dev (4843)
Wrong output for base solution in instance db2csv/cre_Doc_Template_Mgt/0016_dev (4844)
	EXPECTED OUTPUT ====

	   template_id template_type_code
	0           11                 BK
	ACTUAL OUTPUT ====

		SELECT T1.template_id,
		       T2.Template_Type_Code
		FROM Documents AS T1
		JOIN Templates AS T2 ON T1.template_id = T2.template_id
		GROUP BY T1.template_id
		ORDER BY count(*) DESC
		LIMIT 1

	   template_id template_type_code
	0           25                 PP
Wrong output for ground truth in instance db2csv/cre_Doc_Template_Mgt/0016_dev (4844)
Wrong output for base solution in instance db2csv/cre_Doc_Template_Mgt/0065_dev (4847)
	EXPECTED OUTPUT ====

	Empty DataFrame
	Columns: [other_details]
	Index: []
	ACTUAL OUTPUT ====

		select other_details
		from paragraphs
		where paragraph_text like 'korea'

	  other_details
	0          None
	1          None
Wrong output for ground truth in instance db2csv/cre_Doc_Template_Mgt/0065_dev (4847)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0047_dev (4855)
	EXPECTED OUTPUT ====

		SELECT T1.template_type_code
		FROM Templates AS T1
		JOIN Documents AS T2 ON T1.template_id = T2.template_id
		GROUP BY T1.template_type_code
		ORDER BY count(*) DESC
		LIMIT 1

	  template_type_code
	0                  A
	ACTUAL OUTPUT ====

		
		SELECT template_type_code
		FROM
		  (SELECT LHS.document_id AS document_id,
		          LHS.template_id AS template_id,
		          LHS.document_name AS document_name,
		          LHS.document_description AS document_description,
		          LHS.other_details AS other_details,
		          LHS.version_number AS version_number,
		          LHS.template_type_code AS template_type_code,
		          LHS.date_effective_from AS date_effective_from,
		          LHS.date_effective_to AS date_effective_to,
		          LHS.template_details AS template_details
		   FROM
		     (SELECT LHS.document_id AS document_id,
		             LHS.template_id AS template_id,
		             LHS.document_name AS document_name,
		             LHS.document_description AS document_description,
		             LHS.other_details AS other_details,
		             RHS.version_number AS version_number,
		             RHS.template_type_code AS template_type_code,
		             RHS.date_effective_from AS date_effective_from,
		             RHS.date_effective_to AS date_effective_to,
		             RHS.template_details AS template_details
		      FROM documents AS LHS
		      INNER JOIN templates AS RHS ON (LHS.template_id = RHS.template_id)) AS LHS
		   INNER JOIN
		     (SELECT MAX(n) AS maxn
		      FROM
		        (SELECT template_id,
		                version_number,
		                template_type_code,
		                date_effective_from,
		                date_effective_to,
		                template_details,
		                COUNT(*) OVER () AS n
		         FROM templates)) AS RHS ON (LHS.template_id = RHS.maxn))
		ORDER BY template_type_code

	Empty DataFrame
	Columns: [template_type_code]
	Index: []
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0006_dev (4856)
	EXPECTED OUTPUT ====

		SELECT document_name,
		       template_id
		FROM Documents
		WHERE Document_Description LIKE "%w%"

	       document_name  template_id
	0          Robbin CV           10
	1  ow to read a book           13
	ACTUAL OUTPUT ====

		
		SELECT `document_name`,
		       `template_id`
		FROM `documents`
		WHERE (`document_description` = 'w')
		ORDER BY document_name

	Empty DataFrame
	Columns: [document_name, template_id]
	Index: []
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0040_dev (4859)
	EXPECTED OUTPUT ====

		SELECT min(Version_Number),
		       template_type_code
		FROM Templates

	   min(version_number) template_type_code
	0                    0                  A
	ACTUAL OUTPUT ====

		
		SELECT version_number AS min_version_number_,
		       template_type_code
		FROM
		  (SELECT *
		   FROM templates AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT MIN(version_number) AS version_number
		           FROM templates) AS RHS
		        WHERE (LHS.version_number = RHS.version_number) ))
		ORDER BY min_version_number_

	   min_version_number_ template_type_code
	0                    0                  A
	1                    0            ADE9rnP
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0030_dev (4865)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Templates
		WHERE template_type_code = "CV"

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS `count___`
		FROM `templates`
		WHERE (`template_type_code` = 'CV')
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0022_dev (4869)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM Templates

	   count(*)
	0        38
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT date_effective_to,
		          version_number,
		          COUNT() AS n
		   FROM templates
		   GROUP BY date_effective_to,
		            version_number)
		ORDER BY count___

	   count___
	0        35
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0079_dev (4870)
	EXPECTED OUTPUT ====

		SELECT document_id
		FROM Paragraphs
		GROUP BY document_id
		ORDER BY count(*) ASC
		LIMIT 1

	   document_id
	0            0
	ACTUAL OUTPUT ====

		
		SELECT document_id
		FROM
		  (SELECT LHS.document_id AS document_id,
		          LHS.n AS n,
		          RHS.document_id AS document_id_other
		   FROM
		     (SELECT document_id,
		             COUNT() AS n
		      FROM paragraphs
		      GROUP BY document_id) AS LHS
		   INNER JOIN
		     (SELECT document_id,
		             MIN(n) AS minn
		      FROM
		        (SELECT document_id,
		                COUNT() AS n
		         FROM paragraphs
		         GROUP BY document_id)
		      GROUP BY document_id) AS RHS ON (LHS.document_id = RHS.minn))
		ORDER BY document_id

	Empty DataFrame
	Columns: [document_id]
	Index: []
Wrong output for base solution in instance db2csv/cre_Doc_Template_Mgt/0015_dev (4876)
	EXPECTED OUTPUT ====

	   template_id template_type_code
	0           11                 BK
	ACTUAL OUTPUT ====

		SELECT T1.template_id,
		       T2.Template_Type_Code
		FROM Documents AS T1
		JOIN Templates AS T2 ON T1.template_id = T2.template_id
		GROUP BY T1.template_id
		ORDER BY count(*) DESC
		LIMIT 1

	   template_id template_type_code
	0           25                 PP
Wrong output for ground truth in instance db2csv/cre_Doc_Template_Mgt/0015_dev (4876)
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0080_dev (4884)
	EXPECTED OUTPUT ====

		SELECT document_id
		FROM Paragraphs
		GROUP BY document_id
		ORDER BY count(*) ASC
		LIMIT 1

	   document_id
	0            0
	ACTUAL OUTPUT ====

		
		SELECT document_id
		FROM
		  (SELECT LHS.document_id AS document_id,
		          LHS.n AS n,
		          RHS.document_id AS document_id_other
		   FROM
		     (SELECT document_id,
		             COUNT() AS n
		      FROM paragraphs
		      GROUP BY document_id) AS LHS
		   INNER JOIN
		     (SELECT document_id,
		             MIN(n) AS minn
		      FROM
		        (SELECT document_id,
		                COUNT() AS n
		         FROM paragraphs
		         GROUP BY document_id)
		      GROUP BY document_id) AS RHS ON (LHS.document_id = RHS.minn))
		ORDER BY document_id

	Empty DataFrame
	Columns: [document_id]
	Index: []
Wrong output for fuzzied solution in instance db2csv/cre_Doc_Template_Mgt/0005_dev (4888)
	EXPECTED OUTPUT ====

		SELECT document_name,
		       template_id
		FROM Documents
		WHERE Document_Description LIKE "%w%"

	       document_name  template_id
	0          Robbin CV           10
	1  ow to read a book           13
	ACTUAL OUTPUT ====

		
		SELECT `document_name`,
		       `template_id`
		FROM `documents`
		WHERE (`document_description` = 'w')
		ORDER BY document_name

	Empty DataFrame
	Columns: [document_name, template_id]
	Index: []
Wrong output for fuzzied solution in instance db2csv/car_1/0027_dev (4890)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM CAR_MAKERS AS T1
		JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId
		WHERE T2.CountryName = 'france';

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `countryid` AS `count___`
		FROM
		  (SELECT `LHS`.`id` AS `id`,
		          `LHS`.`maker` AS `maker`,
		          `LHS`.`fullname` AS `fullname`,
		          `LHS`.`country` AS `country`,
		          `RHS`.`countryid` AS `countryid`,
		          `RHS`.`countryname` AS `countryname`,
		          `RHS`.`continent` AS `continent`
		   FROM `car_makers` AS `LHS`
		   CROSS JOIN `countries` AS `RHS`)
		WHERE (`countryname` = 'france')
		ORDER BY count___

	   count___
	0         6
Wrong output for base solution in instance db2csv/car_1/0084_dev (4892)
	EXPECTED OUTPUT ====

	   max_mpg_
	0       NaN
	ACTUAL OUTPUT ====

		select max(mpg)
		from cars_data
		where cylinders = 8
		  or year < 1980

	  max(mpg)
	0     null
Wrong output for ground truth in instance db2csv/car_1/0084_dev (4892)
No solution for instance db2csv/car_1/0063_dev (4893)
Wrong output for fuzzied solution in instance db2csv/car_1/0021_dev (4894)
	EXPECTED OUTPUT ====

		SELECT T2.CountryName
		FROM CAR_MAKERS AS T1
		JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId
		GROUP BY T1.Country
		ORDER BY Count(*) DESC
		LIMIT 1;

	    countryname
	0  v6fImgermany
	ACTUAL OUTPUT ====

		
		SELECT countryname
		FROM
		  (SELECT countryid,
		          countryname,
		          continent,
		          maxn,
		          countryid AS country
		   FROM
		     (SELECT LHS.countryid AS countryid,
		             LHS.countryname AS countryname,
		             LHS.continent AS continent,
		             LHS.maxn AS maxn
		      FROM
		        (SELECT LHS.countryid AS countryid,
		                LHS.countryname AS countryname,
		                LHS.continent AS continent,
		                RHS.maxn AS maxn
		         FROM countries AS LHS
		         CROSS JOIN
		           (SELECT MAX(n) AS maxn
		            FROM
		              (SELECT country,
		                      COUNT() AS n
		               FROM car_makers
		               GROUP BY country)) AS RHS) AS LHS
		      INNER JOIN
		        (SELECT country,
		                COUNT() AS n
		         FROM car_makers
		         GROUP BY country) AS RHS ON (LHS.countryid = RHS.country
		                                      AND LHS.maxn = RHS.n)))
		ORDER BY countryname

	    countryname
	0       nigeria
	1  v6fImgermany
Wrong output for fuzzied solution in instance db2csv/car_1/0033_dev (4897)
	EXPECTED OUTPUT ====

		select min(weight)
		from cars_data
		where cylinders = 8
		  and year = 1974

	   min(weight)
	0         2659
	ACTUAL OUTPUT ====

		
		SELECT minweight AS min_weight_
		FROM
		  (SELECT MIN(weight) AS minweight
		   FROM
		     (SELECT *
		      FROM cars_data
		      WHERE (cylinders >= 8
		             AND YEAR = 1974)))
		ORDER BY min_weight_

	   min_weight_
	0  -9925339438
No solution for instance db2csv/car_1/0039_dev (4898)
No solution for instance db2csv/car_1/0088_dev (4899)
No solution for instance db2csv/car_1/0081_dev (4900)
No solution for instance db2csv/car_1/0029_dev (4901)
Wrong output for base solution in instance db2csv/car_1/0083_dev (4902)
	EXPECTED OUTPUT ====

	   max_mpg_
	0       NaN
	ACTUAL OUTPUT ====

		select max(mpg)
		from cars_data
		where cylinders = 8
		  or year < 1980

	  max(mpg)
	0     null
Wrong output for ground truth in instance db2csv/car_1/0083_dev (4902)
No solution for instance db2csv/car_1/0048_dev (4904)
Wrong output for base solution in instance db2csv/car_1/0037_dev (4905)
	EXPECTED OUTPUT ====

		SELECT T1.CountryName,
		       T1.CountryId
		FROM COUNTRIES AS T1
		JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country
		GROUP BY T1.CountryId
		HAVING count(*) >= 1;

	  countryname  countryid
	0         usa          1
	1     germany          2
	2      france          3
	3       japan          4
	4       italy          5
	5      sweden          6
	6          uk          7
	7       korea          8
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT countryname,
		                country AS countryid
		FROM
		  (SELECT LHS.id AS id,
		          LHS.maker AS maker,
		          LHS.fullname AS fullname,
		          LHS.country AS country,
		          RHS.countryname AS countryname,
		          RHS.continent AS continent,
		          RHS.n AS n
		   FROM car_makers AS LHS
		   INNER JOIN
		     (SELECT *
		      FROM
		        (SELECT countryid,
		                countryname,
		                continent,
		                COUNT(*) OVER () AS n
		         FROM countries)
		      WHERE (n >= 1)) AS RHS ON (LHS.country = RHS.countryid))
		ORDER BY countryname

	  countryname countryid
	0         usa         1
	1     germany         2
	2      france         3
	3       japan         4
	4       italy         5
	5      sweden         6
	6          uk         7
	7       korea         8
No solution for instance db2csv/car_1/0012_dev (4906)
Wrong output for base solution in instance db2csv/car_1/0038_dev (4907)
	EXPECTED OUTPUT ====

		SELECT T1.CountryName,
		       T1.CountryId
		FROM COUNTRIES AS T1
		JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country
		GROUP BY T1.CountryId
		HAVING count(*) >= 1;

	  countryname  countryid
	0         usa          1
	1     germany          2
	2      france          3
	3       japan          4
	4       italy          5
	5      sweden          6
	6          uk          7
	7       korea          8
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT countryname,
		                country AS countryid
		FROM
		  (SELECT id,
		          maker,
		          fullname,
		          country,
		          n,
		          countryname,
		          continent,
		          country AS countryid
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.maker AS maker,
		             LHS.fullname AS fullname,
		             LHS.country AS country,
		             LHS.n AS n,
		             RHS.countryname AS countryname,
		             RHS.continent AS continent
		      FROM
		        (SELECT id,
		                maker,
		                fullname,
		                country,
		                COUNT(*) OVER () AS n
		         FROM car_makers) AS LHS
		      INNER JOIN countries AS RHS ON (LHS.country = RHS.countryid)))
		WHERE (n != 1)
		ORDER BY countryname

	  countryname countryid
	0         usa         1
	1     germany         2
	2      france         3
	3       japan         4
	4       italy         5
	5      sweden         6
	6          uk         7
	7       korea         8
Wrong output for fuzzied solution in instance db2csv/car_1/0001_dev (4912)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM CONTINENTS;

	   count(*)
	0         6
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT contid AS count___
		FROM
		  (SELECT LHS.contid AS contid,
		          LHS.continent AS continent,
		          LHS.n AS n,
		          RHS.contid AS contid_other,
		          RHS.continent AS continent_other
		   FROM
		     (SELECT contid,
		             continent,
		             COUNT(*) OVER () AS n
		      FROM continents) AS LHS
		   INNER JOIN
		     (SELECT contid,
		             continent,
		             COUNT(*) OVER () AS n
		      FROM continents) AS RHS ON (LHS.contid = RHS.n))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
Wrong output for fuzzied solution in instance db2csv/car_1/0034_dev (4913)
	EXPECTED OUTPUT ====

		select min(weight)
		from cars_data
		where cylinders = 8
		  and year = 1974

	   min(weight)
	0         2659
	ACTUAL OUTPUT ====

		
		SELECT minweight AS min_weight_
		FROM
		  (SELECT MIN(weight) AS minweight
		   FROM
		     (SELECT *
		      FROM cars_data
		      WHERE (cylinders >= 8
		             AND YEAR = 1974)))
		ORDER BY min_weight_

	   min_weight_
	0  -9925339438
Wrong output for base solution in instance db2csv/car_1/0073_dev (4914)
	EXPECTED OUTPUT ====

		SELECT COUNT(*)
		FROM CARS_DATA
		WHERE Accelerate >
		    (SELECT Accelerate
		     FROM CARS_DATA
		     ORDER BY Horsepower DESC
		     LIMIT 1);

	   count(*)
	0        39
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT *
		   FROM cars_data AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT accelerate,
		                  mpg,
		                  MAX(horsepower) AS horsepower
		           FROM cars_data
		           GROUP BY accelerate,
		                    mpg) AS RHS
		        WHERE (LHS.accelerate = RHS.accelerate
		               AND LHS.horsepower = RHS.horsepower) ))
		ORDER BY count___

	   count___
	0        34
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_1897.sqlite3'
No solution for instance db2csv/car_1/0087_dev (4915)
Wrong output for fuzzied solution in instance db2csv/car_1/0061_dev (4916)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM CAR_MAKERS AS T1
		JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker
		WHERE T1.FullName = 'American Motor Company';

	   count(*)
	0         0
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `n_distinct` AS `count___`
		FROM
		  (SELECT `LHS`.`modelid` AS `modelid`,
		          `LHS`.`maker` AS `maker`,
		          `LHS`.`model` AS `model`,
		          `RHS`.`fullname` AS `fullname`,
		          `RHS`.`n_distinct` AS `n_distinct`
		   FROM `model_list` AS `LHS`
		   CROSS JOIN
		     (SELECT `fullname`,
		             COUNT(DISTINCT `fullname`) AS `n_distinct`
		      FROM `car_makers`
		      GROUP BY `fullname`) AS `RHS`)
		WHERE (`fullname` != 'American Motor Company')
		ORDER BY count___

	   count___
	0         1
No solution for instance db2csv/car_1/0064_dev (4917)
No solution for instance db2csv/car_1/0043_dev (4918)
No solution for instance db2csv/car_1/0011_dev (4919)
Wrong output for base solution in instance db2csv/car_1/0042_dev (4920)
	EXPECTED OUTPUT ====

	    avg_weight_  year
	0   2436.655172  1980
	1   2453.548387  1982
	2   2532.166667  1981
	3   2861.805556  1978
	4   2877.925926  1974
	5   2960.344828  1971
	6   2997.357143  1977
	7   3055.344828  1979
	8   3078.735294  1976
	9   3176.800000  1975
	10  3237.714286  1972
	11  3419.025000  1973
	12  3441.314286  1970
	ACTUAL OUTPUT ====

		SELECT avg(Weight),
		       YEAR
		FROM CARS_DATA
		GROUP BY YEAR;

	    avg(weight)  year
	0   3441.314286  1970
	1   2960.344828  1971
	2   3237.714286  1972
	3   3419.025000  1973
	4   2877.925926  1974
	5   3176.800000  1975
	6   3078.735294  1976
	7   2997.357143  1977
	8   2861.805556  1978
	9   3055.344828  1979
	10  2436.655172  1980
	11  2532.166667  1981
	12  2453.548387  1982
Wrong output for ground truth in instance db2csv/car_1/0042_dev (4920)
No solution for instance db2csv/car_1/0024_dev (4921)
Wrong output for base solution in instance db2csv/car_1/0062_dev (4923)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM CAR_MAKERS AS T1
		JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker
		WHERE T1.FullName = 'American Motor Company';

	   count(*)
	0         1
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `country` AS `count___`
		FROM
		  (SELECT `LHS`.`modelid` AS `modelid`,
		          `LHS`.`maker` AS `maker`,
		          `LHS`.`model` AS `model`,
		          `RHS`.`country` AS `country`,
		          `RHS`.`n_distinct` AS `n_distinct`
		   FROM `model_list` AS `LHS`
		   CROSS JOIN
		     (SELECT `country`,
		             COUNT(DISTINCT `fullname`) AS `n_distinct`
		      FROM `car_makers`
		      WHERE (`fullname` = 'American Motor Company')
		      GROUP BY country) AS RHS)
		ORDER BY count___

	  count___
	0        1
No solution for instance db2csv/car_1/0066_dev (4925)
Wrong output for base solution in instance db2csv/car_1/0049_dev (4926)
	EXPECTED OUTPUT ====

	   avg_horsepower_
	0       111.132911
	ACTUAL OUTPUT ====

		SELECT avg(horsepower)
		FROM CARS_DATA
		WHERE YEAR < 1980;

	   avg(horsepower)
	0       111.132911
Wrong output for ground truth in instance db2csv/car_1/0049_dev (4926)
Wrong output for base solution in instance db2csv/car_1/0045_dev (4928)
	EXPECTED OUTPUT ====

	   horsepower             make
	0          97  mazda rx2 coupe
	ACTUAL OUTPUT ====

		SELECT T2.horsepower,
		       T1.Make
		FROM CAR_NAMES AS T1
		JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id
		WHERE T2.cylinders = 3
		ORDER BY T2.horsepower DESC
		LIMIT 1;

	  horsepower             make
	0         97  mazda rx2 coupe
Wrong output for ground truth in instance db2csv/car_1/0045_dev (4928)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_1897.sqlite3'
No solution for instance db2csv/car_1/0009_dev (4931)
Wrong output for fuzzied solution in instance db2csv/car_1/0002_dev (4932)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM CONTINENTS;

	   count(*)
	0         6
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT contid AS count___
		FROM
		  (SELECT LHS.contid AS contid,
		          LHS.continent AS continent,
		          LHS.n AS n,
		          RHS.contid AS contid_other,
		          RHS.continent AS continent_other
		   FROM
		     (SELECT contid,
		             continent,
		             COUNT(*) OVER () AS n
		      FROM continents) AS LHS
		   INNER JOIN
		     (SELECT contid,
		             continent,
		             COUNT(*) OVER () AS n
		      FROM continents) AS RHS ON (LHS.contid = RHS.n))
		ORDER BY count___

	Empty DataFrame
	Columns: [count___]
	Index: []
No solution for instance db2csv/car_1/0092_dev (4933)
No solution for instance db2csv/car_1/0065_dev (4934)
Wrong output for fuzzied solution in instance db2csv/car_1/0055_dev (4935)
	EXPECTED OUTPUT ====

		SELECT Model
		FROM CAR_NAMES
		GROUP BY Model
		ORDER BY count(*) DESC
		LIMIT 1;

	     model
	0  hiyVZP 
	ACTUAL OUTPUT ====

		
		SELECT model
		FROM
		  (SELECT *
		   FROM
		     (SELECT model,
		             COUNT() AS n
		      FROM car_names
		      GROUP BY model) AS LHS
		   WHERE EXISTS
		       (SELECT 1
		        FROM
		          (SELECT MAX(n) AS n
		           FROM
		             (SELECT model,
		                     COUNT() AS n
		              FROM car_names
		              GROUP BY model)) AS RHS
		        WHERE (LHS.n = RHS.n) ))
		ORDER BY model

	     model
	0  MYay8hi
	1  hiyVZP 
Wrong output for base solution in instance db2csv/car_1/0046_dev (4936)
	EXPECTED OUTPUT ====

	   horsepower             make
	0          97  mazda rx2 coupe
	ACTUAL OUTPUT ====

		SELECT T2.horsepower,
		       T1.Make
		FROM CAR_NAMES AS T1
		JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id
		WHERE T2.cylinders = 3
		ORDER BY T2.horsepower DESC
		LIMIT 1;

	  horsepower             make
	0         97  mazda rx2 coupe
Wrong output for ground truth in instance db2csv/car_1/0046_dev (4936)
No solution for instance db2csv/car_1/0074_dev (4938)
No solution for instance db2csv/car_1/0008_dev (4939)
Wrong output for base solution in instance db2csv/car_1/0041_dev (4940)
	EXPECTED OUTPUT ====

	    avg_weight_  year
	0   2436.655172  1980
	1   2453.548387  1982
	2   2532.166667  1981
	3   2861.805556  1978
	4   2877.925926  1974
	5   2960.344828  1971
	6   2997.357143  1977
	7   3055.344828  1979
	8   3078.735294  1976
	9   3176.800000  1975
	10  3237.714286  1972
	11  3419.025000  1973
	12  3441.314286  1970
	ACTUAL OUTPUT ====

		SELECT avg(Weight),
		       YEAR
		FROM CARS_DATA
		GROUP BY YEAR;

	    avg(weight)  year
	0   3441.314286  1970
	1   2960.344828  1971
	2   3237.714286  1972
	3   3419.025000  1973
	4   2877.925926  1974
	5   3176.800000  1975
	6   3078.735294  1976
	7   2997.357143  1977
	8   2861.805556  1978
	9   3055.344828  1979
	10  2436.655172  1980
	11  2532.166667  1981
	12  2453.548387  1982
Wrong output for ground truth in instance db2csv/car_1/0041_dev (4940)
No solution for instance db2csv/car_1/0019_dev (4941)
No solution for instance db2csv/car_1/0047_dev (4942)
Wrong output for fuzzied solution in instance db2csv/car_1/0052_dev (4944)
	EXPECTED OUTPUT ====

		SELECT avg(T2.edispl)
		FROM CAR_NAMES AS T1
		JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id
		WHERE T1.Model = 'volvo';

	  avg(t2.edispl)
	0           None
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT AVG(`edispl`) OVER () AS `avg_t2_edispl_`
		FROM
		  (SELECT `makeid`,
		          `model`,
		          `make`,
		          `mpg`,
		          `cylinders`,
		          `edispl`,
		          `horsepower`,
		          `weight`,
		          `accelerate`,
		          `year`,
		          `makeid` AS `id`
		   FROM
		     (SELECT `LHS`.`makeid` AS `makeid`,
		             `LHS`.`model` AS `model`,
		             `LHS`.`make` AS `make`,
		             `RHS`.`mpg` AS `mpg`,
		             `RHS`.`cylinders` AS `cylinders`,
		             `RHS`.`edispl` AS `edispl`,
		             `RHS`.`horsepower` AS `horsepower`,
		             `RHS`.`weight` AS `weight`,
		             `RHS`.`accelerate` AS `accelerate`,
		             `RHS`.`year` AS `year`
		      FROM
		        (SELECT *
		         FROM `car_names`
		         WHERE (`model` = 'volvo')) AS LHS
		      INNER JOIN cars_data AS RHS ON (LHS.makeid = RHS.id)))
		ORDER BY avg_t2_edispl_

	Empty DataFrame
	Columns: [avg_t2_edispl_]
	Index: []
No solution for instance db2csv/car_1/0040_dev (4946)
Wrong output for fuzzied solution in instance db2csv/car_1/0071_dev (4947)
	EXPECTED OUTPUT ====

		SELECT T1.cylinders
		FROM CARS_DATA AS T1
		JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId
		WHERE T2.Model = 'volvo'
		ORDER BY T1.accelerate ASC
		LIMIT 1;

	   cylinders
	0          4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `cylinders`
		FROM
		  (SELECT `accelerate`,
		          `cylinders`,
		          MIN(`model`) AS `model`
		   FROM
		     (SELECT `makeid`,
		             `model`,
		             `make`,
		             `mpg`,
		             `cylinders`,
		             `edispl`,
		             `horsepower`,
		             `weight`,
		             `accelerate`,
		             `year`,
		             `makeid` AS `id`
		      FROM
		        (SELECT `LHS`.`makeid` AS `makeid`,
		                `LHS`.`model` AS `model`,
		                `LHS`.`make` AS `make`,
		                `RHS`.`mpg` AS `mpg`,
		                `RHS`.`cylinders` AS `cylinders`,
		                `RHS`.`edispl` AS `edispl`,
		                `RHS`.`horsepower` AS `horsepower`,
		                `RHS`.`weight` AS `weight`,
		                `RHS`.`accelerate` AS `accelerate`,
		                `RHS`.`year` AS `year`
		         FROM `car_names` AS `LHS`
		         INNER JOIN `cars_data` AS `RHS` ON (`LHS`.`makeid` = `RHS`.`id`)))
		   GROUP BY `accelerate`,
		            `cylinders`)
		WHERE (`model` = 'volvo')
		ORDER BY cylinders

	    cylinders
	0           2
	1           3
	2           6
	3           7
	4  9327900992
Wrong output for base solution in instance db2csv/car_1/0069_dev (4948)
	EXPECTED OUTPUT ====

	   horsepower
	0          71
	ACTUAL OUTPUT ====

		SELECT T1.horsepower
		FROM CARS_DATA AS T1
		ORDER BY T1.accelerate DESC
		LIMIT 1;

	  horsepower
	0         71
Wrong output for ground truth in instance db2csv/car_1/0069_dev (4948)
Wrong output for fuzzied solution in instance db2csv/car_1/0068_dev (4950)
	EXPECTED OUTPUT ====

		select distinct year
		from cars_data
		where weight between 3000 and 4000;

	          year
	0  -9436537947
	1  -8255223021
	2  -7050376633
	3  -5774532830
	4  -5570412508
	5  -4018545145
	6         1969
	7         1970
	8         1971
	9         1972
	10        1973
	11        1974
	12        1975
	13        1976
	14        1977
	15        1978
	16        1979
	17        1980
	18        1981
	19        1982
	20   807590695
	21  2163478378
	22  2268421057
	23  2420667764
	24  4953387014
	25  5401468487
	26  6002060924
	27  6017787514
	28  8596750915
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT YEAR
		FROM cars_data
		WHERE (weight = 4000
		       OR weight > 3000)
		ORDER BY YEAR

	          year
	0  -9436537947
	1  -9264154147
	2  -8255223021
	3  -7050376633
	4  -5774532830
	..         ...
	87  8596750915
	88  8601747124
	89  8624629639
	90  9147919808
	91  9687023499
	
	[92 rows x 1 columns]
No solution for instance db2csv/car_1/0030_dev (4952)
No solution for instance db2csv/car_1/0085_dev (4953)
Error while executing solution for instance db2csv/car_1/0028_dev (4954)

(sqlite3.OperationalError) DISTINCT is not supported for window functions
[SQL: 
SELECT DISTINCT `countryid` AS `count___`
FROM
  (SELECT `LHS`.`id` AS `id`,
          `LHS`.`maker` AS `maker`,
          `LHS`.`fullname` AS `fullname`,
          `LHS`.`country` AS `country`,
          `RHS`.`countryid` AS `countryid`,
          `RHS`.`countryname` AS `countryname`,
          `RHS`.`continent` AS `continent`,
          `RHS`.`n_distinct` AS `n_distinct`
   FROM `car_makers` AS `LHS`
   CROSS JOIN
     (SELECT `countryid`,
             `countryname`,
             `continent`,
             COUNT(DISTINCT `countryname`) OVER () AS `n_distinct`
      FROM `countries`
      WHERE (`countryname` = 'france')) AS RHS)
ORDER BY count___]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
No solution for instance db2csv/car_1/0089_dev (4955)
Wrong output for fuzzied solution in instance db2csv/car_1/0051_dev (4957)
	EXPECTED OUTPUT ====

		SELECT avg(T2.edispl)
		FROM CAR_NAMES AS T1
		JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id
		WHERE T1.Model = 'volvo';

	  avg(t2.edispl)
	0           None
	ACTUAL OUTPUT ====

		
		SELECT `meanedispl` AS `avg_t2_edispl_`
		FROM
		  (SELECT `model`,
		          AVG(`edispl`) AS `meanedispl`
		   FROM
		     (SELECT `makeid`,
		             `model`,
		             `make`,
		             `mpg`,
		             `cylinders`,
		             `edispl`,
		             `horsepower`,
		             `weight`,
		             `accelerate`,
		             `year`,
		             `makeid` AS `id`
		      FROM
		        (SELECT `LHS`.`makeid` AS `makeid`,
		                `LHS`.`model` AS `model`,
		                `LHS`.`make` AS `make`,
		                `RHS`.`mpg` AS `mpg`,
		                `RHS`.`cylinders` AS `cylinders`,
		                `RHS`.`edispl` AS `edispl`,
		                `RHS`.`horsepower` AS `horsepower`,
		                `RHS`.`weight` AS `weight`,
		                `RHS`.`accelerate` AS `accelerate`,
		                `RHS`.`year` AS `year`
		         FROM
		           (SELECT *
		            FROM `car_names`
		            WHERE (`model` = 'volvo')) AS LHS
		         INNER JOIN cars_data AS RHS ON (LHS.makeid = RHS.id)))
		   GROUP BY model)
		ORDER BY avg_t2_edispl_

	Empty DataFrame
	Columns: [avg_t2_edispl_]
	Index: []
Wrong output for fuzzied solution in instance db2csv/car_1/0022_dev (4958)
	EXPECTED OUTPUT ====

		SELECT T2.CountryName
		FROM CAR_MAKERS AS T1
		JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId
		GROUP BY T1.Country
		ORDER BY Count(*) DESC
		LIMIT 1;

	    countryname
	0  v6fImgermany
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT countryname_other AS countryname
		FROM
		  (SELECT id,
		          maker,
		          fullname,
		          country,
		          country AS countryid,
		          countryname,
		          continent,
		          n,
		          maxn,
		          id_other,
		          maker_other,
		          fullname_other,
		          country_other,
		          countryname_other,
		          continent_other,
		          n_other
		   FROM
		     (SELECT LHS.id AS id,
		             LHS.maker AS maker,
		             LHS.fullname AS fullname,
		             LHS.country AS country,
		             LHS.countryid AS countryid,
		             LHS.countryname AS countryname,
		             LHS.continent AS continent,
		             LHS.n AS n,
		             LHS.maxn AS maxn,
		             RHS.id AS id_other,
		             RHS.maker AS maker_other,
		             RHS.fullname AS fullname_other,
		             RHS.country AS country_other,
		             RHS.countryname AS countryname_other,
		             RHS.continent AS continent_other,
		             RHS.n AS n_other
		      FROM
		        (SELECT id,
		                maker,
		                fullname,
		                country,
		                countryid,
		                countryname,
		                continent,
		                n,
		                MAX(n) OVER () AS maxn
		         FROM
		           (SELECT LHS.id AS id,
		                   LHS.maker AS maker,
		                   LHS.fullname AS fullname,
		                   LHS.country AS country,
		                   LHS.countryid AS countryid,
		                   LHS.countryname AS countryname,
		                   LHS.continent AS continent,
		                   RHS.n AS n
		            FROM
		              (SELECT LHS.id AS id,
		                      LHS.maker AS maker,
		                      LHS.fullname AS fullname,
		                      LHS.country AS country,
		                      RHS.countryid AS countryid,
		                      RHS.countryname AS countryname,
		                      RHS.continent AS continent
		               FROM car_makers AS LHS
		               CROSS JOIN countries AS RHS) AS LHS
		            INNER JOIN
		              (SELECT country,
		                      COUNT() AS n
		               FROM car_makers
		               GROUP BY country) AS RHS ON (LHS.country = RHS.country))) AS LHS
		      INNER JOIN
		        (SELECT id,
		                maker,
		                fullname,
		                country,
		                countryid,
		                countryname,
		                continent,
		                n,
		                MAX(n) OVER () AS maxn
		         FROM
		           (SELECT LHS.id AS id,
		                   LHS.maker AS maker,
		                   LHS.fullname AS fullname,
		                   LHS.country AS country,
		                   LHS.countryid AS countryid,
		                   LHS.countryname AS countryname,
		                   LHS.continent AS continent,
		                   RHS.n AS n
		            FROM
		              (SELECT LHS.id AS id,
		                      LHS.maker AS maker,
		                      LHS.fullname AS fullname,
		                      LHS.country AS country,
		                      RHS.countryid AS countryid,
		                      RHS.countryname AS countryname,
		                      RHS.continent AS continent
		               FROM car_makers AS LHS
		               CROSS JOIN countries AS RHS) AS LHS
		            INNER JOIN
		              (SELECT country,
		                      COUNT() AS n
		               FROM car_makers
		               GROUP BY country) AS RHS ON (LHS.country = RHS.country))) AS RHS ON (LHS.country = RHS.countryid
		                                                                                    AND LHS.n = RHS.maxn)))
		ORDER BY countryname

	    countryname
	0       nigeria
	1  v6fImgermany
No solution for instance db2csv/car_1/0079_dev (4959)
No solution for instance db2csv/car_1/0013_dev (4960)
No solution for instance db2csv/car_1/0014_dev (4961)
No solution for instance db2csv/car_1/0091_dev (4962)
No solution for instance db2csv/car_1/0031_dev (4963)
Wrong output for fuzzied solution in instance db2csv/car_1/0072_dev (4964)
	EXPECTED OUTPUT ====

		SELECT T1.cylinders
		FROM CARS_DATA AS T1
		JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId
		WHERE T2.Model = 'volvo'
		ORDER BY T1.accelerate ASC
		LIMIT 1;

	   cylinders
	0          4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT `cylinders`
		FROM
		  (SELECT `accelerate`,
		          `cylinders`,
		          MIN(`model`) AS `model`
		   FROM
		     (SELECT `makeid`,
		             `model`,
		             `make`,
		             `mpg`,
		             `cylinders`,
		             `edispl`,
		             `horsepower`,
		             `weight`,
		             `accelerate`,
		             `year`,
		             `makeid` AS `id`
		      FROM
		        (SELECT `LHS`.`makeid` AS `makeid`,
		                `LHS`.`model` AS `model`,
		                `LHS`.`make` AS `make`,
		                `RHS`.`mpg` AS `mpg`,
		                `RHS`.`cylinders` AS `cylinders`,
		                `RHS`.`edispl` AS `edispl`,
		                `RHS`.`horsepower` AS `horsepower`,
		                `RHS`.`weight` AS `weight`,
		                `RHS`.`accelerate` AS `accelerate`,
		                `RHS`.`year` AS `year`
		         FROM `car_names` AS `LHS`
		         INNER JOIN `cars_data` AS `RHS` ON (`LHS`.`makeid` = `RHS`.`id`)))
		   GROUP BY `accelerate`,
		            `cylinders`)
		WHERE (`model` = 'volvo')
		ORDER BY cylinders

	    cylinders
	0           2
	1           3
	2           6
	3           7
	4  9327900992
No solution for instance db2csv/car_1/0007_dev (4965)
No solution for instance db2csv/car_1/0015_dev (4966)
No solution for instance db2csv/car_1/0010_dev (4967)
No solution for instance db2csv/car_1/0044_dev (4968)
Wrong output for fuzzied solution in instance db2csv/car_1/0067_dev (4969)
	EXPECTED OUTPUT ====

		select distinct year
		from cars_data
		where weight between 3000 and 4000;

	          year
	0  -9436537947
	1  -8255223021
	2  -7050376633
	3  -5774532830
	4  -5570412508
	5  -4018545145
	6         1969
	7         1970
	8         1971
	9         1972
	10        1973
	11        1974
	12        1975
	13        1976
	14        1977
	15        1978
	16        1979
	17        1980
	18        1981
	19        1982
	20   807590695
	21  2163478378
	22  2268421057
	23  2420667764
	24  4953387014
	25  5401468487
	26  6002060924
	27  6017787514
	28  8596750915
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT YEAR
		FROM cars_data
		WHERE (weight = 4000
		       OR weight > 3000)
		ORDER BY YEAR

	          year
	0  -9436537947
	1  -9264154147
	2  -8255223021
	3  -7050376633
	4  -5774532830
	..         ...
	87  8596750915
	88  8601747124
	89  8624629639
	90  9147919808
	91  9687023499
	
	[92 rows x 1 columns]
No solution for instance db2csv/car_1/0086_dev (4970)
No solution for instance db2csv/car_1/0082_dev (4971)
Wrong output for fuzzied solution in instance db2csv/car_1/0056_dev (4972)
	EXPECTED OUTPUT ====

		SELECT Model
		FROM CAR_NAMES
		GROUP BY Model
		ORDER BY count(*) DESC
		LIMIT 1;

	     model
	0  hiyVZP 
	ACTUAL OUTPUT ====

		
		SELECT model
		FROM
		  (SELECT model,
		          n,
		          MAX(n) OVER () AS maxn
		   FROM
		     (SELECT model,
		             COUNT() AS n
		      FROM car_names
		      GROUP BY model))
		WHERE (maxn <= n)
		ORDER BY model

	     model
	0  MYay8hi
	1  hiyVZP 
No solution for instance db2csv/car_1/0020_dev (4973)
No solution for instance db2csv/car_1/0080_dev (4975)
No solution for instance db2csv/car_1/0090_dev (4976)
Wrong output for base solution in instance db2csv/car_1/0070_dev (4977)
	EXPECTED OUTPUT ====

	   horsepower
	0          71
	ACTUAL OUTPUT ====

		SELECT T1.horsepower
		FROM CARS_DATA AS T1
		ORDER BY T1.accelerate DESC
		LIMIT 1;

	  horsepower
	0         71
Wrong output for ground truth in instance db2csv/car_1/0070_dev (4977)
Wrong output for fuzzied solution in instance db2csv/car_1/0023_dev (4978)
	EXPECTED OUTPUT ====

		select count(*),
		       t2.fullname
		from model_list as t1
		join car_makers as t2 on t1.maker = t2.id
		group by t2.id;

	   count(*)             fullname
	0         1           47n9kMazda
	1         1                Mazda
	2         1                Volvo
	3         1                Volvo
	4         1                 olvo
	5         1  uAMNissan MotorsvrZ
	6         3                Volvo
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT n AS count___,
		                fullname
		FROM
		  (SELECT LHS.id AS id,
		          LHS.maker AS maker,
		          LHS.fullname AS fullname,
		          LHS.country AS country,
		          LHS.modelid AS modelid,
		          LHS.model AS model,
		          RHS.n AS n
		   FROM
		     (SELECT id,
		             id AS maker,
		             fullname,
		             country,
		             modelid,
		             model
		      FROM
		        (SELECT LHS.id AS id,
		                LHS.maker AS maker,
		                LHS.fullname AS fullname,
		                LHS.country AS country,
		                RHS.modelid AS modelid,
		                RHS.model AS model
		         FROM car_makers AS LHS
		         INNER JOIN model_list AS RHS ON (LHS.id = RHS.maker))) AS LHS
		   INNER JOIN
		     (SELECT id,
		             COUNT() AS n
		      FROM
		        (SELECT id,
		                id AS maker,
		                fullname,
		                country,
		                modelid,
		                model
		         FROM
		           (SELECT LHS.id AS id,
		                   LHS.maker AS maker,
		                   LHS.fullname AS fullname,
		                   LHS.country AS country,
		                   RHS.modelid AS modelid,
		                   RHS.model AS model
		            FROM car_makers AS LHS
		            INNER JOIN model_list AS RHS ON (LHS.id = RHS.maker)))
		      GROUP BY id) AS RHS ON (LHS.id = RHS.id))
		ORDER BY count___

	   count___             fullname
	0         1           47n9kMazda
	1         1                Mazda
	2         1                Volvo
	3         1                 olvo
	4         1  uAMNissan MotorsvrZ
	5         3                Volvo
Wrong output for base solution in instance db2csv/car_1/0050_dev (4979)
	EXPECTED OUTPUT ====

	   avg_horsepower_
	0       111.132911
	ACTUAL OUTPUT ====

		select avg(horsepower)
		from cars_data
		where year < 1980;

	   avg(horsepower)
	0       111.132911
Wrong output for ground truth in instance db2csv/car_1/0050_dev (4979)
Wrong output for fuzzied solution in instance db2csv/car_1/0005_dev (4980)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM COUNTRIES;

	   count(*)
	0        10
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT continent,
		          countryname,
		          COUNT() AS n
		   FROM countries
		   GROUP BY continent,
		            countryname)
		ORDER BY count___

	   count___
	0         8
No solution for instance db2csv/car_1/0032_dev (4981)
Wrong output for base solution in instance db2csv/concert_singer/0027_dev (4982)
	EXPECTED OUTPUT ====

	   year
	0  2014
	ACTUAL OUTPUT ====

		SELECT YEAR
		FROM concert
		GROUP BY YEAR
		ORDER BY count(*) DESC
		LIMIT 1

	   year
	0  2015
Wrong output for ground truth in instance db2csv/concert_singer/0027_dev (4982)
Wrong output for fuzzied solution in instance db2csv/concert_singer/0021_dev (4983)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM concert
		WHERE YEAR = 2014
		  OR YEAR = 2015

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT n AS count___
		FROM
		  (SELECT COUNT() AS n
		   FROM concert)
		WHERE (n <= 2015
		       AND n <= 2014)
		ORDER BY count___

	   count___
	0         8
Wrong output for fuzzied solution in instance db2csv/concert_singer/0033_dev (4985)
	EXPECTED OUTPUT ====

		SELECT name
		FROM stadium
		EXCEPT
		SELECT T2.name
		FROM concert AS T1
		JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id
		WHERE T1.year = 2014

	                  name
	0              Balmoor
	1           Glebe Park
	2        Somerset Park
	3  XIfSomerset ParkByM
	4         kPxCLBalmoor
	5         omerset Park
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM stadium AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM concert
		           WHERE (YEAR <= 2014)) AS RHS
		        WHERE (LHS.stadium_id = RHS.stadium_id) ))
		ORDER BY name

	                  name
	0              Balmoor
	1              Balmoor
	2    Forthbank Stadium
	3           Glebe Park
	4        Somerset Park
	5        Somerset Park
	6  XIfSomerset ParkByM
	7         kPxCLBalmoor
	8         omerset Park
Wrong output for fuzzied solution in instance db2csv/concert_singer/0001_dev (4993)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM singer

	   count(*)
	0        42
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT name,
		          song_name,
		          COUNT() AS n
		   FROM singer
		   GROUP BY name,
		            song_name)
		ORDER BY count___

	   count___
	0        37
No solution for instance db2csv/concert_singer/0043_dev (4995)
No solution for instance db2csv/concert_singer/0042_dev (4997)
Wrong output for fuzzied solution in instance db2csv/concert_singer/0017_dev (4999)
	EXPECTED OUTPUT ====

		select max(capacity),
		       average
		from stadium

	   max(capacity)  average
	0           4125      643
	ACTUAL OUTPUT ====

		
		SELECT capacity AS max_capacity_,
		       average
		FROM
		  (SELECT LHS.stadium_id AS stadium_id,
		          LHS.location AS LOCATION,
		          LHS.name AS name,
		          LHS.capacity AS capacity,
		          LHS.highest AS highest,
		          LHS.lowest AS lowest,
		          LHS.average AS average
		   FROM stadium AS LHS
		   INNER JOIN
		     (SELECT MAX(capacity) AS maxcapacity
		      FROM stadium) AS RHS ON (LHS.capacity = RHS.maxcapacity))
		ORDER BY max_capacity_

	   max_capacity_  average
	0           4125      643
	1           4125      643
No solution for instance db2csv/concert_singer/0026_dev (5000)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_1897.sqlite3'
Wrong output for fuzzied solution in instance db2csv/concert_singer/0035_dev (5002)
	EXPECTED OUTPUT ====

		select t2.concert_name,
		       t2.theme,
		       count(*)
		from singer_in_concert as t1
		join concert as t2 on t1.concert_id = t2.concert_id
		group by t2.concert_id

	         concert_name                   theme  count(*)
	0            (8OxYyay         Party All Night         1
	1         0dSrTWeek 2              K)kKjJRvaI         4
	2    1Z)(wHome Visits         Party All Night         2
	3         3xy3i9KluCy             mREg53)r012         2
	4            Audition         Party All Night         1
	5            Audition              Wide Awake         1
	6            Audition     lNyBleeding LoveTan         1
	7            Audition      WVgWtHappy Tonight         2
	8            Audition              Wide Awake         4
	9           Auditions           Bleeding Love         1
	10          Auditions           Happy Tonight         1
	11          Auditions        MEjWide AwakenU6         1
	12          Auditions              Wide Awake         1
	13          Auditions    Party All NightxA Ec         2
	14          Auditions       mQ2YBleeding Love         3
	15          Auditions      pAb17(m6WV)lkjhDgZ         3
	16          Auditions         Party All Night         5
	17         Home Visit            Happy Tonigh         1
	18         Home Visit          Party All Nigh         1
	19        Home Visits      Bleeding LoveeTJeM         1
	20        Home Visits         Party All Night         2
	21        Home Visits           Bleeding Love         3
	22   Home VisitsPC06U        vAmWide AwakeptD         4
	23      JM(3My0dhfHOX            Happy Tonigh         3
	24       Kh3Week 2Ay3      Happy TonightKVI7G         2
	25  NPXHome Visits5yN           Bleeding Love         1
	26        OXEcfBOkG)o              Wide Awake         2
	27   QadKWHome Visits   7EHmXPzlcuudWhKDPfyO)         1
	28              Week               Wide Awake         1
	29        Week 2gR3K0         UF0jHsjvMJ0l9x5         4
	30    ZuSAuditionsWuu           Bleeding Love         3
	31        aNUmoWeek 2           Bleeding Love         2
	32              eek 2           Bleeding Love         3
	33        h3lE7Week 2               Wide Awak         1
	34          jNQ(kp9bP              Wide Awake         4
	35            jlZBl7M           Happy Tonight         1
	36            jlZBl7M        M8vWide AwakeRIn         1
	37         ome Visits           Happy Tonight         3
	38         uacVfbVTyE  QjQGx7mX0XvAOBWvz5rTRn         1
	39        uacVfbVTyE9              L4mYYX1yDk         1
	40           uditions           Happy Tonight         3
	41           uditions          arty All Night         5
	42     vB(B6Auditions           OXW52zraOh 1C         2
	43     wFFiNAuditions              Wide Awake         3
	44         xy3i9KluCy            Bleeding Lov         1
	45     yFwpO9lS)NgbE8              Wide Awake         1
	ACTUAL OUTPUT ====

		
		SELECT concert_name,
		       theme,
		       n AS count___
		FROM
		  (SELECT LHS.concert_id AS concert_id,
		          LHS.concert_name AS concert_name,
		          LHS.theme AS theme,
		          LHS.stadium_id AS stadium_id,
		          LHS.year AS YEAR,
		          RHS.n AS n
		   FROM concert AS LHS
		   LEFT JOIN
		     (SELECT concert_id,
		             COUNT() AS n
		      FROM singer_in_concert
		      GROUP BY concert_id) AS RHS ON (LHS.concert_id = RHS.concert_id))
		ORDER BY concert_name

	         concert_name                   theme  count___
	0            (8OxYyay         Party All Night       1.0
	1         0dSrTWeek 2              K)kKjJRvaI       4.0
	2    1Z)(wHome Visits         Party All Night       2.0
	3         3xy3i9KluCy             mREg53)r012       2.0
	4            Audition         Party All Night       1.0
	5            Audition              Wide Awake       1.0
	6            Audition     lNyBleeding LoveTan       1.0
	7            Audition      WVgWtHappy Tonight       2.0
	8            Audition              Wide Awake       4.0
	9           Auditions           Bleeding Love       1.0
	10          Auditions           Happy Tonight       1.0
	11          Auditions        MEjWide AwakenU6       1.0
	12          Auditions              Wide Awake       1.0
	13          Auditions    Party All NightxA Ec       2.0
	14          Auditions       mQ2YBleeding Love       3.0
	15          Auditions      pAb17(m6WV)lkjhDgZ       3.0
	16          Auditions         Party All Night       5.0
	17             BOkG)o           Bleeding Love       NaN
	18         Home Visit            Happy Tonigh       1.0
	19         Home Visit          Party All Nigh       1.0
	20        Home Visits      Bleeding LoveeTJeM       1.0
	21        Home Visits         Party All Night       2.0
	22        Home Visits           Bleeding Love       3.0
	23   Home VisitsPC06U        vAmWide AwakeptD       4.0
	24      JM(3My0dhfHOX            Happy Tonigh       3.0
	25       Kh3Week 2Ay3      Happy TonightKVI7G       2.0
	26  NPXHome Visits5yN           Bleeding Love       1.0
	27        OXEcfBOkG)o              Wide Awake       2.0
	28   QadKWHome Visits   7EHmXPzlcuudWhKDPfyO)       1.0
	29              Week               Wide Awake       1.0
	30             Week 2        WJJWide AwaketRv       NaN
	31        Week 2gR3K0         UF0jHsjvMJ0l9x5       4.0
	32    ZuSAuditionsWuu           Bleeding Love       3.0
	33        aNUmoWeek 2           Bleeding Love       2.0
	34              eek 2           Bleeding Love       3.0
	35        h3lE7Week 2               Wide Awak       1.0
	36          jNQ(kp9bP              Wide Awake       4.0
	37            jlZBl7M           Happy Tonight       1.0
	38            jlZBl7M        M8vWide AwakeRIn       1.0
	39         ome Visits           Happy Tonight       3.0
	40         uacVfbVTyE  QjQGx7mX0XvAOBWvz5rTRn       1.0
	41        uacVfbVTyE9              L4mYYX1yDk       1.0
	42           uditions           Happy Tonight       3.0
	43           uditions          arty All Night       5.0
	44     vB(B6Auditions           OXW52zraOh 1C       2.0
	45     wFFiNAuditions              Wide Awake       3.0
	46         xy3i9KluCy            Bleeding Lov       1.0
	47     yFwpO9lS)NgbE8              Wide Awake       1.0
No solution for instance db2csv/concert_singer/0016_dev (5003)
Wrong output for fuzzied solution in instance db2csv/concert_singer/0009_dev (5004)
	EXPECTED OUTPUT ====

		SELECT DISTINCT country
		FROM singer
		WHERE age > 20

	               country
	0        )64o636Bi6VYe
	1         057France uB
	2        5rJgXby 3uJ8v
	3       COLX DDrPXmjW0
	4          E0AlgFrance
	5                Franc
	6               France
	7          France Z9mt
	8                Gdm2J
	9          ME1VN9AoEbC
	10       United States
	11  United StatesJSdPT
	12           bYPFvh6jv
	13        nited States
	14               rance
	15         ua41 rybStW
	16            wBXPqo9F
	ACTUAL OUTPUT ====

		
		SELECT country
		FROM
		  (SELECT country
		   FROM singer
		   WHERE (age != 20) INTERSECT
		     SELECT country
		     FROM singer)
		ORDER BY country

	               country
	0        )64o636Bi6VYe
	1         057France uB
	2        5rJgXby 3uJ8v
	3       COLX DDrPXmjW0
	4          E0AlgFrance
	5                Franc
	6               France
	7          France Z9mt
	8         GXBHY227ZYpH
	9                Gdm2J
	10         ME1VN9AoEbC
	11       United States
	12  United StatesJSdPT
	13           bYPFvh6jv
	14        nited States
	15             p ritgr
	16               rance
	17         ua41 rybStW
	18            wBXPqo9F
Wrong output for fuzzied solution in instance db2csv/concert_singer/0002_dev (5005)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM singer

	   count(*)
	0        42
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM
		  (SELECT name,
		          song_name,
		          COUNT() AS n
		   FROM singer
		   GROUP BY name,
		            song_name)
		ORDER BY count___

	   count___
	0        37
Wrong output for base solution in instance db2csv/concert_singer/0008_dev (5006)
	EXPECTED OUTPUT ====

	  song_name  song_release_year
	0      Love               2016
	ACTUAL OUTPUT ====

		SELECT song_name,
		       song_release_year
		FROM singer
		ORDER BY age
		LIMIT 1

	  song_name song_release_year
	0      Love              2016
Wrong output for ground truth in instance db2csv/concert_singer/0008_dev (5006)
No solution for instance db2csv/concert_singer/0041_dev (5007)
Wrong output for fuzzied solution in instance db2csv/concert_singer/0019_dev (5008)
	EXPECTED OUTPUT ====

		SELECT name,
		       capacity
		FROM stadium
		ORDER BY average DESC
		LIMIT 1

	           name  capacity
	0  Stark's Park      4125
	ACTUAL OUTPUT ====

		
		SELECT name,
		       capacity
		FROM
		  (SELECT LHS.stadium_id AS stadium_id,
		          LHS.location AS LOCATION,
		          LHS.name AS name,
		          LHS.capacity AS capacity,
		          LHS.highest AS highest,
		          LHS.lowest AS lowest,
		          LHS.average AS average
		   FROM stadium AS LHS
		   INNER JOIN
		     (SELECT MAX(average) AS maxaverage
		      FROM stadium) AS RHS ON (LHS.average = RHS.maxaverage))
		ORDER BY name

	                 name  capacity
	0  D3P3bSomerset Park      1999
	1       Somerset Park      4125
	2        Stark's Park      4125
No solution for instance db2csv/concert_singer/0040_dev (5010)
Wrong output for base solution in instance db2csv/concert_singer/0028_dev (5013)
	EXPECTED OUTPUT ====

	   year
	0  2014
	ACTUAL OUTPUT ====

		SELECT YEAR
		FROM concert
		GROUP BY YEAR
		ORDER BY count(*) DESC
		LIMIT 1

	   year
	0  2015
Wrong output for ground truth in instance db2csv/concert_singer/0028_dev (5013)
Wrong output for fuzzied solution in instance db2csv/concert_singer/0022_dev (5014)
	EXPECTED OUTPUT ====

		SELECT count(*)
		FROM concert
		WHERE YEAR = 2014
		  OR YEAR = 2015

	   count(*)
	0         4
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT COUNT(*) OVER () AS count___
		FROM concert
		WHERE (YEAR != 2015
		       OR YEAR > 2014)
		ORDER BY count___

	   count___
	0         8
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_1897.sqlite3'
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_1897.sqlite3'
Wrong output for fuzzied solution in instance db2csv/concert_singer/0031_dev (5017)
	EXPECTED OUTPUT ====

		SELECT country
		FROM singer
		WHERE age > 40 INTERSECT
		  SELECT country
		  FROM singer WHERE age < 30

	Empty DataFrame
	Columns: [country]
	Index: []
	ACTUAL OUTPUT ====

		
		SELECT DISTINCT country
		FROM singer
		WHERE (age = 40
		       OR age < 30)
		ORDER BY country

	               country
	0          Netherlands
	1  niTUnited StatesmMs
Wrong output for base solution in instance db2csv/concert_singer/0007_dev (5018)
	EXPECTED OUTPUT ====

	  song_name  song_release_year
	0      Love               2016
	ACTUAL OUTPUT ====

		SELECT song_name,
		       song_release_year
		FROM singer
		ORDER BY age
		LIMIT 1

	  song_name song_release_year
	0      Love              2016
Wrong output for ground truth in instance db2csv/concert_singer/0007_dev (5018)
No solution for instance db2csv/concert_singer/0015_dev (5019)
Error while getting results...

[Errno 2] No such file or directory: 'fuzzy_1897.sqlite3'
Wrong output for fuzzied solution in instance db2csv/concert_singer/0020_dev (5022)
	EXPECTED OUTPUT ====

		SELECT name,
		       capacity
		FROM stadium
		ORDER BY average DESC
		LIMIT 1

	           name  capacity
	0  Stark's Park      4125
	ACTUAL OUTPUT ====

		
		SELECT name,
		       capacity
		FROM
		  (SELECT LHS.stadium_id AS stadium_id,
		          LHS.location AS LOCATION,
		          LHS.name AS name,
		          LHS.capacity AS capacity,
		          LHS.highest AS highest,
		          LHS.lowest AS lowest,
		          LHS.average AS average
		   FROM stadium AS LHS
		   INNER JOIN
		     (SELECT MAX(average) AS maxaverage
		      FROM stadium) AS RHS ON (LHS.average = RHS.maxaverage))
		ORDER BY name

	                 name  capacity
	0  D3P3bSomerset Park      1999
	1       Somerset Park      4125
	2        Stark's Park      4125
No solution for instance db2csv/concert_singer/0025_dev (5023)
Wrong output for fuzzied solution in instance db2csv/concert_singer/0032_dev (5026)
	EXPECTED OUTPUT ====

		SELECT name
		FROM stadium
		EXCEPT
		SELECT T2.name
		FROM concert AS T1
		JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id
		WHERE T1.year = 2014

	                  name
	0              Balmoor
	1           Glebe Park
	2        Somerset Park
	3  XIfSomerset ParkByM
	4         kPxCLBalmoor
	5         omerset Park
	ACTUAL OUTPUT ====

		
		SELECT name
		FROM
		  (SELECT *
		   FROM stadium AS LHS
		   WHERE NOT EXISTS
		       (SELECT 1
		        FROM
		          (SELECT *
		           FROM concert
		           WHERE (YEAR = 2014)) AS RHS
		        WHERE (LHS.stadium_id = RHS.stadium_id) ))
		ORDER BY name

	                   name
	0               Balmoor
	1               Balmoor
	2     Forthbank Stadium
	3     Forthbank Stadium
	4            Glebe Park
	5            Glebe Park
	6         Somerset Park
	7         Somerset Park
	8   XIfSomerset ParkByM
	9          kPxCLBalmoor
	10         omerset Park
	11         omerset Park
No database for instance textbook/1 (5027)
No database for instance textbook/12 (5028)
No database for instance textbook/24 (5029)
No solution for instance textbook/27 (5030)
No ground truth for instance textbook/14 (5031)
No solution for instance textbook/23 (5032)
No database for instance textbook/4 (5033)
No ground truth for instance textbook/20 (5034)
No database for instance textbook/8 (5035)
No database for instance textbook/35 (5036)
No ground truth for instance textbook/16 (5037)
No database for instance textbook/10 (5038)
No ground truth for instance textbook/21 (5039)
No ground truth for instance textbook/18 (5040)
No database for instance textbook/3 (5041)
No solution for instance textbook/29 (5042)
No solution for instance textbook/36 (5043)
No solution for instance textbook/37 (5044)
No database for instance textbook/6 (5045)
No solution for instance textbook/30 (5046)
No solution for instance textbook/25 (5047)
No database for instance textbook/11 (5048)
No database for instance textbook/7 (5049)
No database for instance textbook/5 (5050)
No solution for instance textbook/32 (5051)
No solution for instance textbook/28 (5052)
No ground truth for instance textbook/13 (5053)
No solution for instance textbook/33 (5054)
No database for instance textbook/34 (5055)
No database for instance textbook/26 (5056)
No database for instance textbook/2 (5057)
No ground truth for instance textbook/17 (5058)
No solution for instance textbook/22 (5059)
No ground truth for instance textbook/19 (5060)
No ground truth for instance textbook/15 (5061)
No solution for instance textbook/31 (5062)
No database for instance textbook/9 (5063)
