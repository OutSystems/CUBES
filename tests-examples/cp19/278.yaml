inputs:
- tests-examples/cp19/tables/aircraft.txt
- tests-examples/cp19/tables/employees.txt
- tests-examples/cp19/tables/certified.txt
output: tests-examples/cp19/tables/47.out
const:
- '1000'
- '250000'
aggrs:
- mean
attrs:
- salary
- crusingrange
bools:
- '>'
loc: '2'
comment: "# 5.3.4 optimal solution sql\n\nSELECT Temp.name, Temp.AvgSalary\nFROM (SELECT\
  \ A.aid, A.aname AS name, AVG(E.salary) AS AvgSalary \n\tFROM aircraft A, certified\
  \ C, employees E \n\tWHERE A.aid = C.aid AND C.eid = E.eid AND A.crusingrange >\
  \ 1000\n\tGROUP BY A.aid, A.aname) AS Temp\n\n\ncertified <- read.table(\"tests-examples/cp19/tables/certified.txt\"\
  , sep =\",\", header=T)\naircraft <- read.table(\"tests-examples/cp19/tables/aircraft.txt\"\
  , sep =\",\", header=T)\nemployees <- read.table(\"tests-examples/cp19/tables/employees.txt\"\
  , sep =\",\", header=T)\ndatout <- read.table(\"tests-examples/cp19/tables/47.out\"\
  , sep =\",\", header=T)\n\nout <- inner_join(inner_join(aircraft, certified), employees)\
  \ %>%\n    filter(crusingrange > 1000) %>%\n    group_by(aid, aname) %>% summarise(meansalary\
  \ = mean(salary)) %>% \n    filter(meansalary > 250000) %>% select(aid, aname)"
