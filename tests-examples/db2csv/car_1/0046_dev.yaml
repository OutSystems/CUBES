db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/cars_data.csv
 - tests-examples/db2csv/car_1/tables/car_names.csv
output: tests-examples/db2csv/car_1/tables/0046_dev.csv
raw_question: What is the largest amount of horsepower for the models with 3 cylinders and what make is it? 
question_index: 132 
constants:
 - 3
join_columns:
 - id
 - makeid
functions:
 - max
columns:
 - cylinders
 - horsepower
filters:
 - '='
comment: |-
  SELECT T2.horsepower,
         T1.Make
  FROM CAR_NAMES AS T1
  JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id
  WHERE T2.cylinders = 3
  ORDER BY T2.horsepower DESC
  LIMIT 1;

sql: |-
  SELECT T2.horsepower,
         T1.Make
  FROM CAR_NAMES AS T1
  JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id
  WHERE T2.cylinders = 3
  ORDER BY T2.horsepower DESC
  LIMIT 1;
smbop_beam_join_columns:
- - id
  - makeid
- - id
  - makeid
- - id
  - makeid
- - id
  - makeid
- - id
  - makeid
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
smbop_beam_constants:
- - 3
- - 3
- - 3
- - 3
- - 3
smbop_beam_functions:
- - max
- - max
- []
- []
- []
smbop_beam_columns:
- - cylinders
  - horsepower
- - cylinders
  - horsepower
- - cylinders
- - cylinders
- - cylinders
smbop_beam_ieu:
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT MAX( cars_data.horsepower ) , car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3
  - SELECT MAX( cars_data.horsepower ) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3
  - SELECT car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3
  - SELECT cars_data.cylinders , car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3
  - SELECT car_names.make , car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3
smbop_beam_inferred_code_w_terminals:
  - SELECT MAX( cars_data.horsepower ) , car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3
  - SELECT MAX( cars_data.horsepower ) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3
  - SELECT car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3
  - SELECT cars_data.cylinders , car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3
  - SELECT car_names.make , car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3
ratsql_beam_join_columns:
- - id
  - makeid
- - id
  - makeid
- - id
  - makeid
- - model
  - country
  - countryid
  - id
  - maker
  - makeid
- - id
  - makeid
- - id
  - makeid
- - id
  - makeid
- []
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- - make
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
ratsql_beam_constants:
- - 3
- - 3
- - 3
- - 3
- - 3
- - 3
- - 3
- - 3
ratsql_beam_functions:
- - max
- - max
- - max
- - max
- - max
- - max
- - max
- - max
ratsql_beam_columns:
- - cylinders
  - horsepower
- - cylinders
  - horsepower
- - cylinders
  - horsepower
- - cylinders
  - horsepower
- - cylinders
  - horsepower
- - cylinders
  - horsepower
- - cylinders
  - horsepower
- - cylinders
  - horsepower
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal'
  - SELECT Max(cars_data.Horsepower), car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal'
  - SELECT DISTINCT Max(cars_data.Horsepower), car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal'
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE DISTINCT cars_data.Cylinders = 'terminal'
  - SELECT Max(cars_data.Horsepower), DISTINCT car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal'
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal'
  - SELECT Max(DISTINCT cars_data.Horsepower), car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal'
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal' LIMIT 1
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal' GROUP BY car_names.Make
  - SELECT Max(cars_data.Horsepower), cars_data.MPG FROM cars_data WHERE cars_data.Cylinders = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3
  - SELECT Max(cars_data.Horsepower), car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3
  - SELECT DISTINCT Max(cars_data.Horsepower), car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE DISTINCT cars_data.Cylinders = 3
  - SELECT Max(cars_data.Horsepower), DISTINCT car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3
  - SELECT Max(DISTINCT cars_data.Horsepower), car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3 LIMIT 1
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3 GROUP BY car_names.Make
  - SELECT Max(cars_data.Horsepower), cars_data.MPG FROM cars_data WHERE cars_data.Cylinders = 3
ratsql_beam_score_history:
- - -0.10410881042480469
  - -0.10416984558105469
  - -0.12662267684936523
  - -0.1033637523651123
  - -0.13211345672607422
  - -0.09866476058959961
  - -0.14420461654663086
  - -0.09985160827636719
  - -0.10665178298950195
  - -0.1044154167175293
  - -0.10497856140136719
  - -0.05179761350154877
  - -0.10914421081542969
  - -0.10501790046691895
  - -0.10367536544799805
  - -0.09258460998535156
  - -0.10383033752441406
  - -0.10523796081542969
  - -0.10524511337280273
  - -0.1064901351928711
  - -0.23132853209972382
  - -0.11155176162719727
  - -0.10554623603820801
  - -0.08917427062988281
  - -0.08725786209106445
  - -0.10090351104736328
  - -0.1008915901184082
  - -0.10752248764038086
  - -0.10431289672851562
  - -0.10500335693359375
  - -0.0640086978673935
  - -0.1110682487487793
  - -0.10580801963806152
  - -0.10634660720825195
  - -0.20088815689086914
  - -0.10433435440063477
  - -0.10704350471496582
  - -0.10468530654907227
  - -0.09636735916137695
  - -0.10553264617919922
  - -0.11555147171020508
  - -0.10477256774902344
  - -0.10418415069580078
  - -0.4014364778995514
  - -0.10508251190185547
  - -0.10756635665893555
  - -0.1143236979842186
- - -0.10410881042480469
  - -0.10416984558105469
  - -0.12662267684936523
  - -0.1033637523651123
  - -0.13211345672607422
  - -0.09866476058959961
  - -0.14420461654663086
  - -0.09985160827636719
  - -0.10665178298950195
  - -0.1044154167175293
  - -0.10497856140136719
  - -0.05179761350154877
  - -0.10914421081542969
  - -0.10501790046691895
  - -0.10367536544799805
  - -0.09258460998535156
  - -0.10383033752441406
  - -0.10523796081542969
  - -0.10524511337280273
  - -0.1064901351928711
  - -2.4611380100250244
  - -0.11159563064575195
  - -0.10550689697265625
  - -0.0893545150756836
  - -0.09006357192993164
  - -0.10044336318969727
  - -0.10087442398071289
  - -0.10760974884033203
  - -0.1042933464050293
  - -0.10502099990844727
  - -0.06390805542469025
  - -0.1110694408416748
  - -0.10580992698669434
  - -0.10630178451538086
  - -0.17573833465576172
  - -0.10431814193725586
  - -0.10704612731933594
  - -0.10468554496765137
  - -0.09633255004882812
  - -0.10550689697265625
  - -0.11566925048828125
  - -0.10476922988891602
  - -0.10418701171875
  - -0.40013882517814636
  - -0.10508155822753906
  - -0.10753917694091797
  - -0.11429136991500854
- - -0.10410881042480469
  - -0.10416984558105469
  - -3.130204916000366
  - -0.10323166847229004
  - -0.13210535049438477
  - -0.0987701416015625
  - -0.16034555435180664
  - -0.0989842414855957
  - -0.1063222885131836
  - -0.1044321060180664
  - -0.1049346923828125
  - -0.05515805631875992
  - -0.10909295082092285
  - -0.10502362251281738
  - -0.1036229133605957
  - -0.0923471450805664
  - -0.1037435531616211
  - -0.10524988174438477
  - -0.10519790649414062
  - -0.10664844512939453
  - -0.23276971280574799
  - -0.11153483390808105
  - -0.10554099082946777
  - -0.08919382095336914
  - -0.08745002746582031
  - -0.10093402862548828
  - -0.10089254379272461
  - -0.1075124740600586
  - -0.1043100357055664
  - -0.10500144958496094
  - -0.06412352621555328
  - -0.11106467247009277
  - -0.10580778121948242
  - -0.10632896423339844
  - -0.1989593505859375
  - -0.10432863235473633
  - -0.10704421997070312
  - -0.10468506813049316
  - -0.09638023376464844
  - -0.1055455207824707
  - -0.11549663543701172
  - -0.10477113723754883
  - -0.10418462753295898
  - -0.4008519649505615
  - -0.10509252548217773
  - -0.10761785507202148
  - -0.11461818963289261
- - -0.10410881042480469
  - -0.10416984558105469
  - -0.12662267684936523
  - -0.1033637523651123
  - -0.13211345672607422
  - -0.09866476058959961
  - -0.14420461654663086
  - -0.09985160827636719
  - -0.10665178298950195
  - -0.1044154167175293
  - -0.10497856140136719
  - -0.05179761350154877
  - -0.10914421081542969
  - -0.10501790046691895
  - -0.10367536544799805
  - -0.09258460998535156
  - -0.10383033752441406
  - -0.10523796081542969
  - -0.10524511337280273
  - -0.1064901351928711
  - -0.23132853209972382
  - -0.11155176162719727
  - -0.10554623603820801
  - -0.08917427062988281
  - -0.08725786209106445
  - -0.10090351104736328
  - -0.1008915901184082
  - -0.10752248764038086
  - -0.10431289672851562
  - -0.10500335693359375
  - -0.0640086978673935
  - -3.4491124153137207
  - -0.10578179359436035
  - -0.1061711311340332
  - -0.2157135009765625
  - -0.10412788391113281
  - -0.10721278190612793
  - -0.1047208309173584
  - -0.09604167938232422
  - -0.10531282424926758
  - -0.11573076248168945
  - -0.10479307174682617
  - -0.10410737991333008
  - -0.3917236626148224
  - -0.10494518280029297
  - -0.1066579818725586
  - -0.11174973100423813
- - -0.10410881042480469
  - -0.10416984558105469
  - -0.12662267684936523
  - -0.1033637523651123
  - -0.13211345672607422
  - -0.09866476058959961
  - -0.14420461654663086
  - -0.09985160827636719
  - -0.10665178298950195
  - -0.1044154167175293
  - -0.10497856140136719
  - -0.05179761350154877
  - -0.10914421081542969
  - -0.10501790046691895
  - -0.10367536544799805
  - -0.09258460998535156
  - -0.10383033752441406
  - -0.10523796081542969
  - -0.10524511337280273
  - -0.1064901351928711
  - -0.23132853209972382
  - -3.4629030227661133
  - -0.10548877716064453
  - -0.08975458145141602
  - -0.09178543090820312
  - -0.1010732650756836
  - -0.10090780258178711
  - -0.10744524002075195
  - -0.1043691635131836
  - -0.10488271713256836
  - -0.06347417831420898
  - -0.11105608940124512
  - -0.10579729080200195
  - -0.1062474250793457
  - -0.19779682159423828
  - -0.10430526733398438
  - -0.10715317726135254
  - -0.10472249984741211
  - -0.09629631042480469
  - -0.1053767204284668
  - -0.11591005325317383
  - -0.10473299026489258
  - -0.1041574478149414
  - -0.3924444317817688
  - -0.10498762130737305
  - -0.1069192886352539
  - -0.11244689673185349
- - -0.10410881042480469
  - -0.10416984558105469
  - -0.12662267684936523
  - -0.1033637523651123
  - -0.13211345672607422
  - -0.09866476058959961
  - -0.14420461654663086
  - -0.09985160827636719
  - -0.10665178298950195
  - -0.1044154167175293
  - -0.10497856140136719
  - -0.05179761350154877
  - -0.10914421081542969
  - -0.10501790046691895
  - -0.10367536544799805
  - -0.09258460998535156
  - -0.10383033752441406
  - -0.10523796081542969
  - -0.10524511337280273
  - -0.1064901351928711
  - -0.23132853209972382
  - -0.11155176162719727
  - -0.10554623603820801
  - -0.08917427062988281
  - -0.08725786209106445
  - -0.10090351104736328
  - -0.1008915901184082
  - -0.10752248764038086
  - -0.10431289672851562
  - -0.10500335693359375
  - -0.0640086978673935
  - -0.1110682487487793
  - -0.10580801963806152
  - -0.10634660720825195
  - -0.20088815689086914
  - -0.10433435440063477
  - -0.10704350471496582
  - -0.10468530654907227
  - -0.09636735916137695
  - -0.10553264617919922
  - -0.11555147171020508
  - -0.10477256774902344
  - -0.10418415069580078
  - -3.2651185989379883
  - -0.10453414916992188
  - -0.10449934005737305
  - -0.6233290433883667
- - -0.10410881042480469
  - -0.10416984558105469
  - -0.12662267684936523
  - -0.1033637523651123
  - -0.13211345672607422
  - -0.09866476058959961
  - -0.14420461654663086
  - -0.09985160827636719
  - -0.10665178298950195
  - -0.1044154167175293
  - -0.10497856140136719
  - -0.05179761350154877
  - -3.518972396850586
  - -0.10515046119689941
  - -0.10602617263793945
  - -0.09008550643920898
  - -0.10402822494506836
  - -0.10539865493774414
  - -0.10520792007446289
  - -0.10663080215454102
  - -0.23645031452178955
  - -0.11166167259216309
  - -0.10556960105895996
  - -0.08930683135986328
  - -0.08770418167114258
  - -0.10095834732055664
  - -0.10087108612060547
  - -0.10748577117919922
  - -0.10450983047485352
  - -0.10490798950195312
  - -0.06397157162427902
  - -0.11107921600341797
  - -0.1058042049407959
  - -0.10610818862915039
  - -0.1941080093383789
  - -0.10433816909790039
  - -0.10705065727233887
  - -0.10468626022338867
  - -0.09632205963134766
  - -0.10543441772460938
  - -0.11598539352416992
  - -0.10478544235229492
  - -0.10419321060180664
  - -0.4031391739845276
  - -0.10502004623413086
  - -0.10720348358154297
  - -0.11244721710681915
- - -0.10410881042480469
  - -0.10416984558105469
  - -0.12662267684936523
  - -0.1033637523651123
  - -0.13211345672607422
  - -0.09866476058959961
  - -0.14420461654663086
  - -0.09985160827636719
  - -0.10665178298950195
  - -0.1044154167175293
  - -0.10497856140136719
  - -0.05179761350154877
  - -0.10914421081542969
  - -0.10501790046691895
  - -0.10367536544799805
  - -0.09258460998535156
  - -0.10383033752441406
  - -0.10523796081542969
  - -0.10524511337280273
  - -0.1064901351928711
  - -0.23132853209972382
  - -0.11155176162719727
  - -0.10554623603820801
  - -0.08917427062988281
  - -0.08725786209106445
  - -0.10090351104736328
  - -0.1008915901184082
  - -0.10752248764038086
  - -0.10431289672851562
  - -0.10500335693359375
  - -0.0640086978673935
  - -0.1110682487487793
  - -0.10580801963806152
  - -0.10634660720825195
  - -0.20088815689086914
  - -0.10433435440063477
  - -3.5605216026306152
  - -0.10467362403869629
  - -0.09776639938354492
  - -0.10534429550170898
  - -0.11431550979614258
  - -0.1047062873840332
  - -0.10429525375366211
  - -0.3894142806529999
  - -0.10513782501220703
  - -0.10727357864379883
  - -0.11389157921075821
- - -0.10410881042480469
  - -0.10416984558105469
  - -0.12662267684936523
  - -0.1033637523651123
  - -0.13211345672607422
  - -0.09866476058959961
  - -0.14420461654663086
  - -0.09985160827636719
  - -0.10665178298950195
  - -0.1044154167175293
  - -0.10497856140136719
  - -0.05179761350154877
  - -0.10914421081542969
  - -0.10501790046691895
  - -0.10367536544799805
  - -0.09258460998535156
  - -0.10383033752441406
  - -0.10523796081542969
  - -0.10524511337280273
  - -0.1064901351928711
  - -0.23132853209972382
  - -0.11155176162719727
  - -0.10554623603820801
  - -0.08917427062988281
  - -0.08725786209106445
  - -0.10090351104736328
  - -0.1008915901184082
  - -0.10752248764038086
  - -0.10431289672851562
  - -0.10500335693359375
  - -0.0640086978673935
  - -0.1110682487487793
  - -0.10580801963806152
  - -0.10634660720825195
  - -2.977574110031128
  - -0.11322832107543945
  - -0.10380411148071289
  - -0.10504579544067383
  - -0.18060201406478882
  - -0.11117815971374512
  - -0.10544157028198242
  - -0.1029977798461914
  - -0.10753703117370605
  - -0.10491394996643066
  - -0.09774351119995117
  - -0.10778141021728516
  - -0.11414003372192383
  - -0.10482501983642578
  - -0.1043086051940918
  - -0.3477318584918976
  - -0.10571050643920898
  - -0.10798168182373047
  - -0.11405060440301895
- - -0.10410881042480469
  - -0.10416984558105469
  - -0.12662267684936523
  - -0.1033637523651123
  - -0.13211345672607422
  - -0.09866476058959961
  - -0.14420461654663086
  - -0.09985160827636719
  - -0.10665178298950195
  - -0.1044154167175293
  - -0.10497856140136719
  - -0.05179761350154877
  - -0.10914421081542969
  - -0.10501790046691895
  - -0.10367536544799805
  - -0.09258460998535156
  - -0.10383033752441406
  - -0.10523796081542969
  - -0.10524511337280273
  - -0.1064901351928711
  - -4.318541049957275
  - -0.11304116249084473
  - -0.1053931713104248
  - -0.09182310104370117
  - -0.09417104721069336
  - -0.10007047653198242
  - -0.10089778900146484
  - -0.10774469375610352
  - -0.10432624816894531
  - -0.10518407821655273
  - -0.06420771032571793
  - -0.11095547676086426
  - -0.10584521293640137
  - -0.10530662536621094
  - -0.14407014846801758
  - -0.10409736633300781
  - -0.1073298454284668
  - -0.10469484329223633
  - -0.09647130966186523
  - -0.10580778121948242
  - -0.15663719177246094
  - -0.1051473617553711
  - -0.10317039489746094
  - -0.10660679638385773
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'True'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
