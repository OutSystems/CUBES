db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/countries.csv
 - tests-examples/db2csv/car_1/tables/car_makers.csv
output: tests-examples/db2csv/car_1/tables/0076_dev.csv
raw_question: What is the number of countries with more than 2 car makers ? 
question_index: 162 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - 2
join_columns:
 - country
 - countryid
groupby_columns:
 - countryid
functions:
 - count
columns: []
filters: []
ieu: []
comment: |-
  select count(*)
  from countries as t1
  join car_makers as t2 on t1.countryid = t2.country
  group by t1.countryid
  having count(*) > 2

sql: |-
  select count(*)
  from countries as t1
  join car_makers as t2 on t1.countryid = t2.country
  group by t1.countryid
  having count(*) > 2
smbop_beam_join_columns:
- - country
  - countryid
smbop_beam_groupby_columns:
- - countryid
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
smbop_beam_constants:
- - 2
smbop_beam_functions:
- - count
smbop_beam_columns:
- []
smbop_beam_ieu:
- []
smbop_beam_filters:
- []
smbop_beam_inferred_code:
  - SELECT COUNT( * ) FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT( * ) > 2
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( * ) FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT( * ) > 2
smbop_beam_has_limit:
  - False
smbop_beam_has_order_by:
  - False
smbop_beam_order_by_direction:
- []
ratsql_beam_join_columns:
- []
- []
- - country
  - countryid
- []
- - contid
  - country
  - continent
  - countryid
- - model
  - maker
  - makeid
  - id
- - model
  - maker
  - id
- - maker
  - id
- []
- []
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- - country
- - country
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
ratsql_beam_constants:
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - country
- []
- - country
- - country
- - country
- - country
- - country
- - country
- - country
- []
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers
  - SELECT Count(*) FROM car_makers
  - SELECT Count(DISTINCT car_makers.Country) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country
  - SELECT Count(car_makers.Country) FROM car_makers
  - SELECT Count(DISTINCT car_makers.Country) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers GROUP BY car_makers.Country HAVING Count(*) > 'terminal'
  - SELECT Count(*) FROM car_makers GROUP BY car_makers.Country HAVING Count(*) > 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers
  - SELECT Count(*) FROM car_makers
  - SELECT Count(DISTINCT car_makers.Country) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country
  - SELECT Count(car_makers.Country) FROM car_makers
  - SELECT Count(DISTINCT car_makers.Country) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers GROUP BY car_makers.Country HAVING Count(*) > 2
  - SELECT Count(*) FROM car_makers GROUP BY car_makers.Country HAVING Count(*) > 2
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10502386093139648
  - -0.10484504699707031
  - -0.10401177406311035
  - -0.10387849807739258
  - -0.10716581344604492
  - -0.10143470764160156
  - -0.11475181579589844
  - -0.10174226760864258
  - -0.10520267486572266
  - -0.10444784164428711
  - -0.10543251037597656
  - -0.6473007202148438
  - -0.1327359676361084
  - -0.10439777374267578
  - -0.14578771591186523
  - -0.17937755584716797
  - -0.10111379623413086
  - -0.10744595527648926
  - -0.10426557064056396
  - -0.11146306991577148
  - -0.10350894927978516
  - -0.10355854034423828
  - -0.9361052513122559
  - -0.12929391860961914
  - -0.21062523126602173
- - -0.10502386093139648
  - -0.10484504699707031
  - -0.10401177406311035
  - -0.10387849807739258
  - -0.10716581344604492
  - -0.10143470764160156
  - -0.11475181579589844
  - -0.10174226760864258
  - -0.10520267486572266
  - -0.10444784164428711
  - -0.10543251037597656
  - -0.9783245921134949
  - -0.11061382293701172
  - -0.10509467124938965
  - -0.15824174880981445
  - -0.14757871627807617
  - -0.1000056266784668
  - -0.10732555389404297
  - -0.10303723812103271
  - -0.10796308517456055
  - -0.10300207138061523
  - -0.10759925842285156
  - -2.8012475967407227
  - -0.16490983963012695
  - -0.2326793223619461
- - -0.10502386093139648
  - -0.10484504699707031
  - -0.10401177406311035
  - -0.10387849807739258
  - -0.10716581344604492
  - -0.10143470764160156
  - -0.11475181579589844
  - -0.10174226760864258
  - -0.10520267486572266
  - -0.10444784164428711
  - -0.10543251037597656
  - -0.6473007202148438
  - -0.1327359676361084
  - -0.10439777374267578
  - -0.14578771591186523
  - -0.17937755584716797
  - -0.10111379623413086
  - -0.10744595527648926
  - -0.10426557064056396
  - -0.11146306991577148
  - -0.10350894927978516
  - -0.10355854034423828
  - -0.9361052513122559
  - -0.12929391860961914
  - -2.7366745471954346
- - -0.10502386093139648
  - -0.10484504699707031
  - -0.10401177406311035
  - -0.10387849807739258
  - -0.10716581344604492
  - -0.10143470764160156
  - -0.11475181579589844
  - -0.10174226760864258
  - -0.10520267486572266
  - -0.10444784164428711
  - -0.10543251037597656
  - -0.6473007202148438
  - -3.050790548324585
  - -0.10510659217834473
  - -0.12699270248413086
  - -0.13814878463745117
  - -0.10149288177490234
  - -0.10737133026123047
  - -0.1039426326751709
  - -0.10801362991333008
  - -0.1031198501586914
  - -0.10474300384521484
  - -0.9817376136779785
  - -0.13057374954223633
  - -0.21799086034297943
- - -0.10502386093139648
  - -0.10484504699707031
  - -0.10401177406311035
  - -0.10387849807739258
  - -0.10716581344604492
  - -0.10143470764160156
  - -0.11475181579589844
  - -0.10174226760864258
  - -0.10520267486572266
  - -0.10444784164428711
  - -0.10543251037597656
  - -0.6473007202148438
  - -0.1327359676361084
  - -0.10439777374267578
  - -0.14578771591186523
  - -0.17937755584716797
  - -0.10111379623413086
  - -0.10744595527648926
  - -0.10426557064056396
  - -0.11146306991577148
  - -0.10350894927978516
  - -0.10355854034423828
  - -0.9361052513122559
  - -0.12929391860961914
  - -3.3038315773010254
- - -0.10502386093139648
  - -0.10484504699707031
  - -0.10401177406311035
  - -0.10387849807739258
  - -0.10716581344604492
  - -0.10143470764160156
  - -0.11475181579589844
  - -0.10174226760864258
  - -0.10520267486572266
  - -0.10444784164428711
  - -0.10543251037597656
  - -0.6473007202148438
  - -0.1327359676361084
  - -0.10439777374267578
  - -0.14578771591186523
  - -0.17937755584716797
  - -0.10111379623413086
  - -0.10744595527648926
  - -0.10426557064056396
  - -0.11146306991577148
  - -0.10350894927978516
  - -0.10355854034423828
  - -0.9361052513122559
  - -0.12929391860961914
  - -3.383005380630493
- - -0.10502386093139648
  - -0.10484504699707031
  - -0.10401177406311035
  - -0.10387849807739258
  - -0.10716581344604492
  - -0.10143470764160156
  - -0.11475181579589844
  - -0.10174226760864258
  - -0.10520267486572266
  - -0.10444784164428711
  - -0.10543251037597656
  - -0.6473007202148438
  - -0.1327359676361084
  - -0.10439777374267578
  - -0.14578771591186523
  - -0.17937755584716797
  - -0.10111379623413086
  - -0.10744595527648926
  - -0.10426557064056396
  - -0.11146306991577148
  - -0.10350894927978516
  - -0.10355854034423828
  - -0.9361052513122559
  - -0.12929391860961914
  - -3.565824508666992
- - -0.10502386093139648
  - -0.10484504699707031
  - -0.10401177406311035
  - -0.10387849807739258
  - -0.10716581344604492
  - -0.10143470764160156
  - -0.11475181579589844
  - -0.10174226760864258
  - -0.10520267486572266
  - -0.10444784164428711
  - -0.10543251037597656
  - -0.6473007202148438
  - -0.1327359676361084
  - -0.10439777374267578
  - -0.14578771591186523
  - -0.17937755584716797
  - -0.10111379623413086
  - -0.10744595527648926
  - -0.10426557064056396
  - -0.11146306991577148
  - -0.10350894927978516
  - -0.10355854034423828
  - -0.9361052513122559
  - -0.12929391860961914
  - -3.642918586730957
- - -0.10502386093139648
  - -0.10484504699707031
  - -0.10401177406311035
  - -0.10387849807739258
  - -0.10716581344604492
  - -0.10143470764160156
  - -0.11475181579589844
  - -0.10174226760864258
  - -0.10520267486572266
  - -0.10444784164428711
  - -0.10543251037597656
  - -0.6473007202148438
  - -0.1327359676361084
  - -0.10439777374267578
  - -0.14578771591186523
  - -2.569027900695801
  - -0.1091928482055664
  - -0.104217529296875
  - -0.10480546951293945
  - -0.46894675493240356
  - -0.11236119270324707
  - -0.10489606857299805
  - -0.07893800735473633
  - -0.09773015975952148
  - -0.10242700576782227
  - -0.10532903671264648
  - -0.10482025146484375
  - -0.1140141487121582
  - -0.19943952560424805
  - -0.11140799522399902
  - -0.10585618019104004
  - -0.10422039031982422
  - -0.10438060760498047
  - -0.1081082820892334
  - -0.10453319549560547
  - -0.09914255142211914
  - -0.10348987579345703
  - -0.10741710662841797
  - -0.1072535514831543
  - -0.10861730575561523
  - -0.14495526254177094
- - -0.10502386093139648
  - -0.10484504699707031
  - -0.10401177406311035
  - -0.10387849807739258
  - -0.10716581344604492
  - -0.10143470764160156
  - -0.11475181579589844
  - -0.10174226760864258
  - -0.10520267486572266
  - -0.10444784164428711
  - -0.10543251037597656
  - -0.9783245921134949
  - -0.11061382293701172
  - -0.10509467124938965
  - -0.15824174880981445
  - -2.9381637573242188
  - -0.13369989395141602
  - -0.10300064086914062
  - -0.10433387756347656
  - -0.32974547147750854
  - -0.11242246627807617
  - -0.10496807098388672
  - -0.08371114730834961
  - -0.09641790390014648
  - -0.10219383239746094
  - -0.10544538497924805
  - -0.105712890625
  - -0.11603403091430664
  - -0.19370827078819275
  - -0.11195731163024902
  - -0.10570907592773438
  - -0.10282754898071289
  - -0.10575532913208008
  - -0.1077880859375
  - -0.10441207885742188
  - -0.09913492202758789
  - -0.10332012176513672
  - -0.10831022262573242
  - -0.10709619522094727
  - -0.10737180709838867
  - -0.14850197732448578
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
