db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/cars_data.csv
output: tests-examples/db2csv/car_1/tables/0033_dev.csv
raw_question: What is the smallest weight of the car produced with 8 cylinders on 1974 ? 
question_index: 119 
constants:
 - 1974
 - 8
functions:
 - min
columns:
 - weight
 - cylinders
 - year
filters:
 - '='
comment: |-
  select min(weight)
  from cars_data
  where cylinders = 8
    and year = 1974

sql: |-
  select min(weight)
  from cars_data
  where cylinders = 8
    and year = 1974
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
smbop_beam_constants:
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
smbop_beam_functions:
- - min
- []
- - min
- []
- - min
- - min
- - avg
- - sum
- - min
- []
smbop_beam_columns:
- - weight
  - cylinders
  - year
- - cylinders
  - year
- - weight
  - cylinders
  - year
- - cylinders
  - year
- - weight
  - cylinders
- - weight
  - cylinders
- - weight
  - cylinders
  - year
- - weight
  - cylinders
  - year
- - weight
  - year
- - cylinders
  - year
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
  - SELECT cars_data.weight FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = '8' AND cars_data.year = 1974
  - SELECT cars_data.weight FROM cars_data WHERE cars_data.cylinders = '8' AND cars_data.year = 1974
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.cylinders = 1974
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 1974 AND cars_data.cylinders = 8
  - SELECT AVG( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
  - SELECT SUM( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.year = 8 AND cars_data.year = 1974
  - SELECT DISTINCT cars_data.weight FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
smbop_beam_inferred_code_w_terminals:
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
  - SELECT cars_data.weight FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = '8' AND cars_data.year = 1974
  - SELECT cars_data.weight FROM cars_data WHERE cars_data.cylinders = '8' AND cars_data.year = 1974
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.cylinders = 1974
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 1974 AND cars_data.cylinders = 8
  - SELECT AVG( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
  - SELECT SUM( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.year = 8 AND cars_data.year = 1974
  - SELECT DISTINCT cars_data.weight FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
ratsql_beam_join_columns:
- []
- []
- []
- []
- []
- - model
  - country
  - contid
  - continent
  - countryid
  - id
  - maker
  - makeid
- - model
  - country
  - countryid
  - id
  - maker
  - makeid
- - model
  - id
  - makeid
- - id
  - makeid
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
ratsql_beam_constants:
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
ratsql_beam_functions:
- - min
- - min
- - min
- - min
- - min
- - min
- - min
- - min
- - min
ratsql_beam_columns:
- - weight
  - year
- - weight
  - cylinders
- - weight
  - year
- - weight
  - year
- - weight
  - year
- - weight
  - year
- - weight
  - year
- - weight
  - year
- - weight
  - year
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Year = 'terminal'
  - SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 'terminal'
  - SELECT DISTINCT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Year = 'terminal'
  - SELECT Min(cars_data.Weight) FROM cars_data WHERE DISTINCT cars_data.Year = 'terminal'
  - SELECT Min(DISTINCT cars_data.Weight) FROM cars_data WHERE cars_data.Year = 'terminal'
  - SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Year = 'terminal' LIMIT 1
  - SELECT Min(cars_data.Weight) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal'
  - SELECT Min(cars_data.Weight) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal'
  - SELECT Min(cars_data.Weight) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal'
  - SELECT Min(cars_data.Weight) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Year = 1974
  - SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 1974
  - SELECT DISTINCT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Year = 1974
  - SELECT Min(cars_data.Weight) FROM cars_data WHERE DISTINCT cars_data.Year = 1974
  - SELECT Min(DISTINCT cars_data.Weight) FROM cars_data WHERE cars_data.Year = 1974
  - SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Year = 1974 LIMIT 1
  - SELECT Min(cars_data.Weight) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1974
  - SELECT Min(cars_data.Weight) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1974
  - SELECT Min(cars_data.Weight) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1974
  - SELECT Min(cars_data.Weight) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1974
ratsql_beam_score_history:
- - -0.10397052764892578
  - -0.10434722900390625
  - -0.11527562141418457
  - -0.1041865348815918
  - -0.1056365966796875
  - -0.10148382186889648
  - -0.10932207107543945
  - -0.10204839706420898
  - -0.10654783248901367
  - -0.10411548614501953
  - -0.10524559020996094
  - -0.09536688029766083
  - -0.11246418952941895
  - -0.10512161254882812
  - -0.09756803512573242
  - -0.16926908493041992
  - -0.10359048843383789
  - -0.1011056900024414
  - -0.10507726669311523
  - -0.10630559921264648
  - -0.10554981231689453
  - -0.15184363722801208
  - -0.11203789710998535
  - -0.10550475120544434
  - -0.10427427291870117
  - -0.09895133972167969
  - -0.10251283645629883
  - -0.10791206359863281
  - -0.10472655296325684
  - -0.09920740127563477
  - -0.10472917556762695
  - -0.1095266342163086
  - -0.10506820678710938
  - -0.10366296768188477
  - -0.11180921643972397
- - -0.10397052764892578
  - -0.10434722900390625
  - -0.11527562141418457
  - -0.1041865348815918
  - -0.1056365966796875
  - -0.10148382186889648
  - -0.10932207107543945
  - -0.10204839706420898
  - -0.10654783248901367
  - -0.10411548614501953
  - -0.10524559020996094
  - -0.09536688029766083
  - -0.11246418952941895
  - -0.10512161254882812
  - -0.09756803512573242
  - -0.16926908493041992
  - -0.10359048843383789
  - -0.1011056900024414
  - -0.10507726669311523
  - -0.10630559921264648
  - -0.10554981231689453
  - -2.864685297012329
  - -0.1128535270690918
  - -0.1053159236907959
  - -0.10283613204956055
  - -0.09740829467773438
  - -0.10261869430541992
  - -0.10782098770141602
  - -0.10463905334472656
  - -0.1001276969909668
  - -0.10460472106933594
  - -0.10966730117797852
  - -0.10511016845703125
  - -0.10370063781738281
  - -0.11327973008155823
- - -0.10397052764892578
  - -0.10434722900390625
  - -3.2884914875030518
  - -0.10353517532348633
  - -0.10583782196044922
  - -0.10427284240722656
  - -0.09282255172729492
  - -0.10210752487182617
  - -0.10611200332641602
  - -0.10413026809692383
  - -0.10516214370727539
  - -0.08762064576148987
  - -0.11303257942199707
  - -0.10512280464172363
  - -0.0975804328918457
  - -0.16860151290893555
  - -0.10353899002075195
  - -0.10109663009643555
  - -0.10507869720458984
  - -0.10644245147705078
  - -0.10552787780761719
  - -0.15207895636558533
  - -0.11196327209472656
  - -0.10551714897155762
  - -0.10414886474609375
  - -0.09893321990966797
  - -0.1024618148803711
  - -0.10792422294616699
  - -0.10472702980041504
  - -0.09927892684936523
  - -0.10468578338623047
  - -0.10952234268188477
  - -0.10506296157836914
  - -0.1036520004272461
  - -0.11148158460855484
- - -0.10397052764892578
  - -0.10434722900390625
  - -0.11527562141418457
  - -0.1041865348815918
  - -0.1056365966796875
  - -0.10148382186889648
  - -0.10932207107543945
  - -0.10204839706420898
  - -0.10654783248901367
  - -0.10411548614501953
  - -0.10524559020996094
  - -0.09536688029766083
  - -0.11246418952941895
  - -0.10512161254882812
  - -0.09756803512573242
  - -0.16926908493041992
  - -0.10359048843383789
  - -0.1011056900024414
  - -0.10507726669311523
  - -0.10630559921264648
  - -0.10554981231689453
  - -0.15184363722801208
  - -3.4473209381103516
  - -0.10514020919799805
  - -0.10385608673095703
  - -0.09930562973022461
  - -0.10257863998413086
  - -0.10793209075927734
  - -0.1047515869140625
  - -0.09926176071166992
  - -0.10526180267333984
  - -0.10960006713867188
  - -0.10506963729858398
  - -0.10364818572998047
  - -0.11228250712156296
- - -0.10397052764892578
  - -0.10434722900390625
  - -0.11527562141418457
  - -0.1041865348815918
  - -0.1056365966796875
  - -0.10148382186889648
  - -0.10932207107543945
  - -0.10204839706420898
  - -0.10654783248901367
  - -0.10411548614501953
  - -0.10524559020996094
  - -0.09536688029766083
  - -3.462620735168457
  - -0.10541343688964844
  - -0.10033464431762695
  - -0.171356201171875
  - -0.10299491882324219
  - -0.10110139846801758
  - -0.10514307022094727
  - -0.10648107528686523
  - -0.1055455207824707
  - -0.14813034236431122
  - -0.11203551292419434
  - -0.1054983139038086
  - -0.10416936874389648
  - -0.09907865524291992
  - -0.10251855850219727
  - -0.10792064666748047
  - -0.10472679138183594
  - -0.0991973876953125
  - -0.1047511100769043
  - -0.10953712463378906
  - -0.10508012771606445
  - -0.1036686897277832
  - -0.11211883276700974
- - -0.10397052764892578
  - -0.10434722900390625
  - -0.11527562141418457
  - -0.1041865348815918
  - -0.1056365966796875
  - -0.10148382186889648
  - -0.10932207107543945
  - -0.10204839706420898
  - -0.10654783248901367
  - -0.10411548614501953
  - -0.10524559020996094
  - -0.09536688029766083
  - -0.11246418952941895
  - -0.10512161254882812
  - -0.09756803512573242
  - -0.16926908493041992
  - -0.10359048843383789
  - -0.1011056900024414
  - -0.10507726669311523
  - -0.10630559921264648
  - -0.10554981231689453
  - -0.15184363722801208
  - -0.11203789710998535
  - -0.10550475120544434
  - -0.10427427291870117
  - -0.09895133972167969
  - -0.10251283645629883
  - -3.5528454780578613
  - -0.10469937324523926
  - -0.1013340950012207
  - -0.10454845428466797
  - -0.10936641693115234
  - -0.10501241683959961
  - -0.10369539260864258
  - -0.11245616525411606
- - -0.10397052764892578
  - -0.10434722900390625
  - -0.11527562141418457
  - -0.1041865348815918
  - -0.1056365966796875
  - -0.10148382186889648
  - -0.10932207107543945
  - -0.10204839706420898
  - -0.10654783248901367
  - -0.10411548614501953
  - -0.10524559020996094
  - -0.09536688029766083
  - -0.11246418952941895
  - -0.10512161254882812
  - -0.09756803512573242
  - -0.16926908493041992
  - -0.10359048843383789
  - -0.1011056900024414
  - -0.10507726669311523
  - -0.10630559921264648
  - -0.10554981231689453
  - -0.15184363722801208
  - -0.11203789710998535
  - -0.10550475120544434
  - -0.10427427291870117
  - -0.09895133972167969
  - -0.10251283645629883
  - -0.10791206359863281
  - -0.10472655296325684
  - -0.09920740127563477
  - -0.10472917556762695
  - -0.1095266342163086
  - -0.10506820678710938
  - -0.10366296768188477
  - -3.7778401374816895
- - -0.10397052764892578
  - -0.10434722900390625
  - -0.11527562141418457
  - -0.1041865348815918
  - -0.1056365966796875
  - -0.10148382186889648
  - -0.10932207107543945
  - -0.10204839706420898
  - -0.10654783248901367
  - -0.10411548614501953
  - -0.10524559020996094
  - -0.09536688029766083
  - -0.11246418952941895
  - -0.10512161254882812
  - -0.09756803512573242
  - -0.16926908493041992
  - -0.10359048843383789
  - -0.1011056900024414
  - -0.10507726669311523
  - -0.10630559921264648
  - -0.10554981231689453
  - -0.15184363722801208
  - -0.11203789710998535
  - -0.10550475120544434
  - -0.10427427291870117
  - -0.09895133972167969
  - -0.10251283645629883
  - -0.10791206359863281
  - -0.10472655296325684
  - -0.09920740127563477
  - -0.10472917556762695
  - -0.1095266342163086
  - -0.10506820678710938
  - -0.10366296768188477
  - -3.788771152496338
- - -0.10397052764892578
  - -0.10434722900390625
  - -0.11527562141418457
  - -0.1041865348815918
  - -0.1056365966796875
  - -0.10148382186889648
  - -0.10932207107543945
  - -0.10204839706420898
  - -0.10654783248901367
  - -0.10411548614501953
  - -0.10524559020996094
  - -0.09536688029766083
  - -0.11246418952941895
  - -0.10512161254882812
  - -0.09756803512573242
  - -0.16926908493041992
  - -0.10359048843383789
  - -0.1011056900024414
  - -0.10507726669311523
  - -0.10630559921264648
  - -0.10554981231689453
  - -0.15184363722801208
  - -0.11203789710998535
  - -0.10550475120544434
  - -0.10427427291870117
  - -0.09895133972167969
  - -0.10251283645629883
  - -0.10791206359863281
  - -0.10472655296325684
  - -0.09920740127563477
  - -0.10472917556762695
  - -0.1095266342163086
  - -0.10506820678710938
  - -0.10366296768188477
  - -3.8326473236083984
- - -0.10397052764892578
  - -0.10434722900390625
  - -0.11527562141418457
  - -0.1041865348815918
  - -0.1056365966796875
  - -0.10148382186889648
  - -0.10932207107543945
  - -0.10204839706420898
  - -0.10654783248901367
  - -0.10411548614501953
  - -0.10524559020996094
  - -0.09536688029766083
  - -0.11246418952941895
  - -0.10512161254882812
  - -0.09756803512573242
  - -0.16926908493041992
  - -0.10359048843383789
  - -0.1011056900024414
  - -0.10507726669311523
  - -0.10630559921264648
  - -0.10554981231689453
  - -0.15184363722801208
  - -0.11203789710998535
  - -0.10550475120544434
  - -0.10427427291870117
  - -0.09895133972167969
  - -0.10251283645629883
  - -0.10791206359863281
  - -0.10472655296325684
  - -0.09920740127563477
  - -0.10472917556762695
  - -0.1095266342163086
  - -0.10506820678710938
  - -0.10366296768188477
  - -3.932253837585449
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
