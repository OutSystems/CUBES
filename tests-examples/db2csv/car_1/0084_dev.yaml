db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/cars_data.csv
output: tests-examples/db2csv/car_1/tables/0084_dev.csv
raw_question: What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ? 
question_index: 170 
constants:
 - 8
 - 1980
functions:
 - max
columns:
 - cylinders
 - mpg
 - year
filters:
 - '='
 - '<'
comment: |-
  select max(mpg)
  from cars_data
  where cylinders = 8
    or year < 1980

sql: |-
  select max(mpg)
  from cars_data
  where cylinders = 8
    or year < 1980
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
smbop_beam_constants:
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
smbop_beam_functions:
- - max
- - max
- - max
- - max
- []
- - sum
smbop_beam_columns:
- - cylinders
  - mpg
  - year
- - cylinders
  - mpg
  - year
- - cylinders
  - mpg
  - year
- - cylinders
  - mpg
  - year
- - cylinders
  - year
- - cylinders
  - mpg
  - year
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
  - '<'
- - '='
  - '<'
- - '='
  - '<'
- - '>'
  - '<'
- - '='
  - '<'
- - '='
  - '<'
smbop_beam_inferred_code:
  - SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = '8' OR cars_data.year<1980
  - SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = 8 OR cars_data.year<1980
  - SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = '8' AND cars_data.year<1980
  - SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders > 8 OR cars_data.year<1980
  - SELECT cars_data.mpg FROM cars_data WHERE cars_data.cylinders = '8' OR cars_data.year<1980
  - SELECT SUM( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = 8 OR cars_data.year<1980
smbop_beam_inferred_code_w_terminals:
  - SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = '8' OR cars_data.year<1980
  - SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = 8 OR cars_data.year<1980
  - SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = '8' AND cars_data.year<1980
  - SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders > 8 OR cars_data.year<1980
  - SELECT cars_data.mpg FROM cars_data WHERE cars_data.cylinders = '8' OR cars_data.year<1980
  - SELECT SUM( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = 8 OR cars_data.year<1980
ratsql_beam_join_columns:
- []
- []
- []
- []
- []
- []
- - model
  - country
  - contid
  - continent
  - countryid
  - id
  - maker
  - makeid
- - model
  - id
  - makeid
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
ratsql_beam_constants:
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
ratsql_beam_functions:
- - max
- - max
- - max
- - max
- - max
- - max
- - max
- - max
ratsql_beam_columns:
- - year
  - mpg
- - cylinders
  - mpg
  - year
- - year
  - mpg
- - cylinders
  - mpg
  - year
- - year
  - mpg
- - year
  - mpg
- - year
  - mpg
- - year
  - mpg
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
  - '<'
- - '='
  - '<'
- - '='
  - '<'
- - '='
  - '<'
- - '='
  - '<'
- - '='
  - '<'
- - '='
  - '<'
- - '='
  - '<'
ratsql_beam_inferred_code:
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Year = 'terminal' OR cars_data.Year < 'terminal'
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal' OR cars_data.Year < 'terminal'
  - SELECT DISTINCT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Year = 'terminal' OR cars_data.Year < 'terminal'
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Year = 'terminal' OR cars_data.Cylinders < 'terminal'
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE DISTINCT cars_data.Year = 'terminal' OR cars_data.Year < 'terminal'
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Year = 'terminal' OR DISTINCT cars_data.Year < 'terminal'
  - SELECT Max(DISTINCT cars_data.MPG) FROM cars_data WHERE cars_data.Year = 'terminal' OR cars_data.Year < 'terminal'
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Year = 'terminal' OR cars_data.Year < 'terminal' LIMIT 1
  - SELECT Max(cars_data.MPG) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal' OR cars_data.Year < 'terminal'
  - SELECT Max(cars_data.MPG) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal' OR cars_data.Year < 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Year = 1980 OR cars_data.Year < 8
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980
  - SELECT DISTINCT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Year = 1980 OR cars_data.Year < 8
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Year = 1980 OR cars_data.Cylinders < 8
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE DISTINCT cars_data.Year = 1980 OR cars_data.Year < 8
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Year = 1980 OR DISTINCT cars_data.Year < 8
  - SELECT Max(DISTINCT cars_data.MPG) FROM cars_data WHERE cars_data.Year = 1980 OR cars_data.Year < 8
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Year = 1980 OR cars_data.Year < 8 LIMIT 1
  - SELECT Max(cars_data.MPG) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1980 OR cars_data.Year < 8
  - SELECT Max(cars_data.MPG) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1980 OR cars_data.Year < 8
ratsql_beam_score_history:
- - -0.10667562484741211
  - -0.10448312759399414
  - -0.11712026596069336
  - -0.10385704040527344
  - -0.10141515731811523
  - -0.09977054595947266
  - -0.07407760620117188
  - -0.10099077224731445
  - -0.1052393913269043
  - -0.10457229614257812
  - -0.10539484024047852
  - -0.09797877073287964
  - -0.10985636711120605
  - -0.10462164878845215
  - -0.09688901901245117
  - -0.0612645149230957
  - -0.1043081283569336
  - -0.10682392120361328
  - -0.1002349853515625
  - -0.10116863250732422
  - -0.10450458526611328
  - -0.10413932800292969
  - -0.10507059097290039
  - -0.15518538653850555
  - -0.11079144477844238
  - -0.10518383979797363
  - -0.1044316291809082
  - -0.08313751220703125
  - -0.08398199081420898
  - -0.09941387176513672
  - -0.10504388809204102
  - -0.10582160949707031
  - -0.10312604904174805
  - -0.07692984491586685
  - -0.11102128028869629
  - -0.10532689094543457
  - -0.10487079620361328
  - -0.10108280181884766
  - -0.10212087631225586
  - -0.10825634002685547
  - -0.1041111946105957
  - -0.10928058624267578
  - -0.10527324676513672
  - -0.10839414596557617
  - -0.10533905029296875
  - -0.10362386703491211
  - -0.1148526594042778
- - -0.10667562484741211
  - -0.10448312759399414
  - -0.11712026596069336
  - -0.10385704040527344
  - -0.10141515731811523
  - -0.09977054595947266
  - -0.07407760620117188
  - -0.10099077224731445
  - -0.1052393913269043
  - -0.10457229614257812
  - -0.10539484024047852
  - -0.09797877073287964
  - -0.10985636711120605
  - -0.10462164878845215
  - -0.09688901901245117
  - -0.0612645149230957
  - -0.1043081283569336
  - -0.10682392120361328
  - -0.1002349853515625
  - -0.10116863250732422
  - -0.10450458526611328
  - -0.10413932800292969
  - -0.10507059097290039
  - -2.396430730819702
  - -0.11217761039733887
  - -0.10522842407226562
  - -0.10293722152709961
  - -0.09687519073486328
  - -0.08307218551635742
  - -0.09991121292114258
  - -0.10497140884399414
  - -0.10605382919311523
  - -0.10355806350708008
  - -0.08493214100599289
  - -0.11112141609191895
  - -0.10535693168640137
  - -0.10449361801147461
  - -0.1011667251586914
  - -0.10219383239746094
  - -0.10825848579406738
  - -0.10409832000732422
  - -0.10661506652832031
  - -0.10530376434326172
  - -0.10817813873291016
  - -0.1053934097290039
  - -0.10365152359008789
  - -0.11519555002450943
- - -0.10667562484741211
  - -0.10448312759399414
  - -3.2832932472229004
  - -0.1039271354675293
  - -0.10107660293579102
  - -0.10126924514770508
  - -0.07631587982177734
  - -0.10081338882446289
  - -0.10520172119140625
  - -0.10451555252075195
  - -0.10526180267333984
  - -0.09623126685619354
  - -0.10999059677124023
  - -0.10461044311523438
  - -0.09717750549316406
  - -0.06703901290893555
  - -0.10674476623535156
  - -0.10722827911376953
  - -0.10019969940185547
  - -0.10116195678710938
  - -0.10448217391967773
  - -0.10413265228271484
  - -0.10502433776855469
  - -0.15556912124156952
  - -0.11079621315002441
  - -0.10519146919250488
  - -0.10442495346069336
  - -0.08263921737670898
  - -0.0839681625366211
  - -0.09940481185913086
  - -0.10503292083740234
  - -0.10582113265991211
  - -0.10311508178710938
  - -0.07644569873809814
  - -0.1110532283782959
  - -0.10532665252685547
  - -0.10484933853149414
  - -0.1010737419128418
  - -0.10211610794067383
  - -0.10825347900390625
  - -0.10410571098327637
  - -0.10841512680053711
  - -0.10526800155639648
  - -0.10841608047485352
  - -0.10533952713012695
  - -0.10362386703491211
  - -0.11492003500461578
- - -0.10667562484741211
  - -0.10448312759399414
  - -0.11712026596069336
  - -0.10385704040527344
  - -0.10141515731811523
  - -0.09977054595947266
  - -0.07407760620117188
  - -0.10099077224731445
  - -0.1052393913269043
  - -0.10457229614257812
  - -0.10539484024047852
  - -0.09797877073287964
  - -0.10985636711120605
  - -0.10462164878845215
  - -0.09688901901245117
  - -0.0612645149230957
  - -0.1043081283569336
  - -0.10682392120361328
  - -0.1002349853515625
  - -0.10116863250732422
  - -0.10450458526611328
  - -0.10413932800292969
  - -0.10507059097290039
  - -0.15518538653850555
  - -0.11079144477844238
  - -0.10518383979797363
  - -0.1044316291809082
  - -0.08313751220703125
  - -0.08398199081420898
  - -0.09941387176513672
  - -0.10504388809204102
  - -0.10582160949707031
  - -0.10312604904174805
  - -3.4395272731781006
  - -0.10979318618774414
  - -0.10540103912353516
  - -0.10486268997192383
  - -0.10137748718261719
  - -0.1022334098815918
  - -0.10821413993835449
  - -0.10413861274719238
  - -0.10325384140014648
  - -0.10544157028198242
  - -0.1084127426147461
  - -0.10538148880004883
  - -0.10364198684692383
  - -0.11377998441457748
- - -0.10667562484741211
  - -0.10448312759399414
  - -0.11712026596069336
  - -0.10385704040527344
  - -0.10141515731811523
  - -0.09977054595947266
  - -0.07407760620117188
  - -0.10099077224731445
  - -0.1052393913269043
  - -0.10457229614257812
  - -0.10539484024047852
  - -0.09797877073287964
  - -0.10985636711120605
  - -0.10462164878845215
  - -0.09688901901245117
  - -0.0612645149230957
  - -0.1043081283569336
  - -0.10682392120361328
  - -0.1002349853515625
  - -0.10116863250732422
  - -0.10450458526611328
  - -0.10413932800292969
  - -0.10507059097290039
  - -0.15518538653850555
  - -3.46693754196167
  - -0.10620284080505371
  - -0.10492610931396484
  - -0.07795238494873047
  - -0.08353424072265625
  - -0.09903287887573242
  - -0.10507440567016602
  - -0.10574722290039062
  - -0.10301685333251953
  - -0.07571689039468765
  - -0.11091279983520508
  - -0.10532069206237793
  - -0.10495710372924805
  - -0.10113000869750977
  - -0.10236787796020508
  - -0.108245849609375
  - -0.10416865348815918
  - -0.11322641372680664
  - -0.10530281066894531
  - -0.10843992233276367
  - -0.1053009033203125
  - -0.10359764099121094
  - -0.1175248771905899
- - -0.10667562484741211
  - -0.10448312759399414
  - -0.11712026596069336
  - -0.10385704040527344
  - -0.10141515731811523
  - -0.09977054595947266
  - -0.07407760620117188
  - -0.10099077224731445
  - -0.1052393913269043
  - -0.10457229614257812
  - -0.10539484024047852
  - -0.09797877073287964
  - -0.10985636711120605
  - -0.10462164878845215
  - -0.09688901901245117
  - -0.0612645149230957
  - -0.1043081283569336
  - -0.10682392120361328
  - -0.1002349853515625
  - -0.10116863250732422
  - -0.10450458526611328
  - -0.10413932800292969
  - -0.10507059097290039
  - -0.15518538653850555
  - -0.11079144477844238
  - -0.10518383979797363
  - -0.1044316291809082
  - -0.08313751220703125
  - -0.08398199081420898
  - -0.09941387176513672
  - -0.10504388809204102
  - -0.10582160949707031
  - -0.10312604904174805
  - -0.07692984491586685
  - -3.4643731117248535
  - -0.10560965538024902
  - -0.10452938079833984
  - -0.10163164138793945
  - -0.10233068466186523
  - -0.10829472541809082
  - -0.10403084754943848
  - -0.10781049728393555
  - -0.10564899444580078
  - -0.11118650436401367
  - -0.10519266128540039
  - -0.10345602035522461
  - -0.11695108562707901
- - -0.10667562484741211
  - -0.10448312759399414
  - -0.11712026596069336
  - -0.10385704040527344
  - -0.10141515731811523
  - -0.09977054595947266
  - -0.07407760620117188
  - -0.10099077224731445
  - -0.1052393913269043
  - -0.10457229614257812
  - -0.10539484024047852
  - -0.09797877073287964
  - -3.5013763904571533
  - -0.10484027862548828
  - -0.10018634796142578
  - -0.06091785430908203
  - -0.09281778335571289
  - -0.10480070114135742
  - -0.10003662109375
  - -0.10117292404174805
  - -0.10457038879394531
  - -0.10411739349365234
  - -0.10501956939697266
  - -0.15258628129959106
  - -0.11079216003417969
  - -0.10518074035644531
  - -0.10444927215576172
  - -0.07898569107055664
  - -0.08381938934326172
  - -0.09942483901977539
  - -0.10507440567016602
  - -0.10573530197143555
  - -0.10319709777832031
  - -0.07815588265657425
  - -0.11101102828979492
  - -0.10532617568969727
  - -0.1048431396484375
  - -0.10108041763305664
  - -0.10216951370239258
  - -0.10826754570007324
  - -0.1041269302368164
  - -0.1096181869506836
  - -0.10523557662963867
  - -0.1083517074584961
  - -0.10535144805908203
  - -0.10363006591796875
  - -0.1152711883187294
- - -0.10667562484741211
  - -0.10448312759399414
  - -0.11712026596069336
  - -0.10385704040527344
  - -0.10141515731811523
  - -0.09977054595947266
  - -0.07407760620117188
  - -0.10099077224731445
  - -0.1052393913269043
  - -0.10457229614257812
  - -0.10539484024047852
  - -0.09797877073287964
  - -0.10985636711120605
  - -0.10462164878845215
  - -0.09688901901245117
  - -0.0612645149230957
  - -0.1043081283569336
  - -0.10682392120361328
  - -0.1002349853515625
  - -0.10116863250732422
  - -0.10450458526611328
  - -0.10413932800292969
  - -0.10507059097290039
  - -0.15518538653850555
  - -0.11079144477844238
  - -0.10518383979797363
  - -0.1044316291809082
  - -0.08313751220703125
  - -0.08398199081420898
  - -0.09941387176513672
  - -0.10504388809204102
  - -0.10582160949707031
  - -0.10312604904174805
  - -0.07692984491586685
  - -0.11102128028869629
  - -0.10532689094543457
  - -0.10487079620361328
  - -0.10108280181884766
  - -0.10212087631225586
  - -3.5440220832824707
  - -0.1022179126739502
  - -0.1110992431640625
  - -0.10494518280029297
  - -0.11127519607543945
  - -0.1053776741027832
  - -0.10358333587646484
  - -0.11675338447093964
- - -0.10667562484741211
  - -0.10448312759399414
  - -0.11712026596069336
  - -0.10385704040527344
  - -0.10141515731811523
  - -0.09977054595947266
  - -0.07407760620117188
  - -0.10099077224731445
  - -0.1052393913269043
  - -0.10457229614257812
  - -0.10539484024047852
  - -0.09797877073287964
  - -0.10985636711120605
  - -0.10462164878845215
  - -0.09688901901245117
  - -0.0612645149230957
  - -0.1043081283569336
  - -0.10682392120361328
  - -0.1002349853515625
  - -0.10116863250732422
  - -0.10450458526611328
  - -0.10413932800292969
  - -0.10507059097290039
  - -0.15518538653850555
  - -0.11079144477844238
  - -0.10518383979797363
  - -0.1044316291809082
  - -0.08313751220703125
  - -0.08398199081420898
  - -0.09941387176513672
  - -0.10504388809204102
  - -0.10582160949707031
  - -0.10312604904174805
  - -0.07692984491586685
  - -0.11102128028869629
  - -0.10532689094543457
  - -0.10487079620361328
  - -0.10108280181884766
  - -0.10212087631225586
  - -0.10825634002685547
  - -0.1041111946105957
  - -0.10928058624267578
  - -0.10527324676513672
  - -0.10839414596557617
  - -0.10533905029296875
  - -0.10362386703491211
  - -3.7256107330322266
- - -0.10667562484741211
  - -0.10448312759399414
  - -0.11712026596069336
  - -0.10385704040527344
  - -0.10141515731811523
  - -0.09977054595947266
  - -0.07407760620117188
  - -0.10099077224731445
  - -0.1052393913269043
  - -0.10457229614257812
  - -0.10539484024047852
  - -0.09797877073287964
  - -0.10985636711120605
  - -0.10462164878845215
  - -0.09688901901245117
  - -0.0612645149230957
  - -0.1043081283569336
  - -0.10682392120361328
  - -0.1002349853515625
  - -0.10116863250732422
  - -0.10450458526611328
  - -0.10413932800292969
  - -0.10507059097290039
  - -0.15518538653850555
  - -0.11079144477844238
  - -0.10518383979797363
  - -0.1044316291809082
  - -0.08313751220703125
  - -0.08398199081420898
  - -0.09941387176513672
  - -0.10504388809204102
  - -0.10582160949707031
  - -0.10312604904174805
  - -0.07692984491586685
  - -0.11102128028869629
  - -0.10532689094543457
  - -0.10487079620361328
  - -0.10108280181884766
  - -0.10212087631225586
  - -0.10825634002685547
  - -0.1041111946105957
  - -0.10928058624267578
  - -0.10527324676513672
  - -0.10839414596557617
  - -0.10533905029296875
  - -0.10362386703491211
  - -3.7434275150299072
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
