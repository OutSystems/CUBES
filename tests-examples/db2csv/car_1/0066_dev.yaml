db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/car_makers.csv
 - tests-examples/db2csv/car_1/tables/car_names.csv
 - tests-examples/db2csv/car_1/tables/cars_data.csv
 - tests-examples/db2csv/car_1/tables/model_list.csv
output: tests-examples/db2csv/car_1/tables/0066_dev.csv
raw_question: What are the different models created by either the car maker General Motors or weighed more than 3500? 
question_index: 152 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - 3500
 - General Motors
join_columns:
 - model
 - makeid
 - id
 - maker
groupby_columns: []
functions: []
columns:
 - weight
 - fullname
filters:
 - '='
 - '>'
ieu: []
comment: |-
  SELECT DISTINCT T2.Model
  FROM CAR_NAMES AS T1
  JOIN MODEL_LIST AS T2 ON T1.Model = T2.Model
  JOIN CAR_MAKERS AS T3 ON T2.Maker = T3.Id
  JOIN CARS_DATA AS T4 ON T1.MakeId = T4.Id
  WHERE T3.FullName = 'General Motors'
    OR T4.weight > 3500;

sql: |-
  SELECT DISTINCT T2.Model
  FROM CAR_NAMES AS T1
  JOIN MODEL_LIST AS T2 ON T1.Model = T2.Model
  JOIN CAR_MAKERS AS T3 ON T2.Maker = T3.Id
  JOIN CARS_DATA AS T4 ON T1.MakeId = T4.Id
  WHERE T3.FullName = 'General Motors'
    OR T4.weight > 3500;
smbop_beam_join_columns:
smbop_beam_groupby_columns:
smbop_beam_tables:
smbop_beam_constants:
smbop_beam_functions:
smbop_beam_columns:
smbop_beam_ieu:
smbop_beam_filters:
smbop_beam_inferred_code:
smbop_beam_inferred_code_w_terminals:
smbop_beam_has_limit:
smbop_beam_has_order_by:
smbop_beam_order_by_direction:
ratsql_beam_join_columns:
- - model
  - maker
  - makeid
  - id
- - model
  - maker
  - makeid
  - id
- - country
  - makeid
  - countryid
  - maker
  - model
  - id
- - country
  - makeid
  - countryid
  - maker
  - contid
  - model
  - id
  - continent
- - model
  - maker
  - makeid
  - id
- - country
  - makeid
  - countryid
  - maker
  - model
  - id
- - country
  - makeid
  - countryid
  - maker
  - contid
  - model
  - id
  - continent
- - model
  - maker
  - makeid
  - id
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
ratsql_beam_constants:
- - 3500
  - General Motors
- - 3500
  - General Motors
- - 3500
  - General Motors
- - 3500
  - General Motors
- - 3500
  - General Motors
- - 3500
  - General Motors
- - 3500
  - General Motors
- - 3500
  - General Motors
- - 3500
  - General Motors
- - 3500
  - General Motors
ratsql_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_columns:
- - weight
  - fullname
- - weight
  - fullname
- - weight
  - fullname
- - weight
  - fullname
- - weight
  - fullname
- - weight
  - fullname
- - weight
  - fullname
- - weight
  - fullname
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
  - '>'
- - '='
  - '>'
- - '='
  - '>'
- - '='
  - '>'
- - '='
  - '>'
- - '='
  - '>'
- - '='
  - '>'
- - '='
  - '>'
ratsql_beam_inferred_code:
  - SELECT DISTINCT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'terminal' OR cars_data.Weight > 'terminal'
  - SELECT DISTINCT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'terminal' AND cars_data.Weight > 'terminal'
  - SELECT DISTINCT model_list.Model FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'terminal' OR cars_data.Weight > 'terminal'
  - SELECT DISTINCT model_list.Model FROM continents JOIN countries ON continents.ContId = countries.Continent AND continents.ContId = countries.Continent AND continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'terminal' OR cars_data.Weight > 'terminal'
  - SELECT DISTINCT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'terminal' OR cars_data.Weight > 'terminal'
  - SELECT DISTINCT model_list.Model FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'terminal' AND cars_data.Weight > 'terminal'
  - SELECT DISTINCT model_list.Model FROM continents JOIN countries ON continents.ContId = countries.Continent AND continents.ContId = countries.Continent AND continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'terminal' AND cars_data.Weight > 'terminal'
  - SELECT DISTINCT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE DISTINCT car_makers.FullName = 'terminal' OR cars_data.Weight > 'terminal'
  - SELECT DISTINCT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'terminal' AND cars_data.Weight > 'terminal'
  - SELECT DISTINCT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'terminal' OR DISTINCT cars_data.Weight > 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT DISTINCT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500
  - SELECT DISTINCT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'General Motors' AND cars_data.Weight > 3500
  - SELECT DISTINCT model_list.Model FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500
  - SELECT DISTINCT model_list.Model FROM continents JOIN countries ON continents.ContId = countries.Continent AND continents.ContId = countries.Continent AND continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500
  - SELECT DISTINCT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500
  - SELECT DISTINCT model_list.Model FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'General Motors' AND cars_data.Weight > 3500
  - SELECT DISTINCT model_list.Model FROM continents JOIN countries ON continents.ContId = countries.Continent AND continents.ContId = countries.Continent AND continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'General Motors' AND cars_data.Weight > 3500
  - SELECT DISTINCT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE DISTINCT car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500
  - SELECT DISTINCT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'General Motors' AND cars_data.Weight > 3500
  - SELECT DISTINCT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'General Motors' OR DISTINCT cars_data.Weight > 3500
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10462093353271484
  - -0.10506868362426758
  - -0.11195611953735352
  - -0.10549807548522949
  - -0.10044336318969727
  - -0.10248756408691406
  - -0.10437822341918945
  - -0.10152482986450195
  - -0.10468816757202148
  - -0.1049046516418457
  - -0.10391616821289062
  - -0.10926830023527145
  - -0.11104226112365723
  - -0.10525989532470703
  - -0.09406805038452148
  - -0.7974143028259277
  - -0.09752225875854492
  - -0.10643148422241211
  - -0.09967374801635742
  - -0.10168313980102539
  - -0.10408687591552734
  - -0.10426044464111328
  - -0.10512781143188477
  - -0.07324954867362976
  - -0.11261987686157227
  - -0.10599136352539062
  - -0.1007852554321289
  - -0.09658050537109375
  - -0.09432172775268555
  - -0.10178327560424805
  - -0.10495901107788086
  - -0.10561943054199219
  - -0.10891580581665039
  - -0.0861649289727211
  - -0.11013603210449219
  - -0.10595440864562988
  - -0.10336589813232422
  - -0.10500288009643555
  - -0.10311365127563477
  - -0.10664892196655273
  - -0.10468745231628418
  - -0.09265661239624023
  - -0.1057896614074707
  - -0.3240852355957031
  - -0.10481691360473633
  - -0.10424137115478516
  - -0.251602441072464
  - -0.10483407974243164
  - -0.10413312911987305
  - -0.09640989452600479
  - -0.10513782501220703
  - -0.10566902160644531
  - -0.8267835378646851
- - -0.10462093353271484
  - -0.10506868362426758
  - -0.11195611953735352
  - -0.10549807548522949
  - -0.10044336318969727
  - -0.10248756408691406
  - -0.10437822341918945
  - -0.10152482986450195
  - -0.10468816757202148
  - -0.1049046516418457
  - -0.10391616821289062
  - -0.10926830023527145
  - -0.11104226112365723
  - -0.10525989532470703
  - -0.09406805038452148
  - -1.5498123168945312
  - -0.10129070281982422
  - -0.10595846176147461
  - -0.10054731369018555
  - -0.10141420364379883
  - -0.10412168502807617
  - -0.10367250442504883
  - -0.10573530197143555
  - -0.07254944741725922
  - -0.11185693740844727
  - -0.10599255561828613
  - -0.10048294067382812
  - -0.11392354965209961
  - -0.09489583969116211
  - -0.1013340950012207
  - -0.10476303100585938
  - -0.10563850402832031
  - -0.10741901397705078
  - -0.10276780277490616
  - -0.11030888557434082
  - -0.10593843460083008
  - -0.10333538055419922
  - -0.10582828521728516
  - -0.10299253463745117
  - -0.1066889762878418
  - -0.10464644432067871
  - -0.09380531311035156
  - -0.10532903671264648
  - -0.32664060592651367
  - -0.10483121871948242
  - -0.104248046875
  - -0.25226739048957825
  - -0.10475873947143555
  - -0.10407829284667969
  - -0.09732670336961746
  - -0.10515785217285156
  - -0.10559844970703125
  - -0.8308544158935547
- - -0.10462093353271484
  - -0.10506868362426758
  - -0.11195611953735352
  - -0.10549807548522949
  - -0.10044336318969727
  - -0.10248756408691406
  - -0.10437822341918945
  - -0.10152482986450195
  - -0.10468816757202148
  - -0.1049046516418457
  - -0.10391616821289062
  - -0.10926830023527145
  - -0.11104226112365723
  - -0.10525989532470703
  - -0.09406805038452148
  - -0.7974143028259277
  - -0.09752225875854492
  - -0.10643148422241211
  - -0.09967374801635742
  - -0.10168313980102539
  - -0.10408687591552734
  - -0.10426044464111328
  - -0.10512781143188477
  - -0.07324954867362976
  - -0.11261987686157227
  - -0.10599136352539062
  - -0.1007852554321289
  - -0.09658050537109375
  - -0.09432172775268555
  - -0.10178327560424805
  - -0.10495901107788086
  - -0.10561943054199219
  - -0.10891580581665039
  - -0.0861649289727211
  - -0.11013603210449219
  - -0.10595440864562988
  - -0.10336589813232422
  - -0.10500288009643555
  - -0.10311365127563477
  - -0.10664892196655273
  - -0.10468745231628418
  - -0.09265661239624023
  - -0.1057896614074707
  - -0.3240852355957031
  - -0.10481691360473633
  - -0.10424137115478516
  - -0.251602441072464
  - -0.10483407974243164
  - -0.10413312911987305
  - -0.09640989452600479
  - -0.10513782501220703
  - -0.10566902160644531
  - -3.169694423675537
- - -0.10462093353271484
  - -0.10506868362426758
  - -0.11195611953735352
  - -0.10549807548522949
  - -0.10044336318969727
  - -0.10248756408691406
  - -0.10437822341918945
  - -0.10152482986450195
  - -0.10468816757202148
  - -0.1049046516418457
  - -0.10391616821289062
  - -0.10926830023527145
  - -0.11104226112365723
  - -0.10525989532470703
  - -0.09406805038452148
  - -0.7974143028259277
  - -0.09752225875854492
  - -0.10643148422241211
  - -0.09967374801635742
  - -0.10168313980102539
  - -0.10408687591552734
  - -0.10426044464111328
  - -0.10512781143188477
  - -0.07324954867362976
  - -0.11261987686157227
  - -0.10599136352539062
  - -0.1007852554321289
  - -0.09658050537109375
  - -0.09432172775268555
  - -0.10178327560424805
  - -0.10495901107788086
  - -0.10561943054199219
  - -0.10891580581665039
  - -0.0861649289727211
  - -0.11013603210449219
  - -0.10595440864562988
  - -0.10336589813232422
  - -0.10500288009643555
  - -0.10311365127563477
  - -0.10664892196655273
  - -0.10468745231628418
  - -0.09265661239624023
  - -0.1057896614074707
  - -0.3240852355957031
  - -0.10481691360473633
  - -0.10424137115478516
  - -0.251602441072464
  - -0.10483407974243164
  - -0.10413312911987305
  - -0.09640989452600479
  - -0.10513782501220703
  - -0.10566902160644531
  - -3.184389352798462
- - -0.10462093353271484
  - -0.10506868362426758
  - -0.11195611953735352
  - -0.10549807548522949
  - -0.10044336318969727
  - -0.10248756408691406
  - -0.10437822341918945
  - -0.10152482986450195
  - -0.10468816757202148
  - -0.1049046516418457
  - -0.10391616821289062
  - -0.10926830023527145
  - -0.11104226112365723
  - -0.10525989532470703
  - -0.09406805038452148
  - -0.7974143028259277
  - -0.09752225875854492
  - -0.10643148422241211
  - -0.09967374801635742
  - -0.10168313980102539
  - -0.10408687591552734
  - -0.10426044464111328
  - -0.10512781143188477
  - -0.07324954867362976
  - -0.11261987686157227
  - -0.10599136352539062
  - -0.1007852554321289
  - -0.09658050537109375
  - -0.09432172775268555
  - -0.10178327560424805
  - -0.10495901107788086
  - -0.10561943054199219
  - -0.10891580581665039
  - -0.0861649289727211
  - -0.11013603210449219
  - -0.10595440864562988
  - -0.10336589813232422
  - -0.10500288009643555
  - -0.10311365127563477
  - -0.10664892196655273
  - -0.10468745231628418
  - -0.09265661239624023
  - -0.1057896614074707
  - -0.3240852355957031
  - -0.10481691360473633
  - -0.10424137115478516
  - -0.251602441072464
  - -0.10483407974243164
  - -0.10413312911987305
  - -0.09640989452600479
  - -0.10513782501220703
  - -0.10566902160644531
  - -3.3831334114074707
- - -0.10462093353271484
  - -0.10506868362426758
  - -0.11195611953735352
  - -0.10549807548522949
  - -0.10044336318969727
  - -0.10248756408691406
  - -0.10437822341918945
  - -0.10152482986450195
  - -0.10468816757202148
  - -0.1049046516418457
  - -0.10391616821289062
  - -0.10926830023527145
  - -0.11104226112365723
  - -0.10525989532470703
  - -0.09406805038452148
  - -1.5498123168945312
  - -0.10129070281982422
  - -0.10595846176147461
  - -0.10054731369018555
  - -0.10141420364379883
  - -0.10412168502807617
  - -0.10367250442504883
  - -0.10573530197143555
  - -0.07254944741725922
  - -0.11185693740844727
  - -0.10599255561828613
  - -0.10048294067382812
  - -0.11392354965209961
  - -0.09489583969116211
  - -0.1013340950012207
  - -0.10476303100585938
  - -0.10563850402832031
  - -0.10741901397705078
  - -0.10276780277490616
  - -0.11030888557434082
  - -0.10593843460083008
  - -0.10333538055419922
  - -0.10582828521728516
  - -0.10299253463745117
  - -0.1066889762878418
  - -0.10464644432067871
  - -0.09380531311035156
  - -0.10532903671264648
  - -0.32664060592651367
  - -0.10483121871948242
  - -0.104248046875
  - -0.25226739048957825
  - -0.10475873947143555
  - -0.10407829284667969
  - -0.09732670336961746
  - -0.10515785217285156
  - -0.10559844970703125
  - -3.1662416458129883
- - -0.10462093353271484
  - -0.10506868362426758
  - -0.11195611953735352
  - -0.10549807548522949
  - -0.10044336318969727
  - -0.10248756408691406
  - -0.10437822341918945
  - -0.10152482986450195
  - -0.10468816757202148
  - -0.1049046516418457
  - -0.10391616821289062
  - -0.10926830023527145
  - -0.11104226112365723
  - -0.10525989532470703
  - -0.09406805038452148
  - -1.5498123168945312
  - -0.10129070281982422
  - -0.10595846176147461
  - -0.10054731369018555
  - -0.10141420364379883
  - -0.10412168502807617
  - -0.10367250442504883
  - -0.10573530197143555
  - -0.07254944741725922
  - -0.11185693740844727
  - -0.10599255561828613
  - -0.10048294067382812
  - -0.11392354965209961
  - -0.09489583969116211
  - -0.1013340950012207
  - -0.10476303100585938
  - -0.10563850402832031
  - -0.10741901397705078
  - -0.10276780277490616
  - -0.11030888557434082
  - -0.10593843460083008
  - -0.10333538055419922
  - -0.10582828521728516
  - -0.10299253463745117
  - -0.1066889762878418
  - -0.10464644432067871
  - -0.09380531311035156
  - -0.10532903671264648
  - -0.32664060592651367
  - -0.10483121871948242
  - -0.104248046875
  - -0.25226739048957825
  - -0.10475873947143555
  - -0.10407829284667969
  - -0.09732670336961746
  - -0.10515785217285156
  - -0.10559844970703125
  - -3.1808862686157227
- - -0.10462093353271484
  - -0.10506868362426758
  - -0.11195611953735352
  - -0.10549807548522949
  - -0.10044336318969727
  - -0.10248756408691406
  - -0.10437822341918945
  - -0.10152482986450195
  - -0.10468816757202148
  - -0.1049046516418457
  - -0.10391616821289062
  - -0.10926830023527145
  - -0.11104226112365723
  - -0.10525989532470703
  - -0.09406805038452148
  - -0.7974143028259277
  - -0.09752225875854492
  - -0.10643148422241211
  - -0.09967374801635742
  - -0.10168313980102539
  - -0.10408687591552734
  - -0.10426044464111328
  - -0.10512781143188477
  - -0.07324954867362976
  - -3.4355204105377197
  - -0.10591483116149902
  - -0.10161161422729492
  - -0.09295129776000977
  - -0.0949711799621582
  - -0.10190010070800781
  - -0.10520124435424805
  - -0.10559892654418945
  - -0.11054182052612305
  - -0.07319149374961853
  - -0.11015105247497559
  - -0.10591459274291992
  - -0.10335397720336914
  - -0.10557174682617188
  - -0.10315656661987305
  - -0.10663151741027832
  - -0.1046900749206543
  - -0.0926980972290039
  - -0.10581636428833008
  - -0.3317103385925293
  - -0.10480737686157227
  - -0.10422754287719727
  - -0.25167447328567505
  - -0.10483217239379883
  - -0.10412788391113281
  - -0.09630521386861801
  - -0.10513782501220703
  - -0.1056680679321289
  - -0.8277058601379395
- - -0.10462093353271484
  - -0.10506868362426758
  - -0.11195611953735352
  - -0.10549807548522949
  - -0.10044336318969727
  - -0.10248756408691406
  - -0.10437822341918945
  - -0.10152482986450195
  - -0.10468816757202148
  - -0.1049046516418457
  - -0.10391616821289062
  - -0.10926830023527145
  - -0.11104226112365723
  - -0.10525989532470703
  - -0.09406805038452148
  - -1.5498123168945312
  - -0.10129070281982422
  - -0.10595846176147461
  - -0.10054731369018555
  - -0.10141420364379883
  - -0.10412168502807617
  - -0.10367250442504883
  - -0.10573530197143555
  - -0.07254944741725922
  - -0.11185693740844727
  - -0.10599255561828613
  - -0.10048294067382812
  - -0.11392354965209961
  - -0.09489583969116211
  - -0.1013340950012207
  - -0.10476303100585938
  - -0.10563850402832031
  - -0.10741901397705078
  - -0.10276780277490616
  - -0.11030888557434082
  - -0.10593843460083008
  - -0.10333538055419922
  - -0.10582828521728516
  - -0.10299253463745117
  - -0.1066889762878418
  - -0.10464644432067871
  - -0.09380531311035156
  - -0.10532903671264648
  - -0.32664060592651367
  - -0.10483121871948242
  - -0.104248046875
  - -0.25226739048957825
  - -0.10475873947143555
  - -0.10407829284667969
  - -0.09732670336961746
  - -0.10515785217285156
  - -0.10559844970703125
  - -3.3797292709350586
- - -0.10462093353271484
  - -0.10506868362426758
  - -0.11195611953735352
  - -0.10549807548522949
  - -0.10044336318969727
  - -0.10248756408691406
  - -0.10437822341918945
  - -0.10152482986450195
  - -0.10468816757202148
  - -0.1049046516418457
  - -0.10391616821289062
  - -0.10926830023527145
  - -0.11104226112365723
  - -0.10525989532470703
  - -0.09406805038452148
  - -0.7974143028259277
  - -0.09752225875854492
  - -0.10643148422241211
  - -0.09967374801635742
  - -0.10168313980102539
  - -0.10408687591552734
  - -0.10426044464111328
  - -0.10512781143188477
  - -0.07324954867362976
  - -0.11261987686157227
  - -0.10599136352539062
  - -0.1007852554321289
  - -0.09658050537109375
  - -0.09432172775268555
  - -0.10178327560424805
  - -0.10495901107788086
  - -0.10561943054199219
  - -0.10891580581665039
  - -0.0861649289727211
  - -3.4813172817230225
  - -0.10646438598632812
  - -0.10305452346801758
  - -0.1050119400024414
  - -0.1032705307006836
  - -0.10659265518188477
  - -0.10470175743103027
  - -0.0929422378540039
  - -0.1056222915649414
  - -0.3364229202270508
  - -0.10483551025390625
  - -0.10419988632202148
  - -0.24972033500671387
  - -0.10482311248779297
  - -0.10410928726196289
  - -0.09679834544658661
  - -0.10512733459472656
  - -0.10564374923706055
  - -0.8287547826766968
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'FullName'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'And')
  - ('And', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'FullName'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'FullName'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'FullName'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'FullName'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'And')
  - ('And', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'FullName'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'And')
  - ('And', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'FullName'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'FullName'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'And')
  - ('And', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'FullName'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'FullName'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
