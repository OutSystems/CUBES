db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/cars_data.csv
output: tests-examples/db2csv/car_1/tables/0058_dev.csv
raw_question: What is the number of cars with more than 4 cylinders? 
question_index: 144 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - 4
join_columns: []
groupby_columns: []
orderby_columns: []
functions:
 - count
columns:
 - cylinders
filters:
 - '>'
ieu: []
comment: |-
  SELECT count(*)
  FROM CARS_DATA
  WHERE Cylinders > 4;

sql: |-
  SELECT count(*)
  FROM CARS_DATA
  WHERE Cylinders > 4;
smbop_beam_join_columns:
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
smbop_beam_orderby_columns:
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
smbop_beam_constants:
- - 4
- - 4
- - 4
- - 4
- - 4
smbop_beam_functions:
- - count
- - count
- - count
- - count
- []
smbop_beam_columns:
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- []
smbop_beam_ieu:
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '>'
- - '='
- - '='
- - '<'
- []
smbop_beam_inferred_code:
  - SELECT COUNT( * ) FROM cars_data WHERE cars_data.cylinders > 4
  - SELECT COUNT( * ) FROM cars_data WHERE cars_data.cylinders = 4
  - SELECT COUNT( * ) FROM car_names, cars_data WHERE cars_data.cylinders = 4
  - SELECT COUNT( * ) FROM car_names, cars_data WHERE cars_data.cylinders<4
  - SELECT cars_data.cylinders FROM cars_data
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( * ) FROM cars_data WHERE cars_data.cylinders > 4
  - SELECT COUNT( * ) FROM cars_data WHERE cars_data.cylinders = 4
  - SELECT COUNT( * ) FROM car_names, cars_data WHERE cars_data.cylinders = 4
  - SELECT COUNT( * ) FROM car_names, cars_data WHERE cars_data.cylinders<4
  - SELECT cars_data.cylinders FROM cars_data
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- []
- []
- []
- - makeid
  - id
  - model
- - makeid
  - id
- - countryid
  - id
  - continent
  - makeid
  - country
  - model
  - contid
  - maker
- - countryid
  - id
  - makeid
  - country
  - model
  - maker
- - id
  - maker
  - makeid
  - model
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
ratsql_beam_constants:
- - 4
- - 4
- - 4
- - 4
- - 4
  - '1'
- - 4
- - 4
- - 4
- - 4
- - 4
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
ratsql_beam_inferred_code:
  - SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
  - SELECT Count(*) FROM cars_data WHERE DISTINCT cars_data.Cylinders > 'terminal'
  - SELECT Count(DISTINCT *) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
  - SELECT DISTINCT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
  - SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal' LIMIT 1
  - SELECT Count(*) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 'terminal'
  - SELECT Count(*) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 'terminal'
  - SELECT Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 'terminal'
  - SELECT Count(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 'terminal'
  - SELECT Count(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 4
  - SELECT Count(*) FROM cars_data WHERE DISTINCT cars_data.Cylinders > 4
  - SELECT Count(DISTINCT *) FROM cars_data WHERE cars_data.Cylinders > 4
  - SELECT DISTINCT Count(*) FROM cars_data WHERE cars_data.Cylinders > 4
  - SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 4 LIMIT 1
  - SELECT Count(*) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 4
  - SELECT Count(*) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 4
  - SELECT Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 4
  - SELECT Count(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 4
  - SELECT Count(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 4
ratsql_beam_has_limit:
  - False
  - False
  - True
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10406684875488281
  - -0.1049036979675293
  - -0.10626506805419922
  - -0.10399627685546875
  - -0.102447509765625
  - -0.10324621200561523
  - -0.11635589599609375
  - -0.10349035263061523
  - -0.10516977310180664
  - -0.10471773147583008
  - -0.10499763488769531
  - -0.0871242806315422
  - -0.10883760452270508
  - -0.10489606857299805
  - -0.09538745880126953
  - -0.09724998474121094
  - -0.09404134750366211
  - -0.10365962982177734
  - -0.10557746887207031
  - -0.10415887832641602
  - -0.10478782653808594
  - -0.1125214621424675
  - -0.11148548126220703
  - -0.10572648048400879
  - -0.11185836791992188
  - -0.10458564758300781
  - -0.10245084762573242
  - -0.10754847526550293
  - -0.104766845703125
  - -0.09734630584716797
  - -0.10318231582641602
  - -0.10788202285766602
  - -0.10648584365844727
  - -0.1042628288269043
  - -0.11731287091970444
- - -0.10406684875488281
  - -0.1049036979675293
  - -0.10626506805419922
  - -0.10399627685546875
  - -0.102447509765625
  - -0.10324621200561523
  - -0.11635589599609375
  - -0.10349035263061523
  - -0.10516977310180664
  - -0.10471773147583008
  - -0.10499763488769531
  - -0.0871242806315422
  - -0.10883760452270508
  - -0.10489606857299805
  - -0.09538745880126953
  - -0.09724998474121094
  - -0.09404134750366211
  - -0.10365962982177734
  - -0.10557746887207031
  - -0.10415887832641602
  - -0.10478782653808594
  - -0.1125214621424675
  - -3.4483642578125
  - -0.10617494583129883
  - -0.1094217300415039
  - -0.102264404296875
  - -0.10240793228149414
  - -0.1075429916381836
  - -0.10473394393920898
  - -0.09735727310180664
  - -0.10338068008422852
  - -0.10783004760742188
  - -0.10660743713378906
  - -0.10429000854492188
  - -0.11746403574943542
- - -0.10406684875488281
  - -0.1049036979675293
  - -0.10626506805419922
  - -0.10399627685546875
  - -0.102447509765625
  - -0.10324621200561523
  - -0.11635589599609375
  - -0.10349035263061523
  - -0.10516977310180664
  - -0.10471773147583008
  - -0.10499763488769531
  - -0.0871242806315422
  - -3.5255320072174072
  - -0.10835599899291992
  - -0.09451723098754883
  - -0.09384965896606445
  - -0.09383916854858398
  - -0.10274362564086914
  - -0.10552835464477539
  - -0.10419750213623047
  - -0.10486364364624023
  - -0.11149704456329346
  - -0.11145353317260742
  - -0.10569643974304199
  - -0.11155223846435547
  - -0.10500526428222656
  - -0.10242891311645508
  - -0.10753583908081055
  - -0.10475921630859375
  - -0.09737300872802734
  - -0.10311412811279297
  - -0.10785245895385742
  - -0.10689973831176758
  - -0.10411691665649414
  - -0.11906976997852325
- - -0.10406684875488281
  - -0.1049036979675293
  - -3.548068046569824
  - -0.10399675369262695
  - -0.1015162467956543
  - -0.10344839096069336
  - -0.11688756942749023
  - -0.10333490371704102
  - -0.1051483154296875
  - -0.1047506332397461
  - -0.1049661636352539
  - -0.08513984829187393
  - -0.10887527465820312
  - -0.10489726066589355
  - -0.09586429595947266
  - -0.0968790054321289
  - -0.09394693374633789
  - -0.10370540618896484
  - -0.10559463500976562
  - -0.1041560173034668
  - -0.10477447509765625
  - -0.11236699670553207
  - -0.11147189140319824
  - -0.10572433471679688
  - -0.11183309555053711
  - -0.10454559326171875
  - -0.10245132446289062
  - -0.10754966735839844
  - -0.1047675609588623
  - -0.0973515510559082
  - -0.10317707061767578
  - -0.10788774490356445
  - -0.10648059844970703
  - -0.10425901412963867
  - -0.1172475591301918
- - -0.10406684875488281
  - -0.1049036979675293
  - -0.10626506805419922
  - -0.10399627685546875
  - -0.102447509765625
  - -0.10324621200561523
  - -0.11635589599609375
  - -0.10349035263061523
  - -0.10516977310180664
  - -0.10471773147583008
  - -0.10499763488769531
  - -0.0871242806315422
  - -0.10883760452270508
  - -0.10489606857299805
  - -0.09538745880126953
  - -0.09724998474121094
  - -0.09404134750366211
  - -0.10365962982177734
  - -0.10557746887207031
  - -0.10415887832641602
  - -0.10478782653808594
  - -0.1125214621424675
  - -0.11148548126220703
  - -0.10572648048400879
  - -0.11185836791992188
  - -0.10458564758300781
  - -0.10245084762573242
  - -3.5529520511627197
  - -0.10454440116882324
  - -0.09782648086547852
  - -0.10292720794677734
  - -0.10768842697143555
  - -0.1078333854675293
  - -0.1040034294128418
  - -0.11985301226377487
- - -0.10406684875488281
  - -0.1049036979675293
  - -0.10626506805419922
  - -0.10399627685546875
  - -0.102447509765625
  - -0.10324621200561523
  - -0.11635589599609375
  - -0.10349035263061523
  - -0.10516977310180664
  - -0.10471773147583008
  - -0.10499763488769531
  - -0.0871242806315422
  - -0.10883760452270508
  - -0.10489606857299805
  - -0.09538745880126953
  - -0.09724998474121094
  - -0.09404134750366211
  - -0.10365962982177734
  - -0.10557746887207031
  - -0.10415887832641602
  - -0.10478782653808594
  - -0.1125214621424675
  - -0.11148548126220703
  - -0.10572648048400879
  - -0.11185836791992188
  - -0.10458564758300781
  - -0.10245084762573242
  - -0.10754847526550293
  - -0.104766845703125
  - -0.09734630584716797
  - -0.10318231582641602
  - -0.10788202285766602
  - -0.10648584365844727
  - -0.1042628288269043
  - -3.740696430206299
- - -0.10406684875488281
  - -0.1049036979675293
  - -0.10626506805419922
  - -0.10399627685546875
  - -0.102447509765625
  - -0.10324621200561523
  - -0.11635589599609375
  - -0.10349035263061523
  - -0.10516977310180664
  - -0.10471773147583008
  - -0.10499763488769531
  - -0.0871242806315422
  - -0.10883760452270508
  - -0.10489606857299805
  - -0.09538745880126953
  - -0.09724998474121094
  - -0.09404134750366211
  - -0.10365962982177734
  - -0.10557746887207031
  - -0.10415887832641602
  - -0.10478782653808594
  - -0.1125214621424675
  - -0.11148548126220703
  - -0.10572648048400879
  - -0.11185836791992188
  - -0.10458564758300781
  - -0.10245084762573242
  - -0.10754847526550293
  - -0.104766845703125
  - -0.09734630584716797
  - -0.10318231582641602
  - -0.10788202285766602
  - -0.10648584365844727
  - -0.1042628288269043
  - -3.789787769317627
- - -0.10406684875488281
  - -0.1049036979675293
  - -0.10626506805419922
  - -0.10399627685546875
  - -0.102447509765625
  - -0.10324621200561523
  - -0.11635589599609375
  - -0.10349035263061523
  - -0.10516977310180664
  - -0.10471773147583008
  - -0.10499763488769531
  - -0.0871242806315422
  - -0.10883760452270508
  - -0.10489606857299805
  - -0.09538745880126953
  - -0.09724998474121094
  - -0.09404134750366211
  - -0.10365962982177734
  - -0.10557746887207031
  - -0.10415887832641602
  - -0.10478782653808594
  - -0.1125214621424675
  - -0.11148548126220703
  - -0.10572648048400879
  - -0.11185836791992188
  - -0.10458564758300781
  - -0.10245084762573242
  - -0.10754847526550293
  - -0.104766845703125
  - -0.09734630584716797
  - -0.10318231582641602
  - -0.10788202285766602
  - -0.10648584365844727
  - -0.1042628288269043
  - -3.802783966064453
- - -0.10406684875488281
  - -0.1049036979675293
  - -0.10626506805419922
  - -0.10399627685546875
  - -0.102447509765625
  - -0.10324621200561523
  - -0.11635589599609375
  - -0.10349035263061523
  - -0.10516977310180664
  - -0.10471773147583008
  - -0.10499763488769531
  - -0.0871242806315422
  - -0.10883760452270508
  - -0.10489606857299805
  - -0.09538745880126953
  - -0.09724998474121094
  - -0.09404134750366211
  - -0.10365962982177734
  - -0.10557746887207031
  - -0.10415887832641602
  - -0.10478782653808594
  - -0.1125214621424675
  - -0.11148548126220703
  - -0.10572648048400879
  - -0.11185836791992188
  - -0.10458564758300781
  - -0.10245084762573242
  - -0.10754847526550293
  - -0.104766845703125
  - -0.09734630584716797
  - -0.10318231582641602
  - -0.10788202285766602
  - -0.10648584365844727
  - -0.1042628288269043
  - -3.826138734817505
- - -0.10406684875488281
  - -0.1049036979675293
  - -0.10626506805419922
  - -0.10399627685546875
  - -0.102447509765625
  - -0.10324621200561523
  - -0.11635589599609375
  - -0.10349035263061523
  - -0.10516977310180664
  - -0.10471773147583008
  - -0.10499763488769531
  - -0.0871242806315422
  - -0.10883760452270508
  - -0.10489606857299805
  - -0.09538745880126953
  - -0.09724998474121094
  - -0.09404134750366211
  - -0.10365962982177734
  - -0.10557746887207031
  - -0.10415887832641602
  - -0.10478782653808594
  - -0.1125214621424675
  - -0.11148548126220703
  - -0.10572648048400879
  - -0.11185836791992188
  - -0.10458564758300781
  - -0.10245084762573242
  - -0.10754847526550293
  - -0.104766845703125
  - -0.09734630584716797
  - -0.10318231582641602
  - -0.10788202285766602
  - -0.10648584365844727
  - -0.1042628288269043
  - -3.8994531631469727
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
