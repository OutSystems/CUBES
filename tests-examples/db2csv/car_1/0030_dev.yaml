db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/model_list.csv
 - tests-examples/db2csv/car_1/tables/countries.csv
 - tests-examples/db2csv/car_1/tables/car_makers.csv
output: tests-examples/db2csv/car_1/tables/0030_dev.csv
raw_question: What is the count of the car models produced in the United States? 
question_index: 116 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - usa
join_columns:
 - id
 - countryid
 - maker
 - country
groupby_columns: []
orderby_columns: []
functions:
 - count
columns:
 - countryname
filters:
 - '='
ieu: []
comment: |-
  SELECT count(*)
  FROM MODEL_LIST AS T1
  JOIN CAR_MAKERS AS T2 ON T1.Maker = T2.Id
  JOIN COUNTRIES AS T3 ON T2.Country = T3.CountryId
  WHERE T3.CountryName = 'usa';

sql: |-
  SELECT count(*)
  FROM MODEL_LIST AS T1
  JOIN CAR_MAKERS AS T2 ON T1.Maker = T2.Id
  JOIN COUNTRIES AS T3 ON T2.Country = T3.CountryId
  WHERE T3.CountryName = 'usa';
smbop_beam_join_columns:
- - id
  - countryid
  - maker
- - id
  - countryid
  - maker
  - country
- - countryid
  - maker
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
smbop_beam_orderby_columns:
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
smbop_beam_constants:
- - usa
- - usa
- - usa
- - usa
smbop_beam_functions:
- - count
- - count
- - count
- []
smbop_beam_columns:
- - countryname
- - countryname
- - countryname
- []
smbop_beam_ieu:
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- []
smbop_beam_inferred_code:
  - SELECT COUNT( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON model_list.maker = countries.countryid WHERE countries.countryname = 'United States'
  - SELECT COUNT( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'United States'
  - SELECT COUNT( * ) FROM model_list JOIN countries ON model_list.maker = countries.countryid WHERE countries.countryname = 'United States'
  - SELECT countries.countryid FROM countries
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON model_list.maker = countries.countryid WHERE countries.countryname = 'United States'
  - SELECT COUNT( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'United States'
  - SELECT COUNT( * ) FROM model_list JOIN countries ON model_list.maker = countries.countryid WHERE countries.countryname = 'United States'
  - SELECT countries.countryid FROM countries
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
ratsql_beam_join_columns:
- - model
- - model
- - makeid
  - id
  - model
- []
- - makeid
  - id
  - model
- - makeid
  - id
  - model
- - makeid
  - id
  - model
- - id
  - maker
  - model
- []
- - makeid
  - id
  - model
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
ratsql_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - make
  - model
- - make
- - model
  - year
- - make
- - year
- - edispl
  - model
- - model
  - year
- - maker
  - model
- - maker
  - model
- - edispl
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Count(DISTINCT model_list.Model) FROM model_list JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Make = 'terminal'
  - SELECT Count(*) FROM model_list JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Make = 'terminal'
  - SELECT Count(DISTINCT model_list.Model) FROM model_list JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal'
  - SELECT Count(*) FROM car_names WHERE car_names.Make = 'terminal'
  - SELECT Count(*) FROM model_list JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal'
  - SELECT Count(DISTINCT model_list.Model) FROM model_list JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Edispl = 'terminal'
  - SELECT Count(DISTINCT model_list.Model) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal'
  - SELECT Count(DISTINCT model_list.Model) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_makers.Maker = 'terminal'
  - SELECT Count(DISTINCT model_list.Model) FROM model_list WHERE model_list.Maker = 'terminal'
  - SELECT Count(*) FROM model_list JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Edispl = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - 
  - 
  - 
  - 
  - 
  - 
  - 
  - 
  - 
  - 
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10303735733032227
  - -0.10486221313476562
  - -0.10672235488891602
  - -0.10345196723937988
  - -0.10094118118286133
  - -0.10394811630249023
  - -0.11422586441040039
  - -0.10158967971801758
  - -0.10508346557617188
  - -0.10446834564208984
  - -0.10500478744506836
  - -0.6144077777862549
  - -0.09726095199584961
  - -0.10490012168884277
  - -0.09244680404663086
  - -0.10161447525024414
  - -0.10117101669311523
  - -0.10135173797607422
  - -0.10414648056030273
  - -0.10446834564208984
  - -0.1047358512878418
  - -1.0909900665283203
  - -0.11341404914855957
  - -0.10513091087341309
  - -0.10586786270141602
  - -0.10124444961547852
  - -0.1023402214050293
  - -0.10756182670593262
  - -0.10456609725952148
  - -0.09877920150756836
  - -0.10455560684204102
  - -0.5064892768859863
  - -0.10508346557617188
  - -0.1038808822631836
  - -0.6252322793006897
- - -0.10303735733032227
  - -0.10486221313476562
  - -0.10672235488891602
  - -0.10345196723937988
  - -0.10094118118286133
  - -0.10394811630249023
  - -0.11422586441040039
  - -0.10158967971801758
  - -0.10508346557617188
  - -0.10446834564208984
  - -0.10500478744506836
  - -1.065486192703247
  - -0.11076760292053223
  - -0.10500383377075195
  - -0.09506082534790039
  - -0.10152721405029297
  - -0.10073614120483398
  - -0.10126447677612305
  - -0.10415315628051758
  - -0.10467863082885742
  - -0.10469532012939453
  - -1.096681833267212
  - -0.11334681510925293
  - -0.10519552230834961
  - -0.10419034957885742
  - -0.10126495361328125
  - -0.10244369506835938
  - -0.10755038261413574
  - -0.10458755493164062
  - -0.09858083724975586
  - -0.10431671142578125
  - -0.5461692810058594
  - -0.10512590408325195
  - -0.10356903076171875
  - -0.5987950563430786
- - -0.10303735733032227
  - -0.10486221313476562
  - -0.10672235488891602
  - -0.10345196723937988
  - -0.10094118118286133
  - -0.10394811630249023
  - -0.11422586441040039
  - -0.10158967971801758
  - -0.10508346557617188
  - -0.10446834564208984
  - -0.10500478744506836
  - -0.6144077777862549
  - -0.09726095199584961
  - -0.10490012168884277
  - -0.09244680404663086
  - -0.10161447525024414
  - -0.10117101669311523
  - -0.10135173797607422
  - -0.10414648056030273
  - -0.10446834564208984
  - -0.1047358512878418
  - -1.6604981422424316
  - -0.11359119415283203
  - -0.10525226593017578
  - -0.10489845275878906
  - -0.10106706619262695
  - -0.10253047943115234
  - -0.10757327079772949
  - -0.10455465316772461
  - -0.09934139251708984
  - -0.1046438217163086
  - -0.5351338386535645
  - -0.10494422912597656
  - -0.10416316986083984
  - -0.416269987821579
  - -0.10353899002075195
  - -0.10403251647949219
  - -0.28653693199157715
- - -0.10303735733032227
  - -0.10486221313476562
  - -0.10672235488891602
  - -0.10345196723937988
  - -0.10094118118286133
  - -0.10394811630249023
  - -0.11422586441040039
  - -0.10158967971801758
  - -0.10508346557617188
  - -0.10446834564208984
  - -0.10500478744506836
  - -1.065486192703247
  - -0.11076760292053223
  - -0.10500383377075195
  - -0.09506082534790039
  - -0.10152721405029297
  - -0.10073614120483398
  - -0.10126447677612305
  - -0.10415315628051758
  - -0.10467863082885742
  - -0.10469532012939453
  - -1.096681833267212
  - -0.11334681510925293
  - -0.10519552230834961
  - -0.10419034957885742
  - -0.10126495361328125
  - -0.10244369506835938
  - -0.10755038261413574
  - -0.10458755493164062
  - -0.09858083724975586
  - -0.10431671142578125
  - -0.5461692810058594
  - -0.10512590408325195
  - -0.10356903076171875
  - -1.1553421020507812
- - -0.10303735733032227
  - -0.10486221313476562
  - -0.10672235488891602
  - -0.10345196723937988
  - -0.10094118118286133
  - -0.10394811630249023
  - -0.11422586441040039
  - -0.10158967971801758
  - -0.10508346557617188
  - -0.10446834564208984
  - -0.10500478744506836
  - -1.065486192703247
  - -0.11076760292053223
  - -0.10500383377075195
  - -0.09506082534790039
  - -0.10152721405029297
  - -0.10073614120483398
  - -0.10126447677612305
  - -0.10415315628051758
  - -0.10467863082885742
  - -0.10469532012939453
  - -1.665467381477356
  - -0.11355710029602051
  - -0.1053171157836914
  - -0.10478544235229492
  - -0.10096025466918945
  - -0.10243558883666992
  - -0.10757279396057129
  - -0.1045682430267334
  - -0.09893512725830078
  - -0.10425090789794922
  - -0.3635673522949219
  - -0.10473489761352539
  - -0.10430526733398438
  - -0.42044246196746826
  - -0.10378026962280273
  - -0.10402297973632812
  - -0.2717500627040863
- - -0.10303735733032227
  - -0.10486221313476562
  - -0.10672235488891602
  - -0.10345196723937988
  - -0.10094118118286133
  - -0.10394811630249023
  - -0.11422586441040039
  - -0.10158967971801758
  - -0.10508346557617188
  - -0.10446834564208984
  - -0.10500478744506836
  - -0.6144077777862549
  - -0.09726095199584961
  - -0.10490012168884277
  - -0.09244680404663086
  - -0.10161447525024414
  - -0.10117101669311523
  - -0.10135173797607422
  - -0.10414648056030273
  - -0.10446834564208984
  - -0.1047358512878418
  - -2.3254265785217285
  - -0.11327195167541504
  - -0.10541844367980957
  - -0.10535907745361328
  - -0.10114240646362305
  - -0.10230445861816406
  - -0.10754895210266113
  - -0.10461211204528809
  - -0.09850263595581055
  - -0.10385751724243164
  - -0.16701650619506836
  - -0.10463571548461914
  - -0.10448932647705078
  - -0.42091578245162964
  - -0.1040654182434082
  - -0.10458993911743164
  - -0.2770565152168274
- - -0.10303735733032227
  - -0.10486221313476562
  - -0.10672235488891602
  - -0.10345196723937988
  - -0.10094118118286133
  - -0.10394811630249023
  - -0.11422586441040039
  - -0.10158967971801758
  - -0.10508346557617188
  - -0.10446834564208984
  - -0.10500478744506836
  - -0.6144077777862549
  - -0.09726095199584961
  - -0.10490012168884277
  - -0.09244680404663086
  - -0.10161447525024414
  - -0.10117101669311523
  - -0.10135173797607422
  - -0.10414648056030273
  - -0.10446834564208984
  - -0.1047358512878418
  - -1.6604981422424316
  - -0.11359119415283203
  - -0.10525226593017578
  - -0.10489845275878906
  - -0.10106706619262695
  - -0.10253047943115234
  - -0.10757327079772949
  - -0.10455465316772461
  - -0.09934139251708984
  - -0.1046438217163086
  - -1.1902804374694824
  - -0.10507392883300781
  - -0.10373544692993164
  - -0.6217203140258789
- - -0.10303735733032227
  - -0.10486221313476562
  - -0.10672235488891602
  - -0.10345196723937988
  - -0.10094118118286133
  - -0.10394811630249023
  - -0.11422586441040039
  - -0.10158967971801758
  - -0.10508346557617188
  - -0.10446834564208984
  - -0.10500478744506836
  - -0.6144077777862549
  - -0.09726095199584961
  - -0.10490012168884277
  - -0.09244680404663086
  - -0.10161447525024414
  - -0.10117101669311523
  - -0.10135173797607422
  - -0.10414648056030273
  - -0.10446834564208984
  - -0.1047358512878418
  - -2.6672654151916504
  - -0.11305952072143555
  - -0.10553622245788574
  - -0.10583686828613281
  - -0.10129976272583008
  - -0.10227251052856445
  - -0.10753941535949707
  - -0.10464334487915039
  - -0.0984029769897461
  - -0.10374879837036133
  - -0.16056299209594727
  - -0.10461044311523438
  - -0.10448265075683594
  - -0.42169252038002014
  - -0.10412168502807617
  - -0.10459280014038086
  - -0.27521786093711853
- - -0.10303735733032227
  - -0.10486221313476562
  - -0.10672235488891602
  - -0.10345196723937988
  - -0.10094118118286133
  - -0.10394811630249023
  - -0.11422586441040039
  - -0.10158967971801758
  - -0.10508346557617188
  - -0.10446834564208984
  - -0.10500478744506836
  - -0.6144077777862549
  - -0.09726095199584961
  - -0.10490012168884277
  - -0.09244680404663086
  - -0.10161447525024414
  - -0.10117101669311523
  - -0.10135173797607422
  - -0.10414648056030273
  - -0.10446834564208984
  - -0.1047358512878418
  - -2.7606468200683594
  - -0.1142435073852539
  - -0.10512328147888184
  - -0.10154390335083008
  - -0.10108280181884766
  - -0.10205221176147461
  - -0.10756707191467285
  - -0.10454773902893066
  - -0.09888076782226562
  - -0.10425519943237305
  - -0.39396190643310547
  - -0.10496139526367188
  - -0.10374784469604492
  - -0.6543170213699341
- - -0.10303735733032227
  - -0.10486221313476562
  - -0.10672235488891602
  - -0.10345196723937988
  - -0.10094118118286133
  - -0.10394811630249023
  - -0.11422586441040039
  - -0.10158967971801758
  - -0.10508346557617188
  - -0.10446834564208984
  - -0.10500478744506836
  - -1.065486192703247
  - -0.11076760292053223
  - -0.10500383377075195
  - -0.09506082534790039
  - -0.10152721405029297
  - -0.10073614120483398
  - -0.10126447677612305
  - -0.10415315628051758
  - -0.10467863082885742
  - -0.10469532012939453
  - -2.3292429447174072
  - -0.11343765258789062
  - -0.10540032386779785
  - -0.10514211654663086
  - -0.10065269470214844
  - -0.10262823104858398
  - -0.10757684707641602
  - -0.10464358329772949
  - -0.09850931167602539
  - -0.10371685028076172
  - -0.14479351043701172
  - -0.10459375381469727
  - -0.10446310043334961
  - -0.42483043670654297
  - -0.10413503646850586
  - -0.10433053970336914
  - -0.2629322409629822
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Edispl'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Edispl'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
