db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/cars_data.csv
output: tests-examples/db2csv/car_1/tables/0067_dev.csv
raw_question: In which years cars were produced weighing no less than 3000 and no more than 4000 ? 
question_index: 153 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - 3000
 - 4000
join_columns: []
groupby_columns: []
functions: []
columns:
 - weight
filters:
 - ' between '
ieu: []
comment: |-
  select distinct year
  from cars_data
  where weight between 3000 and 4000;

sql: |-
  select distinct year
  from cars_data
  where weight between 3000 and 4000;
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- - year
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
smbop_beam_constants:
- - 3000
  - 4000
- - 3000
  - 4000
- - 3000
  - 4000
- - 3000
  - 4000
- - 3000
  - 4000
- - 3000
  - 4000
- - 3000
  - 4000
- - 3000
  - 4000
- - 3000
  - 4000
- - 3000
  - 4000
smbop_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_columns:
- - weight
- - weight
- - weight
- - weight
- - weight
- - weight
- - weight
- - weight
- - weight
- - weight
smbop_beam_ieu:
- []
- - intersect
- - intersect
- []
- - intersect
- - intersect
- []
- []
- []
- []
smbop_beam_filters:
- - ' between '
- - '<='
  - ' between '
  - '<'
- - ' between '
  - '>'
  - '>='
- - '<'
  - '>'
- - ' between '
- - '<='
  - '<'
- - '<='
  - '<'
  - '>'
  - '>='
- - ' between '
- - '<='
  - '<'
  - '>'
  - '>='
- - '<='
  - '<'
smbop_beam_inferred_code:
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 and 4000
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight <= 3000 INTERSECT SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 and 4000
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight >= 3000 INTERSECT SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 and 4000
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight<3000 OR cars_data.weight > 4000
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 and 3000 INTERSECT SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 and 4000
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight <= 3000 INTERSECT SELECT cars_data.year FROM cars_data WHERE cars_data.weight <= 3000
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight >= cars_data.weight AND cars_data.weight <= 4000 GROUP BY cars_data.year
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 and 3000
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight >= cars_data.weight AND cars_data.weight <= 4000
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight <= 3000
smbop_beam_inferred_code_w_terminals:
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 and 4000
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight <= 3000 INTERSECT SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 and 4000
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight >= 3000 INTERSECT SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 and 4000
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight<3000 OR cars_data.weight > 4000
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 and 3000 INTERSECT SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 and 4000
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight <= 3000 INTERSECT SELECT cars_data.year FROM cars_data WHERE cars_data.weight <= 3000
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight >= cars_data.weight AND cars_data.weight <= 4000 GROUP BY cars_data.year
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 and 3000
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight >= cars_data.weight AND cars_data.weight <= 4000
  - SELECT cars_data.year FROM cars_data WHERE cars_data.weight <= 3000
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- - model
  - makeid
  - id
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
ratsql_beam_constants:
- - 3000
  - 4000
- - 3000
  - 4000
- - 3000
  - 4000
- - 3000
  - 4000
- - 3000
  - 4000
- - 3000
  - 4000
- - 3000
  - 4000
- - 3000
  - 4000
- - 3000
  - 4000
- - 3000
  - 4000
ratsql_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_columns:
- - weight
- - weight
- - weight
- - weight
- - weight
- - weight
- - weight
- - weight
- - weight
- - weight
ratsql_beam_ieu:
- []
- []
- - intersect
- - except
- - intersect
- - except
- - intersect
- - except
- - intersect
- - intersect
ratsql_beam_filters:
- - '<'
- - ' between '
- - '<'
  - '>'
- - '<'
  - '>'
- - '<'
- - '<'
- - '<'
  - '>'
- - '<'
  - '>'
- - '<'
  - '>'
- - '<'
  - '>'
ratsql_beam_inferred_code:
  - SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal'
  - SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight BETWEEN 'terminal' AND 'terminal'
  - SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal' INTERSECT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > 'terminal'
  - SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal' EXCEPT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > 'terminal'
  - SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal' INTERSECT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal'
  - SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal' EXCEPT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal'
  - SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal' INTERSECT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > 'terminal'
  - SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal' EXCEPT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > 'terminal'
  - SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal' INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight > 'terminal'
  - SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal' INTERSECT SELECT cars_data.Year FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight > 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000
  - SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight BETWEEN 3000 AND 4000
  - SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 INTERSECT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > 3000
  - SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 EXCEPT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > 3000
  - SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 INTERSECT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 3000
  - SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 EXCEPT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 3000
  - SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 INTERSECT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > 3000
  - SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 EXCEPT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > 3000
  - SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight > 3000
  - SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 4000 INTERSECT SELECT cars_data.Year FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight > 3000
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.11030054092407227
  - -0.1044301986694336
  - -0.12098407745361328
  - -0.1044611930847168
  - -0.10012388229370117
  - -0.10243844985961914
  - -0.1052250862121582
  - -0.10169029235839844
  - -0.10449981689453125
  - -0.10468673706054688
  - -0.10485315322875977
  - -0.13051216304302216
  - -0.11093497276306152
  - -0.10502862930297852
  - -0.09223794937133789
  - -0.12192201614379883
  - -0.08367538452148438
  - -0.09931230545043945
  - -0.10445070266723633
  - -0.10551214218139648
  - -0.10512018203735352
  - -0.13364377617835999
  - -0.11162877082824707
  - -0.10545015335083008
  - -0.09813451766967773
  - -0.10011482238769531
  - -0.10261917114257812
  - -0.1075582504272461
  - -0.1045379638671875
  - -3.1562137603759766
  - -0.10308122634887695
  - -0.10469341278076172
  - -0.10778236389160156
  - -0.10371065139770508
  - -0.10513104498386383
- - -0.11030054092407227
  - -0.1044301986694336
  - -0.12098407745361328
  - -0.1044611930847168
  - -0.10012388229370117
  - -0.10243844985961914
  - -0.1052250862121582
  - -0.10169029235839844
  - -0.10449981689453125
  - -0.10468673706054688
  - -0.10485315322875977
  - -0.13051216304302216
  - -0.11093497276306152
  - -0.10502862930297852
  - -0.09223794937133789
  - -4.491455078125
  - -0.10974836349487305
  - -0.10020971298217773
  - -0.10418701171875
  - -0.10485506057739258
  - -0.10523319244384766
  - -0.14265286922454834
  - -0.11202478408813477
  - -0.1054527759552002
  - -0.09792041778564453
  - -0.11597633361816406
  - -0.10124588012695312
  - -0.1023259162902832
  - -0.10769081115722656
  - -0.10425639152526855
  - -0.18672561645507812
  - -0.10418558120727539
  - -0.10513019561767578
  - -0.10858869552612305
  - -0.10380840301513672
  - -0.10555784404277802
- - -0.11030054092407227
  - -0.1044301986694336
  - -0.12098407745361328
  - -0.1044611930847168
  - -0.10012388229370117
  - -0.10243844985961914
  - -0.1052250862121582
  - -0.10169029235839844
  - -0.10449981689453125
  - -0.10468673706054688
  - -0.10485315322875977
  - -0.13051216304302216
  - -0.11093497276306152
  - -0.10502862930297852
  - -0.09223794937133789
  - -0.12192201614379883
  - -0.08367538452148438
  - -0.09931230545043945
  - -0.10445070266723633
  - -0.10551214218139648
  - -0.10512018203735352
  - -0.13364377617835999
  - -0.11162877082824707
  - -0.10545015335083008
  - -0.09813451766967773
  - -0.10011482238769531
  - -0.10261917114257812
  - -0.1075582504272461
  - -0.1045379638671875
  - -0.8662052154541016
  - -0.10417318344116211
  - -0.10503101348876953
  - -0.10734272003173828
  - -0.10388755798339844
  - -0.10412216186523438
  - -0.10293340682983398
  - -0.10398387908935547
  - -0.10265827178955078
  - -0.10463714599609375
  - -0.10585260391235352
  - -0.10421180725097656
  - -0.05345257744193077
  - -0.11240291595458984
  - -0.10528898239135742
  - -0.09087371826171875
  - -0.36180591583251953
  - -0.09171724319458008
  - -0.10323667526245117
  - -0.10551023483276367
  - -0.10431718826293945
  - -0.1056833267211914
  - -0.07354863733053207
  - -0.11056089401245117
  - -0.10575532913208008
  - -0.1067500114440918
  - -0.09561491012573242
  - -0.10238409042358398
  - -0.10795402526855469
  - -0.10480380058288574
  - -0.09805679321289062
  - -0.10401296615600586
  - -0.11003875732421875
  - -0.10512542724609375
  - -0.10373687744140625
  - -0.1326596736907959
  - -0.10625410079956055
  - -0.10942554473876953
  - -0.10499429702758789
  - -0.10393810272216797
  - -0.14966720342636108
- - -0.11030054092407227
  - -0.1044301986694336
  - -0.12098407745361328
  - -0.1044611930847168
  - -0.10012388229370117
  - -0.10243844985961914
  - -0.1052250862121582
  - -0.10169029235839844
  - -0.10449981689453125
  - -0.10468673706054688
  - -0.10485315322875977
  - -0.13051216304302216
  - -0.11093497276306152
  - -0.10502862930297852
  - -0.09223794937133789
  - -0.12192201614379883
  - -0.08367538452148438
  - -0.09931230545043945
  - -0.10445070266723633
  - -0.10551214218139648
  - -0.10512018203735352
  - -0.13364377617835999
  - -0.11162877082824707
  - -0.10545015335083008
  - -0.09813451766967773
  - -0.10011482238769531
  - -0.10261917114257812
  - -0.1075582504272461
  - -0.1045379638671875
  - -1.057769775390625
  - -0.11057043075561523
  - -0.10195493698120117
  - -0.11101722717285156
  - -0.10354256629943848
  - -0.10383033752441406
  - -0.10240411758422852
  - -0.10373353958129883
  - -0.10235595703125
  - -0.10445356369018555
  - -0.10525131225585938
  - -0.10443782806396484
  - -0.09793844819068909
  - -0.11243319511413574
  - -0.10518360137939453
  - -0.09106826782226562
  - -0.2709994316101074
  - -0.09267473220825195
  - -0.10343694686889648
  - -0.10552597045898438
  - -0.1043844223022461
  - -0.10575199127197266
  - -0.07427482306957245
  - -0.11052489280700684
  - -0.10576558113098145
  - -0.10666656494140625
  - -0.09613704681396484
  - -0.10293149948120117
  - -0.10774970054626465
  - -0.10484576225280762
  - -0.09819889068603516
  - -0.10419511795043945
  - -0.11016511917114258
  - -0.10512924194335938
  - -0.1036233901977539
  - -0.1325109899044037
  - -0.10618162155151367
  - -0.10936212539672852
  - -0.10497522354125977
  - -0.10394811630249023
  - -0.15150028467178345
- - -0.11030054092407227
  - -0.1044301986694336
  - -0.12098407745361328
  - -0.1044611930847168
  - -0.10012388229370117
  - -0.10243844985961914
  - -0.1052250862121582
  - -0.10169029235839844
  - -0.10449981689453125
  - -0.10468673706054688
  - -0.10485315322875977
  - -0.13051216304302216
  - -0.11093497276306152
  - -0.10502862930297852
  - -0.09223794937133789
  - -0.12192201614379883
  - -0.08367538452148438
  - -0.09931230545043945
  - -0.10445070266723633
  - -0.10551214218139648
  - -0.10512018203735352
  - -0.13364377617835999
  - -0.11162877082824707
  - -0.10545015335083008
  - -0.09813451766967773
  - -0.10011482238769531
  - -0.10261917114257812
  - -0.1075582504272461
  - -0.1045379638671875
  - -0.8662052154541016
  - -0.10417318344116211
  - -0.10503101348876953
  - -0.10734272003173828
  - -0.10388755798339844
  - -0.10412216186523438
  - -0.10293340682983398
  - -0.10398387908935547
  - -0.10265827178955078
  - -0.10463714599609375
  - -0.10585260391235352
  - -0.10421180725097656
  - -0.05345257744193077
  - -0.11240291595458984
  - -0.10528898239135742
  - -0.09087371826171875
  - -1.9054698944091797
  - -0.08896923065185547
  - -0.10055160522460938
  - -0.10718917846679688
  - -0.10491514205932617
  - -0.10336828231811523
  - -0.08358369767665863
  - -0.11107969284057617
  - -0.10555720329284668
  - -0.106109619140625
  - -0.09866952896118164
  - -0.10149478912353516
  - -0.10802960395812988
  - -0.10468125343322754
  - -0.09788656234741211
  - -0.10391807556152344
  - -0.10984182357788086
  - -0.10512113571166992
  - -0.10362768173217773
  - -0.1362418532371521
  - -0.10586738586425781
  - -0.10892057418823242
  - -0.10494709014892578
  - -0.1038975715637207
  - -0.15507872402668
- - -0.11030054092407227
  - -0.1044301986694336
  - -0.12098407745361328
  - -0.1044611930847168
  - -0.10012388229370117
  - -0.10243844985961914
  - -0.1052250862121582
  - -0.10169029235839844
  - -0.10449981689453125
  - -0.10468673706054688
  - -0.10485315322875977
  - -0.13051216304302216
  - -0.11093497276306152
  - -0.10502862930297852
  - -0.09223794937133789
  - -0.12192201614379883
  - -0.08367538452148438
  - -0.09931230545043945
  - -0.10445070266723633
  - -0.10551214218139648
  - -0.10512018203735352
  - -0.13364377617835999
  - -0.11162877082824707
  - -0.10545015335083008
  - -0.09813451766967773
  - -0.10011482238769531
  - -0.10261917114257812
  - -0.1075582504272461
  - -0.1045379638671875
  - -1.057769775390625
  - -0.11057043075561523
  - -0.10195493698120117
  - -0.11101722717285156
  - -0.10354256629943848
  - -0.10383033752441406
  - -0.10240411758422852
  - -0.10373353958129883
  - -0.10235595703125
  - -0.10445356369018555
  - -0.10525131225585938
  - -0.10443782806396484
  - -0.09793844819068909
  - -0.11243319511413574
  - -0.10518360137939453
  - -0.09106826782226562
  - -2.342088222503662
  - -0.08833026885986328
  - -0.1007380485534668
  - -0.10723590850830078
  - -0.10496950149536133
  - -0.10334587097167969
  - -0.08598937839269638
  - -0.11113405227661133
  - -0.10558199882507324
  - -0.10580301284790039
  - -0.09836483001708984
  - -0.10217952728271484
  - -0.10798001289367676
  - -0.10468769073486328
  - -0.09798669815063477
  - -0.10404777526855469
  - -0.10981893539428711
  - -0.10512924194335938
  - -0.10352802276611328
  - -0.1336190551519394
  - -0.10577106475830078
  - -0.10869598388671875
  - -0.1049189567565918
  - -0.10386896133422852
  - -0.15431514382362366
- - -0.11030054092407227
  - -0.1044301986694336
  - -3.159837007522583
  - -0.10401535034179688
  - -0.10062742233276367
  - -0.10255241394042969
  - -0.10482215881347656
  - -0.10162544250488281
  - -0.10446691513061523
  - -0.1046743392944336
  - -0.10482358932495117
  - -0.1305851936340332
  - -0.11098647117614746
  - -0.10504317283630371
  - -0.09271430969238281
  - -0.12322568893432617
  - -0.08397483825683594
  - -0.0992579460144043
  - -0.10445499420166016
  - -0.10546588897705078
  - -0.10508584976196289
  - -0.1342305839061737
  - -0.11164736747741699
  - -0.1054387092590332
  - -0.09820270538330078
  - -0.10013103485107422
  - -0.10262250900268555
  - -0.10756397247314453
  - -0.10453271865844727
  - -0.8642969131469727
  - -0.10416269302368164
  - -0.10501623153686523
  - -0.10735964775085449
  - -0.10389232635498047
  - -0.10410070419311523
  - -0.10295629501342773
  - -0.1039738655090332
  - -0.10265541076660156
  - -0.10463380813598633
  - -0.1058497428894043
  - -0.10421228408813477
  - -0.05356873944401741
  - -0.11240506172180176
  - -0.10529613494873047
  - -0.09088373184204102
  - -0.3608860969543457
  - -0.0917348861694336
  - -0.10323762893676758
  - -0.10550689697265625
  - -0.10431718826293945
  - -0.10569190979003906
  - -0.0735674649477005
  - -0.11055898666381836
  - -0.10575580596923828
  - -0.10674571990966797
  - -0.09561347961425781
  - -0.10236454010009766
  - -0.1079568862915039
  - -0.10480499267578125
  - -0.0980677604675293
  - -0.10401678085327148
  - -0.11003780364990234
  - -0.10512447357177734
  - -0.10373687744140625
  - -0.13263888657093048
  - -0.10624837875366211
  - -0.10942697525024414
  - -0.10499382019042969
  - -0.10393714904785156
  - -0.14966370165348053
- - -0.11030054092407227
  - -0.1044301986694336
  - -3.159837007522583
  - -0.10401535034179688
  - -0.10062742233276367
  - -0.10255241394042969
  - -0.10482215881347656
  - -0.10162544250488281
  - -0.10446691513061523
  - -0.1046743392944336
  - -0.10482358932495117
  - -0.1305851936340332
  - -0.11098647117614746
  - -0.10504317283630371
  - -0.09271430969238281
  - -0.12322568893432617
  - -0.08397483825683594
  - -0.0992579460144043
  - -0.10445499420166016
  - -0.10546588897705078
  - -0.10508584976196289
  - -0.1342305839061737
  - -0.11164736747741699
  - -0.1054387092590332
  - -0.09820270538330078
  - -0.10013103485107422
  - -0.10262250900268555
  - -0.10756397247314453
  - -0.10453271865844727
  - -1.0615816116333008
  - -0.11066865921020508
  - -0.10187244415283203
  - -0.1105189323425293
  - -0.1035456657409668
  - -0.10385751724243164
  - -0.10241985321044922
  - -0.10371923446655273
  - -0.10235404968261719
  - -0.10445308685302734
  - -0.10523843765258789
  - -0.10443925857543945
  - -0.09827055037021637
  - -0.11243295669555664
  - -0.1051778793334961
  - -0.09107017517089844
  - -0.271151065826416
  - -0.0926828384399414
  - -0.10343551635742188
  - -0.10552310943603516
  - -0.10438346862792969
  - -0.1057586669921875
  - -0.07429009675979614
  - -0.11052441596984863
  - -0.10576558113098145
  - -0.10666131973266602
  - -0.0961604118347168
  - -0.10291290283203125
  - -0.10775232315063477
  - -0.10484623908996582
  - -0.0982198715209961
  - -0.10420370101928711
  - -0.11016464233398438
  - -0.10512924194335938
  - -0.10362529754638672
  - -0.1325051486492157
  - -0.10617685317993164
  - -0.10936450958251953
  - -0.10497522354125977
  - -0.10394668579101562
  - -0.15149986743927002
- - -0.11030054092407227
  - -0.1044301986694336
  - -0.12098407745361328
  - -0.1044611930847168
  - -0.10012388229370117
  - -0.10243844985961914
  - -0.1052250862121582
  - -0.10169029235839844
  - -0.10449981689453125
  - -0.10468673706054688
  - -0.10485315322875977
  - -0.13051216304302216
  - -0.11093497276306152
  - -0.10502862930297852
  - -0.09223794937133789
  - -0.12192201614379883
  - -0.08367538452148438
  - -0.09931230545043945
  - -0.10445070266723633
  - -0.10551214218139648
  - -0.10512018203735352
  - -0.13364377617835999
  - -0.11162877082824707
  - -0.10545015335083008
  - -0.09813451766967773
  - -0.10011482238769531
  - -0.10261917114257812
  - -0.1075582504272461
  - -0.1045379638671875
  - -0.8662052154541016
  - -0.10417318344116211
  - -0.10503101348876953
  - -0.10734272003173828
  - -0.10388755798339844
  - -0.10412216186523438
  - -0.10293340682983398
  - -0.10398387908935547
  - -0.10265827178955078
  - -0.10463714599609375
  - -0.10585260391235352
  - -0.10421180725097656
  - -0.05345257744193077
  - -3.4570086002349854
  - -0.10244464874267578
  - -0.09036588668823242
  - -0.25008106231689453
  - -0.0916438102722168
  - -0.1029205322265625
  - -0.10551118850708008
  - -0.10426092147827148
  - -0.10530710220336914
  - -0.0720437690615654
  - -0.11064887046813965
  - -0.10571837425231934
  - -0.10681867599487305
  - -0.09544181823730469
  - -0.10241508483886719
  - -0.10791754722595215
  - -0.10482430458068848
  - -0.09797096252441406
  - -0.10408163070678711
  - -0.10991764068603516
  - -0.10514545440673828
  - -0.10366344451904297
  - -0.13409630954265594
  - -0.10603570938110352
  - -0.10940790176391602
  - -0.10497093200683594
  - -0.10391902923583984
  - -0.1518649458885193
- - -0.11030054092407227
  - -0.1044301986694336
  - -0.12098407745361328
  - -0.1044611930847168
  - -0.10012388229370117
  - -0.10243844985961914
  - -0.1052250862121582
  - -0.10169029235839844
  - -0.10449981689453125
  - -0.10468673706054688
  - -0.10485315322875977
  - -0.13051216304302216
  - -0.11093497276306152
  - -0.10502862930297852
  - -0.09223794937133789
  - -0.12192201614379883
  - -0.08367538452148438
  - -0.09931230545043945
  - -0.10445070266723633
  - -0.10551214218139648
  - -0.10512018203735352
  - -0.13364377617835999
  - -0.11162877082824707
  - -0.10545015335083008
  - -0.09813451766967773
  - -0.10011482238769531
  - -0.10261917114257812
  - -0.1075582504272461
  - -0.1045379638671875
  - -0.8662052154541016
  - -0.10417318344116211
  - -0.10503101348876953
  - -0.10734272003173828
  - -0.10388755798339844
  - -0.10412216186523438
  - -0.10293340682983398
  - -0.10398387908935547
  - -0.10265827178955078
  - -0.10463714599609375
  - -0.10585260391235352
  - -0.10421180725097656
  - -0.05345257744193077
  - -0.11240291595458984
  - -0.10528898239135742
  - -0.09087371826171875
  - -0.36180591583251953
  - -0.09171724319458008
  - -0.10323667526245117
  - -0.10551023483276367
  - -0.10431718826293945
  - -0.1056833267211914
  - -0.07354863733053207
  - -0.11056089401245117
  - -0.10575532913208008
  - -0.1067500114440918
  - -0.09561491012573242
  - -0.10238409042358398
  - -0.10795402526855469
  - -0.10480380058288574
  - -0.09805679321289062
  - -0.10401296615600586
  - -0.11003875732421875
  - -0.10512542724609375
  - -0.10373687744140625
  - -3.4318299293518066
  - -0.09400033950805664
  - -0.10430526733398438
  - -0.1049966812133789
  - -0.10432767868041992
  - -0.11239778250455856
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Between')
  - ('Between', (True, True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
