db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/cars_data.csv
output: tests-examples/db2csv/car_1/tables/0060_dev.csv
raw_question: In 1980, how many cars were made? 
question_index: 146 
constants:
 - 1980
functions:
 - count
columns:
 - year
filters:
 - '='
comment: |-
  SELECT count(*)
  FROM CARS_DATA
  WHERE YEAR = 1980;

sql: |-
  SELECT count(*)
  FROM CARS_DATA
  WHERE YEAR = 1980;
smbop_beam_join_columns:
- []
- - id
  - makeid
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
smbop_beam_constants:
- - 1980
- - 1980
- - 1980
- - 1980
- - 1980
- - 1980
- - 1980
smbop_beam_functions:
- - count
- - count
- - count
- - count
- []
- - count
- []
smbop_beam_columns:
- - year
- - year
- - year
- - year
- []
- - year
- []
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - '='
- []
- - '>='
  - '>'
- []
smbop_beam_inferred_code:
  - SELECT COUNT( * ) FROM cars_data WHERE cars_data.year = 1980
  - SELECT COUNT( * ) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.year = 1980
  - SELECT COUNT( * ) FROM car_makers, cars_data WHERE cars_data.year = 1980
  - SELECT COUNT( * ) FROM model_list, cars_data WHERE cars_data.year = 1980
  - SELECT cars_data.year , 1980 FROM cars_data
  - SELECT COUNT( * ) FROM cars_data WHERE cars_data.year >= 1980
  - SELECT cars_data.year FROM cars_data
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( * ) FROM cars_data WHERE cars_data.year = 1980
  - SELECT COUNT( * ) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.year = 1980
  - SELECT COUNT( * ) FROM car_makers, cars_data WHERE cars_data.year = 1980
  - SELECT COUNT( * ) FROM model_list, cars_data WHERE cars_data.year = 1980
  - SELECT cars_data.year , 1980 FROM cars_data
  - SELECT COUNT( * ) FROM cars_data WHERE cars_data.year >= 1980
  - SELECT cars_data.year FROM cars_data
ratsql_beam_join_columns:
- []
- - id
  - makeid
- - id
  - makeid
- - model
  - country
  - countryid
  - id
  - maker
  - makeid
- - model
  - country
  - contid
  - continent
  - countryid
  - id
  - maker
  - makeid
- - model
  - id
  - makeid
- []
- []
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
ratsql_beam_constants:
- - 1980
- - 1980
- - 1980
- - 1980
- - 1980
- - 1980
- - 1980
- - 1980
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - year
- - year
- - year
  - make
- - year
- - year
- - year
- - year
- - year
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Count(*) FROM cars_data WHERE cars_data.Year = 'terminal'
  - SELECT Count(*) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal'
  - SELECT Count(DISTINCT car_names.Make) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal'
  - SELECT Count(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal'
  - SELECT Count(*) FROM cars_data WHERE DISTINCT cars_data.Year = 'terminal'
  - SELECT Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal'
  - SELECT Count(DISTINCT *) FROM cars_data WHERE cars_data.Year = 'terminal'
  - SELECT Count(*) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal'
  - SELECT Count(*) FROM cars_data WHERE cars_data.Year = 'terminal' LIMIT 1
  - SELECT DISTINCT Count(*) FROM cars_data WHERE cars_data.Year = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(*) FROM cars_data WHERE cars_data.Year = 1980
  - SELECT Count(*) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1980
  - SELECT Count(DISTINCT car_names.Make) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1980
  - SELECT Count(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1980
  - SELECT Count(*) FROM cars_data WHERE DISTINCT cars_data.Year = 1980
  - SELECT Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1980
  - SELECT Count(DISTINCT *) FROM cars_data WHERE cars_data.Year = 1980
  - SELECT Count(*) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1980
  - SELECT Count(*) FROM cars_data WHERE cars_data.Year = 1980 LIMIT 1
  - SELECT DISTINCT Count(*) FROM cars_data WHERE cars_data.Year = 1980
ratsql_beam_score_history:
- - -0.10396528244018555
  - -0.10460901260375977
  - -0.10648036003112793
  - -0.10361886024475098
  - -0.1006011962890625
  - -0.10293817520141602
  - -0.10801839828491211
  - -0.10169172286987305
  - -0.10539960861206055
  - -0.10451316833496094
  - -0.10569906234741211
  - -0.18243324756622314
  - -0.11069440841674805
  - -0.10528039932250977
  - -0.09960699081420898
  - -0.10322141647338867
  - -0.10213994979858398
  - -0.10114383697509766
  - -0.10474014282226562
  - -0.1048440933227539
  - -0.1057748794555664
  - -0.1277807056903839
  - -0.11239480972290039
  - -0.10520601272583008
  - -0.10478496551513672
  - -0.09895467758178711
  - -0.10268020629882812
  - -0.10758781433105469
  - -0.10456728935241699
  - -0.09804868698120117
  - -0.1036996841430664
  - -0.4256296157836914
  - -0.10537385940551758
  - -0.10338878631591797
  - -0.4510613679885864
- - -0.10396528244018555
  - -0.10460901260375977
  - -0.10648036003112793
  - -0.10361886024475098
  - -0.1006011962890625
  - -0.10293817520141602
  - -0.10801839828491211
  - -0.10169172286987305
  - -0.10539960861206055
  - -0.10451316833496094
  - -0.10569906234741211
  - -0.18243324756622314
  - -0.11069440841674805
  - -0.10528039932250977
  - -0.09960699081420898
  - -0.10322141647338867
  - -0.10213994979858398
  - -0.10114383697509766
  - -0.10474014282226562
  - -0.1048440933227539
  - -0.1057748794555664
  - -0.1277807056903839
  - -0.11239480972290039
  - -0.10520601272583008
  - -0.10478496551513672
  - -0.09895467758178711
  - -0.10268020629882812
  - -0.10758781433105469
  - -0.10456728935241699
  - -0.09804868698120117
  - -0.1036996841430664
  - -0.4256296157836914
  - -0.10537385940551758
  - -0.10338878631591797
  - -1.3214192390441895
- - -0.10396528244018555
  - -0.10460901260375977
  - -0.10648036003112793
  - -0.10361886024475098
  - -0.1006011962890625
  - -0.10293817520141602
  - -0.10801839828491211
  - -0.10169172286987305
  - -0.10539960861206055
  - -0.10451316833496094
  - -0.10569906234741211
  - -3.035949468612671
  - -0.09941434860229492
  - -0.10531783103942871
  - -0.09606790542602539
  - -0.10129356384277344
  - -0.10226249694824219
  - -0.10119867324829102
  - -0.10462760925292969
  - -0.10491085052490234
  - -0.10533332824707031
  - -0.11693793535232544
  - -0.11262011528015137
  - -0.10513186454772949
  - -0.10462093353271484
  - -0.0992426872253418
  - -0.10283946990966797
  - -0.10758161544799805
  - -0.10457849502563477
  - -0.09788703918457031
  - -0.10393047332763672
  - -0.47904491424560547
  - -0.10548210144042969
  - -0.10336112976074219
  - -0.46133190393447876
- - -0.10396528244018555
  - -0.10460901260375977
  - -0.10648036003112793
  - -0.10361886024475098
  - -0.1006011962890625
  - -0.10293817520141602
  - -0.10801839828491211
  - -0.10169172286987305
  - -0.10539960861206055
  - -0.10451316833496094
  - -0.10569906234741211
  - -0.18243324756622314
  - -0.11069440841674805
  - -0.10528039932250977
  - -0.09960699081420898
  - -0.10322141647338867
  - -0.10213994979858398
  - -0.10114383697509766
  - -0.10474014282226562
  - -0.1048440933227539
  - -0.1057748794555664
  - -0.1277807056903839
  - -0.11239480972290039
  - -0.10520601272583008
  - -0.10478496551513672
  - -0.09895467758178711
  - -0.10268020629882812
  - -0.10758781433105469
  - -0.10456728935241699
  - -0.09804868698120117
  - -0.1036996841430664
  - -0.4256296157836914
  - -0.10537385940551758
  - -0.10338878631591797
  - -3.599996566772461
- - -0.10396528244018555
  - -0.10460901260375977
  - -0.10648036003112793
  - -0.10361886024475098
  - -0.1006011962890625
  - -0.10293817520141602
  - -0.10801839828491211
  - -0.10169172286987305
  - -0.10539960861206055
  - -0.10451316833496094
  - -0.10569906234741211
  - -0.18243324756622314
  - -0.11069440841674805
  - -0.10528039932250977
  - -0.09960699081420898
  - -0.10322141647338867
  - -0.10213994979858398
  - -0.10114383697509766
  - -0.10474014282226562
  - -0.1048440933227539
  - -0.1057748794555664
  - -0.1277807056903839
  - -3.440390110015869
  - -0.10302495956420898
  - -0.10484123229980469
  - -0.0992593765258789
  - -0.10265827178955078
  - -0.10755300521850586
  - -0.10458064079284668
  - -0.09807491302490234
  - -0.1036067008972168
  - -0.3387479782104492
  - -0.10544395446777344
  - -0.10337543487548828
  - -0.44661176204681396
- - -0.10396528244018555
  - -0.10460901260375977
  - -0.10648036003112793
  - -0.10361886024475098
  - -0.1006011962890625
  - -0.10293817520141602
  - -0.10801839828491211
  - -0.10169172286987305
  - -0.10539960861206055
  - -0.10451316833496094
  - -0.10569906234741211
  - -0.18243324756622314
  - -0.11069440841674805
  - -0.10528039932250977
  - -0.09960699081420898
  - -0.10322141647338867
  - -0.10213994979858398
  - -0.10114383697509766
  - -0.10474014282226562
  - -0.1048440933227539
  - -0.1057748794555664
  - -0.1277807056903839
  - -0.11239480972290039
  - -0.10520601272583008
  - -0.10478496551513672
  - -0.09895467758178711
  - -0.10268020629882812
  - -0.10758781433105469
  - -0.10456728935241699
  - -0.09804868698120117
  - -0.1036996841430664
  - -0.4256296157836914
  - -0.10537385940551758
  - -0.10338878631591797
  - -3.6882705688476562
- - -0.10396528244018555
  - -0.10460901260375977
  - -0.10648036003112793
  - -0.10361886024475098
  - -0.1006011962890625
  - -0.10293817520141602
  - -0.10801839828491211
  - -0.10169172286987305
  - -0.10539960861206055
  - -0.10451316833496094
  - -0.10569906234741211
  - -0.18243324756622314
  - -3.4781811237335205
  - -0.10547375679016113
  - -0.09969663619995117
  - -0.10221719741821289
  - -0.1022195816040039
  - -0.10115623474121094
  - -0.10476446151733398
  - -0.1048879623413086
  - -0.10579252243041992
  - -0.12958300113677979
  - -0.11240530014038086
  - -0.10520195960998535
  - -0.10480499267578125
  - -0.0990133285522461
  - -0.1026768684387207
  - -0.10758519172668457
  - -0.10456657409667969
  - -0.09805011749267578
  - -0.10364723205566406
  - -0.33002710342407227
  - -0.10546016693115234
  - -0.1033782958984375
  - -0.44710105657577515
- - -0.10396528244018555
  - -0.10460901260375977
  - -0.10648036003112793
  - -0.10361886024475098
  - -0.1006011962890625
  - -0.10293817520141602
  - -0.10801839828491211
  - -0.10169172286987305
  - -0.10539960861206055
  - -0.10451316833496094
  - -0.10569906234741211
  - -0.18243324756622314
  - -0.11069440841674805
  - -0.10528039932250977
  - -0.09960699081420898
  - -0.10322141647338867
  - -0.10213994979858398
  - -0.10114383697509766
  - -0.10474014282226562
  - -0.1048440933227539
  - -0.1057748794555664
  - -0.1277807056903839
  - -0.11239480972290039
  - -0.10520601272583008
  - -0.10478496551513672
  - -0.09895467758178711
  - -0.10268020629882812
  - -0.10758781433105469
  - -0.10456728935241699
  - -0.09804868698120117
  - -0.1036996841430664
  - -0.4256296157836914
  - -0.10537385940551758
  - -0.10338878631591797
  - -3.720881462097168
- - -0.10396528244018555
  - -0.10460901260375977
  - -0.10648036003112793
  - -0.10361886024475098
  - -0.1006011962890625
  - -0.10293817520141602
  - -0.10801839828491211
  - -0.10169172286987305
  - -0.10539960861206055
  - -0.10451316833496094
  - -0.10569906234741211
  - -0.18243324756622314
  - -0.11069440841674805
  - -0.10528039932250977
  - -0.09960699081420898
  - -0.10322141647338867
  - -0.10213994979858398
  - -0.10114383697509766
  - -0.10474014282226562
  - -0.1048440933227539
  - -0.1057748794555664
  - -0.1277807056903839
  - -0.11239480972290039
  - -0.10520601272583008
  - -0.10478496551513672
  - -0.09895467758178711
  - -0.10268020629882812
  - -3.553833484649658
  - -0.10471940040588379
  - -0.09927988052368164
  - -0.10400247573852539
  - -0.37067174911499023
  - -0.1054835319519043
  - -0.103363037109375
  - -0.4466053545475006
- - -0.10396528244018555
  - -0.10460901260375977
  - -3.5622096061706543
  - -0.10372614860534668
  - -0.10042572021484375
  - -0.10267877578735352
  - -0.10795974731445312
  - -0.1017613410949707
  - -0.1055002212524414
  - -0.10454130172729492
  - -0.1057286262512207
  - -0.18343250453472137
  - -0.11066484451293945
  - -0.10526418685913086
  - -0.09986114501953125
  - -0.10280323028564453
  - -0.10230588912963867
  - -0.1011500358581543
  - -0.10473775863647461
  - -0.10484457015991211
  - -0.1057281494140625
  - -0.12718883156776428
  - -0.11240935325622559
  - -0.10521197319030762
  - -0.1047811508178711
  - -0.09894227981567383
  - -0.10267972946166992
  - -0.10758733749389648
  - -0.10456514358520508
  - -0.09805059432983398
  - -0.10370254516601562
  - -0.4190196990966797
  - -0.10537385940551758
  - -0.10338783264160156
  - -0.45096319913864136
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
