db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/countries.csv
 - tests-examples/db2csv/car_1/tables/model_list.csv
 - tests-examples/db2csv/car_1/tables/car_makers.csv
output: tests-examples/db2csv/car_1/tables/0092_dev.csv
raw_question: What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ? 
question_index: 178 
constants:
 - fiat
 - 3
join_columns:
 - country
 - maker
 - id
 - countryid
groupby_columns:
 - countryid
functions:
 - count
columns:
 - model
filters:
 - '='
ieu:
 - union
comment: |-
  select t1.countryid,
         t1.countryname
  from countries as t1
  join car_makers as t2 on t1.countryid = t2.country
  group by t1.countryid
  having count(*) > 3
  union
  select t1.countryid,
         t1.countryname
  from countries as t1
  join car_makers as t2 on t1.countryid = t2.country
  join model_list as t3 on t2.id = t3.maker
  where t3.model = 'fiat';

sql: |-
  select t1.countryid,
         t1.countryname
  from countries as t1
  join car_makers as t2 on t1.countryid = t2.country
  group by t1.countryid
  having count(*) > 3
  union
  select t1.countryid,
         t1.countryname
  from countries as t1
  join car_makers as t2 on t1.countryid = t2.country
  join model_list as t3 on t2.id = t3.maker
  where t3.model = 'fiat';
smbop_beam_join_columns:
- - maker
  - countryid
smbop_beam_groupby_columns:
- - countryid
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
smbop_beam_constants:
- - fiat
  - 3
  - capri
  - hi
smbop_beam_functions:
- - count
smbop_beam_columns:
- []
smbop_beam_ieu:
- []
smbop_beam_filters:
- []
smbop_beam_inferred_code:
  - SELECT countries.countryid , countries.countryname FROM countries JOIN model_list ON countries.countryid = model_list.maker GROUP BY countries.countryid HAVING COUNT( * ) > 3
smbop_beam_inferred_code_w_terminals:
  - SELECT countries.countryid , countries.countryname FROM countries JOIN model_list ON countries.countryid = model_list.maker GROUP BY countries.countryid HAVING COUNT( * ) > 3
ratsql_beam_join_columns:
- - country
  - countryid
- - country
  - maker
  - id
  - countryid
- - country
  - maker
  - id
  - countryid
- - country
  - maker
  - id
  - countryid
- - country
  - countryid
- - country
  - maker
  - id
  - countryid
- - country
  - maker
  - id
  - countryid
- - model
  - country
  - countryid
  - id
  - maker
- - model
  - country
  - countryid
  - id
  - maker
- - model
  - country
  - countryid
  - id
  - maker
ratsql_beam_groupby_columns:
- - id
- - id
- - id
- - id
- - id
- - id
- - id
- - id
- - id
- - id
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
ratsql_beam_constants:
- - fiat
  - 3
  - capri
  - hi
- - fiat
  - 3
  - capri
  - hi
- - fiat
  - 3
  - capri
  - hi
- - fiat
  - 3
  - capri
  - hi
- - fiat
  - 3
  - capri
  - hi
- - fiat
  - 3
  - capri
  - hi
- - fiat
  - 3
  - capri
  - hi
- - fiat
  - 3
  - capri
  - hi
- - fiat
  - 3
  - capri
  - hi
- - fiat
  - 3
  - capri
  - hi
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - maker
- - model
  - maker
- - model
  - maker
- - model
- - maker
- - model
  - maker
- - model
  - maker
- - maker
  - make
- - maker
- - maker
  - make
ratsql_beam_ieu:
- - union
- - union
- - union
- - union
- - union
- - union
- - union
- - union
- - union
- - union
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = 'terminal' GROUP BY car_makers.Id HAVING Count(*) > 'terminal' UNION SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = 'terminal'
  - SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker WHERE model_list.Model = 'terminal' GROUP BY car_makers.Id HAVING Count(*) > 'terminal' UNION SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = 'terminal'
  - SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = 'terminal' GROUP BY car_makers.Id HAVING Count(*) > 'terminal' UNION SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker WHERE model_list.Model = 'terminal'
  - SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker WHERE model_list.Model = 'terminal' GROUP BY car_makers.Id HAVING Count(*) > 'terminal' UNION SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker WHERE model_list.Model = 'terminal'
  - SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = 'terminal' GROUP BY car_makers.Id HAVING Count(*) > 'terminal' UNION SELECT car_makers.Country, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = 'terminal'
  - SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = 'terminal' GROUP BY car_makers.Id HAVING Count(*) > 'terminal' UNION SELECT car_makers.Country, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker WHERE model_list.Model = 'terminal'
  - SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker WHERE model_list.Model = 'terminal' GROUP BY car_makers.Id HAVING Count(*) > 'terminal' UNION SELECT car_makers.Country, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = 'terminal'
  - SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Make = 'terminal' GROUP BY car_makers.Id HAVING Count(*) > 'terminal' UNION SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = 'terminal'
  - SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = 'terminal' GROUP BY car_makers.Id HAVING Count(*) > 'terminal' UNION SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_makers.Maker = 'terminal'
  - SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = 'terminal' GROUP BY car_makers.Id HAVING Count(*) > 'terminal' UNION SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_names.Make = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - 
  - 
  - 
  - SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker WHERE model_list.Model = 'capri' GROUP BY car_makers.Id HAVING Count(*) > 3 UNION SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker WHERE model_list.Model = 'hi'
  - 
  - 
  - 
  - 
  - 
  - 
ratsql_beam_score_history:
- - -0.10365056991577148
  - -0.10501909255981445
  - -0.10412120819091797
  - -0.10448408126831055
  - -0.12532329559326172
  - -0.1037139892578125
  - -0.10518836975097656
  - -0.10146045684814453
  - -0.10409212112426758
  - -0.10601425170898438
  - -0.10500001907348633
  - -0.17576509714126587
  - -0.11119747161865234
  - -0.10509705543518066
  - -0.1019902229309082
  - -0.10572052001953125
  - -0.1024789810180664
  - -0.10521364212036133
  - -0.10480642318725586
  - -0.10670089721679688
  - -0.06551520526409149
  - -0.11222434043884277
  - -0.10516357421875
  - -0.10313177108764648
  - -0.10745954513549805
  - -0.10143089294433594
  - -0.1017603874206543
  - -0.10496282577514648
  - -0.10378313064575195
  - -0.1046295166015625
  - -0.701717734336853
  - -0.11213517189025879
  - -0.10562849044799805
  - -0.10643482208251953
  - -0.40512704849243164
  - -0.11415386199951172
  - -0.10414981842041016
  - -0.10256481170654297
  - -0.33239102363586426
  - -0.11115574836730957
  - -0.10524654388427734
  - -0.07467126846313477
  - -0.09478187561035156
  - -0.1020193099975586
  - -0.10444355010986328
  - -0.10451555252075195
  - -0.11123037338256836
  - -0.11284332722425461
  - -0.11055564880371094
  - -0.10584616661071777
  - -0.10300636291503906
  - -0.08957481384277344
  - -0.10741186141967773
  - -0.1051323413848877
  - -0.0905308723449707
  - -0.10130786895751953
  - -0.10413885116577148
  - -0.10990595817565918
  - -0.10385942459106445
  - -0.1246495246887207
  - -0.10365724563598633
  - -0.10548067092895508
  - -0.10114479064941406
  - -0.10440587997436523
  - -0.10587406158447266
  - -0.10569238662719727
  - -0.6574695110321045
  - -0.11148810386657715
  - -0.10521173477172852
  - -0.10210371017456055
  - -0.10580778121948242
  - -0.10266256332397461
  - -0.10553169250488281
  - -0.10625123977661133
  - -0.10758495330810547
  - -0.0714585930109024
  - -0.11328125
  - -0.10541462898254395
  - -0.08417654037475586
  - -0.1010284423828125
  - -0.10056686401367188
  - -0.10216426849365234
  - -0.10586404800415039
  - -0.10528182983398438
  - -0.10446739196777344
  - -0.6660856604576111
  - -0.11135697364807129
  - -0.10613250732421875
  - -0.10687637329101562
  - -1.376417636871338
  - -0.09953165054321289
  - -0.10806751251220703
  - -0.10526442527770996
  - -0.09568023681640625
  - -0.1057438850402832
  - -0.11336565017700195
  - -0.1045980453491211
  - -0.10499429702758789
  - -0.1476341187953949
  - -0.10477495193481445
  - -0.10484600067138672
  - -0.3310023546218872
  - -0.09389019012451172
  - -0.10681343078613281
  - -0.10483121871948242
  - -0.10457181930541992
  - -0.15350711345672607
  - -0.1049661636352539
  - -0.10411691665649414
  - -0.2764553427696228
- - -0.10365056991577148
  - -0.10501909255981445
  - -0.10412120819091797
  - -0.10448408126831055
  - -0.12532329559326172
  - -0.1037139892578125
  - -0.10518836975097656
  - -0.10146045684814453
  - -0.10409212112426758
  - -0.10601425170898438
  - -0.10500001907348633
  - -0.17576509714126587
  - -0.11119747161865234
  - -0.10509705543518066
  - -0.1019902229309082
  - -0.10572052001953125
  - -0.1024789810180664
  - -0.10521364212036133
  - -0.10480642318725586
  - -0.10670089721679688
  - -0.06551520526409149
  - -0.11222434043884277
  - -0.10516357421875
  - -0.10313177108764648
  - -0.10745954513549805
  - -0.10143089294433594
  - -0.1017603874206543
  - -0.10496282577514648
  - -0.10378313064575195
  - -0.1046295166015625
  - -1.3174891471862793
  - -0.1112983226776123
  - -0.10578608512878418
  - -0.10527944564819336
  - -0.27750682830810547
  - -0.11059761047363281
  - -0.10253572463989258
  - -0.10312843322753906
  - -0.3652803897857666
  - -0.11058330535888672
  - -0.10519742965698242
  - -0.07475996017456055
  - -0.0949406623840332
  - -0.1020512580871582
  - -0.10446786880493164
  - -0.10421037673950195
  - -0.11086511611938477
  - -0.10466144233942032
  - -0.11062264442443848
  - -0.10582542419433594
  - -0.1026616096496582
  - -0.09137964248657227
  - -0.10743021965026855
  - -0.10513544082641602
  - -0.08604001998901367
  - -0.10104846954345703
  - -0.10433053970336914
  - -0.10984301567077637
  - -0.10387372970581055
  - -0.12412881851196289
  - -0.10330677032470703
  - -0.10545825958251953
  - -0.10088920593261719
  - -0.10438728332519531
  - -0.10584068298339844
  - -0.10573005676269531
  - -0.6571676135063171
  - -0.1114952564239502
  - -0.10521626472473145
  - -0.10210275650024414
  - -0.10587882995605469
  - -0.10265827178955078
  - -0.10554122924804688
  - -0.10619354248046875
  - -0.10758447647094727
  - -0.07176198810338974
  - -0.1132664680480957
  - -0.10541343688964844
  - -0.0841217041015625
  - -0.10105752944946289
  - -0.1005711555480957
  - -0.10217046737670898
  - -0.10584497451782227
  - -0.10527563095092773
  - -0.10463190078735352
  - -0.6645853519439697
  - -0.11134934425354004
  - -0.10612964630126953
  - -0.10686063766479492
  - -1.3042330741882324
  - -0.0994420051574707
  - -0.1080329418182373
  - -0.10526871681213379
  - -0.09596967697143555
  - -0.10571622848510742
  - -0.1131601333618164
  - -0.10460281372070312
  - -0.10499000549316406
  - -0.14773161709308624
  - -0.10476160049438477
  - -0.10486459732055664
  - -0.3320324718952179
  - -0.09369802474975586
  - -0.10684871673583984
  - -0.10483217239379883
  - -0.10457038879394531
  - -0.15347909927368164
  - -0.10497140884399414
  - -0.1041712760925293
  - -0.2776417136192322
- - -0.10365056991577148
  - -0.10501909255981445
  - -0.10412120819091797
  - -0.10448408126831055
  - -0.12532329559326172
  - -0.1037139892578125
  - -0.10518836975097656
  - -0.10146045684814453
  - -0.10409212112426758
  - -0.10601425170898438
  - -0.10500001907348633
  - -0.17576509714126587
  - -0.11119747161865234
  - -0.10509705543518066
  - -0.1019902229309082
  - -0.10572052001953125
  - -0.1024789810180664
  - -0.10521364212036133
  - -0.10480642318725586
  - -0.10670089721679688
  - -0.06551520526409149
  - -0.11222434043884277
  - -0.10516357421875
  - -0.10313177108764648
  - -0.10745954513549805
  - -0.10143089294433594
  - -0.1017603874206543
  - -0.10496282577514648
  - -0.10378313064575195
  - -0.1046295166015625
  - -0.701717734336853
  - -0.11213517189025879
  - -0.10562849044799805
  - -0.10643482208251953
  - -0.40512704849243164
  - -0.11415386199951172
  - -0.10414981842041016
  - -0.10256481170654297
  - -0.33239102363586426
  - -0.11115574836730957
  - -0.10524654388427734
  - -0.07467126846313477
  - -0.09478187561035156
  - -0.1020193099975586
  - -0.10444355010986328
  - -0.10451555252075195
  - -0.11123037338256836
  - -0.11284332722425461
  - -0.11055564880371094
  - -0.10584616661071777
  - -0.10300636291503906
  - -0.08957481384277344
  - -0.10741186141967773
  - -0.1051323413848877
  - -0.0905308723449707
  - -0.10130786895751953
  - -0.10413885116577148
  - -0.10990595817565918
  - -0.10385942459106445
  - -0.1246495246887207
  - -0.10365724563598633
  - -0.10548067092895508
  - -0.10114479064941406
  - -0.10440587997436523
  - -0.10587406158447266
  - -0.10569238662719727
  - -0.6574695110321045
  - -0.11148810386657715
  - -0.10521173477172852
  - -0.10210371017456055
  - -0.10580778121948242
  - -0.10266256332397461
  - -0.10553169250488281
  - -0.10625123977661133
  - -0.10758495330810547
  - -0.0714585930109024
  - -0.11328125
  - -0.10541462898254395
  - -0.08417654037475586
  - -0.1010284423828125
  - -0.10056686401367188
  - -0.10216426849365234
  - -0.10586404800415039
  - -0.10528182983398438
  - -0.10446739196777344
  - -1.287093997001648
  - -0.11156392097473145
  - -0.10634112358093262
  - -0.10386848449707031
  - -1.1944737434387207
  - -0.0982980728149414
  - -0.10795426368713379
  - -0.10522818565368652
  - -0.09783601760864258
  - -0.10575723648071289
  - -0.11316347122192383
  - -0.10465097427368164
  - -0.10442066192626953
  - -0.14549343287944794
  - -0.10468053817749023
  - -0.10486316680908203
  - -0.3286111354827881
  - -0.09394645690917969
  - -0.10698652267456055
  - -0.10480833053588867
  - -0.10460281372070312
  - -0.15239346027374268
  - -0.10493993759155273
  - -0.10419654846191406
  - -0.27653318643569946
- - -0.10365056991577148
  - -0.10501909255981445
  - -0.10412120819091797
  - -0.10448408126831055
  - -0.12532329559326172
  - -0.1037139892578125
  - -0.10518836975097656
  - -0.10146045684814453
  - -0.10409212112426758
  - -0.10601425170898438
  - -0.10500001907348633
  - -0.17576509714126587
  - -0.11119747161865234
  - -0.10509705543518066
  - -0.1019902229309082
  - -0.10572052001953125
  - -0.1024789810180664
  - -0.10521364212036133
  - -0.10480642318725586
  - -0.10670089721679688
  - -0.06551520526409149
  - -0.11222434043884277
  - -0.10516357421875
  - -0.10313177108764648
  - -0.10745954513549805
  - -0.10143089294433594
  - -0.1017603874206543
  - -0.10496282577514648
  - -0.10378313064575195
  - -0.1046295166015625
  - -1.3174891471862793
  - -0.1112983226776123
  - -0.10578608512878418
  - -0.10527944564819336
  - -0.27750682830810547
  - -0.11059761047363281
  - -0.10253572463989258
  - -0.10312843322753906
  - -0.3652803897857666
  - -0.11058330535888672
  - -0.10519742965698242
  - -0.07475996017456055
  - -0.0949406623840332
  - -0.1020512580871582
  - -0.10446786880493164
  - -0.10421037673950195
  - -0.11086511611938477
  - -0.10466144233942032
  - -0.11062264442443848
  - -0.10582542419433594
  - -0.1026616096496582
  - -0.09137964248657227
  - -0.10743021965026855
  - -0.10513544082641602
  - -0.08604001998901367
  - -0.10104846954345703
  - -0.10433053970336914
  - -0.10984301567077637
  - -0.10387372970581055
  - -0.12412881851196289
  - -0.10330677032470703
  - -0.10545825958251953
  - -0.10088920593261719
  - -0.10438728332519531
  - -0.10584068298339844
  - -0.10573005676269531
  - -0.6571676135063171
  - -0.1114952564239502
  - -0.10521626472473145
  - -0.10210275650024414
  - -0.10587882995605469
  - -0.10265827178955078
  - -0.10554122924804688
  - -0.10619354248046875
  - -0.10758447647094727
  - -0.07176198810338974
  - -0.1132664680480957
  - -0.10541343688964844
  - -0.0841217041015625
  - -0.10105752944946289
  - -0.1005711555480957
  - -0.10217046737670898
  - -0.10584497451782227
  - -0.10527563095092773
  - -0.10463190078735352
  - -1.2858095169067383
  - -0.11157536506652832
  - -0.10637021064758301
  - -0.10385274887084961
  - -1.1732406616210938
  - -0.09805154800415039
  - -0.10789966583251953
  - -0.1052405834197998
  - -0.09801816940307617
  - -0.10576009750366211
  - -0.11280298233032227
  - -0.104644775390625
  - -0.10442972183227539
  - -0.1457224190235138
  - -0.10468149185180664
  - -0.10489082336425781
  - -0.3285435140132904
  - -0.0939030647277832
  - -0.10695600509643555
  - -0.10481023788452148
  - -0.10460662841796875
  - -0.15245158970355988
  - -0.10494089126586914
  - -0.10420083999633789
  - -0.2771572768688202
- - -0.10365056991577148
  - -0.10501909255981445
  - -0.10412120819091797
  - -0.10448408126831055
  - -0.12532329559326172
  - -0.1037139892578125
  - -0.10518836975097656
  - -0.10146045684814453
  - -0.10409212112426758
  - -0.10601425170898438
  - -0.10500001907348633
  - -0.17576509714126587
  - -0.11119747161865234
  - -0.10509705543518066
  - -0.1019902229309082
  - -0.10572052001953125
  - -0.1024789810180664
  - -0.10521364212036133
  - -0.10480642318725586
  - -0.10670089721679688
  - -0.06551520526409149
  - -0.11222434043884277
  - -0.10516357421875
  - -0.10313177108764648
  - -0.10745954513549805
  - -0.10143089294433594
  - -0.1017603874206543
  - -0.10496282577514648
  - -0.10378313064575195
  - -0.1046295166015625
  - -0.701717734336853
  - -0.11213517189025879
  - -0.10562849044799805
  - -0.10643482208251953
  - -0.40512704849243164
  - -0.11415386199951172
  - -0.10414981842041016
  - -0.10256481170654297
  - -0.33239102363586426
  - -0.11115574836730957
  - -0.10524654388427734
  - -0.07467126846313477
  - -0.09478187561035156
  - -0.1020193099975586
  - -0.10444355010986328
  - -0.10451555252075195
  - -0.11123037338256836
  - -0.11284332722425461
  - -0.11055564880371094
  - -0.10584616661071777
  - -0.10300636291503906
  - -0.08957481384277344
  - -0.10741186141967773
  - -0.1051323413848877
  - -0.0905308723449707
  - -0.10130786895751953
  - -0.10413885116577148
  - -0.10990595817565918
  - -0.10385942459106445
  - -0.1246495246887207
  - -0.10365724563598633
  - -0.10548067092895508
  - -0.10114479064941406
  - -0.10440587997436523
  - -0.10587406158447266
  - -0.10569238662719727
  - -1.504013180732727
  - -0.1111915111541748
  - -0.10591530799865723
  - -0.10258340835571289
  - -0.10683488845825195
  - -0.10338115692138672
  - -0.10586833953857422
  - -0.10572052001953125
  - -0.10724353790283203
  - -0.11225320398807526
  - -0.11286163330078125
  - -0.10526680946350098
  - -0.08511161804199219
  - -0.10103178024291992
  - -0.10096168518066406
  - -0.10258626937866211
  - -0.10529613494873047
  - -0.10517263412475586
  - -0.10683441162109375
  - -0.65589439868927
  - -0.11111664772033691
  - -0.10608482360839844
  - -0.10790872573852539
  - -1.4420123100280762
  - -0.09985971450805664
  - -0.10802221298217773
  - -0.10527610778808594
  - -0.09518289566040039
  - -0.10570192337036133
  - -0.11352920532226562
  - -0.10459089279174805
  - -0.1050262451171875
  - -0.14754535257816315
  - -0.10476493835449219
  - -0.10485029220581055
  - -0.329975962638855
  - -0.09398651123046875
  - -0.10678482055664062
  - -0.10482978820800781
  - -0.10457038879394531
  - -0.15345221757888794
  - -0.10496091842651367
  - -0.10410118103027344
  - -0.27596065402030945
- - -0.10365056991577148
  - -0.10501909255981445
  - -0.10412120819091797
  - -0.10448408126831055
  - -0.12532329559326172
  - -0.1037139892578125
  - -0.10518836975097656
  - -0.10146045684814453
  - -0.10409212112426758
  - -0.10601425170898438
  - -0.10500001907348633
  - -0.17576509714126587
  - -0.11119747161865234
  - -0.10509705543518066
  - -0.1019902229309082
  - -0.10572052001953125
  - -0.1024789810180664
  - -0.10521364212036133
  - -0.10480642318725586
  - -0.10670089721679688
  - -0.06551520526409149
  - -0.11222434043884277
  - -0.10516357421875
  - -0.10313177108764648
  - -0.10745954513549805
  - -0.10143089294433594
  - -0.1017603874206543
  - -0.10496282577514648
  - -0.10378313064575195
  - -0.1046295166015625
  - -0.701717734336853
  - -0.11213517189025879
  - -0.10562849044799805
  - -0.10643482208251953
  - -0.40512704849243164
  - -0.11415386199951172
  - -0.10414981842041016
  - -0.10256481170654297
  - -0.33239102363586426
  - -0.11115574836730957
  - -0.10524654388427734
  - -0.07467126846313477
  - -0.09478187561035156
  - -0.1020193099975586
  - -0.10444355010986328
  - -0.10451555252075195
  - -0.11123037338256836
  - -0.11284332722425461
  - -0.11055564880371094
  - -0.10584616661071777
  - -0.10300636291503906
  - -0.08957481384277344
  - -0.10741186141967773
  - -0.1051323413848877
  - -0.0905308723449707
  - -0.10130786895751953
  - -0.10413885116577148
  - -0.10990595817565918
  - -0.10385942459106445
  - -0.1246495246887207
  - -0.10365724563598633
  - -0.10548067092895508
  - -0.10114479064941406
  - -0.10440587997436523
  - -0.10587406158447266
  - -0.10569238662719727
  - -1.504013180732727
  - -0.1111915111541748
  - -0.10591530799865723
  - -0.10258340835571289
  - -0.10683488845825195
  - -0.10338115692138672
  - -0.10586833953857422
  - -0.10572052001953125
  - -0.10724353790283203
  - -0.11225320398807526
  - -0.11286163330078125
  - -0.10526680946350098
  - -0.08511161804199219
  - -0.10103178024291992
  - -0.10096168518066406
  - -0.10258626937866211
  - -0.10529613494873047
  - -0.10517263412475586
  - -0.10683441162109375
  - -1.2806248664855957
  - -0.11150479316711426
  - -0.10617232322692871
  - -0.10396051406860352
  - -1.1935033798217773
  - -0.09825515747070312
  - -0.10774350166320801
  - -0.10518670082092285
  - -0.09775352478027344
  - -0.10596609115600586
  - -0.1125483512878418
  - -0.10465478897094727
  - -0.10443878173828125
  - -0.14658349752426147
  - -0.10464000701904297
  - -0.10490703582763672
  - -0.3290010392665863
  - -0.09370183944702148
  - -0.10679769515991211
  - -0.10480976104736328
  - -0.10459566116333008
  - -0.15245835483074188
  - -0.10494613647460938
  - -0.1041860580444336
  - -0.27547013759613037
- - -0.10365056991577148
  - -0.10501909255981445
  - -0.10412120819091797
  - -0.10448408126831055
  - -0.12532329559326172
  - -0.1037139892578125
  - -0.10518836975097656
  - -0.10146045684814453
  - -0.10409212112426758
  - -0.10601425170898438
  - -0.10500001907348633
  - -0.17576509714126587
  - -0.11119747161865234
  - -0.10509705543518066
  - -0.1019902229309082
  - -0.10572052001953125
  - -0.1024789810180664
  - -0.10521364212036133
  - -0.10480642318725586
  - -0.10670089721679688
  - -0.06551520526409149
  - -0.11222434043884277
  - -0.10516357421875
  - -0.10313177108764648
  - -0.10745954513549805
  - -0.10143089294433594
  - -0.1017603874206543
  - -0.10496282577514648
  - -0.10378313064575195
  - -0.1046295166015625
  - -1.3174891471862793
  - -0.1112983226776123
  - -0.10578608512878418
  - -0.10527944564819336
  - -0.27750682830810547
  - -0.11059761047363281
  - -0.10253572463989258
  - -0.10312843322753906
  - -0.3652803897857666
  - -0.11058330535888672
  - -0.10519742965698242
  - -0.07475996017456055
  - -0.0949406623840332
  - -0.1020512580871582
  - -0.10446786880493164
  - -0.10421037673950195
  - -0.11086511611938477
  - -0.10466144233942032
  - -0.11062264442443848
  - -0.10582542419433594
  - -0.1026616096496582
  - -0.09137964248657227
  - -0.10743021965026855
  - -0.10513544082641602
  - -0.08604001998901367
  - -0.10104846954345703
  - -0.10433053970336914
  - -0.10984301567077637
  - -0.10387372970581055
  - -0.12412881851196289
  - -0.10330677032470703
  - -0.10545825958251953
  - -0.10088920593261719
  - -0.10438728332519531
  - -0.10584068298339844
  - -0.10573005676269531
  - -1.509295105934143
  - -0.11119461059570312
  - -0.10592031478881836
  - -0.10255241394042969
  - -0.10697412490844727
  - -0.10336446762084961
  - -0.10586309432983398
  - -0.10570144653320312
  - -0.10724020004272461
  - -0.11308491975069046
  - -0.1128544807434082
  - -0.10526323318481445
  - -0.08506059646606445
  - -0.1010594367980957
  - -0.10096168518066406
  - -0.10258913040161133
  - -0.10529232025146484
  - -0.10517215728759766
  - -0.10697555541992188
  - -0.6551797986030579
  - -0.11109805107116699
  - -0.10608029365539551
  - -0.10789012908935547
  - -1.374830722808838
  - -0.09976673126220703
  - -0.10798192024230957
  - -0.10528135299682617
  - -0.09539079666137695
  - -0.10567426681518555
  - -0.11325883865356445
  - -0.10459566116333008
  - -0.10502243041992188
  - -0.14762085676193237
  - -0.10474920272827148
  - -0.1048731803894043
  - -0.33130478858947754
  - -0.09371614456176758
  - -0.10682106018066406
  - -0.10483121871948242
  - -0.1045689582824707
  - -0.15342971682548523
  - -0.1049661636352539
  - -0.10416650772094727
  - -0.27735745906829834
- - -0.10365056991577148
  - -0.10501909255981445
  - -0.10412120819091797
  - -0.10448408126831055
  - -0.12532329559326172
  - -0.1037139892578125
  - -0.10518836975097656
  - -0.10146045684814453
  - -0.10409212112426758
  - -0.10601425170898438
  - -0.10500001907348633
  - -0.17576509714126587
  - -0.11119747161865234
  - -0.10509705543518066
  - -0.1019902229309082
  - -0.10572052001953125
  - -0.1024789810180664
  - -0.10521364212036133
  - -0.10480642318725586
  - -0.10670089721679688
  - -0.06551520526409149
  - -0.11222434043884277
  - -0.10516357421875
  - -0.10313177108764648
  - -0.10745954513549805
  - -0.10143089294433594
  - -0.1017603874206543
  - -0.10496282577514648
  - -0.10378313064575195
  - -0.1046295166015625
  - -2.2674334049224854
  - -0.11166524887084961
  - -0.10577511787414551
  - -0.1072545051574707
  - -0.329892635345459
  - -0.11248540878295898
  - -0.10278177261352539
  - -0.10285425186157227
  - -0.367625892162323
  - -0.11054801940917969
  - -0.10520434379577637
  - -0.07579183578491211
  - -0.0949258804321289
  - -0.10204267501831055
  - -0.10445547103881836
  - -0.10411739349365234
  - -0.11115884780883789
  - -0.10974610596895218
  - -0.11061763763427734
  - -0.10583806037902832
  - -0.10263586044311523
  - -0.08924198150634766
  - -0.10739588737487793
  - -0.1051177978515625
  - -0.08892202377319336
  - -0.10110664367675781
  - -0.1041879653930664
  - -0.10992002487182617
  - -0.10385847091674805
  - -0.12421226501464844
  - -0.10331392288208008
  - -0.10545539855957031
  - -0.1009373664855957
  - -0.1043853759765625
  - -0.10584354400634766
  - -0.10572338104248047
  - -0.657001793384552
  - -0.11149787902832031
  - -0.10521459579467773
  - -0.10208797454833984
  - -0.10584592819213867
  - -0.10267114639282227
  - -0.10553932189941406
  - -0.106231689453125
  - -0.10758161544799805
  - -0.07211387157440186
  - -0.1132810115814209
  - -0.10541725158691406
  - -0.08413410186767578
  - -0.1010751724243164
  - -0.1005697250366211
  - -0.10216903686523438
  - -0.1058650016784668
  - -0.10528755187988281
  - -0.1045684814453125
  - -0.6653012037277222
  - -0.11134910583496094
  - -0.10613012313842773
  - -0.10685491561889648
  - -1.3059229850769043
  - -0.0994877815246582
  - -0.10803699493408203
  - -0.10526752471923828
  - -0.09598684310913086
  - -0.10573577880859375
  - -0.11311674118041992
  - -0.10459613800048828
  - -0.10497808456420898
  - -0.14753733575344086
  - -0.10475873947143555
  - -0.10486030578613281
  - -0.33225807547569275
  - -0.09368610382080078
  - -0.10686635971069336
  - -0.10483169555664062
  - -0.10456514358520508
  - -0.15345211327075958
  - -0.10497140884399414
  - -0.1041727066040039
  - -0.2776119112968445
- - -0.10365056991577148
  - -0.10501909255981445
  - -0.10412120819091797
  - -0.10448408126831055
  - -0.12532329559326172
  - -0.1037139892578125
  - -0.10518836975097656
  - -0.10146045684814453
  - -0.10409212112426758
  - -0.10601425170898438
  - -0.10500001907348633
  - -0.17576509714126587
  - -0.11119747161865234
  - -0.10509705543518066
  - -0.1019902229309082
  - -0.10572052001953125
  - -0.1024789810180664
  - -0.10521364212036133
  - -0.10480642318725586
  - -0.10670089721679688
  - -0.06551520526409149
  - -0.11222434043884277
  - -0.10516357421875
  - -0.10313177108764648
  - -0.10745954513549805
  - -0.10143089294433594
  - -0.1017603874206543
  - -0.10496282577514648
  - -0.10378313064575195
  - -0.1046295166015625
  - -0.701717734336853
  - -0.11213517189025879
  - -0.10562849044799805
  - -0.10643482208251953
  - -0.40512704849243164
  - -0.11415386199951172
  - -0.10414981842041016
  - -0.10256481170654297
  - -0.33239102363586426
  - -0.11115574836730957
  - -0.10524654388427734
  - -0.07467126846313477
  - -0.09478187561035156
  - -0.1020193099975586
  - -0.10444355010986328
  - -0.10451555252075195
  - -0.11123037338256836
  - -0.11284332722425461
  - -0.11055564880371094
  - -0.10584616661071777
  - -0.10300636291503906
  - -0.08957481384277344
  - -0.10741186141967773
  - -0.1051323413848877
  - -0.0905308723449707
  - -0.10130786895751953
  - -0.10413885116577148
  - -0.10990595817565918
  - -0.10385942459106445
  - -0.1246495246887207
  - -0.10365724563598633
  - -0.10548067092895508
  - -0.10114479064941406
  - -0.10440587997436523
  - -0.10587406158447266
  - -0.10569238662719727
  - -0.6574695110321045
  - -0.11148810386657715
  - -0.10521173477172852
  - -0.10210371017456055
  - -0.10580778121948242
  - -0.10266256332397461
  - -0.10553169250488281
  - -0.10625123977661133
  - -0.10758495330810547
  - -0.0714585930109024
  - -0.11328125
  - -0.10541462898254395
  - -0.08417654037475586
  - -0.1010284423828125
  - -0.10056686401367188
  - -0.10216426849365234
  - -0.10586404800415039
  - -0.10528182983398438
  - -0.10446739196777344
  - -0.6660856604576111
  - -0.11135697364807129
  - -0.10613250732421875
  - -0.10687637329101562
  - -1.376417636871338
  - -0.09953165054321289
  - -0.10806751251220703
  - -0.10526442527770996
  - -0.09568023681640625
  - -0.1057438850402832
  - -0.11336565017700195
  - -0.1045980453491211
  - -0.10499429702758789
  - -0.1476341187953949
  - -0.10477495193481445
  - -0.10484600067138672
  - -2.022822856903076
  - -0.08733844757080078
  - -0.10986757278442383
  - -0.10483646392822266
  - -0.10560750961303711
  - -0.14998091757297516
  - -0.10506343841552734
  - -0.1045846939086914
  - -0.2508411705493927
- - -0.10365056991577148
  - -0.10501909255981445
  - -0.10412120819091797
  - -0.10448408126831055
  - -0.12532329559326172
  - -0.1037139892578125
  - -0.10518836975097656
  - -0.10146045684814453
  - -0.10409212112426758
  - -0.10601425170898438
  - -0.10500001907348633
  - -0.17576509714126587
  - -0.11119747161865234
  - -0.10509705543518066
  - -0.1019902229309082
  - -0.10572052001953125
  - -0.1024789810180664
  - -0.10521364212036133
  - -0.10480642318725586
  - -0.10670089721679688
  - -0.06551520526409149
  - -0.11222434043884277
  - -0.10516357421875
  - -0.10313177108764648
  - -0.10745954513549805
  - -0.10143089294433594
  - -0.1017603874206543
  - -0.10496282577514648
  - -0.10378313064575195
  - -0.1046295166015625
  - -0.701717734336853
  - -0.11213517189025879
  - -0.10562849044799805
  - -0.10643482208251953
  - -0.40512704849243164
  - -0.11415386199951172
  - -0.10414981842041016
  - -0.10256481170654297
  - -0.33239102363586426
  - -0.11115574836730957
  - -0.10524654388427734
  - -0.07467126846313477
  - -0.09478187561035156
  - -0.1020193099975586
  - -0.10444355010986328
  - -0.10451555252075195
  - -0.11123037338256836
  - -0.11284332722425461
  - -0.11055564880371094
  - -0.10584616661071777
  - -0.10300636291503906
  - -0.08957481384277344
  - -0.10741186141967773
  - -0.1051323413848877
  - -0.0905308723449707
  - -0.10130786895751953
  - -0.10413885116577148
  - -0.10990595817565918
  - -0.10385942459106445
  - -0.1246495246887207
  - -0.10365724563598633
  - -0.10548067092895508
  - -0.10114479064941406
  - -0.10440587997436523
  - -0.10587406158447266
  - -0.10569238662719727
  - -0.6574695110321045
  - -0.11148810386657715
  - -0.10521173477172852
  - -0.10210371017456055
  - -0.10580778121948242
  - -0.10266256332397461
  - -0.10553169250488281
  - -0.10625123977661133
  - -0.10758495330810547
  - -0.0714585930109024
  - -0.11328125
  - -0.10541462898254395
  - -0.08417654037475586
  - -0.1010284423828125
  - -0.10056686401367188
  - -0.10216426849365234
  - -0.10586404800415039
  - -0.10528182983398438
  - -0.10446739196777344
  - -2.261812448501587
  - -0.11170196533203125
  - -0.10608196258544922
  - -0.10394001007080078
  - -1.4621071815490723
  - -0.09801721572875977
  - -0.10784387588500977
  - -0.10526776313781738
  - -0.09882450103759766
  - -0.105804443359375
  - -0.11230802536010742
  - -0.10461854934692383
  - -0.10441446304321289
  - -0.14345793426036835
  - -0.10467529296875
  - -0.10484457015991211
  - -0.32817524671554565
  - -0.09393453598022461
  - -0.10701560974121094
  - -0.1048135757446289
  - -0.10455656051635742
  - -0.15234944224357605
  - -0.1049489974975586
  - -0.10422372817993164
  - -0.2789718806743622
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, True))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, True))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, True))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, True))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, True))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, True))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, True))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, True))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, True))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, True))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
