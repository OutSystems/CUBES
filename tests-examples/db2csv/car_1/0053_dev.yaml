db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/cars_data.csv
output: tests-examples/db2csv/car_1/tables/0053_dev.csv
raw_question: What is the maximum accelerate for different number of cylinders? 
question_index: 139 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants: []
join_columns: []
groupby_columns:
 - cylinders
functions:
 - max
columns:
 - accelerate
filters: []
ieu: []
comment: |-
  SELECT max(Accelerate),
         Cylinders
  FROM CARS_DATA
  GROUP BY Cylinders;

sql: |-
  SELECT max(Accelerate),
         Cylinders
  FROM CARS_DATA
  GROUP BY Cylinders;
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
smbop_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_functions:
- - max
- - max
  - avg
- - max
- - max
  - sum
- - avg
- - max
- - max
- - max
- - max
- - max
smbop_beam_columns:
- - accelerate
- - accelerate
- - cylinders
  - accelerate
- - accelerate
- - accelerate
- - accelerate
- - accelerate
- - accelerate
- - accelerate
- - accelerate
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- []
- - '>'
- - '='
- - '>'
- []
- []
- []
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT cars_data.cylinders , MAX( cars_data.accelerate ) FROM cars_data GROUP BY cars_data.cylinders
  - SELECT cars_data.cylinders , MAX( cars_data.accelerate ) FROM cars_data GROUP BY cars_data.cylinders HAVING AVG( cars_data.accelerate ) > cars_data.accelerate
  - SELECT cars_data.cylinders , MAX( cars_data.accelerate ) FROM cars_data WHERE cars_data.cylinders = 'cars_data.cylinders' GROUP BY cars_data.cylinders
  - SELECT cars_data.cylinders , MAX( cars_data.accelerate ) FROM cars_data GROUP BY cars_data.cylinders HAVING SUM( cars_data.accelerate ) > cars_data.accelerate
  - SELECT cars_data.cylinders , AVG( cars_data.accelerate ) FROM cars_data GROUP BY cars_data.cylinders
  - SELECT cars_data.cylinders , MAX( cars_data.accelerate ) FROM cars_data GROUP BY cars_data.cylinders ORDER BY cars_data.cylinders ASC
  - SELECT cars_data.cylinders , MAX( cars_data.accelerate ) , MAX( cars_data.accelerate ) FROM cars_data GROUP BY cars_data.cylinders
  - SELECT cars_data.cylinders , MAX( cars_data.accelerate ) FROM cars_data GROUP BY cars_data.cylinders ORDER BY cars_data.cylinders DESC
  - SELECT cars_data.cylinders , MAX( cars_data.accelerate ) FROM cars_data GROUP BY cars_data.cylinders ORDER BY cars_data.accelerate DESC
  - SELECT cars_data.cylinders , MAX( cars_data.accelerate ) FROM cars_data
smbop_beam_inferred_code_w_terminals:
  - SELECT cars_data.cylinders , MAX( cars_data.accelerate ) FROM cars_data GROUP BY cars_data.cylinders
  - SELECT cars_data.cylinders , MAX( cars_data.accelerate ) FROM cars_data GROUP BY cars_data.cylinders HAVING AVG( cars_data.accelerate ) > cars_data.accelerate
  - SELECT cars_data.cylinders , MAX( cars_data.accelerate ) FROM cars_data WHERE cars_data.cylinders = 'cars_data.cylinders' GROUP BY cars_data.cylinders
  - SELECT cars_data.cylinders , MAX( cars_data.accelerate ) FROM cars_data GROUP BY cars_data.cylinders HAVING SUM( cars_data.accelerate ) > cars_data.accelerate
  - SELECT cars_data.cylinders , AVG( cars_data.accelerate ) FROM cars_data GROUP BY cars_data.cylinders
  - SELECT cars_data.cylinders , MAX( cars_data.accelerate ) FROM cars_data GROUP BY cars_data.cylinders ORDER BY cars_data.cylinders ASC
  - SELECT cars_data.cylinders , MAX( cars_data.accelerate ) , MAX( cars_data.accelerate ) FROM cars_data GROUP BY cars_data.cylinders
  - SELECT cars_data.cylinders , MAX( cars_data.accelerate ) FROM cars_data GROUP BY cars_data.cylinders ORDER BY cars_data.cylinders DESC
  - SELECT cars_data.cylinders , MAX( cars_data.accelerate ) FROM cars_data GROUP BY cars_data.cylinders ORDER BY cars_data.accelerate DESC
  - SELECT cars_data.cylinders , MAX( cars_data.accelerate ) FROM cars_data
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - True
  - False
  - True
  - True
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- []
- []
- []
- []
- []
- []
- - makeid
  - id
- - model
  - makeid
  - id
ratsql_beam_groupby_columns:
- - cylinders
- - cylinders
- - mpg
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
ratsql_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- - '1'
- []
- []
ratsql_beam_functions:
- - max
- - max
- - max
- - max
- - max
- - max
- - max
- - max
ratsql_beam_columns:
- - accelerate
- - accelerate
- - accelerate
- - accelerate
- - accelerate
- - accelerate
- - accelerate
- - accelerate
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders
  - SELECT Max(cars_data.Accelerate), cars_data.MPG FROM cars_data GROUP BY cars_data.Cylinders
  - SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.MPG
  - SELECT DISTINCT Max(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders
  - SELECT Max(cars_data.Accelerate), DISTINCT cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders
  - SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY DISTINCT cars_data.Cylinders
  - SELECT Max(DISTINCT cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders
  - SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders LIMIT 1
  - SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY cars_data.Cylinders
  - SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY cars_data.Cylinders
ratsql_beam_inferred_code_w_terminals:
  - SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders
  - SELECT Max(cars_data.Accelerate), cars_data.MPG FROM cars_data GROUP BY cars_data.Cylinders
  - SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.MPG
  - SELECT DISTINCT Max(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders
  - SELECT Max(cars_data.Accelerate), DISTINCT cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders
  - SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY DISTINCT cars_data.Cylinders
  - SELECT Max(DISTINCT cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders
  - SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders LIMIT 1
  - SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY cars_data.Cylinders
  - SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY cars_data.Cylinders
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - True
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10409164428710938
  - -0.09940767288208008
  - -0.11444902420043945
  - -0.10419106483459473
  - -0.1793370246887207
  - -0.09758329391479492
  - -0.1012115478515625
  - -0.1016836166381836
  - -0.10601568222045898
  - -0.10423755645751953
  - -0.10480308532714844
  - -0.11389711499214172
  - -0.11002850532531738
  - -0.10433220863342285
  - -0.11208200454711914
  - -0.10147333145141602
  - -0.10229778289794922
  - -0.1055154800415039
  - -0.10523319244384766
  - -0.10611915588378906
  - -0.25631266832351685
  - -0.11373400688171387
  - -0.10610270500183105
  - -0.11310338973999023
  - -0.11078214645385742
  - -0.10099506378173828
  - -0.10518693923950195
  - -0.10449934005737305
  - -0.3549858331680298
  - -0.11038827896118164
  - -0.10611343383789062
  - -0.10431528091430664
  - -0.10755228996276855
  - -0.10504746437072754
  - -0.09836483001708984
  - -0.10424184799194336
  - -0.10657548904418945
  - -0.10528278350830078
  - -0.10399580001831055
  - -0.12106580287218094
- - -0.10409164428710938
  - -0.09940767288208008
  - -0.11444902420043945
  - -0.10419106483459473
  - -0.1793370246887207
  - -0.09758329391479492
  - -0.1012115478515625
  - -0.1016836166381836
  - -0.10601568222045898
  - -0.10423755645751953
  - -0.10480308532714844
  - -0.11389711499214172
  - -0.11002850532531738
  - -0.10433220863342285
  - -0.11208200454711914
  - -0.10147333145141602
  - -0.10229778289794922
  - -0.1055154800415039
  - -0.10523319244384766
  - -0.10611915588378906
  - -2.7513442039489746
  - -0.11256837844848633
  - -0.10593986511230469
  - -0.11259603500366211
  - -0.10545587539672852
  - -0.10186052322387695
  - -0.10497665405273438
  - -0.10452747344970703
  - -0.35171639919281006
  - -0.11026167869567871
  - -0.10615253448486328
  - -0.10431241989135742
  - -0.10751605033874512
  - -0.10504412651062012
  - -0.0983738899230957
  - -0.10426521301269531
  - -0.10658788681030273
  - -0.10525894165039062
  - -0.10400009155273438
  - -0.12124364823102951
- - -0.10409164428710938
  - -0.09940767288208008
  - -0.11444902420043945
  - -0.10419106483459473
  - -0.1793370246887207
  - -0.09758329391479492
  - -0.1012115478515625
  - -0.1016836166381836
  - -0.10601568222045898
  - -0.10423755645751953
  - -0.10480308532714844
  - -0.11389711499214172
  - -0.11002850532531738
  - -0.10433220863342285
  - -0.11208200454711914
  - -0.10147333145141602
  - -0.10229778289794922
  - -0.1055154800415039
  - -0.10523319244384766
  - -0.10611915588378906
  - -0.25631266832351685
  - -0.11373400688171387
  - -0.10610270500183105
  - -0.11310338973999023
  - -0.11078214645385742
  - -0.10099506378173828
  - -0.10518693923950195
  - -0.10449934005737305
  - -2.8946001529693604
  - -0.10978484153747559
  - -0.10612988471984863
  - -0.10519695281982422
  - -0.10747051239013672
  - -0.1049201488494873
  - -0.09829330444335938
  - -0.10402441024780273
  - -0.10603809356689453
  - -0.1054224967956543
  - -0.10390996932983398
  - -0.11958343535661697
- - -0.10409164428710938
  - -0.09940767288208008
  - -3.381547689437866
  - -0.10378265380859375
  - -0.15454626083374023
  - -0.09741067886352539
  - -0.09611272811889648
  - -0.10173225402832031
  - -0.10564899444580078
  - -0.10419559478759766
  - -0.10485363006591797
  - -0.10535691678524017
  - -0.11025834083557129
  - -0.10436081886291504
  - -0.11371278762817383
  - -0.10156583786010742
  - -0.10233354568481445
  - -0.10548734664916992
  - -0.10527896881103516
  - -0.10614442825317383
  - -0.25416192412376404
  - -0.1137392520904541
  - -0.10607099533081055
  - -0.11261367797851562
  - -0.11088800430297852
  - -0.10094642639160156
  - -0.10515069961547852
  - -0.10450124740600586
  - -0.35348114371299744
  - -0.11039280891418457
  - -0.10611891746520996
  - -0.10421323776245117
  - -0.10755038261413574
  - -0.10504961013793945
  - -0.09836435317993164
  - -0.10424184799194336
  - -0.10656118392944336
  - -0.10527801513671875
  - -0.10399198532104492
  - -0.12118831276893616
- - -0.10409164428710938
  - -0.09940767288208008
  - -0.11444902420043945
  - -0.10419106483459473
  - -0.1793370246887207
  - -0.09758329391479492
  - -0.1012115478515625
  - -0.1016836166381836
  - -0.10601568222045898
  - -0.10423755645751953
  - -0.10480308532714844
  - -0.11389711499214172
  - -0.11002850532531738
  - -0.10433220863342285
  - -0.11208200454711914
  - -0.10147333145141602
  - -0.10229778289794922
  - -0.1055154800415039
  - -0.10523319244384766
  - -0.10611915588378906
  - -0.25631266832351685
  - -3.436285972595215
  - -0.10580039024353027
  - -0.11191987991333008
  - -0.11141681671142578
  - -0.10085868835449219
  - -0.10506343841552734
  - -0.10449934005737305
  - -0.3558303117752075
  - -0.11044430732727051
  - -0.10611391067504883
  - -0.10442113876342773
  - -0.10756444931030273
  - -0.10505270957946777
  - -0.0983743667602539
  - -0.10425424575805664
  - -0.10659646987915039
  - -0.10529279708862305
  - -0.10399293899536133
  - -0.12098320573568344
- - -0.10409164428710938
  - -0.09940767288208008
  - -0.11444902420043945
  - -0.10419106483459473
  - -0.1793370246887207
  - -0.09758329391479492
  - -0.1012115478515625
  - -0.1016836166381836
  - -0.10601568222045898
  - -0.10423755645751953
  - -0.10480308532714844
  - -0.11389711499214172
  - -0.11002850532531738
  - -0.10433220863342285
  - -0.11208200454711914
  - -0.10147333145141602
  - -0.10229778289794922
  - -0.1055154800415039
  - -0.10523319244384766
  - -0.10611915588378906
  - -0.25631266832351685
  - -0.11373400688171387
  - -0.10610270500183105
  - -0.11310338973999023
  - -0.11078214645385742
  - -0.10099506378173828
  - -0.10518693923950195
  - -0.10449934005737305
  - -0.3549858331680298
  - -3.468182325363159
  - -0.10598158836364746
  - -0.10430622100830078
  - -0.1074819564819336
  - -0.10503816604614258
  - -0.09831809997558594
  - -0.10439538955688477
  - -0.10659456253051758
  - -0.10526323318481445
  - -0.10399580001831055
  - -0.12013393640518188
- - -0.10409164428710938
  - -0.09940767288208008
  - -0.11444902420043945
  - -0.10419106483459473
  - -0.1793370246887207
  - -0.09758329391479492
  - -0.1012115478515625
  - -0.1016836166381836
  - -0.10601568222045898
  - -0.10423755645751953
  - -0.10480308532714844
  - -0.11389711499214172
  - -3.492220401763916
  - -0.1040492057800293
  - -0.11011981964111328
  - -0.10214424133300781
  - -0.10213994979858398
  - -0.10587692260742188
  - -0.10509347915649414
  - -0.10614585876464844
  - -0.2576865255832672
  - -0.11377191543579102
  - -0.10610818862915039
  - -0.11355781555175781
  - -0.11138391494750977
  - -0.10104990005493164
  - -0.10543060302734375
  - -0.10446548461914062
  - -0.3647744357585907
  - -0.11040997505187988
  - -0.10608506202697754
  - -0.1052389144897461
  - -0.10754847526550293
  - -0.10503864288330078
  - -0.09841108322143555
  - -0.10423040390014648
  - -0.10665655136108398
  - -0.1053314208984375
  - -0.10400819778442383
  - -0.12075608968734741
- - -0.10409164428710938
  - -0.09940767288208008
  - -0.11444902420043945
  - -0.10419106483459473
  - -0.1793370246887207
  - -0.09758329391479492
  - -0.1012115478515625
  - -0.1016836166381836
  - -0.10601568222045898
  - -0.10423755645751953
  - -0.10480308532714844
  - -0.11389711499214172
  - -0.11002850532531738
  - -0.10433220863342285
  - -0.11208200454711914
  - -0.10147333145141602
  - -0.10229778289794922
  - -0.1055154800415039
  - -0.10523319244384766
  - -0.10611915588378906
  - -0.25631266832351685
  - -0.11373400688171387
  - -0.10610270500183105
  - -0.11310338973999023
  - -0.11078214645385742
  - -0.10099506378173828
  - -0.10518693923950195
  - -0.10449934005737305
  - -0.3549858331680298
  - -0.11038827896118164
  - -0.10611343383789062
  - -0.10431528091430664
  - -3.5448925495147705
  - -0.10517001152038574
  - -0.09902286529541016
  - -0.10454511642456055
  - -0.10701990127563477
  - -0.10503768920898438
  - -0.1039891242980957
  - -0.12103580683469772
- - -0.10409164428710938
  - -0.09940767288208008
  - -0.11444902420043945
  - -0.10419106483459473
  - -0.1793370246887207
  - -0.09758329391479492
  - -0.1012115478515625
  - -0.1016836166381836
  - -0.10601568222045898
  - -0.10423755645751953
  - -0.10480308532714844
  - -0.11389711499214172
  - -0.11002850532531738
  - -0.10433220863342285
  - -0.11208200454711914
  - -0.10147333145141602
  - -0.10229778289794922
  - -0.1055154800415039
  - -0.10523319244384766
  - -0.10611915588378906
  - -0.25631266832351685
  - -0.11373400688171387
  - -0.10610270500183105
  - -0.11310338973999023
  - -0.11078214645385742
  - -0.10099506378173828
  - -0.10518693923950195
  - -0.10449934005737305
  - -0.3549858331680298
  - -0.11038827896118164
  - -0.10611343383789062
  - -0.10431528091430664
  - -0.10755228996276855
  - -0.10504746437072754
  - -0.09836483001708984
  - -0.10424184799194336
  - -0.10657548904418945
  - -0.10528278350830078
  - -0.10399580001831055
  - -3.686147928237915
- - -0.10409164428710938
  - -0.09940767288208008
  - -0.11444902420043945
  - -0.10419106483459473
  - -0.1793370246887207
  - -0.09758329391479492
  - -0.1012115478515625
  - -0.1016836166381836
  - -0.10601568222045898
  - -0.10423755645751953
  - -0.10480308532714844
  - -0.11389711499214172
  - -0.11002850532531738
  - -0.10433220863342285
  - -0.11208200454711914
  - -0.10147333145141602
  - -0.10229778289794922
  - -0.1055154800415039
  - -0.10523319244384766
  - -0.10611915588378906
  - -0.25631266832351685
  - -0.11373400688171387
  - -0.10610270500183105
  - -0.11310338973999023
  - -0.11078214645385742
  - -0.10099506378173828
  - -0.10518693923950195
  - -0.10449934005737305
  - -0.3549858331680298
  - -0.11038827896118164
  - -0.10611343383789062
  - -0.10431528091430664
  - -0.10755228996276855
  - -0.10504746437072754
  - -0.09836483001708984
  - -0.10424184799194336
  - -0.10657548904418945
  - -0.10528278350830078
  - -0.10399580001831055
  - -3.7673797607421875
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Accelerate'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Accelerate'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Accelerate'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Accelerate'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Accelerate'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Accelerate'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'True'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Accelerate'
  - 'True'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Accelerate'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Accelerate'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Accelerate'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
