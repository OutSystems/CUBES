db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/car_makers.csv
 - tests-examples/db2csv/car_1/tables/model_list.csv
 - tests-examples/db2csv/car_1/tables/car_names.csv
output: tests-examples/db2csv/car_1/tables/0089_dev.csv
raw_question: Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker . 
question_index: 175 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - 3
 - 2
join_columns:
 - id
 - maker
 - model
groupby_columns:
 - id
orderby_columns: []
functions:
 - count
columns: []
filters:
 - '>='
 - '>'
ieu:
 - intersect
comment: |-
  select t1.id,
         t1.maker
  from car_makers as t1
  join model_list as t2 on t1.id = t2.maker
  group by t1.id
  having count(*) >= 2 intersect
  select t1.id,
         t1.maker
  from car_makers as t1
  join model_list as t2 on t1.id = t2.maker
  join car_names as t3 on t2.model = t3.model
  group by t1.id
  having count(*) > 3;

sql: |-
  select t1.id,
         t1.maker
  from car_makers as t1
  join model_list as t2 on t1.id = t2.maker
  group by t1.id
  having count(*) >= 2 intersect
  select t1.id,
         t1.maker
  from car_makers as t1
  join model_list as t2 on t1.id = t2.maker
  join car_names as t3 on t2.model = t3.model
  group by t1.id
  having count(*) > 3;
smbop_beam_join_columns:
- - id
  - maker
- - id
  - maker
- - id
  - maker
- - id
  - maker
- - id
  - maker
- - id
  - maker
smbop_beam_groupby_columns:
- - id
- - id
- - id
- - id
- - id
- - id
smbop_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
smbop_beam_constants:
- - 3
  - 2
- - 3
  - 2
- - 3
  - 2
- - 3
  - 2
- - 3
  - 2
- - 3
  - 2
smbop_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
smbop_beam_columns:
- []
- []
- []
- []
- []
- []
smbop_beam_ieu:
- - intersect
- - intersect
- []
- []
- []
- []
smbop_beam_filters:
- - '>='
- - '>='
  - '>'
- - '>'
- []
- - '>='
- - '>='
smbop_beam_inferred_code:
  - SELECT car_makers.id , car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT( * ) >= 2 INTERSECT SELECT car_makers.id , car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT( * ) >= 3
  - SELECT car_makers.id , car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT( * ) >= 2 INTERSECT SELECT car_makers.id , car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT( * ) > 3
  - SELECT car_makers.id , car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT( * ) > 3
  - SELECT car_makers.id , car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT( * ) BETWEEN 2 and 3
  - SELECT car_makers.id , car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT( * ) >= 3
  - SELECT car_makers.id , car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT( * ) >= 2
smbop_beam_inferred_code_w_terminals:
  - SELECT car_makers.id , car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT( * ) >= 2 INTERSECT SELECT car_makers.id , car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT( * ) >= 3
  - SELECT car_makers.id , car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT( * ) >= 2 INTERSECT SELECT car_makers.id , car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT( * ) > 3
  - SELECT car_makers.id , car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT( * ) > 3
  - SELECT car_makers.id , car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT( * ) BETWEEN 2 and 3
  - SELECT car_makers.id , car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT( * ) >= 3
  - SELECT car_makers.id , car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT( * ) >= 2
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- - id
  - maker
- - id
  - maker
- - id
  - maker
- - id
  - maker
- - id
  - maker
- - id
  - maker
- - id
  - maker
- - id
  - maker
- - id
  - maker
- - id
  - maker
  - model
ratsql_beam_groupby_columns:
- - id
- - id
  - maker
- - id
- - id
  - maker
- - id
  - maker
- - id
  - maker
- - id
  - maker
- - id
- - maker
- - id
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
ratsql_beam_constants:
- - 3
  - 2
- - 3
  - 2
- - 3
  - 2
- - 3
  - 2
- - 3
  - 2
- - 3
  - 2
- - 3
  - 2
- - 3
  - 2
- - 3
  - 2
- - 3
  - 2
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_ieu:
- - intersect
- - intersect
- - intersect
- - intersect
- - intersect
- - intersect
- - intersect
- - intersect
- - intersect
- - intersect
ratsql_beam_filters:
- - '>='
- - '>='
  - '>'
- - '>='
  - '>'
- - '>='
- - '>='
- - '>='
  - '>'
- - '>='
- - '>='
- - '>='
  - '>'
- - '>='
ratsql_beam_inferred_code:
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 'terminal'
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker HAVING Count(*) > 'terminal'
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) > 'terminal'
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 'terminal'
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 'terminal'
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) > 'terminal'
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) >= 'terminal'
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Maker, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 'terminal'
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker HAVING Count(*) > 'terminal'
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model GROUP BY car_makers.Id HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 3
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker HAVING Count(*) > 3
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) > 3
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker HAVING Count(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 3
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 3
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) > 3
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) >= 3
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 2 INTERSECT SELECT car_makers.Maker, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 3
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker HAVING Count(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker HAVING Count(*) > 3
  - SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model GROUP BY car_makers.Id HAVING Count(*) >= 2 INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 3
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.1021876335144043
  - -0.10501623153686523
  - -0.10725927352905273
  - -0.1042633056640625
  - -0.12616586685180664
  - -0.1033024787902832
  - -0.10478830337524414
  - -0.1013941764831543
  - -0.10423660278320312
  - -0.10526657104492188
  - -0.10501909255981445
  - -0.12373844534158707
  - -0.11258530616760254
  - -0.10533499717712402
  - -0.1022028923034668
  - -0.10777568817138672
  - -0.10154390335083008
  - -0.10498809814453125
  - -0.10617399215698242
  - -0.10561513900756836
  - -0.08662351220846176
  - -0.11330032348632812
  - -0.10550689697265625
  - -0.13416719436645508
  - -0.10928583145141602
  - -0.10477447509765625
  - -0.10480165481567383
  - -0.10515689849853516
  - -0.5742689967155457
  - -0.10947370529174805
  - -0.10575437545776367
  - -0.09818792343139648
  - -0.08842945098876953
  - -0.10248041152954102
  - -0.10448837280273438
  - -0.1107168197631836
  - -0.11764144897460938
  - -0.10190754383802414
  - -0.1099858283996582
  - -0.10578632354736328
  - -0.11045265197753906
  - -0.0982503890991211
  - -0.10689496994018555
  - -0.10475516319274902
  - -0.11317634582519531
  - -0.10219955444335938
  - -0.10480117797851562
  - -0.1100926399230957
  - -0.10401129722595215
  - -0.1232900619506836
  - -0.10350179672241211
  - -0.1048440933227539
  - -0.10229015350341797
  - -0.10415458679199219
  - -0.10656404495239258
  - -0.10445785522460938
  - -0.2730140686035156
  - -0.11208367347717285
  - -0.10563015937805176
  - -0.10195112228393555
  - -0.10469913482666016
  - -0.1026616096496582
  - -0.10547685623168945
  - -0.10608577728271484
  - -0.10650062561035156
  - -0.07085052132606506
  - -0.11136651039123535
  - -0.10596323013305664
  - -0.12966156005859375
  - -0.11689949035644531
  - -0.12048816680908203
  - -0.10297346115112305
  - -0.10443973541259766
  - -0.7274656295776367
  - -0.11027050018310547
  - -0.1061093807220459
  - -0.5254888534545898
  - -0.09696483612060547
  - -0.10200786590576172
  - -0.10447978973388672
  - -0.11020231246948242
  - -0.11641073226928711
  - -0.10039636492729187
  - -0.1099705696105957
  - -0.10621786117553711
  - -0.10451841354370117
  - -0.09611749649047852
  - -0.10775995254516602
  - -0.10468363761901855
  - -0.09521770477294922
  - -0.10478591918945312
  - -0.1031484603881836
  - -0.10577964782714844
  - -0.10474872589111328
  - -0.1981663703918457
  - -0.10512161254882812
  - -0.10429859161376953
  - -0.13684076070785522
  - -0.10315608978271484
  - -0.11392688751220703
  - -0.10463476181030273
  - -0.10293769836425781
  - -0.1801602840423584
  - -0.10476398468017578
  - -0.10364580154418945
  - -0.16863735020160675
- - -0.1021876335144043
  - -0.10501623153686523
  - -0.10725927352905273
  - -0.1042633056640625
  - -0.12616586685180664
  - -0.1033024787902832
  - -0.10478830337524414
  - -0.1013941764831543
  - -0.10423660278320312
  - -0.10526657104492188
  - -0.10501909255981445
  - -0.12373844534158707
  - -0.11258530616760254
  - -0.10533499717712402
  - -0.1022028923034668
  - -0.10777568817138672
  - -0.10154390335083008
  - -0.10498809814453125
  - -0.10617399215698242
  - -0.10561513900756836
  - -0.08662351220846176
  - -0.11330032348632812
  - -0.10550689697265625
  - -0.13416719436645508
  - -0.10928583145141602
  - -0.10477447509765625
  - -0.10480165481567383
  - -0.10515689849853516
  - -0.5742689967155457
  - -0.10947370529174805
  - -0.10575437545776367
  - -0.09818792343139648
  - -0.08842945098876953
  - -0.10248041152954102
  - -0.10448837280273438
  - -0.1107168197631836
  - -0.11764144897460938
  - -0.10190754383802414
  - -0.1099858283996582
  - -0.10578632354736328
  - -0.11045265197753906
  - -0.0982503890991211
  - -0.10689496994018555
  - -0.10475516319274902
  - -0.11317634582519531
  - -0.10219955444335938
  - -0.10480117797851562
  - -0.1100926399230957
  - -0.10401129722595215
  - -0.1232900619506836
  - -0.10350179672241211
  - -0.1048440933227539
  - -0.10229015350341797
  - -0.10415458679199219
  - -0.10656404495239258
  - -0.10445785522460938
  - -0.2730140686035156
  - -0.11208367347717285
  - -0.10563015937805176
  - -0.10195112228393555
  - -0.10469913482666016
  - -0.1026616096496582
  - -0.10547685623168945
  - -0.10608577728271484
  - -0.10650062561035156
  - -0.07085052132606506
  - -0.11136651039123535
  - -0.10596323013305664
  - -0.12966156005859375
  - -0.11689949035644531
  - -0.12048816680908203
  - -0.10297346115112305
  - -0.10443973541259766
  - -1.8823013305664062
  - -0.11049127578735352
  - -0.10688447952270508
  - -0.22389841079711914
  - -0.09934282302856445
  - -0.10352802276611328
  - -0.10526466369628906
  - -0.10876846313476562
  - -0.12080669403076172
  - -0.10880395025014877
  - -0.10993766784667969
  - -0.106170654296875
  - -0.10238933563232422
  - -0.09409809112548828
  - -0.10849666595458984
  - -0.10468268394470215
  - -0.09471321105957031
  - -0.10471343994140625
  - -0.10305500030517578
  - -0.10538434982299805
  - -0.10477733612060547
  - -0.21190519630908966
  - -0.10512447357177734
  - -0.10422945022583008
  - -0.15639188885688782
  - -0.10330390930175781
  - -0.11179590225219727
  - -0.10461997985839844
  - -0.10306453704833984
  - -0.1710287630558014
  - -0.10471439361572266
  - -0.10370063781738281
  - -0.1770721673965454
- - -0.1021876335144043
  - -0.10501623153686523
  - -0.10725927352905273
  - -0.1042633056640625
  - -0.12616586685180664
  - -0.1033024787902832
  - -0.10478830337524414
  - -0.1013941764831543
  - -0.10423660278320312
  - -0.10526657104492188
  - -0.10501909255981445
  - -0.12373844534158707
  - -0.11258530616760254
  - -0.10533499717712402
  - -0.1022028923034668
  - -0.10777568817138672
  - -0.10154390335083008
  - -0.10498809814453125
  - -0.10617399215698242
  - -0.10561513900756836
  - -0.08662351220846176
  - -0.11330032348632812
  - -0.10550689697265625
  - -0.13416719436645508
  - -0.10928583145141602
  - -0.10477447509765625
  - -0.10480165481567383
  - -0.10515689849853516
  - -0.5742689967155457
  - -0.10947370529174805
  - -0.10575437545776367
  - -0.09818792343139648
  - -0.08842945098876953
  - -0.10248041152954102
  - -0.10448837280273438
  - -0.1107168197631836
  - -0.11764144897460938
  - -0.10190754383802414
  - -0.1099858283996582
  - -0.10578632354736328
  - -0.11045265197753906
  - -0.0982503890991211
  - -0.10689496994018555
  - -0.10475516319274902
  - -0.11317634582519531
  - -0.10219955444335938
  - -0.10480117797851562
  - -0.1100926399230957
  - -0.10401129722595215
  - -0.1232900619506836
  - -0.10350179672241211
  - -0.1048440933227539
  - -0.10229015350341797
  - -0.10415458679199219
  - -0.10656404495239258
  - -0.10445785522460938
  - -0.2730140686035156
  - -0.11208367347717285
  - -0.10563015937805176
  - -0.10195112228393555
  - -0.10469913482666016
  - -0.1026616096496582
  - -0.10547685623168945
  - -0.10608577728271484
  - -0.10650062561035156
  - -0.07085052132606506
  - -0.11136651039123535
  - -0.10596323013305664
  - -0.12966156005859375
  - -0.11689949035644531
  - -0.12048816680908203
  - -0.10297346115112305
  - -0.10443973541259766
  - -0.7274656295776367
  - -0.11027050018310547
  - -0.1061093807220459
  - -1.4976096153259277
  - -0.09808731079101562
  - -0.10300397872924805
  - -0.10614013671875
  - -0.1084432601928711
  - -0.12224006652832031
  - -0.11155536770820618
  - -0.10985350608825684
  - -0.10619282722473145
  - -0.10167741775512695
  - -0.09483671188354492
  - -0.10847711563110352
  - -0.10473251342773438
  - -0.09472274780273438
  - -0.1045370101928711
  - -0.1030416488647461
  - -0.10540342330932617
  - -0.10492324829101562
  - -0.21156622469425201
  - -0.10515260696411133
  - -0.10423851013183594
  - -0.15773001313209534
  - -0.10324525833129883
  - -0.11175107955932617
  - -0.10462141036987305
  - -0.10307645797729492
  - -0.1704435497522354
  - -0.10471105575561523
  - -0.10370254516601562
  - -0.17745058238506317
- - -0.1021876335144043
  - -0.10501623153686523
  - -0.10725927352905273
  - -0.1042633056640625
  - -0.12616586685180664
  - -0.1033024787902832
  - -0.10478830337524414
  - -0.1013941764831543
  - -0.10423660278320312
  - -0.10526657104492188
  - -0.10501909255981445
  - -0.12373844534158707
  - -0.11258530616760254
  - -0.10533499717712402
  - -0.1022028923034668
  - -0.10777568817138672
  - -0.10154390335083008
  - -0.10498809814453125
  - -0.10617399215698242
  - -0.10561513900756836
  - -0.08662351220846176
  - -0.11330032348632812
  - -0.10550689697265625
  - -0.13416719436645508
  - -0.10928583145141602
  - -0.10477447509765625
  - -0.10480165481567383
  - -0.10515689849853516
  - -2.4654502868652344
  - -0.11027073860168457
  - -0.10548973083496094
  - -0.12809133529663086
  - -0.09216690063476562
  - -0.1019296646118164
  - -0.10459089279174805
  - -0.10997724533081055
  - -0.1162571907043457
  - -0.1101832240819931
  - -0.11004281044006348
  - -0.1058804988861084
  - -0.11030197143554688
  - -0.10007619857788086
  - -0.10695314407348633
  - -0.10473465919494629
  - -0.11562490463256836
  - -0.102386474609375
  - -0.10476064682006836
  - -0.11001110076904297
  - -0.10399985313415527
  - -0.12290716171264648
  - -0.10350370407104492
  - -0.10482501983642578
  - -0.10231161117553711
  - -0.10414457321166992
  - -0.10653877258300781
  - -0.10445737838745117
  - -0.2741444408893585
  - -0.11207914352416992
  - -0.10562801361083984
  - -0.1019744873046875
  - -0.1046895980834961
  - -0.10264205932617188
  - -0.10545873641967773
  - -0.10607051849365234
  - -0.10649251937866211
  - -0.07028720527887344
  - -0.11139726638793945
  - -0.10596585273742676
  - -0.12892675399780273
  - -0.11434078216552734
  - -0.1210017204284668
  - -0.10302066802978516
  - -0.1044168472290039
  - -0.7280406355857849
  - -0.11026382446289062
  - -0.10610222816467285
  - -0.5340328216552734
  - -0.0971379280090332
  - -0.10201787948608398
  - -0.10448360443115234
  - -0.11020612716674805
  - -0.11647462844848633
  - -0.10024680942296982
  - -0.10996556282043457
  - -0.10622215270996094
  - -0.10452938079833984
  - -0.0967259407043457
  - -0.10775375366210938
  - -0.10468626022338867
  - -0.09538125991821289
  - -0.10507678985595703
  - -0.10277414321899414
  - -0.10578489303588867
  - -0.10474920272827148
  - -0.1979779303073883
  - -0.1051173210144043
  - -0.10428810119628906
  - -0.13738039135932922
  - -0.10312557220458984
  - -0.11358976364135742
  - -0.10463666915893555
  - -0.10293769836425781
  - -0.17951883375644684
  - -0.10475826263427734
  - -0.1036529541015625
  - -0.16963015496730804
- - -0.1021876335144043
  - -0.10501623153686523
  - -0.10725927352905273
  - -0.1042633056640625
  - -0.12616586685180664
  - -0.1033024787902832
  - -0.10478830337524414
  - -0.1013941764831543
  - -0.10423660278320312
  - -0.10526657104492188
  - -0.10501909255981445
  - -0.12373844534158707
  - -0.11258530616760254
  - -0.10533499717712402
  - -0.1022028923034668
  - -0.10777568817138672
  - -0.10154390335083008
  - -0.10498809814453125
  - -0.10617399215698242
  - -0.10561513900756836
  - -0.08662351220846176
  - -0.11330032348632812
  - -0.10550689697265625
  - -0.13416719436645508
  - -0.10928583145141602
  - -0.10477447509765625
  - -0.10480165481567383
  - -0.10515689849853516
  - -2.6144943237304688
  - -0.11048054695129395
  - -0.10554385185241699
  - -0.1090860366821289
  - -0.08774805068969727
  - -0.10221385955810547
  - -0.10454750061035156
  - -0.11055421829223633
  - -0.11680459976196289
  - -0.10399363189935684
  - -0.10998868942260742
  - -0.1058197021484375
  - -0.11045074462890625
  - -0.09822368621826172
  - -0.10691404342651367
  - -0.10471844673156738
  - -0.11064624786376953
  - -0.10226726531982422
  - -0.1048126220703125
  - -0.11003780364990234
  - -0.10400629043579102
  - -0.12318181991577148
  - -0.10349702835083008
  - -0.10483503341674805
  - -0.10230445861816406
  - -0.10415077209472656
  - -0.10655069351196289
  - -0.10446548461914062
  - -0.274064302444458
  - -0.11208081245422363
  - -0.10562872886657715
  - -0.10197019577026367
  - -0.10469198226928711
  - -0.1026620864868164
  - -0.10546875
  - -0.10609197616577148
  - -0.10649633407592773
  - -0.07055974006652832
  - -0.1113739013671875
  - -0.10596466064453125
  - -0.12965774536132812
  - -0.11623859405517578
  - -0.12049102783203125
  - -0.10295963287353516
  - -0.10443544387817383
  - -0.7271004319190979
  - -0.11027407646179199
  - -0.10611152648925781
  - -0.5298128128051758
  - -0.0970301628112793
  - -0.10200977325439453
  - -0.10448265075683594
  - -0.11020135879516602
  - -0.11645841598510742
  - -0.10040057450532913
  - -0.10996294021606445
  - -0.10622239112854004
  - -0.10453414916992188
  - -0.0964055061340332
  - -0.10775637626647949
  - -0.10468506813049316
  - -0.09529399871826172
  - -0.1048436164855957
  - -0.10296201705932617
  - -0.10579156875610352
  - -0.104766845703125
  - -0.19805411994457245
  - -0.10512161254882812
  - -0.10429620742797852
  - -0.1369020938873291
  - -0.10314559936523438
  - -0.11382770538330078
  - -0.10463619232177734
  - -0.10293817520141602
  - -0.17989791929721832
  - -0.10476160049438477
  - -0.10364818572998047
  - -0.16901937127113342
- - -0.1021876335144043
  - -0.10501623153686523
  - -0.10725927352905273
  - -0.1042633056640625
  - -0.12616586685180664
  - -0.1033024787902832
  - -0.10478830337524414
  - -0.1013941764831543
  - -0.10423660278320312
  - -0.10526657104492188
  - -0.10501909255981445
  - -0.12373844534158707
  - -0.11258530616760254
  - -0.10533499717712402
  - -0.1022028923034668
  - -0.10777568817138672
  - -0.10154390335083008
  - -0.10498809814453125
  - -0.10617399215698242
  - -0.10561513900756836
  - -0.08662351220846176
  - -0.11330032348632812
  - -0.10550689697265625
  - -0.13416719436645508
  - -0.10928583145141602
  - -0.10477447509765625
  - -0.10480165481567383
  - -0.10515689849853516
  - -0.5742689967155457
  - -0.10947370529174805
  - -0.10575437545776367
  - -0.09818792343139648
  - -0.08842945098876953
  - -0.10248041152954102
  - -0.10448837280273438
  - -0.1107168197631836
  - -0.11764144897460938
  - -0.10190754383802414
  - -0.1099858283996582
  - -0.10578632354736328
  - -0.11045265197753906
  - -0.0982503890991211
  - -0.10689496994018555
  - -0.10475516319274902
  - -0.11317634582519531
  - -0.10219955444335938
  - -0.10480117797851562
  - -0.1100926399230957
  - -0.10401129722595215
  - -0.1232900619506836
  - -0.10350179672241211
  - -0.1048440933227539
  - -0.10229015350341797
  - -0.10415458679199219
  - -0.10656404495239258
  - -0.10445785522460938
  - -0.2730140686035156
  - -0.11208367347717285
  - -0.10563015937805176
  - -0.10195112228393555
  - -0.10469913482666016
  - -0.1026616096496582
  - -0.10547685623168945
  - -0.10608577728271484
  - -0.10650062561035156
  - -0.07085052132606506
  - -0.11136651039123535
  - -0.10596323013305664
  - -0.12966156005859375
  - -0.11689949035644531
  - -0.12048816680908203
  - -0.10297346115112305
  - -0.10443973541259766
  - -2.4766461849212646
  - -0.11193275451660156
  - -0.10555505752563477
  - -0.8293166160583496
  - -0.09868907928466797
  - -0.10358953475952148
  - -0.10594844818115234
  - -0.10797882080078125
  - -0.12410306930541992
  - -0.11063893139362335
  - -0.10987186431884766
  - -0.10622453689575195
  - -0.10028076171875
  - -0.09453248977661133
  - -0.10846686363220215
  - -0.10471200942993164
  - -0.0943918228149414
  - -0.10479450225830078
  - -0.10335779190063477
  - -0.10545635223388672
  - -0.10490274429321289
  - -0.21215564012527466
  - -0.10515165328979492
  - -0.10431337356567383
  - -0.1542116403579712
  - -0.10327720642089844
  - -0.11187028884887695
  - -0.10462665557861328
  - -0.10304641723632812
  - -0.17158088088035583
  - -0.10471534729003906
  - -0.10369253158569336
  - -0.17672568559646606
- - -0.1021876335144043
  - -0.10501623153686523
  - -0.10725927352905273
  - -0.1042633056640625
  - -0.12616586685180664
  - -0.1033024787902832
  - -0.10478830337524414
  - -0.1013941764831543
  - -0.10423660278320312
  - -0.10526657104492188
  - -0.10501909255981445
  - -0.12373844534158707
  - -0.11258530616760254
  - -0.10533499717712402
  - -0.1022028923034668
  - -0.10777568817138672
  - -0.10154390335083008
  - -0.10498809814453125
  - -0.10617399215698242
  - -0.10561513900756836
  - -0.08662351220846176
  - -0.11330032348632812
  - -0.10550689697265625
  - -0.13416719436645508
  - -0.10928583145141602
  - -0.10477447509765625
  - -0.10480165481567383
  - -0.10515689849853516
  - -0.5742689967155457
  - -0.10947370529174805
  - -0.10575437545776367
  - -0.09818792343139648
  - -0.08842945098876953
  - -0.10248041152954102
  - -0.10448837280273438
  - -0.1107168197631836
  - -0.11764144897460938
  - -0.10190754383802414
  - -0.1099858283996582
  - -0.10578632354736328
  - -0.11045265197753906
  - -0.0982503890991211
  - -0.10689496994018555
  - -0.10475516319274902
  - -0.11317634582519531
  - -0.10219955444335938
  - -0.10480117797851562
  - -0.1100926399230957
  - -0.10401129722595215
  - -0.1232900619506836
  - -0.10350179672241211
  - -0.1048440933227539
  - -0.10229015350341797
  - -0.10415458679199219
  - -0.10656404495239258
  - -0.10445785522460938
  - -0.2730140686035156
  - -0.11208367347717285
  - -0.10563015937805176
  - -0.10195112228393555
  - -0.10469913482666016
  - -0.1026616096496582
  - -0.10547685623168945
  - -0.10608577728271484
  - -0.10650062561035156
  - -0.07085052132606506
  - -0.11136651039123535
  - -0.10596323013305664
  - -0.12966156005859375
  - -0.11689949035644531
  - -0.12048816680908203
  - -0.10297346115112305
  - -0.10443973541259766
  - -2.4766461849212646
  - -0.11193275451660156
  - -0.10555505752563477
  - -1.0489115715026855
  - -0.09999561309814453
  - -0.10186004638671875
  - -0.10434436798095703
  - -0.11001205444335938
  - -0.11958837509155273
  - -0.10402178019285202
  - -0.10988807678222656
  - -0.10626506805419922
  - -0.10451745986938477
  - -0.09907865524291992
  - -0.1078484058380127
  - -0.10465264320373535
  - -0.09443140029907227
  - -0.10485124588012695
  - -0.10333442687988281
  - -0.1058034896850586
  - -0.10474491119384766
  - -0.19899499416351318
  - -0.10512542724609375
  - -0.10431051254272461
  - -0.13612939417362213
  - -0.10323238372802734
  - -0.11419963836669922
  - -0.10463333129882812
  - -0.1029367446899414
  - -0.1809994876384735
  - -0.10477161407470703
  - -0.1036386489868164
  - -0.1672476977109909
- - -0.1021876335144043
  - -0.10501623153686523
  - -0.10725927352905273
  - -0.1042633056640625
  - -0.12616586685180664
  - -0.1033024787902832
  - -0.10478830337524414
  - -0.1013941764831543
  - -0.10423660278320312
  - -0.10526657104492188
  - -0.10501909255981445
  - -0.12373844534158707
  - -0.11258530616760254
  - -0.10533499717712402
  - -0.1022028923034668
  - -0.10777568817138672
  - -0.10154390335083008
  - -0.10498809814453125
  - -0.10617399215698242
  - -0.10561513900756836
  - -0.08662351220846176
  - -0.11330032348632812
  - -0.10550689697265625
  - -0.13416719436645508
  - -0.10928583145141602
  - -0.10477447509765625
  - -0.10480165481567383
  - -0.10515689849853516
  - -0.5742689967155457
  - -0.10947370529174805
  - -0.10575437545776367
  - -0.09818792343139648
  - -0.08842945098876953
  - -0.10248041152954102
  - -0.10448837280273438
  - -0.1107168197631836
  - -0.11764144897460938
  - -0.10190754383802414
  - -0.1099858283996582
  - -0.10578632354736328
  - -0.11045265197753906
  - -0.0982503890991211
  - -0.10689496994018555
  - -0.10475516319274902
  - -0.11317634582519531
  - -0.10219955444335938
  - -0.10480117797851562
  - -0.1100926399230957
  - -0.10401129722595215
  - -0.1232900619506836
  - -0.10350179672241211
  - -0.1048440933227539
  - -0.10229015350341797
  - -0.10415458679199219
  - -0.10656404495239258
  - -0.10445785522460938
  - -2.8563437461853027
  - -0.11175203323364258
  - -0.10600090026855469
  - -0.1022491455078125
  - -0.10607528686523438
  - -0.1023554801940918
  - -0.10541677474975586
  - -0.10548734664916992
  - -0.10692262649536133
  - -0.049385759979486465
  - -0.11144113540649414
  - -0.10602879524230957
  - -0.1304335594177246
  - -0.09478378295898438
  - -0.11890840530395508
  - -0.10348701477050781
  - -0.10468149185180664
  - -0.764636754989624
  - -0.11013054847717285
  - -0.10648465156555176
  - -0.6369085311889648
  - -0.09624719619750977
  - -0.10205411911010742
  - -0.10454463958740234
  - -0.11008644104003906
  - -0.11777877807617188
  - -0.10276209563016891
  - -0.10991978645324707
  - -0.106231689453125
  - -0.1043710708618164
  - -0.09776639938354492
  - -0.10776758193969727
  - -0.10467243194580078
  - -0.09529685974121094
  - -0.10470438003540039
  - -0.10348749160766602
  - -0.1057581901550293
  - -0.10474872589111328
  - -0.1997373253107071
  - -0.10512351989746094
  - -0.10431671142578125
  - -0.13504202663898468
  - -0.10316133499145508
  - -0.11471796035766602
  - -0.10462617874145508
  - -0.10294723510742188
  - -0.18172289431095123
  - -0.10477972030639648
  - -0.10363626480102539
  - -0.16613823175430298
- - -0.1021876335144043
  - -0.10501623153686523
  - -0.10725927352905273
  - -0.1042633056640625
  - -0.12616586685180664
  - -0.1033024787902832
  - -0.10478830337524414
  - -0.1013941764831543
  - -0.10423660278320312
  - -0.10526657104492188
  - -0.10501909255981445
  - -0.12373844534158707
  - -0.11258530616760254
  - -0.10533499717712402
  - -0.1022028923034668
  - -0.10777568817138672
  - -0.10154390335083008
  - -0.10498809814453125
  - -0.10617399215698242
  - -0.10561513900756836
  - -0.08662351220846176
  - -0.11330032348632812
  - -0.10550689697265625
  - -0.13416719436645508
  - -0.10928583145141602
  - -0.10477447509765625
  - -0.10480165481567383
  - -0.10515689849853516
  - -2.4654502868652344
  - -0.11027073860168457
  - -0.10548973083496094
  - -0.12809133529663086
  - -0.09216690063476562
  - -0.1019296646118164
  - -0.10459089279174805
  - -0.10997724533081055
  - -0.1162571907043457
  - -0.1101832240819931
  - -0.11004281044006348
  - -0.1058804988861084
  - -0.11030197143554688
  - -0.10007619857788086
  - -0.10695314407348633
  - -0.10473465919494629
  - -0.11562490463256836
  - -0.102386474609375
  - -0.10476064682006836
  - -0.11001110076904297
  - -0.10399985313415527
  - -0.12290716171264648
  - -0.10350370407104492
  - -0.10482501983642578
  - -0.10231161117553711
  - -0.10414457321166992
  - -0.10653877258300781
  - -0.10445737838745117
  - -0.2741444408893585
  - -0.11207914352416992
  - -0.10562801361083984
  - -0.1019744873046875
  - -0.1046895980834961
  - -0.10264205932617188
  - -0.10545873641967773
  - -0.10607051849365234
  - -0.10649251937866211
  - -0.07028720527887344
  - -0.11139726638793945
  - -0.10596585273742676
  - -0.12892675399780273
  - -0.11434078216552734
  - -0.1210017204284668
  - -0.10302066802978516
  - -0.1044168472290039
  - -1.8769185543060303
  - -0.11049175262451172
  - -0.10688185691833496
  - -0.2235884666442871
  - -0.09925699234008789
  - -0.10352849960327148
  - -0.10527372360229492
  - -0.10877323150634766
  - -0.12099456787109375
  - -0.1082259863615036
  - -0.10991573333740234
  - -0.10617542266845703
  - -0.10212564468383789
  - -0.09456014633178711
  - -0.1085054874420166
  - -0.10467267036437988
  - -0.09478521347045898
  - -0.1049656867980957
  - -0.10285663604736328
  - -0.10538005828857422
  - -0.10478544235229492
  - -0.21180981397628784
  - -0.10512256622314453
  - -0.10422945022583008
  - -0.15666262805461884
  - -0.1033015251159668
  - -0.1116647720336914
  - -0.10461950302124023
  - -0.10306692123413086
  - -0.17069615423679352
  - -0.10471296310424805
  - -0.10370492935180664
  - -0.17732968926429749
- - -0.1021876335144043
  - -0.10501623153686523
  - -0.10725927352905273
  - -0.1042633056640625
  - -0.12616586685180664
  - -0.1033024787902832
  - -0.10478830337524414
  - -0.1013941764831543
  - -0.10423660278320312
  - -0.10526657104492188
  - -0.10501909255981445
  - -0.12373844534158707
  - -0.11258530616760254
  - -0.10533499717712402
  - -0.1022028923034668
  - -0.10777568817138672
  - -0.10154390335083008
  - -0.10498809814453125
  - -0.10617399215698242
  - -0.10561513900756836
  - -0.08662351220846176
  - -0.11330032348632812
  - -0.10550689697265625
  - -0.13416719436645508
  - -0.10928583145141602
  - -0.10477447509765625
  - -0.10480165481567383
  - -0.10515689849853516
  - -0.5742689967155457
  - -0.10947370529174805
  - -0.10575437545776367
  - -0.09818792343139648
  - -0.08842945098876953
  - -0.10248041152954102
  - -0.10448837280273438
  - -0.1107168197631836
  - -0.11764144897460938
  - -0.10190754383802414
  - -0.1099858283996582
  - -0.10578632354736328
  - -0.11045265197753906
  - -0.0982503890991211
  - -0.10689496994018555
  - -0.10475516319274902
  - -0.11317634582519531
  - -0.10219955444335938
  - -0.10480117797851562
  - -0.1100926399230957
  - -0.10401129722595215
  - -0.1232900619506836
  - -0.10350179672241211
  - -0.1048440933227539
  - -0.10229015350341797
  - -0.10415458679199219
  - -0.10656404495239258
  - -0.10445785522460938
  - -0.2730140686035156
  - -0.11208367347717285
  - -0.10563015937805176
  - -0.10195112228393555
  - -0.10469913482666016
  - -0.1026616096496582
  - -0.10547685623168945
  - -0.10608577728271484
  - -0.10650062561035156
  - -0.07085052132606506
  - -0.11136651039123535
  - -0.10596323013305664
  - -0.12966156005859375
  - -0.11689949035644531
  - -0.12048816680908203
  - -0.10297346115112305
  - -0.10443973541259766
  - -0.7274656295776367
  - -0.11027050018310547
  - -0.1061093807220459
  - -0.5254888534545898
  - -0.09696483612060547
  - -0.10200786590576172
  - -0.10447978973388672
  - -0.11020231246948242
  - -0.11641073226928711
  - -0.10039636492729187
  - -0.1099705696105957
  - -0.10621786117553711
  - -0.10451841354370117
  - -0.09611749649047852
  - -0.10775995254516602
  - -0.10468363761901855
  - -0.09521770477294922
  - -0.10478591918945312
  - -0.1031484603881836
  - -0.10577964782714844
  - -0.10474872589111328
  - -0.1981663703918457
  - -0.10512161254882812
  - -0.10429859161376953
  - -0.13684076070785522
  - -0.10315608978271484
  - -0.11392688751220703
  - -0.10463476181030273
  - -0.10293769836425781
  - -0.1801602840423584
  - -0.10476398468017578
  - -0.10364580154418945
  - -3.006046772003174
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
