db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/car_names.csv
 - tests-examples/db2csv/car_1/tables/cars_data.csv
output: tests-examples/db2csv/car_1/tables/0045_dev.csv
raw_question: What is the maximum horsepower and the make of the car models with 3 cylinders? 
question_index: 131 
has_limit: True 
has_order_by: True 
order_by_direction:
 -  desc 
constants:
 - 3
 - '1'
join_columns:
 - makeid
 - id
groupby_columns: []
orderby_columns:
functions: []
columns:
 - cylinders
filters:
 - '='
ieu: []
comment: |-
  SELECT T2.horsepower,
         T1.Make
  FROM CAR_NAMES AS T1
  JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id
  WHERE T2.cylinders = 3
  ORDER BY T2.horsepower DESC
  LIMIT 1;

sql: |-
  SELECT T2.horsepower,
         T1.Make
  FROM CAR_NAMES AS T1
  JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id
  WHERE T2.cylinders = 3
  ORDER BY T2.horsepower DESC
  LIMIT 1;
smbop_beam_join_columns:
- - id
  - makeid
- - id
  - makeid
- - id
  - makeid
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
smbop_beam_orderby_columns:
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
smbop_beam_constants:
- - 3
- - 3
- - 3
- - 3
smbop_beam_functions:
- - max
- - max
  - sum
- - max
- - max
smbop_beam_columns:
- - cylinders
  - horsepower
- - cylinders
  - make
  - horsepower
- - cylinders
  - make
  - horsepower
- - cylinders
  - horsepower
smbop_beam_ieu:
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT MAX( cars_data.horsepower ) , car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3
  - SELECT MAX( cars_data.horsepower ) , SUM( car_names.make ) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3
  - SELECT MAX( cars_data.horsepower ) , MAX( car_names.make ) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3
  - SELECT MAX( cars_data.horsepower ) , MAX( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = 3
smbop_beam_inferred_code_w_terminals:
  - SELECT MAX( cars_data.horsepower ) , car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3
  - SELECT MAX( cars_data.horsepower ) , SUM( car_names.make ) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3
  - SELECT MAX( cars_data.horsepower ) , MAX( car_names.make ) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3
  - SELECT MAX( cars_data.horsepower ) , MAX( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = 3
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
ratsql_beam_join_columns:
- - makeid
  - id
- - makeid
  - id
- - makeid
  - id
- - makeid
  - id
- - countryid
  - id
  - continent
  - makeid
  - country
  - model
  - contid
  - maker
- - countryid
  - id
  - makeid
  - country
  - model
  - maker
- - makeid
  - id
- - makeid
  - id
  - model
- - id
  - maker
  - makeid
  - model
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
ratsql_beam_constants:
- - 3
- - 3
- - 3
- - 3
- - 3
- - 3
- - 3
- - 3
- - 3
- - 3
ratsql_beam_functions:
- - max
- - max
- - max
  - min
- - avg
  - max
- - max
- - max
- - max
- - max
- - max
ratsql_beam_columns:
- - cylinders
  - horsepower
- - cylinders
  - make
  - horsepower
- - cylinders
  - make
  - horsepower
- - cylinders
  - make
  - horsepower
- - cylinders
  - horsepower
- - cylinders
  - horsepower
- - cylinders
  - horsepower
- - cylinders
  - horsepower
- - cylinders
  - horsepower
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal'
  - SELECT Max(cars_data.Horsepower), Max(car_names.Make) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal'
  - SELECT Max(cars_data.Horsepower), Min(car_names.Make) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal'
  - SELECT Max(cars_data.Horsepower), Avg(car_names.Make) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal'
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM continents JOIN countries ON continents.ContId = countries.Continent AND continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal'
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal'
  - SELECT DISTINCT Max(cars_data.Horsepower), car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal'
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM model_list JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal'
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal'
  - SELECT Max(cars_data.Horsepower), DISTINCT car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3
  - SELECT Max(cars_data.Horsepower), Max(car_names.Make) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3
  - SELECT Max(cars_data.Horsepower), Min(car_names.Make) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3
  - SELECT Max(cars_data.Horsepower), Avg(car_names.Make) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM continents JOIN countries ON continents.ContId = countries.Continent AND continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3
  - SELECT DISTINCT Max(cars_data.Horsepower), car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM model_list JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3
  - SELECT Max(cars_data.Horsepower), car_names.Make FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3
  - SELECT Max(cars_data.Horsepower), DISTINCT car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 3
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10425806045532227
  - -0.10436773300170898
  - -0.11990475654602051
  - -0.10422182083129883
  - -0.1177525520324707
  - -0.09517478942871094
  - -0.10429811477661133
  - -0.10083150863647461
  - -0.10546684265136719
  - -0.10436058044433594
  - -0.10551071166992188
  - -0.05045255646109581
  - -0.11113834381103516
  - -0.10475325584411621
  - -0.10324621200561523
  - -0.4751162528991699
  - -0.10437870025634766
  - -0.10495853424072266
  - -0.10556840896606445
  - -0.10623502731323242
  - -0.10761290043592453
  - -0.1118168830871582
  - -0.10566234588623047
  - -0.09229278564453125
  - -0.10048675537109375
  - -0.09995269775390625
  - -0.10090303421020508
  - -0.10601806640625
  - -0.10453510284423828
  - -0.10503625869750977
  - -0.05766239017248154
  - -0.1111459732055664
  - -0.10570192337036133
  - -0.10665321350097656
  - -0.10259532928466797
  - -0.10359525680541992
  - -0.10701560974121094
  - -0.10470247268676758
  - -0.09731531143188477
  - -0.10885953903198242
  - -0.12422800064086914
  - -0.1051020622253418
  - -0.10448360443115234
  - -0.8286973237991333
  - -0.10516119003295898
  - -0.10383939743041992
  - -0.11092276871204376
- - -0.10425806045532227
  - -0.10436773300170898
  - -0.11990475654602051
  - -0.10422182083129883
  - -0.1177525520324707
  - -0.09517478942871094
  - -0.10429811477661133
  - -0.10083150863647461
  - -0.10546684265136719
  - -0.10436058044433594
  - -0.10551071166992188
  - -0.05045255646109581
  - -0.11113834381103516
  - -0.10475325584411621
  - -0.10324621200561523
  - -2.5818140506744385
  - -0.09978771209716797
  - -0.10506582260131836
  - -0.10469532012939453
  - -0.10586071014404297
  - -0.5142301917076111
  - -0.11340999603271484
  - -0.10569047927856445
  - -0.0873560905456543
  - -0.10359334945678711
  - -0.1001882553100586
  - -0.10095977783203125
  - -0.10602903366088867
  - -0.10497283935546875
  - -0.10433244705200195
  - -0.06752365827560425
  - -0.11174941062927246
  - -0.10536074638366699
  - -0.10612344741821289
  - -0.09749746322631836
  - -0.102935791015625
  - -0.10742998123168945
  - -0.10457253456115723
  - -0.09775447845458984
  - -0.10781526565551758
  - -0.12481498718261719
  - -0.10515308380126953
  - -0.10454177856445312
  - -0.8434581160545349
  - -0.1052236557006836
  - -0.1038508415222168
  - -0.11091508716344833
- - -0.10425806045532227
  - -0.10436773300170898
  - -0.11990475654602051
  - -0.10422182083129883
  - -0.1177525520324707
  - -0.09517478942871094
  - -0.10429811477661133
  - -0.10083150863647461
  - -0.10546684265136719
  - -0.10436058044433594
  - -0.10551071166992188
  - -0.05045255646109581
  - -0.11113834381103516
  - -0.10475325584411621
  - -0.10324621200561523
  - -2.614854335784912
  - -0.09941625595092773
  - -0.1056814193725586
  - -0.10491085052490234
  - -0.10576581954956055
  - -0.5148429274559021
  - -0.11339950561523438
  - -0.1056969165802002
  - -0.08713245391845703
  - -0.10325431823730469
  - -0.1001729965209961
  - -0.1009531021118164
  - -0.10600805282592773
  - -0.10506629943847656
  - -0.10439348220825195
  - -0.06800635159015656
  - -0.11171984672546387
  - -0.10535478591918945
  - -0.10609674453735352
  - -0.09746360778808594
  - -0.10292720794677734
  - -0.10742044448852539
  - -0.1045684814453125
  - -0.0977468490600586
  - -0.10780858993530273
  - -0.1248006820678711
  - -0.1051487922668457
  - -0.10453987121582031
  - -0.8432376384735107
  - -0.1052241325378418
  - -0.1038503646850586
  - -0.11086750775575638
- - -0.10425806045532227
  - -0.10436773300170898
  - -0.11990475654602051
  - -0.10422182083129883
  - -0.1177525520324707
  - -0.09517478942871094
  - -0.10429811477661133
  - -0.10083150863647461
  - -0.10546684265136719
  - -0.10436058044433594
  - -0.10551071166992188
  - -0.05045255646109581
  - -0.11113834381103516
  - -0.10475325584411621
  - -0.10324621200561523
  - -2.931368112564087
  - -0.09970903396606445
  - -0.10512971878051758
  - -0.10484838485717773
  - -0.1059732437133789
  - -0.48755306005477905
  - -0.11342263221740723
  - -0.1056983470916748
  - -0.08708477020263672
  - -0.10341119766235352
  - -0.10017824172973633
  - -0.10094690322875977
  - -0.10598134994506836
  - -0.10498952865600586
  - -0.10435295104980469
  - -0.06777322292327881
  - -0.11173820495605469
  - -0.1053621768951416
  - -0.10612344741821289
  - -0.09748125076293945
  - -0.10292673110961914
  - -0.10742402076721191
  - -0.10457015037536621
  - -0.09775400161743164
  - -0.10779380798339844
  - -0.12482833862304688
  - -0.10515308380126953
  - -0.10454225540161133
  - -0.843605101108551
  - -0.1052250862121582
  - -0.1038503646850586
  - -0.11088628321886063
- - -0.10425806045532227
  - -0.10436773300170898
  - -0.11990475654602051
  - -0.10422182083129883
  - -0.1177525520324707
  - -0.09517478942871094
  - -0.10429811477661133
  - -0.10083150863647461
  - -0.10546684265136719
  - -0.10436058044433594
  - -0.10551071166992188
  - -0.05045255646109581
  - -0.11113834381103516
  - -0.10475325584411621
  - -0.10324621200561523
  - -0.4751162528991699
  - -0.10437870025634766
  - -0.10495853424072266
  - -0.10556840896606445
  - -0.10623502731323242
  - -0.10761290043592453
  - -0.1118168830871582
  - -0.10566234588623047
  - -0.09229278564453125
  - -0.10048675537109375
  - -0.09995269775390625
  - -0.10090303421020508
  - -0.10601806640625
  - -0.10453510284423828
  - -0.10503625869750977
  - -0.05766239017248154
  - -0.1111459732055664
  - -0.10570192337036133
  - -0.10665321350097656
  - -0.10259532928466797
  - -0.10359525680541992
  - -0.10701560974121094
  - -0.10470247268676758
  - -0.09731531143188477
  - -0.10885953903198242
  - -0.12422800064086914
  - -0.1051020622253418
  - -0.10448360443115234
  - -3.2653565406799316
  - -0.10489559173583984
  - -0.10426950454711914
  - -0.5297116041183472
- - -0.10425806045532227
  - -0.10436773300170898
  - -0.11990475654602051
  - -0.10422182083129883
  - -0.1177525520324707
  - -0.09517478942871094
  - -0.10429811477661133
  - -0.10083150863647461
  - -0.10546684265136719
  - -0.10436058044433594
  - -0.10551071166992188
  - -0.05045255646109581
  - -0.11113834381103516
  - -0.10475325584411621
  - -0.10324621200561523
  - -0.4751162528991699
  - -0.10437870025634766
  - -0.10495853424072266
  - -0.10556840896606445
  - -0.10623502731323242
  - -0.10761290043592453
  - -0.1118168830871582
  - -0.10566234588623047
  - -0.09229278564453125
  - -0.10048675537109375
  - -0.09995269775390625
  - -0.10090303421020508
  - -0.10601806640625
  - -0.10453510284423828
  - -0.10503625869750977
  - -0.05766239017248154
  - -0.1111459732055664
  - -0.10570192337036133
  - -0.10665321350097656
  - -0.10259532928466797
  - -0.10359525680541992
  - -0.10701560974121094
  - -0.10470247268676758
  - -0.09731531143188477
  - -0.10885953903198242
  - -0.12422800064086914
  - -0.1051020622253418
  - -0.10448360443115234
  - -3.2476863861083984
  - -0.10466575622558594
  - -0.10408353805541992
  - -0.7025617361068726
- - -0.10425806045532227
  - -0.10436773300170898
  - -3.2389369010925293
  - -0.10361194610595703
  - -0.11159896850585938
  - -0.09388256072998047
  - -0.10680961608886719
  - -0.10040998458862305
  - -0.10548639297485352
  - -0.10433530807495117
  - -0.10553264617919922
  - -0.050905149430036545
  - -0.11108517646789551
  - -0.10477137565612793
  - -0.10292720794677734
  - -0.4851951599121094
  - -0.10451173782348633
  - -0.10498380661010742
  - -0.10554313659667969
  - -0.10633468627929688
  - -0.10921774804592133
  - -0.11177968978881836
  - -0.10565900802612305
  - -0.09238576889038086
  - -0.10059213638305664
  - -0.09997224807739258
  - -0.10090065002441406
  - -0.10604286193847656
  - -0.10452842712402344
  - -0.10501766204833984
  - -0.05771685391664505
  - -0.11115050315856934
  - -0.10570216178894043
  - -0.10665607452392578
  - -0.10257816314697266
  - -0.10360908508300781
  - -0.10701823234558105
  - -0.10470247268676758
  - -0.09731817245483398
  - -0.10884618759155273
  - -0.12424373626708984
  - -0.1051020622253418
  - -0.10448360443115234
  - -0.8287039995193481
  - -0.10516071319580078
  - -0.10383987426757812
  - -0.11093685775995255
- - -0.10425806045532227
  - -0.10436773300170898
  - -0.11990475654602051
  - -0.10422182083129883
  - -0.1177525520324707
  - -0.09517478942871094
  - -0.10429811477661133
  - -0.10083150863647461
  - -0.10546684265136719
  - -0.10436058044433594
  - -0.10551071166992188
  - -0.05045255646109581
  - -0.11113834381103516
  - -0.10475325584411621
  - -0.10324621200561523
  - -0.4751162528991699
  - -0.10437870025634766
  - -0.10495853424072266
  - -0.10556840896606445
  - -0.10623502731323242
  - -0.10761290043592453
  - -0.1118168830871582
  - -0.10566234588623047
  - -0.09229278564453125
  - -0.10048675537109375
  - -0.09995269775390625
  - -0.10090303421020508
  - -0.10601806640625
  - -0.10453510284423828
  - -0.10503625869750977
  - -0.05766239017248154
  - -0.1111459732055664
  - -0.10570192337036133
  - -0.10665321350097656
  - -0.10259532928466797
  - -0.10359525680541992
  - -0.10701560974121094
  - -0.10470247268676758
  - -0.09731531143188477
  - -0.10885953903198242
  - -0.12422800064086914
  - -0.1051020622253418
  - -0.10448360443115234
  - -3.3654255867004395
  - -0.10459041595458984
  - -0.10448360443115234
  - -0.8059317469596863
- - -0.10425806045532227
  - -0.10436773300170898
  - -0.11990475654602051
  - -0.10422182083129883
  - -0.1177525520324707
  - -0.09517478942871094
  - -0.10429811477661133
  - -0.10083150863647461
  - -0.10546684265136719
  - -0.10436058044433594
  - -0.10551071166992188
  - -0.05045255646109581
  - -0.11113834381103516
  - -0.10475325584411621
  - -0.10324621200561523
  - -0.4751162528991699
  - -0.10437870025634766
  - -0.10495853424072266
  - -0.10556840896606445
  - -0.10623502731323242
  - -0.10761290043592453
  - -0.1118168830871582
  - -0.10566234588623047
  - -0.09229278564453125
  - -0.10048675537109375
  - -0.09995269775390625
  - -0.10090303421020508
  - -0.10601806640625
  - -0.10453510284423828
  - -0.10503625869750977
  - -0.05766239017248154
  - -0.1111459732055664
  - -0.10570192337036133
  - -0.10665321350097656
  - -0.10259532928466797
  - -0.10359525680541992
  - -0.10701560974121094
  - -0.10470247268676758
  - -0.09731531143188477
  - -0.10885953903198242
  - -0.12422800064086914
  - -0.1051020622253418
  - -0.10448360443115234
  - -3.4619531631469727
  - -0.1047821044921875
  - -0.1042022705078125
  - -0.7311643958091736
- - -0.10425806045532227
  - -0.10436773300170898
  - -0.11990475654602051
  - -0.10422182083129883
  - -0.1177525520324707
  - -0.09517478942871094
  - -0.10429811477661133
  - -0.10083150863647461
  - -0.10546684265136719
  - -0.10436058044433594
  - -0.10551071166992188
  - -0.05045255646109581
  - -0.11113834381103516
  - -0.10475325584411621
  - -0.10324621200561523
  - -0.4751162528991699
  - -0.10437870025634766
  - -0.10495853424072266
  - -0.10556840896606445
  - -0.10623502731323242
  - -0.10761290043592453
  - -3.451289176940918
  - -0.10557889938354492
  - -0.09315919876098633
  - -0.09940719604492188
  - -0.0998392105102539
  - -0.10090255737304688
  - -0.1060037612915039
  - -0.10449075698852539
  - -0.10496091842651367
  - -0.0573633536696434
  - -0.11112618446350098
  - -0.1057133674621582
  - -0.10661649703979492
  - -0.10294675827026367
  - -0.10361671447753906
  - -0.10705137252807617
  - -0.1047365665435791
  - -0.09721851348876953
  - -0.10860252380371094
  - -0.1265101432800293
  - -0.1050105094909668
  - -0.10444974899291992
  - -0.806628942489624
  - -0.10510015487670898
  - -0.10384321212768555
  - -0.11080775409936905
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Horsepower'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Make'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
