db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/continents.csv
 - tests-examples/db2csv/car_1/tables/countries.csv
 - tests-examples/db2csv/car_1/tables/car_makers.csv
output: tests-examples/db2csv/car_1/tables/0020_dev.csv
raw_question: What is the name of each continent and how many car makers are there in each one? 
question_index: 106 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants: []
join_columns:
 - contid
 - countryid
 - country
 - continent
groupby_columns:
 - continent
orderby_columns: []
functions:
 - count
columns: []
filters: []
ieu: []
comment: |-
  SELECT T1.Continent,
         count(*)
  FROM CONTINENTS AS T1
  JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent
  JOIN car_makers AS T3 ON T2.CountryId = T3.Country
  GROUP BY T1.Continent;

sql: |-
  SELECT T1.Continent,
         count(*)
  FROM CONTINENTS AS T1
  JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent
  JOIN car_makers AS T3 ON T2.CountryId = T3.Country
  GROUP BY T1.Continent;
smbop_beam_join_columns:
- - id
  - countryid
  - contid
  - continent
- - id
  - countryid
  - contid
  - continent
- - continent
  - contid
  - countryid
  - country
- - continent
  - contid
  - countryid
  - country
- - id
  - countryid
  - contid
  - continent
- - id
  - countryid
  - contid
  - continent
- - contid
  - countryid
  - country
  - continent
- - id
  - countryid
  - contid
  - continent
- []
- []
smbop_beam_groupby_columns:
- - continent
- - continent
- - continent
- - continent
- - continent
- - continent
- - continent
- []
- - continent
- []
smbop_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
smbop_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
smbop_beam_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.id = countries.countryid JOIN continents ON countries.continent = continents.contid GROUP BY continents.continent
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.id = countries.countryid JOIN continents ON countries.continent = continents.contid GROUP BY countries.continent
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.country = countries.countryid JOIN continents ON countries.continent = continents.contid GROUP BY continents.continent
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.country = countries.countryid JOIN continents ON countries.continent = continents.contid GROUP BY countries.continent
  - SELECT continents.continent , COUNT( * ) FROM countries JOIN car_makers ON countries.countryid = car_makers.id JOIN continents ON countries.continent = continents.contid GROUP BY continents.continent
  - SELECT continents.continent , COUNT( * ) FROM countries JOIN car_makers ON countries.countryid = car_makers.id JOIN continents ON countries.continent = continents.contid GROUP BY countries.continent
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.country = countries.countryid JOIN continents ON continents.contid = countries.continent GROUP BY countries.continent
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.id = countries.countryid JOIN continents ON countries.continent = continents.contid
  - SELECT continents.continent , COUNT( * ) FROM continents GROUP BY continents.continent
  - SELECT continents.continent , COUNT( * ) FROM continents
smbop_beam_inferred_code_w_terminals:
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.id = countries.countryid JOIN continents ON countries.continent = continents.contid GROUP BY continents.continent
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.id = countries.countryid JOIN continents ON countries.continent = continents.contid GROUP BY countries.continent
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.country = countries.countryid JOIN continents ON countries.continent = continents.contid GROUP BY continents.continent
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.country = countries.countryid JOIN continents ON countries.continent = continents.contid GROUP BY countries.continent
  - SELECT continents.continent , COUNT( * ) FROM countries JOIN car_makers ON countries.countryid = car_makers.id JOIN continents ON countries.continent = continents.contid GROUP BY continents.continent
  - SELECT continents.continent , COUNT( * ) FROM countries JOIN car_makers ON countries.countryid = car_makers.id JOIN continents ON countries.continent = continents.contid GROUP BY countries.continent
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.country = countries.countryid JOIN continents ON continents.contid = countries.continent GROUP BY countries.continent
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.id = countries.countryid JOIN continents ON countries.continent = continents.contid
  - SELECT continents.continent , COUNT( * ) FROM continents GROUP BY continents.continent
  - SELECT continents.continent , COUNT( * ) FROM continents
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- - contid
  - continent
- - contid
  - countryid
  - country
  - continent
- - contid
  - continent
- - contid
  - countryid
  - country
  - continent
- - countryid
  - id
  - continent
  - country
  - model
  - contid
  - maker
- - countryid
  - id
  - continent
  - makeid
  - country
  - model
  - contid
  - maker
- - contid
  - countryid
  - country
  - continent
- - countryid
  - id
  - continent
  - country
  - contid
  - maker
- - contid
  - continent
ratsql_beam_groupby_columns:
- - continent
- - continent
- - contid
- - continent
- - continent
- - continent
- - contid
- - continent
- - continent
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
ratsql_beam_constants:
- - 1
- - 1
- - 1
- - 1
- - 1
- - 1
- - 1
- - 1
- - 1
- - 1
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent AND continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model GROUP BY continents.Continent
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY continents.Continent
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.ContId
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent AND continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY continents.Continent
  - SELECT DISTINCT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY DISTINCT continents.Continent
ratsql_beam_inferred_code_w_terminals:
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent AND continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model GROUP BY continents.Continent
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY continents.Continent
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.ContId
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent AND continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY continents.Continent
  - SELECT DISTINCT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY DISTINCT continents.Continent
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.1044301986694336
  - -0.0998077392578125
  - -0.10548949241638184
  - -0.10425162315368652
  - -0.13652610778808594
  - -0.10305213928222656
  - -0.10705995559692383
  - -0.10116338729858398
  - -0.10498380661010742
  - -0.10500383377075195
  - -0.10462808609008789
  - -0.081539586186409
  - -0.1139974594116211
  - -0.1055750846862793
  - -0.10318565368652344
  - -0.12739849090576172
  - -0.10321235656738281
  - -0.10471487045288086
  - -0.10609579086303711
  - -0.10639286041259766
  - -0.13943709433078766
  - -0.11213278770446777
  - -0.1051945686340332
  - -0.11710834503173828
  - -0.10719156265258789
  - -0.10076665878295898
  - -0.10439205169677734
  - -0.10419416427612305
  - -0.32265424728393555
  - -0.11129522323608398
  - -0.10550999641418457
  - -0.10361766815185547
  - -0.10722923278808594
  - -0.10504269599914551
  - -0.09913492202758789
  - -0.10613870620727539
  - -0.14282464981079102
  - -0.10510635375976562
  - -0.10487842559814453
  - -0.6544881463050842
  - -0.10492086410522461
  - -0.10434579849243164
  - -0.36812636256217957
- - -0.1044301986694336
  - -0.0998077392578125
  - -0.10548949241638184
  - -0.10425162315368652
  - -0.13652610778808594
  - -0.10305213928222656
  - -0.10705995559692383
  - -0.10116338729858398
  - -0.10498380661010742
  - -0.10500383377075195
  - -0.10462808609008789
  - -0.081539586186409
  - -0.1139974594116211
  - -0.1055750846862793
  - -0.10318565368652344
  - -0.12739849090576172
  - -0.10321235656738281
  - -0.10471487045288086
  - -0.10609579086303711
  - -0.10639286041259766
  - -0.13943709433078766
  - -0.11213278770446777
  - -0.1051945686340332
  - -0.11710834503173828
  - -0.10719156265258789
  - -0.10076665878295898
  - -0.10439205169677734
  - -0.10419416427612305
  - -0.32265424728393555
  - -0.11129522323608398
  - -0.10550999641418457
  - -0.10361766815185547
  - -0.10722923278808594
  - -0.10504269599914551
  - -0.09913492202758789
  - -0.10613870620727539
  - -0.14282464981079102
  - -0.10510635375976562
  - -0.10487842559814453
  - -0.6544881463050842
  - -0.10492086410522461
  - -0.10434579849243164
  - -1.4579514265060425
- - -0.1044301986694336
  - -0.0998077392578125
  - -0.10548949241638184
  - -0.10425162315368652
  - -0.13652610778808594
  - -0.10305213928222656
  - -0.10705995559692383
  - -0.10116338729858398
  - -0.10498380661010742
  - -0.10500383377075195
  - -0.10462808609008789
  - -0.081539586186409
  - -0.1139974594116211
  - -0.1055750846862793
  - -0.10318565368652344
  - -0.12739849090576172
  - -0.10321235656738281
  - -0.10471487045288086
  - -0.10609579086303711
  - -0.10639286041259766
  - -0.13943709433078766
  - -0.11213278770446777
  - -0.1051945686340332
  - -0.11710834503173828
  - -0.10719156265258789
  - -0.10076665878295898
  - -0.10439205169677734
  - -0.10419416427612305
  - -2.1475489139556885
  - -0.10938763618469238
  - -0.10544395446777344
  - -0.10336923599243164
  - -0.10692930221557617
  - -0.10486984252929688
  - -0.09908056259155273
  - -0.1064448356628418
  - -0.13930988311767578
  - -0.10516023635864258
  - -0.10468101501464844
  - -0.6712920665740967
  - -0.1048579216003418
  - -0.10428333282470703
  - -0.3670188784599304
- - -0.1044301986694336
  - -0.0998077392578125
  - -0.10548949241638184
  - -0.10425162315368652
  - -0.13652610778808594
  - -0.10305213928222656
  - -0.10705995559692383
  - -0.10116338729858398
  - -0.10498380661010742
  - -0.10500383377075195
  - -0.10462808609008789
  - -0.081539586186409
  - -0.1139974594116211
  - -0.1055750846862793
  - -0.10318565368652344
  - -0.12739849090576172
  - -0.10321235656738281
  - -0.10471487045288086
  - -0.10609579086303711
  - -0.10639286041259766
  - -0.13943709433078766
  - -0.11213278770446777
  - -0.1051945686340332
  - -0.11710834503173828
  - -0.10719156265258789
  - -0.10076665878295898
  - -0.10439205169677734
  - -0.10419416427612305
  - -0.32265424728393555
  - -0.11129522323608398
  - -0.10550999641418457
  - -0.10361766815185547
  - -0.10722923278808594
  - -0.10504269599914551
  - -0.09913492202758789
  - -0.10613870620727539
  - -0.14282464981079102
  - -0.10510635375976562
  - -0.10487842559814453
  - -1.012852668762207
  - -0.10454893112182617
  - -0.10356712341308594
  - -2.053701877593994
- - -0.1044301986694336
  - -0.0998077392578125
  - -0.10548949241638184
  - -0.10425162315368652
  - -0.13652610778808594
  - -0.10305213928222656
  - -0.10705995559692383
  - -0.10116338729858398
  - -0.10498380661010742
  - -0.10500383377075195
  - -0.10462808609008789
  - -0.081539586186409
  - -0.1139974594116211
  - -0.1055750846862793
  - -0.10318565368652344
  - -0.12739849090576172
  - -0.10321235656738281
  - -0.10471487045288086
  - -0.10609579086303711
  - -0.10639286041259766
  - -0.13943709433078766
  - -0.11213278770446777
  - -0.1051945686340332
  - -0.11710834503173828
  - -0.10719156265258789
  - -0.10076665878295898
  - -0.10439205169677734
  - -0.10419416427612305
  - -0.32265424728393555
  - -0.11129522323608398
  - -0.10550999641418457
  - -0.10361766815185547
  - -0.10722923278808594
  - -0.10504269599914551
  - -0.09913492202758789
  - -0.10613870620727539
  - -0.14282464981079102
  - -0.10510635375976562
  - -0.10487842559814453
  - -3.5868334770202637
  - -0.10523319244384766
  - -0.10544013977050781
  - -0.19827187061309814
- - -0.1044301986694336
  - -0.0998077392578125
  - -0.10548949241638184
  - -0.10425162315368652
  - -0.13652610778808594
  - -0.10305213928222656
  - -0.10705995559692383
  - -0.10116338729858398
  - -0.10498380661010742
  - -0.10500383377075195
  - -0.10462808609008789
  - -0.081539586186409
  - -0.1139974594116211
  - -0.1055750846862793
  - -0.10318565368652344
  - -0.12739849090576172
  - -0.10321235656738281
  - -0.10471487045288086
  - -0.10609579086303711
  - -0.10639286041259766
  - -0.13943709433078766
  - -0.11213278770446777
  - -0.1051945686340332
  - -0.11710834503173828
  - -0.10719156265258789
  - -0.10076665878295898
  - -0.10439205169677734
  - -0.10419416427612305
  - -0.32265424728393555
  - -0.11129522323608398
  - -0.10550999641418457
  - -0.10361766815185547
  - -0.10722923278808594
  - -0.10504269599914551
  - -0.09913492202758789
  - -0.10613870620727539
  - -0.14282464981079102
  - -0.10510635375976562
  - -0.10487842559814453
  - -3.507448434829712
  - -0.10571718215942383
  - -0.10394906997680664
  - -0.3675294816493988
- - -0.1044301986694336
  - -0.0998077392578125
  - -0.10548949241638184
  - -0.10425162315368652
  - -0.13652610778808594
  - -0.10305213928222656
  - -0.10705995559692383
  - -0.10116338729858398
  - -0.10498380661010742
  - -0.10500383377075195
  - -0.10462808609008789
  - -0.081539586186409
  - -0.1139974594116211
  - -0.1055750846862793
  - -0.10318565368652344
  - -0.12739849090576172
  - -0.10321235656738281
  - -0.10471487045288086
  - -0.10609579086303711
  - -0.10639286041259766
  - -0.13943709433078766
  - -0.11213278770446777
  - -0.1051945686340332
  - -0.11710834503173828
  - -0.10719156265258789
  - -0.10076665878295898
  - -0.10439205169677734
  - -0.10419416427612305
  - -2.1475489139556885
  - -0.10938763618469238
  - -0.10544395446777344
  - -0.10336923599243164
  - -0.10692930221557617
  - -0.10486984252929688
  - -0.09908056259155273
  - -0.1064448356628418
  - -0.13930988311767578
  - -0.10516023635864258
  - -0.10468101501464844
  - -0.6712920665740967
  - -0.1048579216003418
  - -0.10428333282470703
  - -1.4616903066635132
- - -0.1044301986694336
  - -0.0998077392578125
  - -0.10548949241638184
  - -0.10425162315368652
  - -0.13652610778808594
  - -0.10305213928222656
  - -0.10705995559692383
  - -0.10116338729858398
  - -0.10498380661010742
  - -0.10500383377075195
  - -0.10462808609008789
  - -0.081539586186409
  - -0.1139974594116211
  - -0.1055750846862793
  - -0.10318565368652344
  - -0.12739849090576172
  - -0.10321235656738281
  - -0.10471487045288086
  - -0.10609579086303711
  - -0.10639286041259766
  - -0.13943709433078766
  - -0.11213278770446777
  - -0.1051945686340332
  - -0.11710834503173828
  - -0.10719156265258789
  - -0.10076665878295898
  - -0.10439205169677734
  - -0.10419416427612305
  - -0.32265424728393555
  - -0.11129522323608398
  - -0.10550999641418457
  - -0.10361766815185547
  - -0.10722923278808594
  - -0.10504269599914551
  - -0.09913492202758789
  - -0.10613870620727539
  - -0.14282464981079102
  - -0.10510635375976562
  - -0.10487842559814453
  - -3.327486515045166
  - -0.10452890396118164
  - -0.10344696044921875
  - -0.7935708165168762
- - -0.1044301986694336
  - -0.0998077392578125
  - -0.10548949241638184
  - -0.10425162315368652
  - -0.13652610778808594
  - -0.10305213928222656
  - -0.10705995559692383
  - -0.10116338729858398
  - -0.10498380661010742
  - -0.10500383377075195
  - -0.10462808609008789
  - -0.081539586186409
  - -3.437051296234131
  - -0.10532450675964355
  - -0.10266923904418945
  - -0.11558294296264648
  - -0.10286998748779297
  - -0.10476493835449219
  - -0.1061410903930664
  - -0.10636138916015625
  - -0.14211048185825348
  - -0.11224246025085449
  - -0.10525202751159668
  - -0.11793279647827148
  - -0.10811376571655273
  - -0.10038185119628906
  - -0.10451173782348633
  - -0.10417795181274414
  - -0.33481988310813904
  - -0.11124444007873535
  - -0.10550308227539062
  - -0.10364055633544922
  - -0.10721898078918457
  - -0.1050417423248291
  - -0.09916019439697266
  - -0.10614967346191406
  - -0.14253759384155273
  - -0.10508489608764648
  - -0.10485649108886719
  - -0.6566221117973328
  - -0.10492229461669922
  - -0.10435342788696289
  - -0.368131548166275
- - -0.1044301986694336
  - -0.0998077392578125
  - -0.10548949241638184
  - -0.10425162315368652
  - -0.13652610778808594
  - -0.10305213928222656
  - -0.10705995559692383
  - -0.10116338729858398
  - -0.10498380661010742
  - -0.10500383377075195
  - -0.10462808609008789
  - -0.081539586186409
  - -0.1139974594116211
  - -0.1055750846862793
  - -0.10318565368652344
  - -0.12739849090576172
  - -0.10321235656738281
  - -0.10471487045288086
  - -0.10609579086303711
  - -0.10639286041259766
  - -0.13943709433078766
  - -0.11213278770446777
  - -0.1051945686340332
  - -0.11710834503173828
  - -0.10719156265258789
  - -0.10076665878295898
  - -0.10439205169677734
  - -0.10419416427612305
  - -0.32265424728393555
  - -3.4585964679718018
  - -0.10549020767211914
  - -0.10334014892578125
  - -0.10708975791931152
  - -0.10497546195983887
  - -0.09911727905273438
  - -0.10576820373535156
  - -0.13672256469726562
  - -0.10525751113891602
  - -0.10482501983642578
  - -0.6521596908569336
  - -0.10492658615112305
  - -0.10438346862792969
  - -0.3680429458618164
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
