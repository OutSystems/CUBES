db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/cars_data.csv
output: tests-examples/db2csv/car_1/tables/0083_dev.csv
raw_question: What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ? 
question_index: 169 
constants:
 - 8
 - 1980
functions:
 - max
columns:
 - cylinders
 - mpg
 - year
filters:
 - '='
 - '<'
comment: |-
  select max(mpg)
  from cars_data
  where cylinders = 8
    or year < 1980

sql: |-
  select max(mpg)
  from cars_data
  where cylinders = 8
    or year < 1980
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
smbop_beam_constants:
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
smbop_beam_functions:
- - max
- - max
- - max
- - max
- - max
- - sum
smbop_beam_columns:
- - cylinders
  - mpg
  - year
- - cylinders
  - mpg
  - year
- - cylinders
  - mpg
  - year
- - cylinders
  - mpg
  - year
- - cylinders
  - mpg
  - year
- - cylinders
  - mpg
  - year
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
  - '<'
- - '='
  - '<'
- - '='
  - '<'
- - '='
  - '<'
- - '>'
  - '<'
- - '='
  - '<'
smbop_beam_inferred_code:
  - SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = '8' OR cars_data.year<1980
  - SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = 8 OR cars_data.year<1980
  - SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = '8' AND cars_data.year<1980
  - SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year<1980
  - SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders > 8 OR cars_data.year<1980
  - SELECT SUM( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = 8 OR cars_data.year<1980
smbop_beam_inferred_code_w_terminals:
  - SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = '8' OR cars_data.year<1980
  - SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = 8 OR cars_data.year<1980
  - SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = '8' AND cars_data.year<1980
  - SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year<1980
  - SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders > 8 OR cars_data.year<1980
  - SELECT SUM( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = 8 OR cars_data.year<1980
ratsql_beam_join_columns:
- []
- []
- []
- []
- []
- []
- - model
  - country
  - contid
  - continent
  - countryid
  - id
  - maker
  - makeid
- - model
  - id
  - makeid
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
ratsql_beam_constants:
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
- - 8
  - 1980
ratsql_beam_functions:
- - max
- - max
- - max
- - max
- - max
- - max
- - max
- - max
ratsql_beam_columns:
- - year
  - mpg
- - cylinders
  - mpg
  - year
- - year
  - mpg
- - cylinders
  - year
- - year
  - mpg
- - year
  - mpg
- - year
  - mpg
- - year
  - mpg
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
  - '<'
- - '='
  - '<'
- - '='
  - '<'
- - '='
  - '<'
- - '='
  - '<'
- - '='
  - '<'
- - '='
  - '<'
- - '='
  - '<'
ratsql_beam_inferred_code:
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Year = 'terminal' OR cars_data.Year < 'terminal'
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal' OR cars_data.Year < 'terminal'
  - SELECT DISTINCT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Year = 'terminal' OR cars_data.Year < 'terminal'
  - SELECT Max(cars_data.Cylinders) FROM cars_data WHERE cars_data.Year = 'terminal' OR cars_data.Year < 'terminal'
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE DISTINCT cars_data.Year = 'terminal' OR cars_data.Year < 'terminal'
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Year = 'terminal' OR DISTINCT cars_data.Year < 'terminal'
  - SELECT Max(DISTINCT cars_data.MPG) FROM cars_data WHERE cars_data.Year = 'terminal' OR cars_data.Year < 'terminal'
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Year = 'terminal' OR cars_data.Year < 'terminal' LIMIT 1
  - SELECT Max(cars_data.MPG) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal' OR cars_data.Year < 'terminal'
  - SELECT Max(cars_data.MPG) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal' OR cars_data.Year < 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Year = 1980 OR cars_data.Year < 8
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980
  - SELECT DISTINCT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Year = 1980 OR cars_data.Year < 8
  - SELECT Max(cars_data.Cylinders) FROM cars_data WHERE cars_data.Year = 1980 OR cars_data.Year < 8
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE DISTINCT cars_data.Year = 1980 OR cars_data.Year < 8
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Year = 1980 OR DISTINCT cars_data.Year < 8
  - SELECT Max(DISTINCT cars_data.MPG) FROM cars_data WHERE cars_data.Year = 1980 OR cars_data.Year < 8
  - SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Year = 1980 OR cars_data.Year < 8 LIMIT 1
  - SELECT Max(cars_data.MPG) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1980 OR cars_data.Year < 8
  - SELECT Max(cars_data.MPG) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1980 OR cars_data.Year < 8
ratsql_beam_score_history:
- - -0.1045694351196289
  - -0.10407161712646484
  - -0.12501144409179688
  - -0.10406327247619629
  - -0.10402154922485352
  - -0.09968996047973633
  - -0.06957006454467773
  - -0.10114192962646484
  - -0.1049952507019043
  - -0.10453510284423828
  - -0.1050424575805664
  - -0.1222711130976677
  - -0.11134839057922363
  - -0.10502219200134277
  - -0.0991053581237793
  - -0.05179405212402344
  - -0.09385156631469727
  - -0.10781526565551758
  - -0.10027170181274414
  - -0.10103034973144531
  - -0.10489845275878906
  - -0.10443449020385742
  - -0.10503864288330078
  - -0.16121473908424377
  - -0.11133241653442383
  - -0.10512566566467285
  - -0.10443544387817383
  - -0.11335325241088867
  - -0.1051025390625
  - -0.10094165802001953
  - -0.10486030578613281
  - -0.10693788528442383
  - -0.10419368743896484
  - -0.0867210179567337
  - -0.11119389533996582
  - -0.10555481910705566
  - -0.10524988174438477
  - -0.10167455673217773
  - -0.10230159759521484
  - -0.10822534561157227
  - -0.10458135604858398
  - -0.09769058227539062
  - -0.10434341430664062
  - -0.10763025283813477
  - -0.10525083541870117
  - -0.10329437255859375
  - -0.10053642094135284
- - -0.1045694351196289
  - -0.10407161712646484
  - -0.12501144409179688
  - -0.10406327247619629
  - -0.10402154922485352
  - -0.09968996047973633
  - -0.06957006454467773
  - -0.10114192962646484
  - -0.1049952507019043
  - -0.10453510284423828
  - -0.1050424575805664
  - -0.1222711130976677
  - -0.11134839057922363
  - -0.10502219200134277
  - -0.0991053581237793
  - -0.05179405212402344
  - -0.09385156631469727
  - -0.10781526565551758
  - -0.10027170181274414
  - -0.10103034973144531
  - -0.10489845275878906
  - -0.10443449020385742
  - -0.10503864288330078
  - -2.663355588912964
  - -0.11237001419067383
  - -0.1049959659576416
  - -0.10374641418457031
  - -0.11842536926269531
  - -0.1103830337524414
  - -0.10090112686157227
  - -0.1047525405883789
  - -0.10726213455200195
  - -0.1041097640991211
  - -0.09184300899505615
  - -0.11120080947875977
  - -0.10554957389831543
  - -0.10461711883544922
  - -0.10169315338134766
  - -0.10233736038208008
  - -0.10819339752197266
  - -0.10459589958190918
  - -0.09768962860107422
  - -0.10438346862792969
  - -0.10776758193969727
  - -0.10526037216186523
  - -0.10331058502197266
  - -0.10085170716047287
- - -0.1045694351196289
  - -0.10407161712646484
  - -3.1261472702026367
  - -0.10398197174072266
  - -0.1049356460571289
  - -0.09925031661987305
  - -0.07089710235595703
  - -0.1010732650756836
  - -0.10503673553466797
  - -0.10451602935791016
  - -0.10497188568115234
  - -0.12176178395748138
  - -0.11147093772888184
  - -0.10502266883850098
  - -0.09781408309936523
  - -0.05169534683227539
  - -0.09305191040039062
  - -0.1079568862915039
  - -0.10025453567504883
  - -0.10103034973144531
  - -0.10489559173583984
  - -0.10444068908691406
  - -0.10501623153686523
  - -0.16123098134994507
  - -0.1113271713256836
  - -0.10512876510620117
  - -0.10442876815795898
  - -0.1130824089050293
  - -0.10537004470825195
  - -0.10095596313476562
  - -0.10486650466918945
  - -0.1069478988647461
  - -0.10419464111328125
  - -0.08638866990804672
  - -0.11119580268859863
  - -0.10555505752563477
  - -0.10527276992797852
  - -0.10167360305786133
  - -0.10229873657226562
  - -0.10822820663452148
  - -0.10458111763000488
  - -0.0976877212524414
  - -0.10433101654052734
  - -0.10761737823486328
  - -0.10525131225585938
  - -0.10329341888427734
  - -0.10058784484863281
- - -0.1045694351196289
  - -0.10407161712646484
  - -0.12501144409179688
  - -0.10406327247619629
  - -0.10402154922485352
  - -0.09968996047973633
  - -0.06957006454467773
  - -0.10114192962646484
  - -0.1049952507019043
  - -0.10453510284423828
  - -0.1050424575805664
  - -3.188852071762085
  - -0.11058187484741211
  - -0.1052558422088623
  - -0.09709024429321289
  - -0.05604362487792969
  - -0.09790802001953125
  - -0.10568666458129883
  - -0.10051870346069336
  - -0.10106182098388672
  - -0.10500192642211914
  - -0.10408973693847656
  - -0.10483980178833008
  - -0.15743552148342133
  - -0.11115574836730957
  - -0.10516881942749023
  - -0.10444021224975586
  - -0.11517047882080078
  - -0.10420083999633789
  - -0.10095834732055664
  - -0.10494518280029297
  - -0.10574150085449219
  - -0.1041421890258789
  - -0.08585110306739807
  - -0.1112065315246582
  - -0.10553669929504395
  - -0.10509443283081055
  - -0.10175466537475586
  - -0.1023406982421875
  - -0.10822296142578125
  - -0.10457921028137207
  - -0.09768104553222656
  - -0.10432052612304688
  - -0.10767793655395508
  - -0.1052403450012207
  - -0.10329294204711914
  - -0.10088241845369339
- - -0.1045694351196289
  - -0.10407161712646484
  - -0.12501144409179688
  - -0.10406327247619629
  - -0.10402154922485352
  - -0.09968996047973633
  - -0.06957006454467773
  - -0.10114192962646484
  - -0.1049952507019043
  - -0.10453510284423828
  - -0.1050424575805664
  - -0.1222711130976677
  - -0.11134839057922363
  - -0.10502219200134277
  - -0.0991053581237793
  - -0.05179405212402344
  - -0.09385156631469727
  - -0.10781526565551758
  - -0.10027170181274414
  - -0.10103034973144531
  - -0.10489845275878906
  - -0.10443449020385742
  - -0.10503864288330078
  - -0.16121473908424377
  - -3.455991506576538
  - -0.10564184188842773
  - -0.10459709167480469
  - -0.10371685028076172
  - -0.10318470001220703
  - -0.10106897354125977
  - -0.10494232177734375
  - -0.10617733001708984
  - -0.10410118103027344
  - -0.0851004347205162
  - -0.11119961738586426
  - -0.10554647445678711
  - -0.10548877716064453
  - -0.10168123245239258
  - -0.10234546661376953
  - -0.10822200775146484
  - -0.10459208488464355
  - -0.0976858139038086
  - -0.10440206527709961
  - -0.10775279998779297
  - -0.10523366928100586
  - -0.10329151153564453
  - -0.10098177939653397
- - -0.1045694351196289
  - -0.10407161712646484
  - -0.12501144409179688
  - -0.10406327247619629
  - -0.10402154922485352
  - -0.09968996047973633
  - -0.06957006454467773
  - -0.10114192962646484
  - -0.1049952507019043
  - -0.10453510284423828
  - -0.1050424575805664
  - -0.1222711130976677
  - -0.11134839057922363
  - -0.10502219200134277
  - -0.0991053581237793
  - -0.05179405212402344
  - -0.09385156631469727
  - -0.10781526565551758
  - -0.10027170181274414
  - -0.10103034973144531
  - -0.10489845275878906
  - -0.10443449020385742
  - -0.10503864288330078
  - -0.16121473908424377
  - -0.11133241653442383
  - -0.10512566566467285
  - -0.10443544387817383
  - -0.11335325241088867
  - -0.1051025390625
  - -0.10094165802001953
  - -0.10486030578613281
  - -0.10693788528442383
  - -0.10419368743896484
  - -0.0867210179567337
  - -3.4667186737060547
  - -0.10560822486877441
  - -0.10408830642700195
  - -0.1018056869506836
  - -0.10246419906616211
  - -0.10815930366516113
  - -0.1046442985534668
  - -0.09739398956298828
  - -0.10514211654663086
  - -0.10758066177368164
  - -0.10521125793457031
  - -0.1032710075378418
  - -0.10032563656568527
- - -0.1045694351196289
  - -0.10407161712646484
  - -0.12501144409179688
  - -0.10406327247619629
  - -0.10402154922485352
  - -0.09968996047973633
  - -0.06957006454467773
  - -0.10114192962646484
  - -0.1049952507019043
  - -0.10453510284423828
  - -0.1050424575805664
  - -0.1222711130976677
  - -3.472515821456909
  - -0.10497808456420898
  - -0.10021781921386719
  - -0.0496068000793457
  - -0.0922236442565918
  - -0.10764932632446289
  - -0.10023164749145508
  - -0.10104084014892578
  - -0.1049046516418457
  - -0.10436153411865234
  - -0.10502290725708008
  - -0.15887263417243958
  - -0.11133599281311035
  - -0.10511970520019531
  - -0.10442018508911133
  - -0.11401176452636719
  - -0.10548257827758789
  - -0.10093975067138672
  - -0.10486507415771484
  - -0.10642719268798828
  - -0.10417985916137695
  - -0.08630064874887466
  - -0.11119365692138672
  - -0.10555195808410645
  - -0.10525703430175781
  - -0.1016683578491211
  - -0.10230731964111328
  - -0.10822534561157227
  - -0.10458207130432129
  - -0.09768438339233398
  - -0.10438680648803711
  - -0.10771560668945312
  - -0.10524940490722656
  - -0.10329961776733398
  - -0.10081031918525696
- - -0.1045694351196289
  - -0.10407161712646484
  - -0.12501144409179688
  - -0.10406327247619629
  - -0.10402154922485352
  - -0.09968996047973633
  - -0.06957006454467773
  - -0.10114192962646484
  - -0.1049952507019043
  - -0.10453510284423828
  - -0.1050424575805664
  - -0.1222711130976677
  - -0.11134839057922363
  - -0.10502219200134277
  - -0.0991053581237793
  - -0.05179405212402344
  - -0.09385156631469727
  - -0.10781526565551758
  - -0.10027170181274414
  - -0.10103034973144531
  - -0.10489845275878906
  - -0.10443449020385742
  - -0.10503864288330078
  - -0.16121473908424377
  - -0.11133241653442383
  - -0.10512566566467285
  - -0.10443544387817383
  - -0.11335325241088867
  - -0.1051025390625
  - -0.10094165802001953
  - -0.10486030578613281
  - -0.10693788528442383
  - -0.10419368743896484
  - -0.0867210179567337
  - -0.11119389533996582
  - -0.10555481910705566
  - -0.10524988174438477
  - -0.10167455673217773
  - -0.10230159759521484
  - -3.5481436252593994
  - -0.10448551177978516
  - -0.0978860855102539
  - -0.10487937927246094
  - -0.10756349563598633
  - -0.10511636734008789
  - -0.10338449478149414
  - -0.10342245548963547
- - -0.1045694351196289
  - -0.10407161712646484
  - -0.12501144409179688
  - -0.10406327247619629
  - -0.10402154922485352
  - -0.09968996047973633
  - -0.06957006454467773
  - -0.10114192962646484
  - -0.1049952507019043
  - -0.10453510284423828
  - -0.1050424575805664
  - -0.1222711130976677
  - -0.11134839057922363
  - -0.10502219200134277
  - -0.0991053581237793
  - -0.05179405212402344
  - -0.09385156631469727
  - -0.10781526565551758
  - -0.10027170181274414
  - -0.10103034973144531
  - -0.10489845275878906
  - -0.10443449020385742
  - -0.10503864288330078
  - -0.16121473908424377
  - -0.11133241653442383
  - -0.10512566566467285
  - -0.10443544387817383
  - -0.11335325241088867
  - -0.1051025390625
  - -0.10094165802001953
  - -0.10486030578613281
  - -0.10693788528442383
  - -0.10419368743896484
  - -0.0867210179567337
  - -0.11119389533996582
  - -0.10555481910705566
  - -0.10524988174438477
  - -0.10167455673217773
  - -0.10230159759521484
  - -0.10822534561157227
  - -0.10458135604858398
  - -0.09769058227539062
  - -0.10434341430664062
  - -0.10763025283813477
  - -0.10525083541870117
  - -0.10329437255859375
  - -3.8732314109802246
- - -0.1045694351196289
  - -0.10407161712646484
  - -0.12501144409179688
  - -0.10406327247619629
  - -0.10402154922485352
  - -0.09968996047973633
  - -0.06957006454467773
  - -0.10114192962646484
  - -0.1049952507019043
  - -0.10453510284423828
  - -0.1050424575805664
  - -0.1222711130976677
  - -0.11134839057922363
  - -0.10502219200134277
  - -0.0991053581237793
  - -0.05179405212402344
  - -0.09385156631469727
  - -0.10781526565551758
  - -0.10027170181274414
  - -0.10103034973144531
  - -0.10489845275878906
  - -0.10443449020385742
  - -0.10503864288330078
  - -0.16121473908424377
  - -0.11133241653442383
  - -0.10512566566467285
  - -0.10443544387817383
  - -0.11335325241088867
  - -0.1051025390625
  - -0.10094165802001953
  - -0.10486030578613281
  - -0.10693788528442383
  - -0.10419368743896484
  - -0.0867210179567337
  - -0.11119389533996582
  - -0.10555481910705566
  - -0.10524988174438477
  - -0.10167455673217773
  - -0.10230159759521484
  - -0.10822534561157227
  - -0.10458135604858398
  - -0.09769058227539062
  - -0.10434341430664062
  - -0.10763025283813477
  - -0.10525083541870117
  - -0.10329437255859375
  - -3.8983185291290283
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'MPG'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
