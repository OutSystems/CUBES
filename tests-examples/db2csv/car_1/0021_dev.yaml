db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/car_makers.csv
 - tests-examples/db2csv/car_1/tables/countries.csv
output: tests-examples/db2csv/car_1/tables/0021_dev.csv
raw_question: Which of the countries has the most car makers? List the country name. 
question_index: 107 
has_limit: True 
has_order_by: True 
order_by_direction:
 -  desc 
constants:
 - '1'
join_columns:
 - countryid
 - country
groupby_columns:
 - country
orderby_columns:
 - country
functions:
 - count
columns: []
filters: []
ieu: []
comment: |-
  SELECT T2.CountryName
  FROM CAR_MAKERS AS T1
  JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId
  GROUP BY T1.Country
  ORDER BY Count(*) DESC
  LIMIT 1;

sql: |-
  SELECT T2.CountryName
  FROM CAR_MAKERS AS T1
  JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId
  GROUP BY T1.Country
  ORDER BY Count(*) DESC
  LIMIT 1;
smbop_beam_join_columns:
- - countryid
  - country
- - countryid
  - country
- - countryid
  - country
- - countryid
  - country
- - countryid
  - country
- - countryid
  - country
- - countryid
  - country
- - countryid
  - country
- - countryid
  - country
- - countryid
  - country
smbop_beam_groupby_columns:
- - countryid
- - country
- - countryid
- - country
- - countryname
- - country
- - countryid
- - country
- - countryid
- - country
smbop_beam_orderby_columns:
- - order
- - order
- - order
- - order
- - order
- - order
- - order
- - order
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
smbop_beam_constants:
- - '1'
- - '1'
- - '1'
- - '1'
- - '1'
- - '1'
- - '1'
- []
- []
- []
smbop_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- []
- []
smbop_beam_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid ORDER BY COUNT( * ) DESC LIMIT 1
  - SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY car_makers.country ORDER BY COUNT( * ) DESC LIMIT 1
  - SELECT countries.countryname FROM car_makers JOIN countries ON car_makers.country = countries.countryid GROUP BY countries.countryid ORDER BY COUNT( * ) DESC LIMIT 1
  - SELECT countries.countryname FROM car_makers JOIN countries ON car_makers.country = countries.countryid GROUP BY car_makers.country ORDER BY COUNT( * ) DESC LIMIT 1
  - SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname ORDER BY COUNT( * ) DESC LIMIT 1
  - SELECT countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY car_makers.country ORDER BY COUNT( * ) DESC LIMIT 1
  - SELECT countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid ORDER BY COUNT( * ) DESC LIMIT 1
  - SELECT countries.countryname FROM car_makers JOIN countries ON car_makers.country = countries.countryid GROUP BY car_makers.country ORDER BY COUNT( * ) DESC
  - SELECT countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid
  - SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY car_makers.country
smbop_beam_inferred_code_w_terminals:
  - SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid ORDER BY COUNT( * ) DESC LIMIT 1
  - SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY car_makers.country ORDER BY COUNT( * ) DESC LIMIT 1
  - SELECT countries.countryname FROM car_makers JOIN countries ON car_makers.country = countries.countryid GROUP BY countries.countryid ORDER BY COUNT( * ) DESC LIMIT 1
  - SELECT countries.countryname FROM car_makers JOIN countries ON car_makers.country = countries.countryid GROUP BY car_makers.country ORDER BY COUNT( * ) DESC LIMIT 1
  - SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname ORDER BY COUNT( * ) DESC LIMIT 1
  - SELECT countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY car_makers.country ORDER BY COUNT( * ) DESC LIMIT 1
  - SELECT countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid ORDER BY COUNT( * ) DESC LIMIT 1
  - SELECT countries.countryname FROM car_makers JOIN countries ON car_makers.country = countries.countryid GROUP BY car_makers.country ORDER BY COUNT( * ) DESC
  - SELECT countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid
  - SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY car_makers.country
smbop_beam_has_limit:
  - True
  - True
  - True
  - True
  - True
  - True
  - True
  - False
  - False
  - False
smbop_beam_has_order_by:
  - True
  - True
  - True
  - True
  - True
  - True
  - True
  - True
  - False
  - False
smbop_beam_order_by_direction:
- -  desc 
- -  desc 
- -  desc 
- -  desc 
- -  desc 
- -  desc 
- -  desc 
- []
- []
- []
ratsql_beam_join_columns:
- - countryid
  - country
- - countryid
  - country
- - countryid
  - country
- - countryid
  - country
- []
- - countryid
  - country
- - contid
  - continent
- - countryid
  - id
  - makeid
  - country
  - model
  - maker
ratsql_beam_groupby_columns:
- - countryname
- - country
- - id
- - countryname
- - countryname
- - countryname
- - countryname
- - countryname
ratsql_beam_orderby_columns:
- - order
- - order
- - order
- - order
- - order
- - order
- - order
- - order
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
ratsql_beam_constants:
- - '1'
- - '1'
- - '1'
- - '1'
- - '1'
- - '1'
- - '1'
- []
- - '1'
- - '1'
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1
  - SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY car_makers.Country ORDER BY Count(*) Desc LIMIT 1
  - SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY car_makers.Id ORDER BY Count(*) Desc LIMIT 1
  - SELECT DISTINCT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1
  - SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY DISTINCT countries.CountryName ORDER BY Count(*) Desc LIMIT 1
  - SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY Count(DISTINCT *) Desc LIMIT 1
  - SELECT countries.CountryName FROM countries GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1
  - SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY Count(*) Desc
  - SELECT countries.CountryName FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1
  - SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1
ratsql_beam_inferred_code_w_terminals:
  - SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1
  - SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY car_makers.Country ORDER BY Count(*) Desc LIMIT 1
  - SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY car_makers.Id ORDER BY Count(*) Desc LIMIT 1
  - SELECT DISTINCT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1
  - SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY DISTINCT countries.CountryName ORDER BY Count(*) Desc LIMIT 1
  - SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY Count(DISTINCT *) Desc LIMIT 1
  - SELECT countries.CountryName FROM countries GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1
  - SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY Count(*) Desc
  - SELECT countries.CountryName FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1
  - SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1
ratsql_beam_has_limit:
  - True
  - True
  - True
  - True
  - True
  - False
  - True
  - True
ratsql_beam_has_order_by:
  - True
  - True
  - True
  - True
  - True
  - True
  - True
  - True
ratsql_beam_order_by_direction:
- -  desc 
- -  desc 
- -  desc 
- -  desc 
- -  desc 
- []
- -  desc 
- -  desc 
ratsql_beam_score_history:
- - -0.1038064956665039
  - -0.1043558120727539
  - -0.10454654693603516
  - -0.1040945053100586
  - -0.1008448600769043
  - -0.10232067108154297
  - -0.1042623519897461
  - -0.10093307495117188
  - -0.10425853729248047
  - -0.10525751113891602
  - -0.10495233535766602
  - -0.09609905630350113
  - -0.1132059097290039
  - -0.10472297668457031
  - -0.11358118057250977
  - -0.10894536972045898
  - -0.1078495979309082
  - -0.10408592224121094
  - -0.10490846633911133
  - -0.3503618836402893
  - -0.11170840263366699
  - -0.10557293891906738
  - -0.1002507209777832
  - -0.09963083267211914
  - -0.10028219223022461
  - -0.10226964950561523
  - -0.09089422225952148
  - -0.10582876205444336
  - -0.10465526580810547
  - -0.1136789321899414
  - -0.13040418922901154
  - -0.11039280891418457
  - -0.10576057434082031
  - -0.09935927391052246
  - -0.10502243041992188
  - -0.09940338134765625
  - -0.10518407821655273
  - -0.11517906188964844
  - -0.10525369644165039
  - -0.10530662536621094
  - -0.09147852659225464
  - -0.10484075546264648
  - -0.10475349426269531
  - -0.11769773066043854
- - -0.1038064956665039
  - -0.1043558120727539
  - -0.10454654693603516
  - -0.1040945053100586
  - -0.1008448600769043
  - -0.10232067108154297
  - -0.1042623519897461
  - -0.10093307495117188
  - -0.10425853729248047
  - -0.10525751113891602
  - -0.10495233535766602
  - -0.09609905630350113
  - -0.1132059097290039
  - -0.10472297668457031
  - -0.11358118057250977
  - -0.10894536972045898
  - -0.1078495979309082
  - -0.10408592224121094
  - -0.10490846633911133
  - -2.3435206413269043
  - -0.11227798461914062
  - -0.10579061508178711
  - -0.10143899917602539
  - -0.10013532638549805
  - -0.1013479232788086
  - -0.10252857208251953
  - -0.08958578109741211
  - -0.10593938827514648
  - -0.1045684814453125
  - -0.11312294006347656
  - -0.13071857392787933
  - -0.11032438278198242
  - -0.10578536987304688
  - -0.09917783737182617
  - -0.10503530502319336
  - -0.09958410263061523
  - -0.10624885559082031
  - -0.11572599411010742
  - -0.10529899597167969
  - -0.10521507263183594
  - -0.09213104099035263
  - -0.10477924346923828
  - -0.10475921630859375
  - -0.1188473030924797
- - -0.1038064956665039
  - -0.1043558120727539
  - -0.10454654693603516
  - -0.1040945053100586
  - -0.1008448600769043
  - -0.10232067108154297
  - -0.1042623519897461
  - -0.10093307495117188
  - -0.10425853729248047
  - -0.10525751113891602
  - -0.10495233535766602
  - -0.09609905630350113
  - -0.1132059097290039
  - -0.10472297668457031
  - -0.11358118057250977
  - -0.10894536972045898
  - -0.1078495979309082
  - -0.10408592224121094
  - -0.10490846633911133
  - -3.283740520477295
  - -0.11148500442504883
  - -0.10628795623779297
  - -0.10081338882446289
  - -0.1013946533203125
  - -0.10114622116088867
  - -0.10326051712036133
  - -0.08986043930053711
  - -0.1058034896850586
  - -0.10460948944091797
  - -0.11326789855957031
  - -0.13122053444385529
  - -0.11035323143005371
  - -0.10578179359436035
  - -0.09943914413452148
  - -0.10502433776855469
  - -0.0993804931640625
  - -0.10567235946655273
  - -0.11568450927734375
  - -0.1052713394165039
  - -0.10530805587768555
  - -0.09233877807855606
  - -0.10480260848999023
  - -0.10484743118286133
  - -0.1178470328450203
- - -0.1038064956665039
  - -0.1043558120727539
  - -0.10454654693603516
  - -0.1040945053100586
  - -0.1008448600769043
  - -0.10232067108154297
  - -0.1042623519897461
  - -0.10093307495117188
  - -0.10425853729248047
  - -0.10525751113891602
  - -0.10495233535766602
  - -0.09609905630350113
  - -3.4534103870391846
  - -0.10446572303771973
  - -0.11368227005004883
  - -0.11673355102539062
  - -0.1049051284790039
  - -0.10437297821044922
  - -0.10475730895996094
  - -0.34068986773490906
  - -0.1116478443145752
  - -0.10556983947753906
  - -0.10025596618652344
  - -0.09956836700439453
  - -0.1003103256225586
  - -0.10227727890014648
  - -0.09084796905517578
  - -0.10584735870361328
  - -0.1046595573425293
  - -0.1136631965637207
  - -0.13044092059135437
  - -0.11039614677429199
  - -0.10576486587524414
  - -0.09933829307556152
  - -0.10502219200134277
  - -0.09939289093017578
  - -0.10518598556518555
  - -0.11517333984375
  - -0.10525369644165039
  - -0.10530805587768555
  - -0.09153574705123901
  - -0.10483980178833008
  - -0.10475921630859375
  - -0.11766137927770615
- - -0.1038064956665039
  - -0.1043558120727539
  - -0.10454654693603516
  - -0.1040945053100586
  - -0.1008448600769043
  - -0.10232067108154297
  - -0.1042623519897461
  - -0.10093307495117188
  - -0.10425853729248047
  - -0.10525751113891602
  - -0.10495233535766602
  - -0.09609905630350113
  - -0.1132059097290039
  - -0.10472297668457031
  - -0.11358118057250977
  - -0.10894536972045898
  - -0.1078495979309082
  - -0.10408592224121094
  - -0.10490846633911133
  - -0.3503618836402893
  - -3.4609148502349854
  - -0.1046762466430664
  - -0.10187578201293945
  - -0.1009669303894043
  - -0.10091066360473633
  - -0.10226249694824219
  - -0.09032297134399414
  - -0.10596656799316406
  - -0.10459136962890625
  - -0.11369562149047852
  - -0.13023759424686432
  - -0.11037993431091309
  - -0.10575056076049805
  - -0.09923171997070312
  - -0.10502791404724121
  - -0.09938812255859375
  - -0.10513114929199219
  - -0.11545610427856445
  - -0.10525846481323242
  - -0.10530567169189453
  - -0.08949825912714005
  - -0.10488367080688477
  - -0.104705810546875
  - -0.1195763498544693
- - -0.1038064956665039
  - -0.1043558120727539
  - -0.10454654693603516
  - -0.1040945053100586
  - -0.1008448600769043
  - -0.10232067108154297
  - -0.1042623519897461
  - -0.10093307495117188
  - -0.10425853729248047
  - -0.10525751113891602
  - -0.10495233535766602
  - -0.09609905630350113
  - -0.1132059097290039
  - -0.10472297668457031
  - -0.11358118057250977
  - -0.10894536972045898
  - -0.1078495979309082
  - -0.10408592224121094
  - -0.10490846633911133
  - -0.3503618836402893
  - -0.11170840263366699
  - -0.10557293891906738
  - -0.1002507209777832
  - -0.09963083267211914
  - -0.10028219223022461
  - -0.10226964950561523
  - -0.09089422225952148
  - -0.10582876205444336
  - -0.10465526580810547
  - -0.1136789321899414
  - -0.13040418922901154
  - -3.479133367538452
  - -0.10573792457580566
  - -0.09957242012023926
  - -0.10498952865600586
  - -0.09904766082763672
  - -0.10466241836547852
  - -0.11538839340209961
  - -0.10522890090942383
  - -0.10529422760009766
  - -0.0898730531334877
  - -0.10486364364624023
  - -0.10468530654907227
  - -0.11870206147432327
- - -0.1038064956665039
  - -0.1043558120727539
  - -0.10454654693603516
  - -0.1040945053100586
  - -0.1008448600769043
  - -0.10232067108154297
  - -0.1042623519897461
  - -0.10093307495117188
  - -0.10425853729248047
  - -0.10525751113891602
  - -0.10495233535766602
  - -0.09609905630350113
  - -0.1132059097290039
  - -0.10472297668457031
  - -0.11358118057250977
  - -0.10894536972045898
  - -0.1078495979309082
  - -0.10408592224121094
  - -0.10490846633911133
  - -0.3503618836402893
  - -0.11170840263366699
  - -0.10557293891906738
  - -0.1002507209777832
  - -0.09963083267211914
  - -0.10028219223022461
  - -0.10226964950561523
  - -0.09089422225952148
  - -0.10582876205444336
  - -0.10465526580810547
  - -0.1136789321899414
  - -0.13040418922901154
  - -0.11039280891418457
  - -0.10576057434082031
  - -0.09935927391052246
  - -0.10502243041992188
  - -0.09940338134765625
  - -0.10518407821655273
  - -0.11517906188964844
  - -0.10525369644165039
  - -0.10530662536621094
  - -0.09147852659225464
  - -0.10484075546264648
  - -0.10475349426269531
  - -3.5582892894744873
- - -0.1038064956665039
  - -0.1043558120727539
  - -0.10454654693603516
  - -0.1040945053100586
  - -0.1008448600769043
  - -0.10232067108154297
  - -0.1042623519897461
  - -0.10093307495117188
  - -0.10425853729248047
  - -0.10525751113891602
  - -0.10495233535766602
  - -0.09609905630350113
  - -0.1132059097290039
  - -0.10472297668457031
  - -0.11358118057250977
  - -0.10894536972045898
  - -0.1078495979309082
  - -0.10408592224121094
  - -0.10490846633911133
  - -0.3503618836402893
  - -0.11170840263366699
  - -0.10557293891906738
  - -0.1002507209777832
  - -0.09963083267211914
  - -0.10028219223022461
  - -0.10226964950561523
  - -0.09089422225952148
  - -0.10582876205444336
  - -0.10465526580810547
  - -0.1136789321899414
  - -0.13040418922901154
  - -0.11039280891418457
  - -0.10576057434082031
  - -3.7492053508758545
  - -0.10495567321777344
  - -0.10393142700195312
  - -0.11352872848510742
  - -0.10532808303833008
  - -0.10501480102539062
  - -0.08971689641475677
  - -0.10474395751953125
  - -0.10475587844848633
  - -0.11738166958093643
- - -0.1038064956665039
  - -0.1043558120727539
  - -0.10454654693603516
  - -0.1040945053100586
  - -0.1008448600769043
  - -0.10232067108154297
  - -0.1042623519897461
  - -0.10093307495117188
  - -0.10425853729248047
  - -0.10525751113891602
  - -0.10495233535766602
  - -0.09609905630350113
  - -0.1132059097290039
  - -0.10472297668457031
  - -0.11358118057250977
  - -0.10894536972045898
  - -0.1078495979309082
  - -0.10408592224121094
  - -0.10490846633911133
  - -0.3503618836402893
  - -0.11170840263366699
  - -0.10557293891906738
  - -0.1002507209777832
  - -0.09963083267211914
  - -0.10028219223022461
  - -0.10226964950561523
  - -0.09089422225952148
  - -0.10582876205444336
  - -0.10465526580810547
  - -0.1136789321899414
  - -0.13040418922901154
  - -0.11039280891418457
  - -0.10576057434082031
  - -0.09935927391052246
  - -0.10502243041992188
  - -0.09940338134765625
  - -0.10518407821655273
  - -0.11517906188964844
  - -0.10525369644165039
  - -0.10530662536621094
  - -0.09147852659225464
  - -0.10484075546264648
  - -0.10475349426269531
  - -3.8266239166259766
- - -0.1038064956665039
  - -0.1043558120727539
  - -0.10454654693603516
  - -0.1040945053100586
  - -0.1008448600769043
  - -0.10232067108154297
  - -0.1042623519897461
  - -0.10093307495117188
  - -0.10425853729248047
  - -0.10525751113891602
  - -0.10495233535766602
  - -0.09609905630350113
  - -0.1132059097290039
  - -0.10472297668457031
  - -0.11358118057250977
  - -0.10894536972045898
  - -0.1078495979309082
  - -0.10408592224121094
  - -0.10490846633911133
  - -0.3503618836402893
  - -0.11170840263366699
  - -0.10557293891906738
  - -0.1002507209777832
  - -0.09963083267211914
  - -0.10028219223022461
  - -0.10226964950561523
  - -0.09089422225952148
  - -0.10582876205444336
  - -0.10465526580810547
  - -0.1136789321899414
  - -0.13040418922901154
  - -0.11039280891418457
  - -0.10576057434082031
  - -0.09935927391052246
  - -0.10502243041992188
  - -0.09940338134765625
  - -0.10518407821655273
  - -0.11517906188964844
  - -0.10525369644165039
  - -0.10530662536621094
  - -0.09147852659225464
  - -0.10484075546264648
  - -0.10475349426269531
  - -3.8322384357452393
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'True'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'True'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
