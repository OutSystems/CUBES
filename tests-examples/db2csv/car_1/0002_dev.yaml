db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/continents.csv
output: tests-examples/db2csv/car_1/tables/0002_dev.csv
raw_question: What is the number of continents? 
question_index: 88 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants: []
join_columns: []
groupby_columns: []
orderby_columns: []
functions:
 - count
columns: []
filters: []
ieu: []
comment: |-
  SELECT count(*)
  FROM CONTINENTS;

sql: |-
  SELECT count(*)
  FROM CONTINENTS;
smbop_beam_join_columns:
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
smbop_beam_orderby_columns:
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
smbop_beam_constants:
- []
- []
- []
smbop_beam_functions:
- - count
- - count
- []
smbop_beam_columns:
- []
- - contid
- []
smbop_beam_ieu:
- []
- []
- []
smbop_beam_filters:
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT COUNT( * ) FROM continents
  - SELECT COUNT( DISTINCT continents.contid ) FROM continents
  - SELECT DISTINCT 2 FROM continents
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( * ) FROM continents
  - SELECT COUNT( DISTINCT continents.contid ) FROM continents
  - SELECT DISTINCT 2 FROM continents
smbop_beam_has_limit:
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
ratsql_beam_join_columns:
- []
- []
- []
- []
- []
- - countryid
  - id
  - continent
  - country
  - contid
  - maker
- - countryid
  - id
  - continent
  - makeid
  - country
  - model
  - contid
  - maker
- - contid
  - countryid
  - country
  - continent
- - countryid
  - id
  - continent
  - country
  - model
  - contid
  - maker
- []
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
ratsql_beam_constants:
- []
- []
- []
- - '1'
- []
- []
- []
- []
- []
- - '1'
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - continent
- []
- - continent
- - continent
- - continent
- - continent
- - continent
- - continent
- - continent
- []
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT Count(DISTINCT continents.Continent) FROM continents
  - SELECT Count(*) FROM continents
  - SELECT Count(continents.Continent) FROM continents
  - SELECT Count(DISTINCT continents.Continent) FROM continents LIMIT 1
  - SELECT DISTINCT Count(DISTINCT continents.Continent) FROM continents
  - SELECT Count(DISTINCT continents.Continent) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker
  - SELECT Count(DISTINCT continents.Continent) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id
  - SELECT Count(DISTINCT continents.Continent) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country
  - SELECT Count(DISTINCT continents.Continent) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model
  - SELECT Count(*) FROM continents LIMIT 1
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(DISTINCT continents.Continent) FROM continents
  - SELECT Count(*) FROM continents
  - SELECT Count(continents.Continent) FROM continents
  - SELECT Count(DISTINCT continents.Continent) FROM continents LIMIT 1
  - SELECT DISTINCT Count(DISTINCT continents.Continent) FROM continents
  - SELECT Count(DISTINCT continents.Continent) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker
  - SELECT Count(DISTINCT continents.Continent) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id
  - SELECT Count(DISTINCT continents.Continent) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country
  - SELECT Count(DISTINCT continents.Continent) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model
  - SELECT Count(*) FROM continents LIMIT 1
ratsql_beam_has_limit:
  - False
  - False
  - False
  - True
  - False
  - False
  - False
  - False
  - False
  - True
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10724401473999023
  - -0.1046895980834961
  - -0.10650968551635742
  - -0.10378456115722656
  - -0.10173892974853516
  - -0.10780096054077148
  - -0.11398649215698242
  - -0.10211324691772461
  - -0.10548591613769531
  - -0.10460948944091797
  - -0.10580301284790039
  - -0.44162851572036743
  - -0.1502976417541504
  - -0.10409975051879883
  - -0.11564254760742188
  - -0.10201835632324219
  - -0.10392999649047852
  - -0.10794997215270996
  - -0.10441374778747559
  - -0.10115718841552734
  - -0.10291099548339844
  - -0.10915565490722656
  - -0.10492563247680664
  - -0.1055760383605957
  - -0.06587877869606018
- - -0.10724401473999023
  - -0.1046895980834961
  - -0.10650968551635742
  - -0.10378456115722656
  - -0.10173892974853516
  - -0.10780096054077148
  - -0.11398649215698242
  - -0.10211324691772461
  - -0.10548591613769531
  - -0.10460948944091797
  - -0.10580301284790039
  - -1.3655565977096558
  - -0.10723066329956055
  - -0.10490250587463379
  - -0.11061429977416992
  - -0.10348653793334961
  - -0.10326433181762695
  - -0.10771632194519043
  - -0.10437536239624023
  - -0.10413789749145508
  - -0.10196733474731445
  - -0.10930204391479492
  - -0.10490655899047852
  - -0.10516548156738281
  - -0.06724538654088974
- - -0.10724401473999023
  - -0.1046895980834961
  - -0.10650968551635742
  - -0.10378456115722656
  - -0.10173892974853516
  - -0.10780096054077148
  - -0.11398649215698242
  - -0.10211324691772461
  - -0.10548591613769531
  - -0.10460948944091797
  - -0.10580301284790039
  - -0.44162851572036743
  - -2.84194278717041
  - -0.10481667518615723
  - -0.11401557922363281
  - -0.10243940353393555
  - -0.10367679595947266
  - -0.10790562629699707
  - -0.10440540313720703
  - -0.10175466537475586
  - -0.10236501693725586
  - -0.10905933380126953
  - -0.10495901107788086
  - -0.1055908203125
  - -0.06554065644741058
- - -0.10724401473999023
  - -0.1046895980834961
  - -0.10650968551635742
  - -0.10378456115722656
  - -0.10173892974853516
  - -0.10780096054077148
  - -0.11398649215698242
  - -0.10211324691772461
  - -0.10548591613769531
  - -0.10460948944091797
  - -0.10580301284790039
  - -0.44162851572036743
  - -0.1502976417541504
  - -0.10409975051879883
  - -0.11564254760742188
  - -0.10201835632324219
  - -0.10392999649047852
  - -3.550645351409912
  - -0.10444235801696777
  - -0.09898185729980469
  - -0.10349035263061523
  - -0.1092829704284668
  - -0.105010986328125
  - -0.10531377792358398
  - -0.06728328764438629
- - -0.10724401473999023
  - -0.1046895980834961
  - -3.5647482872009277
  - -0.1037302017211914
  - -0.10169124603271484
  - -0.10943031311035156
  - -0.11492776870727539
  - -0.10204744338989258
  - -0.10544061660766602
  - -0.10460948944091797
  - -0.10593986511230469
  - -0.43865835666656494
  - -0.15029406547546387
  - -0.10415101051330566
  - -0.11562204360961914
  - -0.10203075408935547
  - -0.1038980484008789
  - -0.10791850090026855
  - -0.10443615913391113
  - -0.10095691680908203
  - -0.10297822952270508
  - -0.10912513732910156
  - -0.10492563247680664
  - -0.10555839538574219
  - -0.06590288877487183
- - -0.10724401473999023
  - -0.1046895980834961
  - -0.10650968551635742
  - -0.10378456115722656
  - -0.10173892974853516
  - -0.10780096054077148
  - -0.11398649215698242
  - -0.10211324691772461
  - -0.10548591613769531
  - -0.10460948944091797
  - -0.10580301284790039
  - -0.44162851572036743
  - -0.1502976417541504
  - -0.10409975051879883
  - -0.11564254760742188
  - -0.10201835632324219
  - -0.10392999649047852
  - -0.10794997215270996
  - -0.10441374778747559
  - -0.10115718841552734
  - -0.10291099548339844
  - -0.10915565490722656
  - -0.10492563247680664
  - -0.1055760383605957
  - -4.321831226348877
- - -0.10724401473999023
  - -0.1046895980834961
  - -0.10650968551635742
  - -0.10378456115722656
  - -0.10173892974853516
  - -0.10780096054077148
  - -0.11398649215698242
  - -0.10211324691772461
  - -0.10548591613769531
  - -0.10460948944091797
  - -0.10580301284790039
  - -0.44162851572036743
  - -0.1502976417541504
  - -0.10409975051879883
  - -0.11564254760742188
  - -0.10201835632324219
  - -0.10392999649047852
  - -0.10794997215270996
  - -0.10441374778747559
  - -0.10115718841552734
  - -0.10291099548339844
  - -0.10915565490722656
  - -0.10492563247680664
  - -0.1055760383605957
  - -4.322882175445557
- - -0.10724401473999023
  - -0.1046895980834961
  - -0.10650968551635742
  - -0.10378456115722656
  - -0.10173892974853516
  - -0.10780096054077148
  - -0.11398649215698242
  - -0.10211324691772461
  - -0.10548591613769531
  - -0.10460948944091797
  - -0.10580301284790039
  - -0.44162851572036743
  - -0.1502976417541504
  - -0.10409975051879883
  - -0.11564254760742188
  - -0.10201835632324219
  - -0.10392999649047852
  - -0.10794997215270996
  - -0.10441374778747559
  - -0.10115718841552734
  - -0.10291099548339844
  - -0.10915565490722656
  - -0.10492563247680664
  - -0.1055760383605957
  - -4.324966907501221
- - -0.10724401473999023
  - -0.1046895980834961
  - -0.10650968551635742
  - -0.10378456115722656
  - -0.10173892974853516
  - -0.10780096054077148
  - -0.11398649215698242
  - -0.10211324691772461
  - -0.10548591613769531
  - -0.10460948944091797
  - -0.10580301284790039
  - -0.44162851572036743
  - -0.1502976417541504
  - -0.10409975051879883
  - -0.11564254760742188
  - -0.10201835632324219
  - -0.10392999649047852
  - -0.10794997215270996
  - -0.10441374778747559
  - -0.10115718841552734
  - -0.10291099548339844
  - -0.10915565490722656
  - -0.10492563247680664
  - -0.1055760383605957
  - -4.343911170959473
- - -0.10724401473999023
  - -0.1046895980834961
  - -0.10650968551635742
  - -0.10378456115722656
  - -0.10173892974853516
  - -0.10780096054077148
  - -0.11398649215698242
  - -0.10211324691772461
  - -0.10548591613769531
  - -0.10460948944091797
  - -0.10580301284790039
  - -1.3655565977096558
  - -0.10723066329956055
  - -0.10490250587463379
  - -0.11061429977416992
  - -0.10348653793334961
  - -0.10326433181762695
  - -3.554966688156128
  - -0.10463738441467285
  - -0.10022926330566406
  - -0.10314273834228516
  - -0.10996341705322266
  - -0.10511159896850586
  - -0.1049966812133789
  - -0.06917551159858704
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
