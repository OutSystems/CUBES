db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/car_makers.csv
 - tests-examples/db2csv/car_1/tables/countries.csv
output: tests-examples/db2csv/car_1/tables/0075_dev.csv
raw_question: How many countries has more than 2 car makers ? 
question_index: 161 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - 2
join_columns:
 - countryid
 - country
groupby_columns:
 - countryid
orderby_columns: []
functions:
 - count
columns: []
filters:
 - '>'
ieu: []
comment: |-
  select count(*)
  from countries as t1
  join car_makers as t2 on t1.countryid = t2.country
  group by t1.countryid
  having count(*) > 2

sql: |-
  select count(*)
  from countries as t1
  join car_makers as t2 on t1.countryid = t2.country
  group by t1.countryid
  having count(*) > 2
smbop_beam_join_columns:
- - countryid
  - country
- - countryid
  - country
- []
smbop_beam_groupby_columns:
- - country
- - countryid
- []
smbop_beam_orderby_columns:
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
smbop_beam_constants:
- - 2
- - 2
- - 2
smbop_beam_functions:
- - count
- - count
- []
smbop_beam_columns:
- []
- []
- []
smbop_beam_ieu:
- []
- []
- []
smbop_beam_filters:
- - '>'
- - '>'
- []
smbop_beam_inferred_code:
  - SELECT COUNT( * ) FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY car_makers.country HAVING COUNT( * ) > 2
  - SELECT COUNT( * ) FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT( * ) > 2
  - SELECT countries.countryid FROM countries
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( * ) FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY car_makers.country HAVING COUNT( * ) > 2
  - SELECT COUNT( * ) FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT( * ) > 2
  - SELECT countries.countryid FROM countries
smbop_beam_has_limit:
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
ratsql_beam_join_columns:
- []
- []
- - countryid
  - country
- []
- []
- - contid
  - countryid
  - country
  - continent
- - id
  - maker
  - makeid
  - model
- []
- - id
  - maker
  - model
- - id
  - maker
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
ratsql_beam_constants:
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
  - '1'
- - 2
- - 2
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - country
- []
- - country
- - country
- []
- - country
- - country
- - country
- - country
- - country
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers
  - SELECT Count(*) FROM car_makers
  - SELECT Count(DISTINCT car_makers.Country) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country
  - SELECT Count(car_makers.Country) FROM car_makers
  - SELECT Count(*) FROM countries
  - SELECT Count(DISTINCT car_makers.Country) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers LIMIT 1
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers
  - SELECT Count(*) FROM car_makers
  - SELECT Count(DISTINCT car_makers.Country) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country
  - SELECT Count(car_makers.Country) FROM car_makers
  - SELECT Count(*) FROM countries
  - SELECT Count(DISTINCT car_makers.Country) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers LIMIT 1
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model
  - SELECT Count(DISTINCT car_makers.Country) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - True
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10581016540527344
  - -0.1058049201965332
  - -0.105621337890625
  - -0.10408616065979004
  - -0.10502147674560547
  - -0.1007533073425293
  - -0.1148529052734375
  - -0.10205602645874023
  - -0.10547065734863281
  - -0.10424280166625977
  - -0.1068735122680664
  - -1.1409423351287842
  - -0.1845104694366455
  - -0.10461854934692383
  - -0.13737249374389648
  - -0.19081544876098633
  - -0.10140132904052734
  - -0.1073603630065918
  - -0.10451436042785645
  - -0.10291481018066406
  - -0.1037755012512207
  - -0.10390949249267578
  - -0.8316888809204102
  - -0.1258249282836914
  - -0.22470521926879883
- - -0.10581016540527344
  - -0.1058049201965332
  - -0.105621337890625
  - -0.10408616065979004
  - -0.10502147674560547
  - -0.1007533073425293
  - -0.1148529052734375
  - -0.10205602645874023
  - -0.10547065734863281
  - -0.10424280166625977
  - -0.1068735122680664
  - -0.5307125449180603
  - -0.11108708381652832
  - -0.10507452487945557
  - -0.18295001983642578
  - -0.13534927368164062
  - -0.10072517395019531
  - -0.10729598999023438
  - -0.10184061527252197
  - -0.09762382507324219
  - -0.10334014892578125
  - -0.11035585403442383
  - -2.4212453365325928
  - -0.14510869979858398
  - -0.24265076220035553
- - -0.10581016540527344
  - -0.1058049201965332
  - -0.105621337890625
  - -0.10408616065979004
  - -0.10502147674560547
  - -0.1007533073425293
  - -0.1148529052734375
  - -0.10205602645874023
  - -0.10547065734863281
  - -0.10424280166625977
  - -0.1068735122680664
  - -1.1409423351287842
  - -0.1845104694366455
  - -0.10461854934692383
  - -0.13737249374389648
  - -0.19081544876098633
  - -0.10140132904052734
  - -0.1073603630065918
  - -0.10451436042785645
  - -0.10291481018066406
  - -0.1037755012512207
  - -0.10390949249267578
  - -0.8316888809204102
  - -0.1258249282836914
  - -2.5040786266326904
- - -0.10581016540527344
  - -0.1058049201965332
  - -0.105621337890625
  - -0.10408616065979004
  - -0.10502147674560547
  - -0.1007533073425293
  - -0.1148529052734375
  - -0.10205602645874023
  - -0.10547065734863281
  - -0.10424280166625977
  - -0.1068735122680664
  - -1.1409423351287842
  - -2.6032283306121826
  - -0.10524415969848633
  - -0.12227630615234375
  - -0.17785072326660156
  - -0.10181570053100586
  - -0.10732078552246094
  - -0.1039971113204956
  - -0.0996403694152832
  - -0.10387372970581055
  - -0.10497379302978516
  - -0.8216443061828613
  - -0.1255488395690918
  - -0.22615718841552734
- - -0.10581016540527344
  - -0.1058049201965332
  - -0.105621337890625
  - -0.10408616065979004
  - -0.10502147674560547
  - -0.1007533073425293
  - -0.1148529052734375
  - -0.10205602645874023
  - -0.10547065734863281
  - -0.10424280166625977
  - -0.1068735122680664
  - -0.5307125449180603
  - -0.11108708381652832
  - -0.10507452487945557
  - -0.18295001983642578
  - -0.13534927368164062
  - -0.10072517395019531
  - -0.10729598999023438
  - -0.10184061527252197
  - -0.09762382507324219
  - -0.10334014892578125
  - -0.11035585403442383
  - -2.4212453365325928
  - -0.14510869979858398
  - -2.3687901496887207
- - -0.10581016540527344
  - -0.1058049201965332
  - -0.105621337890625
  - -0.10408616065979004
  - -0.10502147674560547
  - -0.1007533073425293
  - -0.1148529052734375
  - -0.10205602645874023
  - -0.10547065734863281
  - -0.10424280166625977
  - -0.1068735122680664
  - -1.1409423351287842
  - -0.1845104694366455
  - -0.10461854934692383
  - -0.13737249374389648
  - -0.19081544876098633
  - -0.10140132904052734
  - -0.1073603630065918
  - -0.10451436042785645
  - -0.10291481018066406
  - -0.1037755012512207
  - -0.10390949249267578
  - -0.8316888809204102
  - -0.1258249282836914
  - -3.367128849029541
- - -0.10581016540527344
  - -0.1058049201965332
  - -0.105621337890625
  - -0.10408616065979004
  - -0.10502147674560547
  - -0.1007533073425293
  - -0.1148529052734375
  - -0.10205602645874023
  - -0.10547065734863281
  - -0.10424280166625977
  - -0.1068735122680664
  - -1.1409423351287842
  - -0.1845104694366455
  - -0.10461854934692383
  - -0.13737249374389648
  - -0.19081544876098633
  - -0.10140132904052734
  - -0.1073603630065918
  - -0.10451436042785645
  - -0.10291481018066406
  - -0.1037755012512207
  - -0.10390949249267578
  - -0.8316888809204102
  - -0.1258249282836914
  - -3.3778066635131836
- - -0.10581016540527344
  - -0.1058049201965332
  - -0.105621337890625
  - -0.10408616065979004
  - -0.10502147674560547
  - -0.1007533073425293
  - -0.1148529052734375
  - -0.10205602645874023
  - -0.10547065734863281
  - -0.10424280166625977
  - -0.1068735122680664
  - -1.1409423351287842
  - -0.1845104694366455
  - -0.10461854934692383
  - -0.13737249374389648
  - -0.19081544876098633
  - -0.10140132904052734
  - -3.5650200843811035
  - -0.09875667095184326
  - -0.10464906692504883
  - -0.10342979431152344
  - -0.10496950149536133
  - -0.770451545715332
  - -0.12723636627197266
  - -0.21486197412014008
- - -0.10581016540527344
  - -0.1058049201965332
  - -0.105621337890625
  - -0.10408616065979004
  - -0.10502147674560547
  - -0.1007533073425293
  - -0.1148529052734375
  - -0.10205602645874023
  - -0.10547065734863281
  - -0.10424280166625977
  - -0.1068735122680664
  - -1.1409423351287842
  - -0.1845104694366455
  - -0.10461854934692383
  - -0.13737249374389648
  - -0.19081544876098633
  - -0.10140132904052734
  - -0.1073603630065918
  - -0.10451436042785645
  - -0.10291481018066406
  - -0.1037755012512207
  - -0.10390949249267578
  - -0.8316888809204102
  - -0.1258249282836914
  - -3.6339645385742188
- - -0.10581016540527344
  - -0.1058049201965332
  - -0.105621337890625
  - -0.10408616065979004
  - -0.10502147674560547
  - -0.1007533073425293
  - -0.1148529052734375
  - -0.10205602645874023
  - -0.10547065734863281
  - -0.10424280166625977
  - -0.1068735122680664
  - -1.1409423351287842
  - -0.1845104694366455
  - -0.10461854934692383
  - -0.13737249374389648
  - -0.19081544876098633
  - -0.10140132904052734
  - -0.1073603630065918
  - -0.10451436042785645
  - -0.10291481018066406
  - -0.1037755012512207
  - -0.10390949249267578
  - -0.8316888809204102
  - -0.1258249282836914
  - -3.7100863456726074
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
