db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/continents.csv
 - tests-examples/db2csv/car_1/tables/car_makers.csv
 - tests-examples/db2csv/car_1/tables/countries.csv
output: tests-examples/db2csv/car_1/tables/0019_dev.csv
raw_question: How many car makers are there in each continents? List the continent name and the count. 
question_index: 105 
join_columns:
 - contid
 - country
 - continent
 - countryid
groupby_columns:
 - continent
functions:
 - count
comment: |-
  SELECT T1.Continent,
         count(*)
  FROM CONTINENTS AS T1
  JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent
  JOIN car_makers AS T3 ON T2.CountryId = T3.Country
  GROUP BY T1.Continent;

sql: |-
  SELECT T1.Continent,
         count(*)
  FROM CONTINENTS AS T1
  JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent
  JOIN car_makers AS T3 ON T2.CountryId = T3.Country
  GROUP BY T1.Continent;
smbop_beam_join_columns:
- - id
  - contid
  - continent
  - countryid
- - continent
  - countryid
  - contid
  - country
- - continent
  - contid
- - contid
  - continent
- []
- []
- - contid
  - continent
- - id
  - contid
  - continent
  - countryid
- - continent
  - contid
- - continent
  - countryid
  - contid
  - country
smbop_beam_groupby_columns:
- - continent
- - continent
- - continent
- - continent
- - continent
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
smbop_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
smbop_beam_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.id = countries.countryid JOIN continents ON countries.continent = continents.contid GROUP BY continents.continent
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.country = countries.countryid JOIN continents ON countries.continent = continents.contid GROUP BY continents.continent
  - SELECT continents.continent , COUNT( * ) FROM countries JOIN continents ON countries.continent = continents.contid GROUP BY continents.continent
  - SELECT continents.continent , COUNT( * ) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY continents.continent
  - SELECT continents.continent , COUNT( * ) FROM continents GROUP BY continents.continent
  - SELECT continents.continent , COUNT( * ) FROM continents
  - SELECT continents.continent , COUNT( * ) FROM continents JOIN countries ON continents.contid = countries.continent
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.id = countries.countryid JOIN continents ON countries.continent = continents.contid
  - SELECT continents.continent , COUNT( * ) FROM countries JOIN continents ON countries.continent = continents.contid
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.country = countries.countryid JOIN continents ON countries.continent = continents.contid
smbop_beam_inferred_code_w_terminals:
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.id = countries.countryid JOIN continents ON countries.continent = continents.contid GROUP BY continents.continent
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.country = countries.countryid JOIN continents ON countries.continent = continents.contid GROUP BY continents.continent
  - SELECT continents.continent , COUNT( * ) FROM countries JOIN continents ON countries.continent = continents.contid GROUP BY continents.continent
  - SELECT continents.continent , COUNT( * ) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY continents.continent
  - SELECT continents.continent , COUNT( * ) FROM continents GROUP BY continents.continent
  - SELECT continents.continent , COUNT( * ) FROM continents
  - SELECT continents.continent , COUNT( * ) FROM continents JOIN countries ON continents.contid = countries.continent
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.id = countries.countryid JOIN continents ON countries.continent = continents.contid
  - SELECT continents.continent , COUNT( * ) FROM countries JOIN continents ON countries.continent = continents.contid
  - SELECT continents.continent , COUNT( * ) FROM car_makers JOIN countries ON car_makers.country = countries.countryid JOIN continents ON countries.continent = continents.contid
ratsql_beam_join_columns:
- - contid
  - continent
- - contid
  - continent
- - contid
  - continent
- - contid
  - continent
- - contid
  - country
  - continent
  - countryid
- - contid
  - country
  - continent
  - countryid
- - contid
  - continent
- - contid
  - country
  - continent
  - countryid
- - contid
  - country
  - continent
  - countryid
- - contid
  - country
  - continent
  - countryid
ratsql_beam_groupby_columns:
- - continent
- - continent
- - contid
- - contid
- - continent
- - continent
- - continent
- - continent
- - continent
- - contid
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
ratsql_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent
  - SELECT Count(*), continents.Continent FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT Count(*), continents.Continent FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent AND continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent
  - SELECT Count(*), continents.Continent FROM continents JOIN countries ON continents.ContId = countries.Continent AND continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent
  - SELECT Count(*), continents.ContId FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent
  - SELECT Count(*), continents.Continent FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent AND continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.ContId
ratsql_beam_inferred_code_w_terminals:
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent
  - SELECT Count(*), continents.Continent FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT Count(*), continents.Continent FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent AND continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent
  - SELECT Count(*), continents.Continent FROM continents JOIN countries ON continents.ContId = countries.Continent AND continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent
  - SELECT Count(*), continents.ContId FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent
  - SELECT Count(*), continents.Continent FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent
  - SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent AND continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.ContId
ratsql_beam_score_history:
- - -0.10550165176391602
  - -0.10443496704101562
  - -0.10694193840026855
  - -0.10405421257019043
  - -0.2820444107055664
  - -0.10293769836425781
  - -0.7925724983215332
  - -0.10154247283935547
  - -0.10502433776855469
  - -0.10508918762207031
  - -0.1047673225402832
  - -0.08802442252635956
  - -0.11301946640014648
  - -0.10536599159240723
  - -0.09933948516845703
  - -0.11805295944213867
  - -0.10287237167358398
  - -0.10463285446166992
  - -0.10547876358032227
  - -0.10586357116699219
  - -0.1117553785443306
  - -0.11200547218322754
  - -0.10507512092590332
  - -0.11815690994262695
  - -0.10840511322021484
  - -0.10214519500732422
  - -0.1044149398803711
  - -0.10410594940185547
  - -0.46023887395858765
  - -0.11103153228759766
  - -0.10566902160644531
  - -0.10488176345825195
  - -0.10735297203063965
  - -0.10508918762207031
  - -0.09784460067749023
  - -0.10354948043823242
  - -0.28514957427978516
  - -0.10536766052246094
  - -0.10478401184082031
  - -0.4327923655509949
  - -0.10521221160888672
  - -0.1044154167175293
  - -0.16248077154159546
- - -0.10550165176391602
  - -0.10443496704101562
  - -0.10694193840026855
  - -0.10405421257019043
  - -0.2820444107055664
  - -0.10293769836425781
  - -0.7572307586669922
  - -0.10139226913452148
  - -0.1055755615234375
  - -0.10530948638916016
  - -0.10581159591674805
  - -0.09670311212539673
  - -0.11074018478393555
  - -0.1041097640991211
  - -0.09891366958618164
  - -0.10493659973144531
  - -0.10270357131958008
  - -0.10474586486816406
  - -0.10431146621704102
  - -0.10705804824829102
  - -0.28642165660858154
  - -0.11289095878601074
  - -0.10598230361938477
  - -0.10192155838012695
  - -0.10950517654418945
  - -0.10228109359741211
  - -0.10511016845703125
  - -0.10386323928833008
  - -0.4445282220840454
  - -0.1110680103302002
  - -0.1056983470916748
  - -0.10441207885742188
  - -0.10735464096069336
  - -0.10506844520568848
  - -0.09786128997802734
  - -0.10348224639892578
  - -0.29981231689453125
  - -0.10525846481323242
  - -0.10483074188232422
  - -0.44335028529167175
  - -0.10525846481323242
  - -0.10450410842895508
  - -0.16168124973773956
- - -0.10550165176391602
  - -0.10443496704101562
  - -0.10694193840026855
  - -0.10405421257019043
  - -0.2820444107055664
  - -0.10293769836425781
  - -0.7925724983215332
  - -0.10154247283935547
  - -0.10502433776855469
  - -0.10508918762207031
  - -0.1047673225402832
  - -0.08802442252635956
  - -0.11301946640014648
  - -0.10536599159240723
  - -0.09933948516845703
  - -0.11805295944213867
  - -0.10287237167358398
  - -0.10463285446166992
  - -0.10547876358032227
  - -0.10586357116699219
  - -0.1117553785443306
  - -0.11200547218322754
  - -0.10507512092590332
  - -0.11815690994262695
  - -0.10840511322021484
  - -0.10214519500732422
  - -0.1044149398803711
  - -0.10410594940185547
  - -1.6647276878356934
  - -0.10998916625976562
  - -0.10544466972351074
  - -0.10419702529907227
  - -0.10715389251708984
  - -0.10503411293029785
  - -0.09898853302001953
  - -0.10366678237915039
  - -0.22591686248779297
  - -0.10543489456176758
  - -0.10465431213378906
  - -0.4335990846157074
  - -0.10501480102539062
  - -0.1045064926147461
  - -0.16072852909564972
- - -0.10550165176391602
  - -0.10443496704101562
  - -0.10694193840026855
  - -0.10405421257019043
  - -0.2820444107055664
  - -0.10293769836425781
  - -0.7572307586669922
  - -0.10139226913452148
  - -0.1055755615234375
  - -0.10530948638916016
  - -0.10581159591674805
  - -0.09670311212539673
  - -0.11074018478393555
  - -0.1041097640991211
  - -0.09891366958618164
  - -0.10493659973144531
  - -0.10270357131958008
  - -0.10474586486816406
  - -0.10431146621704102
  - -0.10705804824829102
  - -0.28642165660858154
  - -0.11289095878601074
  - -0.10598230361938477
  - -0.10192155838012695
  - -0.10950517654418945
  - -0.10228109359741211
  - -0.10511016845703125
  - -0.10386323928833008
  - -1.7457183599472046
  - -0.10990142822265625
  - -0.1055305004119873
  - -0.10389328002929688
  - -0.10715651512145996
  - -0.1050100326538086
  - -0.0989537239074707
  - -0.10328960418701172
  - -0.2646799087524414
  - -0.1053018569946289
  - -0.1047515869140625
  - -0.4432750642299652
  - -0.10514307022094727
  - -0.10454034805297852
  - -0.16092127561569214
- - -0.10550165176391602
  - -0.10443496704101562
  - -0.10694193840026855
  - -0.10405421257019043
  - -0.2820444107055664
  - -0.10293769836425781
  - -0.7925724983215332
  - -0.10154247283935547
  - -0.10502433776855469
  - -0.10508918762207031
  - -0.1047673225402832
  - -0.08802442252635956
  - -0.11301946640014648
  - -0.10536599159240723
  - -0.09933948516845703
  - -0.11805295944213867
  - -0.10287237167358398
  - -0.10463285446166992
  - -0.10547876358032227
  - -0.10586357116699219
  - -0.1117553785443306
  - -0.11200547218322754
  - -0.10507512092590332
  - -0.11815690994262695
  - -0.10840511322021484
  - -0.10214519500732422
  - -0.1044149398803711
  - -0.10410594940185547
  - -0.46023887395858765
  - -0.11103153228759766
  - -0.10566902160644531
  - -0.10488176345825195
  - -0.10735297203063965
  - -0.10508918762207031
  - -0.09784460067749023
  - -0.10354948043823242
  - -0.28514957427978516
  - -0.10536766052246094
  - -0.10478401184082031
  - -2.008190870285034
  - -0.10492610931396484
  - -0.10588264465332031
  - -0.30505049228668213
- - -0.10550165176391602
  - -0.10443496704101562
  - -0.10694193840026855
  - -0.10405421257019043
  - -0.2820444107055664
  - -0.10293769836425781
  - -0.7572307586669922
  - -0.10139226913452148
  - -0.1055755615234375
  - -0.10530948638916016
  - -0.10581159591674805
  - -0.09670311212539673
  - -0.11074018478393555
  - -0.1041097640991211
  - -0.09891366958618164
  - -0.10493659973144531
  - -0.10270357131958008
  - -0.10474586486816406
  - -0.10431146621704102
  - -0.10705804824829102
  - -0.28642165660858154
  - -0.11289095878601074
  - -0.10598230361938477
  - -0.10192155838012695
  - -0.10950517654418945
  - -0.10228109359741211
  - -0.10511016845703125
  - -0.10386323928833008
  - -0.4445282220840454
  - -0.1110680103302002
  - -0.1056983470916748
  - -0.10441207885742188
  - -0.10735464096069336
  - -0.10506844520568848
  - -0.09786128997802734
  - -0.10348224639892578
  - -0.29981231689453125
  - -0.10525846481323242
  - -0.10483074188232422
  - -1.989237904548645
  - -0.10487651824951172
  - -0.10588884353637695
  - -0.3127136826515198
- - -0.10550165176391602
  - -0.10443496704101562
  - -0.10694193840026855
  - -0.10405421257019043
  - -0.2820444107055664
  - -0.10293769836425781
  - -0.7572307586669922
  - -0.10139226913452148
  - -0.1055755615234375
  - -0.10530948638916016
  - -0.10581159591674805
  - -0.09670311212539673
  - -0.11074018478393555
  - -0.1041097640991211
  - -0.09891366958618164
  - -0.10493659973144531
  - -0.10270357131958008
  - -0.10474586486816406
  - -0.10431146621704102
  - -0.10705804824829102
  - -2.140303373336792
  - -0.11175036430358887
  - -0.10583305358886719
  - -0.11741065979003906
  - -0.11145210266113281
  - -0.1025991439819336
  - -0.10497856140136719
  - -0.10414457321166992
  - -0.4371476471424103
  - -0.11085844039916992
  - -0.10559892654418945
  - -0.1042017936706543
  - -0.1072542667388916
  - -0.10506081581115723
  - -0.09793615341186523
  - -0.10335159301757812
  - -0.2637815475463867
  - -0.10542535781860352
  - -0.1047511100769043
  - -0.4477778375148773
  - -0.10520505905151367
  - -0.10448837280273438
  - -0.16024836897850037
- - -0.10550165176391602
  - -0.10443496704101562
  - -0.10694193840026855
  - -0.10405421257019043
  - -0.2820444107055664
  - -0.10293769836425781
  - -0.7925724983215332
  - -0.10154247283935547
  - -0.10502433776855469
  - -0.10508918762207031
  - -0.1047673225402832
  - -0.08802442252635956
  - -0.11301946640014648
  - -0.10536599159240723
  - -0.09933948516845703
  - -0.11805295944213867
  - -0.10287237167358398
  - -0.10463285446166992
  - -0.10547876358032227
  - -0.10586357116699219
  - -0.1117553785443306
  - -0.11200547218322754
  - -0.10507512092590332
  - -0.11815690994262695
  - -0.10840511322021484
  - -0.10214519500732422
  - -0.1044149398803711
  - -0.10410594940185547
  - -0.46023887395858765
  - -0.11103153228759766
  - -0.10566902160644531
  - -0.10488176345825195
  - -0.10735297203063965
  - -0.10508918762207031
  - -0.09784460067749023
  - -0.10354948043823242
  - -0.28514957427978516
  - -0.10536766052246094
  - -0.10478401184082031
  - -0.4327923655509949
  - -0.10521221160888672
  - -0.1044154167175293
  - -2.791917085647583
- - -0.10550165176391602
  - -0.10443496704101562
  - -0.10694193840026855
  - -0.10405421257019043
  - -0.2820444107055664
  - -0.10293769836425781
  - -0.7572307586669922
  - -0.10139226913452148
  - -0.1055755615234375
  - -0.10530948638916016
  - -0.10581159591674805
  - -0.09670311212539673
  - -0.11074018478393555
  - -0.1041097640991211
  - -0.09891366958618164
  - -0.10493659973144531
  - -0.10270357131958008
  - -0.10474586486816406
  - -0.10431146621704102
  - -0.10705804824829102
  - -0.28642165660858154
  - -0.11289095878601074
  - -0.10598230361938477
  - -0.10192155838012695
  - -0.10950517654418945
  - -0.10228109359741211
  - -0.10511016845703125
  - -0.10386323928833008
  - -0.4445282220840454
  - -0.1110680103302002
  - -0.1056983470916748
  - -0.10441207885742188
  - -0.10735464096069336
  - -0.10506844520568848
  - -0.09786128997802734
  - -0.10348224639892578
  - -0.29981231689453125
  - -0.10525846481323242
  - -0.10483074188232422
  - -0.44335028529167175
  - -0.10525846481323242
  - -0.10450410842895508
  - -2.7989509105682373
- - -0.10550165176391602
  - -0.10443496704101562
  - -0.10694193840026855
  - -0.10405421257019043
  - -0.2820444107055664
  - -0.10293769836425781
  - -0.7925724983215332
  - -0.10154247283935547
  - -0.10502433776855469
  - -0.10508918762207031
  - -0.1047673225402832
  - -0.08802442252635956
  - -0.11301946640014648
  - -0.10536599159240723
  - -0.09933948516845703
  - -0.11805295944213867
  - -0.10287237167358398
  - -0.10463285446166992
  - -0.10547876358032227
  - -0.10586357116699219
  - -0.1117553785443306
  - -0.11200547218322754
  - -0.10507512092590332
  - -0.11815690994262695
  - -0.10840511322021484
  - -0.10214519500732422
  - -0.1044149398803711
  - -0.10410594940185547
  - -1.6647276878356934
  - -0.10998916625976562
  - -0.10544466972351074
  - -0.10419702529907227
  - -0.10715389251708984
  - -0.10503411293029785
  - -0.09898853302001953
  - -0.10366678237915039
  - -0.22591686248779297
  - -0.10543489456176758
  - -0.10465431213378906
  - -2.019852876663208
  - -0.10489368438720703
  - -0.10616874694824219
  - -0.2978847622871399
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
