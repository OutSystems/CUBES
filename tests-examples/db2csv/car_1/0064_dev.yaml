db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/car_makers.csv
 - tests-examples/db2csv/car_1/tables/model_list.csv
output: tests-examples/db2csv/car_1/tables/0064_dev.csv
raw_question: What are the names and ids of all makers with more than 3 models? 
question_index: 150 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - 3
join_columns:
 - id
 - maker
groupby_columns:
 - id
orderby_columns: []
functions:
 - count
columns: []
filters:
 - '>'
ieu: []
comment: |-
  SELECT T1.FullName,
         T1.Id
  FROM CAR_MAKERS AS T1
  JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker
  GROUP BY T1.Id
  HAVING count(*) > 3;

sql: |-
  SELECT T1.FullName,
         T1.Id
  FROM CAR_MAKERS AS T1
  JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker
  GROUP BY T1.Id
  HAVING count(*) > 3;
smbop_beam_join_columns:
- - id
  - maker
- - id
  - maker
- - id
  - maker
- - id
  - maker
smbop_beam_groupby_columns:
- - maker
- - maker
- - maker
- - maker
smbop_beam_orderby_columns:
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
smbop_beam_constants:
- - 3
- - 3
- - 3
- - 3
smbop_beam_functions:
- - count
- - count
- - count
- - count
smbop_beam_columns:
- []
- []
- []
- []
smbop_beam_ieu:
- []
- []
- []
- []
smbop_beam_filters:
- - '>'
- - '>'
- - '>'
- - '>'
smbop_beam_inferred_code:
  - SELECT car_makers.fullname , car_makers.id FROM model_list JOIN car_makers ON model_list.maker = car_makers.id GROUP BY model_list.maker HAVING COUNT( * ) > 3
  - SELECT car_makers.fullname , model_list.maker FROM model_list JOIN car_makers ON model_list.maker = car_makers.id GROUP BY model_list.maker HAVING COUNT( * ) > 3
  - SELECT model_list.maker , car_makers.id FROM model_list JOIN car_makers ON model_list.maker = car_makers.id GROUP BY model_list.maker HAVING COUNT( * ) > 3
  - SELECT car_makers.fullname , car_makers.id FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY model_list.maker HAVING COUNT( * ) > 3
smbop_beam_inferred_code_w_terminals:
  - SELECT car_makers.fullname , car_makers.id FROM model_list JOIN car_makers ON model_list.maker = car_makers.id GROUP BY model_list.maker HAVING COUNT( * ) > 3
  - SELECT car_makers.fullname , model_list.maker FROM model_list JOIN car_makers ON model_list.maker = car_makers.id GROUP BY model_list.maker HAVING COUNT( * ) > 3
  - SELECT model_list.maker , car_makers.id FROM model_list JOIN car_makers ON model_list.maker = car_makers.id GROUP BY model_list.maker HAVING COUNT( * ) > 3
  - SELECT car_makers.fullname , car_makers.id FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY model_list.maker HAVING COUNT( * ) > 3
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
ratsql_beam_join_columns:
- - id
  - maker
- - id
  - maker
- - id
  - maker
- - id
  - maker
- - id
  - maker
- - id
  - maker
ratsql_beam_groupby_columns:
- - maker
- - maker
- - maker
- - maker
- - maker
- - maker
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
ratsql_beam_constants:
- - 3
- - 3
- - 3
- - 3
- - 3
- - 3
- - 3
  - '1'
- - 3
- - 3
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- []
- []
- []
- []
- []
- []
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
ratsql_beam_inferred_code:
  - SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) > 'terminal'
  - SELECT car_makers.Maker, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) > 'terminal'
  - SELECT DISTINCT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) > 'terminal'
  - SELECT car_makers.Maker, DISTINCT model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) > 'terminal'
  - SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY DISTINCT model_list.Maker HAVING Count(*) > 'terminal'
  - SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(DISTINCT *) > 'terminal'
  - SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) > 'terminal' LIMIT 1
  - SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker HAVING Count(*) > 'terminal'
  - SELECT car_makers.Maker, model_list.ModelId FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) > 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) > 3
  - SELECT car_makers.Maker, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) > 3
  - SELECT DISTINCT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) > 3
  - SELECT car_makers.Maker, DISTINCT model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) > 3
  - SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY DISTINCT model_list.Maker HAVING Count(*) > 3
  - SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(DISTINCT *) > 3
  - SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) > 3 LIMIT 1
  - SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker HAVING Count(*) > 3
  - SELECT car_makers.Maker, model_list.ModelId FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) > 3
ratsql_beam_has_limit:
  - False
  - False
  - False
  - True
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.1037139892578125
  - -0.10465478897094727
  - -0.10486173629760742
  - -0.10423994064331055
  - -0.12045145034790039
  - -0.10358572006225586
  - -0.10454988479614258
  - -0.10125255584716797
  - -0.1041254997253418
  - -0.104827880859375
  - -0.10506916046142578
  - -0.11639734357595444
  - -0.1124258041381836
  - -0.1053314208984375
  - -0.11003541946411133
  - -0.10519599914550781
  - -0.10410356521606445
  - -0.1047048568725586
  - -0.10536909103393555
  - -0.10627985000610352
  - -0.1681995689868927
  - -0.11313867568969727
  - -0.1045985221862793
  - -0.1518993377685547
  - -0.1089015007019043
  - -0.10090160369873047
  - -0.10336160659790039
  - -0.10452032089233398
  - -0.16441352665424347
  - -0.11095356941223145
  - -0.1055605411529541
  - -0.08505010604858398
  - -0.09181547164916992
  - -0.10319900512695312
  - -0.10489082336425781
  - -0.10472631454467773
  - -0.12422943115234375
  - -0.10656125843524933
  - -0.11069059371948242
  - -0.10611748695373535
  - -0.1062769889831543
  - -0.0986180305480957
  - -0.10739302635192871
  - -0.10498499870300293
  - -0.09883260726928711
  - -0.10496234893798828
  - -0.11373186111450195
  - -0.10453176498413086
  - -0.10542058944702148
  - -0.061741143465042114
  - -0.10542535781860352
  - -0.10317516326904297
  - -0.06467188894748688
- - -0.1037139892578125
  - -0.10465478897094727
  - -0.10486173629760742
  - -0.10423994064331055
  - -0.12045145034790039
  - -0.10358572006225586
  - -0.10454988479614258
  - -0.10125255584716797
  - -0.1041254997253418
  - -0.104827880859375
  - -0.10506916046142578
  - -0.11639734357595444
  - -0.1124258041381836
  - -0.1053314208984375
  - -0.11003541946411133
  - -0.10519599914550781
  - -0.10410356521606445
  - -0.1047048568725586
  - -0.10536909103393555
  - -0.10627985000610352
  - -2.370004415512085
  - -0.11346936225891113
  - -0.10480332374572754
  - -0.14209318161010742
  - -0.10897970199584961
  - -0.10052680969238281
  - -0.10341787338256836
  - -0.1047968864440918
  - -0.1774650514125824
  - -0.11066603660583496
  - -0.1055748462677002
  - -0.08493709564208984
  - -0.09197664260864258
  - -0.1028432846069336
  - -0.10488700866699219
  - -0.10434103012084961
  - -0.12362432479858398
  - -0.10498058050870895
  - -0.11067891120910645
  - -0.10603451728820801
  - -0.1051340103149414
  - -0.09814786911010742
  - -0.10736823081970215
  - -0.10495686531066895
  - -0.09958457946777344
  - -0.10474491119384766
  - -0.11350345611572266
  - -0.1044626235961914
  - -0.10531044006347656
  - -0.061300717294216156
  - -0.10546588897705078
  - -0.1031041145324707
  - -0.06423868238925934
- - -0.1037139892578125
  - -0.10465478897094727
  - -0.10486173629760742
  - -0.10423994064331055
  - -0.12045145034790039
  - -0.10358572006225586
  - -0.10454988479614258
  - -0.10125255584716797
  - -0.1041254997253418
  - -0.104827880859375
  - -0.10506916046142578
  - -0.11639734357595444
  - -3.454160213470459
  - -0.10236763954162598
  - -0.10460281372070312
  - -0.10514402389526367
  - -0.10365867614746094
  - -0.1044774055480957
  - -0.10506153106689453
  - -0.10554218292236328
  - -0.17271742224693298
  - -0.11325550079345703
  - -0.10495543479919434
  - -0.15390253067016602
  - -0.10954093933105469
  - -0.10065698623657227
  - -0.10338640213012695
  - -0.10455799102783203
  - -0.1664024144411087
  - -0.11094903945922852
  - -0.10555219650268555
  - -0.08516788482666016
  - -0.09181356430053711
  - -0.10320520401000977
  - -0.10491132736206055
  - -0.104736328125
  - -0.1242074966430664
  - -0.10687240213155746
  - -0.11069297790527344
  - -0.10612916946411133
  - -0.10632562637329102
  - -0.09866714477539062
  - -0.10740113258361816
  - -0.10499882698059082
  - -0.09868526458740234
  - -0.10498046875
  - -0.11376285552978516
  - -0.10452699661254883
  - -0.10540103912353516
  - -0.061999883502721786
  - -0.10541486740112305
  - -0.10318708419799805
  - -0.06433984637260437
- - -0.1037139892578125
  - -0.10465478897094727
  - -0.10486173629760742
  - -0.10423994064331055
  - -0.12045145034790039
  - -0.10358572006225586
  - -0.10454988479614258
  - -0.10125255584716797
  - -0.1041254997253418
  - -0.104827880859375
  - -0.10506916046142578
  - -0.11639734357595444
  - -0.1124258041381836
  - -0.1053314208984375
  - -0.11003541946411133
  - -0.10519599914550781
  - -0.10410356521606445
  - -0.1047048568725586
  - -0.10536909103393555
  - -0.10627985000610352
  - -0.1681995689868927
  - -3.4409358501434326
  - -0.10612654685974121
  - -0.1611471176147461
  - -0.11160564422607422
  - -0.10032176971435547
  - -0.10347557067871094
  - -0.10473442077636719
  - -0.16665562987327576
  - -0.1108846664428711
  - -0.10556912422180176
  - -0.08684682846069336
  - -0.09190845489501953
  - -0.10317802429199219
  - -0.10491466522216797
  - -0.10461282730102539
  - -0.1242523193359375
  - -0.10747019946575165
  - -0.11070656776428223
  - -0.10613059997558594
  - -0.10638952255249023
  - -0.0985574722290039
  - -0.10739493370056152
  - -0.10501527786254883
  - -0.09815168380737305
  - -0.10479211807250977
  - -0.11350440979003906
  - -0.10456228256225586
  - -0.10513830184936523
  - -0.06737032532691956
  - -0.10507631301879883
  - -0.10312747955322266
  - -0.06722677499055862
- - -0.1037139892578125
  - -0.10465478897094727
  - -0.10486173629760742
  - -0.10423994064331055
  - -0.12045145034790039
  - -0.10358572006225586
  - -0.10454988479614258
  - -0.10125255584716797
  - -0.1041254997253418
  - -0.104827880859375
  - -0.10506916046142578
  - -0.11639734357595444
  - -0.1124258041381836
  - -0.1053314208984375
  - -0.11003541946411133
  - -0.10519599914550781
  - -0.10410356521606445
  - -0.1047048568725586
  - -0.10536909103393555
  - -0.10627985000610352
  - -0.1681995689868927
  - -0.11313867568969727
  - -0.1045985221862793
  - -0.1518993377685547
  - -0.1089015007019043
  - -0.10090160369873047
  - -0.10336160659790039
  - -0.10452032089233398
  - -0.16441352665424347
  - -3.4648709297180176
  - -0.10504961013793945
  - -0.0871882438659668
  - -0.09244489669799805
  - -0.10323047637939453
  - -0.1048440933227539
  - -0.10498523712158203
  - -0.12223196029663086
  - -0.10667365789413452
  - -0.11070013046264648
  - -0.10608482360839844
  - -0.10586881637573242
  - -0.09815406799316406
  - -0.10741829872131348
  - -0.10498356819152832
  - -0.09914493560791016
  - -0.10488367080688477
  - -0.1137237548828125
  - -0.10454368591308594
  - -0.10542917251586914
  - -0.06219325214624405
  - -0.10548782348632812
  - -0.10338258743286133
  - -0.06334662437438965
- - -0.1037139892578125
  - -0.10465478897094727
  - -0.10486173629760742
  - -0.10423994064331055
  - -0.12045145034790039
  - -0.10358572006225586
  - -0.10454988479614258
  - -0.10125255584716797
  - -0.1041254997253418
  - -0.104827880859375
  - -0.10506916046142578
  - -0.11639734357595444
  - -0.1124258041381836
  - -0.1053314208984375
  - -0.11003541946411133
  - -0.10519599914550781
  - -0.10410356521606445
  - -0.1047048568725586
  - -0.10536909103393555
  - -0.10627985000610352
  - -0.1681995689868927
  - -0.11313867568969727
  - -0.1045985221862793
  - -0.1518993377685547
  - -0.1089015007019043
  - -0.10090160369873047
  - -0.10336160659790039
  - -0.10452032089233398
  - -0.16441352665424347
  - -0.11095356941223145
  - -0.1055605411529541
  - -0.08505010604858398
  - -0.09181547164916992
  - -0.10319900512695312
  - -0.10489082336425781
  - -0.10472631454467773
  - -0.12422943115234375
  - -0.10656125843524933
  - -3.4727935791015625
  - -0.10611128807067871
  - -0.10528802871704102
  - -0.0987396240234375
  - -0.10740184783935547
  - -0.10496664047241211
  - -0.09857320785522461
  - -0.10505819320678711
  - -0.11398029327392578
  - -0.10451173782348633
  - -0.10547065734863281
  - -0.06151854246854782
  - -0.10552978515625
  - -0.10329580307006836
  - -0.06389284878969193
- - -0.1037139892578125
  - -0.10465478897094727
  - -0.10486173629760742
  - -0.10423994064331055
  - -0.12045145034790039
  - -0.10358572006225586
  - -0.10454988479614258
  - -0.10125255584716797
  - -0.1041254997253418
  - -0.104827880859375
  - -0.10506916046142578
  - -0.11639734357595444
  - -0.1124258041381836
  - -0.1053314208984375
  - -0.11003541946411133
  - -0.10519599914550781
  - -0.10410356521606445
  - -0.1047048568725586
  - -0.10536909103393555
  - -0.10627985000610352
  - -0.1681995689868927
  - -0.11313867568969727
  - -0.1045985221862793
  - -0.1518993377685547
  - -0.1089015007019043
  - -0.10090160369873047
  - -0.10336160659790039
  - -0.10452032089233398
  - -0.16441352665424347
  - -0.11095356941223145
  - -0.1055605411529541
  - -0.08505010604858398
  - -0.09181547164916992
  - -0.10319900512695312
  - -0.10489082336425781
  - -0.10472631454467773
  - -0.12422943115234375
  - -0.10656125843524933
  - -0.11069059371948242
  - -0.10611748695373535
  - -0.1062769889831543
  - -0.0986180305480957
  - -3.5517842769622803
  - -0.10480880737304688
  - -0.10026025772094727
  - -0.10509443283081055
  - -0.11359643936157227
  - -0.10466432571411133
  - -0.10529947280883789
  - -0.061555422842502594
  - -0.1055459976196289
  - -0.10326814651489258
  - -0.06271333992481232
- - -0.1037139892578125
  - -0.10465478897094727
  - -0.10486173629760742
  - -0.10423994064331055
  - -0.12045145034790039
  - -0.10358572006225586
  - -0.10454988479614258
  - -0.10125255584716797
  - -0.1041254997253418
  - -0.104827880859375
  - -0.10506916046142578
  - -0.11639734357595444
  - -0.1124258041381836
  - -0.1053314208984375
  - -0.11003541946411133
  - -0.10519599914550781
  - -0.10410356521606445
  - -0.1047048568725586
  - -0.10536909103393555
  - -0.10627985000610352
  - -0.1681995689868927
  - -0.11313867568969727
  - -0.1045985221862793
  - -0.1518993377685547
  - -0.1089015007019043
  - -0.10090160369873047
  - -0.10336160659790039
  - -0.10452032089233398
  - -3.7493765354156494
  - -0.11221647262573242
  - -0.1056358814239502
  - -0.08936166763305664
  - -0.09314203262329102
  - -0.10303735733032227
  - -0.10493612289428711
  - -0.10455942153930664
  - -0.12484598159790039
  - -0.10859083384275436
  - -0.11074614524841309
  - -0.10605382919311523
  - -0.10551977157592773
  - -0.09792089462280273
  - -0.10738015174865723
  - -0.10498905181884766
  - -0.09826946258544922
  - -0.10451269149780273
  - -0.11347103118896484
  - -0.1045522689819336
  - -0.10512971878051758
  - -0.06750259548425674
  - -0.10507726669311523
  - -0.10296344757080078
  - -0.06754638999700546
- - -0.1037139892578125
  - -0.10465478897094727
  - -0.10486173629760742
  - -0.10423994064331055
  - -0.12045145034790039
  - -0.10358572006225586
  - -0.10454988479614258
  - -0.10125255584716797
  - -0.1041254997253418
  - -0.104827880859375
  - -0.10506916046142578
  - -0.11639734357595444
  - -0.1124258041381836
  - -0.1053314208984375
  - -0.11003541946411133
  - -0.10519599914550781
  - -0.10410356521606445
  - -0.1047048568725586
  - -0.10536909103393555
  - -0.10627985000610352
  - -3.997354745864868
  - -0.11302995681762695
  - -0.10499048233032227
  - -0.1513533592224121
  - -0.11124372482299805
  - -0.10081815719604492
  - -0.10304069519042969
  - -0.10429048538208008
  - -0.15687339007854462
  - -0.11092472076416016
  - -0.10557413101196289
  - -0.0844278335571289
  - -0.09207439422607422
  - -0.10327434539794922
  - -0.10484552383422852
  - -0.10474491119384766
  - -0.12306642532348633
  - -0.1053912490606308
  - -0.1106867790222168
  - -0.10608363151550293
  - -0.1055755615234375
  - -0.0981144905090332
  - -0.10739302635192871
  - -0.10494637489318848
  - -0.09929370880126953
  - -0.10487794876098633
  - -0.11348628997802734
  - -0.1045079231262207
  - -0.10549640655517578
  - -0.06168152019381523
  - -0.10542964935302734
  - -0.10318374633789062
  - -0.06485547125339508
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Id'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'True'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'True'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ModelId'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Maker'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
