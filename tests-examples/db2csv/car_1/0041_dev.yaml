db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/cars_data.csv
output: tests-examples/db2csv/car_1/tables/0041_dev.csv
raw_question: What is the average weight of cars each year? 
question_index: 127 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants: []
join_columns: []
groupby_columns:
 - year
functions:
 - avg
columns:
 - weight
filters: []
ieu: []
comment: |-
  SELECT avg(Weight),
         YEAR
  FROM CARS_DATA
  GROUP BY YEAR;

sql: |-
  SELECT avg(Weight),
         YEAR
  FROM CARS_DATA
  GROUP BY YEAR;
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- - year
- - year
- - year
- - year
- - year
- []
- - weight
- []
- []
- - weight
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
smbop_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_functions:
- - avg
- - avg
- - avg
- - avg
  - count
- - avg
- - avg
- - avg
- - avg
- - avg
- - avg
smbop_beam_columns:
- - weight
- - weight
- - year
  - weight
- - weight
- - weight
- - weight
- - weight
- - weight
- - year
  - weight
- - year
  - weight
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- []
- []
- []
- - '>'
- []
- []
- []
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT AVG( cars_data.weight ) , cars_data.year FROM cars_data GROUP BY cars_data.year
  - SELECT cars_data.year , AVG( cars_data.weight ) FROM cars_data GROUP BY cars_data.year
  - SELECT AVG( cars_data.weight ) , AVG( cars_data.year ) FROM cars_data GROUP BY cars_data.year
  - SELECT AVG( cars_data.weight ) , cars_data.year FROM cars_data GROUP BY cars_data.year HAVING COUNT( cars_data.weight ) > year
  - SELECT AVG( cars_data.weight ) , cars_data.year FROM cars_data GROUP BY cars_data.year ORDER BY AVG( cars_data.weight ) DESC
  - SELECT AVG( cars_data.weight ) , cars_data.year FROM cars_data ORDER BY cars_data.year DESC
  - SELECT cars_data.year , AVG( cars_data.weight ) FROM cars_data GROUP BY cars_data.weight
  - SELECT cars_data.year , AVG( cars_data.weight ) FROM cars_data
  - SELECT AVG( cars_data.weight ) , AVG( cars_data.year ) FROM cars_data ORDER BY cars_data.weight DESC
  - SELECT AVG( cars_data.weight ) , AVG( cars_data.year ) FROM cars_data GROUP BY cars_data.weight
smbop_beam_inferred_code_w_terminals:
  - SELECT AVG( cars_data.weight ) , cars_data.year FROM cars_data GROUP BY cars_data.year
  - SELECT cars_data.year , AVG( cars_data.weight ) FROM cars_data GROUP BY cars_data.year
  - SELECT AVG( cars_data.weight ) , AVG( cars_data.year ) FROM cars_data GROUP BY cars_data.year
  - SELECT AVG( cars_data.weight ) , cars_data.year FROM cars_data GROUP BY cars_data.year HAVING COUNT( cars_data.weight ) > year
  - SELECT AVG( cars_data.weight ) , cars_data.year FROM cars_data GROUP BY cars_data.year ORDER BY AVG( cars_data.weight ) DESC
  - SELECT AVG( cars_data.weight ) , cars_data.year FROM cars_data ORDER BY cars_data.year DESC
  - SELECT cars_data.year , AVG( cars_data.weight ) FROM cars_data GROUP BY cars_data.weight
  - SELECT cars_data.year , AVG( cars_data.weight ) FROM cars_data
  - SELECT AVG( cars_data.weight ) , AVG( cars_data.year ) FROM cars_data ORDER BY cars_data.weight DESC
  - SELECT AVG( cars_data.weight ) , AVG( cars_data.year ) FROM cars_data GROUP BY cars_data.weight
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - True
  - True
  - False
  - False
  - True
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- []
- []
- []
- []
- - model
  - makeid
  - id
- - country
  - makeid
  - countryid
  - maker
  - model
  - id
- - country
  - makeid
  - countryid
  - maker
  - contid
  - model
  - id
  - continent
- - makeid
  - id
ratsql_beam_groupby_columns:
- - year
- - year
- - year
- - year
- - year
- - year
- - year
- - year
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
ratsql_beam_constants:
- []
- []
- []
- []
- - '1'
- []
- []
- []
- []
- []
ratsql_beam_functions:
- - avg
- - avg
- - avg
- - avg
- - avg
- - avg
- - avg
- - avg
ratsql_beam_columns:
- - weight
- - weight
- - weight
- - weight
- - weight
- - weight
- - weight
- - weight
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT Avg(cars_data.Weight), cars_data.Year FROM cars_data GROUP BY cars_data.Year
  - SELECT Avg(cars_data.Weight), DISTINCT cars_data.Year FROM cars_data GROUP BY cars_data.Year
  - SELECT Avg(cars_data.Weight), cars_data.Year FROM cars_data GROUP BY DISTINCT cars_data.Year
  - SELECT DISTINCT Avg(cars_data.Weight), cars_data.Year FROM cars_data GROUP BY cars_data.Year
  - SELECT Avg(cars_data.Weight), cars_data.Year FROM cars_data GROUP BY cars_data.Year LIMIT 1
  - SELECT Avg(DISTINCT cars_data.Weight), cars_data.Year FROM cars_data GROUP BY cars_data.Year
  - SELECT Avg(cars_data.Weight), cars_data.Year FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY cars_data.Year
  - SELECT Avg(cars_data.Weight), cars_data.Year FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY cars_data.Year
  - SELECT Avg(cars_data.Weight), cars_data.Year FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY cars_data.Year
  - SELECT Avg(cars_data.Weight), cars_data.Year FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY cars_data.Year
ratsql_beam_inferred_code_w_terminals:
  - SELECT Avg(cars_data.Weight), cars_data.Year FROM cars_data GROUP BY cars_data.Year
  - SELECT Avg(cars_data.Weight), DISTINCT cars_data.Year FROM cars_data GROUP BY cars_data.Year
  - SELECT Avg(cars_data.Weight), cars_data.Year FROM cars_data GROUP BY DISTINCT cars_data.Year
  - SELECT DISTINCT Avg(cars_data.Weight), cars_data.Year FROM cars_data GROUP BY cars_data.Year
  - SELECT Avg(cars_data.Weight), cars_data.Year FROM cars_data GROUP BY cars_data.Year LIMIT 1
  - SELECT Avg(DISTINCT cars_data.Weight), cars_data.Year FROM cars_data GROUP BY cars_data.Year
  - SELECT Avg(cars_data.Weight), cars_data.Year FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY cars_data.Year
  - SELECT Avg(cars_data.Weight), cars_data.Year FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY cars_data.Year
  - SELECT Avg(cars_data.Weight), cars_data.Year FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY cars_data.Year
  - SELECT Avg(cars_data.Weight), cars_data.Year FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY cars_data.Year
ratsql_beam_has_limit:
  - False
  - False
  - True
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10406970977783203
  - -0.10638809204101562
  - -0.11066794395446777
  - -0.10314440727233887
  - -0.12841129302978516
  - -0.09760475158691406
  - -0.09236335754394531
  - -0.10538148880004883
  - -0.10635089874267578
  - -0.10440921783447266
  - -0.10521697998046875
  - -0.10833028703927994
  - -0.10826802253723145
  - -0.10481524467468262
  - -0.11717844009399414
  - -0.10403966903686523
  - -0.10242795944213867
  - -0.10494136810302734
  - -0.10480308532714844
  - -0.10599851608276367
  - -0.107731394469738
  - -0.11360621452331543
  - -0.10618734359741211
  - -0.10948419570922852
  - -0.11725616455078125
  - -0.09971809387207031
  - -0.10440921783447266
  - -0.10464954376220703
  - -0.10223347693681717
  - -0.11229157447814941
  - -0.1057443618774414
  - -0.10170507431030273
  - -0.10737442970275879
  - -0.1051945686340332
  - -0.0982518196105957
  - -0.10642051696777344
  - -0.1074066162109375
  - -0.1049661636352539
  - -0.10434532165527344
  - -0.09675765782594681
- - -0.10406970977783203
  - -0.10638809204101562
  - -0.11066794395446777
  - -0.10314440727233887
  - -0.12841129302978516
  - -0.09760475158691406
  - -0.09236335754394531
  - -0.10538148880004883
  - -0.10635089874267578
  - -0.10440921783447266
  - -0.10521697998046875
  - -0.10833028703927994
  - -0.10826802253723145
  - -0.10481524467468262
  - -0.11717844009399414
  - -0.10403966903686523
  - -0.10242795944213867
  - -0.10494136810302734
  - -0.10480308532714844
  - -0.10599851608276367
  - -0.107731394469738
  - -3.4273464679718018
  - -0.10595154762268066
  - -0.1136479377746582
  - -0.11548757553100586
  - -0.09962844848632812
  - -0.1044015884399414
  - -0.10471963882446289
  - -0.1021423190832138
  - -0.1124272346496582
  - -0.10573863983154297
  - -0.10169506072998047
  - -0.10737967491149902
  - -0.10518717765808105
  - -0.09818172454833984
  - -0.1065664291381836
  - -0.10725593566894531
  - -0.1049809455871582
  - -0.1043400764465332
  - -0.0966496467590332
- - -0.10406970977783203
  - -0.10638809204101562
  - -0.11066794395446777
  - -0.10314440727233887
  - -0.12841129302978516
  - -0.09760475158691406
  - -0.09236335754394531
  - -0.10538148880004883
  - -0.10635089874267578
  - -0.10440921783447266
  - -0.10521697998046875
  - -0.10833028703927994
  - -0.10826802253723145
  - -0.10481524467468262
  - -0.11717844009399414
  - -0.10403966903686523
  - -0.10242795944213867
  - -0.10494136810302734
  - -0.10480308532714844
  - -0.10599851608276367
  - -0.107731394469738
  - -0.11360621452331543
  - -0.10618734359741211
  - -0.10948419570922852
  - -0.11725616455078125
  - -0.09971809387207031
  - -0.10440921783447266
  - -0.10464954376220703
  - -0.10223347693681717
  - -3.436809539794922
  - -0.10570859909057617
  - -0.10219287872314453
  - -0.10724973678588867
  - -0.10518741607666016
  - -0.0980997085571289
  - -0.10668706893920898
  - -0.10788965225219727
  - -0.1050419807434082
  - -0.10428380966186523
  - -0.09623494744300842
- - -0.10406970977783203
  - -0.10638809204101562
  - -3.5050625801086426
  - -0.10301876068115234
  - -0.13057518005371094
  - -0.09572267532348633
  - -0.07665681838989258
  - -0.10665130615234375
  - -0.10597085952758789
  - -0.10395193099975586
  - -0.10594701766967773
  - -0.08833756297826767
  - -0.10816574096679688
  - -0.10483765602111816
  - -0.11174440383911133
  - -0.10401153564453125
  - -0.10256433486938477
  - -0.10482215881347656
  - -0.1045222282409668
  - -0.10634660720825195
  - -0.10694577544927597
  - -0.11348581314086914
  - -0.10614967346191406
  - -0.10822772979736328
  - -0.11756706237792969
  - -0.09969902038574219
  - -0.10443592071533203
  - -0.10457420349121094
  - -0.09903234988451004
  - -0.11202168464660645
  - -0.10574078559875488
  - -0.10162591934204102
  - -0.10736799240112305
  - -0.10520386695861816
  - -0.09830999374389648
  - -0.1062779426574707
  - -0.10745906829833984
  - -0.10495710372924805
  - -0.10434484481811523
  - -0.09700533002614975
- - -0.10406970977783203
  - -0.10638809204101562
  - -0.11066794395446777
  - -0.10314440727233887
  - -0.12841129302978516
  - -0.09760475158691406
  - -0.09236335754394531
  - -0.10538148880004883
  - -0.10635089874267578
  - -0.10440921783447266
  - -0.10521697998046875
  - -0.10833028703927994
  - -0.10826802253723145
  - -0.10481524467468262
  - -0.11717844009399414
  - -0.10403966903686523
  - -0.10242795944213867
  - -0.10494136810302734
  - -0.10480308532714844
  - -0.10599851608276367
  - -0.107731394469738
  - -0.11360621452331543
  - -0.10618734359741211
  - -0.10948419570922852
  - -0.11725616455078125
  - -0.09971809387207031
  - -0.10440921783447266
  - -0.10464954376220703
  - -0.10223347693681717
  - -0.11229157447814941
  - -0.1057443618774414
  - -0.10170507431030273
  - -3.5498502254486084
  - -0.1052849292755127
  - -0.0984334945678711
  - -0.10534381866455078
  - -0.10748529434204102
  - -0.10490274429321289
  - -0.10439300537109375
  - -0.09666436910629272
- - -0.10406970977783203
  - -0.10638809204101562
  - -0.11066794395446777
  - -0.10314440727233887
  - -0.12841129302978516
  - -0.09760475158691406
  - -0.09236335754394531
  - -0.10538148880004883
  - -0.10635089874267578
  - -0.10440921783447266
  - -0.10521697998046875
  - -0.10833028703927994
  - -3.5577950477600098
  - -0.10477137565612793
  - -0.11575698852539062
  - -0.10399341583251953
  - -0.10213661193847656
  - -0.10515546798706055
  - -0.10467195510864258
  - -0.10594320297241211
  - -0.10548500716686249
  - -0.11376047134399414
  - -0.1061711311340332
  - -0.10854244232177734
  - -0.11803340911865234
  - -0.09978675842285156
  - -0.1046609878540039
  - -0.10452079772949219
  - -0.099080391228199
  - -0.11192822456359863
  - -0.10568809509277344
  - -0.1019740104675293
  - -0.10735797882080078
  - -0.10520768165588379
  - -0.09848594665527344
  - -0.10630369186401367
  - -0.10761165618896484
  - -0.10495281219482422
  - -0.10433149337768555
  - -0.0964989885687828
- - -0.10406970977783203
  - -0.10638809204101562
  - -0.11066794395446777
  - -0.10314440727233887
  - -0.12841129302978516
  - -0.09760475158691406
  - -0.09236335754394531
  - -0.10538148880004883
  - -0.10635089874267578
  - -0.10440921783447266
  - -0.10521697998046875
  - -0.10833028703927994
  - -0.10826802253723145
  - -0.10481524467468262
  - -0.11717844009399414
  - -0.10403966903686523
  - -0.10242795944213867
  - -0.10494136810302734
  - -0.10480308532714844
  - -0.10599851608276367
  - -0.107731394469738
  - -0.11360621452331543
  - -0.10618734359741211
  - -0.10948419570922852
  - -0.11725616455078125
  - -0.09971809387207031
  - -0.10440921783447266
  - -0.10464954376220703
  - -0.10223347693681717
  - -0.11229157447814941
  - -0.1057443618774414
  - -0.10170507431030273
  - -0.10737442970275879
  - -0.1051945686340332
  - -0.0982518196105957
  - -0.10642051696777344
  - -0.1074066162109375
  - -0.1049661636352539
  - -0.10434532165527344
  - -3.8600223064422607
- - -0.10406970977783203
  - -0.10638809204101562
  - -0.11066794395446777
  - -0.10314440727233887
  - -0.12841129302978516
  - -0.09760475158691406
  - -0.09236335754394531
  - -0.10538148880004883
  - -0.10635089874267578
  - -0.10440921783447266
  - -0.10521697998046875
  - -0.10833028703927994
  - -0.10826802253723145
  - -0.10481524467468262
  - -0.11717844009399414
  - -0.10403966903686523
  - -0.10242795944213867
  - -0.10494136810302734
  - -0.10480308532714844
  - -0.10599851608276367
  - -0.107731394469738
  - -0.11360621452331543
  - -0.10618734359741211
  - -0.10948419570922852
  - -0.11725616455078125
  - -0.09971809387207031
  - -0.10440921783447266
  - -0.10464954376220703
  - -0.10223347693681717
  - -0.11229157447814941
  - -0.1057443618774414
  - -0.10170507431030273
  - -0.10737442970275879
  - -0.1051945686340332
  - -0.0982518196105957
  - -0.10642051696777344
  - -0.1074066162109375
  - -0.1049661636352539
  - -0.10434532165527344
  - -3.944983959197998
- - -0.10406970977783203
  - -0.10638809204101562
  - -0.11066794395446777
  - -0.10314440727233887
  - -0.12841129302978516
  - -0.09760475158691406
  - -0.09236335754394531
  - -0.10538148880004883
  - -0.10635089874267578
  - -0.10440921783447266
  - -0.10521697998046875
  - -0.10833028703927994
  - -0.10826802253723145
  - -0.10481524467468262
  - -0.11717844009399414
  - -0.10403966903686523
  - -0.10242795944213867
  - -0.10494136810302734
  - -0.10480308532714844
  - -0.10599851608276367
  - -0.107731394469738
  - -0.11360621452331543
  - -0.10618734359741211
  - -0.10948419570922852
  - -0.11725616455078125
  - -0.09971809387207031
  - -0.10440921783447266
  - -0.10464954376220703
  - -0.10223347693681717
  - -0.11229157447814941
  - -0.1057443618774414
  - -0.10170507431030273
  - -0.10737442970275879
  - -0.1051945686340332
  - -0.0982518196105957
  - -0.10642051696777344
  - -0.1074066162109375
  - -0.1049661636352539
  - -0.10434532165527344
  - -3.984729051589966
- - -0.10406970977783203
  - -0.10638809204101562
  - -0.11066794395446777
  - -0.10314440727233887
  - -0.12841129302978516
  - -0.09760475158691406
  - -0.09236335754394531
  - -0.10538148880004883
  - -0.10635089874267578
  - -0.10440921783447266
  - -0.10521697998046875
  - -0.10833028703927994
  - -0.10826802253723145
  - -0.10481524467468262
  - -0.11717844009399414
  - -0.10403966903686523
  - -0.10242795944213867
  - -0.10494136810302734
  - -0.10480308532714844
  - -0.10599851608276367
  - -0.107731394469738
  - -0.11360621452331543
  - -0.10618734359741211
  - -0.10948419570922852
  - -0.11725616455078125
  - -0.09971809387207031
  - -0.10440921783447266
  - -0.10464954376220703
  - -0.10223347693681717
  - -0.11229157447814941
  - -0.1057443618774414
  - -0.10170507431030273
  - -0.10737442970275879
  - -0.1051945686340332
  - -0.0982518196105957
  - -0.10642051696777344
  - -0.1074066162109375
  - -0.1049661636352539
  - -0.10434532165527344
  - -4.057614803314209
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'True'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'True'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
