db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/car_makers.csv
 - tests-examples/db2csv/car_1/tables/countries.csv
output: tests-examples/db2csv/car_1/tables/0087_dev.csv
raw_question: What are the name of the countries where there is not a single car maker? 
question_index: 173 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants: []
join_columns:
 - countryid
 - country;
groupby_columns: []
orderby_columns: []
functions: []
columns: []
filters: []
ieu:
 - except
comment: |-
  SELECT CountryName
  FROM countries
  EXCEPT
  SELECT T1.CountryName
  FROM countries AS T1
  JOIN CAR_MAKERS AS T2 ON T1.countryId = T2.Country;

sql: |-
  SELECT CountryName
  FROM countries
  EXCEPT
  SELECT T1.CountryName
  FROM countries AS T1
  JOIN CAR_MAKERS AS T2 ON T1.countryId = T2.Country;
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
smbop_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_functions:
- []
- []
- []
- - count
- []
- []
- []
- - count
- []
- - count
smbop_beam_columns:
- - countryid
- - countryid
- - countryname
- - countryid
- - countryid
- - countryid
- - countryid
- - countryid
  - countryname
- []
- - countryid
smbop_beam_ieu:
- []
- []
- []
- []
- []
- - union
- []
- []
- - union
  - intersect
  - union
- []
smbop_beam_filters:
- []
- []
- []
- []
- - '!='
- []
- []
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT countries.countryname FROM countries WHERE countries.countryid NOT IN (SELECT car_makers.country FROM car_makers)
  - SELECT countries.countryname FROM countries WHERE countries.countryid NOT IN (SELECT countries.countryname FROM countries WHERE countries.countryid IN (SELECT car_makers.country FROM car_makers))
  - SELECT countries.countryname FROM countries WHERE countries.countryname NOT IN (SELECT car_makers.country FROM car_makers)
  - SELECT COUNT( DISTINCT countries.countryid ) FROM countries WHERE countries.countryid NOT IN (SELECT car_makers.country FROM car_makers)
  - SELECT countries.countryname FROM countries WHERE countries.countryid != (SELECT car_makers.country FROM car_makers)
  - SELECT countries.countryname FROM countries WHERE countries.countryid NOT IN (SELECT car_makers.country FROM car_makers UNION SELECT car_makers.country FROM car_makers)
  - SELECT countries.countryname FROM countries WHERE countries.countryid NOT IN (SELECT car_makers.id FROM car_makers)
  - SELECT COUNT( DISTINCT countries.countryname ) FROM countries WHERE countries.countryid NOT IN (SELECT car_makers.country FROM car_makers)
  - SELECT car_makers.country FROM car_makers UNION SELECT car_makers.country FROM car_makers INTERSECT SELECT car_makers.country FROM car_makers UNION SELECT car_makers.country FROM car_makers
  - SELECT COUNT( * ) FROM countries WHERE countries.countryid NOT IN (SELECT car_makers.country FROM car_makers)
smbop_beam_inferred_code_w_terminals:
  - SELECT countries.countryname FROM countries WHERE countries.countryid NOT IN (SELECT car_makers.country FROM car_makers)
  - SELECT countries.countryname FROM countries WHERE countries.countryid NOT IN (SELECT countries.countryname FROM countries WHERE countries.countryid IN (SELECT car_makers.country FROM car_makers))
  - SELECT countries.countryname FROM countries WHERE countries.countryname NOT IN (SELECT car_makers.country FROM car_makers)
  - SELECT COUNT( DISTINCT countries.countryid ) FROM countries WHERE countries.countryid NOT IN (SELECT car_makers.country FROM car_makers)
  - SELECT countries.countryname FROM countries WHERE countries.countryid != (SELECT car_makers.country FROM car_makers)
  - SELECT countries.countryname FROM countries WHERE countries.countryid NOT IN (SELECT car_makers.country FROM car_makers UNION SELECT car_makers.country FROM car_makers)
  - SELECT countries.countryname FROM countries WHERE countries.countryid NOT IN (SELECT car_makers.id FROM car_makers)
  - SELECT COUNT( DISTINCT countries.countryname ) FROM countries WHERE countries.countryid NOT IN (SELECT car_makers.country FROM car_makers)
  - SELECT car_makers.country FROM car_makers UNION SELECT car_makers.country FROM car_makers INTERSECT SELECT car_makers.country FROM car_makers UNION SELECT car_makers.country FROM car_makers
  - SELECT COUNT( * ) FROM countries WHERE countries.countryid NOT IN (SELECT car_makers.country FROM car_makers)
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- []
- - countryid
  - country
- - countryid
  - country
- []
- []
- - contid
  - continent
- []
- []
- - countryid
  - id
  - makeid
  - country
  - model
  - maker
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
ratsql_beam_constants:
- - 1
- - 1
- - 1
- - 1
- - 1
- - 1
- - 1
- - 1
  - '1'
- - 1
  - '1'
- - 1
ratsql_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_columns:
- - countryid
- []
- - countryid
- - countryid
- - countryid
- - countryid
- - countryid
- - countryid
- - countryid
ratsql_beam_ieu:
- []
- - except
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
  - SELECT countries.CountryName FROM countries EXCEPT SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country
  - SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
  - SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT DISTINCT car_makers.Country FROM car_makers)
  - SELECT DISTINCT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
  - SELECT countries.CountryName FROM countries WHERE DISTINCT countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
  - SELECT countries.CountryName FROM continents JOIN countries ON continents.ContId = countries.Continent WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
  - SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers) LIMIT 1
  - SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers LIMIT 1)
  - SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
ratsql_beam_inferred_code_w_terminals:
  - SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
  - SELECT countries.CountryName FROM countries EXCEPT SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country
  - SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
  - SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT DISTINCT car_makers.Country FROM car_makers)
  - SELECT DISTINCT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
  - SELECT countries.CountryName FROM countries WHERE DISTINCT countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
  - SELECT countries.CountryName FROM continents JOIN countries ON continents.ContId = countries.Continent WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
  - SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers) LIMIT 1
  - SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers LIMIT 1)
  - SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - True
  - True
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10352659225463867
  - -0.1048135757446289
  - -0.1073451042175293
  - -0.10369086265563965
  - -0.10186910629272461
  - -0.10293149948120117
  - -0.10739421844482422
  - -0.10130500793457031
  - -0.1042017936706543
  - -0.10506296157836914
  - -0.104278564453125
  - -0.14473693072795868
  - -0.11296343803405762
  - -0.10508489608764648
  - -0.29395484924316406
  - -0.1552128791809082
  - -0.09328079223632812
  - -0.08787345886230469
  - -0.09295415878295898
  - -0.09917068481445312
  - -0.10477209091186523
  - -0.10571098327636719
  - -0.10585546493530273
  - -0.09978968650102615
  - -0.11202144622802734
  - -0.10501718521118164
  - -0.10213088989257812
  - -0.09955358505249023
  - -0.10567760467529297
  - -0.10091543197631836
  - -0.11823368072509766
  - -0.10417580604553223
  - -0.10118675231933594
  - -0.1029047966003418
  - -0.1034398078918457
  - -0.10189628601074219
  - -0.10593414306640625
  - -0.10446977615356445
  - -0.10543298721313477
  - -0.1994621902704239
  - -0.11327862739562988
  - -0.10605525970458984
  - -0.11717081069946289
  - -0.11582422256469727
  - -0.1048130989074707
  - -0.10768318176269531
  - -0.10510969161987305
  - -0.09662151336669922
  - -0.10888528823852539
  - -0.10935306549072266
  - -0.10464191436767578
  - -0.10403203964233398
  - -0.10136360675096512
  - -0.10254907608032227
  - -0.1021738052368164
  - -0.10842466354370117
  - -0.10450339317321777
  - -0.10099601745605469
  - -0.10465526580810547
  - -0.11054658889770508
  - -0.10503721237182617
  - -0.10518741607666016
  - -0.15112832188606262
- - -0.10352659225463867
  - -0.1048135757446289
  - -0.1073451042175293
  - -0.10369086265563965
  - -0.10186910629272461
  - -0.10293149948120117
  - -0.10739421844482422
  - -0.10130500793457031
  - -0.1042017936706543
  - -0.10506296157836914
  - -0.104278564453125
  - -0.14473693072795868
  - -0.11296343803405762
  - -0.10508489608764648
  - -2.0213212966918945
  - -0.10199594497680664
  - -0.10312938690185547
  - -0.10814452171325684
  - -0.10486316680908203
  - -0.16259288787841797
  - -0.10555553436279297
  - -0.10434246063232422
  - -0.10880661010742188
  - -0.10342693328857422
  - -0.10178852081298828
  - -0.10545825958251953
  - -0.1044931411743164
  - -0.10231781005859375
  - -0.1046295166015625
  - -0.10601043701171875
  - -0.10440397262573242
  - -0.11508293449878693
  - -0.1134343147277832
  - -0.10568881034851074
  - -0.11498260498046875
  - -0.10504722595214844
  - -0.1038360595703125
  - -0.10790681838989258
  - -0.10516357421875
  - -0.09772539138793945
  - -0.10578393936157227
  - -0.10913705825805664
  - -0.10584783554077148
  - -0.10564994812011719
  - -0.29980865120887756
  - -0.10472965240478516
  - -0.1044001579284668
  - -0.10565084218978882
  - -0.094512939453125
  - -0.11258411407470703
  - -0.10488414764404297
  - -0.1036233901977539
  - -0.16017016768455505
- - -0.10352659225463867
  - -0.1048135757446289
  - -0.1073451042175293
  - -0.10369086265563965
  - -0.10186910629272461
  - -0.10293149948120117
  - -0.10739421844482422
  - -0.10130500793457031
  - -0.1042017936706543
  - -0.10506296157836914
  - -0.104278564453125
  - -0.14473693072795868
  - -0.11296343803405762
  - -0.10508489608764648
  - -0.29395484924316406
  - -0.1552128791809082
  - -0.09328079223632812
  - -0.08787345886230469
  - -0.09295415878295898
  - -0.09917068481445312
  - -0.10477209091186523
  - -0.10571098327636719
  - -0.10585546493530273
  - -0.09978968650102615
  - -0.11202144622802734
  - -0.10501718521118164
  - -0.10213088989257812
  - -0.09955358505249023
  - -0.10567760467529297
  - -0.10091543197631836
  - -0.11823368072509766
  - -0.10417580604553223
  - -0.10118675231933594
  - -0.1029047966003418
  - -0.1034398078918457
  - -0.10189628601074219
  - -0.10593414306640625
  - -0.10446977615356445
  - -0.10543298721313477
  - -0.1994621902704239
  - -0.11327862739562988
  - -0.10605525970458984
  - -0.11717081069946289
  - -0.11582422256469727
  - -0.1048130989074707
  - -0.10768318176269531
  - -0.10510969161987305
  - -0.09662151336669922
  - -0.10888528823852539
  - -0.10935306549072266
  - -0.10464191436767578
  - -0.10403203964233398
  - -0.10136360675096512
  - -0.10254907608032227
  - -0.1021738052368164
  - -0.10842466354370117
  - -0.10450339317321777
  - -0.10099601745605469
  - -0.10465526580810547
  - -0.11054658889770508
  - -0.10503721237182617
  - -0.10518741607666016
  - -3.3083176612854004
- - -0.10352659225463867
  - -0.1048135757446289
  - -0.1073451042175293
  - -0.10369086265563965
  - -0.10186910629272461
  - -0.10293149948120117
  - -0.10739421844482422
  - -0.10130500793457031
  - -0.1042017936706543
  - -0.10506296157836914
  - -0.104278564453125
  - -0.14473693072795868
  - -0.11296343803405762
  - -0.10508489608764648
  - -0.29395484924316406
  - -0.1552128791809082
  - -0.09328079223632812
  - -0.08787345886230469
  - -0.09295415878295898
  - -0.09917068481445312
  - -0.10477209091186523
  - -0.10571098327636719
  - -0.10585546493530273
  - -0.09978968650102615
  - -0.11202144622802734
  - -0.10501718521118164
  - -0.10213088989257812
  - -0.09955358505249023
  - -0.10567760467529297
  - -0.10091543197631836
  - -3.315751552581787
  - -0.1038961410522461
  - -0.10201215744018555
  - -0.10307788848876953
  - -0.10332822799682617
  - -0.1019892692565918
  - -0.10561800003051758
  - -0.10493278503417969
  - -0.10509395599365234
  - -0.22415851056575775
  - -0.11320209503173828
  - -0.10598421096801758
  - -0.11713218688964844
  - -0.11574554443359375
  - -0.10472726821899414
  - -0.10767436027526855
  - -0.10509872436523438
  - -0.09584903717041016
  - -0.1095423698425293
  - -0.10934591293334961
  - -0.10462713241577148
  - -0.10410690307617188
  - -0.09393932670354843
  - -0.10158348083496094
  - -0.10238361358642578
  - -0.10844993591308594
  - -0.1044778823852539
  - -0.10160255432128906
  - -0.10523843765258789
  - -0.11066198348999023
  - -0.10502338409423828
  - -0.10515785217285156
  - -0.15109603106975555
- - -0.10352659225463867
  - -0.1048135757446289
  - -0.1073451042175293
  - -0.10369086265563965
  - -0.10186910629272461
  - -0.10293149948120117
  - -0.10739421844482422
  - -0.10130500793457031
  - -0.1042017936706543
  - -0.10506296157836914
  - -0.104278564453125
  - -0.14473693072795868
  - -3.4604828357696533
  - -0.10400247573852539
  - -0.21692228317260742
  - -0.15433120727539062
  - -0.09232282638549805
  - -0.08800411224365234
  - -0.09122610092163086
  - -0.09924077987670898
  - -0.10476350784301758
  - -0.10566329956054688
  - -0.10596704483032227
  - -0.09924373030662537
  - -0.11201286315917969
  - -0.10501646995544434
  - -0.10206985473632812
  - -0.09955310821533203
  - -0.10564851760864258
  - -0.10089492797851562
  - -0.11826419830322266
  - -0.10417747497558594
  - -0.10120344161987305
  - -0.1029043197631836
  - -0.1034402847290039
  - -0.10189151763916016
  - -0.10595321655273438
  - -0.10446977615356445
  - -0.10540437698364258
  - -0.1992456614971161
  - -0.11330389976501465
  - -0.10605525970458984
  - -0.11719560623168945
  - -0.11582183837890625
  - -0.10482072830200195
  - -0.10768580436706543
  - -0.10510730743408203
  - -0.09661674499511719
  - -0.10895586013793945
  - -0.10936403274536133
  - -0.10463953018188477
  - -0.10401725769042969
  - -0.10163243114948273
  - -0.10256719589233398
  - -0.10217809677124023
  - -0.10842561721801758
  - -0.10450434684753418
  - -0.10099315643310547
  - -0.10463762283325195
  - -0.11053752899169922
  - -0.1050419807434082
  - -0.10518884658813477
  - -0.1511598825454712
- - -0.10352659225463867
  - -0.1048135757446289
  - -0.1073451042175293
  - -0.10369086265563965
  - -0.10186910629272461
  - -0.10293149948120117
  - -0.10739421844482422
  - -0.10130500793457031
  - -0.1042017936706543
  - -0.10506296157836914
  - -0.104278564453125
  - -0.14473693072795868
  - -0.11296343803405762
  - -0.10508489608764648
  - -0.29395484924316406
  - -0.1552128791809082
  - -0.09328079223632812
  - -0.08787345886230469
  - -0.09295415878295898
  - -0.09917068481445312
  - -0.10477209091186523
  - -0.10571098327636719
  - -0.10585546493530273
  - -0.09978968650102615
  - -3.465130090713501
  - -0.10486030578613281
  - -0.1024017333984375
  - -0.09908246994018555
  - -0.10465574264526367
  - -0.10147571563720703
  - -0.11853504180908203
  - -0.10423016548156738
  - -0.1015777587890625
  - -0.10297250747680664
  - -0.1035008430480957
  - -0.10188817977905273
  - -0.10597419738769531
  - -0.10447978973388672
  - -0.10549068450927734
  - -0.19985876977443695
  - -0.1132347583770752
  - -0.10604524612426758
  - -0.1174159049987793
  - -0.11591100692749023
  - -0.10466670989990234
  - -0.10767221450805664
  - -0.10510826110839844
  - -0.0967111587524414
  - -0.10847759246826172
  - -0.10941743850708008
  - -0.10465097427368164
  - -0.10408592224121094
  - -0.10082411766052246
  - -0.10256099700927734
  - -0.10219621658325195
  - -0.10842680931091309
  - -0.10450434684753418
  - -0.10092496871948242
  - -0.10457038879394531
  - -0.11057662963867188
  - -0.1050724983215332
  - -0.10524940490722656
  - -0.152315154671669
- - -0.10352659225463867
  - -0.1048135757446289
  - -0.1073451042175293
  - -0.10369086265563965
  - -0.10186910629272461
  - -0.10293149948120117
  - -0.10739421844482422
  - -0.10130500793457031
  - -0.1042017936706543
  - -0.10506296157836914
  - -0.104278564453125
  - -0.14473693072795868
  - -0.11296343803405762
  - -0.10508489608764648
  - -0.29395484924316406
  - -0.1552128791809082
  - -0.09328079223632812
  - -0.08787345886230469
  - -0.09295415878295898
  - -0.09917068481445312
  - -0.10477209091186523
  - -0.10571098327636719
  - -0.10585546493530273
  - -0.09978968650102615
  - -0.11202144622802734
  - -0.10501718521118164
  - -0.10213088989257812
  - -0.09955358505249023
  - -0.10567760467529297
  - -0.10091543197631836
  - -0.11823368072509766
  - -0.10417580604553223
  - -0.10118675231933594
  - -0.1029047966003418
  - -0.1034398078918457
  - -0.10189628601074219
  - -0.10593414306640625
  - -0.10446977615356445
  - -0.10543298721313477
  - -0.1994621902704239
  - -0.11327862739562988
  - -0.10605525970458984
  - -0.11717081069946289
  - -0.11582422256469727
  - -0.1048130989074707
  - -0.10768318176269531
  - -0.10510969161987305
  - -0.09662151336669922
  - -0.10888528823852539
  - -0.10935306549072266
  - -0.10464191436767578
  - -0.10403203964233398
  - -0.10136360675096512
  - -0.10254907608032227
  - -0.1021738052368164
  - -0.10842466354370117
  - -0.10450339317321777
  - -0.10099601745605469
  - -0.10465526580810547
  - -0.11054658889770508
  - -0.10503721237182617
  - -0.10518741607666016
  - -3.533139944076538
- - -0.10352659225463867
  - -0.1048135757446289
  - -0.1073451042175293
  - -0.10369086265563965
  - -0.10186910629272461
  - -0.10293149948120117
  - -0.10739421844482422
  - -0.10130500793457031
  - -0.1042017936706543
  - -0.10506296157836914
  - -0.104278564453125
  - -0.14473693072795868
  - -0.11296343803405762
  - -0.10508489608764648
  - -0.29395484924316406
  - -0.1552128791809082
  - -0.09328079223632812
  - -0.08787345886230469
  - -0.09295415878295898
  - -0.09917068481445312
  - -0.10477209091186523
  - -0.10571098327636719
  - -0.10585546493530273
  - -0.09978968650102615
  - -0.11202144622802734
  - -0.10501718521118164
  - -0.10213088989257812
  - -0.09955358505249023
  - -0.10567760467529297
  - -0.10091543197631836
  - -0.11823368072509766
  - -0.10417580604553223
  - -0.10118675231933594
  - -0.1029047966003418
  - -0.1034398078918457
  - -0.10189628601074219
  - -0.10593414306640625
  - -0.10446977615356445
  - -0.10543298721313477
  - -0.1994621902704239
  - -0.11327862739562988
  - -0.10605525970458984
  - -0.11717081069946289
  - -0.11582422256469727
  - -0.1048130989074707
  - -0.10768318176269531
  - -0.10510969161987305
  - -0.09662151336669922
  - -0.10888528823852539
  - -0.10935306549072266
  - -0.10464191436767578
  - -0.10403203964233398
  - -0.10136360675096512
  - -0.10254907608032227
  - -0.1021738052368164
  - -3.5403261184692383
  - -0.10389471054077148
  - -0.10142278671264648
  - -0.10431766510009766
  - -0.1109323501586914
  - -0.10515451431274414
  - -0.10505151748657227
  - -0.1505587249994278
- - -0.10352659225463867
  - -0.1048135757446289
  - -0.1073451042175293
  - -0.10369086265563965
  - -0.10186910629272461
  - -0.10293149948120117
  - -0.10739421844482422
  - -0.10130500793457031
  - -0.1042017936706543
  - -0.10506296157836914
  - -0.104278564453125
  - -0.14473693072795868
  - -0.11296343803405762
  - -0.10508489608764648
  - -0.29395484924316406
  - -0.1552128791809082
  - -0.09328079223632812
  - -0.08787345886230469
  - -0.09295415878295898
  - -0.09917068481445312
  - -0.10477209091186523
  - -0.10571098327636719
  - -0.10585546493530273
  - -0.09978968650102615
  - -0.11202144622802734
  - -0.10501718521118164
  - -0.10213088989257812
  - -0.09955358505249023
  - -0.10567760467529297
  - -0.10091543197631836
  - -0.11823368072509766
  - -0.10417580604553223
  - -0.10118675231933594
  - -0.1029047966003418
  - -0.1034398078918457
  - -0.10189628601074219
  - -0.10593414306640625
  - -0.10446977615356445
  - -0.10543298721313477
  - -0.1994621902704239
  - -0.11327862739562988
  - -0.10605525970458984
  - -0.11717081069946289
  - -0.11582422256469727
  - -0.1048130989074707
  - -3.5491127967834473
  - -0.10490202903747559
  - -0.09829187393188477
  - -0.10816240310668945
  - -0.10931873321533203
  - -0.10465526580810547
  - -0.1039271354675293
  - -0.10343653708696365
  - -0.10259246826171875
  - -0.10216712951660156
  - -0.10842204093933105
  - -0.10450077056884766
  - -0.10102605819702148
  - -0.10475826263427734
  - -0.11059141159057617
  - -0.10504817962646484
  - -0.10519886016845703
  - -0.1512959748506546
- - -0.10352659225463867
  - -0.1048135757446289
  - -0.1073451042175293
  - -0.10369086265563965
  - -0.10186910629272461
  - -0.10293149948120117
  - -0.10739421844482422
  - -0.10130500793457031
  - -0.1042017936706543
  - -0.10506296157836914
  - -0.104278564453125
  - -0.14473693072795868
  - -0.11296343803405762
  - -0.10508489608764648
  - -0.29395484924316406
  - -0.1552128791809082
  - -0.09328079223632812
  - -0.08787345886230469
  - -0.09295415878295898
  - -0.09917068481445312
  - -0.10477209091186523
  - -0.10571098327636719
  - -0.10585546493530273
  - -0.09978968650102615
  - -0.11202144622802734
  - -0.10501718521118164
  - -0.10213088989257812
  - -0.09955358505249023
  - -0.10567760467529297
  - -0.10091543197631836
  - -0.11823368072509766
  - -0.10417580604553223
  - -0.10118675231933594
  - -0.1029047966003418
  - -0.1034398078918457
  - -0.10189628601074219
  - -0.10593414306640625
  - -0.10446977615356445
  - -0.10543298721313477
  - -0.1994621902704239
  - -0.11327862739562988
  - -0.10605525970458984
  - -0.11717081069946289
  - -0.11582422256469727
  - -0.1048130989074707
  - -0.10768318176269531
  - -0.10510969161987305
  - -0.09662151336669922
  - -0.10888528823852539
  - -0.10935306549072266
  - -0.10464191436767578
  - -0.10403203964233398
  - -0.10136360675096512
  - -0.10254907608032227
  - -0.1021738052368164
  - -0.10842466354370117
  - -0.10450339317321777
  - -0.10099601745605469
  - -0.10465526580810547
  - -0.11054658889770508
  - -0.10503721237182617
  - -0.10518741607666016
  - -3.664090633392334
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Not')
  - ('Not', (True,))
  - ('cond', 'In')
  - ('In', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryId'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Not')
  - ('Not', (True,))
  - ('cond', 'In')
  - ('In', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryId'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Not')
  - ('Not', (True,))
  - ('cond', 'In')
  - ('In', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryId'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Not')
  - ('Not', (True,))
  - ('cond', 'In')
  - ('In', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryId'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Not')
  - ('Not', (True,))
  - ('cond', 'In')
  - ('In', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryId'
  - 'True'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Not')
  - ('Not', (True,))
  - ('cond', 'In')
  - ('In', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryId'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Not')
  - ('Not', (True,))
  - ('cond', 'In')
  - ('In', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryId'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Not')
  - ('Not', (True,))
  - ('cond', 'In')
  - ('In', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryId'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Not')
  - ('Not', (True,))
  - ('cond', 'In')
  - ('In', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryId'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
