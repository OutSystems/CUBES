db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/continents.csv
 - tests-examples/db2csv/car_1/tables/countries.csv
output: tests-examples/db2csv/car_1/tables/0004_dev.csv
raw_question: For each continent, list its id, name, and how many countries it has? 
question_index: 90 
join_columns:
 - contid
 - continent
groupby_columns:
 - contid
functions:
 - count
comment: |-
  SELECT T1.ContId,
         T1.Continent,
         count(*)
  FROM CONTINENTS AS T1
  JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent
  GROUP BY T1.ContId;

sql: |-
  SELECT T1.ContId,
         T1.Continent,
         count(*)
  FROM CONTINENTS AS T1
  JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent
  GROUP BY T1.ContId;
smbop_beam_join_columns:
- - contid
  - continent
- - contid
  - continent
- - continent
  - contid
- - contid
  - continent
- - contid
  - continent
- - continent
  - contid
- - contid
  - continent
- - contid
  - continent
- - continent
  - contid
- - continent
  - contid
smbop_beam_groupby_columns:
- - contid
- - continent
- - contid
- - contid
- - continent
- - continent
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
- - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
smbop_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- []
- - count
- - count
- []
smbop_beam_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT continents.contid , countries.countryname , COUNT( * ) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY continents.contid
  - SELECT continents.contid , countries.countryname , COUNT( * ) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY countries.continent
  - SELECT continents.contid , countries.countryname , COUNT( * ) FROM countries JOIN continents ON countries.continent = continents.contid GROUP BY continents.contid
  - SELECT continents.contid , continents.continent , COUNT( * ) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY continents.contid
  - SELECT continents.contid , continents.continent , COUNT( * ) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY countries.continent
  - SELECT continents.contid , countries.countryname , COUNT( * ) FROM countries JOIN continents ON countries.continent = continents.contid GROUP BY countries.continent
  - SELECT continents.contid , countries.countryname , countries.countryname FROM continents JOIN countries ON continents.contid = countries.continent
  - SELECT continents.contid , countries.countryname , COUNT( * ) FROM continents JOIN countries ON continents.contid = countries.continent
  - SELECT continents.contid , countries.countryname , COUNT( * ) FROM countries JOIN continents ON countries.continent = continents.contid
  - SELECT continents.contid , countries.countryname , countries.countryname FROM countries JOIN continents ON countries.continent = continents.contid
smbop_beam_inferred_code_w_terminals:
  - SELECT continents.contid , countries.countryname , COUNT( * ) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY continents.contid
  - SELECT continents.contid , countries.countryname , COUNT( * ) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY countries.continent
  - SELECT continents.contid , countries.countryname , COUNT( * ) FROM countries JOIN continents ON countries.continent = continents.contid GROUP BY continents.contid
  - SELECT continents.contid , continents.continent , COUNT( * ) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY continents.contid
  - SELECT continents.contid , continents.continent , COUNT( * ) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY countries.continent
  - SELECT continents.contid , countries.countryname , COUNT( * ) FROM countries JOIN continents ON countries.continent = continents.contid GROUP BY countries.continent
  - SELECT continents.contid , countries.countryname , countries.countryname FROM continents JOIN countries ON continents.contid = countries.continent
  - SELECT continents.contid , countries.countryname , COUNT( * ) FROM continents JOIN countries ON continents.contid = countries.continent
  - SELECT continents.contid , countries.countryname , COUNT( * ) FROM countries JOIN continents ON countries.continent = continents.contid
  - SELECT continents.contid , countries.countryname , countries.countryname FROM countries JOIN continents ON countries.continent = continents.contid
ratsql_beam_join_columns:
- - contid
  - continent
- - contid
  - continent
- - contid
  - continent
- - contid
  - continent
- - contid
  - continent
- - contid
  - continent
- - contid
  - continent
ratsql_beam_groupby_columns:
- - contid
- - contid
- - continent
- - contid
- - contid
- - continent
- - contid
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
ratsql_beam_constants:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT continents.ContId, continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT continents.ContId, Count(*), continents.ContId FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT continents.ContId, continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY countries.Continent
  - SELECT continents.ContId, Count(*), countries.Continent FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT continents.ContId, Count(*), continents.Continent FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT continents.ContId, continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent
  - SELECT DISTINCT continents.ContId, continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT continents.ContId, continents.Continent, Count(DISTINCT *) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT continents.ContId, DISTINCT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT continents.ContId, continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY DISTINCT continents.ContId
ratsql_beam_inferred_code_w_terminals:
  - SELECT continents.ContId, continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT continents.ContId, Count(*), continents.ContId FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT continents.ContId, continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY countries.Continent
  - SELECT continents.ContId, Count(*), countries.Continent FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT continents.ContId, Count(*), continents.Continent FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT continents.ContId, continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent
  - SELECT DISTINCT continents.ContId, continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT continents.ContId, continents.Continent, Count(DISTINCT *) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT continents.ContId, DISTINCT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId
  - SELECT continents.ContId, continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY DISTINCT continents.ContId
ratsql_beam_score_history:
- - -0.10451698303222656
  - -0.09698772430419922
  - -0.10736680030822754
  - -0.1041724681854248
  - -0.10156679153442383
  - -0.10433006286621094
  - -0.10425996780395508
  - -0.10142993927001953
  - -0.10446643829345703
  - -0.10486507415771484
  - -0.10480117797851562
  - -0.07627727091312408
  - -0.11334013938903809
  - -0.10505151748657227
  - -0.10294342041015625
  - -0.4416208267211914
  - -0.10223960876464844
  - -0.10490036010742188
  - -0.1083836555480957
  - -0.10534095764160156
  - -0.06135935336351395
  - -0.11214995384216309
  - -0.1055138111114502
  - -0.10352182388305664
  - -0.10589599609375
  - -0.10121917724609375
  - -0.1043558120727539
  - -0.10569095611572266
  - -0.10469913482666016
  - -0.09183778613805771
  - -0.11200618743896484
  - -0.10598349571228027
  - -0.1109781265258789
  - -0.10899114608764648
  - -0.10143613815307617
  - -0.10457468032836914
  - -0.10444211959838867
  - -0.24974578619003296
  - -0.10941815376281738
  - -0.1056368350982666
  - -0.10416221618652344
  - -0.10701870918273926
  - -0.1049656867980957
  - -0.10030078887939453
  - -0.10481977462768555
  - -0.11545515060424805
  - -0.10501813888549805
  - -0.10764741897583008
  - -0.11371210962533951
  - -0.10433244705200195
  - -0.10425567626953125
  - -0.0795750766992569
- - -0.10451698303222656
  - -0.09698772430419922
  - -0.10736680030822754
  - -0.1041724681854248
  - -0.10156679153442383
  - -0.10433006286621094
  - -0.10425996780395508
  - -0.10142993927001953
  - -0.10446643829345703
  - -0.10486507415771484
  - -0.10480117797851562
  - -0.07627727091312408
  - -0.11334013938903809
  - -0.10505151748657227
  - -0.10294342041015625
  - -1.331423282623291
  - -0.1008453369140625
  - -0.10422086715698242
  - -0.10781717300415039
  - -0.10520267486572266
  - -0.12758681178092957
  - -0.11060905456542969
  - -0.10555005073547363
  - -0.10735321044921875
  - -0.10031843185424805
  - -0.10317516326904297
  - -0.1048879623413086
  - -0.10523033142089844
  - -0.10526609420776367
  - -1.3593164682388306
  - -0.11073732376098633
  - -0.10573148727416992
  - -0.1054530143737793
  - -0.10500526428222656
  - -0.10130739212036133
  - -0.10477924346923828
  - -0.10453462600708008
  - -0.23550766706466675
  - -0.10953950881958008
  - -0.10555720329284668
  - -0.1039876937866211
  - -0.10694551467895508
  - -0.10488677024841309
  - -0.10067462921142578
  - -0.10437631607055664
  - -0.11534547805786133
  - -0.10501718521118164
  - -0.10753726959228516
  - -0.11507762223482132
  - -0.10436391830444336
  - -0.10421085357666016
  - -0.07962758839130402
- - -0.10451698303222656
  - -0.09698772430419922
  - -0.10736680030822754
  - -0.1041724681854248
  - -0.10156679153442383
  - -0.10433006286621094
  - -0.10425996780395508
  - -0.10142993927001953
  - -0.10446643829345703
  - -0.10486507415771484
  - -0.10480117797851562
  - -0.07627727091312408
  - -0.11334013938903809
  - -0.10505151748657227
  - -0.10294342041015625
  - -0.4416208267211914
  - -0.10223960876464844
  - -0.10490036010742188
  - -0.1083836555480957
  - -0.10534095764160156
  - -0.06135935336351395
  - -0.11214995384216309
  - -0.1055138111114502
  - -0.10352182388305664
  - -0.10589599609375
  - -0.10121917724609375
  - -0.1043558120727539
  - -0.10569095611572266
  - -0.10469913482666016
  - -0.09183778613805771
  - -0.11200618743896484
  - -0.10598349571228027
  - -0.1109781265258789
  - -0.10899114608764648
  - -0.10143613815307617
  - -0.10457468032836914
  - -0.10444211959838867
  - -2.546424388885498
  - -0.1118006706237793
  - -0.10581612586975098
  - -0.10416841506958008
  - -0.10717225074768066
  - -0.10505890846252441
  - -0.09906864166259766
  - -0.10456562042236328
  - -0.11517524719238281
  - -0.10512065887451172
  - -0.1066594123840332
  - -0.11240918189287186
  - -0.10425710678100586
  - -0.10382986068725586
  - -0.07895220816135406
- - -0.10451698303222656
  - -0.09698772430419922
  - -0.10736680030822754
  - -0.1041724681854248
  - -0.10156679153442383
  - -0.10433006286621094
  - -0.10425996780395508
  - -0.10142993927001953
  - -0.10446643829345703
  - -0.10486507415771484
  - -0.10480117797851562
  - -0.07627727091312408
  - -0.11334013938903809
  - -0.10505151748657227
  - -0.10294342041015625
  - -1.331423282623291
  - -0.1008453369140625
  - -0.10422086715698242
  - -0.10781717300415039
  - -0.10520267486572266
  - -0.12758681178092957
  - -0.11060905456542969
  - -0.10555005073547363
  - -0.10735321044921875
  - -0.10031843185424805
  - -0.10317516326904297
  - -0.1048879623413086
  - -0.10523033142089844
  - -0.10526609420776367
  - -1.7285654544830322
  - -0.11237978935241699
  - -0.1060178279876709
  - -0.10521888732910156
  - -0.1066746711730957
  - -0.10073232650756836
  - -0.10529708862304688
  - -0.10434532165527344
  - -0.2956135869026184
  - -0.10954523086547852
  - -0.10565018653869629
  - -0.10498476028442383
  - -0.10707616806030273
  - -0.10498571395874023
  - -0.0997929573059082
  - -0.10416984558105469
  - -0.11546707153320312
  - -0.10504531860351562
  - -0.10706949234008789
  - -0.11634959280490875
  - -0.10431575775146484
  - -0.1042337417602539
  - -0.07960480451583862
- - -0.10451698303222656
  - -0.09698772430419922
  - -0.10736680030822754
  - -0.1041724681854248
  - -0.10156679153442383
  - -0.10433006286621094
  - -0.10425996780395508
  - -0.10142993927001953
  - -0.10446643829345703
  - -0.10486507415771484
  - -0.10480117797851562
  - -0.07627727091312408
  - -0.11334013938903809
  - -0.10505151748657227
  - -0.10294342041015625
  - -1.331423282623291
  - -0.1008453369140625
  - -0.10422086715698242
  - -0.10781717300415039
  - -0.10520267486572266
  - -0.12758681178092957
  - -0.11060905456542969
  - -0.10555005073547363
  - -0.10735321044921875
  - -0.10031843185424805
  - -0.10317516326904297
  - -0.1048879623413086
  - -0.10523033142089844
  - -0.10526609420776367
  - -1.934889554977417
  - -0.11207389831542969
  - -0.10583043098449707
  - -0.09323835372924805
  - -0.10698175430297852
  - -0.10155487060546875
  - -0.10553836822509766
  - -0.10454320907592773
  - -0.22589141130447388
  - -0.10890078544616699
  - -0.1055748462677002
  - -0.10386371612548828
  - -0.10696196556091309
  - -0.10488128662109375
  - -0.10106706619262695
  - -0.10425186157226562
  - -0.1149754524230957
  - -0.10497474670410156
  - -0.1076054573059082
  - -0.11454037576913834
  - -0.10436677932739258
  - -0.10422611236572266
  - -0.07963606715202332
- - -0.10451698303222656
  - -0.09698772430419922
  - -0.10736680030822754
  - -0.1041724681854248
  - -0.10156679153442383
  - -0.10433006286621094
  - -0.10425996780395508
  - -0.10142993927001953
  - -0.10446643829345703
  - -0.10486507415771484
  - -0.10480117797851562
  - -0.07627727091312408
  - -0.11334013938903809
  - -0.10505151748657227
  - -0.10294342041015625
  - -0.4416208267211914
  - -0.10223960876464844
  - -0.10490036010742188
  - -0.1083836555480957
  - -0.10534095764160156
  - -0.06135935336351395
  - -0.11214995384216309
  - -0.1055138111114502
  - -0.10352182388305664
  - -0.10589599609375
  - -0.10121917724609375
  - -0.1043558120727539
  - -0.10569095611572266
  - -0.10469913482666016
  - -0.09183778613805771
  - -0.11200618743896484
  - -0.10598349571228027
  - -0.1109781265258789
  - -0.10899114608764648
  - -0.10143613815307617
  - -0.10457468032836914
  - -0.10444211959838867
  - -3.3269851207733154
  - -0.11093640327453613
  - -0.1052703857421875
  - -0.1038050651550293
  - -0.10731267929077148
  - -0.10506248474121094
  - -0.09922504425048828
  - -0.105621337890625
  - -0.11468982696533203
  - -0.1049356460571289
  - -0.10736608505249023
  - -0.11588681489229202
  - -0.1042933464050293
  - -0.10387706756591797
  - -0.07890473306179047
- - -0.10451698303222656
  - -0.09698772430419922
  - -0.10736680030822754
  - -0.1041724681854248
  - -0.10156679153442383
  - -0.10433006286621094
  - -0.10425996780395508
  - -0.10142993927001953
  - -0.10446643829345703
  - -0.10486507415771484
  - -0.10480117797851562
  - -0.07627727091312408
  - -3.4508917331695557
  - -0.10501766204833984
  - -0.10187244415283203
  - -0.3430900573730469
  - -0.10258674621582031
  - -0.10506582260131836
  - -0.10827779769897461
  - -0.10526514053344727
  - -0.07605291157960892
  - -0.11231327056884766
  - -0.10552597045898438
  - -0.10305547714233398
  - -0.1048727035522461
  - -0.10122489929199219
  - -0.10436296463012695
  - -0.10567903518676758
  - -0.10501766204833984
  - -0.08943001925945282
  - -0.1120765209197998
  - -0.10587072372436523
  - -0.11071014404296875
  - -0.10919618606567383
  - -0.10155916213989258
  - -0.10457134246826172
  - -0.10443735122680664
  - -0.24848222732543945
  - -0.10941553115844727
  - -0.10563087463378906
  - -0.10413169860839844
  - -0.10702013969421387
  - -0.10496830940246582
  - -0.10028553009033203
  - -0.10492181777954102
  - -0.11542272567749023
  - -0.1049947738647461
  - -0.10780954360961914
  - -0.11402039974927902
  - -0.10433149337768555
  - -0.10425949096679688
  - -0.07957980781793594
- - -0.10451698303222656
  - -0.09698772430419922
  - -0.10736680030822754
  - -0.1041724681854248
  - -0.10156679153442383
  - -0.10433006286621094
  - -0.10425996780395508
  - -0.10142993927001953
  - -0.10446643829345703
  - -0.10486507415771484
  - -0.10480117797851562
  - -0.07627727091312408
  - -0.11334013938903809
  - -0.10505151748657227
  - -0.10294342041015625
  - -0.4416208267211914
  - -0.10223960876464844
  - -0.10490036010742188
  - -0.1083836555480957
  - -0.10534095764160156
  - -0.06135935336351395
  - -0.11214995384216309
  - -0.1055138111114502
  - -0.10352182388305664
  - -0.10589599609375
  - -0.10121917724609375
  - -0.1043558120727539
  - -0.10569095611572266
  - -0.10469913482666016
  - -0.09183778613805771
  - -3.44865083694458
  - -0.10489130020141602
  - -0.11392974853515625
  - -0.11023902893066406
  - -0.10143041610717773
  - -0.10454845428466797
  - -0.1044621467590332
  - -0.2497137486934662
  - -0.10949063301086426
  - -0.10563421249389648
  - -0.10413074493408203
  - -0.10702252388000488
  - -0.10496163368225098
  - -0.1002664566040039
  - -0.10493898391723633
  - -0.11551237106323242
  - -0.10503339767456055
  - -0.10768461227416992
  - -0.11371700465679169
  - -0.10433769226074219
  - -0.10426187515258789
  - -0.07951980829238892
- - -0.10451698303222656
  - -0.09698772430419922
  - -0.10736680030822754
  - -0.1041724681854248
  - -0.10156679153442383
  - -0.10433006286621094
  - -0.10425996780395508
  - -0.10142993927001953
  - -0.10446643829345703
  - -0.10486507415771484
  - -0.10480117797851562
  - -0.07627727091312408
  - -0.11334013938903809
  - -0.10505151748657227
  - -0.10294342041015625
  - -0.4416208267211914
  - -0.10223960876464844
  - -0.10490036010742188
  - -0.1083836555480957
  - -0.10534095764160156
  - -0.06135935336351395
  - -3.4648826122283936
  - -0.1052558422088623
  - -0.10353994369506836
  - -0.10559606552124023
  - -0.10148859024047852
  - -0.10440397262573242
  - -0.10575246810913086
  - -0.1048588752746582
  - -0.09128410369157791
  - -0.11204338073730469
  - -0.10585427284240723
  - -0.11075782775878906
  - -0.10920953750610352
  - -0.10140371322631836
  - -0.10454750061035156
  - -0.1044759750366211
  - -0.24253028631210327
  - -0.10943007469177246
  - -0.1056203842163086
  - -0.10413503646850586
  - -0.10702037811279297
  - -0.1049654483795166
  - -0.1003108024597168
  - -0.1049036979675293
  - -0.11545181274414062
  - -0.10501480102539062
  - -0.1076807975769043
  - -0.11384668946266174
  - -0.10433530807495117
  - -0.10425567626953125
  - -0.0795135349035263
- - -0.10451698303222656
  - -0.09698772430419922
  - -0.10736680030822754
  - -0.1041724681854248
  - -0.10156679153442383
  - -0.10433006286621094
  - -0.10425996780395508
  - -0.10142993927001953
  - -0.10446643829345703
  - -0.10486507415771484
  - -0.10480117797851562
  - -0.07627727091312408
  - -0.11334013938903809
  - -0.10505151748657227
  - -0.10294342041015625
  - -0.4416208267211914
  - -0.10223960876464844
  - -0.10490036010742188
  - -0.1083836555480957
  - -0.10534095764160156
  - -0.06135935336351395
  - -0.11214995384216309
  - -0.1055138111114502
  - -0.10352182388305664
  - -0.10589599609375
  - -0.10121917724609375
  - -0.1043558120727539
  - -0.10569095611572266
  - -0.10469913482666016
  - -0.09183778613805771
  - -0.11200618743896484
  - -0.10598349571228027
  - -0.1109781265258789
  - -0.10899114608764648
  - -0.10143613815307617
  - -0.10457468032836914
  - -0.10444211959838867
  - -0.24974578619003296
  - -3.489226818084717
  - -0.10532760620117188
  - -0.10566282272338867
  - -0.10716795921325684
  - -0.10507035255432129
  - -0.0994267463684082
  - -0.10565567016601562
  - -0.11482620239257812
  - -0.10512685775756836
  - -0.10729694366455078
  - -0.11289379745721817
  - -0.10431623458862305
  - -0.1042470932006836
  - -0.07952817529439926
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'True'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ContId'
  - 'True'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
