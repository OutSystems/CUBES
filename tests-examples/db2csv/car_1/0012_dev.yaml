db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/car_names.csv
 - tests-examples/db2csv/car_1/tables/cars_data.csv
output: tests-examples/db2csv/car_1/tables/0012_dev.csv
raw_question: What is the model for the car with a weight smaller than the average? 
question_index: 98 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants: []
join_columns:
 - makeid
 - id
groupby_columns: []
functions:
 - avg
columns:
 - weight
filters:
 - '<'
ieu: []
comment: |-
  SELECT T1.model
  FROM CAR_NAMES AS T1
  JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id
  WHERE T2.Weight <
      (SELECT avg(Weight)
       FROM CARS_DATA)

sql: |-
  SELECT T1.model
  FROM CAR_NAMES AS T1
  JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id
  WHERE T2.Weight <
      (SELECT avg(Weight)
       FROM CARS_DATA)
smbop_beam_join_columns:
- - makeid
  - id
- []
- - makeid
  - id
- []
- []
- - makeid
  - id
smbop_beam_groupby_columns:
- []
- []
- - model
- []
- []
- - weight
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
smbop_beam_constants:
- []
- []
- []
- []
- []
- []
smbop_beam_functions:
- - avg
- - avg
- - avg
- - avg
- []
- - avg
smbop_beam_columns:
- - weight
- - weight
- - weight
- - weight
- []
- - weight
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '<'
- []
- - '<'
- []
- []
- - '<'
smbop_beam_inferred_code:
  - SELECT car_names.model FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.weight<(SELECT AVG( cars_data.weight ) FROM cars_data)
  - SELECT AVG( cars_data.weight ) FROM cars_data
  - SELECT car_names.model FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid GROUP BY car_names.model HAVING AVG( cars_data.weight )<cars_data.weight
  - SELECT AVG( cars_data.weight ) FROM cars_data ORDER BY cars_data.weight ASC
  - SELECT cars_data.weight FROM cars_data
  - SELECT car_names.model FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid GROUP BY cars_data.weight HAVING AVG( cars_data.weight )<cars_data.weight
smbop_beam_inferred_code_w_terminals:
  - SELECT car_names.model FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.weight<(SELECT AVG( cars_data.weight ) FROM cars_data)
  - SELECT AVG( cars_data.weight ) FROM cars_data
  - SELECT car_names.model FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid GROUP BY car_names.model HAVING AVG( cars_data.weight )<cars_data.weight
  - SELECT AVG( cars_data.weight ) FROM cars_data ORDER BY cars_data.weight ASC
  - SELECT cars_data.weight FROM cars_data
  - SELECT car_names.model FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid GROUP BY cars_data.weight HAVING AVG( cars_data.weight )<cars_data.weight
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - True
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- - makeid
  - id
- - makeid
  - id
- - model
  - makeid
  - id
- - model
  - makeid
  - id
- - country
  - makeid
  - countryid
  - maker
  - contid
  - model
  - id
  - continent
- - country
  - makeid
  - countryid
  - maker
  - model
  - id
- - makeid
  - id
- - makeid
  - id
- - makeid
  - id
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
ratsql_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- - '1)'
ratsql_beam_functions:
- - avg
- - avg
- - avg
- - avg
- - avg
- - avg
- - avg
- - avg
- - avg
ratsql_beam_columns:
- - weight
- - weight
- - weight
- - weight
- - weight
- - weight
- - weight
- - weight
- - weight
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '<'
- - '<'
- - '<'
- - '<'
- - '<'
- - '<'
- - '<'
- - '<'
- - '<'
ratsql_beam_inferred_code:
  - SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
  - SELECT DISTINCT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
  - SELECT car_names.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
  - SELECT DISTINCT car_names.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
  - SELECT car_names.Model FROM continents JOIN countries ON continents.ContId = countries.Continent AND continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
  - SELECT car_names.Model FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
  - SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE DISTINCT cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
  - SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT Avg(DISTINCT cars_data.Weight) FROM cars_data)
  - SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT DISTINCT Avg(cars_data.Weight) FROM cars_data)
  - SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data LIMIT 1)
ratsql_beam_inferred_code_w_terminals:
  - SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
  - SELECT DISTINCT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
  - SELECT car_names.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
  - SELECT DISTINCT car_names.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
  - SELECT car_names.Model FROM continents JOIN countries ON continents.ContId = countries.Continent AND continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
  - SELECT car_names.Model FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
  - SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE DISTINCT cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
  - SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT Avg(DISTINCT cars_data.Weight) FROM cars_data)
  - SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT DISTINCT Avg(cars_data.Weight) FROM cars_data)
  - SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data LIMIT 1)
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - True
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10516023635864258
  - -0.10447931289672852
  - -0.6580811738967896
  - -0.10441470146179199
  - -0.09928417205810547
  - -0.1028432846069336
  - -0.10463237762451172
  - -0.10161638259887695
  - -0.10426139831542969
  - -0.10524511337280273
  - -0.10566949844360352
  - -0.10754235833883286
  - -0.1104578971862793
  - -0.10484027862548828
  - -0.09514522552490234
  - -0.0973505973815918
  - -0.09123754501342773
  - -0.10077381134033203
  - -0.10484075546264648
  - -0.10491800308227539
  - -0.10506391525268555
  - -0.08769632875919342
  - -0.1128232479095459
  - -0.10550856590270996
  - -0.09375333786010742
  - -0.09959030151367188
  - -0.1056509017944336
  - -0.10524988174438477
  - -0.10934591293334961
  - -0.10455107688903809
  - -0.11426639556884766
  - -0.10567855834960938
  - -0.11274862289428711
  - -0.11062431335449219
  - -0.10548830032348633
  - -0.10425472259521484
  - -0.10575628280639648
  - -0.07237770408391953
  - -0.11250615119934082
  - -0.10535430908203125
  - -0.11079120635986328
  - -0.10527372360229492
  - -0.10319900512695312
  - -0.10799026489257812
  - -0.10482645034790039
  - -0.09816837310791016
  - -0.10600471496582031
  - -0.10942983627319336
  - -0.1051945686340332
  - -0.10419464111328125
  - -0.0808461457490921
  - -0.10300302505493164
  - -0.10236549377441406
  - -0.10730695724487305
  - -0.10448336601257324
  - -0.09731531143188477
  - -0.10541057586669922
  - -0.11683845520019531
  - -0.10503435134887695
  - -0.10368585586547852
  - -0.21051010489463806
  - -0.10457468032836914
  - -0.10501480102539062
  - -0.39178207516670227
- - -0.10516023635864258
  - -0.10447931289672852
  - -0.8686932325363159
  - -0.10408186912536621
  - -0.09918069839477539
  - -0.10306930541992188
  - -0.10457229614257812
  - -0.1015934944152832
  - -0.10424423217773438
  - -0.10521793365478516
  - -0.10567235946655273
  - -0.10535445064306259
  - -0.11044120788574219
  - -0.10481619834899902
  - -0.09628009796142578
  - -0.09888792037963867
  - -0.09169769287109375
  - -0.10076332092285156
  - -0.10483551025390625
  - -0.10492229461669922
  - -0.1050567626953125
  - -0.08765395730733871
  - -0.11279702186584473
  - -0.10550475120544434
  - -0.0937643051147461
  - -0.09963798522949219
  - -0.10567331314086914
  - -0.10527944564819336
  - -0.10933947563171387
  - -0.1045536994934082
  - -0.1142582893371582
  - -0.10572576522827148
  - -0.11271095275878906
  - -0.1106410026550293
  - -0.10548782348632812
  - -0.10425519943237305
  - -0.10575723648071289
  - -0.07243070751428604
  - -0.11247491836547852
  - -0.10535621643066406
  - -0.11073827743530273
  - -0.10524129867553711
  - -0.10320234298706055
  - -0.10799074172973633
  - -0.1048269271850586
  - -0.0981755256652832
  - -0.10601139068603516
  - -0.1094355583190918
  - -0.1051950454711914
  - -0.10419511795043945
  - -0.08081569522619247
  - -0.10300350189208984
  - -0.10236501693725586
  - -0.10730719566345215
  - -0.10448336601257324
  - -0.09731578826904297
  - -0.10541057586669922
  - -0.11683797836303711
  - -0.10503435134887695
  - -0.10368585586547852
  - -0.21051639318466187
  - -0.10457468032836914
  - -0.10501480102539062
  - -0.39176344871520996
- - -0.10516023635864258
  - -0.10447931289672852
  - -0.6580811738967896
  - -0.10441470146179199
  - -0.09928417205810547
  - -0.1028432846069336
  - -0.10463237762451172
  - -0.10161638259887695
  - -0.10426139831542969
  - -0.10524511337280273
  - -0.10566949844360352
  - -0.10754235833883286
  - -0.1104578971862793
  - -0.10484027862548828
  - -0.09514522552490234
  - -0.0973505973815918
  - -0.09123754501342773
  - -0.10077381134033203
  - -0.10484075546264648
  - -0.10491800308227539
  - -0.10506391525268555
  - -0.08769632875919342
  - -0.1128232479095459
  - -0.10550856590270996
  - -0.09375333786010742
  - -0.09959030151367188
  - -0.1056509017944336
  - -0.10524988174438477
  - -0.10934591293334961
  - -0.10455107688903809
  - -0.11426639556884766
  - -0.10567855834960938
  - -0.11274862289428711
  - -0.11062431335449219
  - -0.10548830032348633
  - -0.10425472259521484
  - -0.10575628280639648
  - -0.07237770408391953
  - -0.11250615119934082
  - -0.10535430908203125
  - -0.11079120635986328
  - -0.10527372360229492
  - -0.10319900512695312
  - -0.10799026489257812
  - -0.10482645034790039
  - -0.09816837310791016
  - -0.10600471496582031
  - -0.10942983627319336
  - -0.1051945686340332
  - -0.10419464111328125
  - -0.0808461457490921
  - -0.10300302505493164
  - -0.10236549377441406
  - -0.10730695724487305
  - -0.10448336601257324
  - -0.09731531143188477
  - -0.10541057586669922
  - -0.11683845520019531
  - -0.10503435134887695
  - -0.10368585586547852
  - -0.21051010489463806
  - -0.10457468032836914
  - -0.10501480102539062
  - -2.4410080909729004
- - -0.10516023635864258
  - -0.10447931289672852
  - -0.8686932325363159
  - -0.10408186912536621
  - -0.09918069839477539
  - -0.10306930541992188
  - -0.10457229614257812
  - -0.1015934944152832
  - -0.10424423217773438
  - -0.10521793365478516
  - -0.10567235946655273
  - -0.10535445064306259
  - -0.11044120788574219
  - -0.10481619834899902
  - -0.09628009796142578
  - -0.09888792037963867
  - -0.09169769287109375
  - -0.10076332092285156
  - -0.10483551025390625
  - -0.10492229461669922
  - -0.1050567626953125
  - -0.08765395730733871
  - -0.11279702186584473
  - -0.10550475120544434
  - -0.0937643051147461
  - -0.09963798522949219
  - -0.10567331314086914
  - -0.10527944564819336
  - -0.10933947563171387
  - -0.1045536994934082
  - -0.1142582893371582
  - -0.10572576522827148
  - -0.11271095275878906
  - -0.1106410026550293
  - -0.10548782348632812
  - -0.10425519943237305
  - -0.10575723648071289
  - -0.07243070751428604
  - -0.11247491836547852
  - -0.10535621643066406
  - -0.11073827743530273
  - -0.10524129867553711
  - -0.10320234298706055
  - -0.10799074172973633
  - -0.1048269271850586
  - -0.0981755256652832
  - -0.10601139068603516
  - -0.1094355583190918
  - -0.1051950454711914
  - -0.10419511795043945
  - -0.08081569522619247
  - -0.10300350189208984
  - -0.10236501693725586
  - -0.10730719566345215
  - -0.10448336601257324
  - -0.09731578826904297
  - -0.10541057586669922
  - -0.11683797836303711
  - -0.10503435134887695
  - -0.10368585586547852
  - -0.21051639318466187
  - -0.10457468032836914
  - -0.10501480102539062
  - -2.441013813018799
- - -0.10516023635864258
  - -0.10447931289672852
  - -0.6580811738967896
  - -0.10441470146179199
  - -0.09928417205810547
  - -0.1028432846069336
  - -0.10463237762451172
  - -0.10161638259887695
  - -0.10426139831542969
  - -0.10524511337280273
  - -0.10566949844360352
  - -0.10754235833883286
  - -0.1104578971862793
  - -0.10484027862548828
  - -0.09514522552490234
  - -0.0973505973815918
  - -0.09123754501342773
  - -0.10077381134033203
  - -0.10484075546264648
  - -0.10491800308227539
  - -0.10506391525268555
  - -0.08769632875919342
  - -0.1128232479095459
  - -0.10550856590270996
  - -0.09375333786010742
  - -0.09959030151367188
  - -0.1056509017944336
  - -0.10524988174438477
  - -0.10934591293334961
  - -0.10455107688903809
  - -0.11426639556884766
  - -0.10567855834960938
  - -0.11274862289428711
  - -0.11062431335449219
  - -0.10548830032348633
  - -0.10425472259521484
  - -0.10575628280639648
  - -0.07237770408391953
  - -0.11250615119934082
  - -0.10535430908203125
  - -0.11079120635986328
  - -0.10527372360229492
  - -0.10319900512695312
  - -0.10799026489257812
  - -0.10482645034790039
  - -0.09816837310791016
  - -0.10600471496582031
  - -0.10942983627319336
  - -0.1051945686340332
  - -0.10419464111328125
  - -0.0808461457490921
  - -0.10300302505493164
  - -0.10236549377441406
  - -0.10730695724487305
  - -0.10448336601257324
  - -0.09731531143188477
  - -0.10541057586669922
  - -0.11683845520019531
  - -0.10503435134887695
  - -0.10368585586547852
  - -0.21051010489463806
  - -0.10457468032836914
  - -0.10501480102539062
  - -3.688009262084961
- - -0.10516023635864258
  - -0.10447931289672852
  - -0.6580811738967896
  - -0.10441470146179199
  - -0.09928417205810547
  - -0.1028432846069336
  - -0.10463237762451172
  - -0.10161638259887695
  - -0.10426139831542969
  - -0.10524511337280273
  - -0.10566949844360352
  - -0.10754235833883286
  - -0.1104578971862793
  - -0.10484027862548828
  - -0.09514522552490234
  - -0.0973505973815918
  - -0.09123754501342773
  - -0.10077381134033203
  - -0.10484075546264648
  - -0.10491800308227539
  - -0.10506391525268555
  - -0.08769632875919342
  - -0.1128232479095459
  - -0.10550856590270996
  - -0.09375333786010742
  - -0.09959030151367188
  - -0.1056509017944336
  - -0.10524988174438477
  - -0.10934591293334961
  - -0.10455107688903809
  - -0.11426639556884766
  - -0.10567855834960938
  - -0.11274862289428711
  - -0.11062431335449219
  - -0.10548830032348633
  - -0.10425472259521484
  - -0.10575628280639648
  - -0.07237770408391953
  - -0.11250615119934082
  - -0.10535430908203125
  - -0.11079120635986328
  - -0.10527372360229492
  - -0.10319900512695312
  - -0.10799026489257812
  - -0.10482645034790039
  - -0.09816837310791016
  - -0.10600471496582031
  - -0.10942983627319336
  - -0.1051945686340332
  - -0.10419464111328125
  - -0.0808461457490921
  - -0.10300302505493164
  - -0.10236549377441406
  - -0.10730695724487305
  - -0.10448336601257324
  - -0.09731531143188477
  - -0.10541057586669922
  - -0.11683845520019531
  - -0.10503435134887695
  - -0.10368585586547852
  - -0.21051010489463806
  - -0.10457468032836914
  - -0.10501480102539062
  - -3.7126212120056152
- - -0.10516023635864258
  - -0.10447931289672852
  - -0.6580811738967896
  - -0.10441470146179199
  - -0.09928417205810547
  - -0.1028432846069336
  - -0.10463237762451172
  - -0.10161638259887695
  - -0.10426139831542969
  - -0.10524511337280273
  - -0.10566949844360352
  - -0.10754235833883286
  - -0.1104578971862793
  - -0.10484027862548828
  - -0.09514522552490234
  - -0.0973505973815918
  - -0.09123754501342773
  - -0.10077381134033203
  - -0.10484075546264648
  - -0.10491800308227539
  - -0.10506391525268555
  - -0.08769632875919342
  - -3.4465324878692627
  - -0.1053934097290039
  - -0.08647584915161133
  - -0.10001134872436523
  - -0.1060175895690918
  - -0.10478973388671875
  - -0.10944509506225586
  - -0.10455179214477539
  - -0.11467742919921875
  - -0.10471439361572266
  - -0.1147007942199707
  - -0.1098947525024414
  - -0.10548257827758789
  - -0.10426568984985352
  - -0.10572099685668945
  - -0.07127877324819565
  - -0.11254072189331055
  - -0.1053476333618164
  - -0.11142635345458984
  - -0.1048593521118164
  - -0.1034708023071289
  - -0.10799670219421387
  - -0.10482382774353027
  - -0.09842538833618164
  - -0.10590457916259766
  - -0.10961532592773438
  - -0.10516977310180664
  - -0.10419893264770508
  - -0.08144761621952057
  - -0.10305261611938477
  - -0.10233926773071289
  - -0.10730671882629395
  - -0.10448408126831055
  - -0.09731721878051758
  - -0.10539388656616211
  - -0.11676549911499023
  - -0.10503339767456055
  - -0.1036829948425293
  - -0.21053560078144073
  - -0.10457468032836914
  - -0.1050119400024414
  - -0.39161866903305054
- - -0.10516023635864258
  - -0.10447931289672852
  - -0.6580811738967896
  - -0.10441470146179199
  - -0.09928417205810547
  - -0.1028432846069336
  - -0.10463237762451172
  - -0.10161638259887695
  - -0.10426139831542969
  - -0.10524511337280273
  - -0.10566949844360352
  - -0.10754235833883286
  - -0.1104578971862793
  - -0.10484027862548828
  - -0.09514522552490234
  - -0.0973505973815918
  - -0.09123754501342773
  - -0.10077381134033203
  - -0.10484075546264648
  - -0.10491800308227539
  - -0.10506391525268555
  - -0.08769632875919342
  - -0.1128232479095459
  - -0.10550856590270996
  - -0.09375333786010742
  - -0.09959030151367188
  - -0.1056509017944336
  - -0.10524988174438477
  - -0.10934591293334961
  - -0.10455107688903809
  - -0.11426639556884766
  - -0.10567855834960938
  - -0.11274862289428711
  - -0.11062431335449219
  - -0.10548830032348633
  - -0.10425472259521484
  - -0.10575628280639648
  - -0.07237770408391953
  - -3.451587438583374
  - -0.1058354377746582
  - -0.11564016342163086
  - -0.10620880126953125
  - -0.10336875915527344
  - -0.10798120498657227
  - -0.10483527183532715
  - -0.09819221496582031
  - -0.10598230361938477
  - -0.10935115814208984
  - -0.10517120361328125
  - -0.10417509078979492
  - -0.08092652261257172
  - -0.1029672622680664
  - -0.10236358642578125
  - -0.10730576515197754
  - -0.10448336601257324
  - -0.09730243682861328
  - -0.10537958145141602
  - -0.11678791046142578
  - -0.10503196716308594
  - -0.10368061065673828
  - -0.2104998677968979
  - -0.10457944869995117
  - -0.10501480102539062
  - -0.39214617013931274
- - -0.10516023635864258
  - -0.10447931289672852
  - -0.6580811738967896
  - -0.10441470146179199
  - -0.09928417205810547
  - -0.1028432846069336
  - -0.10463237762451172
  - -0.10161638259887695
  - -0.10426139831542969
  - -0.10524511337280273
  - -0.10566949844360352
  - -0.10754235833883286
  - -0.1104578971862793
  - -0.10484027862548828
  - -0.09514522552490234
  - -0.0973505973815918
  - -0.09123754501342773
  - -0.10077381134033203
  - -0.10484075546264648
  - -0.10491800308227539
  - -0.10506391525268555
  - -0.08769632875919342
  - -0.1128232479095459
  - -0.10550856590270996
  - -0.09375333786010742
  - -0.09959030151367188
  - -0.1056509017944336
  - -0.10524988174438477
  - -3.4912757873535156
  - -0.10388565063476562
  - -0.10849332809448242
  - -0.1066737174987793
  - -0.11560392379760742
  - -0.1100010871887207
  - -0.10536766052246094
  - -0.10426092147827148
  - -0.10577726364135742
  - -0.07184408605098724
  - -0.11254453659057617
  - -0.10535573959350586
  - -0.11084508895874023
  - -0.10522747039794922
  - -0.10320806503295898
  - -0.10798883438110352
  - -0.1048281192779541
  - -0.09816551208496094
  - -0.10601282119750977
  - -0.10943174362182617
  - -0.10519695281982422
  - -0.10419511795043945
  - -0.0808103010058403
  - -0.10299444198608398
  - -0.10235738754272461
  - -0.10730743408203125
  - -0.10448384284973145
  - -0.09731674194335938
  - -0.10541105270385742
  - -0.11683273315429688
  - -0.10503435134887695
  - -0.10368633270263672
  - -0.21052400767803192
  - -0.10457515716552734
  - -0.10501432418823242
  - -0.39169713854789734
- - -0.10516023635864258
  - -0.10447931289672852
  - -0.6580811738967896
  - -0.10441470146179199
  - -0.09928417205810547
  - -0.1028432846069336
  - -0.10463237762451172
  - -0.10161638259887695
  - -0.10426139831542969
  - -0.10524511337280273
  - -0.10566949844360352
  - -0.10754235833883286
  - -0.1104578971862793
  - -0.10484027862548828
  - -0.09514522552490234
  - -0.0973505973815918
  - -0.09123754501342773
  - -0.10077381134033203
  - -0.10484075546264648
  - -0.10491800308227539
  - -0.10506391525268555
  - -0.08769632875919342
  - -0.1128232479095459
  - -0.10550856590270996
  - -0.09375333786010742
  - -0.09959030151367188
  - -0.1056509017944336
  - -0.10524988174438477
  - -0.10934591293334961
  - -0.10455107688903809
  - -0.11426639556884766
  - -0.10567855834960938
  - -0.11274862289428711
  - -0.11062431335449219
  - -0.10548830032348633
  - -0.10425472259521484
  - -0.10575628280639648
  - -0.07237770408391953
  - -0.11250615119934082
  - -0.10535430908203125
  - -0.11079120635986328
  - -0.10527372360229492
  - -0.10319900512695312
  - -3.545008659362793
  - -0.10471343994140625
  - -0.09758377075195312
  - -0.1065821647644043
  - -0.10948753356933594
  - -0.10522317886352539
  - -0.1042180061340332
  - -0.08042428642511368
  - -0.10291051864624023
  - -0.10231733322143555
  - -0.10730957984924316
  - -0.10448694229125977
  - -0.09733200073242188
  - -0.1054224967956543
  - -0.11685371398925781
  - -0.10503435134887695
  - -0.10368824005126953
  - -0.21049775183200836
  - -0.10457515716552734
  - -0.10501289367675781
  - -0.3917894661426544
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'True'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Model'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
