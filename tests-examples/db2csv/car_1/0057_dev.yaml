db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/cars_data.csv
output: tests-examples/db2csv/car_1/tables/0057_dev.csv
raw_question: How many cars have more than 4 cylinders? 
question_index: 143 
constants:
 - 4
functions:
 - count
columns:
 - cylinders
filters:
 - '>'
comment: |-
  SELECT count(*)
  FROM CARS_DATA
  WHERE Cylinders > 4;

sql: |-
  SELECT count(*)
  FROM CARS_DATA
  WHERE Cylinders > 4;
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
smbop_beam_constants:
- - 4
- - 4
- - 4
- - 4
- - 4
- - 4
smbop_beam_functions:
- - count
- - count
- - count
- - count
- - count
- []
smbop_beam_columns:
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- []
smbop_beam_ieu:
- []
- []
- []
- []
- - union
- []
smbop_beam_filters:
- - '>'
- - '='
- - '<'
- - '<'
- - '>'
- []
smbop_beam_inferred_code:
  - SELECT COUNT( * ) FROM cars_data WHERE cars_data.cylinders > 4
  - SELECT COUNT( * ) FROM car_names, cars_data WHERE cars_data.cylinders = 4
  - SELECT COUNT( * ) FROM model_list, cars_data WHERE cars_data.cylinders<4
  - SELECT COUNT( * ) FROM car_names, cars_data WHERE cars_data.cylinders<4
  - SELECT COUNT( * ) FROM cars_data WHERE cars_data.cylinders > 4 UNION SELECT COUNT( * ) FROM cars_data WHERE cars_data.cylinders > 4
  - SELECT cars_data.cylinders FROM cars_data
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( * ) FROM cars_data WHERE cars_data.cylinders > 4
  - SELECT COUNT( * ) FROM car_names, cars_data WHERE cars_data.cylinders = 4
  - SELECT COUNT( * ) FROM model_list, cars_data WHERE cars_data.cylinders<4
  - SELECT COUNT( * ) FROM car_names, cars_data WHERE cars_data.cylinders<4
  - SELECT COUNT( * ) FROM cars_data WHERE cars_data.cylinders > 4 UNION SELECT COUNT( * ) FROM cars_data WHERE cars_data.cylinders > 4
  - SELECT cars_data.cylinders FROM cars_data
ratsql_beam_join_columns:
- []
- []
- []
- - model
  - id
  - makeid
- - model
  - country
  - contid
  - continent
  - countryid
  - id
  - maker
  - makeid
- - model
  - country
  - countryid
  - id
  - maker
  - makeid
- - id
  - makeid
- - id
  - maker
  - model
  - makeid
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
ratsql_beam_constants:
- - 4
- - 4
- - 4
- - 4
- - 4
- - 4
- - 4
- - 4
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
ratsql_beam_inferred_code:
  - SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
  - SELECT Count(*) FROM cars_data WHERE DISTINCT cars_data.Cylinders > 'terminal'
  - SELECT Count(DISTINCT *) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
  - SELECT DISTINCT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
  - SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal' LIMIT 1
  - SELECT Count(*) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 'terminal'
  - SELECT Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 'terminal'
  - SELECT Count(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 'terminal'
  - SELECT Count(*) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 'terminal'
  - SELECT Count(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 4
  - SELECT Count(*) FROM cars_data WHERE DISTINCT cars_data.Cylinders > 4
  - SELECT Count(DISTINCT *) FROM cars_data WHERE cars_data.Cylinders > 4
  - SELECT DISTINCT Count(*) FROM cars_data WHERE cars_data.Cylinders > 4
  - SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 4 LIMIT 1
  - SELECT Count(*) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 4
  - SELECT Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 4
  - SELECT Count(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 4
  - SELECT Count(*) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 4
  - SELECT Count(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 4
ratsql_beam_score_history:
- - -0.10431909561157227
  - -0.10519552230834961
  - -0.1071159839630127
  - -0.10381412506103516
  - -0.10262346267700195
  - -0.10441303253173828
  - -0.11634635925292969
  - -0.10429906845092773
  - -0.10532331466674805
  - -0.104766845703125
  - -0.10560274124145508
  - -0.08975710719823837
  - -0.10935592651367188
  - -0.10489964485168457
  - -0.0928959846496582
  - -0.09154415130615234
  - -0.0914158821105957
  - -0.10228443145751953
  - -0.10542011260986328
  - -0.10422229766845703
  - -0.10430622100830078
  - -0.10508543998003006
  - -0.11181044578552246
  - -0.10577750205993652
  - -0.11322259902954102
  - -0.09970855712890625
  - -0.10229349136352539
  - -0.10755205154418945
  - -0.10471224784851074
  - -0.09728240966796875
  - -0.10283613204956055
  - -0.1081552505493164
  - -0.10584783554077148
  - -0.10387516021728516
  - -0.12101025134325027
- - -0.10431909561157227
  - -0.10519552230834961
  - -0.1071159839630127
  - -0.10381412506103516
  - -0.10262346267700195
  - -0.10441303253173828
  - -0.11634635925292969
  - -0.10429906845092773
  - -0.10532331466674805
  - -0.104766845703125
  - -0.10560274124145508
  - -0.08975710719823837
  - -0.10935592651367188
  - -0.10489964485168457
  - -0.0928959846496582
  - -0.09154415130615234
  - -0.0914158821105957
  - -0.10228443145751953
  - -0.10542011260986328
  - -0.10422229766845703
  - -0.10430622100830078
  - -0.10508543998003006
  - -3.443798065185547
  - -0.10633730888366699
  - -0.10965585708618164
  - -0.09935379028320312
  - -0.10234308242797852
  - -0.10754823684692383
  - -0.1046912670135498
  - -0.09733104705810547
  - -0.10299968719482422
  - -0.10811519622802734
  - -0.10591983795166016
  - -0.10415315628051758
  - -0.11984529346227646
- - -0.10431909561157227
  - -0.10519552230834961
  - -0.1071159839630127
  - -0.10381412506103516
  - -0.10262346267700195
  - -0.10441303253173828
  - -0.11634635925292969
  - -0.10429906845092773
  - -0.10532331466674805
  - -0.104766845703125
  - -0.10560274124145508
  - -0.08975710719823837
  - -3.5195882320404053
  - -0.11008095741271973
  - -0.09186792373657227
  - -0.09046030044555664
  - -0.0933694839477539
  - -0.10222053527832031
  - -0.10541582107543945
  - -0.10426712036132812
  - -0.10438966751098633
  - -0.10415617376565933
  - -0.11183309555053711
  - -0.10574865341186523
  - -0.11271429061889648
  - -0.09956073760986328
  - -0.10228919982910156
  - -0.10754609107971191
  - -0.10471010208129883
  - -0.09725761413574219
  - -0.10278463363647461
  - -0.10820341110229492
  - -0.1059422492980957
  - -0.10379552841186523
  - -0.12223397940397263
- - -0.10431909561157227
  - -0.10519552230834961
  - -3.525482177734375
  - -0.10394525527954102
  - -0.10124778747558594
  - -0.10439634323120117
  - -0.11664772033691406
  - -0.10355854034423828
  - -0.105316162109375
  - -0.10478544235229492
  - -0.10553693771362305
  - -0.08947046101093292
  - -0.10938739776611328
  - -0.10483455657958984
  - -0.09252357482910156
  - -0.09124612808227539
  - -0.09135580062866211
  - -0.10230875015258789
  - -0.10543441772460938
  - -0.10419988632202148
  - -0.10423469543457031
  - -0.10556954145431519
  - -0.1117849349975586
  - -0.10577893257141113
  - -0.11313772201538086
  - -0.09975624084472656
  - -0.10228776931762695
  - -0.10754966735839844
  - -0.10471105575561523
  - -0.0972900390625
  - -0.10283279418945312
  - -0.10815811157226562
  - -0.10584831237792969
  - -0.10387897491455078
  - -0.12096863240003586
- - -0.10431909561157227
  - -0.10519552230834961
  - -0.1071159839630127
  - -0.10381412506103516
  - -0.10262346267700195
  - -0.10441303253173828
  - -0.11634635925292969
  - -0.10429906845092773
  - -0.10532331466674805
  - -0.104766845703125
  - -0.10560274124145508
  - -0.08975710719823837
  - -0.10935592651367188
  - -0.10489964485168457
  - -0.0928959846496582
  - -0.09154415130615234
  - -0.0914158821105957
  - -0.10228443145751953
  - -0.10542011260986328
  - -0.10422229766845703
  - -0.10430622100830078
  - -0.10508543998003006
  - -0.11181044578552246
  - -0.10577750205993652
  - -0.11322259902954102
  - -0.09970855712890625
  - -0.10229349136352539
  - -3.5535972118377686
  - -0.10436654090881348
  - -0.09790468215942383
  - -0.10286712646484375
  - -0.10806035995483398
  - -0.10602331161499023
  - -0.10377025604248047
  - -0.12143782526254654
- - -0.10431909561157227
  - -0.10519552230834961
  - -0.1071159839630127
  - -0.10381412506103516
  - -0.10262346267700195
  - -0.10441303253173828
  - -0.11634635925292969
  - -0.10429906845092773
  - -0.10532331466674805
  - -0.104766845703125
  - -0.10560274124145508
  - -0.08975710719823837
  - -0.10935592651367188
  - -0.10489964485168457
  - -0.0928959846496582
  - -0.09154415130615234
  - -0.0914158821105957
  - -0.10228443145751953
  - -0.10542011260986328
  - -0.10422229766845703
  - -0.10430622100830078
  - -0.10508543998003006
  - -0.11181044578552246
  - -0.10577750205993652
  - -0.11322259902954102
  - -0.09970855712890625
  - -0.10229349136352539
  - -0.10755205154418945
  - -0.10471224784851074
  - -0.09728240966796875
  - -0.10283613204956055
  - -0.1081552505493164
  - -0.10584783554077148
  - -0.10387516021728516
  - -3.674675941467285
- - -0.10431909561157227
  - -0.10519552230834961
  - -0.1071159839630127
  - -0.10381412506103516
  - -0.10262346267700195
  - -0.10441303253173828
  - -0.11634635925292969
  - -0.10429906845092773
  - -0.10532331466674805
  - -0.104766845703125
  - -0.10560274124145508
  - -0.08975710719823837
  - -0.10935592651367188
  - -0.10489964485168457
  - -0.0928959846496582
  - -0.09154415130615234
  - -0.0914158821105957
  - -0.10228443145751953
  - -0.10542011260986328
  - -0.10422229766845703
  - -0.10430622100830078
  - -0.10508543998003006
  - -0.11181044578552246
  - -0.10577750205993652
  - -0.11322259902954102
  - -0.09970855712890625
  - -0.10229349136352539
  - -0.10755205154418945
  - -0.10471224784851074
  - -0.09728240966796875
  - -0.10283613204956055
  - -0.1081552505493164
  - -0.10584783554077148
  - -0.10387516021728516
  - -3.7557177543640137
- - -0.10431909561157227
  - -0.10519552230834961
  - -0.1071159839630127
  - -0.10381412506103516
  - -0.10262346267700195
  - -0.10441303253173828
  - -0.11634635925292969
  - -0.10429906845092773
  - -0.10532331466674805
  - -0.104766845703125
  - -0.10560274124145508
  - -0.08975710719823837
  - -0.10935592651367188
  - -0.10489964485168457
  - -0.0928959846496582
  - -0.09154415130615234
  - -0.0914158821105957
  - -0.10228443145751953
  - -0.10542011260986328
  - -0.10422229766845703
  - -0.10430622100830078
  - -0.10508543998003006
  - -0.11181044578552246
  - -0.10577750205993652
  - -0.11322259902954102
  - -0.09970855712890625
  - -0.10229349136352539
  - -0.10755205154418945
  - -0.10471224784851074
  - -0.09728240966796875
  - -0.10283613204956055
  - -0.1081552505493164
  - -0.10584783554077148
  - -0.10387516021728516
  - -3.772050619125366
- - -0.10431909561157227
  - -0.10519552230834961
  - -0.1071159839630127
  - -0.10381412506103516
  - -0.10262346267700195
  - -0.10441303253173828
  - -0.11634635925292969
  - -0.10429906845092773
  - -0.10532331466674805
  - -0.104766845703125
  - -0.10560274124145508
  - -0.08975710719823837
  - -0.10935592651367188
  - -0.10489964485168457
  - -0.0928959846496582
  - -0.09154415130615234
  - -0.0914158821105957
  - -0.10228443145751953
  - -0.10542011260986328
  - -0.10422229766845703
  - -0.10430622100830078
  - -0.10508543998003006
  - -0.11181044578552246
  - -0.10577750205993652
  - -0.11322259902954102
  - -0.09970855712890625
  - -0.10229349136352539
  - -0.10755205154418945
  - -0.10471224784851074
  - -0.09728240966796875
  - -0.10283613204956055
  - -0.1081552505493164
  - -0.10584783554077148
  - -0.10387516021728516
  - -3.785857677459717
- - -0.10431909561157227
  - -0.10519552230834961
  - -0.1071159839630127
  - -0.10381412506103516
  - -0.10262346267700195
  - -0.10441303253173828
  - -0.11634635925292969
  - -0.10429906845092773
  - -0.10532331466674805
  - -0.104766845703125
  - -0.10560274124145508
  - -0.08975710719823837
  - -0.10935592651367188
  - -0.10489964485168457
  - -0.0928959846496582
  - -0.09154415130615234
  - -0.0914158821105957
  - -0.10228443145751953
  - -0.10542011260986328
  - -0.10422229766845703
  - -0.10430622100830078
  - -0.10508543998003006
  - -0.11181044578552246
  - -0.10577750205993652
  - -0.11322259902954102
  - -0.09970855712890625
  - -0.10229349136352539
  - -0.10755205154418945
  - -0.10471224784851074
  - -0.09728240966796875
  - -0.10283613204956055
  - -0.1081552505493164
  - -0.10584783554077148
  - -0.10387516021728516
  - -3.9353158473968506
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
