db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/cars_data.csv
output: tests-examples/db2csv/car_1/tables/0034_dev.csv
raw_question: What is the minimum weight of the car with 8 cylinders produced in 1974 ? 
question_index: 120 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - 1974
 - 8
join_columns: []
groupby_columns: []
functions:
 - min
columns:
 - cylinders
 - year
 - weight
filters:
 - '='
ieu: []
comment: |-
  select min(weight)
  from cars_data
  where cylinders = 8
    and year = 1974

sql: |-
  select min(weight)
  from cars_data
  where cylinders = 8
    and year = 1974
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
smbop_beam_constants:
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
smbop_beam_functions:
- - min
- - min
- []
- - min
- - min
- - min
- - min
- - avg
- - avg
- []
smbop_beam_columns:
- - cylinders
  - year
  - weight
- - cylinders
  - year
  - weight
- - cylinders
  - year
- - cylinders
  - weight
- - cylinders
  - weight
- - cylinders
  - year
  - weight
- - year
  - weight
- - cylinders
  - year
  - weight
- - cylinders
  - weight
- - cylinders
  - year
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = '8' AND cars_data.year = 1974
  - SELECT cars_data.weight FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.cylinders = 1974
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 1974 AND cars_data.cylinders = 8
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.year = 1974 AND cars_data.cylinders = 8
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.year = 8 AND cars_data.year = 1974
  - SELECT AVG( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
  - SELECT AVG( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.cylinders = 1974
  - SELECT DISTINCT cars_data.weight FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
smbop_beam_inferred_code_w_terminals:
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = '8' AND cars_data.year = 1974
  - SELECT cars_data.weight FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.cylinders = 1974
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 1974 AND cars_data.cylinders = 8
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.year = 1974 AND cars_data.cylinders = 8
  - SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.year = 8 AND cars_data.year = 1974
  - SELECT AVG( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
  - SELECT AVG( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.cylinders = 1974
  - SELECT DISTINCT cars_data.weight FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- []
- []
- []
- []
- - country
  - makeid
  - countryid
  - maker
  - contid
  - model
  - id
  - continent
- - country
  - makeid
  - countryid
  - maker
  - model
  - id
- - model
  - makeid
  - id
- []
- - makeid
  - id
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
ratsql_beam_constants:
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
  - '1'
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
- - 1974
  - 8
ratsql_beam_functions:
- - min
- - min
- - min
- - min
- - min
- - min
- - min
- - min
- - min
ratsql_beam_columns:
- - year
  - weight
- - year
  - weight
- - year
  - weight
- - year
  - weight
- - year
  - weight
- - year
  - weight
- - year
  - weight
- - cylinders
  - weight
- - year
  - weight
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Year = 'terminal'
  - SELECT DISTINCT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Year = 'terminal'
  - SELECT Min(DISTINCT cars_data.Weight) FROM cars_data WHERE cars_data.Year = 'terminal'
  - SELECT Min(cars_data.Weight) FROM cars_data WHERE DISTINCT cars_data.Year = 'terminal'
  - SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Year = 'terminal' LIMIT 1
  - SELECT Min(cars_data.Weight) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal'
  - SELECT Min(cars_data.Weight) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal'
  - SELECT Min(cars_data.Weight) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal'
  - SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 'terminal'
  - SELECT Min(cars_data.Weight) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Year = 1974
  - SELECT DISTINCT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Year = 1974
  - SELECT Min(DISTINCT cars_data.Weight) FROM cars_data WHERE cars_data.Year = 1974
  - SELECT Min(cars_data.Weight) FROM cars_data WHERE DISTINCT cars_data.Year = 1974
  - SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Year = 1974 LIMIT 1
  - SELECT Min(cars_data.Weight) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1974
  - SELECT Min(cars_data.Weight) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1974
  - SELECT Min(cars_data.Weight) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1974
  - SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 1974
  - SELECT Min(cars_data.Weight) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1974
ratsql_beam_has_limit:
  - False
  - False
  - False
  - True
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10431814193725586
  - -0.10437393188476562
  - -0.11170339584350586
  - -0.10401654243469238
  - -0.10833883285522461
  - -0.1020045280456543
  - -0.08829593658447266
  - -0.10262203216552734
  - -0.10618972778320312
  - -0.10406255722045898
  - -0.10517120361328125
  - -0.0848478227853775
  - -0.11353421211242676
  - -0.10514688491821289
  - -0.1023092269897461
  - -0.09995079040527344
  - -0.10282707214355469
  - -0.10097122192382812
  - -0.10498571395874023
  - -0.10677194595336914
  - -0.10556602478027344
  - -0.14405274391174316
  - -0.11169123649597168
  - -0.1054694652557373
  - -0.10403585433959961
  - -0.09923315048217773
  - -0.1023550033569336
  - -0.10810995101928711
  - -0.10468459129333496
  - -0.09969425201416016
  - -0.10516834259033203
  - -0.1100611686706543
  - -0.10527801513671875
  - -0.10368061065673828
  - -0.10940390825271606
- - -0.10431814193725586
  - -0.10437393188476562
  - -3.386402130126953
  - -0.10357356071472168
  - -0.10860919952392578
  - -0.10353517532348633
  - -0.07891368865966797
  - -0.10247564315795898
  - -0.10601615905761719
  - -0.10412883758544922
  - -0.10518932342529297
  - -0.08330975472927094
  - -0.11333346366882324
  - -0.10511660575866699
  - -0.10284185409545898
  - -0.10030508041381836
  - -0.10248231887817383
  - -0.10095787048339844
  - -0.10488176345825195
  - -0.10656023025512695
  - -0.10563087463378906
  - -0.14882561564445496
  - -0.11168241500854492
  - -0.10547709465026855
  - -0.10390472412109375
  - -0.09914970397949219
  - -0.10237503051757812
  - -0.1081075668334961
  - -0.10468149185180664
  - -0.0998234748840332
  - -0.10515022277832031
  - -0.11003684997558594
  - -0.10527801513671875
  - -0.10368585586547852
  - -0.10932354629039764
- - -0.10431814193725586
  - -0.10437393188476562
  - -0.11170339584350586
  - -0.10401654243469238
  - -0.10833883285522461
  - -0.1020045280456543
  - -0.08829593658447266
  - -0.10262203216552734
  - -0.10618972778320312
  - -0.10406255722045898
  - -0.10517120361328125
  - -0.0848478227853775
  - -3.443956136703491
  - -0.10548686981201172
  - -0.10103511810302734
  - -0.09825420379638672
  - -0.10213756561279297
  - -0.10095882415771484
  - -0.10505247116088867
  - -0.1070108413696289
  - -0.10557985305786133
  - -0.14266857504844666
  - -0.1116790771484375
  - -0.10546755790710449
  - -0.10401439666748047
  - -0.09929323196411133
  - -0.1023416519165039
  - -0.1081085205078125
  - -0.10468387603759766
  - -0.0996999740600586
  - -0.10518074035644531
  - -0.11009740829467773
  - -0.10529232025146484
  - -0.10368776321411133
  - -0.10965872555971146
- - -0.10431814193725586
  - -0.10437393188476562
  - -0.11170339584350586
  - -0.10401654243469238
  - -0.10833883285522461
  - -0.1020045280456543
  - -0.08829593658447266
  - -0.10262203216552734
  - -0.10618972778320312
  - -0.10406255722045898
  - -0.10517120361328125
  - -0.0848478227853775
  - -0.11353421211242676
  - -0.10514688491821289
  - -0.1023092269897461
  - -0.09995079040527344
  - -0.10282707214355469
  - -0.10097122192382812
  - -0.10498571395874023
  - -0.10677194595336914
  - -0.10556602478027344
  - -0.14405274391174316
  - -3.4558541774749756
  - -0.10479497909545898
  - -0.10382986068725586
  - -0.09974050521850586
  - -0.1024179458618164
  - -0.10811018943786621
  - -0.10470724105834961
  - -0.0996847152709961
  - -0.10583686828613281
  - -0.11003494262695312
  - -0.10532855987548828
  - -0.10366964340209961
  - -0.11148584634065628
- - -0.10431814193725586
  - -0.10437393188476562
  - -0.11170339584350586
  - -0.10401654243469238
  - -0.10833883285522461
  - -0.1020045280456543
  - -0.08829593658447266
  - -0.10262203216552734
  - -0.10618972778320312
  - -0.10406255722045898
  - -0.10517120361328125
  - -0.0848478227853775
  - -0.11353421211242676
  - -0.10514688491821289
  - -0.1023092269897461
  - -0.09995079040527344
  - -0.10282707214355469
  - -0.10097122192382812
  - -0.10498571395874023
  - -0.10677194595336914
  - -0.10556602478027344
  - -0.14405274391174316
  - -0.11169123649597168
  - -0.1054694652557373
  - -0.10403585433959961
  - -0.09923315048217773
  - -0.1023550033569336
  - -3.54947829246521
  - -0.10471034049987793
  - -0.10138607025146484
  - -0.1050863265991211
  - -0.10973024368286133
  - -0.10525083541870117
  - -0.10371065139770508
  - -0.10984224081039429
- - -0.10431814193725586
  - -0.10437393188476562
  - -0.11170339584350586
  - -0.10401654243469238
  - -0.10833883285522461
  - -0.1020045280456543
  - -0.08829593658447266
  - -0.10262203216552734
  - -0.10618972778320312
  - -0.10406255722045898
  - -0.10517120361328125
  - -0.0848478227853775
  - -0.11353421211242676
  - -0.10514688491821289
  - -0.1023092269897461
  - -0.09995079040527344
  - -0.10282707214355469
  - -0.10097122192382812
  - -0.10498571395874023
  - -0.10677194595336914
  - -0.10556602478027344
  - -0.14405274391174316
  - -0.11169123649597168
  - -0.1054694652557373
  - -0.10403585433959961
  - -0.09923315048217773
  - -0.1023550033569336
  - -0.10810995101928711
  - -0.10468459129333496
  - -0.09969425201416016
  - -0.10516834259033203
  - -0.1100611686706543
  - -0.10527801513671875
  - -0.10368061065673828
  - -3.776294231414795
- - -0.10431814193725586
  - -0.10437393188476562
  - -0.11170339584350586
  - -0.10401654243469238
  - -0.10833883285522461
  - -0.1020045280456543
  - -0.08829593658447266
  - -0.10262203216552734
  - -0.10618972778320312
  - -0.10406255722045898
  - -0.10517120361328125
  - -0.0848478227853775
  - -0.11353421211242676
  - -0.10514688491821289
  - -0.1023092269897461
  - -0.09995079040527344
  - -0.10282707214355469
  - -0.10097122192382812
  - -0.10498571395874023
  - -0.10677194595336914
  - -0.10556602478027344
  - -0.14405274391174316
  - -0.11169123649597168
  - -0.1054694652557373
  - -0.10403585433959961
  - -0.09923315048217773
  - -0.1023550033569336
  - -0.10810995101928711
  - -0.10468459129333496
  - -0.09969425201416016
  - -0.10516834259033203
  - -0.1100611686706543
  - -0.10527801513671875
  - -0.10368061065673828
  - -3.809450626373291
- - -0.10431814193725586
  - -0.10437393188476562
  - -0.11170339584350586
  - -0.10401654243469238
  - -0.10833883285522461
  - -0.1020045280456543
  - -0.08829593658447266
  - -0.10262203216552734
  - -0.10618972778320312
  - -0.10406255722045898
  - -0.10517120361328125
  - -0.0848478227853775
  - -0.11353421211242676
  - -0.10514688491821289
  - -0.1023092269897461
  - -0.09995079040527344
  - -0.10282707214355469
  - -0.10097122192382812
  - -0.10498571395874023
  - -0.10677194595336914
  - -0.10556602478027344
  - -0.14405274391174316
  - -0.11169123649597168
  - -0.1054694652557373
  - -0.10403585433959961
  - -0.09923315048217773
  - -0.1023550033569336
  - -0.10810995101928711
  - -0.10468459129333496
  - -0.09969425201416016
  - -0.10516834259033203
  - -0.1100611686706543
  - -0.10527801513671875
  - -0.10368061065673828
  - -3.8540477752685547
- - -0.10431814193725586
  - -0.10437393188476562
  - -0.11170339584350586
  - -0.10401654243469238
  - -0.10833883285522461
  - -0.1020045280456543
  - -0.08829593658447266
  - -0.10262203216552734
  - -0.10618972778320312
  - -0.10406255722045898
  - -0.10517120361328125
  - -0.0848478227853775
  - -0.11353421211242676
  - -0.10514688491821289
  - -0.1023092269897461
  - -0.09995079040527344
  - -0.10282707214355469
  - -0.10097122192382812
  - -0.10498571395874023
  - -0.10677194595336914
  - -0.10556602478027344
  - -3.932096004486084
  - -0.11278200149536133
  - -0.10532116889953613
  - -0.10195732116699219
  - -0.09707355499267578
  - -0.1024312973022461
  - -0.10801005363464355
  - -0.10461831092834473
  - -0.09987926483154297
  - -0.10480213165283203
  - -0.10999584197998047
  - -0.10529565811157227
  - -0.10367536544799805
  - -0.10974504053592682
- - -0.10431814193725586
  - -0.10437393188476562
  - -0.11170339584350586
  - -0.10401654243469238
  - -0.10833883285522461
  - -0.1020045280456543
  - -0.08829593658447266
  - -0.10262203216552734
  - -0.10618972778320312
  - -0.10406255722045898
  - -0.10517120361328125
  - -0.0848478227853775
  - -0.11353421211242676
  - -0.10514688491821289
  - -0.1023092269897461
  - -0.09995079040527344
  - -0.10282707214355469
  - -0.10097122192382812
  - -0.10498571395874023
  - -0.10677194595336914
  - -0.10556602478027344
  - -0.14405274391174316
  - -0.11169123649597168
  - -0.1054694652557373
  - -0.10403585433959961
  - -0.09923315048217773
  - -0.1023550033569336
  - -0.10810995101928711
  - -0.10468459129333496
  - -0.09969425201416016
  - -0.10516834259033203
  - -0.1100611686706543
  - -0.10527801513671875
  - -0.10368061065673828
  - -3.951540231704712
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Weight'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
