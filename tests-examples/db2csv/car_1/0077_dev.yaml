db: tests-examples/db2csv/car_1/tables/car_1.sqlite
inputs:
 - tests-examples/db2csv/car_1/tables/cars_data.csv
output: tests-examples/db2csv/car_1/tables/0077_dev.csv
raw_question: How many cars has over 6 cylinders? 
question_index: 163 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - 6
join_columns: []
groupby_columns: []
functions:
 - count
columns:
 - cylinders
filters:
 - '>'
ieu: []
comment: |-
  SELECT COUNT(*)
  FROM CARS_DATA
  WHERE Cylinders > 6;

sql: |-
  SELECT COUNT(*)
  FROM CARS_DATA
  WHERE Cylinders > 6;
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
smbop_beam_constants:
- - 6
- - 6
- - 6
- - 6
- - 6
- - 6
- - 6
smbop_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- []
smbop_beam_columns:
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- []
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '>'
- - '='
- - '='
- - '='
- - '<'
- - '<'
- []
smbop_beam_inferred_code:
  - SELECT COUNT( * ) FROM cars_data WHERE cars_data.cylinders > 6
  - SELECT COUNT( * ) FROM cars_data WHERE cars_data.cylinders = 6
  - SELECT COUNT( * ) FROM car_names, cars_data WHERE cars_data.cylinders = 6
  - SELECT COUNT( * ) FROM model_list, cars_data WHERE cars_data.cylinders = 6
  - SELECT COUNT( * ) FROM car_names, cars_data WHERE cars_data.cylinders<6
  - SELECT COUNT( * ) FROM model_list, cars_data WHERE cars_data.cylinders<6
  - SELECT cars_data.cylinders FROM cars_data
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( * ) FROM cars_data WHERE cars_data.cylinders > 6
  - SELECT COUNT( * ) FROM cars_data WHERE cars_data.cylinders = 6
  - SELECT COUNT( * ) FROM car_names, cars_data WHERE cars_data.cylinders = 6
  - SELECT COUNT( * ) FROM model_list, cars_data WHERE cars_data.cylinders = 6
  - SELECT COUNT( * ) FROM car_names, cars_data WHERE cars_data.cylinders<6
  - SELECT COUNT( * ) FROM model_list, cars_data WHERE cars_data.cylinders<6
  - SELECT cars_data.cylinders FROM cars_data
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- []
- []
- []
- - model
  - makeid
  - id
- - country
  - makeid
  - countryid
  - maker
  - contid
  - model
  - id
  - continent
- - country
  - makeid
  - countryid
  - maker
  - model
  - id
- - makeid
  - id
- - model
  - maker
  - makeid
  - id
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
- - tests-examples/db2csv/car_1/tables/continents.csv
  - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/countries.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_names.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
- - tests-examples/db2csv/car_1/tables/car_makers.csv
  - tests-examples/db2csv/car_1/tables/model_list.csv
  - tests-examples/db2csv/car_1/tables/cars_data.csv
  - tests-examples/db2csv/car_1/tables/car_names.csv
ratsql_beam_constants:
- - 6
- - 6
- - 6
- - 6
- - 6
  - '1'
- - 6
- - 6
- - 6
- - 6
- - 6
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
- - cylinders
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
ratsql_beam_inferred_code:
  - SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
  - SELECT Count(*) FROM cars_data WHERE DISTINCT cars_data.Cylinders > 'terminal'
  - SELECT Count(DISTINCT *) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
  - SELECT DISTINCT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
  - SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal' LIMIT 1
  - SELECT Count(*) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 'terminal'
  - SELECT Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 'terminal'
  - SELECT Count(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 'terminal'
  - SELECT Count(*) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 'terminal'
  - SELECT Count(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 6
  - SELECT Count(*) FROM cars_data WHERE DISTINCT cars_data.Cylinders > 6
  - SELECT Count(DISTINCT *) FROM cars_data WHERE cars_data.Cylinders > 6
  - SELECT DISTINCT Count(*) FROM cars_data WHERE cars_data.Cylinders > 6
  - SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 6 LIMIT 1
  - SELECT Count(*) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 6
  - SELECT Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 6
  - SELECT Count(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 6
  - SELECT Count(*) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 6
  - SELECT Count(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 6
ratsql_beam_has_limit:
  - False
  - False
  - True
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10343408584594727
  - -0.10465526580810547
  - -0.10711264610290527
  - -0.10381150245666504
  - -0.10227394104003906
  - -0.10369586944580078
  - -0.1165018081665039
  - -0.10370254516601562
  - -0.10527563095092773
  - -0.1047978401184082
  - -0.1054539680480957
  - -0.09939301013946533
  - -0.10999464988708496
  - -0.10484766960144043
  - -0.10362958908081055
  - -0.08667469024658203
  - -0.09270906448364258
  - -0.10255861282348633
  - -0.10542583465576172
  - -0.10399961471557617
  - -0.10335445404052734
  - -0.15811815857887268
  - -0.11130881309509277
  - -0.10570812225341797
  - -0.11113739013671875
  - -0.10151243209838867
  - -0.1023702621459961
  - -0.1075139045715332
  - -0.10465168952941895
  - -0.09717178344726562
  - -0.10285329818725586
  - -0.10839033126831055
  - -0.1059885025024414
  - -0.10402154922485352
  - -0.12098807096481323
- - -0.10343408584594727
  - -0.10465526580810547
  - -0.10711264610290527
  - -0.10381150245666504
  - -0.10227394104003906
  - -0.10369586944580078
  - -0.1165018081665039
  - -0.10370254516601562
  - -0.10527563095092773
  - -0.1047978401184082
  - -0.1054539680480957
  - -0.09939301013946533
  - -0.10999464988708496
  - -0.10484766960144043
  - -0.10362958908081055
  - -0.08667469024658203
  - -0.09270906448364258
  - -0.10255861282348633
  - -0.10542583465576172
  - -0.10399961471557617
  - -0.10335445404052734
  - -0.15811815857887268
  - -3.451195001602173
  - -0.10594367980957031
  - -0.11139535903930664
  - -0.10137462615966797
  - -0.10241317749023438
  - -0.1075284481048584
  - -0.10462331771850586
  - -0.09731721878051758
  - -0.10302972793579102
  - -0.10845232009887695
  - -0.10596370697021484
  - -0.10405826568603516
  - -0.12072555720806122
- - -0.10343408584594727
  - -0.10465526580810547
  - -0.10711264610290527
  - -0.10381150245666504
  - -0.10227394104003906
  - -0.10369586944580078
  - -0.1165018081665039
  - -0.10370254516601562
  - -0.10527563095092773
  - -0.1047978401184082
  - -0.1054539680480957
  - -0.09939301013946533
  - -3.506474018096924
  - -0.11157488822937012
  - -0.09485626220703125
  - -0.09247446060180664
  - -0.09535741806030273
  - -0.10231924057006836
  - -0.10538053512573242
  - -0.10433387756347656
  - -0.1041402816772461
  - -0.13296769559383392
  - -0.1115424633026123
  - -0.10562562942504883
  - -0.11112546920776367
  - -0.1016688346862793
  - -0.10236406326293945
  - -0.10751557350158691
  - -0.10465073585510254
  - -0.09719514846801758
  - -0.10284233093261719
  - -0.10854148864746094
  - -0.10605812072753906
  - -0.1040644645690918
  - -0.12194794416427612
- - -0.10343408584594727
  - -0.10465526580810547
  - -3.5370349884033203
  - -0.10391068458557129
  - -0.1017451286315918
  - -0.10368871688842773
  - -0.11747121810913086
  - -0.10307455062866211
  - -0.10526418685913086
  - -0.10482501983642578
  - -0.10544586181640625
  - -0.099233478307724
  - -0.11003255844116211
  - -0.1047523021697998
  - -0.10381078720092773
  - -0.08617305755615234
  - -0.09252691268920898
  - -0.10254907608032227
  - -0.10542774200439453
  - -0.10399103164672852
  - -0.10335159301757812
  - -0.15773093700408936
  - -0.11128878593444824
  - -0.1057119369506836
  - -0.11116552352905273
  - -0.10147523880004883
  - -0.1023721694946289
  - -0.1075136661529541
  - -0.10465431213378906
  - -0.09716272354125977
  - -0.10285425186157227
  - -0.108367919921875
  - -0.10598278045654297
  - -0.10401773452758789
  - -0.12108608335256577
- - -0.10343408584594727
  - -0.10465526580810547
  - -0.10711264610290527
  - -0.10381150245666504
  - -0.10227394104003906
  - -0.10369586944580078
  - -0.1165018081665039
  - -0.10370254516601562
  - -0.10527563095092773
  - -0.1047978401184082
  - -0.1054539680480957
  - -0.09939301013946533
  - -0.10999464988708496
  - -0.10484766960144043
  - -0.10362958908081055
  - -0.08667469024658203
  - -0.09270906448364258
  - -0.10255861282348633
  - -0.10542583465576172
  - -0.10399961471557617
  - -0.10335445404052734
  - -0.15811815857887268
  - -0.11130881309509277
  - -0.10570812225341797
  - -0.11113739013671875
  - -0.10151243209838867
  - -0.1023702621459961
  - -3.5555012226104736
  - -0.10432147979736328
  - -0.09763956069946289
  - -0.10273265838623047
  - -0.10844087600708008
  - -0.10605001449584961
  - -0.10407543182373047
  - -0.12261252105236053
- - -0.10343408584594727
  - -0.10465526580810547
  - -0.10711264610290527
  - -0.10381150245666504
  - -0.10227394104003906
  - -0.10369586944580078
  - -0.1165018081665039
  - -0.10370254516601562
  - -0.10527563095092773
  - -0.1047978401184082
  - -0.1054539680480957
  - -0.09939301013946533
  - -0.10999464988708496
  - -0.10484766960144043
  - -0.10362958908081055
  - -0.08667469024658203
  - -0.09270906448364258
  - -0.10255861282348633
  - -0.10542583465576172
  - -0.10399961471557617
  - -0.10335445404052734
  - -0.15811815857887268
  - -0.11130881309509277
  - -0.10570812225341797
  - -0.11113739013671875
  - -0.10151243209838867
  - -0.1023702621459961
  - -0.1075139045715332
  - -0.10465168952941895
  - -0.09717178344726562
  - -0.10285329818725586
  - -0.10839033126831055
  - -0.1059885025024414
  - -0.10402154922485352
  - -3.6694397926330566
- - -0.10343408584594727
  - -0.10465526580810547
  - -0.10711264610290527
  - -0.10381150245666504
  - -0.10227394104003906
  - -0.10369586944580078
  - -0.1165018081665039
  - -0.10370254516601562
  - -0.10527563095092773
  - -0.1047978401184082
  - -0.1054539680480957
  - -0.09939301013946533
  - -0.10999464988708496
  - -0.10484766960144043
  - -0.10362958908081055
  - -0.08667469024658203
  - -0.09270906448364258
  - -0.10255861282348633
  - -0.10542583465576172
  - -0.10399961471557617
  - -0.10335445404052734
  - -0.15811815857887268
  - -0.11130881309509277
  - -0.10570812225341797
  - -0.11113739013671875
  - -0.10151243209838867
  - -0.1023702621459961
  - -0.1075139045715332
  - -0.10465168952941895
  - -0.09717178344726562
  - -0.10285329818725586
  - -0.10839033126831055
  - -0.1059885025024414
  - -0.10402154922485352
  - -3.788691997528076
- - -0.10343408584594727
  - -0.10465526580810547
  - -0.10711264610290527
  - -0.10381150245666504
  - -0.10227394104003906
  - -0.10369586944580078
  - -0.1165018081665039
  - -0.10370254516601562
  - -0.10527563095092773
  - -0.1047978401184082
  - -0.1054539680480957
  - -0.09939301013946533
  - -0.10999464988708496
  - -0.10484766960144043
  - -0.10362958908081055
  - -0.08667469024658203
  - -0.09270906448364258
  - -0.10255861282348633
  - -0.10542583465576172
  - -0.10399961471557617
  - -0.10335445404052734
  - -0.15811815857887268
  - -0.11130881309509277
  - -0.10570812225341797
  - -0.11113739013671875
  - -0.10151243209838867
  - -0.1023702621459961
  - -0.1075139045715332
  - -0.10465168952941895
  - -0.09717178344726562
  - -0.10285329818725586
  - -0.10839033126831055
  - -0.1059885025024414
  - -0.10402154922485352
  - -3.8098862171173096
- - -0.10343408584594727
  - -0.10465526580810547
  - -0.10711264610290527
  - -0.10381150245666504
  - -0.10227394104003906
  - -0.10369586944580078
  - -0.1165018081665039
  - -0.10370254516601562
  - -0.10527563095092773
  - -0.1047978401184082
  - -0.1054539680480957
  - -0.09939301013946533
  - -0.10999464988708496
  - -0.10484766960144043
  - -0.10362958908081055
  - -0.08667469024658203
  - -0.09270906448364258
  - -0.10255861282348633
  - -0.10542583465576172
  - -0.10399961471557617
  - -0.10335445404052734
  - -0.15811815857887268
  - -0.11130881309509277
  - -0.10570812225341797
  - -0.11113739013671875
  - -0.10151243209838867
  - -0.1023702621459961
  - -0.1075139045715332
  - -0.10465168952941895
  - -0.09717178344726562
  - -0.10285329818725586
  - -0.10839033126831055
  - -0.1059885025024414
  - -0.10402154922485352
  - -3.811356782913208
- - -0.10343408584594727
  - -0.10465526580810547
  - -0.10711264610290527
  - -0.10381150245666504
  - -0.10227394104003906
  - -0.10369586944580078
  - -0.1165018081665039
  - -0.10370254516601562
  - -0.10527563095092773
  - -0.1047978401184082
  - -0.1054539680480957
  - -0.09939301013946533
  - -0.10999464988708496
  - -0.10484766960144043
  - -0.10362958908081055
  - -0.08667469024658203
  - -0.09270906448364258
  - -0.10255861282348633
  - -0.10542583465576172
  - -0.10399961471557617
  - -0.10335445404052734
  - -0.15811815857887268
  - -0.11130881309509277
  - -0.10570812225341797
  - -0.11113739013671875
  - -0.10151243209838867
  - -0.1023702621459961
  - -0.1075139045715332
  - -0.10465168952941895
  - -0.09717178344726562
  - -0.10285329818725586
  - -0.10839033126831055
  - -0.1059885025024414
  - -0.10402154922485352
  - -3.8364181518554688
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'cars_data'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'model_list'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'continents'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countries'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_names'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Cylinders'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'car_makers'
