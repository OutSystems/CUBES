db: tests-examples/db2csv/orchestra/tables/orchestra.sqlite
inputs:
 - tests-examples/db2csv/orchestra/tables/performance.csv
output: tests-examples/db2csv/orchestra/tables/0012_dev.csv
raw_question: Return the maximum and minimum shares for performances that do not have the type "Live final". 
question_index: 833 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - Live final
join_columns: []
groupby_columns: []
functions:
 - max
 - min
columns:
 - type
 - share
filters:
 - '!='
ieu: []
comment: |-
  SELECT max(SHARE),
         min(SHARE)
  FROM performance
  WHERE TYPE != "Live final"

sql: |-
  SELECT max(SHARE),
         min(SHARE)
  FROM performance
  WHERE TYPE != "Live final"
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/orchestra/tables/performance.csv
- - tests-examples/db2csv/orchestra/tables/performance.csv
- - tests-examples/db2csv/orchestra/tables/performance.csv
- - tests-examples/db2csv/orchestra/tables/performance.csv
- - tests-examples/db2csv/orchestra/tables/performance.csv
- - tests-examples/db2csv/orchestra/tables/performance.csv
smbop_beam_constants:
- - Live final
- - Live final
- - Live final
- - Live final
- - Live final
- - Live final
smbop_beam_functions:
- - max
  - min
- - max
  - min
- - count
- - max
- - max
  - min
- - max
  - min
smbop_beam_columns:
- - type
  - share
- - type
  - share
- - type
- - type
  - share
- - type
  - share
- - type
  - share
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '!='
- - '='
- - '!='
- - '!='
- - '>'
  - '>='
- - '<'
smbop_beam_inferred_code:
  - SELECT MAX( performance.share ) , MIN( performance.share ) FROM performance WHERE performance.type != 'Live final'
  - SELECT MAX( performance.share ) , MIN( performance.share ) FROM performance WHERE performance.type = 'Live final'
  - SELECT COUNT( DISTINCT performance.type ) FROM performance WHERE performance.type != 'Live final'
  - SELECT MAX( performance.share ) , MAX( performance.share ) FROM performance WHERE performance.type != 'Live final'
  - SELECT MAX( performance.share ) , MIN( performance.share ) FROM performance WHERE performance.type >= 'Live final'
  - SELECT MAX( performance.share ) , MIN( performance.share ) FROM performance WHERE performance.type<'Live final'
smbop_beam_inferred_code_w_terminals:
  - SELECT MAX( performance.share ) , MIN( performance.share ) FROM performance WHERE performance.type != 'Live final'
  - SELECT MAX( performance.share ) , MIN( performance.share ) FROM performance WHERE performance.type = 'Live final'
  - SELECT COUNT( DISTINCT performance.type ) FROM performance WHERE performance.type != 'Live final'
  - SELECT MAX( performance.share ) , MAX( performance.share ) FROM performance WHERE performance.type != 'Live final'
  - SELECT MAX( performance.share ) , MIN( performance.share ) FROM performance WHERE performance.type >= 'Live final'
  - SELECT MAX( performance.share ) , MIN( performance.share ) FROM performance WHERE performance.type<'Live final'
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- []
- []
- []
- []
- []
- - orchestra_id
- - conductor_id
  - orchestra_id
- []
- - performance_id
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/orchestra/tables/performance.csv
- - tests-examples/db2csv/orchestra/tables/performance.csv
- - tests-examples/db2csv/orchestra/tables/performance.csv
- - tests-examples/db2csv/orchestra/tables/performance.csv
- - tests-examples/db2csv/orchestra/tables/performance.csv
- - tests-examples/db2csv/orchestra/tables/performance.csv
  - tests-examples/db2csv/orchestra/tables/orchestra.csv
- - tests-examples/db2csv/orchestra/tables/performance.csv
  - tests-examples/db2csv/orchestra/tables/conductor.csv
  - tests-examples/db2csv/orchestra/tables/orchestra.csv
- - tests-examples/db2csv/orchestra/tables/performance.csv
- - tests-examples/db2csv/orchestra/tables/performance.csv
  - tests-examples/db2csv/orchestra/tables/show.csv
ratsql_beam_constants:
- - Live final
- - Live final
- - Live final
- - Live final
- - Live final
  - '1'
- - Live final
- - Live final
- - Live final
- - Live final
- - Live final
ratsql_beam_functions:
- - max
  - min
- - max
  - min
- - max
  - min
- - max
  - min
- - max
  - min
- - max
  - min
- - max
  - min
- - max
  - min
- - max
  - min
ratsql_beam_columns:
- - type
  - share
- - type
  - share
- - type
  - share
- - type
  - share
- - type
  - share
- - type
  - share
- - type
  - share
- - type
  - share
- - type
  - share
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '!='
- - '='
- - '!='
- - '!='
- - '!='
- - '!='
- - '!='
- - '!='
- - '!='
ratsql_beam_inferred_code:
  - SELECT Max(performance.Share), Min(performance.Share) FROM performance WHERE performance.Type != 'terminal'
  - SELECT Max(performance.Share), Min(performance.Share) FROM performance WHERE performance.Type = 'terminal'
  - SELECT Max(performance.Share), Min(performance.Share) FROM performance WHERE DISTINCT performance.Type != 'terminal'
  - SELECT Max(performance.Share), Min(DISTINCT performance.Share) FROM performance WHERE performance.Type != 'terminal'
  - SELECT Max(performance.Share), Min(performance.Share) FROM performance WHERE performance.Type != 'terminal' LIMIT 1
  - SELECT DISTINCT Max(performance.Share), Min(performance.Share) FROM performance WHERE performance.Type != 'terminal'
  - SELECT Max(performance.Share), Min(performance.Share) FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Type != 'terminal'
  - SELECT Max(performance.Share), Min(performance.Share) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Type != 'terminal'
  - SELECT Max(DISTINCT performance.Share), Min(performance.Share) FROM performance WHERE performance.Type != 'terminal'
  - SELECT Max(performance.Share), Min(performance.Share) FROM performance JOIN show ON performance.Performance_ID = show.Performance_ID WHERE performance.Type != 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Max(performance.Share), Min(performance.Share) FROM performance WHERE performance.Type != 'Live final'
  - SELECT Max(performance.Share), Min(performance.Share) FROM performance WHERE performance.Type = 'Live final'
  - SELECT Max(performance.Share), Min(performance.Share) FROM performance WHERE DISTINCT performance.Type != 'Live final'
  - SELECT Max(performance.Share), Min(DISTINCT performance.Share) FROM performance WHERE performance.Type != 'Live final'
  - SELECT Max(performance.Share), Min(performance.Share) FROM performance WHERE performance.Type != 'Live final' LIMIT 1
  - SELECT DISTINCT Max(performance.Share), Min(performance.Share) FROM performance WHERE performance.Type != 'Live final'
  - SELECT Max(performance.Share), Min(performance.Share) FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Type != 'Live final'
  - SELECT Max(performance.Share), Min(performance.Share) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Type != 'Live final'
  - SELECT Max(DISTINCT performance.Share), Min(performance.Share) FROM performance WHERE performance.Type != 'Live final'
  - SELECT Max(performance.Share), Min(performance.Share) FROM performance JOIN show ON performance.Performance_ID = show.Performance_ID WHERE performance.Type != 'Live final'
ratsql_beam_has_limit:
  - False
  - False
  - False
  - True
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.12023496627807617
  - -0.10554122924804688
  - -0.10597920417785645
  - -0.10440969467163086
  - -0.11895465850830078
  - -0.11385869979858398
  - -0.07371330261230469
  - -0.10068893432617188
  - -0.10641336441040039
  - -0.10416412353515625
  - -0.1078329086303711
  - -0.0829663947224617
  - -0.1071465015411377
  - -0.10495281219482422
  - -0.09156990051269531
  - -0.0962991714477539
  - -0.09131288528442383
  - -0.10885238647460938
  - -0.10690832138061523
  - -0.10775423049926758
  - -0.14537520706653595
  - -0.11070418357849121
  - -0.10489201545715332
  - -0.09566688537597656
  - -0.14828729629516602
  - -0.06799554824829102
  - -0.10062646865844727
  - -0.10461997985839844
  - -0.10479259490966797
  - -0.1038970947265625
  - -0.06427847594022751
  - -0.11135053634643555
  - -0.10552287101745605
  - -0.10525989532470703
  - -0.09935617446899414
  - -0.10265254974365234
  - -0.10863327980041504
  - -0.1047821044921875
  - -0.09639120101928711
  - -0.1067972183227539
  - -0.10815000534057617
  - -0.10598134994506836
  - -0.10343503952026367
  - -0.08414538949728012
- - -0.12023496627807617
  - -0.10554122924804688
  - -0.10597920417785645
  - -0.10440969467163086
  - -0.11895465850830078
  - -0.11385869979858398
  - -0.07371330261230469
  - -0.10068893432617188
  - -0.10641336441040039
  - -0.10416412353515625
  - -0.1078329086303711
  - -0.0829663947224617
  - -0.1071465015411377
  - -0.10495281219482422
  - -0.09156990051269531
  - -0.0962991714477539
  - -0.09131288528442383
  - -0.10885238647460938
  - -0.10690832138061523
  - -0.10775423049926758
  - -0.14537520706653595
  - -0.11070418357849121
  - -0.10489201545715332
  - -0.09566688537597656
  - -3.2994518280029297
  - -0.10876607894897461
  - -0.10129022598266602
  - -0.10447931289672852
  - -0.10547971725463867
  - -0.10425329208374023
  - -0.0828099250793457
  - -0.11108708381652832
  - -0.10544395446777344
  - -0.10433721542358398
  - -0.09774208068847656
  - -0.10200643539428711
  - -0.10866689682006836
  - -0.10436487197875977
  - -0.16110944747924805
  - -0.10646295547485352
  - -0.10771369934082031
  - -0.1062922477722168
  - -0.10358142852783203
  - -0.0873216986656189
- - -0.12023496627807617
  - -0.10554122924804688
  - -0.10597920417785645
  - -0.10440969467163086
  - -0.11895465850830078
  - -0.11385869979858398
  - -0.07371330261230469
  - -0.10068893432617188
  - -0.10641336441040039
  - -0.10416412353515625
  - -0.1078329086303711
  - -0.0829663947224617
  - -0.1071465015411377
  - -0.10495281219482422
  - -0.09156990051269531
  - -0.0962991714477539
  - -0.09131288528442383
  - -0.10885238647460938
  - -0.10690832138061523
  - -0.10775423049926758
  - -0.14537520706653595
  - -0.11070418357849121
  - -0.10489201545715332
  - -0.09566688537597656
  - -0.14828729629516602
  - -0.06799554824829102
  - -0.10062646865844727
  - -0.10461997985839844
  - -0.10479259490966797
  - -0.1038970947265625
  - -0.06427847594022751
  - -3.4483535289764404
  - -0.10567522048950195
  - -0.1049351692199707
  - -0.0988926887512207
  - -0.10263204574584961
  - -0.10860371589660645
  - -0.1047980785369873
  - -0.09610271453857422
  - -0.10725259780883789
  - -0.10788679122924805
  - -0.10615158081054688
  - -0.10356855392456055
  - -0.08446139097213745
- - -0.12023496627807617
  - -0.10554122924804688
  - -0.10597920417785645
  - -0.10440969467163086
  - -0.11895465850830078
  - -0.11385869979858398
  - -0.07371330261230469
  - -0.10068893432617188
  - -0.10641336441040039
  - -0.10416412353515625
  - -0.1078329086303711
  - -0.0829663947224617
  - -0.1071465015411377
  - -0.10495281219482422
  - -0.09156990051269531
  - -0.0962991714477539
  - -0.09131288528442383
  - -0.10885238647460938
  - -0.10690832138061523
  - -0.10775423049926758
  - -0.14537520706653595
  - -3.485430955886841
  - -0.10468459129333496
  - -0.09231948852539062
  - -0.15018272399902344
  - -0.06908416748046875
  - -0.10054254531860352
  - -0.10461854934692383
  - -0.10537147521972656
  - -0.10407686233520508
  - -0.06814198940992355
  - -0.11133980751037598
  - -0.10552406311035156
  - -0.10496950149536133
  - -0.09920597076416016
  - -0.10274839401245117
  - -0.10865640640258789
  - -0.10477900505065918
  - -0.09615564346313477
  - -0.10654592514038086
  - -0.10791444778442383
  - -0.10586118698120117
  - -0.10341691970825195
  - -0.08626455813646317
- - -0.12023496627807617
  - -0.10554122924804688
  - -0.10597920417785645
  - -0.10440969467163086
  - -0.11895465850830078
  - -0.11385869979858398
  - -0.07371330261230469
  - -0.10068893432617188
  - -0.10641336441040039
  - -0.10416412353515625
  - -0.1078329086303711
  - -0.0829663947224617
  - -0.1071465015411377
  - -0.10495281219482422
  - -0.09156990051269531
  - -0.0962991714477539
  - -0.09131288528442383
  - -0.10885238647460938
  - -0.10690832138061523
  - -0.10775423049926758
  - -0.14537520706653595
  - -0.11070418357849121
  - -0.10489201545715332
  - -0.09566688537597656
  - -0.14828729629516602
  - -0.06799554824829102
  - -0.10062646865844727
  - -0.10461997985839844
  - -0.10479259490966797
  - -0.1038970947265625
  - -0.06427847594022751
  - -0.11135053634643555
  - -0.10552287101745605
  - -0.10525989532470703
  - -0.09935617446899414
  - -0.10265254974365234
  - -3.540616273880005
  - -0.10418891906738281
  - -0.09708309173583984
  - -0.10644865036010742
  - -0.10776376724243164
  - -0.10591316223144531
  - -0.10345315933227539
  - -0.08445415645837784
- - -0.12023496627807617
  - -0.10554122924804688
  - -3.552938938140869
  - -0.10290241241455078
  - -0.1207733154296875
  - -0.11517190933227539
  - -0.0770263671875
  - -0.10041236877441406
  - -0.10702991485595703
  - -0.10416364669799805
  - -0.10808658599853516
  - -0.085066057741642
  - -0.10712671279907227
  - -0.10500431060791016
  - -0.09157419204711914
  - -0.1027827262878418
  - -0.09061956405639648
  - -0.10903167724609375
  - -0.10666036605834961
  - -0.10747289657592773
  - -0.15427733957767487
  - -0.11102819442749023
  - -0.10485720634460449
  - -0.09668540954589844
  - -0.15663909912109375
  - -0.06848907470703125
  - -0.10064983367919922
  - -0.10458850860595703
  - -0.1047968864440918
  - -0.10392189025878906
  - -0.06395994126796722
  - -0.11137056350708008
  - -0.10552072525024414
  - -0.10524415969848633
  - -0.09936141967773438
  - -0.10264778137207031
  - -0.10863327980041504
  - -0.10478353500366211
  - -0.09643888473510742
  - -0.10681533813476562
  - -0.10811233520507812
  - -0.10598325729370117
  - -0.10343790054321289
  - -0.0839233323931694
- - -0.12023496627807617
  - -0.10554122924804688
  - -0.10597920417785645
  - -0.10440969467163086
  - -0.11895465850830078
  - -0.11385869979858398
  - -0.07371330261230469
  - -0.10068893432617188
  - -0.10641336441040039
  - -0.10416412353515625
  - -0.1078329086303711
  - -0.0829663947224617
  - -0.1071465015411377
  - -0.10495281219482422
  - -0.09156990051269531
  - -0.0962991714477539
  - -0.09131288528442383
  - -0.10885238647460938
  - -0.10690832138061523
  - -0.10775423049926758
  - -0.14537520706653595
  - -0.11070418357849121
  - -0.10489201545715332
  - -0.09566688537597656
  - -0.14828729629516602
  - -0.06799554824829102
  - -0.10062646865844727
  - -0.10461997985839844
  - -0.10479259490966797
  - -0.1038970947265625
  - -0.06427847594022751
  - -0.11135053634643555
  - -0.10552287101745605
  - -0.10525989532470703
  - -0.09935617446899414
  - -0.10265254974365234
  - -0.10863327980041504
  - -0.1047821044921875
  - -0.09639120101928711
  - -0.1067972183227539
  - -0.10815000534057617
  - -0.10598134994506836
  - -0.10343503952026367
  - -3.5812666416168213
- - -0.12023496627807617
  - -0.10554122924804688
  - -0.10597920417785645
  - -0.10440969467163086
  - -0.11895465850830078
  - -0.11385869979858398
  - -0.07371330261230469
  - -0.10068893432617188
  - -0.10641336441040039
  - -0.10416412353515625
  - -0.1078329086303711
  - -0.0829663947224617
  - -0.1071465015411377
  - -0.10495281219482422
  - -0.09156990051269531
  - -0.0962991714477539
  - -0.09131288528442383
  - -0.10885238647460938
  - -0.10690832138061523
  - -0.10775423049926758
  - -0.14537520706653595
  - -0.11070418357849121
  - -0.10489201545715332
  - -0.09566688537597656
  - -0.14828729629516602
  - -0.06799554824829102
  - -0.10062646865844727
  - -0.10461997985839844
  - -0.10479259490966797
  - -0.1038970947265625
  - -0.06427847594022751
  - -0.11135053634643555
  - -0.10552287101745605
  - -0.10525989532470703
  - -0.09935617446899414
  - -0.10265254974365234
  - -0.10863327980041504
  - -0.1047821044921875
  - -0.09639120101928711
  - -0.1067972183227539
  - -0.10815000534057617
  - -0.10598134994506836
  - -0.10343503952026367
  - -3.592503309249878
- - -0.12023496627807617
  - -0.10554122924804688
  - -0.10597920417785645
  - -0.10440969467163086
  - -0.11895465850830078
  - -0.11385869979858398
  - -0.07371330261230469
  - -0.10068893432617188
  - -0.10641336441040039
  - -0.10416412353515625
  - -0.1078329086303711
  - -0.0829663947224617
  - -3.5818934440612793
  - -0.10570955276489258
  - -0.09572267532348633
  - -0.09706926345825195
  - -0.09028005599975586
  - -0.1089315414428711
  - -0.1067347526550293
  - -0.10680532455444336
  - -0.16332511603832245
  - -0.11118125915527344
  - -0.10483193397521973
  - -0.0961461067199707
  - -0.1646099090576172
  - -0.0673680305480957
  - -0.10058116912841797
  - -0.10465240478515625
  - -0.1046609878540039
  - -0.10391807556152344
  - -0.06429938226938248
  - -0.1113731861114502
  - -0.10551834106445312
  - -0.10531377792358398
  - -0.0993804931640625
  - -0.10265064239501953
  - -0.10862588882446289
  - -0.10477352142333984
  - -0.09641265869140625
  - -0.10682439804077148
  - -0.1081852912902832
  - -0.10600614547729492
  - -0.1034393310546875
  - -0.0842071920633316
- - -0.12023496627807617
  - -0.10554122924804688
  - -0.10597920417785645
  - -0.10440969467163086
  - -0.11895465850830078
  - -0.11385869979858398
  - -0.07371330261230469
  - -0.10068893432617188
  - -0.10641336441040039
  - -0.10416412353515625
  - -0.1078329086303711
  - -0.0829663947224617
  - -0.1071465015411377
  - -0.10495281219482422
  - -0.09156990051269531
  - -0.0962991714477539
  - -0.09131288528442383
  - -0.10885238647460938
  - -0.10690832138061523
  - -0.10775423049926758
  - -0.14537520706653595
  - -0.11070418357849121
  - -0.10489201545715332
  - -0.09566688537597656
  - -0.14828729629516602
  - -0.06799554824829102
  - -0.10062646865844727
  - -0.10461997985839844
  - -0.10479259490966797
  - -0.1038970947265625
  - -0.06427847594022751
  - -0.11135053634643555
  - -0.10552287101745605
  - -0.10525989532470703
  - -0.09935617446899414
  - -0.10265254974365234
  - -0.10863327980041504
  - -0.1047821044921875
  - -0.09639120101928711
  - -0.1067972183227539
  - -0.10815000534057617
  - -0.10598134994506836
  - -0.10343503952026367
  - -3.67566180229187
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Type'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'performance'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Type'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'performance'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Type'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'performance'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Type'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'performance'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Type'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'performance'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Type'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'performance'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Type'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'orchestra'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Type'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'conductor'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'True'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Type'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'performance'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Share'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Type'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'show'
