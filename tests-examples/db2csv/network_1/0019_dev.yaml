db: tests-examples/db2csv/network_1/tables/network_1.sqlite
inputs:
 - tests-examples/db2csv/network_1/tables/highschooler.csv
output: tests-examples/db2csv/network_1/tables/0019_dev.csv
raw_question: Show me all grades that have at least 4 students. 
question_index: 880 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - 4
join_columns: []
groupby_columns:
 - grade
functions:
 - count
columns: []
filters: []
ieu: []
comment: |-
  SELECT grade
  FROM Highschooler
  GROUP BY grade
  HAVING count(*) >= 4

sql: |-
  SELECT grade
  FROM Highschooler
  GROUP BY grade
  HAVING count(*) >= 4
smbop_beam_join_columns:
- []
- []
smbop_beam_groupby_columns:
- - grade
- - grade
smbop_beam_tables:
- - tests-examples/db2csv/network_1/tables/highschooler.csv
- - tests-examples/db2csv/network_1/tables/highschooler.csv
smbop_beam_constants:
- - 4
- - 4
smbop_beam_functions:
- - count
- - count
smbop_beam_columns:
- []
- - 4
smbop_beam_ieu:
- []
- []
smbop_beam_filters:
- []
- - '>'
  - '>='
smbop_beam_inferred_code:
  - SELECT highschooler.grade FROM highschooler GROUP BY highschooler.grade HAVING COUNT( * ) >= 4
  - SELECT highschooler.grade FROM highschooler GROUP BY highschooler.grade HAVING COUNT( DISTINCT 4 ) >= 4
smbop_beam_inferred_code_w_terminals:
  - SELECT highschooler.grade FROM highschooler GROUP BY highschooler.grade HAVING COUNT( * ) >= 4
  - SELECT highschooler.grade FROM highschooler GROUP BY highschooler.grade HAVING COUNT( DISTINCT 4 ) >= 4
smbop_beam_has_limit:
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
ratsql_beam_join_columns:
- []
- - liked_id
  - id
- - student_id
  - id
- []
- []
- []
- - student_id
  - id
- - liked_id
  - id
ratsql_beam_groupby_columns:
- - grade
- - grade
- - grade
- - grade
- - grade
- - grade
- - grade
- - grade
ratsql_beam_tables:
- - tests-examples/db2csv/network_1/tables/highschooler.csv
- - tests-examples/db2csv/network_1/tables/likes.csv
  - tests-examples/db2csv/network_1/tables/highschooler.csv
- - tests-examples/db2csv/network_1/tables/highschooler.csv
  - tests-examples/db2csv/network_1/tables/friend.csv
- - tests-examples/db2csv/network_1/tables/highschooler.csv
- - tests-examples/db2csv/network_1/tables/highschooler.csv
- - tests-examples/db2csv/network_1/tables/highschooler.csv
- - tests-examples/db2csv/network_1/tables/highschooler.csv
  - tests-examples/db2csv/network_1/tables/friend.csv
- - tests-examples/db2csv/network_1/tables/likes.csv
  - tests-examples/db2csv/network_1/tables/highschooler.csv
ratsql_beam_constants:
- - 4
- - 4
- - 4
- - 4
- - 4
- - 4
- - 4
  - '1'
- - 4
- - 4
- - 4
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- []
- []
- []
- []
- []
- - id
- - student_id
- - student_id
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(*) >= 'terminal'
  - SELECT Highschooler.grade FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.liked_id GROUP BY Highschooler.grade HAVING Count(*) >= 'terminal'
  - SELECT Highschooler.grade FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.grade HAVING Count(*) >= 'terminal'
  - SELECT DISTINCT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(*) >= 'terminal'
  - SELECT Highschooler.grade FROM Highschooler GROUP BY DISTINCT Highschooler.grade HAVING Count(*) >= 'terminal'
  - SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(DISTINCT *) >= 'terminal'
  - SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(*) >= 'terminal' LIMIT 1
  - SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(Highschooler.ID) >= 'terminal'
  - SELECT Highschooler.grade FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.grade HAVING Count(Friend.student_id) >= 'terminal'
  - SELECT Highschooler.grade FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.liked_id GROUP BY Highschooler.grade HAVING Count(Likes.student_id) >= 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(*) >= 4
  - SELECT Highschooler.grade FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.liked_id GROUP BY Highschooler.grade HAVING Count(*) >= 4
  - SELECT Highschooler.grade FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.grade HAVING Count(*) >= 4
  - SELECT DISTINCT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(*) >= 4
  - SELECT Highschooler.grade FROM Highschooler GROUP BY DISTINCT Highschooler.grade HAVING Count(*) >= 4
  - SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(DISTINCT *) >= 4
  - SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(*) >= 4 LIMIT 1
  - SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(Highschooler.ID) >= '4'
  - SELECT Highschooler.grade FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.grade HAVING Count(Friend.student_id) >= '4'
  - SELECT Highschooler.grade FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.liked_id GROUP BY Highschooler.grade HAVING Count(Likes.student_id) >= '4'
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - True
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10348844528198242
  - -0.10500001907348633
  - -0.10923886299133301
  - -0.10431885719299316
  - -0.10165119171142578
  - -0.1029362678527832
  - -0.10442543029785156
  - -0.10243082046508789
  - -0.10511159896850586
  - -0.10452747344970703
  - -0.10609579086303711
  - -0.07999619841575623
  - -0.11259937286376953
  - -0.10529375076293945
  - -0.10556745529174805
  - -0.12234354019165039
  - -0.11086130142211914
  - -0.10390186309814453
  - -0.10796022415161133
  - -0.0824313759803772
  - -0.11308884620666504
  - -0.10553860664367676
  - -0.07135152816772461
  - -0.10331249237060547
  - -0.10167598724365234
  - -0.10453176498413086
  - -0.10947990417480469
  - -0.1115717887878418
  - -0.15099333226680756
  - -0.11108946800231934
  - -0.10620522499084473
  - -0.10529565811157227
  - -0.10434865951538086
  - -0.10725092887878418
  - -0.10531282424926758
  - -0.09510040283203125
  - -0.10353374481201172
  - -0.10988283157348633
  - -0.10552024841308594
  - -0.1032557487487793
  - -0.16777721047401428
- - -0.10348844528198242
  - -0.10500001907348633
  - -0.10923886299133301
  - -0.10431885719299316
  - -0.10165119171142578
  - -0.1029362678527832
  - -0.10442543029785156
  - -0.10243082046508789
  - -0.10511159896850586
  - -0.10452747344970703
  - -0.10609579086303711
  - -0.07999619841575623
  - -0.11259937286376953
  - -0.10529375076293945
  - -0.10556745529174805
  - -0.12234354019165039
  - -0.11086130142211914
  - -0.10390186309814453
  - -0.10796022415161133
  - -0.0824313759803772
  - -0.11308884620666504
  - -0.10553860664367676
  - -0.07135152816772461
  - -0.10331249237060547
  - -0.10167598724365234
  - -0.10453176498413086
  - -0.10947990417480469
  - -0.1115717887878418
  - -0.15099333226680756
  - -0.11108946800231934
  - -0.10620522499084473
  - -0.10529565811157227
  - -0.10434865951538086
  - -0.10725092887878418
  - -0.10531282424926758
  - -0.09510040283203125
  - -0.10353374481201172
  - -0.10988283157348633
  - -0.10552024841308594
  - -0.1032557487487793
  - -2.526310682296753
- - -0.10348844528198242
  - -0.10500001907348633
  - -0.10923886299133301
  - -0.10431885719299316
  - -0.10165119171142578
  - -0.1029362678527832
  - -0.10442543029785156
  - -0.10243082046508789
  - -0.10511159896850586
  - -0.10452747344970703
  - -0.10609579086303711
  - -0.07999619841575623
  - -0.11259937286376953
  - -0.10529375076293945
  - -0.10556745529174805
  - -0.12234354019165039
  - -0.11086130142211914
  - -0.10390186309814453
  - -0.10796022415161133
  - -0.0824313759803772
  - -0.11308884620666504
  - -0.10553860664367676
  - -0.07135152816772461
  - -0.10331249237060547
  - -0.10167598724365234
  - -0.10453176498413086
  - -0.10947990417480469
  - -0.1115717887878418
  - -0.15099333226680756
  - -0.11108946800231934
  - -0.10620522499084473
  - -0.10529565811157227
  - -0.10434865951538086
  - -0.10725092887878418
  - -0.10531282424926758
  - -0.09510040283203125
  - -0.10353374481201172
  - -0.10988283157348633
  - -0.10552024841308594
  - -0.1032557487487793
  - -2.596898317337036
- - -0.10348844528198242
  - -0.10500001907348633
  - -0.10923886299133301
  - -0.10431885719299316
  - -0.10165119171142578
  - -0.1029362678527832
  - -0.10442543029785156
  - -0.10243082046508789
  - -0.10511159896850586
  - -0.10452747344970703
  - -0.10609579086303711
  - -0.07999619841575623
  - -3.4466686248779297
  - -0.10085749626159668
  - -0.10791015625
  - -0.1318683624267578
  - -0.1123204231262207
  - -0.10462045669555664
  - -0.10747575759887695
  - -0.07968582212924957
  - -0.11304426193237305
  - -0.10553383827209473
  - -0.0717926025390625
  - -0.10388946533203125
  - -0.10165596008300781
  - -0.10457372665405273
  - -0.1094808578491211
  - -0.11171293258666992
  - -0.14937125146389008
  - -0.11108875274658203
  - -0.10619878768920898
  - -0.10526037216186523
  - -0.10433387756347656
  - -0.10725283622741699
  - -0.10531187057495117
  - -0.09506511688232422
  - -0.10349321365356445
  - -0.1098775863647461
  - -0.10550737380981445
  - -0.10325813293457031
  - -0.16736748814582825
- - -0.10348844528198242
  - -0.10500001907348633
  - -0.10923886299133301
  - -0.10431885719299316
  - -0.10165119171142578
  - -0.1029362678527832
  - -0.10442543029785156
  - -0.10243082046508789
  - -0.10511159896850586
  - -0.10452747344970703
  - -0.10609579086303711
  - -0.07999619841575623
  - -0.11259937286376953
  - -0.10529375076293945
  - -0.10556745529174805
  - -0.12234354019165039
  - -0.11086130142211914
  - -0.10390186309814453
  - -0.10796022415161133
  - -0.0824313759803772
  - -3.4367525577545166
  - -0.1051783561706543
  - -0.09550237655639648
  - -0.10917139053344727
  - -0.10166788101196289
  - -0.10458040237426758
  - -0.10933494567871094
  - -0.11101198196411133
  - -0.15043771266937256
  - -0.11105680465698242
  - -0.10619902610778809
  - -0.10543060302734375
  - -0.10422754287719727
  - -0.1072537899017334
  - -0.10530877113342285
  - -0.09514713287353516
  - -0.1035761833190918
  - -0.10985469818115234
  - -0.10552024841308594
  - -0.10325813293457031
  - -0.16786077618598938
- - -0.10348844528198242
  - -0.10500001907348633
  - -0.10923886299133301
  - -0.10431885719299316
  - -0.10165119171142578
  - -0.1029362678527832
  - -0.10442543029785156
  - -0.10243082046508789
  - -0.10511159896850586
  - -0.10452747344970703
  - -0.10609579086303711
  - -0.07999619841575623
  - -0.11259937286376953
  - -0.10529375076293945
  - -0.10556745529174805
  - -0.12234354019165039
  - -0.11086130142211914
  - -0.10390186309814453
  - -0.10796022415161133
  - -0.0824313759803772
  - -0.11308884620666504
  - -0.10553860664367676
  - -0.07135152816772461
  - -0.10331249237060547
  - -0.10167598724365234
  - -0.10453176498413086
  - -0.10947990417480469
  - -0.1115717887878418
  - -0.15099333226680756
  - -3.4739885330200195
  - -0.10600662231445312
  - -0.10242366790771484
  - -0.10467815399169922
  - -0.10721349716186523
  - -0.10534524917602539
  - -0.09502935409545898
  - -0.10369205474853516
  - -0.1097865104675293
  - -0.10544729232788086
  - -0.10324764251708984
  - -0.16726906597614288
- - -0.10348844528198242
  - -0.10500001907348633
  - -0.10923886299133301
  - -0.10431885719299316
  - -0.10165119171142578
  - -0.1029362678527832
  - -0.10442543029785156
  - -0.10243082046508789
  - -0.10511159896850586
  - -0.10452747344970703
  - -0.10609579086303711
  - -0.07999619841575623
  - -0.11259937286376953
  - -0.10529375076293945
  - -0.10556745529174805
  - -0.12234354019165039
  - -0.11086130142211914
  - -0.10390186309814453
  - -0.10796022415161133
  - -0.0824313759803772
  - -0.11308884620666504
  - -0.10553860664367676
  - -0.07135152816772461
  - -0.10331249237060547
  - -0.10167598724365234
  - -0.10453176498413086
  - -0.10947990417480469
  - -0.1115717887878418
  - -0.15099333226680756
  - -0.11108946800231934
  - -0.10620522499084473
  - -0.10529565811157227
  - -0.10434865951538086
  - -3.5557761192321777
  - -0.10527253150939941
  - -0.09889745712280273
  - -0.10340213775634766
  - -0.10982513427734375
  - -0.10540437698364258
  - -0.10322284698486328
  - -0.16704607009887695
- - -0.10348844528198242
  - -0.10500001907348633
  - -0.10923886299133301
  - -0.10431885719299316
  - -0.10165119171142578
  - -0.1029362678527832
  - -0.10442543029785156
  - -0.10243082046508789
  - -0.10511159896850586
  - -0.10452747344970703
  - -0.10609579086303711
  - -0.07999619841575623
  - -0.11259937286376953
  - -0.10529375076293945
  - -0.10556745529174805
  - -0.12234354019165039
  - -0.11086130142211914
  - -0.10390186309814453
  - -0.10796022415161133
  - -0.0824313759803772
  - -0.11308884620666504
  - -0.10553860664367676
  - -0.07135152816772461
  - -0.10331249237060547
  - -0.10167598724365234
  - -0.10453176498413086
  - -0.10947990417480469
  - -0.1115717887878418
  - -3.6370155811309814
  - -0.11149740219116211
  - -0.10613131523132324
  - -0.1063070297241211
  - -0.1044769287109375
  - -0.10725903511047363
  - -0.1053006649017334
  - -0.09539413452148438
  - -0.10353803634643555
  - -0.1097574234008789
  - -0.10542583465576172
  - -0.10327434539794922
  - -0.1693226397037506
- - -0.10348844528198242
  - -0.10500001907348633
  - -0.10923886299133301
  - -0.10431885719299316
  - -0.10165119171142578
  - -0.1029362678527832
  - -0.10442543029785156
  - -0.10243082046508789
  - -0.10511159896850586
  - -0.10452747344970703
  - -0.10609579086303711
  - -0.07999619841575623
  - -0.11259937286376953
  - -0.10529375076293945
  - -0.10556745529174805
  - -0.12234354019165039
  - -0.11086130142211914
  - -0.10390186309814453
  - -0.10796022415161133
  - -0.0824313759803772
  - -0.11308884620666504
  - -0.10553860664367676
  - -0.07135152816772461
  - -0.10331249237060547
  - -0.10167598724365234
  - -0.10453176498413086
  - -0.10947990417480469
  - -0.1115717887878418
  - -3.865847587585449
  - -0.14519548416137695
  - -0.10576725006103516
  - -0.10600519180297852
  - -0.1034846305847168
  - -0.10722088813781738
  - -0.1053619384765625
  - -0.09504413604736328
  - -0.10406780242919922
  - -0.10992956161499023
  - -0.1053919792175293
  - -0.10328102111816406
  - -0.16792497038841248
- - -0.10348844528198242
  - -0.10500001907348633
  - -0.10923886299133301
  - -0.10431885719299316
  - -0.10165119171142578
  - -0.1029362678527832
  - -0.10442543029785156
  - -0.10243082046508789
  - -0.10511159896850586
  - -0.10452747344970703
  - -0.10609579086303711
  - -0.07999619841575623
  - -0.11259937286376953
  - -0.10529375076293945
  - -0.10556745529174805
  - -0.12234354019165039
  - -0.11086130142211914
  - -0.10390186309814453
  - -0.10796022415161133
  - -0.0824313759803772
  - -0.11308884620666504
  - -0.10553860664367676
  - -0.07135152816772461
  - -0.10331249237060547
  - -0.10167598724365234
  - -0.10453176498413086
  - -0.10947990417480469
  - -0.1115717887878418
  - -3.8735251426696777
  - -0.1799302101135254
  - -0.10566067695617676
  - -0.10621786117553711
  - -0.10368585586547852
  - -0.10723137855529785
  - -0.1053609848022461
  - -0.09501409530639648
  - -0.10415410995483398
  - -0.10982751846313477
  - -0.10535907745361328
  - -0.10327863693237305
  - -0.1683681160211563
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Highschooler'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Likes'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Friend'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Highschooler'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'True'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Highschooler'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Highschooler'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Highschooler'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Count')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Highschooler'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'NoneAggOp')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Highschooler'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'grade'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('cond', 'And')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Highschooler'
