db: tests-examples/db2csv/wta_1/tables/wta_1.sqlite
inputs:
 - tests-examples/db2csv/wta_1/tables/matches.csv
output: tests-examples/db2csv/wta_1/tables/0022_dev.csv
raw_question: How many matches were played in 2013 or 2016? 
question_index: 450 
constants:
 - 2016
 - 2013
functions:
 - count
columns:
 - year
filters:
 - '='
comment: |-
  SELECT count(*)
  FROM matches
  WHERE YEAR = 2013
    OR YEAR = 2016

sql: |-
  SELECT count(*)
  FROM matches
  WHERE YEAR = 2013
    OR YEAR = 2016
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/wta_1/tables/matches.csv
- - tests-examples/db2csv/wta_1/tables/matches.csv
- - tests-examples/db2csv/wta_1/tables/matches.csv
- - tests-examples/db2csv/wta_1/tables/matches.csv
- - tests-examples/db2csv/wta_1/tables/matches.csv
- - tests-examples/db2csv/wta_1/tables/matches.csv
- - tests-examples/db2csv/wta_1/tables/matches.csv
- - tests-examples/db2csv/wta_1/tables/matches.csv
- - tests-examples/db2csv/wta_1/tables/matches.csv
- - tests-examples/db2csv/wta_1/tables/matches.csv
smbop_beam_constants:
- - 2016
  - 2013
- - 2016
  - 2013
- - 2016
  - 2013
- - 2016
  - 2013
- - 2016
  - 2013
- - 2016
  - 2013
- - 2016
  - 2013
- - 2016
  - 2013
- - 2016
  - 2013
- - 2016
  - 2013
smbop_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
smbop_beam_columns:
- - year
- - year
- - year
- - year
- - year
- - year
- - year
- - 2016
  - year
- - year
- - 2016
  - year
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '!='
- - '='
  - '>'
- - '='
- - '='
  - '!='
- - '='
  - '>'
- - ' between '
- - '='
  - '!='
- - '>='
  - '>'
- - '!='
smbop_beam_inferred_code:
  - SELECT COUNT( * ) FROM matches WHERE matches.year = 2013 OR matches.year = 2016
  - SELECT COUNT( * ) FROM matches WHERE matches.year != 2013 OR matches.year != 2016
  - SELECT COUNT( * ) FROM matches WHERE matches.year = 2013 AND matches.year > 2013 OR matches.year = 2016
  - SELECT COUNT( * ) FROM matches WHERE matches.year = 2013 AND matches.year = 2016 OR matches.year = 2016
  - SELECT COUNT( * ) FROM matches WHERE matches.year = 2013 AND matches.year != 2013 OR matches.year != 2016
  - SELECT COUNT( * ) FROM matches WHERE matches.year > 2013 OR matches.year = 2016
  - SELECT COUNT( * ) FROM matches WHERE matches.year BETWEEN 2013 and 2016
  - SELECT COUNT( * ) FROM matches WHERE matches.year = 2013 AND matches.year != 2013 OR 2016 != 2016
  - SELECT COUNT( * ) FROM matches WHERE matches.year >= 2013 OR matches.year >= 2016
  - SELECT COUNT( * ) FROM matches WHERE matches.year != 2013 OR 2016 != 2016
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( * ) FROM matches WHERE matches.year = 2013 OR matches.year = 2016
  - SELECT COUNT( * ) FROM matches WHERE matches.year != 2013 OR matches.year != 2016
  - SELECT COUNT( * ) FROM matches WHERE matches.year = 2013 AND matches.year > 2013 OR matches.year = 2016
  - SELECT COUNT( * ) FROM matches WHERE matches.year = 2013 AND matches.year = 2016 OR matches.year = 2016
  - SELECT COUNT( * ) FROM matches WHERE matches.year = 2013 AND matches.year != 2013 OR matches.year != 2016
  - SELECT COUNT( * ) FROM matches WHERE matches.year > 2013 OR matches.year = 2016
  - SELECT COUNT( * ) FROM matches WHERE matches.year BETWEEN 2013 and 2016
  - SELECT COUNT( * ) FROM matches WHERE matches.year = 2013 AND matches.year != 2013 OR 2016 != 2016
  - SELECT COUNT( * ) FROM matches WHERE matches.year >= 2013 OR matches.year >= 2016
  - SELECT COUNT( * ) FROM matches WHERE matches.year != 2013 OR 2016 != 2016
ratsql_beam_join_columns:
- []
- []
- []
- []
- []
- - player_id
  - loser_id
- - player_id
  - loser_id
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/wta_1/tables/matches.csv
- - tests-examples/db2csv/wta_1/tables/matches.csv
- - tests-examples/db2csv/wta_1/tables/matches.csv
- - tests-examples/db2csv/wta_1/tables/matches.csv
- - tests-examples/db2csv/wta_1/tables/matches.csv
- - tests-examples/db2csv/wta_1/tables/matches.csv
  - tests-examples/db2csv/wta_1/tables/players.csv
- - tests-examples/db2csv/wta_1/tables/rankings.csv
  - tests-examples/db2csv/wta_1/tables/matches.csv
  - tests-examples/db2csv/wta_1/tables/players.csv
ratsql_beam_constants:
- - 2016
  - 2013
- - 2016
  - 2013
- - 2016
  - 2013
- - 2016
  - 2013
- - 2016
  - 2013
- - 2016
  - 2013
- - 2016
  - 2013
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - year
- - year
- - year
- - year
- - year
- - year
- - year
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '>='
  - '>'
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Count(*) FROM matches WHERE matches.year = 'terminal' OR matches.year = 'terminal'
  - SELECT Count(*) FROM matches WHERE matches.year = 'terminal'
  - SELECT Count(*) FROM matches WHERE matches.year >= 'terminal'
  - SELECT Count(*) FROM matches WHERE DISTINCT matches.year = 'terminal' OR matches.year = 'terminal'
  - SELECT Count(DISTINCT *) FROM matches WHERE matches.year = 'terminal' OR matches.year = 'terminal'
  - SELECT Count(*) FROM matches WHERE matches.year = 'terminal' OR DISTINCT matches.year = 'terminal'
  - SELECT Count(*) FROM matches WHERE matches.year = 'terminal' OR matches.year = 'terminal' LIMIT 1
  - SELECT DISTINCT Count(*) FROM matches WHERE matches.year = 'terminal' OR matches.year = 'terminal'
  - SELECT Count(*) FROM players JOIN matches ON players.player_id = matches.loser_id WHERE matches.year = 'terminal' OR matches.year = 'terminal'
  - SELECT Count(*) FROM players JOIN matches ON matches.loser_id = players.player_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.year = 'terminal' OR matches.year = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(*) FROM matches WHERE matches.year = 2016 OR matches.year = 2013
  - SELECT Count(*) FROM matches WHERE matches.year = 2016
  - SELECT Count(*) FROM matches WHERE matches.year >= 2016
  - SELECT Count(*) FROM matches WHERE DISTINCT matches.year = 2016 OR matches.year = 2013
  - SELECT Count(DISTINCT *) FROM matches WHERE matches.year = 2016 OR matches.year = 2013
  - SELECT Count(*) FROM matches WHERE matches.year = 2016 OR DISTINCT matches.year = 2013
  - SELECT Count(*) FROM matches WHERE matches.year = 2016 OR matches.year = 2013 LIMIT 1
  - SELECT DISTINCT Count(*) FROM matches WHERE matches.year = 2016 OR matches.year = 2013
  - SELECT Count(*) FROM players JOIN matches ON players.player_id = matches.loser_id WHERE matches.year = 2016 OR matches.year = 2013
  - SELECT Count(*) FROM players JOIN matches ON matches.loser_id = players.player_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.year = 2016 OR matches.year = 2013
ratsql_beam_score_history:
- - -0.10678768157958984
  - -0.10457992553710938
  - -0.10607576370239258
  - -0.10402846336364746
  - -0.10277271270751953
  - -0.10189294815063477
  - -0.1106867790222168
  - -0.10302257537841797
  - -0.10502290725708008
  - -0.10434913635253906
  - -0.10535001754760742
  - -0.10727126151323318
  - -0.11165475845336914
  - -0.10503888130187988
  - -0.09511995315551758
  - -0.2065291404724121
  - -0.11388778686523438
  - -0.09941911697387695
  - -0.10169076919555664
  - -0.10106468200683594
  - -0.10352563858032227
  - -0.10410785675048828
  - -0.10495758056640625
  - -0.10154251009225845
  - -0.11233043670654297
  - -0.10546588897705078
  - -0.10588502883911133
  - -0.09129858016967773
  - -0.10087823867797852
  - -0.1019754409790039
  - -0.10573387145996094
  - -0.1051173210144043
  - -0.1017909049987793
  - -0.09487965703010559
  - -0.11079788208007812
  - -0.10595488548278809
  - -0.10606908798217773
  - -0.1009511947631836
  - -0.1031956672668457
  - -0.10822296142578125
  - -0.10468697547912598
  - -0.09728097915649414
  - -0.10391664505004883
  - -0.11050701141357422
  - -0.104888916015625
  - -0.10378265380859375
  - -0.05903464928269386
- - -0.10678768157958984
  - -0.10457992553710938
  - -0.10607576370239258
  - -0.10402846336364746
  - -0.10277271270751953
  - -0.10189294815063477
  - -0.1106867790222168
  - -0.10302257537841797
  - -0.10502290725708008
  - -0.10434913635253906
  - -0.10535001754760742
  - -0.10727126151323318
  - -0.11165475845336914
  - -0.10503888130187988
  - -0.09511995315551758
  - -3.3643569946289062
  - -0.11351537704467773
  - -0.10136032104492188
  - -0.10399675369262695
  - -0.1048741340637207
  - -0.10549497604370117
  - -0.08397496491670609
  - -0.11228728294372559
  - -0.10526442527770996
  - -0.10750198364257812
  - -0.09914731979370117
  - -0.10400819778442383
  - -0.10809183120727539
  - -0.10462045669555664
  - -0.1280069351196289
  - -0.10558748245239258
  - -0.11009788513183594
  - -0.10542964935302734
  - -0.10374832153320312
  - -0.06389374285936356
- - -0.10678768157958984
  - -0.10457992553710938
  - -0.10607576370239258
  - -0.10402846336364746
  - -0.10277271270751953
  - -0.10189294815063477
  - -0.1106867790222168
  - -0.10302257537841797
  - -0.10502290725708008
  - -0.10434913635253906
  - -0.10535001754760742
  - -0.10727126151323318
  - -0.11165475845336914
  - -0.10503888130187988
  - -0.09511995315551758
  - -3.9220004081726074
  - -0.09480571746826172
  - -0.1046295166015625
  - -0.10564184188842773
  - -0.10536623001098633
  - -0.10500144958496094
  - -0.5933172702789307
  - -0.11300039291381836
  - -0.10554194450378418
  - -0.11001825332641602
  - -0.10761070251464844
  - -0.1017913818359375
  - -0.10797595977783203
  - -0.10454988479614258
  - -0.0979766845703125
  - -0.10366153717041016
  - -0.11025667190551758
  - -0.10509109497070312
  - -0.10378837585449219
  - -0.062414802610874176
- - -0.10678768157958984
  - -0.10457992553710938
  - -0.10607576370239258
  - -0.10402846336364746
  - -0.10277271270751953
  - -0.10189294815063477
  - -0.1106867790222168
  - -0.10302257537841797
  - -0.10502290725708008
  - -0.10434913635253906
  - -0.10535001754760742
  - -0.10727126151323318
  - -0.11165475845336914
  - -0.10503888130187988
  - -0.09511995315551758
  - -0.2065291404724121
  - -0.11388778686523438
  - -0.09941911697387695
  - -0.10169076919555664
  - -0.10106468200683594
  - -0.10352563858032227
  - -0.10410785675048828
  - -0.10495758056640625
  - -0.10154251009225845
  - -3.4371755123138428
  - -0.10561704635620117
  - -0.10519027709960938
  - -0.09257364273071289
  - -0.10059690475463867
  - -0.10193157196044922
  - -0.10692739486694336
  - -0.10532140731811523
  - -0.10126972198486328
  - -0.09647246450185776
  - -0.11078262329101562
  - -0.10596275329589844
  - -0.1060795783996582
  - -0.10094976425170898
  - -0.10317230224609375
  - -0.10822701454162598
  - -0.10468506813049316
  - -0.09727048873901367
  - -0.10391998291015625
  - -0.1105051040649414
  - -0.10489416122436523
  - -0.10379266738891602
  - -0.05910342186689377
- - -0.10678768157958984
  - -0.10457992553710938
  - -0.10607576370239258
  - -0.10402846336364746
  - -0.10277271270751953
  - -0.10189294815063477
  - -0.1106867790222168
  - -0.10302257537841797
  - -0.10502290725708008
  - -0.10434913635253906
  - -0.10535001754760742
  - -0.10727126151323318
  - -3.471755027770996
  - -0.10510993003845215
  - -0.09536504745483398
  - -0.18466854095458984
  - -0.11394739151000977
  - -0.10012483596801758
  - -0.10207128524780273
  - -0.10101890563964844
  - -0.10355424880981445
  - -0.10412979125976562
  - -0.10483646392822266
  - -0.10233797878026962
  - -0.11232995986938477
  - -0.10546016693115234
  - -0.10597944259643555
  - -0.09137487411499023
  - -0.10083866119384766
  - -0.10199117660522461
  - -0.10573720932006836
  - -0.10515928268432617
  - -0.10187673568725586
  - -0.09635988622903824
  - -0.11079025268554688
  - -0.10595107078552246
  - -0.1061100959777832
  - -0.10094356536865234
  - -0.10320568084716797
  - -0.10822749137878418
  - -0.10468888282775879
  - -0.09730005264282227
  - -0.1039128303527832
  - -0.11049509048461914
  - -0.1048879623413086
  - -0.10378217697143555
  - -0.059093981981277466
- - -0.10678768157958984
  - -0.10457992553710938
  - -0.10607576370239258
  - -0.10402846336364746
  - -0.10277271270751953
  - -0.10189294815063477
  - -0.1106867790222168
  - -0.10302257537841797
  - -0.10502290725708008
  - -0.10434913635253906
  - -0.10535001754760742
  - -0.10727126151323318
  - -0.11165475845336914
  - -0.10503888130187988
  - -0.09511995315551758
  - -0.2065291404724121
  - -0.11388778686523438
  - -0.09941911697387695
  - -0.10169076919555664
  - -0.10106468200683594
  - -0.10352563858032227
  - -0.10410785675048828
  - -0.10495758056640625
  - -0.10154251009225845
  - -0.11233043670654297
  - -0.10546588897705078
  - -0.10588502883911133
  - -0.09129858016967773
  - -0.10087823867797852
  - -0.1019754409790039
  - -0.10573387145996094
  - -0.1051173210144043
  - -0.1017909049987793
  - -0.09487965703010559
  - -3.4634907245635986
  - -0.10616731643676758
  - -0.10564661026000977
  - -0.10084915161132812
  - -0.10318183898925781
  - -0.10819339752197266
  - -0.10469603538513184
  - -0.09742164611816406
  - -0.10397911071777344
  - -0.11056852340698242
  - -0.1049046516418457
  - -0.10381078720092773
  - -0.058933619409799576
- - -0.10678768157958984
  - -0.10457992553710938
  - -0.10607576370239258
  - -0.10402846336364746
  - -0.10277271270751953
  - -0.10189294815063477
  - -0.1106867790222168
  - -0.10302257537841797
  - -0.10502290725708008
  - -0.10434913635253906
  - -0.10535001754760742
  - -0.10727126151323318
  - -0.11165475845336914
  - -0.10503888130187988
  - -0.09511995315551758
  - -0.2065291404724121
  - -0.11388778686523438
  - -0.09941911697387695
  - -0.10169076919555664
  - -0.10106468200683594
  - -0.10352563858032227
  - -0.10410785675048828
  - -0.10495758056640625
  - -0.10154251009225845
  - -0.11233043670654297
  - -0.10546588897705078
  - -0.10588502883911133
  - -0.09129858016967773
  - -0.10087823867797852
  - -0.1019754409790039
  - -0.10573387145996094
  - -0.1051173210144043
  - -0.1017909049987793
  - -0.09487965703010559
  - -0.11079788208007812
  - -0.10595488548278809
  - -0.10606908798217773
  - -0.1009511947631836
  - -0.1031956672668457
  - -3.5422868728637695
  - -0.10453343391418457
  - -0.09712028503417969
  - -0.10413074493408203
  - -0.11057186126708984
  - -0.10495567321777344
  - -0.10381031036376953
  - -0.05827942490577698
- - -0.10678768157958984
  - -0.10457992553710938
  - -3.559817314147949
  - -0.1037898063659668
  - -0.10254478454589844
  - -0.10224771499633789
  - -0.11029195785522461
  - -0.10327577590942383
  - -0.1049947738647461
  - -0.10433673858642578
  - -0.10521650314331055
  - -0.10889504104852676
  - -0.11169743537902832
  - -0.10502243041992188
  - -0.09543561935424805
  - -0.21671485900878906
  - -0.11524534225463867
  - -0.09952974319458008
  - -0.10183572769165039
  - -0.10106420516967773
  - -0.10353565216064453
  - -0.10412263870239258
  - -0.10496664047241211
  - -0.10004113614559174
  - -0.11230635643005371
  - -0.10546755790710449
  - -0.10584354400634766
  - -0.09112548828125
  - -0.10088109970092773
  - -0.1019754409790039
  - -0.10571098327636719
  - -0.10512685775756836
  - -0.10175132751464844
  - -0.09458004683256149
  - -0.1107797622680664
  - -0.10596013069152832
  - -0.10607290267944336
  - -0.10095787048339844
  - -0.10319328308105469
  - -0.10822248458862305
  - -0.10468602180480957
  - -0.09727716445922852
  - -0.103912353515625
  - -0.11050605773925781
  - -0.10488653182983398
  - -0.10377788543701172
  - -0.059120386838912964
- - -0.10678768157958984
  - -0.10457992553710938
  - -0.10607576370239258
  - -0.10402846336364746
  - -0.10277271270751953
  - -0.10189294815063477
  - -0.1106867790222168
  - -0.10302257537841797
  - -0.10502290725708008
  - -0.10434913635253906
  - -0.10535001754760742
  - -0.10727126151323318
  - -0.11165475845336914
  - -0.10503888130187988
  - -0.09511995315551758
  - -0.2065291404724121
  - -0.11388778686523438
  - -0.09941911697387695
  - -0.10169076919555664
  - -0.10106468200683594
  - -0.10352563858032227
  - -0.10410785675048828
  - -0.10495758056640625
  - -0.10154251009225845
  - -0.11233043670654297
  - -0.10546588897705078
  - -0.10588502883911133
  - -0.09129858016967773
  - -0.10087823867797852
  - -0.1019754409790039
  - -0.10573387145996094
  - -0.1051173210144043
  - -0.1017909049987793
  - -0.09487965703010559
  - -0.11079788208007812
  - -0.10595488548278809
  - -0.10606908798217773
  - -0.1009511947631836
  - -0.1031956672668457
  - -0.10822296142578125
  - -0.10468697547912598
  - -0.09728097915649414
  - -0.10391664505004883
  - -0.11050701141357422
  - -0.104888916015625
  - -0.10378265380859375
  - -3.544360637664795
- - -0.10678768157958984
  - -0.10457992553710938
  - -0.10607576370239258
  - -0.10402846336364746
  - -0.10277271270751953
  - -0.10189294815063477
  - -0.1106867790222168
  - -0.10302257537841797
  - -0.10502290725708008
  - -0.10434913635253906
  - -0.10535001754760742
  - -0.10727126151323318
  - -0.11165475845336914
  - -0.10503888130187988
  - -0.09511995315551758
  - -0.2065291404724121
  - -0.11388778686523438
  - -0.09941911697387695
  - -0.10169076919555664
  - -0.10106468200683594
  - -0.10352563858032227
  - -0.10410785675048828
  - -0.10495758056640625
  - -0.10154251009225845
  - -0.11233043670654297
  - -0.10546588897705078
  - -0.10588502883911133
  - -0.09129858016967773
  - -0.10087823867797852
  - -0.1019754409790039
  - -0.10573387145996094
  - -0.1051173210144043
  - -0.1017909049987793
  - -0.09487965703010559
  - -0.11079788208007812
  - -0.10595488548278809
  - -0.10606908798217773
  - -0.1009511947631836
  - -0.1031956672668457
  - -0.10822296142578125
  - -0.10468697547912598
  - -0.09728097915649414
  - -0.10391664505004883
  - -0.11050701141357422
  - -0.104888916015625
  - -0.10378265380859375
  - -3.559999942779541
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'matches'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'matches'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'matches'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'year'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'matches'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'matches'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'year'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'matches'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'matches'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'matches'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'players'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'year'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'rankings'
