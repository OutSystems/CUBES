db: tests-examples/db2csv/dog_kennels/tables/dog_kennels.sqlite
inputs:
 - tests-examples/db2csv/dog_kennels/tables/professionals.csv
 - tests-examples/db2csv/dog_kennels/tables/treatments.csv
output: tests-examples/db2csv/dog_kennels/tables/0005_dev.csv
raw_question: Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone. 
question_index: 922 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - Indiana
 - 2
join_columns:
 - professional_id
groupby_columns:
 - professional_id
functions:
 - count
columns:
 - state
filters:
 - '='
ieu:
 - union
comment: |-
  SELECT professional_id,
         last_name,
         cell_number
  FROM Professionals
  WHERE state = 'Indiana'
  UNION
  SELECT T1.professional_id,
         T1.last_name,
         T1.cell_number
  FROM Professionals AS T1
  JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id
  GROUP BY T1.professional_id
  HAVING count(*) > 2

sql: |-
  SELECT professional_id,
         last_name,
         cell_number
  FROM Professionals
  WHERE state = 'Indiana'
  UNION
  SELECT T1.professional_id,
         T1.last_name,
         T1.cell_number
  FROM Professionals AS T1
  JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id
  GROUP BY T1.professional_id
  HAVING count(*) > 2
smbop_beam_join_columns:
- - professional_id
smbop_beam_groupby_columns:
- - professional_id
smbop_beam_tables:
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
smbop_beam_constants:
- - Indiana
  - 2
smbop_beam_functions:
- - count
smbop_beam_columns:
- []
smbop_beam_ieu:
- []
smbop_beam_filters:
- []
smbop_beam_inferred_code:
  - SELECT professionals.professional_id , professionals.last_name , professionals.cell_number FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id GROUP BY professionals.professional_id HAVING COUNT( * ) > 2
smbop_beam_inferred_code_w_terminals:
  - SELECT professionals.professional_id , professionals.last_name , professionals.cell_number FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id GROUP BY professionals.professional_id HAVING COUNT( * ) > 2
smbop_beam_has_limit:
  - False
smbop_beam_has_order_by:
  - False
smbop_beam_order_by_direction:
- []
ratsql_beam_join_columns:
- - professional_id
- - professional_id
- - professional_id
- - professional_id
- - professional_id
ratsql_beam_groupby_columns:
- - professional_id
- - professional_id
- - professional_id
- - professional_id
- - professional_id
ratsql_beam_tables:
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
ratsql_beam_constants:
- - Indiana
  - 2
- - Indiana
  - 2
- - Indiana
  - 2
- - Indiana
  - 2
- - Indiana
  - 2
- - Indiana
  - 2
- - Indiana
  - 2
- - Indiana
  - 2
- - Indiana
  - 2
- - Indiana
  - 2
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - state
- - treatment_id
  - state
- - state
- - state
- - state
ratsql_beam_ieu:
- []
- []
- - union
- - union
- - union
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'terminal' GROUP BY Professionals.professional_id HAVING Count(*) > 'terminal'
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'terminal' GROUP BY Professionals.professional_id HAVING Count(Treatments.treatment_id) > 'terminal'
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals WHERE Professionals.state = 'terminal' GROUP BY Professionals.professional_id HAVING Count(*) > 'terminal' UNION SELECT Professionals.professional_id FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'terminal'
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals WHERE Professionals.state = 'terminal' GROUP BY Professionals.professional_id HAVING Count(*) > 'terminal' UNION SELECT Professionals.professional_id FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) > 'terminal'
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'terminal' GROUP BY Professionals.professional_id HAVING Count(*) > 'terminal' UNION SELECT Professionals.professional_id FROM Professionals WHERE Professionals.state = 'terminal'
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals WHERE Professionals.state = 'terminal' GROUP BY Professionals.professional_id HAVING Count(*) > 'terminal' UNION SELECT Treatments.professional_id FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) > 'terminal'
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals WHERE Professionals.state = 'terminal' GROUP BY Professionals.professional_id HAVING Count(*) > 'terminal' UNION SELECT Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) > 'terminal'
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'terminal' GROUP BY Professionals.professional_id HAVING Count(*) > 'terminal' UNION SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) > 'terminal'
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals WHERE Professionals.state = 'terminal' GROUP BY Professionals.professional_id HAVING Count(*) > 'terminal' UNION SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) > 'terminal'
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals WHERE Professionals.state = 'terminal' GROUP BY Professionals.professional_id HAVING Count(*) > 'terminal' UNION SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) > 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'Indiana' GROUP BY Professionals.professional_id HAVING Count(*) > 2
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'Indiana' GROUP BY Professionals.professional_id HAVING Count(Treatments.treatment_id) > '2'
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals WHERE Professionals.state = 'Indiana' GROUP BY Professionals.professional_id HAVING Count(*) > 2 UNION SELECT Professionals.professional_id FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = '2'
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals WHERE Professionals.state = 'Indiana' GROUP BY Professionals.professional_id HAVING Count(*) > 2 UNION SELECT Professionals.professional_id FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) > '2'
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'Indiana' GROUP BY Professionals.professional_id HAVING Count(*) > 2 UNION SELECT Professionals.professional_id FROM Professionals WHERE Professionals.state = '2'
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals WHERE Professionals.state = 'Indiana' GROUP BY Professionals.professional_id HAVING Count(*) > 2 UNION SELECT Treatments.professional_id FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) > '2'
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals WHERE Professionals.state = 'Indiana' GROUP BY Professionals.professional_id HAVING Count(*) > 2 UNION SELECT Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) > '2'
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'Indiana' GROUP BY Professionals.professional_id HAVING Count(*) > 2 UNION SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) > '2'
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals WHERE Professionals.state = 'Indiana' GROUP BY Professionals.professional_id HAVING Count(*) > 2 UNION SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) > '2'
  - SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals WHERE Professionals.state = 'Indiana' GROUP BY Professionals.professional_id HAVING Count(*) > 2 UNION SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) > '2'
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10331869125366211
  - -0.1044778823852539
  - -0.10679864883422852
  - -0.1049349308013916
  - -0.14670896530151367
  - -0.10335731506347656
  - -0.10492897033691406
  - -0.10234880447387695
  - -0.1045389175415039
  - -0.10541343688964844
  - -0.10487699508666992
  - -0.14161065220832825
  - -0.1122751235961914
  - -0.10516548156738281
  - -0.10219812393188477
  - -0.10377979278564453
  - -0.10217046737670898
  - -0.10551595687866211
  - -0.10823202133178711
  - -0.10602378845214844
  - -0.11378594487905502
  - -0.10998845100402832
  - -0.10539507865905762
  - -0.10375785827636719
  - -0.104644775390625
  - -0.10247802734375
  - -0.10605049133300781
  - -0.1045694351196289
  - -0.10506772994995117
  - -0.43194130063056946
  - -0.11049127578735352
  - -0.10568451881408691
  - -0.09714794158935547
  - -0.10010910034179688
  - -0.10071897506713867
  - -0.10141658782958984
  - -0.1044321060180664
  - -0.10427188873291016
  - -0.1049494743347168
  - -0.10549873858690262
  - -0.11067533493041992
  - -0.10595035552978516
  - -0.10363626480102539
  - -0.10716676712036133
  - -0.09684944152832031
  - -0.10364198684692383
  - -0.10472774505615234
  - -0.23951312899589539
  - -0.11025762557983398
  - -0.10540294647216797
  - -0.08083152770996094
  - -0.0926961898803711
  - -0.10277271270751953
  - -0.1045370101928711
  - -0.10288476943969727
  - -0.10621833801269531
  - -0.2136196792125702
  - -0.10824918746948242
  - -0.1060938835144043
  - -0.10688257217407227
  - -0.0992116928100586
  - -0.10677027702331543
  - -0.10510373115539551
  - -1.500603199005127
  - -0.10248470306396484
  - -0.11306095123291016
  - -0.10488176345825195
  - -0.1050267219543457
  - -0.30089691281318665
  - -0.10410404205322266
  - -0.1035623550415039
  - -0.08125343173742294
- - -0.10331869125366211
  - -0.1044778823852539
  - -0.10679864883422852
  - -0.1049349308013916
  - -0.14670896530151367
  - -0.10335731506347656
  - -0.10492897033691406
  - -0.10234880447387695
  - -0.1045389175415039
  - -0.10541343688964844
  - -0.10487699508666992
  - -0.14161065220832825
  - -0.1122751235961914
  - -0.10516548156738281
  - -0.10219812393188477
  - -0.10377979278564453
  - -0.10217046737670898
  - -0.10551595687866211
  - -0.10823202133178711
  - -0.10602378845214844
  - -0.11378594487905502
  - -0.10998845100402832
  - -0.10539507865905762
  - -0.10375785827636719
  - -0.104644775390625
  - -0.10247802734375
  - -0.10605049133300781
  - -0.1045694351196289
  - -0.10506772994995117
  - -0.43194130063056946
  - -0.11049127578735352
  - -0.10568451881408691
  - -0.09714794158935547
  - -0.10010910034179688
  - -0.10071897506713867
  - -0.10141658782958984
  - -0.1044321060180664
  - -0.10427188873291016
  - -0.1049494743347168
  - -0.10549873858690262
  - -0.11067533493041992
  - -0.10595035552978516
  - -0.10363626480102539
  - -0.10716676712036133
  - -0.09684944152832031
  - -0.10364198684692383
  - -0.10472774505615234
  - -0.23951312899589539
  - -0.11025762557983398
  - -0.10540294647216797
  - -0.08083152770996094
  - -0.0926961898803711
  - -0.10277271270751953
  - -0.1045370101928711
  - -0.10288476943969727
  - -0.10621833801269531
  - -3.00966215133667
  - -0.10845232009887695
  - -0.10592007637023926
  - -0.10595560073852539
  - -0.10351037979125977
  - -0.10678863525390625
  - -0.10506010055541992
  - -1.3877654075622559
  - -0.10239791870117188
  - -0.11307764053344727
  - -0.10486650466918945
  - -0.10503196716308594
  - -0.2981061637401581
  - -0.10406303405761719
  - -0.1035604476928711
  - -0.08117451518774033
- - -0.10331869125366211
  - -0.1044778823852539
  - -0.10679864883422852
  - -0.1049349308013916
  - -0.14670896530151367
  - -0.10335731506347656
  - -0.10492897033691406
  - -0.10234880447387695
  - -0.1045389175415039
  - -0.10541343688964844
  - -0.10487699508666992
  - -0.14161065220832825
  - -0.1122751235961914
  - -0.10516548156738281
  - -0.10219812393188477
  - -0.10377979278564453
  - -0.10217046737670898
  - -0.10551595687866211
  - -0.10823202133178711
  - -0.10602378845214844
  - -0.11378594487905502
  - -0.10998845100402832
  - -0.10539507865905762
  - -0.10375785827636719
  - -0.104644775390625
  - -0.10247802734375
  - -0.10605049133300781
  - -0.1045694351196289
  - -0.10506772994995117
  - -0.43194130063056946
  - -0.11049127578735352
  - -0.10568451881408691
  - -0.09714794158935547
  - -0.10010910034179688
  - -0.10071897506713867
  - -0.10141658782958984
  - -0.1044321060180664
  - -0.10427188873291016
  - -0.1049494743347168
  - -0.10549873858690262
  - -0.11067533493041992
  - -0.10595035552978516
  - -0.10363626480102539
  - -0.10716676712036133
  - -0.09684944152832031
  - -0.10364198684692383
  - -0.10472774505615234
  - -0.23951312899589539
  - -0.11025762557983398
  - -0.10540294647216797
  - -0.08083152770996094
  - -0.0926961898803711
  - -0.10277271270751953
  - -0.1045370101928711
  - -0.10288476943969727
  - -0.10621833801269531
  - -0.2136196792125702
  - -0.10824918746948242
  - -0.1060938835144043
  - -0.10688257217407227
  - -0.0992116928100586
  - -0.10677027702331543
  - -0.10510373115539551
  - -0.5080533027648926
  - -0.0966639518737793
  - -0.10312509536743164
  - -0.10614895820617676
  - -0.1059572696685791
  - -1.3671293258666992
  - -0.10236501693725586
  - -0.10356807708740234
  - -0.10399007797241211
  - -0.1049346923828125
  - -0.10678482055664062
  - -0.10447883605957031
  - -0.593722939491272
  - -0.1113271713256836
  - -0.10592889785766602
  - -0.6860713958740234
  - -0.1581130027770996
  - -0.10119819641113281
  - -0.10162544250488281
  - -0.10482263565063477
  - -0.10416889190673828
  - -0.10250473022460938
  - -0.38934579491615295
  - -0.11044192314147949
  - -0.10623764991760254
  - -0.10382223129272461
  - -0.39499998092651367
  - -0.10937118530273438
  - -0.10756587982177734
  - -0.10514020919799805
  - -0.09741830825805664
  - -0.10560226440429688
  - -0.12750768661499023
  - -0.10492897033691406
  - -0.10506200790405273
  - -0.7353987693786621
  - -0.10667181015014648
  - -0.11149406433105469
  - -0.10583114624023438
  - -0.10463714599609375
  - -0.05039440840482712
- - -0.10331869125366211
  - -0.1044778823852539
  - -0.10679864883422852
  - -0.1049349308013916
  - -0.14670896530151367
  - -0.10335731506347656
  - -0.10492897033691406
  - -0.10234880447387695
  - -0.1045389175415039
  - -0.10541343688964844
  - -0.10487699508666992
  - -0.14161065220832825
  - -0.1122751235961914
  - -0.10516548156738281
  - -0.10219812393188477
  - -0.10377979278564453
  - -0.10217046737670898
  - -0.10551595687866211
  - -0.10823202133178711
  - -0.10602378845214844
  - -0.11378594487905502
  - -0.10998845100402832
  - -0.10539507865905762
  - -0.10375785827636719
  - -0.104644775390625
  - -0.10247802734375
  - -0.10605049133300781
  - -0.1045694351196289
  - -0.10506772994995117
  - -0.43194130063056946
  - -0.11049127578735352
  - -0.10568451881408691
  - -0.09714794158935547
  - -0.10010910034179688
  - -0.10071897506713867
  - -0.10141658782958984
  - -0.1044321060180664
  - -0.10427188873291016
  - -0.1049494743347168
  - -0.10549873858690262
  - -0.11067533493041992
  - -0.10595035552978516
  - -0.10363626480102539
  - -0.10716676712036133
  - -0.09684944152832031
  - -0.10364198684692383
  - -0.10472774505615234
  - -0.23951312899589539
  - -0.11025762557983398
  - -0.10540294647216797
  - -0.08083152770996094
  - -0.0926961898803711
  - -0.10277271270751953
  - -0.1045370101928711
  - -0.10288476943969727
  - -0.10621833801269531
  - -0.2136196792125702
  - -0.10824918746948242
  - -0.1060938835144043
  - -0.10688257217407227
  - -0.0992116928100586
  - -0.10677027702331543
  - -0.10510373115539551
  - -0.5080533027648926
  - -0.0966639518737793
  - -0.10312509536743164
  - -0.10614895820617676
  - -0.1059572696685791
  - -1.3671293258666992
  - -0.10236501693725586
  - -0.10356807708740234
  - -0.10399007797241211
  - -0.1049346923828125
  - -0.10678482055664062
  - -0.10447883605957031
  - -0.593722939491272
  - -0.1113271713256836
  - -0.10592889785766602
  - -1.0837664604187012
  - -0.08509254455566406
  - -0.11289358139038086
  - -0.10583066940307617
  - -0.10448408126831055
  - -0.7185906767845154
  - -0.11048245429992676
  - -0.10571098327636719
  - -0.07483339309692383
  - -0.09932661056518555
  - -0.10190629959106445
  - -0.10413742065429688
  - -0.10474395751953125
  - -0.11624956130981445
  - -0.23232170939445496
  - -0.10981321334838867
  - -0.10645031929016113
  - -0.10568046569824219
  - -0.1363072395324707
  - -0.10809016227722168
  - -0.10535383224487305
  - -0.09666919708251953
  - -0.1055002212524414
  - -0.11328268051147461
  - -0.1050577163696289
  - -0.10624361038208008
  - -0.44054141640663147
  - -0.1012582778930664
  - -0.10881280899047852
  - -0.1052703857421875
  - -0.10497617721557617
  - -0.04923347756266594
- - -0.10331869125366211
  - -0.1044778823852539
  - -0.10679864883422852
  - -0.1049349308013916
  - -0.14670896530151367
  - -0.10335731506347656
  - -0.10492897033691406
  - -0.10234880447387695
  - -0.1045389175415039
  - -0.10541343688964844
  - -0.10487699508666992
  - -0.14161065220832825
  - -0.1122751235961914
  - -0.10516548156738281
  - -0.10219812393188477
  - -0.10377979278564453
  - -0.10217046737670898
  - -0.10551595687866211
  - -0.10823202133178711
  - -0.10602378845214844
  - -0.11378594487905502
  - -0.10998845100402832
  - -0.10539507865905762
  - -0.10375785827636719
  - -0.104644775390625
  - -0.10247802734375
  - -0.10605049133300781
  - -0.1045694351196289
  - -0.10506772994995117
  - -0.43194130063056946
  - -0.11049127578735352
  - -0.10568451881408691
  - -0.09714794158935547
  - -0.10010910034179688
  - -0.10071897506713867
  - -0.10141658782958984
  - -0.1044321060180664
  - -0.10427188873291016
  - -0.1049494743347168
  - -0.10549873858690262
  - -0.11067533493041992
  - -0.10595035552978516
  - -0.10363626480102539
  - -0.10716676712036133
  - -0.09684944152832031
  - -0.10364198684692383
  - -0.10472774505615234
  - -0.23951312899589539
  - -0.11025762557983398
  - -0.10540294647216797
  - -0.08083152770996094
  - -0.0926961898803711
  - -0.10277271270751953
  - -0.1045370101928711
  - -0.10288476943969727
  - -0.10621833801269531
  - -0.2136196792125702
  - -0.10824918746948242
  - -0.1060938835144043
  - -0.10688257217407227
  - -0.0992116928100586
  - -0.10677027702331543
  - -0.10510373115539551
  - -0.5080533027648926
  - -0.0966639518737793
  - -0.10312509536743164
  - -0.10614895820617676
  - -0.1059572696685791
  - -1.3671293258666992
  - -0.10236501693725586
  - -0.10356807708740234
  - -0.10399007797241211
  - -0.1049346923828125
  - -0.10678482055664062
  - -0.10447883605957031
  - -0.593722939491272
  - -0.1113271713256836
  - -0.10592889785766602
  - -0.6860713958740234
  - -0.1581130027770996
  - -0.10119819641113281
  - -0.10162544250488281
  - -0.10482263565063477
  - -0.10416889190673828
  - -0.10250473022460938
  - -0.38934579491615295
  - -0.11044192314147949
  - -0.10623764991760254
  - -0.10382223129272461
  - -0.39499998092651367
  - -0.10937118530273438
  - -0.10756587982177734
  - -0.10514020919799805
  - -0.09741830825805664
  - -0.10560226440429688
  - -0.12750768661499023
  - -0.10492897033691406
  - -0.10506200790405273
  - -1.1267142295837402
  - -0.09981775283813477
  - -0.10392236709594727
  - -0.10487127304077148
  - -0.10316610336303711
  - -0.3542696535587311
  - -0.10476016998291016
  - -0.1043539047241211
  - -0.08635520935058594
- - -0.10331869125366211
  - -0.1044778823852539
  - -0.10679864883422852
  - -0.1049349308013916
  - -0.14670896530151367
  - -0.10335731506347656
  - -0.10492897033691406
  - -0.10234880447387695
  - -0.1045389175415039
  - -0.10541343688964844
  - -0.10487699508666992
  - -0.14161065220832825
  - -0.1122751235961914
  - -0.10516548156738281
  - -0.10219812393188477
  - -0.10377979278564453
  - -0.10217046737670898
  - -0.10551595687866211
  - -0.10823202133178711
  - -0.10602378845214844
  - -0.11378594487905502
  - -0.10998845100402832
  - -0.10539507865905762
  - -0.10375785827636719
  - -0.104644775390625
  - -0.10247802734375
  - -0.10605049133300781
  - -0.1045694351196289
  - -0.10506772994995117
  - -0.43194130063056946
  - -0.11049127578735352
  - -0.10568451881408691
  - -0.09714794158935547
  - -0.10010910034179688
  - -0.10071897506713867
  - -0.10141658782958984
  - -0.1044321060180664
  - -0.10427188873291016
  - -0.1049494743347168
  - -0.10549873858690262
  - -0.11067533493041992
  - -0.10595035552978516
  - -0.10363626480102539
  - -0.10716676712036133
  - -0.09684944152832031
  - -0.10364198684692383
  - -0.10472774505615234
  - -0.23951312899589539
  - -0.11025762557983398
  - -0.10540294647216797
  - -0.08083152770996094
  - -0.0926961898803711
  - -0.10277271270751953
  - -0.1045370101928711
  - -0.10288476943969727
  - -0.10621833801269531
  - -0.2136196792125702
  - -0.10824918746948242
  - -0.1060938835144043
  - -0.10688257217407227
  - -0.0992116928100586
  - -0.10677027702331543
  - -0.10510373115539551
  - -0.5080533027648926
  - -0.0966639518737793
  - -0.10312509536743164
  - -0.10614895820617676
  - -0.1059572696685791
  - -1.3671293258666992
  - -0.10236501693725586
  - -0.10356807708740234
  - -0.10399007797241211
  - -0.1049346923828125
  - -0.10678482055664062
  - -0.10447883605957031
  - -2.2412233352661133
  - -0.1108853816986084
  - -0.10633063316345215
  - -0.1805253028869629
  - -0.08736562728881836
  - -0.10943269729614258
  - -0.10879373550415039
  - -0.10422801971435547
  - -0.9140082001686096
  - -0.11055946350097656
  - -0.10559821128845215
  - -0.0696859359741211
  - -0.09903764724731445
  - -0.10179471969604492
  - -0.1043558120727539
  - -0.105499267578125
  - -0.11587047576904297
  - -0.23230460286140442
  - -0.1099088191986084
  - -0.10646867752075195
  - -0.10583162307739258
  - -0.13275718688964844
  - -0.10808849334716797
  - -0.10535812377929688
  - -0.09769153594970703
  - -0.1055746078491211
  - -0.11196470260620117
  - -0.10508012771606445
  - -0.10635709762573242
  - -0.4103130102157593
  - -0.10178852081298828
  - -0.1075897216796875
  - -0.10523605346679688
  - -0.10502862930297852
  - -0.051577769219875336
- - -0.10331869125366211
  - -0.1044778823852539
  - -0.10679864883422852
  - -0.1049349308013916
  - -0.14670896530151367
  - -0.10335731506347656
  - -0.10492897033691406
  - -0.10234880447387695
  - -0.1045389175415039
  - -0.10541343688964844
  - -0.10487699508666992
  - -0.14161065220832825
  - -0.1122751235961914
  - -0.10516548156738281
  - -0.10219812393188477
  - -0.10377979278564453
  - -0.10217046737670898
  - -0.10551595687866211
  - -0.10823202133178711
  - -0.10602378845214844
  - -0.11378594487905502
  - -0.10998845100402832
  - -0.10539507865905762
  - -0.10375785827636719
  - -0.104644775390625
  - -0.10247802734375
  - -0.10605049133300781
  - -0.1045694351196289
  - -0.10506772994995117
  - -0.43194130063056946
  - -0.11049127578735352
  - -0.10568451881408691
  - -0.09714794158935547
  - -0.10010910034179688
  - -0.10071897506713867
  - -0.10141658782958984
  - -0.1044321060180664
  - -0.10427188873291016
  - -0.1049494743347168
  - -0.10549873858690262
  - -0.11067533493041992
  - -0.10595035552978516
  - -0.10363626480102539
  - -0.10716676712036133
  - -0.09684944152832031
  - -0.10364198684692383
  - -0.10472774505615234
  - -0.23951312899589539
  - -0.11025762557983398
  - -0.10540294647216797
  - -0.08083152770996094
  - -0.0926961898803711
  - -0.10277271270751953
  - -0.1045370101928711
  - -0.10288476943969727
  - -0.10621833801269531
  - -0.2136196792125702
  - -0.10824918746948242
  - -0.1060938835144043
  - -0.10688257217407227
  - -0.0992116928100586
  - -0.10677027702331543
  - -0.10510373115539551
  - -0.5080533027648926
  - -0.0966639518737793
  - -0.10312509536743164
  - -0.10614895820617676
  - -0.1059572696685791
  - -1.3671293258666992
  - -0.10236501693725586
  - -0.10356807708740234
  - -0.10399007797241211
  - -0.1049346923828125
  - -0.10678482055664062
  - -0.10447883605957031
  - -2.067340135574341
  - -0.11075186729431152
  - -0.10631418228149414
  - -0.28377819061279297
  - -0.08212947845458984
  - -0.10846090316772461
  - -0.10753870010375977
  - -0.10468530654907227
  - -0.7729828953742981
  - -0.11040067672729492
  - -0.10573053359985352
  - -0.07050323486328125
  - -0.09914827346801758
  - -0.101654052734375
  - -0.10417652130126953
  - -0.10496282577514648
  - -0.11631965637207031
  - -0.23033228516578674
  - -0.10988330841064453
  - -0.10644936561584473
  - -0.10560941696166992
  - -0.12741994857788086
  - -0.10808539390563965
  - -0.10533952713012695
  - -0.09625720977783203
  - -0.10440492630004883
  - -0.13652515411376953
  - -0.10485124588012695
  - -0.10840559005737305
  - -0.6919970512390137
  - -0.10311269760131836
  - -0.11344480514526367
  - -0.10529708862304688
  - -0.10532855987548828
  - -0.04217933490872383
- - -0.10331869125366211
  - -0.1044778823852539
  - -0.10679864883422852
  - -0.1049349308013916
  - -0.14670896530151367
  - -0.10335731506347656
  - -0.10492897033691406
  - -0.10234880447387695
  - -0.1045389175415039
  - -0.10541343688964844
  - -0.10487699508666992
  - -0.14161065220832825
  - -0.1122751235961914
  - -0.10516548156738281
  - -0.10219812393188477
  - -0.10377979278564453
  - -0.10217046737670898
  - -0.10551595687866211
  - -0.10823202133178711
  - -0.10602378845214844
  - -0.11378594487905502
  - -0.10998845100402832
  - -0.10539507865905762
  - -0.10375785827636719
  - -0.104644775390625
  - -0.10247802734375
  - -0.10605049133300781
  - -0.1045694351196289
  - -0.10506772994995117
  - -0.43194130063056946
  - -0.11049127578735352
  - -0.10568451881408691
  - -0.09714794158935547
  - -0.10010910034179688
  - -0.10071897506713867
  - -0.10141658782958984
  - -0.1044321060180664
  - -0.10427188873291016
  - -0.1049494743347168
  - -0.10549873858690262
  - -0.11067533493041992
  - -0.10595035552978516
  - -0.10363626480102539
  - -0.10716676712036133
  - -0.09684944152832031
  - -0.10364198684692383
  - -0.10472774505615234
  - -0.23951312899589539
  - -0.11025762557983398
  - -0.10540294647216797
  - -0.08083152770996094
  - -0.0926961898803711
  - -0.10277271270751953
  - -0.1045370101928711
  - -0.10288476943969727
  - -0.10621833801269531
  - -0.2136196792125702
  - -0.10824918746948242
  - -0.1060938835144043
  - -0.10688257217407227
  - -0.0992116928100586
  - -0.10677027702331543
  - -0.10510373115539551
  - -0.5080533027648926
  - -0.0966639518737793
  - -0.10312509536743164
  - -0.10614895820617676
  - -0.1059572696685791
  - -0.5801386833190918
  - -0.10435676574707031
  - -0.10444307327270508
  - -0.1028738021850586
  - -0.10525274276733398
  - -0.10712957382202148
  - -0.10453462600708008
  - -0.3728025257587433
  - -0.11142396926879883
  - -0.10590171813964844
  - -0.10358572006225586
  - -0.1045522689819336
  - -0.10206794738769531
  - -0.10582351684570312
  - -0.10623693466186523
  - -0.10597610473632812
  - -0.07322163134813309
  - -0.1095120906829834
  - -0.10605382919311523
  - -0.10339784622192383
  - -0.10679864883422852
  - -0.10227155685424805
  - -0.10496330261230469
  - -0.10570430755615234
  - -0.10583639144897461
  - -0.17545586824417114
  - -0.1111137866973877
  - -0.10592031478881836
  - -0.2538609504699707
  - -0.07812070846557617
  - -0.11443662643432617
  - -0.1052393913269043
  - -0.10380744934082031
  - -0.7624807357788086
  - -0.11057901382446289
  - -0.10559201240539551
  - -0.06998252868652344
  - -0.09732246398925781
  - -0.10217046737670898
  - -0.10419988632202148
  - -0.10466575622558594
  - -0.11762762069702148
  - -0.25129032135009766
  - -0.1099100112915039
  - -0.10640645027160645
  - -0.10536861419677734
  - -0.1362314224243164
  - -0.10812211036682129
  - -0.10535383224487305
  - -0.09610223770141602
  - -0.10392475128173828
  - -0.1221003532409668
  - -0.10492610931396484
  - -0.10564756393432617
  - -0.36303097009658813
  - -0.10448646545410156
  - -0.10351324081420898
  - -0.0641603097319603
  - -0.10453939437866211
  - -0.24835729598999023
  - -0.10516786575317383
  - -0.10446453094482422
  - -0.16737596690654755
  - -0.10539960861206055
  - -0.10494041442871094
  - -0.20568163692951202
- - -0.10331869125366211
  - -0.1044778823852539
  - -0.10679864883422852
  - -0.1049349308013916
  - -0.14670896530151367
  - -0.10335731506347656
  - -0.10492897033691406
  - -0.10234880447387695
  - -0.1045389175415039
  - -0.10541343688964844
  - -0.10487699508666992
  - -0.14161065220832825
  - -0.1122751235961914
  - -0.10516548156738281
  - -0.10219812393188477
  - -0.10377979278564453
  - -0.10217046737670898
  - -0.10551595687866211
  - -0.10823202133178711
  - -0.10602378845214844
  - -0.11378594487905502
  - -0.10998845100402832
  - -0.10539507865905762
  - -0.10375785827636719
  - -0.104644775390625
  - -0.10247802734375
  - -0.10605049133300781
  - -0.1045694351196289
  - -0.10506772994995117
  - -0.43194130063056946
  - -0.11049127578735352
  - -0.10568451881408691
  - -0.09714794158935547
  - -0.10010910034179688
  - -0.10071897506713867
  - -0.10141658782958984
  - -0.1044321060180664
  - -0.10427188873291016
  - -0.1049494743347168
  - -0.10549873858690262
  - -0.11067533493041992
  - -0.10595035552978516
  - -0.10363626480102539
  - -0.10716676712036133
  - -0.09684944152832031
  - -0.10364198684692383
  - -0.10472774505615234
  - -0.23951312899589539
  - -0.11025762557983398
  - -0.10540294647216797
  - -0.08083152770996094
  - -0.0926961898803711
  - -0.10277271270751953
  - -0.1045370101928711
  - -0.10288476943969727
  - -0.10621833801269531
  - -0.2136196792125702
  - -0.10824918746948242
  - -0.1060938835144043
  - -0.10688257217407227
  - -0.0992116928100586
  - -0.10677027702331543
  - -0.10510373115539551
  - -0.5080533027648926
  - -0.0966639518737793
  - -0.10312509536743164
  - -0.10614895820617676
  - -0.1059572696685791
  - -0.5801386833190918
  - -0.10435676574707031
  - -0.10444307327270508
  - -0.1028738021850586
  - -0.10525274276733398
  - -0.10712957382202148
  - -0.10453462600708008
  - -0.3728025257587433
  - -0.11142396926879883
  - -0.10590171813964844
  - -0.10358572006225586
  - -0.1045522689819336
  - -0.10206794738769531
  - -0.10582351684570312
  - -0.10623693466186523
  - -0.10597610473632812
  - -0.07322163134813309
  - -0.1095120906829834
  - -0.10605382919311523
  - -0.10339784622192383
  - -0.10679864883422852
  - -0.10227155685424805
  - -0.10496330261230469
  - -0.10570430755615234
  - -0.10583639144897461
  - -0.17545586824417114
  - -0.1111137866973877
  - -0.10592031478881836
  - -0.2538609504699707
  - -0.07812070846557617
  - -0.11443662643432617
  - -0.1052393913269043
  - -0.10380744934082031
  - -1.922178030014038
  - -0.1118621826171875
  - -0.10601997375488281
  - -0.07161951065063477
  - -0.09662723541259766
  - -0.10211372375488281
  - -0.10421180725097656
  - -0.1051034927368164
  - -0.11837959289550781
  - -0.2614973783493042
  - -0.10997414588928223
  - -0.10645413398742676
  - -0.10579586029052734
  - -0.1378636360168457
  - -0.10811877250671387
  - -0.10532283782958984
  - -0.09614944458007812
  - -0.1038522720336914
  - -0.5456733703613281
  - -0.10472917556762695
  - -0.10625362396240234
  - -0.9535648226737976
  - -0.11674261093139648
  - -0.13635492324829102
  - -0.10534906387329102
  - -0.10617971420288086
  - -0.05104924738407135
- - -0.10331869125366211
  - -0.1044778823852539
  - -0.10679864883422852
  - -0.1049349308013916
  - -0.14670896530151367
  - -0.10335731506347656
  - -0.10492897033691406
  - -0.10234880447387695
  - -0.1045389175415039
  - -0.10541343688964844
  - -0.10487699508666992
  - -0.14161065220832825
  - -0.1122751235961914
  - -0.10516548156738281
  - -0.10219812393188477
  - -0.10377979278564453
  - -0.10217046737670898
  - -0.10551595687866211
  - -0.10823202133178711
  - -0.10602378845214844
  - -0.11378594487905502
  - -0.10998845100402832
  - -0.10539507865905762
  - -0.10375785827636719
  - -0.104644775390625
  - -0.10247802734375
  - -0.10605049133300781
  - -0.1045694351196289
  - -0.10506772994995117
  - -0.43194130063056946
  - -0.11049127578735352
  - -0.10568451881408691
  - -0.09714794158935547
  - -0.10010910034179688
  - -0.10071897506713867
  - -0.10141658782958984
  - -0.1044321060180664
  - -0.10427188873291016
  - -0.1049494743347168
  - -0.10549873858690262
  - -0.11067533493041992
  - -0.10595035552978516
  - -0.10363626480102539
  - -0.10716676712036133
  - -0.09684944152832031
  - -0.10364198684692383
  - -0.10472774505615234
  - -0.23951312899589539
  - -0.11025762557983398
  - -0.10540294647216797
  - -0.08083152770996094
  - -0.0926961898803711
  - -0.10277271270751953
  - -0.1045370101928711
  - -0.10288476943969727
  - -0.10621833801269531
  - -0.2136196792125702
  - -0.10824918746948242
  - -0.1060938835144043
  - -0.10688257217407227
  - -0.0992116928100586
  - -0.10677027702331543
  - -0.10510373115539551
  - -0.5080533027648926
  - -0.0966639518737793
  - -0.10312509536743164
  - -0.10614895820617676
  - -0.1059572696685791
  - -0.5801386833190918
  - -0.10435676574707031
  - -0.10444307327270508
  - -0.1028738021850586
  - -0.10525274276733398
  - -0.10712957382202148
  - -0.10453462600708008
  - -0.3728025257587433
  - -0.11142396926879883
  - -0.10590171813964844
  - -0.10358572006225586
  - -0.1045522689819336
  - -0.10206794738769531
  - -0.10582351684570312
  - -0.10623693466186523
  - -0.10597610473632812
  - -0.07322163134813309
  - -0.1095120906829834
  - -0.10605382919311523
  - -0.10339784622192383
  - -0.10679864883422852
  - -0.10227155685424805
  - -0.10496330261230469
  - -0.10570430755615234
  - -0.10583639144897461
  - -0.17545586824417114
  - -0.1111137866973877
  - -0.10592031478881836
  - -0.2538609504699707
  - -0.07812070846557617
  - -0.11443662643432617
  - -0.1052393913269043
  - -0.10380744934082031
  - -0.7624807357788086
  - -0.11057901382446289
  - -0.10559201240539551
  - -0.06998252868652344
  - -0.09732246398925781
  - -0.10217046737670898
  - -0.10419988632202148
  - -0.10466575622558594
  - -0.11762762069702148
  - -0.25129032135009766
  - -0.1099100112915039
  - -0.10640645027160645
  - -0.10536861419677734
  - -0.1362314224243164
  - -0.10812211036682129
  - -0.10535383224487305
  - -0.09610223770141602
  - -0.10392475128173828
  - -0.1221003532409668
  - -0.10492610931396484
  - -0.10564756393432617
  - -0.36303097009658813
  - -0.10448646545410156
  - -0.10351324081420898
  - -0.0641603097319603
  - -0.10453939437866211
  - -2.437526226043701
  - -0.10491466522216797
  - -0.10372018814086914
  - -0.06350818276405334
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'last_name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'last_name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('In', (True, True))
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'last_name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, True))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'last_name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, True))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'last_name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, True))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'last_name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, True))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'last_name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, True))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'first_name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'last_name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, True))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'last_name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'last_name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, True))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'last_name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'last_name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, True))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'last_name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
