db: tests-examples/db2csv/dog_kennels/tables/dog_kennels.sqlite
inputs:
 - tests-examples/db2csv/dog_kennels/tables/professionals.csv
 - tests-examples/db2csv/dog_kennels/tables/treatments.csv
output: tests-examples/db2csv/dog_kennels/tables/0026_dev.csv
raw_question: Find the id and cell phone of the professionals who operate two or more types of treatments. 
question_index: 943 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - 2
join_columns:
 - professional_id
groupby_columns:
 - professional_id
orderby_columns: []
functions:
 - count
columns: []
filters:
 - '>='
ieu: []
comment: |-
  SELECT T1.professional_id,
         T1.cell_number
  FROM Professionals AS T1
  JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id
  GROUP BY T1.professional_id
  HAVING count(*) >= 2

sql: |-
  SELECT T1.professional_id,
         T1.cell_number
  FROM Professionals AS T1
  JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id
  GROUP BY T1.professional_id
  HAVING count(*) >= 2
smbop_beam_join_columns:
- - professional_id
- - professional_id
- - professional_id
- - professional_id
smbop_beam_groupby_columns:
- - professional_id
- - professional_id
- - professional_id
- - professional_id
smbop_beam_orderby_columns:
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/dog_kennels/tables/treatments.csv
  - tests-examples/db2csv/dog_kennels/tables/professionals.csv
- - tests-examples/db2csv/dog_kennels/tables/treatments.csv
  - tests-examples/db2csv/dog_kennels/tables/professionals.csv
- - tests-examples/db2csv/dog_kennels/tables/treatments.csv
  - tests-examples/db2csv/dog_kennels/tables/professionals.csv
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
smbop_beam_constants:
- - 2
- - 2
- - 2
- - 2
smbop_beam_functions:
- - count
- - count
- - count
- - count
smbop_beam_columns:
- []
- []
- []
- []
smbop_beam_ieu:
- []
- []
- []
- []
smbop_beam_filters:
- - '>='
- - '>='
- - '>='
- - '>='
smbop_beam_inferred_code:
  - SELECT professionals.professional_id , professionals.cell_number FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id GROUP BY professionals.professional_id HAVING COUNT( * ) >= 2
  - SELECT treatments.professional_id , professionals.cell_number FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id GROUP BY professionals.professional_id HAVING COUNT( * ) >= 2
  - SELECT professionals.professional_id , professionals.home_phone FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id GROUP BY professionals.professional_id HAVING COUNT( * ) >= 2
  - SELECT professionals.professional_id , professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING COUNT( * ) >= 2
smbop_beam_inferred_code_w_terminals:
  - SELECT professionals.professional_id , professionals.cell_number FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id GROUP BY professionals.professional_id HAVING COUNT( * ) >= 2
  - SELECT treatments.professional_id , professionals.cell_number FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id GROUP BY professionals.professional_id HAVING COUNT( * ) >= 2
  - SELECT professionals.professional_id , professionals.home_phone FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id GROUP BY professionals.professional_id HAVING COUNT( * ) >= 2
  - SELECT professionals.professional_id , professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING COUNT( * ) >= 2
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
ratsql_beam_join_columns:
- - professional_id
- - professional_id
- - professional_id
- - professional_id
- - professional_id
- - dog_id
  - professional_id
- - professional_id
  - treatment_type_code
ratsql_beam_groupby_columns:
- - professional_id
- - professional_id
- - professional_id
- - professional_id
- - professional_id
- - professional_id
- - professional_id
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/dogs.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
- - tests-examples/db2csv/dog_kennels/tables/treatment_types.csv
  - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
ratsql_beam_constants:
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
  - '1'
- - 2
- - 2
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '>='
- - '>='
- - '>'
- - '>='
- - '>='
- - '>='
- - '>='
ratsql_beam_inferred_code:
  - SELECT Treatments.professional_id, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
  - SELECT Treatments.professional_id, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) >= 'terminal'
  - SELECT Treatments.professional_id, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) > 'terminal'
  - SELECT DISTINCT Treatments.professional_id, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
  - SELECT Treatments.professional_id, DISTINCT Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
  - SELECT Treatments.professional_id, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY DISTINCT Treatments.professional_id HAVING Count(*) >= 'terminal'
  - SELECT Treatments.professional_id, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(DISTINCT *) >= 'terminal'
  - SELECT Treatments.professional_id, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal' LIMIT 1
  - SELECT Treatments.professional_id, Professionals.cell_number FROM Dogs JOIN Professionals JOIN Treatments ON Dogs.dog_id = Treatments.dog_id AND Treatments.professional_id = Professionals.professional_id AND Dogs.dog_id = Treatments.dog_id GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
  - SELECT Treatments.professional_id, Professionals.cell_number FROM Treatment_Types JOIN Professionals JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code AND Treatments.professional_id = Professionals.professional_id AND Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Treatments.professional_id, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 2
  - SELECT Treatments.professional_id, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) >= 2
  - SELECT Treatments.professional_id, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) > 2
  - SELECT DISTINCT Treatments.professional_id, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 2
  - SELECT Treatments.professional_id, DISTINCT Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 2
  - SELECT Treatments.professional_id, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY DISTINCT Treatments.professional_id HAVING Count(*) >= 2
  - SELECT Treatments.professional_id, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(DISTINCT *) >= 2
  - SELECT Treatments.professional_id, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 2 LIMIT 1
  - SELECT Treatments.professional_id, Professionals.cell_number FROM Dogs JOIN Professionals JOIN Treatments ON Dogs.dog_id = Treatments.dog_id AND Treatments.professional_id = Professionals.professional_id AND Dogs.dog_id = Treatments.dog_id GROUP BY Treatments.professional_id HAVING Count(*) >= 2
  - SELECT Treatments.professional_id, Professionals.cell_number FROM Treatment_Types JOIN Professionals JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code AND Treatments.professional_id = Professionals.professional_id AND Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY Treatments.professional_id HAVING Count(*) >= 2
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - True
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10481500625610352
  - -0.10429143905639648
  - -0.10695624351501465
  - -0.10434627532958984
  - -0.12107610702514648
  - -0.10259485244750977
  - -0.10465812683105469
  - -0.10281229019165039
  - -0.10431146621704102
  - -0.1049652099609375
  - -0.10500907897949219
  - -0.0947980135679245
  - -0.11300921440124512
  - -0.10552406311035156
  - -0.10128927230834961
  - -0.10536003112792969
  - -0.10173273086547852
  - -0.10600423812866211
  - -0.10587120056152344
  - -0.10587596893310547
  - -0.10568656027317047
  - -0.11210441589355469
  - -0.10474252700805664
  - -0.11943769454956055
  - -0.12038135528564453
  - -0.10375404357910156
  - -0.10249853134155273
  - -0.10426902770996094
  - -0.2028227150440216
  - -0.11194133758544922
  - -0.10538482666015625
  - -0.15057706832885742
  - -0.10321235656738281
  - -0.10260963439941406
  - -0.10509109497070312
  - -0.10753631591796875
  - -0.11117744445800781
  - -0.18405072391033173
  - -0.10977411270141602
  - -0.10621094703674316
  - -0.1070704460144043
  - -0.10256052017211914
  - -0.10715866088867188
  - -0.10503649711608887
  - -0.0973973274230957
  - -0.10479593276977539
  - -0.11222600936889648
  - -0.10463333129882812
  - -0.10355377197265625
  - -0.1939305067062378
  - -0.10526275634765625
  - -0.10496664047241211
  - -0.06569337844848633
- - -0.10481500625610352
  - -0.10429143905639648
  - -0.10695624351501465
  - -0.10434627532958984
  - -0.12107610702514648
  - -0.10259485244750977
  - -0.10465812683105469
  - -0.10281229019165039
  - -0.10431146621704102
  - -0.1049652099609375
  - -0.10500907897949219
  - -0.0947980135679245
  - -0.11300921440124512
  - -0.10552406311035156
  - -0.10128927230834961
  - -0.10536003112792969
  - -0.10173273086547852
  - -0.10600423812866211
  - -0.10587120056152344
  - -0.10587596893310547
  - -0.10568656027317047
  - -0.11210441589355469
  - -0.10474252700805664
  - -0.11943769454956055
  - -0.12038135528564453
  - -0.10375404357910156
  - -0.10249853134155273
  - -0.10426902770996094
  - -3.412818193435669
  - -0.11113572120666504
  - -0.10556745529174805
  - -0.17902612686157227
  - -0.1068105697631836
  - -0.1020503044128418
  - -0.10500717163085938
  - -0.1074986457824707
  - -0.10898399353027344
  - -0.188622385263443
  - -0.10983061790466309
  - -0.1061711311340332
  - -0.10854244232177734
  - -0.10341119766235352
  - -0.10713839530944824
  - -0.10503792762756348
  - -0.09783506393432617
  - -0.10479545593261719
  - -0.11227750778198242
  - -0.10459470748901367
  - -0.10349845886230469
  - -0.19335757195949554
  - -0.10526227951049805
  - -0.1050405502319336
  - -0.06557872891426086
- - -0.10481500625610352
  - -0.10429143905639648
  - -0.10695624351501465
  - -0.10434627532958984
  - -0.12107610702514648
  - -0.10259485244750977
  - -0.10465812683105469
  - -0.10281229019165039
  - -0.10431146621704102
  - -0.1049652099609375
  - -0.10500907897949219
  - -0.0947980135679245
  - -0.11300921440124512
  - -0.10552406311035156
  - -0.10128927230834961
  - -0.10536003112792969
  - -0.10173273086547852
  - -0.10600423812866211
  - -0.10587120056152344
  - -0.10587596893310547
  - -0.10568656027317047
  - -0.11210441589355469
  - -0.10474252700805664
  - -0.11943769454956055
  - -0.12038135528564453
  - -0.10375404357910156
  - -0.10249853134155273
  - -0.10426902770996094
  - -0.2028227150440216
  - -0.11194133758544922
  - -0.10538482666015625
  - -3.4097509384155273
  - -0.10334062576293945
  - -0.10359954833984375
  - -0.1042332649230957
  - -0.10504579544067383
  - -0.1094970703125
  - -0.19721168279647827
  - -0.11029052734375
  - -0.10612058639526367
  - -0.10590887069702148
  - -0.10272550582885742
  - -0.10726213455200195
  - -0.1049644947052002
  - -0.1037135124206543
  - -0.10477590560913086
  - -0.11281299591064453
  - -0.10470724105834961
  - -0.1038351058959961
  - -0.18577270209789276
  - -0.10533857345581055
  - -0.1046452522277832
  - -0.06874625384807587
- - -0.10481500625610352
  - -0.10429143905639648
  - -0.10695624351501465
  - -0.10434627532958984
  - -0.12107610702514648
  - -0.10259485244750977
  - -0.10465812683105469
  - -0.10281229019165039
  - -0.10431146621704102
  - -0.1049652099609375
  - -0.10500907897949219
  - -0.0947980135679245
  - -3.445857048034668
  - -0.1050267219543457
  - -0.10118818283081055
  - -0.10632896423339844
  - -0.10161304473876953
  - -0.10580825805664062
  - -0.10524511337280273
  - -0.10538625717163086
  - -0.12498693913221359
  - -0.11178159713745117
  - -0.10508537292480469
  - -0.11931180953979492
  - -0.11951732635498047
  - -0.10377645492553711
  - -0.10254144668579102
  - -0.10427045822143555
  - -0.20256078243255615
  - -0.11194586753845215
  - -0.10538840293884277
  - -0.1495671272277832
  - -0.10278749465942383
  - -0.1025400161743164
  - -0.10506677627563477
  - -0.10748577117919922
  - -0.11080455780029297
  - -0.18626005947589874
  - -0.10978317260742188
  - -0.10619759559631348
  - -0.10725688934326172
  - -0.10269880294799805
  - -0.10715746879577637
  - -0.10503816604614258
  - -0.0974740982055664
  - -0.10489368438720703
  - -0.11229801177978516
  - -0.10462284088134766
  - -0.10354280471801758
  - -0.19045516848564148
  - -0.10527753829956055
  - -0.10489749908447266
  - -0.0662798210978508
- - -0.10481500625610352
  - -0.10429143905639648
  - -0.10695624351501465
  - -0.10434627532958984
  - -0.12107610702514648
  - -0.10259485244750977
  - -0.10465812683105469
  - -0.10281229019165039
  - -0.10431146621704102
  - -0.1049652099609375
  - -0.10500907897949219
  - -0.0947980135679245
  - -0.11300921440124512
  - -0.10552406311035156
  - -0.10128927230834961
  - -0.10536003112792969
  - -0.10173273086547852
  - -0.10600423812866211
  - -0.10587120056152344
  - -0.10587596893310547
  - -0.10568656027317047
  - -3.4640512466430664
  - -0.10104107856750488
  - -0.1216135025024414
  - -0.11890554428100586
  - -0.10394525527954102
  - -0.10237360000610352
  - -0.10432052612304688
  - -0.2022762894630432
  - -0.11214137077331543
  - -0.10536623001098633
  - -0.15402555465698242
  - -0.10406017303466797
  - -0.10261344909667969
  - -0.10512399673461914
  - -0.10744810104370117
  - -0.1111154556274414
  - -0.18457439541816711
  - -0.10977649688720703
  - -0.10620474815368652
  - -0.10712337493896484
  - -0.10261058807373047
  - -0.10715961456298828
  - -0.10503745079040527
  - -0.09752559661865234
  - -0.1049656867980957
  - -0.1123051643371582
  - -0.10463380813598633
  - -0.10357475280761719
  - -0.18842019140720367
  - -0.10529184341430664
  - -0.10480308532714844
  - -0.06695779412984848
- - -0.10481500625610352
  - -0.10429143905639648
  - -0.10695624351501465
  - -0.10434627532958984
  - -0.12107610702514648
  - -0.10259485244750977
  - -0.10465812683105469
  - -0.10281229019165039
  - -0.10431146621704102
  - -0.1049652099609375
  - -0.10500907897949219
  - -0.0947980135679245
  - -0.11300921440124512
  - -0.10552406311035156
  - -0.10128927230834961
  - -0.10536003112792969
  - -0.10173273086547852
  - -0.10600423812866211
  - -0.10587120056152344
  - -0.10587596893310547
  - -0.10568656027317047
  - -0.11210441589355469
  - -0.10474252700805664
  - -0.11943769454956055
  - -0.12038135528564453
  - -0.10375404357910156
  - -0.10249853134155273
  - -0.10426902770996094
  - -0.2028227150440216
  - -3.453427791595459
  - -0.10483884811401367
  - -0.16694307327270508
  - -0.10229635238647461
  - -0.10274124145507812
  - -0.10504961013793945
  - -0.10804557800292969
  - -0.11121225357055664
  - -0.18066778779029846
  - -0.10984539985656738
  - -0.10620832443237305
  - -0.10722064971923828
  - -0.10263729095458984
  - -0.10716056823730469
  - -0.10503554344177246
  - -0.09738683700561523
  - -0.1048421859741211
  - -0.11219930648803711
  - -0.10463094711303711
  - -0.10355758666992188
  - -0.19389721751213074
  - -0.10526227951049805
  - -0.10496664047241211
  - -0.06569059193134308
- - -0.10481500625610352
  - -0.10429143905639648
  - -0.10695624351501465
  - -0.10434627532958984
  - -0.12107610702514648
  - -0.10259485244750977
  - -0.10465812683105469
  - -0.10281229019165039
  - -0.10431146621704102
  - -0.1049652099609375
  - -0.10500907897949219
  - -0.0947980135679245
  - -0.11300921440124512
  - -0.10552406311035156
  - -0.10128927230834961
  - -0.10536003112792969
  - -0.10173273086547852
  - -0.10600423812866211
  - -0.10587120056152344
  - -0.10587596893310547
  - -0.10568656027317047
  - -0.11210441589355469
  - -0.10474252700805664
  - -0.11943769454956055
  - -0.12038135528564453
  - -0.10375404357910156
  - -0.10249853134155273
  - -0.10426902770996094
  - -0.2028227150440216
  - -0.11194133758544922
  - -0.10538482666015625
  - -0.15057706832885742
  - -0.10321235656738281
  - -0.10260963439941406
  - -0.10509109497070312
  - -0.10753631591796875
  - -0.11117744445800781
  - -0.18405072391033173
  - -3.4869396686553955
  - -0.10619950294494629
  - -0.10560941696166992
  - -0.10246467590332031
  - -0.10726547241210938
  - -0.10508108139038086
  - -0.09752082824707031
  - -0.10467386245727539
  - -0.11217164993286133
  - -0.10460615158081055
  - -0.10351753234863281
  - -0.1944219470024109
  - -0.1052699089050293
  - -0.10490942001342773
  - -0.06569929420948029
- - -0.10481500625610352
  - -0.10429143905639648
  - -0.10695624351501465
  - -0.10434627532958984
  - -0.12107610702514648
  - -0.10259485244750977
  - -0.10465812683105469
  - -0.10281229019165039
  - -0.10431146621704102
  - -0.1049652099609375
  - -0.10500907897949219
  - -0.0947980135679245
  - -0.11300921440124512
  - -0.10552406311035156
  - -0.10128927230834961
  - -0.10536003112792969
  - -0.10173273086547852
  - -0.10600423812866211
  - -0.10587120056152344
  - -0.10587596893310547
  - -0.10568656027317047
  - -0.11210441589355469
  - -0.10474252700805664
  - -0.11943769454956055
  - -0.12038135528564453
  - -0.10375404357910156
  - -0.10249853134155273
  - -0.10426902770996094
  - -0.2028227150440216
  - -0.11194133758544922
  - -0.10538482666015625
  - -0.15057706832885742
  - -0.10321235656738281
  - -0.10260963439941406
  - -0.10509109497070312
  - -0.10753631591796875
  - -0.11117744445800781
  - -0.18405072391033173
  - -0.10977411270141602
  - -0.10621094703674316
  - -0.1070704460144043
  - -0.10256052017211914
  - -3.551938056945801
  - -0.10492849349975586
  - -0.10124015808105469
  - -0.10532569885253906
  - -0.11217069625854492
  - -0.10467958450317383
  - -0.10349464416503906
  - -0.19470642507076263
  - -0.10526180267333984
  - -0.10495948791503906
  - -0.06590556353330612
- - -0.10481500625610352
  - -0.10429143905639648
  - -0.10695624351501465
  - -0.10434627532958984
  - -0.12107610702514648
  - -0.10259485244750977
  - -0.10465812683105469
  - -0.10281229019165039
  - -0.10431146621704102
  - -0.1049652099609375
  - -0.10500907897949219
  - -0.0947980135679245
  - -0.11300921440124512
  - -0.10552406311035156
  - -0.10128927230834961
  - -0.10536003112792969
  - -0.10173273086547852
  - -0.10600423812866211
  - -0.10587120056152344
  - -0.10587596893310547
  - -0.10568656027317047
  - -0.11210441589355469
  - -0.10474252700805664
  - -0.11943769454956055
  - -0.12038135528564453
  - -0.10375404357910156
  - -0.10249853134155273
  - -0.10426902770996094
  - -0.2028227150440216
  - -0.11194133758544922
  - -0.10538482666015625
  - -0.15057706832885742
  - -0.10321235656738281
  - -0.10260963439941406
  - -0.10509109497070312
  - -0.10753631591796875
  - -0.11117744445800781
  - -0.18405072391033173
  - -0.10977411270141602
  - -0.10621094703674316
  - -0.1070704460144043
  - -0.10256052017211914
  - -0.10715866088867188
  - -0.10503649711608887
  - -0.0973973274230957
  - -0.10479593276977539
  - -0.11222600936889648
  - -0.10463333129882812
  - -0.10355377197265625
  - -3.9092109203338623
  - -0.10595417022705078
  - -0.10404062271118164
  - -0.3290558457374573
- - -0.10481500625610352
  - -0.10429143905639648
  - -0.10695624351501465
  - -0.10434627532958984
  - -0.12107610702514648
  - -0.10259485244750977
  - -0.10465812683105469
  - -0.10281229019165039
  - -0.10431146621704102
  - -0.1049652099609375
  - -0.10500907897949219
  - -0.0947980135679245
  - -0.11300921440124512
  - -0.10552406311035156
  - -0.10128927230834961
  - -0.10536003112792969
  - -0.10173273086547852
  - -0.10600423812866211
  - -0.10587120056152344
  - -0.10587596893310547
  - -0.10568656027317047
  - -0.11210441589355469
  - -0.10474252700805664
  - -0.11943769454956055
  - -0.12038135528564453
  - -0.10375404357910156
  - -0.10249853134155273
  - -0.10426902770996094
  - -0.2028227150440216
  - -0.11194133758544922
  - -0.10538482666015625
  - -0.15057706832885742
  - -0.10321235656738281
  - -0.10260963439941406
  - -0.10509109497070312
  - -0.10753631591796875
  - -0.11117744445800781
  - -0.18405072391033173
  - -0.10977411270141602
  - -0.10621094703674316
  - -0.1070704460144043
  - -0.10256052017211914
  - -0.10715866088867188
  - -0.10503649711608887
  - -0.0973973274230957
  - -0.10479593276977539
  - -0.11222600936889648
  - -0.10463333129882812
  - -0.10355377197265625
  - -3.9842913150787354
  - -0.10546255111694336
  - -0.10383462905883789
  - -0.4870479702949524
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'True'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'True'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Dogs'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'cell_number'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatment_Types'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
