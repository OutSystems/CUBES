db: tests-examples/db2csv/dog_kennels/tables/dog_kennels.sqlite
inputs:
 - tests-examples/db2csv/dog_kennels/tables/professionals.csv
 - tests-examples/db2csv/dog_kennels/tables/treatments.csv
output: tests-examples/db2csv/dog_kennels/tables/0015_dev.csv
raw_question: Which professionals have done at least two treatments? List the professional's id, role, and first name. 
question_index: 932 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - 2
join_columns:
 - professional_id
groupby_columns:
 - professional_id
orderby_columns: []
functions:
 - count
columns: []
filters:
 - '>='
ieu: []
comment: |-
  SELECT T1.professional_id,
         T1.role_code,
         T1.first_name
  FROM Professionals AS T1
  JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id
  GROUP BY T1.professional_id
  HAVING count(*) >= 2

sql: |-
  SELECT T1.professional_id,
         T1.role_code,
         T1.first_name
  FROM Professionals AS T1
  JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id
  GROUP BY T1.professional_id
  HAVING count(*) >= 2
smbop_beam_join_columns:
- - professional_id
- - professional_id
- - professional_id
- - professional_id
smbop_beam_groupby_columns:
- - professional_id
- - professional_id
- - professional_id
- - professional_id
smbop_beam_orderby_columns:
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/dog_kennels/tables/treatments.csv
  - tests-examples/db2csv/dog_kennels/tables/professionals.csv
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
- - tests-examples/db2csv/dog_kennels/tables/treatments.csv
  - tests-examples/db2csv/dog_kennels/tables/professionals.csv
- - tests-examples/db2csv/dog_kennels/tables/treatments.csv
  - tests-examples/db2csv/dog_kennels/tables/professionals.csv
smbop_beam_constants:
- - 2
- - 2
- - 2
- - 2
smbop_beam_functions:
- - count
- - count
- - count
- - count
smbop_beam_columns:
- []
- []
- - first_name
- []
smbop_beam_ieu:
- []
- []
- []
- []
smbop_beam_filters:
- - '>='
- - '>='
- - '>='
- - '>'
smbop_beam_inferred_code:
  - SELECT professionals.professional_id , professionals.role_code , professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id GROUP BY professionals.professional_id HAVING COUNT( * ) >= 2
  - SELECT professionals.professional_id , professionals.role_code , professionals.first_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING COUNT( * ) >= 2
  - SELECT professionals.professional_id , professionals.role_code , COUNT( DISTINCT professionals.first_name ) FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id GROUP BY professionals.professional_id HAVING COUNT( * ) >= 2
  - SELECT professionals.professional_id , professionals.role_code , professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id GROUP BY professionals.professional_id HAVING COUNT( * ) > 2
smbop_beam_inferred_code_w_terminals:
  - SELECT professionals.professional_id , professionals.role_code , professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id GROUP BY professionals.professional_id HAVING COUNT( * ) >= 2
  - SELECT professionals.professional_id , professionals.role_code , professionals.first_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING COUNT( * ) >= 2
  - SELECT professionals.professional_id , professionals.role_code , COUNT( DISTINCT professionals.first_name ) FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id GROUP BY professionals.professional_id HAVING COUNT( * ) >= 2
  - SELECT professionals.professional_id , professionals.role_code , professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id GROUP BY professionals.professional_id HAVING COUNT( * ) > 2
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
ratsql_beam_join_columns:
- - professional_id
- - professional_id
- - professional_id
- - professional_id
- - professional_id
ratsql_beam_groupby_columns:
- - professional_id
- - professional_id
- - professional_id
- - professional_id
- - professional_id
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
- - tests-examples/db2csv/dog_kennels/tables/professionals.csv
  - tests-examples/db2csv/dog_kennels/tables/treatments.csv
ratsql_beam_constants:
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
  - '1'
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- []
- []
- []
- []
- []
ratsql_beam_ieu:
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '>='
- - '>='
- - '>='
- - '>='
- - '>='
ratsql_beam_inferred_code:
  - SELECT Treatments.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
  - SELECT Professionals.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
  - SELECT Treatments.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) >= 'terminal'
  - SELECT DISTINCT Treatments.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
  - SELECT Treatments.professional_id, Professionals.role_code, DISTINCT Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
  - SELECT Treatments.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY DISTINCT Treatments.professional_id HAVING Count(*) >= 'terminal'
  - SELECT Treatments.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(DISTINCT *) >= 'terminal'
  - SELECT Treatments.professional_id, DISTINCT Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
  - SELECT Treatments.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal' LIMIT 1
ratsql_beam_inferred_code_w_terminals:
  - SELECT Treatments.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 2
  - SELECT Professionals.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 2
  - SELECT Treatments.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) >= 2
  - SELECT DISTINCT Treatments.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 2
  - SELECT Treatments.professional_id, Professionals.role_code, DISTINCT Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 2
  - SELECT Treatments.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY DISTINCT Treatments.professional_id HAVING Count(*) >= 2
  - SELECT Treatments.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(DISTINCT *) >= 2
  - SELECT Treatments.professional_id, DISTINCT Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 2
  - SELECT Treatments.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Treatments.professional_id HAVING Count(*) >= 2 LIMIT 1
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - True
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.1048727035522461
  - -0.10473251342773438
  - -0.10573387145996094
  - -0.10406327247619629
  - -0.08859634399414062
  - -0.10149049758911133
  - -0.10531330108642578
  - -0.10191106796264648
  - -0.10416603088378906
  - -0.10449790954589844
  - -0.1047663688659668
  - -0.18135623633861542
  - -0.11384272575378418
  - -0.10524654388427734
  - -0.10235595703125
  - -0.10370063781738281
  - -0.10150480270385742
  - -0.10547065734863281
  - -0.1079859733581543
  - -0.10470104217529297
  - -0.1577346920967102
  - -0.1100616455078125
  - -0.10569190979003906
  - -0.10940408706665039
  - -0.10522985458374023
  - -0.10137128829956055
  - -0.10606908798217773
  - -0.1063990592956543
  - -0.1046900749206543
  - -0.1398274302482605
  - -0.11198163032531738
  - -0.10538649559020996
  - -0.12017536163330078
  - -0.12109375
  - -0.10223817825317383
  - -0.10328865051269531
  - -0.10482454299926758
  - -0.25584346055984497
  - -0.11238479614257812
  - -0.10533380508422852
  - -0.07656383514404297
  - -0.10345840454101562
  - -0.10302543640136719
  - -0.10498857498168945
  - -0.10828876495361328
  - -0.11121606826782227
  - -0.1577569991350174
  - -0.11103439331054688
  - -0.10614132881164551
  - -0.10630989074707031
  - -0.10373449325561523
  - -0.10726475715637207
  - -0.10502052307128906
  - -0.09253072738647461
  - -0.1042623519897461
  - -0.11453390121459961
  - -0.1049957275390625
  - -0.10357332229614258
  - -0.16008129715919495
  - -0.10458612442016602
  - -0.10369443893432617
  - -0.07343632727861404
- - -0.1048727035522461
  - -0.10473251342773438
  - -0.10573387145996094
  - -0.10406327247619629
  - -0.08859634399414062
  - -0.10149049758911133
  - -0.10531330108642578
  - -0.10191106796264648
  - -0.10416603088378906
  - -0.10449790954589844
  - -0.1047663688659668
  - -2.2688040733337402
  - -0.1128225326538086
  - -0.10503864288330078
  - -0.10274744033813477
  - -0.10363912582397461
  - -0.10148286819458008
  - -0.10549688339233398
  - -0.10893630981445312
  - -0.10496044158935547
  - -0.125028595328331
  - -0.1101377010345459
  - -0.10573577880859375
  - -0.10972929000854492
  - -0.10474061965942383
  - -0.10137033462524414
  - -0.10598611831665039
  - -0.10640764236450195
  - -0.10465335845947266
  - -0.1314670294523239
  - -0.11204123497009277
  - -0.10537528991699219
  - -0.12021446228027344
  - -0.12146329879760742
  - -0.10221481323242188
  - -0.10328435897827148
  - -0.1048135757446289
  - -0.2557034194469452
  - -0.11237597465515137
  - -0.10533356666564941
  - -0.07674360275268555
  - -0.10341835021972656
  - -0.1030268669128418
  - -0.10498857498168945
  - -0.10829353332519531
  - -0.1112203598022461
  - -0.15783223509788513
  - -0.1110386848449707
  - -0.10614228248596191
  - -0.10630464553833008
  - -0.10372686386108398
  - -0.10726547241210938
  - -0.10502123832702637
  - -0.09251594543457031
  - -0.10423612594604492
  - -0.11450004577636719
  - -0.1049952507019043
  - -0.10356855392456055
  - -0.1591908037662506
  - -0.10458087921142578
  - -0.10371255874633789
  - -0.0735078826546669
- - -0.1048727035522461
  - -0.10473251342773438
  - -0.10573387145996094
  - -0.10406327247619629
  - -0.08859634399414062
  - -0.10149049758911133
  - -0.10531330108642578
  - -0.10191106796264648
  - -0.10416603088378906
  - -0.10449790954589844
  - -0.1047663688659668
  - -0.18135623633861542
  - -0.11384272575378418
  - -0.10524654388427734
  - -0.10235595703125
  - -0.10370063781738281
  - -0.10150480270385742
  - -0.10547065734863281
  - -0.1079859733581543
  - -0.10470104217529297
  - -0.1577346920967102
  - -0.1100616455078125
  - -0.10569190979003906
  - -0.10940408706665039
  - -0.10522985458374023
  - -0.10137128829956055
  - -0.10606908798217773
  - -0.1063990592956543
  - -0.1046900749206543
  - -0.1398274302482605
  - -0.11198163032531738
  - -0.10538649559020996
  - -0.12017536163330078
  - -0.12109375
  - -0.10223817825317383
  - -0.10328865051269531
  - -0.10482454299926758
  - -2.3500094413757324
  - -0.11150598526000977
  - -0.10569643974304199
  - -0.07695388793945312
  - -0.09994649887084961
  - -0.10298871994018555
  - -0.1050267219543457
  - -0.10819673538208008
  - -0.11075639724731445
  - -0.15023165941238403
  - -0.11081409454345703
  - -0.10613894462585449
  - -0.10643959045410156
  - -0.1037297248840332
  - -0.10726761817932129
  - -0.1050119400024414
  - -0.0928802490234375
  - -0.10433387756347656
  - -0.11452198028564453
  - -0.10500192642211914
  - -0.10359001159667969
  - -0.1602940708398819
  - -0.10457086563110352
  - -0.10368490219116211
  - -0.07332377880811691
- - -0.1048727035522461
  - -0.10473251342773438
  - -0.10573387145996094
  - -0.10406327247619629
  - -0.08859634399414062
  - -0.10149049758911133
  - -0.10531330108642578
  - -0.10191106796264648
  - -0.10416603088378906
  - -0.10449790954589844
  - -0.1047663688659668
  - -0.18135623633861542
  - -3.441387891769409
  - -0.1055305004119873
  - -0.10249519348144531
  - -0.1067800521850586
  - -0.1013336181640625
  - -0.10596036911010742
  - -0.10735797882080078
  - -0.10487508773803711
  - -0.1434502899646759
  - -0.1101827621459961
  - -0.10571146011352539
  - -0.11159563064575195
  - -0.10591840744018555
  - -0.10140275955200195
  - -0.10584640502929688
  - -0.1065068244934082
  - -0.1046299934387207
  - -0.12307040393352509
  - -0.1121518611907959
  - -0.10534262657165527
  - -0.12009525299072266
  - -0.12302827835083008
  - -0.10217905044555664
  - -0.10332632064819336
  - -0.1046748161315918
  - -0.2543080747127533
  - -0.11236262321472168
  - -0.10532832145690918
  - -0.07778739929199219
  - -0.10309314727783203
  - -0.10303306579589844
  - -0.10498714447021484
  - -0.1083230972290039
  - -0.11121606826782227
  - -0.15800528228282928
  - -0.11104607582092285
  - -0.10614609718322754
  - -0.10629510879516602
  - -0.10370492935180664
  - -0.1072685718536377
  - -0.10502409934997559
  - -0.09247255325317383
  - -0.10425376892089844
  - -0.11452817916870117
  - -0.10499715805053711
  - -0.10357141494750977
  - -0.1600775420665741
  - -0.10458660125732422
  - -0.10369539260864258
  - -0.0734507218003273
- - -0.1048727035522461
  - -0.10473251342773438
  - -0.10573387145996094
  - -0.10406327247619629
  - -0.08859634399414062
  - -0.10149049758911133
  - -0.10531330108642578
  - -0.10191106796264648
  - -0.10416603088378906
  - -0.10449790954589844
  - -0.1047663688659668
  - -0.18135623633861542
  - -0.11384272575378418
  - -0.10524654388427734
  - -0.10235595703125
  - -0.10370063781738281
  - -0.10150480270385742
  - -0.10547065734863281
  - -0.1079859733581543
  - -0.10470104217529297
  - -0.1577346920967102
  - -0.1100616455078125
  - -0.10569190979003906
  - -0.10940408706665039
  - -0.10522985458374023
  - -0.10137128829956055
  - -0.10606908798217773
  - -0.1063990592956543
  - -0.1046900749206543
  - -0.1398274302482605
  - -3.4666390419006348
  - -0.10304665565490723
  - -0.11721134185791016
  - -0.12212181091308594
  - -0.1021108627319336
  - -0.10345315933227539
  - -0.10480165481567383
  - -0.25547343492507935
  - -0.11250948905944824
  - -0.10531258583068848
  - -0.07416725158691406
  - -0.10270261764526367
  - -0.10299921035766602
  - -0.10498428344726562
  - -0.10823535919189453
  - -0.1111760139465332
  - -0.15809251368045807
  - -0.1110537052154541
  - -0.10614323616027832
  - -0.1063680648803711
  - -0.10377120971679688
  - -0.10726547241210938
  - -0.10502386093139648
  - -0.0925288200378418
  - -0.10429859161376953
  - -0.11457061767578125
  - -0.1049966812133789
  - -0.10357666015625
  - -0.16121657192707062
  - -0.10459327697753906
  - -0.10367393493652344
  - -0.07335645705461502
- - -0.1048727035522461
  - -0.10473251342773438
  - -0.10573387145996094
  - -0.10406327247619629
  - -0.08859634399414062
  - -0.10149049758911133
  - -0.10531330108642578
  - -0.10191106796264648
  - -0.10416603088378906
  - -0.10449790954589844
  - -0.1047663688659668
  - -0.18135623633861542
  - -0.11384272575378418
  - -0.10524654388427734
  - -0.10235595703125
  - -0.10370063781738281
  - -0.10150480270385742
  - -0.10547065734863281
  - -0.1079859733581543
  - -0.10470104217529297
  - -0.1577346920967102
  - -0.1100616455078125
  - -0.10569190979003906
  - -0.10940408706665039
  - -0.10522985458374023
  - -0.10137128829956055
  - -0.10606908798217773
  - -0.1063990592956543
  - -0.1046900749206543
  - -0.1398274302482605
  - -0.11198163032531738
  - -0.10538649559020996
  - -0.12017536163330078
  - -0.12109375
  - -0.10223817825317383
  - -0.10328865051269531
  - -0.10482454299926758
  - -0.25584346055984497
  - -3.4511709213256836
  - -0.10407352447509766
  - -0.08842182159423828
  - -0.10467004776000977
  - -0.10296249389648438
  - -0.10501289367675781
  - -0.10814809799194336
  - -0.11118793487548828
  - -0.15739284455776215
  - -0.11108946800231934
  - -0.10613608360290527
  - -0.10633230209350586
  - -0.10376119613647461
  - -0.10727548599243164
  - -0.10503220558166504
  - -0.09245538711547852
  - -0.10427618026733398
  - -0.11452817916870117
  - -0.10499763488769531
  - -0.10357141494750977
  - -0.16002319753170013
  - -0.10458230972290039
  - -0.10369634628295898
  - -0.07343555241823196
- - -0.1048727035522461
  - -0.10473251342773438
  - -0.10573387145996094
  - -0.10406327247619629
  - -0.08859634399414062
  - -0.10149049758911133
  - -0.10531330108642578
  - -0.10191106796264648
  - -0.10416603088378906
  - -0.10449790954589844
  - -0.1047663688659668
  - -0.18135623633861542
  - -0.11384272575378418
  - -0.10524654388427734
  - -0.10235595703125
  - -0.10370063781738281
  - -0.10150480270385742
  - -0.10547065734863281
  - -0.1079859733581543
  - -0.10470104217529297
  - -0.1577346920967102
  - -0.1100616455078125
  - -0.10569190979003906
  - -0.10940408706665039
  - -0.10522985458374023
  - -0.10137128829956055
  - -0.10606908798217773
  - -0.1063990592956543
  - -0.1046900749206543
  - -0.1398274302482605
  - -0.11198163032531738
  - -0.10538649559020996
  - -0.12017536163330078
  - -0.12109375
  - -0.10223817825317383
  - -0.10328865051269531
  - -0.10482454299926758
  - -0.25584346055984497
  - -0.11238479614257812
  - -0.10533380508422852
  - -0.07656383514404297
  - -0.10345840454101562
  - -0.10302543640136719
  - -0.10498857498168945
  - -0.10828876495361328
  - -0.11121606826782227
  - -0.1577569991350174
  - -3.4714932441711426
  - -0.10613632202148438
  - -0.10473918914794922
  - -0.1001133918762207
  - -0.10737419128417969
  - -0.10497832298278809
  - -0.0919637680053711
  - -0.10396194458007812
  - -0.11453723907470703
  - -0.10496711730957031
  - -0.10349559783935547
  - -0.15997149050235748
  - -0.1045999526977539
  - -0.10370397567749023
  - -0.07372993230819702
- - -0.1048727035522461
  - -0.10473251342773438
  - -0.10573387145996094
  - -0.10406327247619629
  - -0.08859634399414062
  - -0.10149049758911133
  - -0.10531330108642578
  - -0.10191106796264648
  - -0.10416603088378906
  - -0.10449790954589844
  - -0.1047663688659668
  - -0.18135623633861542
  - -0.11384272575378418
  - -0.10524654388427734
  - -0.10235595703125
  - -0.10370063781738281
  - -0.10150480270385742
  - -0.10547065734863281
  - -0.1079859733581543
  - -0.10470104217529297
  - -0.1577346920967102
  - -3.4870803356170654
  - -0.10441899299621582
  - -0.10408878326416016
  - -0.10610103607177734
  - -0.10142374038696289
  - -0.10592889785766602
  - -0.10628652572631836
  - -0.10469532012939453
  - -0.15515486896038055
  - -0.11189508438110352
  - -0.10545635223388672
  - -0.1206812858581543
  - -0.11984109878540039
  - -0.10230779647827148
  - -0.10326910018920898
  - -0.10480451583862305
  - -0.2545531094074249
  - -0.11237072944641113
  - -0.10532665252685547
  - -0.0768880844116211
  - -0.10341453552246094
  - -0.10303211212158203
  - -0.10499334335327148
  - -0.10825920104980469
  - -0.11119699478149414
  - -0.15771280229091644
  - -0.11103057861328125
  - -0.10613703727722168
  - -0.10634565353393555
  - -0.10375785827636719
  - -0.10726475715637207
  - -0.10502052307128906
  - -0.09254312515258789
  - -0.1042928695678711
  - -0.11456441879272461
  - -0.10499382019042969
  - -0.1035757064819336
  - -0.16092005372047424
  - -0.1045989990234375
  - -0.10367965698242188
  - -0.07340331375598907
- - -0.1048727035522461
  - -0.10473251342773438
  - -0.10573387145996094
  - -0.10406327247619629
  - -0.08859634399414062
  - -0.10149049758911133
  - -0.10531330108642578
  - -0.10191106796264648
  - -0.10416603088378906
  - -0.10449790954589844
  - -0.1047663688659668
  - -0.18135623633861542
  - -0.11384272575378418
  - -0.10524654388427734
  - -0.10235595703125
  - -0.10370063781738281
  - -0.10150480270385742
  - -0.10547065734863281
  - -0.1079859733581543
  - -0.10470104217529297
  - -0.1577346920967102
  - -0.1100616455078125
  - -0.10569190979003906
  - -0.10940408706665039
  - -0.10522985458374023
  - -0.10137128829956055
  - -0.10606908798217773
  - -0.1063990592956543
  - -0.1046900749206543
  - -0.1398274302482605
  - -0.11198163032531738
  - -0.10538649559020996
  - -0.12017536163330078
  - -0.12109375
  - -0.10223817825317383
  - -0.10328865051269531
  - -0.10482454299926758
  - -0.25584346055984497
  - -0.11238479614257812
  - -0.10533380508422852
  - -0.07656383514404297
  - -0.10345840454101562
  - -0.10302543640136719
  - -0.10498857498168945
  - -0.10828876495361328
  - -0.11121606826782227
  - -0.1577569991350174
  - -0.11103439331054688
  - -0.10614132881164551
  - -0.10630989074707031
  - -0.10373449325561523
  - -3.5513386726379395
  - -0.10523843765258789
  - -0.09360122680664062
  - -0.10470914840698242
  - -0.11420583724975586
  - -0.10493803024291992
  - -0.10352849960327148
  - -0.15799154341220856
  - -0.1045846939086914
  - -0.10371160507202148
  - -0.07324212789535522
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'role_code'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'first_name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'role_code'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'first_name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'role_code'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'first_name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'True'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'role_code'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'first_name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'role_code'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'first_name'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'role_code'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'first_name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'True'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'role_code'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'first_name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'role_code'
  - 'True'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'first_name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'role_code'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'first_name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'professional_id'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Professionals'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Treatments'
