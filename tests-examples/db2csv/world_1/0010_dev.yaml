db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/city.csv
 - tests-examples/db2csv/world_1/tables/country.csv
output: tests-examples/db2csv/world_1/tables/0010_dev.csv
raw_question: What region is Kabul in? 
question_index: 711 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - Kabul
join_columns:
 - countrycode
 - code
groupby_columns: []
functions: []
columns:
 - name
filters:
 - '='
ieu: []
comment: |-
  SELECT Region
  FROM country AS T1
  JOIN city AS T2 ON T1.Code = T2.CountryCode
  WHERE T2.Name = "Kabul"

sql: |-
  SELECT Region
  FROM country AS T1
  JOIN city AS T2 ON T1.Code = T2.CountryCode
  WHERE T2.Name = "Kabul"
smbop_beam_join_columns:
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
smbop_beam_groupby_columns:
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
smbop_beam_constants:
- - Kabul
- - Kabul
- - Kabul
smbop_beam_functions:
- []
- []
- []
smbop_beam_columns:
- - name
- - name
- - name
smbop_beam_ieu:
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT country.region FROM city JOIN country ON city.countrycode = country.code WHERE city.name = 'Kabul'
  - SELECT country.region FROM country JOIN city ON country.code = city.countrycode WHERE city.name = 'Kabul'
  - SELECT country.region FROM city JOIN country ON city.countrycode = country.code WHERE city.name = 'Kabul' ORDER BY country.region DESC
smbop_beam_inferred_code_w_terminals:
  - SELECT country.region FROM city JOIN country ON city.countrycode = country.code WHERE city.name = 'Kabul'
  - SELECT country.region FROM country JOIN city ON country.code = city.countrycode WHERE city.name = 'Kabul'
  - SELECT country.region FROM city JOIN country ON city.countrycode = country.code WHERE city.name = 'Kabul' ORDER BY country.region DESC
smbop_beam_has_limit:
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - True
smbop_beam_order_by_direction:
- []
- []
- []
ratsql_beam_join_columns:
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- []
- - countrycode
  - code
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
ratsql_beam_constants:
- - Kabul
- - Kabul
- - Kabul
- - Kabul
  - '1'
- - Kabul
- - Kabul
- - Kabul
- - Kabul
ratsql_beam_functions:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_columns:
- - name
- - name
- - name
- - name
- - code
- - name
- - countrycode
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'terminal'
  - SELECT DISTINCT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'terminal'
  - SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE DISTINCT city.Name = 'terminal'
  - SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'terminal' LIMIT 1
  - SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE city.Name = 'terminal'
  - SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Code = 'terminal'
  - SELECT city.ID FROM city WHERE city.Name = 'terminal'
  - SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.CountryCode = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'Kabul'
  - SELECT DISTINCT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'Kabul'
  - SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE DISTINCT city.Name = 'Kabul'
  - SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'Kabul' LIMIT 1
  - SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE city.Name = 'Kabul'
  - SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Code = 'Kabul'
  - SELECT city.ID FROM city WHERE city.Name = 'Kabul'
  - SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.CountryCode = 'Kabul'
ratsql_beam_has_limit:
  - False
  - False
  - True
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10641860961914062
  - -0.10439300537109375
  - -0.11708760261535645
  - -0.10415291786193848
  - -0.10125732421875
  - -0.10212993621826172
  - -0.10477685928344727
  - -0.10157251358032227
  - -0.10491800308227539
  - -0.10494804382324219
  - -0.10452842712402344
  - -0.07605766505002975
  - -0.11147689819335938
  - -0.10511946678161621
  - -0.09378337860107422
  - -0.1031041145324707
  - -0.10169792175292969
  - -0.10109281539916992
  - -0.10476875305175781
  - -0.10473775863647461
  - -0.1063394546508789
  - -0.0886039137840271
  - -0.11191630363464355
  - -0.10556483268737793
  - -0.10484600067138672
  - -0.1009831428527832
  - -0.10265684127807617
  - -0.10701155662536621
  - -0.10489559173583984
  - -0.0988779067993164
  - -0.10309839248657227
  - -0.11730098724365234
  - -0.10514497756958008
  - -0.10498046875
  - -0.14806896448135376
  - -0.10444259643554688
  - -0.10473251342773438
  - -0.047257162630558014
- - -0.10641860961914062
  - -0.10439300537109375
  - -3.257361650466919
  - -0.10399556159973145
  - -0.1004481315612793
  - -0.10247230529785156
  - -0.10437774658203125
  - -0.10164928436279297
  - -0.1049504280090332
  - -0.1048116683959961
  - -0.10440826416015625
  - -0.07294727116823196
  - -0.11150431632995605
  - -0.10514640808105469
  - -0.09393739700317383
  - -0.10344791412353516
  - -0.10177803039550781
  - -0.10110759735107422
  - -0.10480785369873047
  - -0.10475635528564453
  - -0.10634183883666992
  - -0.08907686918973923
  - -0.1119232177734375
  - -0.10557174682617188
  - -0.10484552383422852
  - -0.1009817123413086
  - -0.10265398025512695
  - -0.10700774192810059
  - -0.10489559173583984
  - -0.09888172149658203
  - -0.10309696197509766
  - -0.11734247207641602
  - -0.10514545440673828
  - -0.10497522354125977
  - -0.14804378151893616
  - -0.10444211959838867
  - -0.10473108291625977
  - -0.047260913997888565
- - -0.10641860961914062
  - -0.10439300537109375
  - -0.11708760261535645
  - -0.10415291786193848
  - -0.10125732421875
  - -0.10212993621826172
  - -0.10477685928344727
  - -0.10157251358032227
  - -0.10491800308227539
  - -0.10494804382324219
  - -0.10452842712402344
  - -0.07605766505002975
  - -0.11147689819335938
  - -0.10511946678161621
  - -0.09378337860107422
  - -0.1031041145324707
  - -0.10169792175292969
  - -0.10109281539916992
  - -0.10476875305175781
  - -0.10473775863647461
  - -0.1063394546508789
  - -0.0886039137840271
  - -3.4364020824432373
  - -0.10619378089904785
  - -0.10477447509765625
  - -0.10100126266479492
  - -0.1025686264038086
  - -0.10696744918823242
  - -0.10489034652709961
  - -0.09884786605834961
  - -0.10295295715332031
  - -0.11812686920166016
  - -0.10512781143188477
  - -0.10483551025390625
  - -0.1500806361436844
  - -0.10447216033935547
  - -0.10465717315673828
  - -0.04698275029659271
- - -0.10641860961914062
  - -0.10439300537109375
  - -0.11708760261535645
  - -0.10415291786193848
  - -0.10125732421875
  - -0.10212993621826172
  - -0.10477685928344727
  - -0.10157251358032227
  - -0.10491800308227539
  - -0.10494804382324219
  - -0.10452842712402344
  - -0.07605766505002975
  - -0.11147689819335938
  - -0.10511946678161621
  - -0.09378337860107422
  - -0.1031041145324707
  - -0.10169792175292969
  - -0.10109281539916992
  - -0.10476875305175781
  - -0.10473775863647461
  - -0.1063394546508789
  - -0.0886039137840271
  - -0.11191630363464355
  - -0.10556483268737793
  - -0.10484600067138672
  - -0.1009831428527832
  - -0.10265684127807617
  - -3.558750867843628
  - -0.10500788688659668
  - -0.09863710403442383
  - -0.10318183898925781
  - -0.11931753158569336
  - -0.10511398315429688
  - -0.104766845703125
  - -0.1502474546432495
  - -0.10447931289672852
  - -0.10471200942993164
  - -0.046830784529447556
- - -0.10641860961914062
  - -0.10439300537109375
  - -0.11708760261535645
  - -0.10415291786193848
  - -0.10125732421875
  - -0.10212993621826172
  - -0.10477685928344727
  - -0.10157251358032227
  - -0.10491800308227539
  - -0.10494804382324219
  - -0.10452842712402344
  - -0.07605766505002975
  - -0.11147689819335938
  - -0.10511946678161621
  - -0.09378337860107422
  - -0.1031041145324707
  - -0.10169792175292969
  - -0.10109281539916992
  - -0.10476875305175781
  - -0.10473775863647461
  - -0.1063394546508789
  - -0.0886039137840271
  - -0.11191630363464355
  - -0.10556483268737793
  - -0.10484600067138672
  - -0.1009831428527832
  - -0.10265684127807617
  - -0.10701155662536621
  - -0.10489559173583984
  - -0.0988779067993164
  - -0.10309839248657227
  - -0.11730098724365234
  - -0.10514497756958008
  - -0.10498046875
  - -3.331916570663452
  - -0.10470867156982422
  - -0.10484170913696289
  - -0.7698171734809875
- - -0.10641860961914062
  - -0.10439300537109375
  - -0.11708760261535645
  - -0.10415291786193848
  - -0.10125732421875
  - -0.10212993621826172
  - -0.10477685928344727
  - -0.10157251358032227
  - -0.10491800308227539
  - -0.10494804382324219
  - -0.10452842712402344
  - -0.07605766505002975
  - -0.11147689819335938
  - -0.10511946678161621
  - -0.09378337860107422
  - -0.1031041145324707
  - -0.10169792175292969
  - -0.10109281539916992
  - -0.10476875305175781
  - -0.10473775863647461
  - -0.1063394546508789
  - -5.1494140625
  - -0.11416983604431152
  - -0.10516095161437988
  - -0.11940479278564453
  - -0.10135269165039062
  - -0.1021571159362793
  - -0.10696673393249512
  - -0.10478782653808594
  - -0.10059881210327148
  - -0.1031332015991211
  - -0.11699247360229492
  - -0.10521268844604492
  - -0.10542106628417969
  - -0.1440664678812027
  - -0.10436344146728516
  - -0.10485124588012695
  - -0.04781303182244301
- - -0.10641860961914062
  - -0.10439300537109375
  - -0.11708760261535645
  - -0.10415291786193848
  - -0.10125732421875
  - -0.10212993621826172
  - -0.10477685928344727
  - -0.10157251358032227
  - -0.10491800308227539
  - -0.10494804382324219
  - -0.10452842712402344
  - -5.615839958190918
  - -0.11251664161682129
  - -0.10543680191040039
  - -0.09334468841552734
  - -0.10306787490844727
  - -0.10114622116088867
  - -0.10117101669311523
  - -0.10476303100585938
  - -0.10485649108886719
  - -0.10578632354736328
  - -0.08012252300977707
  - -0.11171150207519531
  - -0.1055910587310791
  - -0.10481500625610352
  - -0.1010284423828125
  - -0.1025385856628418
  - -0.10731935501098633
  - -0.1048593521118164
  - -0.09982681274414062
  - -0.10219955444335938
  - -0.17077112197875977
  - -0.1056675910949707
  - -0.10362625122070312
  - -0.09429456293582916
- - -0.10641860961914062
  - -0.10439300537109375
  - -0.11708760261535645
  - -0.10415291786193848
  - -0.10125732421875
  - -0.10212993621826172
  - -0.10477685928344727
  - -0.10157251358032227
  - -0.10491800308227539
  - -0.10494804382324219
  - -0.10452842712402344
  - -0.07605766505002975
  - -0.11147689819335938
  - -0.10511946678161621
  - -0.09378337860107422
  - -0.1031041145324707
  - -0.10169792175292969
  - -0.10109281539916992
  - -0.10476875305175781
  - -0.10473775863647461
  - -0.1063394546508789
  - -5.636872291564941
  - -0.11370992660522461
  - -0.10540056228637695
  - -0.12546014785766602
  - -0.10125732421875
  - -0.10242223739624023
  - -0.10696744918823242
  - -0.10492753982543945
  - -0.0990142822265625
  - -0.10347986221313477
  - -0.11600160598754883
  - -0.10517024993896484
  - -0.1056966781616211
  - -0.14422571659088135
  - -0.1043553352355957
  - -0.10494184494018555
  - -0.04875492304563522
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'ID'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
