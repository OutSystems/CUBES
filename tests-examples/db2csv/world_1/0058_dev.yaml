db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/countrylanguage.csv
 - tests-examples/db2csv/world_1/tables/country.csv
output: tests-examples/db2csv/world_1/tables/0058_dev.csv
raw_question: What languages are only used by a single country with a republic government? 
question_index: 759 
constants:
 - 1
 - Republic
join_columns:
 - code
 - countrycode
groupby_columns:
 - language
functions:
 - count
columns:
 - governmentform
filters:
 - '='
comment: |-
  SELECT T2.Language
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T1.GovernmentForm = "Republic"
  GROUP BY T2.Language
  HAVING COUNT(*) = 1

sql: |-
  SELECT T2.Language
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T1.GovernmentForm = "Republic"
  GROUP BY T2.Language
  HAVING COUNT(*) = 1
smbop_beam_join_columns:
- - code
  - countrycode
- - code
  - countrycode
- []
- []
- []
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- []
- []
smbop_beam_groupby_columns:
- []
- - language
- - language
- - governmentform
- - language
- - language
- []
- []
- - language
- - 1
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
smbop_beam_constants:
- - 1
  - Republic
- - 1
  - Republic
- - 1
  - Republic
- - 1
  - Republic
- - 1
  - Republic
- - 1
  - Republic
- - 1
  - Republic
- - 1
  - Republic
- - 1
  - Republic
- - 1
  - Republic
smbop_beam_functions:
- []
- []
- - count
- - count
- - count
- []
- []
- []
- - count
- - count
smbop_beam_columns:
- - governmentform
- - governmentform
- - governmentform
- - governmentform
- - governmentform
- - governmentform
- - governmentform
- - governmentform
- - governmentform
- - governmentform
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.governmentform = 'republic'
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.governmentform = 'republic' GROUP BY countrylanguage.language
  - SELECT countrylanguage.language FROM countrylanguage, country WHERE country.governmentform = 'republic' GROUP BY countrylanguage.language HAVING COUNT( * ) = 1
  - SELECT countrylanguage.language FROM countrylanguage, country WHERE country.governmentform = 'republic' GROUP BY country.governmentform HAVING COUNT( * ) = 1
  - SELECT countrylanguage.language FROM countrylanguage, country WHERE country.governmentform = 'republic' GROUP BY countrylanguage.language HAVING COUNT( * ) >= country.code
  - SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.governmentform = 'republic' GROUP BY countrylanguage.language
  - SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.governmentform = 'republic'
  - SELECT DISTINCT 1 FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.governmentform = 'republic'
  - SELECT countrylanguage.language FROM countrylanguage, country WHERE country.governmentform = 'republic' GROUP BY countrylanguage.language HAVING COUNT( * ) >= 1
  - SELECT countrylanguage.language FROM countrylanguage, country WHERE country.governmentform = 'republic' GROUP BY 1 HAVING COUNT( * ) >= country.code
smbop_beam_inferred_code_w_terminals:
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.governmentform = 'republic'
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.governmentform = 'republic' GROUP BY countrylanguage.language
  - SELECT countrylanguage.language FROM countrylanguage, country WHERE country.governmentform = 'republic' GROUP BY countrylanguage.language HAVING COUNT( * ) = 1
  - SELECT countrylanguage.language FROM countrylanguage, country WHERE country.governmentform = 'republic' GROUP BY country.governmentform HAVING COUNT( * ) = 1
  - SELECT countrylanguage.language FROM countrylanguage, country WHERE country.governmentform = 'republic' GROUP BY countrylanguage.language HAVING COUNT( * ) >= country.code
  - SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.governmentform = 'republic' GROUP BY countrylanguage.language
  - SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.governmentform = 'republic'
  - SELECT DISTINCT 1 FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.governmentform = 'republic'
  - SELECT countrylanguage.language FROM countrylanguage, country WHERE country.governmentform = 'republic' GROUP BY countrylanguage.language HAVING COUNT( * ) >= 1
  - SELECT countrylanguage.language FROM countrylanguage, country WHERE country.governmentform = 'republic' GROUP BY 1 HAVING COUNT( * ) >= country.code
ratsql_beam_join_columns:
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- []
- []
- []
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
ratsql_beam_constants:
- - 1
  - Republic
- - 1
  - Republic
- - 1
  - Republic
- - 1
  - Republic
- - 1
  - Republic
- - 1
  - Republic
- - 1
  - Republic
- - 1
  - Republic
ratsql_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_columns:
- - governmentform
- - governmentform
- - governmentform
- - governmentform
- - governmentform
- - governmentform
- - governmentform
- - governmentform
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '!='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'terminal'
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm != 'terminal'
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT country.GovernmentForm = 'terminal'
  - SELECT DISTINCT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'terminal'
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'terminal' LIMIT 1
  - SELECT countrylanguage.Language FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'terminal'
  - SELECT country.HeadOfState FROM country WHERE country.GovernmentForm = 'terminal'
  - SELECT country.Code FROM country WHERE country.GovernmentForm = 'terminal'
  - SELECT country.Name FROM country WHERE country.GovernmentForm = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'Republic'
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm != 'Republic'
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT country.GovernmentForm = 'Republic'
  - SELECT DISTINCT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'Republic'
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'Republic' LIMIT 1
  - SELECT countrylanguage.Language FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'Republic'
  - SELECT country.HeadOfState FROM country WHERE country.GovernmentForm = 'Republic'
  - SELECT country.Code FROM country WHERE country.GovernmentForm = 'Republic'
  - SELECT country.Name FROM country WHERE country.GovernmentForm = 'Republic'
ratsql_beam_score_history:
- - -0.10615062713623047
  - -0.10478639602661133
  - -0.10762882232666016
  - -0.10417318344116211
  - -0.10272407531738281
  - -0.10216426849365234
  - -0.104949951171875
  - -0.10169744491577148
  - -0.10430622100830078
  - -0.10518312454223633
  - -0.10529804229736328
  - -0.10685782879590988
  - -0.11096453666687012
  - -0.10526704788208008
  - -0.08727073669433594
  - -0.2566804885864258
  - -0.10082864761352539
  - -0.1009364128112793
  - -0.1049046516418457
  - -0.10464906692504883
  - -0.10538339614868164
  - -0.09092442691326141
  - -0.11154866218566895
  - -0.10559797286987305
  - -0.10343742370605469
  - -0.10016870498657227
  - -0.10331392288208008
  - -0.1071009635925293
  - -0.10483098030090332
  - -0.1058053970336914
  - -0.10334110260009766
  - -0.11323928833007812
  - -0.1049795150756836
  - -0.10561752319335938
  - -0.15594463050365448
  - -0.10506296157836914
  - -0.10470724105834961
  - -0.11215954273939133
- - -0.10615062713623047
  - -0.10478639602661133
  - -0.10762882232666016
  - -0.10417318344116211
  - -0.10272407531738281
  - -0.10216426849365234
  - -0.104949951171875
  - -0.10169744491577148
  - -0.10430622100830078
  - -0.10518312454223633
  - -0.10529804229736328
  - -0.10685782879590988
  - -0.11096453666687012
  - -0.10526704788208008
  - -0.08727073669433594
  - -3.2404444217681885
  - -0.11263704299926758
  - -0.10190200805664062
  - -0.10425281524658203
  - -0.10426044464111328
  - -0.10506391525268555
  - -0.09247605502605438
  - -0.11183571815490723
  - -0.1056053638458252
  - -0.10492944717407227
  - -0.10176706314086914
  - -0.10286235809326172
  - -0.10735058784484863
  - -0.10482311248779297
  - -0.09641313552856445
  - -0.10279035568237305
  - -0.11185741424560547
  - -0.1047658920288086
  - -0.10519695281982422
  - -0.149352565407753
  - -0.10502386093139648
  - -0.10484170913696289
  - -0.10350597649812698
- - -0.10615062713623047
  - -0.10478639602661133
  - -0.10762882232666016
  - -0.10417318344116211
  - -0.10272407531738281
  - -0.10216426849365234
  - -0.104949951171875
  - -0.10169744491577148
  - -0.10430622100830078
  - -0.10518312454223633
  - -0.10529804229736328
  - -0.10685782879590988
  - -0.11096453666687012
  - -0.10526704788208008
  - -0.08727073669433594
  - -0.2566804885864258
  - -0.10082864761352539
  - -0.1009364128112793
  - -0.1049046516418457
  - -0.10464906692504883
  - -0.10538339614868164
  - -0.09092442691326141
  - -3.441432476043701
  - -0.10575723648071289
  - -0.10247182846069336
  - -0.10036563873291016
  - -0.1033482551574707
  - -0.10710692405700684
  - -0.10484766960144043
  - -0.10413122177124023
  - -0.10316610336303711
  - -0.11327505111694336
  - -0.10499048233032227
  - -0.10559368133544922
  - -0.15658079087734222
  - -0.10507869720458984
  - -0.10469627380371094
  - -0.11293820291757584
- - -0.10615062713623047
  - -0.10478639602661133
  - -3.5236568450927734
  - -0.10430550575256348
  - -0.10068225860595703
  - -0.10234785079956055
  - -0.1048579216003418
  - -0.10168981552124023
  - -0.10432004928588867
  - -0.10523700714111328
  - -0.10537242889404297
  - -0.09715559333562851
  - -0.11095690727233887
  - -0.10526299476623535
  - -0.0878896713256836
  - -0.24909257888793945
  - -0.10081005096435547
  - -0.10093927383422852
  - -0.10491418838500977
  - -0.1046609878540039
  - -0.10542058944702148
  - -0.09086412191390991
  - -0.11154532432556152
  - -0.10560131072998047
  - -0.10344552993774414
  - -0.10019159317016602
  - -0.10334062576293945
  - -0.10709333419799805
  - -0.10482406616210938
  - -0.10550069808959961
  - -0.1033315658569336
  - -0.11318302154541016
  - -0.1049652099609375
  - -0.10562801361083984
  - -0.15597420930862427
  - -0.10506439208984375
  - -0.10471010208129883
  - -0.11208430677652359
- - -0.10615062713623047
  - -0.10478639602661133
  - -0.10762882232666016
  - -0.10417318344116211
  - -0.10272407531738281
  - -0.10216426849365234
  - -0.104949951171875
  - -0.10169744491577148
  - -0.10430622100830078
  - -0.10518312454223633
  - -0.10529804229736328
  - -0.10685782879590988
  - -0.11096453666687012
  - -0.10526704788208008
  - -0.08727073669433594
  - -0.2566804885864258
  - -0.10082864761352539
  - -0.1009364128112793
  - -0.1049046516418457
  - -0.10464906692504883
  - -0.10538339614868164
  - -0.09092442691326141
  - -0.11154866218566895
  - -0.10559797286987305
  - -0.10343742370605469
  - -0.10016870498657227
  - -0.10331392288208008
  - -3.5588302612304688
  - -0.10473966598510742
  - -0.10798835754394531
  - -0.10375547409057617
  - -0.11396932601928711
  - -0.10497856140136719
  - -0.1056828498840332
  - -0.15639422833919525
  - -0.1050882339477539
  - -0.10463619232177734
  - -0.11521393060684204
- - -0.10615062713623047
  - -0.10478639602661133
  - -0.10762882232666016
  - -0.10417318344116211
  - -0.10272407531738281
  - -0.10216426849365234
  - -0.104949951171875
  - -0.10169744491577148
  - -0.10430622100830078
  - -0.10518312454223633
  - -0.10529804229736328
  - -0.10685782879590988
  - -0.11096453666687012
  - -0.10526704788208008
  - -0.08727073669433594
  - -0.2566804885864258
  - -0.10082864761352539
  - -0.1009364128112793
  - -0.1049046516418457
  - -0.10464906692504883
  - -0.10538339614868164
  - -0.09092442691326141
  - -0.11154866218566895
  - -0.10559797286987305
  - -0.10343742370605469
  - -0.10016870498657227
  - -0.10331392288208008
  - -0.1071009635925293
  - -0.10483098030090332
  - -0.1058053970336914
  - -0.10334110260009766
  - -0.11323928833007812
  - -0.1049795150756836
  - -0.10561752319335938
  - -0.15594463050365448
  - -0.10506296157836914
  - -0.10470724105834961
  - -3.766604423522949
- - -0.10615062713623047
  - -0.10478639602661133
  - -0.10762882232666016
  - -0.10417318344116211
  - -0.10272407531738281
  - -0.10216426849365234
  - -0.104949951171875
  - -0.10169744491577148
  - -0.10430622100830078
  - -0.10518312454223633
  - -0.10529804229736328
  - -4.731833457946777
  - -0.11197423934936523
  - -0.10542511940002441
  - -0.08710813522338867
  - -0.19195842742919922
  - -0.10059881210327148
  - -0.1010141372680664
  - -0.10444164276123047
  - -0.10474491119384766
  - -0.10557079315185547
  - -0.07322174310684204
  - -0.11159610748291016
  - -0.10572576522827148
  - -0.10341453552246094
  - -0.09986639022827148
  - -0.10334205627441406
  - -0.10745525360107422
  - -0.10491609573364258
  - -0.1129908561706543
  - -0.10018491744995117
  - -0.15514850616455078
  - -0.10853052139282227
  - -0.10336875915527344
  - -0.15947674214839935
- - -0.10615062713623047
  - -0.10478639602661133
  - -0.10762882232666016
  - -0.10417318344116211
  - -0.10272407531738281
  - -0.10216426849365234
  - -0.104949951171875
  - -0.10169744491577148
  - -0.10430622100830078
  - -0.10518312454223633
  - -0.10529804229736328
  - -5.372708320617676
  - -0.11170673370361328
  - -0.10535478591918945
  - -0.09103584289550781
  - -0.32442283630371094
  - -0.10085773468017578
  - -0.10089826583862305
  - -0.10446023941040039
  - -0.10458040237426758
  - -0.10547780990600586
  - -0.07439036667346954
  - -0.1113438606262207
  - -0.105712890625
  - -0.10331869125366211
  - -0.09999895095825195
  - -0.10310840606689453
  - -0.10748004913330078
  - -0.10490751266479492
  - -0.11771583557128906
  - -0.10014009475708008
  - -0.1421513557434082
  - -0.10843563079833984
  - -0.10337638854980469
  - -0.15493886172771454
- - -0.10615062713623047
  - -0.10478639602661133
  - -0.10762882232666016
  - -0.10417318344116211
  - -0.10272407531738281
  - -0.10216426849365234
  - -0.104949951171875
  - -0.10169744491577148
  - -0.10430622100830078
  - -0.10518312454223633
  - -0.10529804229736328
  - -5.591386318206787
  - -0.11289262771606445
  - -0.10520601272583008
  - -0.08778715133666992
  - -0.19528627395629883
  - -0.10093450546264648
  - -0.10095882415771484
  - -0.10459136962890625
  - -0.10494756698608398
  - -0.10558319091796875
  - -0.07604274898767471
  - -0.11174440383911133
  - -0.10571551322937012
  - -0.1035609245300293
  - -0.09992837905883789
  - -0.10340404510498047
  - -0.10743570327758789
  - -0.10490894317626953
  - -0.10950660705566406
  - -0.10023117065429688
  - -0.18190240859985352
  - -0.10790777206420898
  - -0.1033792495727539
  - -0.16396701335906982
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
