db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/country.csv
output: tests-examples/db2csv/world_1/tables/0004_dev.csv
raw_question: How many countries have governments that are republics? 
question_index: 705 
constants:
 - Republic
functions:
 - count
columns:
 - governmentform
filters:
 - '='
comment: |-
  SELECT count(*)
  FROM country
  WHERE GovernmentForm = "Republic"

sql: |-
  SELECT count(*)
  FROM country
  WHERE GovernmentForm = "Republic"
smbop_beam_join_columns:
- []
- []
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
smbop_beam_constants:
- []
- []
- []
- []
- []
- []
- []
smbop_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
smbop_beam_columns:
- - governmentform
- - governmentform
- - governmentform
- - governmentform
- - governmentform
- - governmentform
- - governmentform
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT COUNT( * ) FROM country WHERE country.governmentform = 'republic'
  - SELECT COUNT( * ) FROM country WHERE country.governmentform = 'republics'
  - SELECT COUNT( * ) FROM city JOIN country ON city.countrycode = country.code WHERE country.governmentform = 'republics'
  - SELECT COUNT( * ) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.governmentform = 'republics'
  - SELECT COUNT( * ) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.governmentform = 'republic'
  - SELECT COUNT( * ) FROM city JOIN country ON city.countrycode = country.code WHERE country.governmentform = 'republic'
  - SELECT COUNT( * ) FROM country WHERE country.governmentform = 'republics?'
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( * ) FROM country WHERE country.governmentform = 'republic'
  - SELECT COUNT( * ) FROM country WHERE country.governmentform = 'republics'
  - SELECT COUNT( * ) FROM city JOIN country ON city.countrycode = country.code WHERE country.governmentform = 'republics'
  - SELECT COUNT( * ) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.governmentform = 'republics'
  - SELECT COUNT( * ) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.governmentform = 'republic'
  - SELECT COUNT( * ) FROM city JOIN country ON city.countrycode = country.code WHERE country.governmentform = 'republic'
  - SELECT COUNT( * ) FROM country WHERE country.governmentform = 'republics?'
ratsql_beam_join_columns:
- []
- []
- []
- []
- []
- - code
  - countrycode
- - code
  - countrycode
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
ratsql_beam_constants:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - headofstate
- - name
  - headofstate
- - headofstate
- - headofstate
- - governmentform
- - headofstate
- - headofstate
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Count(*) FROM country WHERE country.HeadOfState = 'terminal'
  - SELECT Count(DISTINCT country.Name) FROM country WHERE country.HeadOfState = 'terminal'
  - SELECT Count(*) FROM country WHERE DISTINCT country.HeadOfState = 'terminal'
  - SELECT Count(DISTINCT *) FROM country WHERE country.HeadOfState = 'terminal'
  - SELECT Count(*) FROM country WHERE country.HeadOfState = 'terminal' LIMIT 1
  - SELECT DISTINCT Count(*) FROM country WHERE country.HeadOfState = 'terminal'
  - SELECT Count(*) FROM country WHERE country.GovernmentForm = 'terminal'
  - SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'terminal'
  - SELECT Count(*) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.HeadOfState = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - 
  - 
  - 
  - 
  - 
  - 
  - 
  - 
  - 
ratsql_beam_score_history:
- - -0.1099081039428711
  - -0.10538053512573242
  - -0.10605168342590332
  - -0.1038370132446289
  - -0.10276412963867188
  - -0.11405420303344727
  - -0.11044454574584961
  - -0.1034688949584961
  - -0.10526323318481445
  - -0.10452747344970703
  - -0.10559463500976562
  - -0.18389125168323517
  - -0.1103217601776123
  - -0.10510945320129395
  - -0.09364843368530273
  - -0.10360193252563477
  - -0.1011972427368164
  - -0.10130739212036133
  - -0.10443258285522461
  - -0.10442590713500977
  - -0.10531806945800781
  - -0.09308023750782013
  - -0.1123807430267334
  - -0.10537171363830566
  - -0.10567426681518555
  - -0.10077095031738281
  - -0.10233020782470703
  - -0.10796332359313965
  - -0.10463452339172363
  - -0.0976715087890625
  - -0.10436153411865234
  - -0.11083984375
  - -0.1050405502319336
  - -0.10353422164916992
  - -0.06279529631137848
- - -0.1099081039428711
  - -0.10538053512573242
  - -0.10605168342590332
  - -0.1038370132446289
  - -0.10276412963867188
  - -0.11405420303344727
  - -0.11044454574584961
  - -0.1034688949584961
  - -0.10526323318481445
  - -0.10452747344970703
  - -0.10559463500976562
  - -3.417731285095215
  - -0.09995603561401367
  - -0.10561943054199219
  - -0.09374332427978516
  - -0.1026301383972168
  - -0.10103368759155273
  - -0.1015176773071289
  - -0.1042337417602539
  - -0.10428524017333984
  - -0.10513877868652344
  - -0.11420481652021408
  - -0.11307215690612793
  - -0.10528707504272461
  - -0.10511016845703125
  - -0.10092306137084961
  - -0.10293388366699219
  - -0.10802531242370605
  - -0.10464906692504883
  - -0.097991943359375
  - -0.10497331619262695
  - -0.11071205139160156
  - -0.10476207733154297
  - -0.1038064956665039
  - -0.06579261273145676
- - -0.1099081039428711
  - -0.10538053512573242
  - -0.10605168342590332
  - -0.1038370132446289
  - -0.10276412963867188
  - -0.11405420303344727
  - -0.11044454574584961
  - -0.1034688949584961
  - -0.10526323318481445
  - -0.10452747344970703
  - -0.10559463500976562
  - -0.18389125168323517
  - -0.1103217601776123
  - -0.10510945320129395
  - -0.09364843368530273
  - -0.10360193252563477
  - -0.1011972427368164
  - -0.10130739212036133
  - -0.10443258285522461
  - -0.10442590713500977
  - -0.10531806945800781
  - -0.09308023750782013
  - -3.4368762969970703
  - -0.10531902313232422
  - -0.10278511047363281
  - -0.10070514678955078
  - -0.10227441787719727
  - -0.10798382759094238
  - -0.10465669631958008
  - -0.09767723083496094
  - -0.10419750213623047
  - -0.11136007308959961
  - -0.1050882339477539
  - -0.10351037979125977
  - -0.0636257603764534
- - -0.1099081039428711
  - -0.10538053512573242
  - -0.10605168342590332
  - -0.1038370132446289
  - -0.10276412963867188
  - -0.11405420303344727
  - -0.11044454574584961
  - -0.1034688949584961
  - -0.10526323318481445
  - -0.10452747344970703
  - -0.10559463500976562
  - -0.18389125168323517
  - -3.483050584793091
  - -0.10533809661865234
  - -0.09380197525024414
  - -0.10295248031616211
  - -0.10143566131591797
  - -0.10123825073242188
  - -0.10445785522460938
  - -0.10442876815795898
  - -0.10534524917602539
  - -0.0940098688006401
  - -0.11235189437866211
  - -0.10535383224487305
  - -0.1056971549987793
  - -0.10069608688354492
  - -0.10230731964111328
  - -0.10795927047729492
  - -0.1046288013458252
  - -0.09758424758911133
  - -0.10451316833496094
  - -0.11071252822875977
  - -0.10508012771606445
  - -0.1035470962524414
  - -0.06285608559846878
- - -0.1099081039428711
  - -0.10538053512573242
  - -0.10605168342590332
  - -0.1038370132446289
  - -0.10276412963867188
  - -0.11405420303344727
  - -0.11044454574584961
  - -0.1034688949584961
  - -0.10526323318481445
  - -0.10452747344970703
  - -0.10559463500976562
  - -0.18389125168323517
  - -0.1103217601776123
  - -0.10510945320129395
  - -0.09364843368530273
  - -0.10360193252563477
  - -0.1011972427368164
  - -0.10130739212036133
  - -0.10443258285522461
  - -0.10442590713500977
  - -0.10531806945800781
  - -0.09308023750782013
  - -0.1123807430267334
  - -0.10537171363830566
  - -0.10567426681518555
  - -0.10077095031738281
  - -0.10233020782470703
  - -3.5480055809020996
  - -0.10482096672058105
  - -0.09827661514282227
  - -0.10461044311523438
  - -0.11040782928466797
  - -0.10510444641113281
  - -0.1035466194152832
  - -0.0634012296795845
- - -0.1099081039428711
  - -0.10538053512573242
  - -3.5742602348327637
  - -0.10393428802490234
  - -0.10119438171386719
  - -0.11656045913696289
  - -0.11026239395141602
  - -0.10351705551147461
  - -0.10522890090942383
  - -0.10456418991088867
  - -0.10587549209594727
  - -0.17853380739688873
  - -0.11031723022460938
  - -0.10510396957397461
  - -0.09240293502807617
  - -0.10351896286010742
  - -0.10122489929199219
  - -0.10132551193237305
  - -0.10442924499511719
  - -0.10442876815795898
  - -0.105133056640625
  - -0.10015363246202469
  - -0.11235451698303223
  - -0.10536313056945801
  - -0.1059112548828125
  - -0.1007394790649414
  - -0.10229921340942383
  - -0.10796952247619629
  - -0.10463547706604004
  - -0.09762954711914062
  - -0.1043858528137207
  - -0.11083078384399414
  - -0.10504007339477539
  - -0.10351419448852539
  - -0.06303148716688156
- - -0.1099081039428711
  - -0.10538053512573242
  - -0.10605168342590332
  - -0.1038370132446289
  - -0.10276412963867188
  - -0.11405420303344727
  - -0.11044454574584961
  - -0.1034688949584961
  - -0.10526323318481445
  - -0.10452747344970703
  - -0.10559463500976562
  - -0.18389125168323517
  - -0.1103217601776123
  - -0.10510945320129395
  - -0.09364843368530273
  - -0.10360193252563477
  - -0.1011972427368164
  - -0.10130739212036133
  - -0.10443258285522461
  - -0.10442590713500977
  - -0.10531806945800781
  - -3.6032283306121826
  - -0.11261892318725586
  - -0.1052558422088623
  - -0.10894060134887695
  - -0.10068607330322266
  - -0.10224103927612305
  - -0.1080024242401123
  - -0.10458064079284668
  - -0.09770727157592773
  - -0.10456514358520508
  - -0.11085367202758789
  - -0.1050405502319336
  - -0.10346651077270508
  - -0.06383536010980606
- - -0.1099081039428711
  - -0.10538053512573242
  - -0.10605168342590332
  - -0.1038370132446289
  - -0.10276412963867188
  - -0.11405420303344727
  - -0.11044454574584961
  - -0.1034688949584961
  - -0.10526323318481445
  - -0.10452747344970703
  - -0.10559463500976562
  - -0.18389125168323517
  - -0.1103217601776123
  - -0.10510945320129395
  - -0.09364843368530273
  - -0.10360193252563477
  - -0.1011972427368164
  - -0.10130739212036133
  - -0.10443258285522461
  - -0.10442590713500977
  - -0.10531806945800781
  - -0.09308023750782013
  - -0.1123807430267334
  - -0.10537171363830566
  - -0.10567426681518555
  - -0.10077095031738281
  - -0.10233020782470703
  - -0.10796332359313965
  - -0.10463452339172363
  - -0.0976715087890625
  - -0.10436153411865234
  - -0.11083984375
  - -0.1050405502319336
  - -0.10353422164916992
  - -3.8562324047088623
- - -0.1099081039428711
  - -0.10538053512573242
  - -0.10605168342590332
  - -0.1038370132446289
  - -0.10276412963867188
  - -0.11405420303344727
  - -0.11044454574584961
  - -0.1034688949584961
  - -0.10526323318481445
  - -0.10452747344970703
  - -0.10559463500976562
  - -0.18389125168323517
  - -0.1103217601776123
  - -0.10510945320129395
  - -0.09364843368530273
  - -0.10360193252563477
  - -0.1011972427368164
  - -0.10130739212036133
  - -0.10443258285522461
  - -0.10442590713500977
  - -0.10531806945800781
  - -0.09308023750782013
  - -0.1123807430267334
  - -0.10537171363830566
  - -0.10567426681518555
  - -0.10077095031738281
  - -0.10233020782470703
  - -0.10796332359313965
  - -0.10463452339172363
  - -0.0976715087890625
  - -0.10436153411865234
  - -0.11083984375
  - -0.1050405502319336
  - -0.10353422164916992
  - -3.910037040710449
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
