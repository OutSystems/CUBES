db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/country.csv
 - tests-examples/db2csv/world_1/tables/countrylanguage.csv
output: tests-examples/db2csv/world_1/tables/0081_dev.csv
raw_question: What are the codes of the countries that do not speak English and whose government forms are not Republic? 
question_index: 782 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - Republic
 - English
join_columns: []
groupby_columns: []
functions: []
columns:
 - governmentform
 - language
filters:
 - '!='
 - '='
ieu:
 - except
comment: |-
  SELECT Code
  FROM country
  WHERE GovernmentForm != "Republic"
  EXCEPT
  SELECT CountryCode
  FROM countrylanguage
  WHERE LANGUAGE = "English"

sql: |-
  SELECT Code
  FROM country
  WHERE GovernmentForm != "Republic"
  EXCEPT
  SELECT CountryCode
  FROM countrylanguage
  WHERE LANGUAGE = "English"
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
smbop_beam_constants:
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
smbop_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_columns:
- - language
- - governmentform
  - language
- - governmentform
  - language
- - governmentform
- - language
- - language
- []
- - governmentform
smbop_beam_ieu:
- []
- - except
- - except
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '!='
- - '!='
  - '='
- - '='
- - '!='
- - '='
- - '='
- []
- - '='
smbop_beam_inferred_code:
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'English'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'English' EXCEPT SELECT country.code FROM country WHERE country.governmentform = 'Republic'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English' EXCEPT SELECT country.code FROM country WHERE country.governmentform = 'Republic'
  - SELECT country.code FROM country WHERE country.governmentform != 'Republic'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'Republic'
  - SELECT countrylanguage.countrycode FROM countrylanguage
  - SELECT country.code FROM country WHERE country.governmentform = 'Republic'
smbop_beam_inferred_code_w_terminals:
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'English'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'English' EXCEPT SELECT country.code FROM country WHERE country.governmentform = 'Republic'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English' EXCEPT SELECT country.code FROM country WHERE country.governmentform = 'Republic'
  - SELECT country.code FROM country WHERE country.governmentform != 'Republic'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'Republic'
  - SELECT countrylanguage.countrycode FROM countrylanguage
  - SELECT country.code FROM country WHERE country.governmentform = 'Republic'
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
ratsql_beam_constants:
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
ratsql_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_columns:
- - governmentform
  - language
- - governmentform
  - language
- - governmentform
  - language
- - governmentform
- - language
- - governmentform
  - language
- - language
- - governmentform
- - governmentform
- - language
ratsql_beam_ieu:
- - except
- - except
- - except
- - except
- - except
- - except
- - except
- - except
- - except
- - except
ratsql_beam_filters:
- - '='
- - '='
- - '!='
  - '='
- - '='
- - '='
- - '='
- - '='
- - '!='
  - '='
- - '='
- - '!='
  - '='
ratsql_beam_inferred_code:
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'terminal'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' EXCEPT SELECT country.Code FROM country WHERE country.GovernmentForm = 'terminal'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'terminal' EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'terminal'
  - SELECT country.Code FROM country WHERE country.GovernmentForm = 'terminal' EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'terminal'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' EXCEPT SELECT country.Name FROM country WHERE country.GovernmentForm = 'terminal'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' EXCEPT SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Code FROM country WHERE country.GovernmentForm != 'terminal' EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'terminal'
  - SELECT country.Code FROM country EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'terminal'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'terminal' EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'Republic'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' EXCEPT SELECT country.Code FROM country WHERE country.GovernmentForm = 'Republic'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English' EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'Republic'
  - SELECT country.Code FROM country WHERE country.GovernmentForm = 'Republic' EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'English'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Republic'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' EXCEPT SELECT country.Name FROM country WHERE country.GovernmentForm = 'Republic'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' EXCEPT SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Republic'
  - SELECT country.Code FROM country WHERE country.GovernmentForm != 'Republic' EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'English'
  - SELECT country.Code FROM country EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'Republic'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English' EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Republic'
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10573530197143555
  - -0.10377073287963867
  - -0.10564732551574707
  - -0.10431480407714844
  - -0.10239267349243164
  - -0.10246944427490234
  - -0.10599422454833984
  - -0.10228967666625977
  - -0.10434341430664062
  - -0.10573768615722656
  - -0.10541486740112305
  - -0.18995486199855804
  - -0.11084818840026855
  - -0.1051492691040039
  - -0.12418651580810547
  - -0.6488103866577148
  - -0.10228538513183594
  - -0.10135507583618164
  - -0.10417366027832031
  - -0.10476827621459961
  - -0.10627079010009766
  - -0.39487141370773315
  - -0.10982275009155273
  - -0.10580945014953613
  - -0.10176515579223633
  - -0.10109138488769531
  - -0.09920549392700195
  - -0.10772085189819336
  - -0.10471653938293457
  - -0.0879359245300293
  - -0.10643577575683594
  - -0.10630559921264648
  - -0.11022353172302246
  - -0.10396718978881836
  - -0.10009002685546875
  - -0.10260009765625
  - -0.103912353515625
  - -0.10282087326049805
  - -0.10503196716308594
  - -0.10503149032592773
  - -0.10459280014038086
  - -0.7985371351242065
  - -0.11165046691894531
  - -0.10547065734863281
  - -0.0924224853515625
  - -0.09785747528076172
  - -0.10179471969604492
  - -0.10212516784667969
  - -0.10481500625610352
  - -0.1045985221862793
  - -0.10471916198730469
  - -0.2972277104854584
  - -0.11124658584594727
  - -0.10605692863464355
  - -0.1043400764465332
  - -0.10075235366821289
  - -0.10380840301513672
  - -0.1084897518157959
  - -0.10458540916442871
  - -0.09459781646728516
  - -0.1085205078125
  - -0.10930013656616211
  - -0.10530710220336914
  - -0.10307741165161133
  - -0.2491786926984787
  - -0.10408687591552734
  - -0.09887170791625977
  - -0.10494852066040039
  - -0.10303831100463867
  - -0.08989963680505753
- - -0.10573530197143555
  - -0.10377073287963867
  - -0.10564732551574707
  - -0.10431480407714844
  - -0.10239267349243164
  - -0.10246944427490234
  - -0.10599422454833984
  - -0.10228967666625977
  - -0.10434341430664062
  - -0.10573768615722656
  - -0.10541486740112305
  - -0.18995486199855804
  - -0.11084818840026855
  - -0.1051492691040039
  - -0.12418651580810547
  - -0.6488103866577148
  - -0.10228538513183594
  - -0.10135507583618164
  - -0.10417366027832031
  - -0.10476827621459961
  - -0.10627079010009766
  - -0.39487141370773315
  - -0.10982275009155273
  - -0.10580945014953613
  - -0.10176515579223633
  - -0.10109138488769531
  - -0.09920549392700195
  - -0.10772085189819336
  - -0.10471653938293457
  - -0.0879359245300293
  - -0.10643577575683594
  - -0.10630559921264648
  - -0.11022353172302246
  - -0.10396718978881836
  - -0.10009002685546875
  - -0.10260009765625
  - -0.103912353515625
  - -0.10282087326049805
  - -0.10503196716308594
  - -0.10503149032592773
  - -0.10459280014038086
  - -1.2937419414520264
  - -0.1120307445526123
  - -0.10540485382080078
  - -0.09223270416259766
  - -0.10423755645751953
  - -0.10071754455566406
  - -0.10185480117797852
  - -0.10508155822753906
  - -0.1042485237121582
  - -0.10465860366821289
  - -0.42874670028686523
  - -0.11154294013977051
  - -0.10600018501281738
  - -0.10418415069580078
  - -0.10074663162231445
  - -0.10388422012329102
  - -0.1082005500793457
  - -0.10473895072937012
  - -0.09385538101196289
  - -0.1080021858215332
  - -0.10975170135498047
  - -0.10527849197387695
  - -0.10304880142211914
  - -0.24027539789676666
  - -0.10228681564331055
  - -0.099212646484375
  - -0.10488605499267578
  - -0.1030120849609375
  - -0.08723943680524826
- - -0.10573530197143555
  - -0.10377073287963867
  - -0.10564732551574707
  - -0.10431480407714844
  - -0.10239267349243164
  - -0.10246944427490234
  - -0.10599422454833984
  - -0.10228967666625977
  - -0.10434341430664062
  - -0.10573768615722656
  - -0.10541486740112305
  - -0.18995486199855804
  - -0.11084818840026855
  - -0.1051492691040039
  - -0.12418651580810547
  - -1.7606725692749023
  - -0.07462310791015625
  - -0.10209512710571289
  - -0.1040191650390625
  - -0.10481786727905273
  - -0.10513782501220703
  - -0.4417366683483124
  - -0.11029791831970215
  - -0.1058201789855957
  - -0.11131143569946289
  - -0.10219335556030273
  - -0.10323429107666016
  - -0.10774016380310059
  - -0.10440468788146973
  - -0.06555318832397461
  - -0.10852861404418945
  - -0.10298824310302734
  - -0.10897040367126465
  - -0.10376214981079102
  - -0.10081815719604492
  - -0.10253143310546875
  - -0.1040349006652832
  - -0.10289907455444336
  - -0.10526657104492188
  - -0.1049346923828125
  - -0.10477876663208008
  - -0.4581086039543152
  - -0.11148428916931152
  - -0.10546565055847168
  - -0.09115934371948242
  - -0.0988454818725586
  - -0.10215997695922852
  - -0.10265159606933594
  - -0.1046442985534668
  - -0.10464048385620117
  - -0.10469245910644531
  - -0.27439942955970764
  - -0.11116528511047363
  - -0.10606145858764648
  - -0.10354852676391602
  - -0.10084676742553711
  - -0.10345458984375
  - -0.10870814323425293
  - -0.10458254814147949
  - -0.09550666809082031
  - -0.1075286865234375
  - -0.1092214584350586
  - -0.10542583465576172
  - -0.10311079025268555
  - -0.25732144713401794
  - -0.10459566116333008
  - -0.09894561767578125
  - -0.10495758056640625
  - -0.10305452346801758
  - -0.08898188173770905
- - -0.10573530197143555
  - -0.10377073287963867
  - -0.10564732551574707
  - -0.10431480407714844
  - -0.10239267349243164
  - -0.10246944427490234
  - -0.10599422454833984
  - -0.10228967666625977
  - -0.10434341430664062
  - -0.10573768615722656
  - -0.10541486740112305
  - -0.18995486199855804
  - -0.11084818840026855
  - -0.1051492691040039
  - -0.12418651580810547
  - -0.6488103866577148
  - -0.10228538513183594
  - -0.10135507583618164
  - -0.10417366027832031
  - -0.10476827621459961
  - -0.10627079010009766
  - -1.6241167783737183
  - -0.11030220985412598
  - -0.10589051246643066
  - -0.10282468795776367
  - -0.1011953353881836
  - -0.10214614868164062
  - -0.10804271697998047
  - -0.10476803779602051
  - -0.09659337997436523
  - -0.10787391662597656
  - -0.10511255264282227
  - -0.11011838912963867
  - -0.10374951362609863
  - -0.10023021697998047
  - -0.1025094985961914
  - -0.10393857955932617
  - -0.1027517318725586
  - -0.10513687133789062
  - -0.10493850708007812
  - -0.10463905334472656
  - -0.5691105723381042
  - -0.11155462265014648
  - -0.10547685623168945
  - -0.09024286270141602
  - -0.09792184829711914
  - -0.10207271575927734
  - -0.10229825973510742
  - -0.10480546951293945
  - -0.10463285446166992
  - -0.10469722747802734
  - -0.2796615958213806
  - -0.11121678352355957
  - -0.10606122016906738
  - -0.10423994064331055
  - -0.10064840316772461
  - -0.10363292694091797
  - -0.10851788520812988
  - -0.10459375381469727
  - -0.09470367431640625
  - -0.10779857635498047
  - -0.109619140625
  - -0.10525274276733398
  - -0.10307168960571289
  - -0.2425822913646698
  - -0.10410737991333008
  - -0.098846435546875
  - -0.1049494743347168
  - -0.10305356979370117
  - -0.08990083634853363
- - -0.10573530197143555
  - -0.10377073287963867
  - -0.10564732551574707
  - -0.10431480407714844
  - -0.10239267349243164
  - -0.10246944427490234
  - -0.10599422454833984
  - -0.10228967666625977
  - -0.10434341430664062
  - -0.10573768615722656
  - -0.10541486740112305
  - -0.18995486199855804
  - -0.11084818840026855
  - -0.1051492691040039
  - -0.12418651580810547
  - -0.6488103866577148
  - -0.10228538513183594
  - -0.10135507583618164
  - -0.10417366027832031
  - -0.10476827621459961
  - -0.10627079010009766
  - -0.39487141370773315
  - -0.10982275009155273
  - -0.10580945014953613
  - -0.10176515579223633
  - -0.10109138488769531
  - -0.09920549392700195
  - -0.10772085189819336
  - -0.10471653938293457
  - -0.0879359245300293
  - -0.10643577575683594
  - -0.10630559921264648
  - -0.11022353172302246
  - -0.10396718978881836
  - -0.10009002685546875
  - -0.10260009765625
  - -0.103912353515625
  - -0.10282087326049805
  - -0.10503196716308594
  - -0.10503149032592773
  - -0.10459280014038086
  - -0.7985371351242065
  - -0.11165046691894531
  - -0.10547065734863281
  - -0.0924224853515625
  - -0.09785747528076172
  - -0.10179471969604492
  - -0.10212516784667969
  - -0.10481500625610352
  - -0.1045985221862793
  - -0.10471916198730469
  - -1.5287634134292603
  - -0.11057353019714355
  - -0.10608839988708496
  - -0.10602617263793945
  - -0.10083818435668945
  - -0.103668212890625
  - -0.1082465648651123
  - -0.10485482215881348
  - -0.09991931915283203
  - -0.10844564437866211
  - -0.10781145095825195
  - -0.10515499114990234
  - -0.10303974151611328
  - -0.2304738312959671
  - -0.10051584243774414
  - -0.09964513778686523
  - -0.1048274040222168
  - -0.10304069519042969
  - -0.08520235866308212
- - -0.10573530197143555
  - -0.10377073287963867
  - -0.10564732551574707
  - -0.10431480407714844
  - -0.10239267349243164
  - -0.10246944427490234
  - -0.10599422454833984
  - -0.10228967666625977
  - -0.10434341430664062
  - -0.10573768615722656
  - -0.10541486740112305
  - -0.18995486199855804
  - -0.11084818840026855
  - -0.1051492691040039
  - -0.12418651580810547
  - -0.6488103866577148
  - -0.10228538513183594
  - -0.10135507583618164
  - -0.10417366027832031
  - -0.10476827621459961
  - -0.10627079010009766
  - -0.39487141370773315
  - -0.10982275009155273
  - -0.10580945014953613
  - -0.10176515579223633
  - -0.10109138488769531
  - -0.09920549392700195
  - -0.10772085189819336
  - -0.10471653938293457
  - -0.0879359245300293
  - -0.10643577575683594
  - -0.10630559921264648
  - -0.11022353172302246
  - -0.10396718978881836
  - -0.10009002685546875
  - -0.10260009765625
  - -0.103912353515625
  - -0.10282087326049805
  - -0.10503196716308594
  - -0.10503149032592773
  - -0.10459280014038086
  - -2.1108803749084473
  - -0.11258482933044434
  - -0.10561656951904297
  - -0.09779834747314453
  - -0.09099721908569336
  - -0.10203933715820312
  - -0.10192441940307617
  - -0.10462236404418945
  - -0.10441732406616211
  - -0.1049351692199707
  - -0.34737110137939453
  - -0.11133527755737305
  - -0.10603642463684082
  - -0.104644775390625
  - -0.10070991516113281
  - -0.10370731353759766
  - -0.10846853256225586
  - -0.10460066795349121
  - -0.09423542022705078
  - -0.10874128341674805
  - -0.10945510864257812
  - -0.1052408218383789
  - -0.10304594039916992
  - -0.23888377845287323
  - -0.1026163101196289
  - -0.0989999771118164
  - -0.10488510131835938
  - -0.10300445556640625
  - -0.08542577177286148
- - -0.10573530197143555
  - -0.10377073287963867
  - -0.10564732551574707
  - -0.10431480407714844
  - -0.10239267349243164
  - -0.10246944427490234
  - -0.10599422454833984
  - -0.10228967666625977
  - -0.10434341430664062
  - -0.10573768615722656
  - -0.10541486740112305
  - -0.18995486199855804
  - -0.11084818840026855
  - -0.1051492691040039
  - -0.12418651580810547
  - -0.6488103866577148
  - -0.10228538513183594
  - -0.10135507583618164
  - -0.10417366027832031
  - -0.10476827621459961
  - -0.10627079010009766
  - -0.39487141370773315
  - -0.10982275009155273
  - -0.10580945014953613
  - -0.10176515579223633
  - -0.10109138488769531
  - -0.09920549392700195
  - -0.10772085189819336
  - -0.10471653938293457
  - -0.0879359245300293
  - -0.10643577575683594
  - -0.10630559921264648
  - -0.11022353172302246
  - -0.10396718978881836
  - -0.10009002685546875
  - -0.10260009765625
  - -0.103912353515625
  - -0.10282087326049805
  - -0.10503196716308594
  - -0.10503149032592773
  - -0.10459280014038086
  - -1.2937419414520264
  - -0.1120307445526123
  - -0.10540485382080078
  - -0.09223270416259766
  - -0.10423755645751953
  - -0.10071754455566406
  - -0.10185480117797852
  - -0.10508155822753906
  - -0.1042485237121582
  - -0.10465860366821289
  - -1.1865853071212769
  - -0.11062741279602051
  - -0.10605716705322266
  - -0.10463762283325195
  - -0.10084247589111328
  - -0.10411310195922852
  - -0.10808491706848145
  - -0.10491061210632324
  - -0.09953975677490234
  - -0.10879898071289062
  - -0.10743570327758789
  - -0.10516357421875
  - -0.10308599472045898
  - -0.22608236968517303
  - -0.09996795654296875
  - -0.09944391250610352
  - -0.1048269271850586
  - -0.10302114486694336
  - -0.08413179963827133
- - -0.10573530197143555
  - -0.10377073287963867
  - -0.10564732551574707
  - -0.10431480407714844
  - -0.10239267349243164
  - -0.10246944427490234
  - -0.10599422454833984
  - -0.10228967666625977
  - -0.10434341430664062
  - -0.10573768615722656
  - -0.10541486740112305
  - -0.18995486199855804
  - -0.11084818840026855
  - -0.1051492691040039
  - -0.12418651580810547
  - -1.7606725692749023
  - -0.07462310791015625
  - -0.10209512710571289
  - -0.1040191650390625
  - -0.10481786727905273
  - -0.10513782501220703
  - -1.2885117530822754
  - -0.1111595630645752
  - -0.10579466819763184
  - -0.10451841354370117
  - -0.10183382034301758
  - -0.10246467590332031
  - -0.10808253288269043
  - -0.10455513000488281
  - -0.14867162704467773
  - -0.1116342544555664
  - -0.10443782806396484
  - -0.11087441444396973
  - -0.10352706909179688
  - -0.10117006301879883
  - -0.10236549377441406
  - -0.10399389266967773
  - -0.10307979583740234
  - -0.10521841049194336
  - -0.10498523712158203
  - -0.10477304458618164
  - -0.35738644003868103
  - -0.11140131950378418
  - -0.1054837703704834
  - -0.09067583084106445
  - -0.09934473037719727
  - -0.1020355224609375
  - -0.10262537002563477
  - -0.10465717315673828
  - -0.10464954376220703
  - -0.10464763641357422
  - -0.26916560530662537
  - -0.11116290092468262
  - -0.1060631275177002
  - -0.10349607467651367
  - -0.10073041915893555
  - -0.10331487655639648
  - -0.1089024543762207
  - -0.10461163520812988
  - -0.09491872787475586
  - -0.10645294189453125
  - -0.10956144332885742
  - -0.10512924194335938
  - -0.10306167602539062
  - -0.23464380204677582
  - -0.10451459884643555
  - -0.09913444519042969
  - -0.10495424270629883
  - -0.10307931900024414
  - -0.08834171295166016
- - -0.10573530197143555
  - -0.10377073287963867
  - -0.10564732551574707
  - -0.10431480407714844
  - -0.10239267349243164
  - -0.10246944427490234
  - -0.10599422454833984
  - -0.10228967666625977
  - -0.10434341430664062
  - -0.10573768615722656
  - -0.10541486740112305
  - -0.18995486199855804
  - -0.11084818840026855
  - -0.1051492691040039
  - -3.986316442489624
  - -0.10188674926757812
  - -0.11100435256958008
  - -0.10794925689697266
  - -0.1044309139251709
  - -0.11980295181274414
  - -0.11251354217529297
  - -0.11687326431274414
  - -0.10898280143737793
  - -0.10414743423461914
  - -0.1007533073425293
  - -0.10247325897216797
  - -0.10394954681396484
  - -0.10294055938720703
  - -0.10527706146240234
  - -0.10492181777954102
  - -0.10476970672607422
  - -0.5289708971977234
  - -0.11148452758789062
  - -0.10546350479125977
  - -0.08935737609863281
  - -0.09835672378540039
  - -0.10219717025756836
  - -0.1026153564453125
  - -0.10465288162231445
  - -0.10462617874145508
  - -0.10471391677856445
  - -0.277919739484787
  - -0.11118006706237793
  - -0.10606026649475098
  - -0.10365962982177734
  - -0.10066699981689453
  - -0.10372161865234375
  - -0.10859107971191406
  - -0.1045835018157959
  - -0.09404706954956055
  - -0.1076517105102539
  - -0.10947751998901367
  - -0.10542774200439453
  - -0.10310029983520508
  - -0.25378185510635376
  - -0.10414934158325195
  - -0.09911108016967773
  - -0.104949951171875
  - -0.1030726432800293
  - -0.0884033665060997
- - -0.10573530197143555
  - -0.10377073287963867
  - -0.10564732551574707
  - -0.10431480407714844
  - -0.10239267349243164
  - -0.10246944427490234
  - -0.10599422454833984
  - -0.10228967666625977
  - -0.10434341430664062
  - -0.10573768615722656
  - -0.10541486740112305
  - -0.18995486199855804
  - -0.11084818840026855
  - -0.1051492691040039
  - -0.12418651580810547
  - -1.7606725692749023
  - -0.07462310791015625
  - -0.10209512710571289
  - -0.1040191650390625
  - -0.10481786727905273
  - -0.10513782501220703
  - -0.4417366683483124
  - -0.11029791831970215
  - -0.1058201789855957
  - -0.11131143569946289
  - -0.10219335556030273
  - -0.10323429107666016
  - -0.10774016380310059
  - -0.10440468788146973
  - -0.06555318832397461
  - -0.10852861404418945
  - -0.10298824310302734
  - -0.10897040367126465
  - -0.10376214981079102
  - -0.10081815719604492
  - -0.10253143310546875
  - -0.1040349006652832
  - -0.10289907455444336
  - -0.10526657104492188
  - -0.1049346923828125
  - -0.10477876663208008
  - -0.4581086039543152
  - -0.11148428916931152
  - -0.10546565055847168
  - -0.09115934371948242
  - -0.0988454818725586
  - -0.10215997695922852
  - -0.10265159606933594
  - -0.1046442985534668
  - -0.10464048385620117
  - -0.10469245910644531
  - -1.6039535999298096
  - -0.11050271987915039
  - -0.10605382919311523
  - -0.10594940185546875
  - -0.10079383850097656
  - -0.1033782958984375
  - -0.10833239555358887
  - -0.10487794876098633
  - -0.09953880310058594
  - -0.10832452774047852
  - -0.10825634002685547
  - -0.10515785217285156
  - -0.10310029983520508
  - -0.23992134630680084
  - -0.1014857292175293
  - -0.09990835189819336
  - -0.10484027862548828
  - -0.10303449630737305
  - -0.08733557164669037
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
