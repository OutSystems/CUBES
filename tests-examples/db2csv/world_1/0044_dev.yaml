db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/countrylanguage.csv
 - tests-examples/db2csv/world_1/tables/country.csv
output: tests-examples/db2csv/world_1/tables/0044_dev.csv
raw_question: What is the number of nations that use English and Dutch? 
question_index: 745 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - Dutch
 - English
join_columns:
 - countrycode
 - code
groupby_columns: []
orderby_columns: []
functions:
 - count
columns:
 - language
filters:
 - '='
ieu:
 - intersect
comment: |-
  SELECT COUNT(*)
  FROM
    (SELECT T1.Name
     FROM country AS T1
     JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
     WHERE T2.Language = "English" INTERSECT
       SELECT T1.Name
       FROM country AS T1
       JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = "Dutch")

sql: |-
  SELECT COUNT(*)
  FROM
    (SELECT T1.Name
     FROM country AS T1
     JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
     WHERE T2.Language = "English" INTERSECT
       SELECT T1.Name
       FROM country AS T1
       JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = "Dutch")
smbop_beam_join_columns:
- - countrycode
  - code
- - countrycode
  - code
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
smbop_beam_constants:
- - Dutch
  - English
- - Dutch
  - English
- - Dutch
  - English
- - Dutch
  - English
- - Dutch
  - English
- - Dutch
  - English
- - Dutch
  - English
- - Dutch
  - English
- - Dutch
  - English
smbop_beam_functions:
- - count
- - count
- - count
- - count
- []
- - count
- - count
- []
- []
smbop_beam_columns:
- - language
- - language
- - language
- - language
- - language
- - language
- - language
- - language
- - language
smbop_beam_ieu:
- []
- []
- []
- - intersect
- - intersect
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '!='
  - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT COUNT( * ) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Dutch'
  - SELECT COUNT( * ) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English'
  - SELECT COUNT( * ) FROM countrylanguage WHERE countrylanguage.language = 'English' AND countrylanguage.language != 'Dutch'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English' INTERSECT SELECT COUNT( * ) FROM countrylanguage WHERE countrylanguage.language = 'Dutch'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English' INTERSECT SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'Dutch'
  - SELECT COUNT( * ) FROM countrylanguage WHERE countrylanguage.language = 'English'
  - SELECT COUNT( * ) FROM countrylanguage WHERE countrylanguage.language = 'Dutch'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'Dutch'
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( * ) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Dutch'
  - SELECT COUNT( * ) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English'
  - SELECT COUNT( * ) FROM countrylanguage WHERE countrylanguage.language = 'English' AND countrylanguage.language != 'Dutch'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English' INTERSECT SELECT COUNT( * ) FROM countrylanguage WHERE countrylanguage.language = 'Dutch'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English' INTERSECT SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'Dutch'
  - SELECT COUNT( * ) FROM countrylanguage WHERE countrylanguage.language = 'English'
  - SELECT COUNT( * ) FROM countrylanguage WHERE countrylanguage.language = 'Dutch'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'Dutch'
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- []
- []
- []
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- []
- - countrycode
  - code
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
ratsql_beam_constants:
- - Dutch
  - English
- - Dutch
  - English
- - Dutch
  - English
- - Dutch
  - English
- - Dutch
  - English
- - Dutch
  - English
- - Dutch
  - English
- - Dutch
  - English
- - Dutch
  - English
- - Dutch
  - English
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - language
- - language
- - language
- - language
- - language
- - language
- - language
- - language
- - language
ratsql_beam_ieu:
- []
- - intersect
- - intersect
- - intersect
- - intersect
- - intersect
- - intersect
- - intersect
- - intersect
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
  - SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT countrylanguage.IsOfficial FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
  - SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
  - SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT countrylanguage.IsOfficial FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
  - SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
  - SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT * FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
  - SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.HeadOfState FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT countrylanguage.Percentage FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
  - SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'Dutch'
  - SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'Dutch' INTERSECT SELECT countrylanguage.IsOfficial FROM countrylanguage WHERE countrylanguage.Language = 'English'
  - SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'Dutch' INTERSECT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English'
  - SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Dutch' INTERSECT SELECT countrylanguage.IsOfficial FROM countrylanguage WHERE countrylanguage.Language = 'English'
  - SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Dutch' INTERSECT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English'
  - SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'Dutch' INTERSECT SELECT * FROM countrylanguage WHERE countrylanguage.Language = 'English'
  - SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'Dutch' INTERSECT SELECT country.HeadOfState FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English'
  - SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'Dutch' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English'
  - SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'Dutch' INTERSECT SELECT countrylanguage.Percentage FROM countrylanguage WHERE countrylanguage.Language = 'English'
  - SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Dutch' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English'
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10655879974365234
  - -0.10521936416625977
  - -0.10544157028198242
  - -0.10387969017028809
  - -0.10215425491333008
  - -0.1055302619934082
  - -0.11145734786987305
  - -0.1022038459777832
  - -0.10595512390136719
  - -0.10465383529663086
  - -0.10651826858520508
  - -0.10082928836345673
  - -0.10924577713012695
  - -0.10556387901306152
  - -0.09489250183105469
  - -0.10255908966064453
  - -0.10251951217651367
  - -0.10130500793457031
  - -0.10526752471923828
  - -0.1051187515258789
  - -0.1051025390625
  - -0.1413169652223587
  - -0.11292529106140137
  - -0.10558700561523438
  - -0.10492229461669922
  - -0.09906339645385742
  - -0.10194730758666992
  - -0.10755467414855957
  - -0.10409975051879883
  - -4.953105926513672
  - -0.10497617721557617
  - -0.10740900039672852
  - -0.11783456802368164
  - -0.1054539680480957
  - -0.07668078690767288
- - -0.10655879974365234
  - -0.10521936416625977
  - -0.10544157028198242
  - -0.10387969017028809
  - -0.10215425491333008
  - -0.1055302619934082
  - -0.11145734786987305
  - -0.1022038459777832
  - -0.10595512390136719
  - -0.10465383529663086
  - -0.10651826858520508
  - -0.10082928836345673
  - -0.10924577713012695
  - -0.10556387901306152
  - -0.09489250183105469
  - -0.10255908966064453
  - -0.10251951217651367
  - -0.10130500793457031
  - -0.10526752471923828
  - -0.1051187515258789
  - -0.1051025390625
  - -0.1413169652223587
  - -0.11292529106140137
  - -0.10558700561523438
  - -0.10492229461669922
  - -0.09906339645385742
  - -0.10194730758666992
  - -0.10755467414855957
  - -0.10409975051879883
  - -0.08807992935180664
  - -0.09962272644042969
  - -0.10852622985839844
  - -0.10694122314453125
  - -0.10339879989624023
  - -0.10217857360839844
  - -0.10251617431640625
  - -0.10503292083740234
  - -0.10315942764282227
  - -0.1044931411743164
  - -0.10463285446166992
  - -0.10441398620605469
  - -1.2745317220687866
  - -0.11177849769592285
  - -0.10600876808166504
  - -0.09147119522094727
  - -0.10556364059448242
  - -0.10054397583007812
  - -0.10164356231689453
  - -0.10602188110351562
  - -0.10479021072387695
  - -0.10431289672851562
  - -0.07391772419214249
  - -0.11175417900085449
  - -0.10617578029632568
  - -0.10581779479980469
  - -0.09987497329711914
  - -0.10788154602050781
  - -0.10782790184020996
  - -0.10473132133483887
  - -0.10204792022705078
  - -0.10465383529663086
  - -0.10816526412963867
  - -0.10527467727661133
  - -0.10411643981933594
  - -0.06901931762695312
  - -0.10463953018188477
  - -0.10898160934448242
  - -0.10521984100341797
  - -0.10461759567260742
  - -0.2955783009529114
- - -0.10655879974365234
  - -0.10521936416625977
  - -0.10544157028198242
  - -0.10387969017028809
  - -0.10215425491333008
  - -0.1055302619934082
  - -0.11145734786987305
  - -0.1022038459777832
  - -0.10595512390136719
  - -0.10465383529663086
  - -0.10651826858520508
  - -0.10082928836345673
  - -0.10924577713012695
  - -0.10556387901306152
  - -0.09489250183105469
  - -0.10255908966064453
  - -0.10251951217651367
  - -0.10130500793457031
  - -0.10526752471923828
  - -0.1051187515258789
  - -0.1051025390625
  - -0.1413169652223587
  - -0.11292529106140137
  - -0.10558700561523438
  - -0.10492229461669922
  - -0.09906339645385742
  - -0.10194730758666992
  - -0.10755467414855957
  - -0.10409975051879883
  - -0.08807992935180664
  - -0.09962272644042969
  - -0.10852622985839844
  - -0.10694122314453125
  - -0.10339879989624023
  - -0.10217857360839844
  - -0.10251617431640625
  - -0.10503292083740234
  - -0.10315942764282227
  - -0.1044931411743164
  - -0.10463285446166992
  - -0.10441398620605469
  - -1.4739489555358887
  - -0.11109805107116699
  - -0.10523366928100586
  - -0.0882563591003418
  - -0.10595989227294922
  - -0.10069704055786133
  - -0.10156488418579102
  - -0.10621070861816406
  - -0.10501909255981445
  - -0.10439300537109375
  - -0.07283921539783478
  - -0.11165475845336914
  - -0.10616087913513184
  - -0.10563850402832031
  - -0.09980154037475586
  - -0.10866975784301758
  - -0.10782003402709961
  - -0.10474586486816406
  - -0.10242414474487305
  - -0.10448789596557617
  - -0.10848522186279297
  - -0.10529661178588867
  - -0.10410737991333008
  - -0.07037553936243057
  - -0.10470438003540039
  - -0.10889387130737305
  - -0.1052408218383789
  - -0.10462665557861328
  - -0.295890212059021
- - -0.10655879974365234
  - -0.10521936416625977
  - -0.10544157028198242
  - -0.10387969017028809
  - -0.10215425491333008
  - -0.1055302619934082
  - -0.11145734786987305
  - -0.1022038459777832
  - -0.10595512390136719
  - -0.10465383529663086
  - -0.10651826858520508
  - -0.10082928836345673
  - -0.10924577713012695
  - -0.10556387901306152
  - -0.09489250183105469
  - -0.10255908966064453
  - -0.10251951217651367
  - -0.10130500793457031
  - -0.10526752471923828
  - -0.1051187515258789
  - -0.1051025390625
  - -0.1413169652223587
  - -0.11292529106140137
  - -0.10558700561523438
  - -0.10492229461669922
  - -0.09906339645385742
  - -0.10194730758666992
  - -0.10755467414855957
  - -0.10409975051879883
  - -0.08807992935180664
  - -0.09962272644042969
  - -0.10852622985839844
  - -0.10694122314453125
  - -0.10339879989624023
  - -0.10217857360839844
  - -0.10251617431640625
  - -0.10503292083740234
  - -0.10315942764282227
  - -0.1044931411743164
  - -0.10463285446166992
  - -0.10441398620605469
  - -1.2745317220687866
  - -0.11177849769592285
  - -0.10600876808166504
  - -0.09147119522094727
  - -0.10556364059448242
  - -0.10054397583007812
  - -0.10164356231689453
  - -0.10602188110351562
  - -0.10479021072387695
  - -0.10431289672851562
  - -0.07391772419214249
  - -0.11175417900085449
  - -0.10617578029632568
  - -0.10581779479980469
  - -0.09987497329711914
  - -0.10788154602050781
  - -0.10782790184020996
  - -0.10473132133483887
  - -0.10204792022705078
  - -0.10465383529663086
  - -0.10816526412963867
  - -0.10527467727661133
  - -0.10411643981933594
  - -0.06901931762695312
  - -0.10463953018188477
  - -0.10898160934448242
  - -0.10521984100341797
  - -0.10461759567260742
  - -1.5939801931381226
- - -0.10655879974365234
  - -0.10521936416625977
  - -0.10544157028198242
  - -0.10387969017028809
  - -0.10215425491333008
  - -0.1055302619934082
  - -0.11145734786987305
  - -0.1022038459777832
  - -0.10595512390136719
  - -0.10465383529663086
  - -0.10651826858520508
  - -0.10082928836345673
  - -0.10924577713012695
  - -0.10556387901306152
  - -0.09489250183105469
  - -0.10255908966064453
  - -0.10251951217651367
  - -0.10130500793457031
  - -0.10526752471923828
  - -0.1051187515258789
  - -0.1051025390625
  - -0.1413169652223587
  - -0.11292529106140137
  - -0.10558700561523438
  - -0.10492229461669922
  - -0.09906339645385742
  - -0.10194730758666992
  - -0.10755467414855957
  - -0.10409975051879883
  - -0.08807992935180664
  - -0.09962272644042969
  - -0.10852622985839844
  - -0.10694122314453125
  - -0.10339879989624023
  - -0.10217857360839844
  - -0.10251617431640625
  - -0.10503292083740234
  - -0.10315942764282227
  - -0.1044931411743164
  - -0.10463285446166992
  - -0.10441398620605469
  - -1.4739489555358887
  - -0.11109805107116699
  - -0.10523366928100586
  - -0.0882563591003418
  - -0.10595989227294922
  - -0.10069704055786133
  - -0.10156488418579102
  - -0.10621070861816406
  - -0.10501909255981445
  - -0.10439300537109375
  - -0.07283921539783478
  - -0.11165475845336914
  - -0.10616087913513184
  - -0.10563850402832031
  - -0.09980154037475586
  - -0.10866975784301758
  - -0.10782003402709961
  - -0.10474586486816406
  - -0.10242414474487305
  - -0.10448789596557617
  - -0.10848522186279297
  - -0.10529661178588867
  - -0.10410737991333008
  - -0.07037553936243057
  - -0.10470438003540039
  - -0.10889387130737305
  - -0.1052408218383789
  - -0.10462665557861328
  - -1.5933051109313965
- - -0.10655879974365234
  - -0.10521936416625977
  - -0.10544157028198242
  - -0.10387969017028809
  - -0.10215425491333008
  - -0.1055302619934082
  - -0.11145734786987305
  - -0.1022038459777832
  - -0.10595512390136719
  - -0.10465383529663086
  - -0.10651826858520508
  - -0.10082928836345673
  - -0.10924577713012695
  - -0.10556387901306152
  - -0.09489250183105469
  - -0.10255908966064453
  - -0.10251951217651367
  - -0.10130500793457031
  - -0.10526752471923828
  - -0.1051187515258789
  - -0.1051025390625
  - -0.1413169652223587
  - -0.11292529106140137
  - -0.10558700561523438
  - -0.10492229461669922
  - -0.09906339645385742
  - -0.10194730758666992
  - -0.10755467414855957
  - -0.10409975051879883
  - -0.08807992935180664
  - -0.09962272644042969
  - -0.10852622985839844
  - -0.10694122314453125
  - -0.10339879989624023
  - -0.10217857360839844
  - -0.10251617431640625
  - -0.10503292083740234
  - -0.10315942764282227
  - -0.1044931411743164
  - -0.10463285446166992
  - -0.10441398620605469
  - -3.3365707397460938
  - -0.11185765266418457
  - -0.10592865943908691
  - -0.09445428848266602
  - -0.10540533065795898
  - -0.10052347183227539
  - -0.10161638259887695
  - -0.10589313507080078
  - -0.1047201156616211
  - -0.10459613800048828
  - -0.07126889377832413
  - -0.11164069175720215
  - -0.1061934232711792
  - -0.10526275634765625
  - -0.10002708435058594
  - -0.10689163208007812
  - -0.10773396492004395
  - -0.10475468635559082
  - -0.10204267501831055
  - -0.10407209396362305
  - -0.10808944702148438
  - -0.10526847839355469
  - -0.10406303405761719
  - -0.06784651428461075
  - -0.10464143753051758
  - -0.1089944839477539
  - -0.10521125793457031
  - -0.104583740234375
  - -0.2952685058116913
- - -0.10655879974365234
  - -0.10521936416625977
  - -0.10544157028198242
  - -0.10387969017028809
  - -0.10215425491333008
  - -0.1055302619934082
  - -0.11145734786987305
  - -0.1022038459777832
  - -0.10595512390136719
  - -0.10465383529663086
  - -0.10651826858520508
  - -0.10082928836345673
  - -0.10924577713012695
  - -0.10556387901306152
  - -0.09489250183105469
  - -0.10255908966064453
  - -0.10251951217651367
  - -0.10130500793457031
  - -0.10526752471923828
  - -0.1051187515258789
  - -0.1051025390625
  - -0.1413169652223587
  - -0.11292529106140137
  - -0.10558700561523438
  - -0.10492229461669922
  - -0.09906339645385742
  - -0.10194730758666992
  - -0.10755467414855957
  - -0.10409975051879883
  - -0.08807992935180664
  - -0.09962272644042969
  - -0.10852622985839844
  - -0.10694122314453125
  - -0.10339879989624023
  - -0.10217857360839844
  - -0.10251617431640625
  - -0.10503292083740234
  - -0.10315942764282227
  - -0.1044931411743164
  - -0.10463285446166992
  - -0.10441398620605469
  - -3.3579092025756836
  - -0.1110219955444336
  - -0.10614418983459473
  - -0.09125566482543945
  - -0.10601282119750977
  - -0.1007695198059082
  - -0.10161161422729492
  - -0.10613393783569336
  - -0.10483598709106445
  - -0.10428333282470703
  - -0.07302063703536987
  - -0.11186671257019043
  - -0.10619306564331055
  - -0.10580158233642578
  - -0.09989356994628906
  - -0.10715007781982422
  - -0.10793662071228027
  - -0.10472345352172852
  - -0.10158586502075195
  - -0.1052088737487793
  - -0.10935735702514648
  - -0.1052846908569336
  - -0.10362482070922852
  - -0.06922157108783722
  - -0.10454702377319336
  - -0.10861015319824219
  - -0.10523176193237305
  - -0.10419321060180664
  - -0.30518174171447754
- - -0.10655879974365234
  - -0.10521936416625977
  - -0.10544157028198242
  - -0.10387969017028809
  - -0.10215425491333008
  - -0.1055302619934082
  - -0.11145734786987305
  - -0.1022038459777832
  - -0.10595512390136719
  - -0.10465383529663086
  - -0.10651826858520508
  - -0.10082928836345673
  - -0.10924577713012695
  - -0.10556387901306152
  - -0.09489250183105469
  - -0.10255908966064453
  - -0.10251951217651367
  - -0.10130500793457031
  - -0.10526752471923828
  - -0.1051187515258789
  - -0.1051025390625
  - -0.1413169652223587
  - -0.11292529106140137
  - -0.10558700561523438
  - -0.10492229461669922
  - -0.09906339645385742
  - -0.10194730758666992
  - -0.10755467414855957
  - -0.10409975051879883
  - -0.08807992935180664
  - -0.09962272644042969
  - -0.10852622985839844
  - -0.10694122314453125
  - -0.10339879989624023
  - -0.10217857360839844
  - -0.10251617431640625
  - -0.10503292083740234
  - -0.10315942764282227
  - -0.1044931411743164
  - -0.10463285446166992
  - -0.10441398620605469
  - -1.8933404684066772
  - -0.11133193969726562
  - -0.1061241626739502
  - -0.09063100814819336
  - -0.10587215423583984
  - -0.10071945190429688
  - -0.10163640975952148
  - -0.10614490509033203
  - -0.10489368438720703
  - -0.10431098937988281
  - -0.07298583537340164
  - -0.11189675331115723
  - -0.10619449615478516
  - -0.10572338104248047
  - -0.09991216659545898
  - -0.10718441009521484
  - -0.1079409122467041
  - -0.10472464561462402
  - -0.10117483139038086
  - -0.10367107391357422
  - -0.10396289825439453
  - -0.10513830184936523
  - -0.10555124282836914
  - -1.2311230897903442
  - -0.10502290725708008
  - -0.10521316528320312
  - -0.05835353210568428
  - -0.09868860244750977
  - -0.1426863670349121
  - -0.10482215881347656
  - -0.10463857650756836
  - -0.39469918608665466
- - -0.10655879974365234
  - -0.10521936416625977
  - -0.10544157028198242
  - -0.10387969017028809
  - -0.10215425491333008
  - -0.1055302619934082
  - -0.11145734786987305
  - -0.1022038459777832
  - -0.10595512390136719
  - -0.10465383529663086
  - -0.10651826858520508
  - -0.10082928836345673
  - -0.10924577713012695
  - -0.10556387901306152
  - -0.09489250183105469
  - -0.10255908966064453
  - -0.10251951217651367
  - -0.10130500793457031
  - -0.10526752471923828
  - -0.1051187515258789
  - -0.1051025390625
  - -0.1413169652223587
  - -0.11292529106140137
  - -0.10558700561523438
  - -0.10492229461669922
  - -0.09906339645385742
  - -0.10194730758666992
  - -0.10755467414855957
  - -0.10409975051879883
  - -0.08807992935180664
  - -0.09962272644042969
  - -0.10852622985839844
  - -0.10694122314453125
  - -0.10339879989624023
  - -0.10217857360839844
  - -0.10251617431640625
  - -0.10503292083740234
  - -0.10315942764282227
  - -0.1044931411743164
  - -0.10463285446166992
  - -0.10441398620605469
  - -3.9230191707611084
  - -0.11145448684692383
  - -0.10578489303588867
  - -0.09172773361206055
  - -0.10454416275024414
  - -0.10073423385620117
  - -0.10151529312133789
  - -0.10599327087402344
  - -0.1048121452331543
  - -0.10419750213623047
  - -0.0773242712020874
  - -0.11169195175170898
  - -0.10614991188049316
  - -0.1059865951538086
  - -0.09982633590698242
  - -0.1084432601928711
  - -0.10785770416259766
  - -0.1047062873840332
  - -0.10132837295532227
  - -0.10493659973144531
  - -0.10822105407714844
  - -0.10528850555419922
  - -0.10411405563354492
  - -0.07005249708890915
  - -0.10462760925292969
  - -0.10895204544067383
  - -0.10523223876953125
  - -0.1046290397644043
  - -0.29542243480682373
- - -0.10655879974365234
  - -0.10521936416625977
  - -0.10544157028198242
  - -0.10387969017028809
  - -0.10215425491333008
  - -0.1055302619934082
  - -0.11145734786987305
  - -0.1022038459777832
  - -0.10595512390136719
  - -0.10465383529663086
  - -0.10651826858520508
  - -0.10082928836345673
  - -0.10924577713012695
  - -0.10556387901306152
  - -0.09489250183105469
  - -0.10255908966064453
  - -0.10251951217651367
  - -0.10130500793457031
  - -0.10526752471923828
  - -0.1051187515258789
  - -0.1051025390625
  - -0.1413169652223587
  - -0.11292529106140137
  - -0.10558700561523438
  - -0.10492229461669922
  - -0.09906339645385742
  - -0.10194730758666992
  - -0.10755467414855957
  - -0.10409975051879883
  - -0.08807992935180664
  - -0.09962272644042969
  - -0.10852622985839844
  - -0.10694122314453125
  - -0.10339879989624023
  - -0.10217857360839844
  - -0.10251617431640625
  - -0.10503292083740234
  - -0.10315942764282227
  - -0.1044931411743164
  - -0.10463285446166992
  - -0.10441398620605469
  - -1.8933404684066772
  - -0.11133193969726562
  - -0.1061241626739502
  - -0.09063100814819336
  - -0.10587215423583984
  - -0.10071945190429688
  - -0.10163640975952148
  - -0.10614490509033203
  - -0.10489368438720703
  - -0.10431098937988281
  - -0.07298583537340164
  - -0.11189675331115723
  - -0.10619449615478516
  - -0.10572338104248047
  - -0.09991216659545898
  - -0.10718441009521484
  - -0.1079409122467041
  - -0.10472464561462402
  - -0.10117483139038086
  - -0.10367107391357422
  - -0.10396289825439453
  - -0.10513830184936523
  - -0.10555124282836914
  - -0.631287157535553
  - -0.10465478897094727
  - -0.10489797592163086
  - -0.13185234367847443
  - -0.10306835174560547
  - -0.47310304641723633
  - -0.10508584976196289
  - -0.1035761833190918
  - -0.7808147668838501
  - -0.10503005981445312
  - -0.10383033752441406
  - -0.09818994253873825
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'IsOfficial'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'IsOfficial'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Percentage'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
