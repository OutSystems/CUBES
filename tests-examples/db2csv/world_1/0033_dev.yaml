db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/country.csv
output: tests-examples/db2csv/world_1/tables/0033_dev.csv
raw_question: How many type of governments are in Africa? 
question_index: 734 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - Africa
join_columns: []
groupby_columns: []
functions:
 - count
columns:
 - governmentform
 - continent
filters:
 - '='
ieu: []
comment: |-
  SELECT count(DISTINCT GovernmentForm)
  FROM country
  WHERE Continent = "Africa"

sql: |-
  SELECT count(DISTINCT GovernmentForm)
  FROM country
  WHERE Continent = "Africa"
smbop_beam_join_columns:
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
smbop_beam_constants:
- - Africa
- - Africa
- - Africa
- - Africa
- - Africa
smbop_beam_functions:
- - count
- - count
- - count
- - count
- - count
smbop_beam_columns:
- - governmentform
  - continent
- - governmentform
  - region
- - governmentform
  - region
- - continent
- - governmentform
  - region
  - continent
smbop_beam_ieu:
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT COUNT( DISTINCT country.governmentform ) FROM country WHERE country.continent = 'Africa'
  - SELECT COUNT( DISTINCT country.governmentform ) FROM country WHERE country.region = 'Africa'
  - SELECT COUNT( DISTINCT country.governmentform ) FROM city, country WHERE country.region = 'Africa'
  - SELECT COUNT( * ) FROM country WHERE country.continent = 'Africa'
  - SELECT COUNT( DISTINCT country.governmentform ) FROM country WHERE country.continent = 'Africa' AND country.region = 'Africa'
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( DISTINCT country.governmentform ) FROM country WHERE country.continent = 'Africa'
  - SELECT COUNT( DISTINCT country.governmentform ) FROM country WHERE country.region = 'Africa'
  - SELECT COUNT( DISTINCT country.governmentform ) FROM city, country WHERE country.region = 'Africa'
  - SELECT COUNT( * ) FROM country WHERE country.continent = 'Africa'
  - SELECT COUNT( DISTINCT country.governmentform ) FROM country WHERE country.continent = 'Africa' AND country.region = 'Africa'
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- []
- []
- []
- []
- []
- []
- - countrycode
  - code
- - countrycode
  - code
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
ratsql_beam_constants:
- - Africa
- - Africa
- - Africa
- - Africa
- - Africa
- - Africa
- - Africa
  - '1'
- - Africa
- - Africa
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - governmentform
  - continent
- - continent
- - governmentform
  - region
- - governmentform
  - continent
- - governmentform
  - continent
- - governmentform
  - continent
- - governmentform
  - continent
- - governmentform
  - continent
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Continent = 'terminal'
  - SELECT Count(*) FROM country WHERE country.Continent = 'terminal'
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Region = 'terminal'
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE DISTINCT country.Continent = 'terminal'
  - SELECT Count(country.GovernmentForm) FROM country WHERE country.Continent = 'terminal'
  - SELECT DISTINCT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Continent = 'terminal'
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Continent = 'terminal' LIMIT 1
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'terminal'
  - SELECT Count(DISTINCT country.GovernmentForm) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Continent = 'Africa'
  - SELECT Count(*) FROM country WHERE country.Continent = 'Africa'
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Region = 'Africa'
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE DISTINCT country.Continent = 'Africa'
  - SELECT Count(country.GovernmentForm) FROM country WHERE country.Continent = 'Africa'
  - SELECT DISTINCT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Continent = 'Africa'
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Continent = 'Africa' LIMIT 1
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Africa'
  - SELECT Count(DISTINCT country.GovernmentForm) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = 'Africa'
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - True
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10541343688964844
  - -0.10543537139892578
  - -0.10665607452392578
  - -0.1038522720336914
  - -0.10088968276977539
  - -0.10414457321166992
  - -0.11812162399291992
  - -0.10272502899169922
  - -0.10567617416381836
  - -0.10436439514160156
  - -0.10637855529785156
  - -0.2528080940246582
  - -0.10069108009338379
  - -0.10541892051696777
  - -0.09392213821411133
  - -0.10238361358642578
  - -0.1013498306274414
  - -0.10107040405273438
  - -0.10416698455810547
  - -0.10440349578857422
  - -0.10656595230102539
  - -0.14490525424480438
  - -0.1128838062286377
  - -0.10537862777709961
  - -0.10514116287231445
  - -0.10070562362670898
  - -0.10224723815917969
  - -0.10817790031433105
  - -0.10464596748352051
  - -0.10011959075927734
  - -0.10336446762084961
  - -0.10899543762207031
  - -0.10515403747558594
  - -0.10352087020874023
  - -0.07743802666664124
- - -0.10541343688964844
  - -0.10543537139892578
  - -0.10665607452392578
  - -0.1038522720336914
  - -0.10088968276977539
  - -0.10414457321166992
  - -0.11812162399291992
  - -0.10272502899169922
  - -0.10567617416381836
  - -0.10436439514160156
  - -0.10637855529785156
  - -2.365328788757324
  - -0.11047196388244629
  - -0.1053609848022461
  - -0.0971064567565918
  - -0.1036829948425293
  - -0.1021728515625
  - -0.10106325149536133
  - -0.10441398620605469
  - -0.10455656051635742
  - -0.10591936111450195
  - -0.1435379683971405
  - -0.11271214485168457
  - -0.1053624153137207
  - -0.10501384735107422
  - -0.1005711555480957
  - -0.10198354721069336
  - -0.10802769660949707
  - -0.10465002059936523
  - -0.0996408462524414
  - -0.10302591323852539
  - -0.10901832580566406
  - -0.10502338409423828
  - -0.10338973999023438
  - -0.07491134107112885
- - -0.10541343688964844
  - -0.10543537139892578
  - -0.10665607452392578
  - -0.1038522720336914
  - -0.10088968276977539
  - -0.10414457321166992
  - -0.11812162399291992
  - -0.10272502899169922
  - -0.10567617416381836
  - -0.10436439514160156
  - -0.10637855529785156
  - -0.2528080940246582
  - -0.10069108009338379
  - -0.10541892051696777
  - -0.09392213821411133
  - -0.10238361358642578
  - -0.1013498306274414
  - -0.10107040405273438
  - -0.10416698455810547
  - -0.10440349578857422
  - -0.10656595230102539
  - -3.3695735931396484
  - -0.11315441131591797
  - -0.10523772239685059
  - -0.10504770278930664
  - -0.10063791275024414
  - -0.1027975082397461
  - -0.1081078052520752
  - -0.10465240478515625
  - -0.10052156448364258
  - -0.10330963134765625
  - -0.10900449752807617
  - -0.10512447357177734
  - -0.1035308837890625
  - -0.07832255959510803
- - -0.10541343688964844
  - -0.10543537139892578
  - -0.10665607452392578
  - -0.1038522720336914
  - -0.10088968276977539
  - -0.10414457321166992
  - -0.11812162399291992
  - -0.10272502899169922
  - -0.10567617416381836
  - -0.10436439514160156
  - -0.10637855529785156
  - -0.2528080940246582
  - -0.10069108009338379
  - -0.10541892051696777
  - -0.09392213821411133
  - -0.10238361358642578
  - -0.1013498306274414
  - -0.10107040405273438
  - -0.10416698455810547
  - -0.10440349578857422
  - -0.10656595230102539
  - -0.14490525424480438
  - -3.4311270713806152
  - -0.10575604438781738
  - -0.10432243347167969
  - -0.10063648223876953
  - -0.1020350456237793
  - -0.10814619064331055
  - -0.10468101501464844
  - -0.10001373291015625
  - -0.10335874557495117
  - -0.10902214050292969
  - -0.1049199104309082
  - -0.10349082946777344
  - -0.07762842625379562
- - -0.10541343688964844
  - -0.10543537139892578
  - -0.10665607452392578
  - -0.1038522720336914
  - -0.10088968276977539
  - -0.10414457321166992
  - -0.11812162399291992
  - -0.10272502899169922
  - -0.10567617416381836
  - -0.10436439514160156
  - -0.10637855529785156
  - -0.2528080940246582
  - -3.5006906986236572
  - -0.10551786422729492
  - -0.09317207336425781
  - -0.10293006896972656
  - -0.10179519653320312
  - -0.10108327865600586
  - -0.10419940948486328
  - -0.1044015884399414
  - -0.10640621185302734
  - -0.14317728579044342
  - -0.11283731460571289
  - -0.10538220405578613
  - -0.10509634017944336
  - -0.10070323944091797
  - -0.10222721099853516
  - -0.1081700325012207
  - -0.1046457290649414
  - -0.1000828742980957
  - -0.10335111618041992
  - -0.1089940071105957
  - -0.10514259338378906
  - -0.10351943969726562
  - -0.07739852368831635
- - -0.10541343688964844
  - -0.10543537139892578
  - -3.5325350761413574
  - -0.10386490821838379
  - -0.10078859329223633
  - -0.10438156127929688
  - -0.11386728286743164
  - -0.10279226303100586
  - -0.10534954071044922
  - -0.10438299179077148
  - -0.10645675659179688
  - -0.2566439211368561
  - -0.10090231895446777
  - -0.10542654991149902
  - -0.09385204315185547
  - -0.10250711441040039
  - -0.1014108657836914
  - -0.10106468200683594
  - -0.10415935516357422
  - -0.10440444946289062
  - -0.10657548904418945
  - -0.1452193260192871
  - -0.11286187171936035
  - -0.10538101196289062
  - -0.10517740249633789
  - -0.10071325302124023
  - -0.10225439071655273
  - -0.10817337036132812
  - -0.1046454906463623
  - -0.10008049011230469
  - -0.10336685180664062
  - -0.10899734497070312
  - -0.10512685775756836
  - -0.1035146713256836
  - -0.07756952196359634
- - -0.10541343688964844
  - -0.10543537139892578
  - -0.10665607452392578
  - -0.1038522720336914
  - -0.10088968276977539
  - -0.10414457321166992
  - -0.11812162399291992
  - -0.10272502899169922
  - -0.10567617416381836
  - -0.10436439514160156
  - -0.10637855529785156
  - -0.2528080940246582
  - -0.10069108009338379
  - -0.10541892051696777
  - -0.09392213821411133
  - -0.10238361358642578
  - -0.1013498306274414
  - -0.10107040405273438
  - -0.10416698455810547
  - -0.10440349578857422
  - -0.10656595230102539
  - -0.14490525424480438
  - -0.1128838062286377
  - -0.10537862777709961
  - -0.10514116287231445
  - -0.10070562362670898
  - -0.10224723815917969
  - -3.5455291271209717
  - -0.10493946075439453
  - -0.1009058952331543
  - -0.103302001953125
  - -0.10891866683959961
  - -0.10523557662963867
  - -0.10367488861083984
  - -0.07317886501550674
- - -0.10541343688964844
  - -0.10543537139892578
  - -0.10665607452392578
  - -0.1038522720336914
  - -0.10088968276977539
  - -0.10414457321166992
  - -0.11812162399291992
  - -0.10272502899169922
  - -0.10567617416381836
  - -0.10436439514160156
  - -0.10637855529785156
  - -0.2528080940246582
  - -0.10069108009338379
  - -0.10541892051696777
  - -0.09392213821411133
  - -0.10238361358642578
  - -0.1013498306274414
  - -0.10107040405273438
  - -0.10416698455810547
  - -0.10440349578857422
  - -0.10656595230102539
  - -0.14490525424480438
  - -0.1128838062286377
  - -0.10537862777709961
  - -0.10514116287231445
  - -0.10070562362670898
  - -0.10224723815917969
  - -0.10817790031433105
  - -0.10464596748352051
  - -0.10011959075927734
  - -0.10336446762084961
  - -0.10899543762207031
  - -0.10515403747558594
  - -0.10352087020874023
  - -3.6572418212890625
- - -0.10541343688964844
  - -0.10543537139892578
  - -0.10665607452392578
  - -0.1038522720336914
  - -0.10088968276977539
  - -0.10414457321166992
  - -0.11812162399291992
  - -0.10272502899169922
  - -0.10567617416381836
  - -0.10436439514160156
  - -0.10637855529785156
  - -0.2528080940246582
  - -0.10069108009338379
  - -0.10541892051696777
  - -0.09392213821411133
  - -0.10238361358642578
  - -0.1013498306274414
  - -0.10107040405273438
  - -0.10416698455810547
  - -0.10440349578857422
  - -0.10656595230102539
  - -0.14490525424480438
  - -0.1128838062286377
  - -0.10537862777709961
  - -0.10514116287231445
  - -0.10070562362670898
  - -0.10224723815917969
  - -0.10817790031433105
  - -0.10464596748352051
  - -0.10011959075927734
  - -0.10336446762084961
  - -0.10899543762207031
  - -0.10515403747558594
  - -0.10352087020874023
  - -3.6823742389678955
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
