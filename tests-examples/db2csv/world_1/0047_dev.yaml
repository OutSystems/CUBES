db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/countrylanguage.csv
 - tests-examples/db2csv/world_1/tables/country.csv
output: tests-examples/db2csv/world_1/tables/0047_dev.csv
raw_question: What are the names of nations where both English and French are official languages? 
question_index: 748 
constants:
 - T
 - French
 - English
join_columns:
 - code
 - countrycode
columns:
 - language
 - isofficial
filters:
 - '='
ieu:
 - intersect
comment: |-
  SELECT T1.Name
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T2.Language = "English"
    AND T2.IsOfficial = "T" INTERSECT
    SELECT T1.Name
    FROM country AS T1
    JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = "French"
    AND T2.IsOfficial = "T"

sql: |-
  SELECT T1.Name
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T2.Language = "English"
    AND T2.IsOfficial = "T" INTERSECT
    SELECT T1.Name
    FROM country AS T1
    JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = "French"
    AND T2.IsOfficial = "T"
smbop_beam_join_columns:
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- []
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
smbop_beam_constants:
- - French
  - t
  - English
- - French
  - t
  - English
- - French
  - t
  - English
- - French
  - t
  - English
- - French
  - t
  - English
- - French
  - t
  - English
- - French
  - t
  - English
- - French
  - t
  - English
- - French
  - t
  - English
- - French
  - t
  - English
smbop_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_columns:
- - language
- - language
- - language
- - language
- - isofficial
- - isofficial
- []
- - language
- - language
- - language
smbop_beam_ieu:
- - intersect
- - intersect
- - intersect
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- []
- - '='
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' INTERSECT SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' INTERSECT SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'English' INTERSECT SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.isofficial = 'English'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.isofficial = 'French'
  - SELECT country.name FROM country
  - SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'English'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'French'
smbop_beam_inferred_code_w_terminals:
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' INTERSECT SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' INTERSECT SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'English' INTERSECT SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.isofficial = 'English'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.isofficial = 'French'
  - SELECT country.name FROM country
  - SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'English'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'French'
ratsql_beam_join_columns:
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
ratsql_beam_constants:
- - French
  - t
  - English
- - French
  - t
  - English
- - French
  - t
  - English
- - French
  - t
  - English
- - French
  - t
  - English
- - French
  - t
  - English
- - French
  - t
  - English
ratsql_beam_functions:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_columns:
- - language
- - language
  - isofficial
- - language
- - language
- - language
- - language
- - language
ratsql_beam_ieu:
- - intersect
- - intersect
- - intersect
- - intersect
- - intersect
- - intersect
- - intersect
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.IsOfficial = 'terminal'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.LocalName FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.LocalName FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT countrylanguage.Language = 'terminal'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.IsOfficial = 't'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' INTERSECT SELECT country.LocalName FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French'
  - SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French'
  - SELECT country.LocalName FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT countrylanguage.Language = 'French'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' INTERSECT SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT countrylanguage.Language = 'English' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French'
  - SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French'
ratsql_beam_score_history:
- - -0.10465383529663086
  - -0.10449886322021484
  - -0.10495257377624512
  - -0.10437130928039551
  - -0.10258245468139648
  - -0.10254144668579102
  - -0.10561513900756836
  - -0.1017765998840332
  - -0.1049342155456543
  - -0.10475587844848633
  - -0.10491228103637695
  - -0.15631256997585297
  - -0.11061263084411621
  - -0.10550045967102051
  - -0.08761787414550781
  - -0.10070943832397461
  - -0.10451078414916992
  - -0.10073375701904297
  - -0.1050558090209961
  - -0.10509586334228516
  - -0.10604190826416016
  - -0.11705702543258667
  - -0.1105656623840332
  - -0.10569024085998535
  - -0.10372543334960938
  - -0.09971380233764648
  - -0.10550498962402344
  - -0.10701179504394531
  - -0.10463476181030273
  - -0.08526468276977539
  - -0.10595321655273438
  - -0.10486078262329102
  - -0.10925102233886719
  - -0.10386276245117188
  - -0.1007075309753418
  - -0.1028127670288086
  - -0.10459566116333008
  - -0.10207509994506836
  - -0.10446453094482422
  - -0.10475301742553711
  - -0.1045541763305664
  - -0.23007595539093018
  - -0.1123361587524414
  - -0.10594844818115234
  - -0.09059476852416992
  - -0.10391426086425781
  - -0.10170555114746094
  - -0.10189008712768555
  - -0.1048727035522461
  - -0.10512351989746094
  - -0.10464763641357422
  - -0.16254045069217682
  - -0.11177229881286621
  - -0.10605430603027344
  - -0.10450983047485352
  - -0.10162639617919922
  - -0.1067509651184082
  - -0.10756659507751465
  - -0.10482215881347656
  - -0.09855318069458008
  - -0.10556268692016602
  - -0.12307214736938477
  - -0.10498476028442383
  - -0.10401535034179688
  - -0.24272042512893677
  - -0.1048274040222168
  - -0.10358953475952148
  - -0.09226225316524506
  - -0.11773443222045898
  - -0.09903335571289062
  - -0.10558414459228516
  - -0.10335350036621094
  - -0.2737361788749695
  - -0.10515308380126953
  - -0.1037139892578125
  - -0.10168541222810745
- - -0.10465383529663086
  - -0.10449886322021484
  - -0.10495257377624512
  - -0.10437130928039551
  - -0.10258245468139648
  - -0.10254144668579102
  - -0.10561513900756836
  - -0.1017765998840332
  - -0.1049342155456543
  - -0.10475587844848633
  - -0.10491228103637695
  - -0.15631256997585297
  - -0.11061263084411621
  - -0.10550045967102051
  - -0.08761787414550781
  - -0.10070943832397461
  - -0.10451078414916992
  - -0.10073375701904297
  - -0.1050558090209961
  - -0.10509586334228516
  - -0.10604190826416016
  - -0.11705702543258667
  - -0.1105656623840332
  - -0.10569024085998535
  - -0.10372543334960938
  - -0.09971380233764648
  - -0.10550498962402344
  - -0.10701179504394531
  - -0.10463476181030273
  - -0.08526468276977539
  - -0.10595321655273438
  - -0.10486078262329102
  - -0.10925102233886719
  - -0.10386276245117188
  - -0.1007075309753418
  - -0.1028127670288086
  - -0.10459566116333008
  - -0.10207509994506836
  - -0.10446453094482422
  - -0.10475301742553711
  - -0.1045541763305664
  - -0.23007595539093018
  - -0.1123361587524414
  - -0.10594844818115234
  - -0.09059476852416992
  - -0.10391426086425781
  - -0.10170555114746094
  - -0.10189008712768555
  - -0.1048727035522461
  - -0.10512351989746094
  - -0.10464763641357422
  - -2.968113899230957
  - -0.11158585548400879
  - -0.10586905479431152
  - -0.10439014434814453
  - -0.10168981552124023
  - -0.10610485076904297
  - -0.10764837265014648
  - -0.1047813892364502
  - -0.09763717651367188
  - -0.10541820526123047
  - -0.12087297439575195
  - -0.10492658615112305
  - -0.1040048599243164
  - -0.23805120587348938
  - -0.10482072830200195
  - -0.10355329513549805
  - -0.09055133163928986
  - -0.11674213409423828
  - -0.09856224060058594
  - -0.10561847686767578
  - -0.10338354110717773
  - -0.27091267704963684
  - -0.10515069961547852
  - -0.10374927520751953
  - -0.1017807126045227
- - -0.10465383529663086
  - -0.10449886322021484
  - -0.10495257377624512
  - -0.10437130928039551
  - -0.10258245468139648
  - -0.10254144668579102
  - -0.10561513900756836
  - -0.1017765998840332
  - -0.1049342155456543
  - -0.10475587844848633
  - -0.10491228103637695
  - -0.15631256997585297
  - -0.11061263084411621
  - -0.10550045967102051
  - -0.08761787414550781
  - -0.10070943832397461
  - -0.10451078414916992
  - -0.10073375701904297
  - -0.1050558090209961
  - -0.10509586334228516
  - -0.10604190826416016
  - -0.11705702543258667
  - -0.1105656623840332
  - -0.10569024085998535
  - -0.10372543334960938
  - -0.09971380233764648
  - -0.10550498962402344
  - -0.10701179504394531
  - -0.10463476181030273
  - -0.08526468276977539
  - -0.10595321655273438
  - -0.10486078262329102
  - -0.10925102233886719
  - -0.10386276245117188
  - -0.1007075309753418
  - -0.1028127670288086
  - -0.10459566116333008
  - -0.10207509994506836
  - -0.10446453094482422
  - -0.10475301742553711
  - -0.1045541763305664
  - -3.399376392364502
  - -0.11140751838684082
  - -0.10559201240539551
  - -0.08846139907836914
  - -0.10510015487670898
  - -0.10162544250488281
  - -0.1018223762512207
  - -0.10507869720458984
  - -0.10501718521118164
  - -0.10460948944091797
  - -0.1540776938199997
  - -0.11174273490905762
  - -0.10606956481933594
  - -0.10463333129882812
  - -0.10162973403930664
  - -0.10671567916870117
  - -0.10756063461303711
  - -0.10483407974243164
  - -0.09873771667480469
  - -0.10603666305541992
  - -0.12296342849731445
  - -0.1051030158996582
  - -0.10414838790893555
  - -0.23437611758708954
  - -0.10497713088989258
  - -0.10382747650146484
  - -0.08385120332241058
  - -0.114044189453125
  - -0.0974278450012207
  - -0.1057133674621582
  - -0.10337400436401367
  - -0.27296778559684753
  - -0.10518169403076172
  - -0.10364198684692383
  - -0.10191260278224945
- - -0.10465383529663086
  - -0.10449886322021484
  - -0.10495257377624512
  - -0.10437130928039551
  - -0.10258245468139648
  - -0.10254144668579102
  - -0.10561513900756836
  - -0.1017765998840332
  - -0.1049342155456543
  - -0.10475587844848633
  - -0.10491228103637695
  - -0.15631256997585297
  - -0.11061263084411621
  - -0.10550045967102051
  - -0.08761787414550781
  - -0.10070943832397461
  - -0.10451078414916992
  - -0.10073375701904297
  - -0.1050558090209961
  - -0.10509586334228516
  - -0.10604190826416016
  - -0.11705702543258667
  - -0.1105656623840332
  - -0.10569024085998535
  - -0.10372543334960938
  - -0.09971380233764648
  - -0.10550498962402344
  - -0.10701179504394531
  - -0.10463476181030273
  - -0.08526468276977539
  - -0.10595321655273438
  - -0.10486078262329102
  - -0.10925102233886719
  - -0.10386276245117188
  - -0.1007075309753418
  - -0.1028127670288086
  - -0.10459566116333008
  - -0.10207509994506836
  - -0.10446453094482422
  - -0.10475301742553711
  - -0.1045541763305664
  - -0.23007595539093018
  - -0.1123361587524414
  - -0.10594844818115234
  - -0.09059476852416992
  - -0.10391426086425781
  - -0.10170555114746094
  - -0.10189008712768555
  - -0.1048727035522461
  - -0.10512351989746094
  - -0.10464763641357422
  - -0.16254045069217682
  - -0.11177229881286621
  - -0.10605430603027344
  - -0.10450983047485352
  - -0.10162639617919922
  - -0.1067509651184082
  - -0.10756659507751465
  - -0.10482215881347656
  - -0.09855318069458008
  - -0.10556268692016602
  - -0.12307214736938477
  - -0.10498476028442383
  - -0.10401535034179688
  - -0.24272042512893677
  - -0.1048274040222168
  - -0.10358953475952148
  - -0.09226225316524506
  - -0.11773443222045898
  - -0.09903335571289062
  - -0.10558414459228516
  - -0.10335350036621094
  - -2.966625213623047
  - -0.11050271987915039
  - -0.10363388061523438
  - -0.5860669016838074
- - -0.10465383529663086
  - -0.10449886322021484
  - -0.10495257377624512
  - -0.10437130928039551
  - -0.10258245468139648
  - -0.10254144668579102
  - -0.10561513900756836
  - -0.1017765998840332
  - -0.1049342155456543
  - -0.10475587844848633
  - -0.10491228103637695
  - -3.38919734954834
  - -0.11070370674133301
  - -0.10553526878356934
  - -0.08858871459960938
  - -0.1033468246459961
  - -0.10438776016235352
  - -0.10077333450317383
  - -0.10481452941894531
  - -0.10526084899902344
  - -0.1057591438293457
  - -0.114525705575943
  - -0.11058640480041504
  - -0.10561156272888184
  - -0.10362482070922852
  - -0.09974098205566406
  - -0.10585403442382812
  - -0.10705351829528809
  - -0.10463070869445801
  - -0.08518648147583008
  - -0.10527467727661133
  - -0.10493183135986328
  - -0.10928988456726074
  - -0.10385417938232422
  - -0.10059404373168945
  - -0.10280799865722656
  - -0.10459566116333008
  - -0.10207462310791016
  - -0.10446310043334961
  - -0.10475444793701172
  - -0.10455513000488281
  - -0.2296943962574005
  - -0.11233401298522949
  - -0.10594773292541504
  - -0.09057855606079102
  - -0.1038961410522461
  - -0.10170555114746094
  - -0.10189151763916016
  - -0.1048731803894043
  - -0.10512304306030273
  - -0.10465049743652344
  - -0.16257014870643616
  - -0.11177277565002441
  - -0.10605359077453613
  - -0.10451078414916992
  - -0.10160589218139648
  - -0.1068410873413086
  - -0.10756468772888184
  - -0.10482144355773926
  - -0.09860038757324219
  - -0.1056051254272461
  - -0.12307500839233398
  - -0.10498714447021484
  - -0.10402059555053711
  - -0.2424890398979187
  - -0.10483074188232422
  - -0.10358667373657227
  - -0.09205417335033417
  - -0.11769294738769531
  - -0.09899377822875977
  - -0.10558700561523438
  - -0.10335445404052734
  - -0.2737780511379242
  - -0.10515403747558594
  - -0.10371208190917969
  - -0.10170458257198334
- - -0.10465383529663086
  - -0.10449886322021484
  - -0.10495257377624512
  - -0.10437130928039551
  - -0.10258245468139648
  - -0.10254144668579102
  - -0.10561513900756836
  - -0.1017765998840332
  - -0.1049342155456543
  - -0.10475587844848633
  - -0.10491228103637695
  - -0.15631256997585297
  - -0.11061263084411621
  - -0.10550045967102051
  - -0.08761787414550781
  - -0.10070943832397461
  - -0.10451078414916992
  - -0.10073375701904297
  - -0.1050558090209961
  - -0.10509586334228516
  - -0.10604190826416016
  - -0.11705702543258667
  - -0.1105656623840332
  - -0.10569024085998535
  - -0.10372543334960938
  - -0.09971380233764648
  - -0.10550498962402344
  - -0.10701179504394531
  - -0.10463476181030273
  - -0.08526468276977539
  - -0.10595321655273438
  - -0.10486078262329102
  - -0.10925102233886719
  - -0.10386276245117188
  - -0.1007075309753418
  - -0.1028127670288086
  - -0.10459566116333008
  - -0.10207509994506836
  - -0.10446453094482422
  - -0.10475301742553711
  - -0.1045541763305664
  - -0.23007595539093018
  - -0.1123361587524414
  - -0.10594844818115234
  - -0.09059476852416992
  - -0.10391426086425781
  - -0.10170555114746094
  - -0.10189008712768555
  - -0.1048727035522461
  - -0.10512351989746094
  - -0.10464763641357422
  - -0.16254045069217682
  - -3.4370484352111816
  - -0.10595130920410156
  - -0.10445165634155273
  - -0.10156536102294922
  - -0.10652017593383789
  - -0.10758852958679199
  - -0.10482072830200195
  - -0.09879636764526367
  - -0.10591506958007812
  - -0.1220850944519043
  - -0.1049957275390625
  - -0.1040196418762207
  - -0.2424299269914627
  - -0.10483407974243164
  - -0.10358428955078125
  - -0.0920933187007904
  - -0.11797189712524414
  - -0.09909296035766602
  - -0.10558462142944336
  - -0.10335111618041992
  - -0.27361640334129333
  - -0.10515689849853516
  - -0.1036977767944336
  - -0.10175971686840057
- - -0.10465383529663086
  - -0.10449886322021484
  - -0.10495257377624512
  - -0.10437130928039551
  - -0.10258245468139648
  - -0.10254144668579102
  - -0.10561513900756836
  - -0.1017765998840332
  - -0.1049342155456543
  - -0.10475587844848633
  - -0.10491228103637695
  - -0.15631256997585297
  - -0.11061263084411621
  - -0.10550045967102051
  - -0.08761787414550781
  - -0.10070943832397461
  - -0.10451078414916992
  - -0.10073375701904297
  - -0.1050558090209961
  - -0.10509586334228516
  - -0.10604190826416016
  - -0.11705702543258667
  - -0.1105656623840332
  - -0.10569024085998535
  - -0.10372543334960938
  - -0.09971380233764648
  - -0.10550498962402344
  - -0.10701179504394531
  - -0.10463476181030273
  - -0.08526468276977539
  - -0.10595321655273438
  - -0.10486078262329102
  - -0.10925102233886719
  - -0.10386276245117188
  - -0.1007075309753418
  - -0.1028127670288086
  - -0.10459566116333008
  - -0.10207509994506836
  - -0.10446453094482422
  - -0.10475301742553711
  - -0.1045541763305664
  - -0.23007595539093018
  - -3.44954252243042
  - -0.10687661170959473
  - -0.08909940719604492
  - -0.10601282119750977
  - -0.10199117660522461
  - -0.1016988754272461
  - -0.10455608367919922
  - -0.10490226745605469
  - -0.1045689582824707
  - -0.15176139771938324
  - -0.11179471015930176
  - -0.10606575012207031
  - -0.10449600219726562
  - -0.10162544250488281
  - -0.10665607452392578
  - -0.10756373405456543
  - -0.10483527183532715
  - -0.09839725494384766
  - -0.1056065559387207
  - -0.12292337417602539
  - -0.10498523712158203
  - -0.10401773452758789
  - -0.24228931963443756
  - -0.10483121871948242
  - -0.10358524322509766
  - -0.09220822900533676
  - -0.11783218383789062
  - -0.09897661209106445
  - -0.10558938980102539
  - -0.10335636138916016
  - -0.27348873019218445
  - -0.10515451431274414
  - -0.10371923446655273
  - -0.10170426219701767
- - -0.10465383529663086
  - -0.10449886322021484
  - -0.10495257377624512
  - -0.10437130928039551
  - -0.10258245468139648
  - -0.10254144668579102
  - -0.10561513900756836
  - -0.1017765998840332
  - -0.1049342155456543
  - -0.10475587844848633
  - -0.10491228103637695
  - -0.15631256997585297
  - -0.11061263084411621
  - -0.10550045967102051
  - -0.08761787414550781
  - -0.10070943832397461
  - -0.10451078414916992
  - -0.10073375701904297
  - -0.1050558090209961
  - -0.10509586334228516
  - -0.10604190826416016
  - -0.11705702543258667
  - -3.462817668914795
  - -0.10510754585266113
  - -0.10335969924926758
  - -0.10038900375366211
  - -0.10459613800048828
  - -0.10704970359802246
  - -0.10464358329772949
  - -0.08664798736572266
  - -0.10592269897460938
  - -0.10507822036743164
  - -0.10923266410827637
  - -0.10389542579650879
  - -0.10083246231079102
  - -0.10283708572387695
  - -0.10460042953491211
  - -0.10206413269042969
  - -0.1044621467590332
  - -0.10475492477416992
  - -0.10455465316772461
  - -0.23295539617538452
  - -0.11234903335571289
  - -0.10595297813415527
  - -0.09065961837768555
  - -0.10391855239868164
  - -0.10171842575073242
  - -0.10188770294189453
  - -0.10486698150634766
  - -0.10512304306030273
  - -0.104644775390625
  - -0.16262120008468628
  - -0.1117711067199707
  - -0.10605359077453613
  - -0.10450601577758789
  - -0.10161256790161133
  - -0.10669517517089844
  - -0.10756516456604004
  - -0.10482192039489746
  - -0.09853744506835938
  - -0.10558366775512695
  - -0.12310266494750977
  - -0.10498571395874023
  - -0.10400962829589844
  - -0.2427486777305603
  - -0.1048274040222168
  - -0.10358572006225586
  - -0.09220355749130249
  - -0.11773061752319336
  - -0.09903144836425781
  - -0.10558462142944336
  - -0.10335493087768555
  - -0.2737009823322296
  - -0.10515356063842773
  - -0.1037139892578125
  - -0.10166765004396439
- - -0.10465383529663086
  - -0.10449886322021484
  - -0.10495257377624512
  - -0.10437130928039551
  - -0.10258245468139648
  - -0.10254144668579102
  - -0.10561513900756836
  - -0.1017765998840332
  - -0.1049342155456543
  - -0.10475587844848633
  - -0.10491228103637695
  - -0.15631256997585297
  - -3.4751415252685547
  - -0.1041269302368164
  - -0.09003448486328125
  - -0.10133075714111328
  - -0.10448980331420898
  - -0.10079717636108398
  - -0.10507917404174805
  - -0.10497903823852539
  - -0.10592174530029297
  - -0.11676643043756485
  - -0.11055517196655273
  - -0.10570502281188965
  - -0.10367202758789062
  - -0.09975385665893555
  - -0.10552740097045898
  - -0.1070096492767334
  - -0.10464048385620117
  - -0.08548927307128906
  - -0.10595560073852539
  - -0.10484790802001953
  - -0.10926675796508789
  - -0.10385465621948242
  - -0.10069608688354492
  - -0.10281085968017578
  - -0.10459280014038086
  - -0.10207509994506836
  - -0.10446453094482422
  - -0.10475301742553711
  - -0.1045527458190918
  - -0.23005104064941406
  - -0.11233663558959961
  - -0.10594797134399414
  - -0.09058952331542969
  - -0.10390806198120117
  - -0.10170459747314453
  - -0.10189008712768555
  - -0.10487556457519531
  - -0.10512304306030273
  - -0.1046452522277832
  - -0.1624571532011032
  - -0.1117711067199707
  - -0.10605454444885254
  - -0.10450983047485352
  - -0.10163211822509766
  - -0.10674476623535156
  - -0.10756540298461914
  - -0.10482215881347656
  - -0.09853887557983398
  - -0.1055598258972168
  - -0.12302780151367188
  - -0.10498476028442383
  - -0.10401535034179688
  - -0.24268881976604462
  - -0.1048274040222168
  - -0.10358905792236328
  - -0.09225486218929291
  - -0.11769485473632812
  - -0.09904670715332031
  - -0.10558462142944336
  - -0.10335397720336914
  - -0.27373552322387695
  - -0.10515308380126953
  - -0.1037144660949707
  - -0.10166721791028976
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'IsOfficial'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'LocalName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'LocalName'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
