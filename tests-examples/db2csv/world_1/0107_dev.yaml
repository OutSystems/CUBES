db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/country.csv
output: tests-examples/db2csv/world_1/tables/0107_dev.csv
raw_question: What are the names of the countries that are in the continent of Europe and have a population of 80000? 
question_index: 808 
constants:
 - Europe
 - 80000
columns:
 - continent
 - population
filters:
 - '='
comment: |-
  SELECT Name
  FROM country
  WHERE continent = "Europe"
    AND Population = "80000"

sql: |-
  SELECT Name
  FROM country
  WHERE continent = "Europe"
    AND Population = "80000"
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- - region
- - region
- - continent
- - continent
- - region
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
smbop_beam_constants:
- - Europe
  - 80000
- - Europe
  - 80000
- - Europe
  - 80000
- - Europe
  - 80000
- - Europe
  - 80000
- - Europe
  - 80000
- - Europe
  - 80000
- - Europe
  - 80000
- - Europe
  - 80000
- - Europe
  - 80000
smbop_beam_functions:
- []
- []
- - count
- []
- []
- - count
- - count
- - avg
- - avg
- - avg
smbop_beam_columns:
- - continent
  - population
- - continent
  - population
- - 0000
  - population
  - continent
- - continent
  - population
- - continent
  - population
- - 0000
  - population
  - continent
- - 0000
  - population
  - continent
- - continent
  - name
  - population
- - continent
  - name
  - population
- - continent
  - name
  - population
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT country.name FROM country WHERE country.continent = 'Europe' AND country.population = 80000
  - SELECT country.localname FROM country WHERE country.continent = 'Europe' AND country.population = 80000
  - SELECT COUNT( DISTINCT 0000 ) FROM country WHERE country.continent = 'Europe' AND country.population = 80000
  - SELECT country.region FROM country WHERE country.continent = 'Europe' AND country.population = 80000
  - SELECT country.region FROM country WHERE country.continent = 'Europe' AND country.population = 80000 GROUP BY country.region
  - SELECT COUNT( DISTINCT 0000 ) FROM country WHERE country.continent = 'Europe' AND country.population = 80000 GROUP BY country.region
  - SELECT COUNT( DISTINCT 0000 ) FROM country WHERE country.continent = 'Europe' AND country.population = 80000 GROUP BY country.continent
  - SELECT AVG( country.name ) FROM country WHERE country.continent = 'Europe' AND country.population = 80000 GROUP BY country.continent
  - SELECT AVG( country.name ) FROM country WHERE country.continent = 'Europe' AND country.population = 80000 GROUP BY country.region
  - SELECT AVG( country.name ) FROM country WHERE country.continent = 'Europe' AND country.population = 80000
smbop_beam_inferred_code_w_terminals:
  - SELECT country.name FROM country WHERE country.continent = 'Europe' AND country.population = 80000
  - SELECT country.localname FROM country WHERE country.continent = 'Europe' AND country.population = 80000
  - SELECT COUNT( DISTINCT 0000 ) FROM country WHERE country.continent = 'Europe' AND country.population = 80000
  - SELECT country.region FROM country WHERE country.continent = 'Europe' AND country.population = 80000
  - SELECT country.region FROM country WHERE country.continent = 'Europe' AND country.population = 80000 GROUP BY country.region
  - SELECT COUNT( DISTINCT 0000 ) FROM country WHERE country.continent = 'Europe' AND country.population = 80000 GROUP BY country.region
  - SELECT COUNT( DISTINCT 0000 ) FROM country WHERE country.continent = 'Europe' AND country.population = 80000 GROUP BY country.continent
  - SELECT AVG( country.name ) FROM country WHERE country.continent = 'Europe' AND country.population = 80000 GROUP BY country.continent
  - SELECT AVG( country.name ) FROM country WHERE country.continent = 'Europe' AND country.population = 80000 GROUP BY country.region
  - SELECT AVG( country.name ) FROM country WHERE country.continent = 'Europe' AND country.population = 80000
ratsql_beam_join_columns:
- []
- []
- []
- []
- []
- []
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
ratsql_beam_constants:
- - Europe
  - 80000
- - Europe
  - 80000
- - Europe
  - 80000
- - Europe
  - 80000
- - Europe
  - 80000
- - Europe
  - 80000
ratsql_beam_functions:
- []
- []
- []
- []
- []
- []
ratsql_beam_columns:
- - continent
  - population
- - continent
  - population
- - continent
  - population
- - continent
  - population
- - continent
  - population
- - continent
  - population
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
  - '<'
- - '='
  - '>'
- - '='
  - '<'
- - '='
  - '>'
- - '='
  - '<'
- - '='
  - '>'
ratsql_beam_inferred_code:
  - SELECT country.Name FROM country WHERE country.Continent = 'terminal' AND country.Population < 'terminal'
  - SELECT country.Name FROM country WHERE country.Continent = 'terminal' AND country.Population > 'terminal'
  - SELECT DISTINCT country.Name FROM country WHERE country.Continent = 'terminal' AND country.Population < 'terminal'
  - SELECT DISTINCT country.Name FROM country WHERE country.Continent = 'terminal' AND country.Population > 'terminal'
  - SELECT country.Name FROM country WHERE DISTINCT country.Continent = 'terminal' AND country.Population > 'terminal'
  - SELECT country.Name FROM country WHERE country.Continent = 'terminal' AND DISTINCT country.Population < 'terminal'
  - SELECT country.Name FROM country WHERE country.Continent = 'terminal' AND DISTINCT country.Population > 'terminal'
  - SELECT country.Name FROM country WHERE DISTINCT country.Continent = 'terminal' AND country.Population < 'terminal'
  - SELECT country.Name FROM country WHERE country.Continent = 'terminal' AND country.Population < 'terminal' LIMIT 1
  - SELECT country.Name FROM country WHERE country.Continent = 'terminal' AND country.Population > 'terminal' LIMIT 1
ratsql_beam_inferred_code_w_terminals:
  - SELECT country.Name FROM country WHERE country.Continent = 'Europe' AND country.Population < 80000
  - SELECT country.Name FROM country WHERE country.Continent = 'Europe' AND country.Population > 80000
  - SELECT DISTINCT country.Name FROM country WHERE country.Continent = 'Europe' AND country.Population < 80000
  - SELECT DISTINCT country.Name FROM country WHERE country.Continent = 'Europe' AND country.Population > 80000
  - SELECT country.Name FROM country WHERE DISTINCT country.Continent = 'Europe' AND country.Population > 80000
  - SELECT country.Name FROM country WHERE country.Continent = 'Europe' AND DISTINCT country.Population < 80000
  - SELECT country.Name FROM country WHERE country.Continent = 'Europe' AND DISTINCT country.Population > 80000
  - SELECT country.Name FROM country WHERE DISTINCT country.Continent = 'Europe' AND country.Population < 80000
  - SELECT country.Name FROM country WHERE country.Continent = 'Europe' AND country.Population < 80000 LIMIT 1
  - SELECT country.Name FROM country WHERE country.Continent = 'Europe' AND country.Population > 80000 LIMIT 1
ratsql_beam_score_history:
- - -0.10340118408203125
  - -0.10476350784301758
  - -0.11451482772827148
  - -0.10440969467163086
  - -0.10086297988891602
  - -0.10230350494384766
  - -0.10441350936889648
  - -0.10158157348632812
  - -0.10481977462768555
  - -0.10543394088745117
  - -0.1054987907409668
  - -0.09742295742034912
  - -0.11162090301513672
  - -0.10548758506774902
  - -0.09235048294067383
  - -0.10364198684692383
  - -0.09555435180664062
  - -0.10271501541137695
  - -0.100189208984375
  - -0.1010894775390625
  - -0.10468435287475586
  - -0.10402393341064453
  - -0.10557317733764648
  - -0.06745022535324097
  - -0.11210966110229492
  - -0.10557961463928223
  - -0.10327672958374023
  - -0.8997178077697754
  - -0.09146785736083984
  - -0.1018667221069336
  - -0.10516357421875
  - -0.1049041748046875
  - -0.10543441772460938
  - -0.056833039969205856
  - -0.10955238342285156
  - -0.10588407516479492
  - -0.1032257080078125
  - -0.10184478759765625
  - -0.10277557373046875
  - -0.1079263687133789
  - -0.10467338562011719
  - -0.09767675399780273
  - -0.10525798797607422
  - -0.11154365539550781
  - -0.10507917404174805
  - -0.10405540466308594
  - -0.07912030071020126
- - -0.10340118408203125
  - -0.10476350784301758
  - -0.11451482772827148
  - -0.10440969467163086
  - -0.10086297988891602
  - -0.10230350494384766
  - -0.10441350936889648
  - -0.10158157348632812
  - -0.10481977462768555
  - -0.10543394088745117
  - -0.1054987907409668
  - -0.09742295742034912
  - -0.11162090301513672
  - -0.10548758506774902
  - -0.09235048294067383
  - -0.10364198684692383
  - -0.09555435180664062
  - -0.10271501541137695
  - -0.100189208984375
  - -0.1010894775390625
  - -0.10468435287475586
  - -0.10402393341064453
  - -0.10557317733764648
  - -0.06745022535324097
  - -0.11210966110229492
  - -0.10557961463928223
  - -0.10327672958374023
  - -0.8968939781188965
  - -0.09253740310668945
  - -0.10185575485229492
  - -0.1044626235961914
  - -0.1049032211303711
  - -0.10482406616210938
  - -0.058790989220142365
  - -0.10968995094299316
  - -0.10605669021606445
  - -0.10773420333862305
  - -0.10199975967407227
  - -0.10305023193359375
  - -0.10797500610351562
  - -0.1047205924987793
  - -0.09728622436523438
  - -0.10523128509521484
  - -0.11190557479858398
  - -0.10508203506469727
  - -0.10407304763793945
  - -0.07978488504886627
- - -0.10340118408203125
  - -0.10476350784301758
  - -3.311002731323242
  - -0.10432696342468262
  - -0.09996843338012695
  - -0.10230875015258789
  - -0.10436630249023438
  - -0.10161638259887695
  - -0.10483741760253906
  - -0.10533428192138672
  - -0.10543203353881836
  - -0.09705887734889984
  - -0.1115725040435791
  - -0.10550212860107422
  - -0.09261322021484375
  - -0.10443639755249023
  - -0.09541082382202148
  - -0.10277271270751953
  - -0.10020017623901367
  - -0.10108041763305664
  - -0.10470342636108398
  - -0.10402345657348633
  - -0.10557413101196289
  - -0.0674387514591217
  - -0.11210250854492188
  - -0.10558176040649414
  - -0.1032719612121582
  - -0.8940873146057129
  - -0.09155607223510742
  - -0.1018667221069336
  - -0.10515785217285156
  - -0.10489845275878906
  - -0.10543107986450195
  - -0.05714033916592598
  - -0.10954403877258301
  - -0.10588550567626953
  - -0.10320758819580078
  - -0.10185480117797852
  - -0.10277557373046875
  - -0.1079256534576416
  - -0.10467743873596191
  - -0.0976872444152832
  - -0.10524749755859375
  - -0.11155462265014648
  - -0.10508012771606445
  - -0.10405874252319336
  - -0.07912085205316544
- - -0.10340118408203125
  - -0.10476350784301758
  - -3.311002731323242
  - -0.10432696342468262
  - -0.09996843338012695
  - -0.10230875015258789
  - -0.10436630249023438
  - -0.10161638259887695
  - -0.10483741760253906
  - -0.10533428192138672
  - -0.10543203353881836
  - -0.09705887734889984
  - -0.1115725040435791
  - -0.10550212860107422
  - -0.09261322021484375
  - -0.10443639755249023
  - -0.09541082382202148
  - -0.10277271270751953
  - -0.10020017623901367
  - -0.10108041763305664
  - -0.10470342636108398
  - -0.10402345657348633
  - -0.10557413101196289
  - -0.0674387514591217
  - -0.11210250854492188
  - -0.10558176040649414
  - -0.1032719612121582
  - -0.9025282859802246
  - -0.09253978729248047
  - -0.1018519401550293
  - -0.1044607162475586
  - -0.10490655899047852
  - -0.1048283576965332
  - -0.05922510847449303
  - -0.10968399047851562
  - -0.10605907440185547
  - -0.10784673690795898
  - -0.10201740264892578
  - -0.10304927825927734
  - -0.10797572135925293
  - -0.10472464561462402
  - -0.0972905158996582
  - -0.10522031784057617
  - -0.11191463470458984
  - -0.10508298873901367
  - -0.10407447814941406
  - -0.07981592416763306
- - -0.10340118408203125
  - -0.10476350784301758
  - -0.11451482772827148
  - -0.10440969467163086
  - -0.10086297988891602
  - -0.10230350494384766
  - -0.10441350936889648
  - -0.10158157348632812
  - -0.10481977462768555
  - -0.10543394088745117
  - -0.1054987907409668
  - -0.09742295742034912
  - -0.11162090301513672
  - -0.10548758506774902
  - -0.09235048294067383
  - -0.10364198684692383
  - -0.09555435180664062
  - -0.10271501541137695
  - -0.100189208984375
  - -0.1010894775390625
  - -0.10468435287475586
  - -0.10402393341064453
  - -0.10557317733764648
  - -0.06745022535324097
  - -3.439652919769287
  - -0.1055135726928711
  - -0.10312891006469727
  - -0.797515869140625
  - -0.09323883056640625
  - -0.10187196731567383
  - -0.10441398620605469
  - -0.10494375228881836
  - -0.10471200942993164
  - -0.059006217867136
  - -0.1097109317779541
  - -0.10605144500732422
  - -0.10741949081420898
  - -0.10200214385986328
  - -0.1031346321105957
  - -0.1079707145690918
  - -0.10472345352172852
  - -0.09731531143188477
  - -0.10518121719360352
  - -0.11182880401611328
  - -0.10508012771606445
  - -0.10405826568603516
  - -0.07989087700843811
- - -0.10340118408203125
  - -0.10476350784301758
  - -0.11451482772827148
  - -0.10440969467163086
  - -0.10086297988891602
  - -0.10230350494384766
  - -0.10441350936889648
  - -0.10158157348632812
  - -0.10481977462768555
  - -0.10543394088745117
  - -0.1054987907409668
  - -0.09742295742034912
  - -0.11162090301513672
  - -0.10548758506774902
  - -0.09235048294067383
  - -0.10364198684692383
  - -0.09555435180664062
  - -0.10271501541137695
  - -0.100189208984375
  - -0.1010894775390625
  - -0.10468435287475586
  - -0.10402393341064453
  - -0.10557317733764648
  - -0.06745022535324097
  - -0.11210966110229492
  - -0.10557961463928223
  - -0.10327672958374023
  - -0.8997178077697754
  - -0.09146785736083984
  - -0.1018667221069336
  - -0.10516357421875
  - -0.1049041748046875
  - -0.10543441772460938
  - -0.056833039969205856
  - -3.486290216445923
  - -0.1060173511505127
  - -0.10363054275512695
  - -0.1019124984741211
  - -0.10274410247802734
  - -0.10791301727294922
  - -0.10465025901794434
  - -0.09752988815307617
  - -0.10527276992797852
  - -0.11068010330200195
  - -0.10509777069091797
  - -0.10392189025878906
  - -0.0776933953166008
- - -0.10340118408203125
  - -0.10476350784301758
  - -0.11451482772827148
  - -0.10440969467163086
  - -0.10086297988891602
  - -0.10230350494384766
  - -0.10441350936889648
  - -0.10158157348632812
  - -0.10481977462768555
  - -0.10543394088745117
  - -0.1054987907409668
  - -0.09742295742034912
  - -0.11162090301513672
  - -0.10548758506774902
  - -0.09235048294067383
  - -0.10364198684692383
  - -0.09555435180664062
  - -0.10271501541137695
  - -0.100189208984375
  - -0.1010894775390625
  - -0.10468435287475586
  - -0.10402393341064453
  - -0.10557317733764648
  - -0.06745022535324097
  - -0.11210966110229492
  - -0.10557961463928223
  - -0.10327672958374023
  - -0.8968939781188965
  - -0.09253740310668945
  - -0.10185575485229492
  - -0.1044626235961914
  - -0.1049032211303711
  - -0.10482406616210938
  - -0.058790989220142365
  - -3.4831840991973877
  - -0.10621929168701172
  - -0.10680913925170898
  - -0.10179662704467773
  - -0.10288763046264648
  - -0.10798907279968262
  - -0.10472774505615234
  - -0.09722900390625
  - -0.1051177978515625
  - -0.11128759384155273
  - -0.10505104064941406
  - -0.10387086868286133
  - -0.07884468883275986
- - -0.10340118408203125
  - -0.10476350784301758
  - -0.11451482772827148
  - -0.10440969467163086
  - -0.10086297988891602
  - -0.10230350494384766
  - -0.10441350936889648
  - -0.10158157348632812
  - -0.10481977462768555
  - -0.10543394088745117
  - -0.1054987907409668
  - -0.09742295742034912
  - -0.11162090301513672
  - -0.10548758506774902
  - -0.09235048294067383
  - -0.10364198684692383
  - -0.09555435180664062
  - -0.10271501541137695
  - -0.100189208984375
  - -0.1010894775390625
  - -0.10468435287475586
  - -0.10402393341064453
  - -0.10557317733764648
  - -0.06745022535324097
  - -3.439652919769287
  - -0.1055135726928711
  - -0.10312891006469727
  - -0.9873638153076172
  - -0.08971691131591797
  - -0.10186147689819336
  - -0.10502147674560547
  - -0.10482263565063477
  - -0.10541391372680664
  - -0.056258946657180786
  - -0.10956692695617676
  - -0.10588598251342773
  - -0.10310506820678711
  - -0.10185003280639648
  - -0.10281229019165039
  - -0.10792779922485352
  - -0.10468006134033203
  - -0.09772109985351562
  - -0.10520267486572266
  - -0.11147689819335938
  - -0.10507726669311523
  - -0.1040496826171875
  - -0.0794479176402092
- - -0.10340118408203125
  - -0.10476350784301758
  - -0.11451482772827148
  - -0.10440969467163086
  - -0.10086297988891602
  - -0.10230350494384766
  - -0.10441350936889648
  - -0.10158157348632812
  - -0.10481977462768555
  - -0.10543394088745117
  - -0.1054987907409668
  - -0.09742295742034912
  - -0.11162090301513672
  - -0.10548758506774902
  - -0.09235048294067383
  - -0.10364198684692383
  - -0.09555435180664062
  - -0.10271501541137695
  - -0.100189208984375
  - -0.1010894775390625
  - -0.10468435287475586
  - -0.10402393341064453
  - -0.10557317733764648
  - -0.06745022535324097
  - -0.11210966110229492
  - -0.10557961463928223
  - -0.10327672958374023
  - -0.8997178077697754
  - -0.09146785736083984
  - -0.1018667221069336
  - -0.10516357421875
  - -0.1049041748046875
  - -0.10543441772460938
  - -0.056833039969205856
  - -0.10955238342285156
  - -0.10588407516479492
  - -0.1032257080078125
  - -0.10184478759765625
  - -0.10277557373046875
  - -3.5462353229522705
  - -0.10451316833496094
  - -0.09765815734863281
  - -0.10451316833496094
  - -0.11081790924072266
  - -0.10489940643310547
  - -0.10412406921386719
  - -0.07757603377103806
- - -0.10340118408203125
  - -0.10476350784301758
  - -0.11451482772827148
  - -0.10440969467163086
  - -0.10086297988891602
  - -0.10230350494384766
  - -0.10441350936889648
  - -0.10158157348632812
  - -0.10481977462768555
  - -0.10543394088745117
  - -0.1054987907409668
  - -0.09742295742034912
  - -0.11162090301513672
  - -0.10548758506774902
  - -0.09235048294067383
  - -0.10364198684692383
  - -0.09555435180664062
  - -0.10271501541137695
  - -0.100189208984375
  - -0.1010894775390625
  - -0.10468435287475586
  - -0.10402393341064453
  - -0.10557317733764648
  - -0.06745022535324097
  - -0.11210966110229492
  - -0.10557961463928223
  - -0.10327672958374023
  - -0.8968939781188965
  - -0.09253740310668945
  - -0.10185575485229492
  - -0.1044626235961914
  - -0.1049032211303711
  - -0.10482406616210938
  - -0.058790989220142365
  - -0.10968995094299316
  - -0.10605669021606445
  - -0.10773420333862305
  - -0.10199975967407227
  - -0.10305023193359375
  - -3.544741630554199
  - -0.1048285961151123
  - -0.09745931625366211
  - -0.10445451736450195
  - -0.11103630065917969
  - -0.10491514205932617
  - -0.10411357879638672
  - -0.07748060673475266
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'And')
  - ('And', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'And')
  - ('And', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'And')
  - ('And', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'And')
  - ('And', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'And')
  - ('And', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'And')
  - ('And', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'And')
  - ('And', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'And')
  - ('And', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'And')
  - ('And', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'And')
  - ('And', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
