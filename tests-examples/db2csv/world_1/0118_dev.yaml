db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/countrylanguage.csv
output: tests-examples/db2csv/world_1/tables/0118_dev.csv
raw_question: Count the number of countries for which Spanish is the predominantly spoken language. 
question_index: 819 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - Spanish
join_columns: []
groupby_columns:
 - countrycode
orderby_columns: []
functions:
 - max
 - count
columns:
 - percentage
 - language
filters:
 - '='
ieu: []
comment: |-
  SELECT count(*),
         max(Percentage)
  FROM countrylanguage
  WHERE LANGUAGE = "Spanish"
  GROUP BY CountryCode

sql: |-
  SELECT count(*),
         max(Percentage)
  FROM countrylanguage
  WHERE LANGUAGE = "Spanish"
  GROUP BY CountryCode
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- - percentage
- []
smbop_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
smbop_beam_constants:
- - Spanish
- - Spanish
- - Spanish
- - Spanish
- - Spanish
- - Spanish
smbop_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
smbop_beam_columns:
- - percentage
  - language
- - percentage
  - language
- - percentage
  - language
- - language
- - percentage
  - language
- - language
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - 'like'
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT COUNT( * ) FROM countrylanguage WHERE countrylanguage.percentage = 'Spanish' AND countrylanguage.language = 'Spanish'
  - SELECT COUNT( * ) FROM countrylanguage, country WHERE countrylanguage.percentage = 'Spanish' AND countrylanguage.language = 'Spanish'
  - SELECT COUNT( DISTINCT countrylanguage.language ) FROM countrylanguage WHERE countrylanguage.percentage = 'Spanish' AND countrylanguage.language = 'Spanish'
  - SELECT COUNT( * ) FROM countrylanguage WHERE countrylanguage.language LIKE '%Spanish%'
  - SELECT COUNT( * ) FROM countrylanguage, country WHERE countrylanguage.percentage = 'Spanish' AND countrylanguage.language = 'Spanish' GROUP BY countrylanguage.percentage
  - SELECT COUNT( * ) FROM countrylanguage WHERE countrylanguage.language = 'Spanish'
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( * ) FROM countrylanguage WHERE countrylanguage.percentage = 'Spanish' AND countrylanguage.language = 'Spanish'
  - SELECT COUNT( * ) FROM countrylanguage, country WHERE countrylanguage.percentage = 'Spanish' AND countrylanguage.language = 'Spanish'
  - SELECT COUNT( DISTINCT countrylanguage.language ) FROM countrylanguage WHERE countrylanguage.percentage = 'Spanish' AND countrylanguage.language = 'Spanish'
  - SELECT COUNT( * ) FROM countrylanguage WHERE countrylanguage.language LIKE '%Spanish%'
  - SELECT COUNT( * ) FROM countrylanguage, country WHERE countrylanguage.percentage = 'Spanish' AND countrylanguage.language = 'Spanish' GROUP BY countrylanguage.percentage
  - SELECT COUNT( * ) FROM countrylanguage WHERE countrylanguage.language = 'Spanish'
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- - countrycode
  - code
- []
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
ratsql_beam_constants:
- - Spanish
- - Spanish
- - Spanish
- - Spanish
- - Spanish
- - Spanish
- - Spanish
- - Spanish
  - '1'
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - language
- - language
- - language
- - language
- - language
- - language
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
  - SELECT Count(*) FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT Count(*) FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT countrylanguage.Language = 'terminal'
  - SELECT DISTINCT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT Count(DISTINCT *) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' LIMIT 1
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish'
  - SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'Spanish'
  - SELECT Count(*) FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish'
  - SELECT Count(*) FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish'
  - SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT countrylanguage.Language = 'Spanish'
  - SELECT DISTINCT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish'
  - SELECT Count(DISTINCT *) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish'
  - SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' LIMIT 1
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - True
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.11077308654785156
  - -0.10464286804199219
  - -0.10594773292541504
  - -0.10403585433959961
  - -0.10117626190185547
  - -0.11153507232666016
  - -0.11525726318359375
  - -0.10148334503173828
  - -0.1058797836303711
  - -0.10470056533813477
  - -0.10645532608032227
  - -0.08553433418273926
  - -0.10885214805603027
  - -0.10539937019348145
  - -0.1014394760131836
  - -0.10533857345581055
  - -0.10069465637207031
  - -0.1014704704284668
  - -0.10464620590209961
  - -0.10487031936645508
  - -0.10573005676269531
  - -0.061309460550546646
  - -0.11234235763549805
  - -0.10613727569580078
  - -0.10569429397583008
  - -0.10626602172851562
  - -0.10271596908569336
  - -0.10731339454650879
  - -0.10479211807250977
  - -0.09889411926269531
  - -0.1034998893737793
  - -0.35526609420776367
  - -0.10627412796020508
  - -0.10393667221069336
  - -0.6380442380905151
  - -0.10476970672607422
  - -0.10391807556152344
  - -0.08371252566576004
- - -0.11077308654785156
  - -0.10464286804199219
  - -0.10594773292541504
  - -0.10403585433959961
  - -0.10117626190185547
  - -0.11153507232666016
  - -0.11525726318359375
  - -0.10148334503173828
  - -0.1058797836303711
  - -0.10470056533813477
  - -0.10645532608032227
  - -0.08553433418273926
  - -0.10885214805603027
  - -0.10539937019348145
  - -0.1014394760131836
  - -0.10533857345581055
  - -0.10069465637207031
  - -0.1014704704284668
  - -0.10464620590209961
  - -0.10487031936645508
  - -0.10573005676269531
  - -0.061309460550546646
  - -0.11234235763549805
  - -0.10613727569580078
  - -0.10569429397583008
  - -0.10626602172851562
  - -0.10271596908569336
  - -0.10731339454650879
  - -0.10479211807250977
  - -0.09889411926269531
  - -0.1034998893737793
  - -1.6947917938232422
  - -0.10624837875366211
  - -0.10352516174316406
  - -0.4066716432571411
- - -0.11077308654785156
  - -0.10464286804199219
  - -0.10594773292541504
  - -0.10403585433959961
  - -0.10117626190185547
  - -0.11153507232666016
  - -0.11525726318359375
  - -0.10148334503173828
  - -0.1058797836303711
  - -0.10470056533813477
  - -0.10645532608032227
  - -0.08553433418273926
  - -0.10885214805603027
  - -0.10539937019348145
  - -0.1014394760131836
  - -0.10533857345581055
  - -0.10069465637207031
  - -0.1014704704284668
  - -0.10464620590209961
  - -0.10487031936645508
  - -0.10573005676269531
  - -0.061309460550546646
  - -0.11234235763549805
  - -0.10613727569580078
  - -0.10569429397583008
  - -0.10626602172851562
  - -0.10271596908569336
  - -0.10731339454650879
  - -0.10479211807250977
  - -0.09889411926269531
  - -0.1034998893737793
  - -0.35526609420776367
  - -0.10627412796020508
  - -0.10393667221069336
  - -2.582148313522339
  - -0.1053781509399414
  - -0.10434293746948242
  - -0.8560811877250671
- - -0.11077308654785156
  - -0.10464286804199219
  - -0.10594773292541504
  - -0.10403585433959961
  - -0.10117626190185547
  - -0.11153507232666016
  - -0.11525726318359375
  - -0.10148334503173828
  - -0.1058797836303711
  - -0.10470056533813477
  - -0.10645532608032227
  - -0.08553433418273926
  - -0.10885214805603027
  - -0.10539937019348145
  - -0.1014394760131836
  - -0.10533857345581055
  - -0.10069465637207031
  - -0.1014704704284668
  - -0.10464620590209961
  - -0.10487031936645508
  - -0.10573005676269531
  - -0.061309460550546646
  - -0.11234235763549805
  - -0.10613727569580078
  - -0.10569429397583008
  - -0.10626602172851562
  - -0.10271596908569336
  - -0.10731339454650879
  - -0.10479211807250977
  - -0.09889411926269531
  - -0.1034998893737793
  - -0.35526609420776367
  - -0.10627412796020508
  - -0.10393667221069336
  - -2.582148313522339
  - -0.1053781509399414
  - -0.10434293746948242
  - -0.8942426443099976
- - -0.11077308654785156
  - -0.10464286804199219
  - -0.10594773292541504
  - -0.10403585433959961
  - -0.10117626190185547
  - -0.11153507232666016
  - -0.11525726318359375
  - -0.10148334503173828
  - -0.1058797836303711
  - -0.10470056533813477
  - -0.10645532608032227
  - -0.08553433418273926
  - -0.10885214805603027
  - -0.10539937019348145
  - -0.1014394760131836
  - -0.10533857345581055
  - -0.10069465637207031
  - -0.1014704704284668
  - -0.10464620590209961
  - -0.10487031936645508
  - -0.10573005676269531
  - -0.061309460550546646
  - -3.438751459121704
  - -0.10570573806762695
  - -0.10464239120483398
  - -0.10553979873657227
  - -0.10269641876220703
  - -0.1073150634765625
  - -0.10476517677307129
  - -0.09917831420898438
  - -0.10351705551147461
  - -0.40395259857177734
  - -0.10639572143554688
  - -0.10397529602050781
  - -0.638102114200592
  - -0.10477542877197266
  - -0.10392570495605469
  - -0.08336853981018066
- - -0.11077308654785156
  - -0.10464286804199219
  - -3.5723512172698975
  - -0.10398077964782715
  - -0.10213279724121094
  - -0.11374616622924805
  - -0.11540508270263672
  - -0.10163402557373047
  - -0.1059427261352539
  - -0.10470867156982422
  - -0.10648536682128906
  - -0.08667565882205963
  - -0.10888314247131348
  - -0.10538172721862793
  - -0.10091209411621094
  - -0.10535526275634766
  - -0.10065031051635742
  - -0.1014719009399414
  - -0.10466432571411133
  - -0.10489416122436523
  - -0.10572290420532227
  - -0.0615571029484272
  - -0.11232614517211914
  - -0.10613608360290527
  - -0.1056976318359375
  - -0.10625410079956055
  - -0.10272979736328125
  - -0.10731387138366699
  - -0.10479331016540527
  - -0.0988931655883789
  - -0.10349607467651367
  - -0.3514518737792969
  - -0.10627555847167969
  - -0.10393667221069336
  - -0.6376221776008606
  - -0.10476922988891602
  - -0.10391998291015625
  - -0.08371274918317795
- - -0.11077308654785156
  - -0.10464286804199219
  - -0.10594773292541504
  - -0.10403585433959961
  - -0.10117626190185547
  - -0.11153507232666016
  - -0.11525726318359375
  - -0.10148334503173828
  - -0.1058797836303711
  - -0.10470056533813477
  - -0.10645532608032227
  - -0.08553433418273926
  - -3.514124870300293
  - -0.10523104667663574
  - -0.10190057754516602
  - -0.10528898239135742
  - -0.1007394790649414
  - -0.10145235061645508
  - -0.10467910766601562
  - -0.10489225387573242
  - -0.1056814193725586
  - -0.06116268411278725
  - -0.11233925819396973
  - -0.10613322257995605
  - -0.10564708709716797
  - -0.10640907287597656
  - -0.10277175903320312
  - -0.1073143482208252
  - -0.10479426383972168
  - -0.0989847183227539
  - -0.10349369049072266
  - -0.4312925338745117
  - -0.10641956329345703
  - -0.10396528244018555
  - -0.6364439129829407
  - -0.10474348068237305
  - -0.10390186309814453
  - -0.08350946009159088
- - -0.11077308654785156
  - -0.10464286804199219
  - -0.10594773292541504
  - -0.10403585433959961
  - -0.10117626190185547
  - -0.11153507232666016
  - -0.11525726318359375
  - -0.10148334503173828
  - -0.1058797836303711
  - -0.10470056533813477
  - -0.10645532608032227
  - -0.08553433418273926
  - -0.10885214805603027
  - -0.10539937019348145
  - -0.1014394760131836
  - -0.10533857345581055
  - -0.10069465637207031
  - -0.1014704704284668
  - -0.10464620590209961
  - -0.10487031936645508
  - -0.10573005676269531
  - -0.061309460550546646
  - -0.11234235763549805
  - -0.10613727569580078
  - -0.10569429397583008
  - -0.10626602172851562
  - -0.10271596908569336
  - -3.5560858249664307
  - -0.10500741004943848
  - -0.09868049621582031
  - -0.10307025909423828
  - -0.4232139587402344
  - -0.10633230209350586
  - -0.10395193099975586
  - -0.6393657922744751
  - -0.10478544235229492
  - -0.1038818359375
  - -0.08402351289987564
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
