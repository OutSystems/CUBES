db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/countrylanguage.csv
 - tests-examples/db2csv/world_1/tables/country.csv
output: tests-examples/db2csv/world_1/tables/0046_dev.csv
raw_question: Give the names of nations that speak both English and French. 
question_index: 747 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - French
 - English
join_columns:
 - countrycode
 - code
groupby_columns: []
orderby_columns: []
functions: []
columns:
 - language
filters:
 - '='
ieu:
 - intersect
comment: |-
  SELECT T1.Name
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T2.Language = "English" INTERSECT
    SELECT T1.Name
    FROM country AS T1
    JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = "French"

sql: |-
  SELECT T1.Name
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T2.Language = "English" INTERSECT
    SELECT T1.Name
    FROM country AS T1
    JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = "French"
smbop_beam_join_columns:
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- []
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
smbop_beam_constants:
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
smbop_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_columns:
- - language
- - language
- - language
- - language
- []
- - language
- - language
- - language
- - language
smbop_beam_ieu:
- - intersect
- - intersect
- - intersect
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - '='
- []
- - '='
- - '='
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' INTERSECT SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' INTERSECT SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'English' INTERSECT SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English'
  - SELECT country.name FROM country
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English and French'
  - SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'English'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'French'
smbop_beam_inferred_code_w_terminals:
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' INTERSECT SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' INTERSECT SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'English' INTERSECT SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English'
  - SELECT country.name FROM country
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English and French'
  - SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'English'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'French'
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
ratsql_beam_constants:
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
  - '1'
ratsql_beam_functions:
- []
- []
- []
- []
- []
- []
ratsql_beam_columns:
- - language
- - language
- - language
- - language
- - language
- - language
ratsql_beam_ieu:
- - intersect
- - intersect
- - intersect
- - intersect
- - intersect
- - intersect
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT countrylanguage.Language = 'terminal'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' LIMIT 1
ratsql_beam_inferred_code_w_terminals:
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English'
  - SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French' INTERSECT SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT countrylanguage.Language = 'English'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT countrylanguage.Language = 'French' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French' INTERSECT SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English'
  - SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' LIMIT 1
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - True
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10639190673828125
  - -0.10423803329467773
  - -0.10497140884399414
  - -0.10439705848693848
  - -0.10252618789672852
  - -0.10251379013061523
  - -0.10545873641967773
  - -0.10161781311035156
  - -0.10478925704956055
  - -0.10453605651855469
  - -0.10407543182373047
  - -0.10864152759313583
  - -0.11067509651184082
  - -0.10503005981445312
  - -0.09233665466308594
  - -0.10247182846069336
  - -0.10379409790039062
  - -0.10097599029541016
  - -0.10502004623413086
  - -0.1050271987915039
  - -0.10562562942504883
  - -0.0988011583685875
  - -0.11099505424499512
  - -0.10582518577575684
  - -0.10331487655639648
  - -0.10074567794799805
  - -0.10138940811157227
  - -0.10703706741333008
  - -0.10480642318725586
  - -0.08365678787231445
  - -0.10852432250976562
  - -0.1056976318359375
  - -0.10947585105895996
  - -0.10397768020629883
  - -0.10207414627075195
  - -0.10309410095214844
  - -0.1046295166015625
  - -0.10199499130249023
  - -0.10439014434814453
  - -0.10457277297973633
  - -0.10450887680053711
  - -0.14863309264183044
  - -0.11140608787536621
  - -0.1055307388305664
  - -0.08984661102294922
  - -0.10537385940551758
  - -0.10105133056640625
  - -0.10212326049804688
  - -0.10440492630004883
  - -0.10492181777954102
  - -0.10417509078979492
  - -0.09507890790700912
  - -0.11134171485900879
  - -0.1060800552368164
  - -0.10483026504516602
  - -0.1030588150024414
  - -0.10566329956054688
  - -0.10753631591796875
  - -0.10486388206481934
  - -0.10599088668823242
  - -0.1064767837524414
  - -0.12164974212646484
  - -0.10537242889404297
  - -0.10496139526367188
  - -0.7628678679466248
  - -0.10669183731079102
  - -0.1064143180847168
  - -0.051322661340236664
  - -0.09210634231567383
  - -0.10914850234985352
  - -0.105712890625
  - -0.10421228408813477
  - -0.4009515345096588
  - -0.10779476165771484
  - -0.10632085800170898
  - -0.07849395275115967
- - -0.10639190673828125
  - -0.10423803329467773
  - -0.10497140884399414
  - -0.10439705848693848
  - -0.10252618789672852
  - -0.10251379013061523
  - -0.10545873641967773
  - -0.10161781311035156
  - -0.10478925704956055
  - -0.10453605651855469
  - -0.10407543182373047
  - -0.10864152759313583
  - -0.11067509651184082
  - -0.10503005981445312
  - -0.09233665466308594
  - -0.10247182846069336
  - -0.10379409790039062
  - -0.10097599029541016
  - -0.10502004623413086
  - -0.1050271987915039
  - -0.10562562942504883
  - -0.0988011583685875
  - -0.11099505424499512
  - -0.10582518577575684
  - -0.10331487655639648
  - -0.10074567794799805
  - -0.10138940811157227
  - -0.10703706741333008
  - -0.10480642318725586
  - -0.08365678787231445
  - -0.10852432250976562
  - -0.1056976318359375
  - -0.10947585105895996
  - -0.10397768020629883
  - -0.10207414627075195
  - -0.10309410095214844
  - -0.1046295166015625
  - -0.10199499130249023
  - -0.10439014434814453
  - -0.10457277297973633
  - -0.10450887680053711
  - -0.14863309264183044
  - -0.11140608787536621
  - -0.1055307388305664
  - -0.08984661102294922
  - -0.10537385940551758
  - -0.10105133056640625
  - -0.10212326049804688
  - -0.10440492630004883
  - -0.10492181777954102
  - -0.10417509078979492
  - -0.09507890790700912
  - -0.11134171485900879
  - -0.1060800552368164
  - -0.10483026504516602
  - -0.1030588150024414
  - -0.10566329956054688
  - -0.10753631591796875
  - -0.10486388206481934
  - -0.10599088668823242
  - -0.1064767837524414
  - -0.12164974212646484
  - -0.10537242889404297
  - -0.10496139526367188
  - -0.7628678679466248
  - -0.10669183731079102
  - -0.1064143180847168
  - -0.051322661340236664
  - -0.09210634231567383
  - -0.10914850234985352
  - -0.105712890625
  - -0.10421228408813477
  - -2.6744937896728516
  - -0.11031961441040039
  - -0.10502052307128906
  - -0.23320363461971283
- - -0.10639190673828125
  - -0.10423803329467773
  - -0.10497140884399414
  - -0.10439705848693848
  - -0.10252618789672852
  - -0.10251379013061523
  - -0.10545873641967773
  - -0.10161781311035156
  - -0.10478925704956055
  - -0.10453605651855469
  - -0.10407543182373047
  - -0.10864152759313583
  - -0.11067509651184082
  - -0.10503005981445312
  - -0.09233665466308594
  - -0.10247182846069336
  - -0.10379409790039062
  - -0.10097599029541016
  - -0.10502004623413086
  - -0.1050271987915039
  - -0.10562562942504883
  - -0.0988011583685875
  - -0.11099505424499512
  - -0.10582518577575684
  - -0.10331487655639648
  - -0.10074567794799805
  - -0.10138940811157227
  - -0.10703706741333008
  - -0.10480642318725586
  - -0.08365678787231445
  - -0.10852432250976562
  - -0.1056976318359375
  - -0.10947585105895996
  - -0.10397768020629883
  - -0.10207414627075195
  - -0.10309410095214844
  - -0.1046295166015625
  - -0.10199499130249023
  - -0.10439014434814453
  - -0.10457277297973633
  - -0.10450887680053711
  - -0.14863309264183044
  - -0.11140608787536621
  - -0.1055307388305664
  - -0.08984661102294922
  - -0.10537385940551758
  - -0.10105133056640625
  - -0.10212326049804688
  - -0.10440492630004883
  - -0.10492181777954102
  - -0.10417509078979492
  - -0.09507890790700912
  - -0.11134171485900879
  - -0.1060800552368164
  - -0.10483026504516602
  - -0.1030588150024414
  - -0.10566329956054688
  - -0.10753631591796875
  - -0.10486388206481934
  - -0.10599088668823242
  - -0.1064767837524414
  - -0.12164974212646484
  - -0.10537242889404297
  - -0.10496139526367188
  - -2.4713850021362305
  - -0.10539579391479492
  - -0.10413074493408203
  - -0.7331781387329102
  - -0.09892129898071289
  - -0.113372802734375
  - -0.10527181625366211
  - -0.1048579216003418
  - -0.8150597810745239
  - -0.10485029220581055
  - -0.10409736633300781
  - -0.08091563731431961
- - -0.10639190673828125
  - -0.10423803329467773
  - -0.10497140884399414
  - -0.10439705848693848
  - -0.10252618789672852
  - -0.10251379013061523
  - -0.10545873641967773
  - -0.10161781311035156
  - -0.10478925704956055
  - -0.10453605651855469
  - -0.10407543182373047
  - -0.10864152759313583
  - -0.11067509651184082
  - -0.10503005981445312
  - -0.09233665466308594
  - -0.10247182846069336
  - -0.10379409790039062
  - -0.10097599029541016
  - -0.10502004623413086
  - -0.1050271987915039
  - -0.10562562942504883
  - -0.0988011583685875
  - -0.11099505424499512
  - -0.10582518577575684
  - -0.10331487655639648
  - -0.10074567794799805
  - -0.10138940811157227
  - -0.10703706741333008
  - -0.10480642318725586
  - -0.08365678787231445
  - -0.10852432250976562
  - -0.1056976318359375
  - -0.10947585105895996
  - -0.10397768020629883
  - -0.10207414627075195
  - -0.10309410095214844
  - -0.1046295166015625
  - -0.10199499130249023
  - -0.10439014434814453
  - -0.10457277297973633
  - -0.10450887680053711
  - -0.14863309264183044
  - -0.11140608787536621
  - -0.1055307388305664
  - -0.08984661102294922
  - -0.10537385940551758
  - -0.10105133056640625
  - -0.10212326049804688
  - -0.10440492630004883
  - -0.10492181777954102
  - -0.10417509078979492
  - -0.09507890790700912
  - -3.443889617919922
  - -0.10579919815063477
  - -0.1049647331237793
  - -0.10350799560546875
  - -0.10534954071044922
  - -0.10746645927429199
  - -0.10487794876098633
  - -0.10668802261352539
  - -0.10703134536743164
  - -0.12171268463134766
  - -0.1053776741027832
  - -0.10497665405273438
  - -0.763275146484375
  - -0.10672569274902344
  - -0.10634994506835938
  - -0.051613885909318924
  - -0.09210586547851562
  - -0.10918807983398438
  - -0.1057138442993164
  - -0.1042165756225586
  - -0.40105777978897095
  - -0.10780954360961914
  - -0.10632896423339844
  - -0.0784958228468895
- - -0.10639190673828125
  - -0.10423803329467773
  - -0.10497140884399414
  - -0.10439705848693848
  - -0.10252618789672852
  - -0.10251379013061523
  - -0.10545873641967773
  - -0.10161781311035156
  - -0.10478925704956055
  - -0.10453605651855469
  - -0.10407543182373047
  - -0.10864152759313583
  - -0.11067509651184082
  - -0.10503005981445312
  - -0.09233665466308594
  - -0.10247182846069336
  - -0.10379409790039062
  - -0.10097599029541016
  - -0.10502004623413086
  - -0.1050271987915039
  - -0.10562562942504883
  - -0.0988011583685875
  - -3.456995964050293
  - -0.10564947128295898
  - -0.10166311264038086
  - -0.10081052780151367
  - -0.10097455978393555
  - -0.10706639289855957
  - -0.10487079620361328
  - -0.08221912384033203
  - -0.10809469223022461
  - -0.10566568374633789
  - -0.10949897766113281
  - -0.10399055480957031
  - -0.10201835632324219
  - -0.10313940048217773
  - -0.10462141036987305
  - -0.10199117660522461
  - -0.10438871383666992
  - -0.10457754135131836
  - -0.10450267791748047
  - -0.14698195457458496
  - -0.11140060424804688
  - -0.10552835464477539
  - -0.0898590087890625
  - -0.10535907745361328
  - -0.101043701171875
  - -0.10210847854614258
  - -0.10440444946289062
  - -0.1049203872680664
  - -0.10416650772094727
  - -0.09522642940282822
  - -0.11134195327758789
  - -0.10608077049255371
  - -0.10483026504516602
  - -0.10308837890625
  - -0.10564279556274414
  - -0.10753464698791504
  - -0.10486316680908203
  - -0.10589408874511719
  - -0.10636234283447266
  - -0.12148571014404297
  - -0.10533714294433594
  - -0.10495471954345703
  - -0.7588541507720947
  - -0.10672950744628906
  - -0.10643196105957031
  - -0.0514441654086113
  - -0.09215641021728516
  - -0.1091318130493164
  - -0.10571479797363281
  - -0.104217529296875
  - -0.401010125875473
  - -0.10778331756591797
  - -0.1063075065612793
  - -0.07848326116800308
- - -0.10639190673828125
  - -0.10423803329467773
  - -0.10497140884399414
  - -0.10439705848693848
  - -0.10252618789672852
  - -0.10251379013061523
  - -0.10545873641967773
  - -0.10161781311035156
  - -0.10478925704956055
  - -0.10453605651855469
  - -0.10407543182373047
  - -0.10864152759313583
  - -0.11067509651184082
  - -0.10503005981445312
  - -0.09233665466308594
  - -0.10247182846069336
  - -0.10379409790039062
  - -0.10097599029541016
  - -0.10502004623413086
  - -0.1050271987915039
  - -0.10562562942504883
  - -0.0988011583685875
  - -0.11099505424499512
  - -0.10582518577575684
  - -0.10331487655639648
  - -0.10074567794799805
  - -0.10138940811157227
  - -0.10703706741333008
  - -0.10480642318725586
  - -0.08365678787231445
  - -0.10852432250976562
  - -0.1056976318359375
  - -0.10947585105895996
  - -0.10397768020629883
  - -0.10207414627075195
  - -0.10309410095214844
  - -0.1046295166015625
  - -0.10199499130249023
  - -0.10439014434814453
  - -0.10457277297973633
  - -0.10450887680053711
  - -0.14863309264183044
  - -3.4587886333465576
  - -0.10544514656066895
  - -0.09123802185058594
  - -0.10545778274536133
  - -0.10103845596313477
  - -0.10201311111450195
  - -0.10446453094482422
  - -0.10485267639160156
  - -0.10411310195922852
  - -0.0965406596660614
  - -0.11139106750488281
  - -0.1060788631439209
  - -0.10493087768554688
  - -0.10285425186157227
  - -0.10563182830810547
  - -0.10757327079772949
  - -0.10484528541564941
  - -0.10539531707763672
  - -0.1063389778137207
  - -0.12196922302246094
  - -0.10537052154541016
  - -0.10493087768554688
  - -0.7646649479866028
  - -0.10679817199707031
  - -0.10640859603881836
  - -0.051060691475868225
  - -0.09215354919433594
  - -0.10918331146240234
  - -0.10571098327636719
  - -0.10421276092529297
  - -0.40076470375061035
  - -0.10779905319213867
  - -0.1063232421875
  - -0.07848414033651352
- - -0.10639190673828125
  - -0.10423803329467773
  - -0.10497140884399414
  - -0.10439705848693848
  - -0.10252618789672852
  - -0.10251379013061523
  - -0.10545873641967773
  - -0.10161781311035156
  - -0.10478925704956055
  - -0.10453605651855469
  - -0.10407543182373047
  - -0.10864152759313583
  - -3.478306293487549
  - -0.10477256774902344
  - -0.09045028686523438
  - -0.1031961441040039
  - -0.10416603088378906
  - -0.1010136604309082
  - -0.10510540008544922
  - -0.10499715805053711
  - -0.10568857192993164
  - -0.09917226433753967
  - -0.11103463172912598
  - -0.10577940940856934
  - -0.10336828231811523
  - -0.10068511962890625
  - -0.10167407989501953
  - -0.10703635215759277
  - -0.10477685928344727
  - -0.08312177658081055
  - -0.10826826095581055
  - -0.10562419891357422
  - -0.10946321487426758
  - -0.10397744178771973
  - -0.1020960807800293
  - -0.10308456420898438
  - -0.10462713241577148
  - -0.10199737548828125
  - -0.10439062118530273
  - -0.10457420349121094
  - -0.1045064926147461
  - -0.14809733629226685
  - -0.1114053726196289
  - -0.1055300235748291
  - -0.08985328674316406
  - -0.10537242889404297
  - -0.10105180740356445
  - -0.1021261215209961
  - -0.10440731048583984
  - -0.10492181777954102
  - -0.1041722297668457
  - -0.09509668499231339
  - -0.11134123802185059
  - -0.10608029365539551
  - -0.10482931137084961
  - -0.10306024551391602
  - -0.10565900802612305
  - -0.10753440856933594
  - -0.10486388206481934
  - -0.1060171127319336
  - -0.10645914077758789
  - -0.1215829849243164
  - -0.10537147521972656
  - -0.10496187210083008
  - -0.7625935077667236
  - -0.10669755935668945
  - -0.10641860961914062
  - -0.05133206024765968
  - -0.09212160110473633
  - -0.10910892486572266
  - -0.1057124137878418
  - -0.10421180725097656
  - -0.40089866518974304
  - -0.10779476165771484
  - -0.10632038116455078
  - -0.07849648594856262
- - -0.10639190673828125
  - -0.10423803329467773
  - -0.10497140884399414
  - -0.10439705848693848
  - -0.10252618789672852
  - -0.10251379013061523
  - -0.10545873641967773
  - -0.10161781311035156
  - -0.10478925704956055
  - -0.10453605651855469
  - -0.10407543182373047
  - -0.10864152759313583
  - -0.11067509651184082
  - -0.10503005981445312
  - -0.09233665466308594
  - -0.10247182846069336
  - -0.10379409790039062
  - -0.10097599029541016
  - -0.10502004623413086
  - -0.1050271987915039
  - -0.10562562942504883
  - -0.0988011583685875
  - -0.11099505424499512
  - -0.10582518577575684
  - -0.10331487655639648
  - -0.10074567794799805
  - -0.10138940811157227
  - -0.10703706741333008
  - -0.10480642318725586
  - -0.08365678787231445
  - -0.10852432250976562
  - -0.1056976318359375
  - -0.10947585105895996
  - -0.10397768020629883
  - -0.10207414627075195
  - -0.10309410095214844
  - -0.1046295166015625
  - -0.10199499130249023
  - -0.10439014434814453
  - -0.10457277297973633
  - -0.10450887680053711
  - -0.14863309264183044
  - -0.11140608787536621
  - -0.1055307388305664
  - -0.08984661102294922
  - -0.10537385940551758
  - -0.10105133056640625
  - -0.10212326049804688
  - -0.10440492630004883
  - -0.10492181777954102
  - -0.10417509078979492
  - -0.09507890790700912
  - -0.11134171485900879
  - -0.1060800552368164
  - -0.10483026504516602
  - -0.1030588150024414
  - -0.10566329956054688
  - -3.5491702556610107
  - -0.1049950122833252
  - -0.1012868881225586
  - -0.1065988540649414
  - -0.12072420120239258
  - -0.10558080673217773
  - -0.1049351692199707
  - -0.7671659588813782
  - -0.10712957382202148
  - -0.1063528060913086
  - -0.05131065845489502
  - -0.09213018417358398
  - -0.10944366455078125
  - -0.10571575164794922
  - -0.10423517227172852
  - -0.40109968185424805
  - -0.10785436630249023
  - -0.10634469985961914
  - -0.07883752882480621
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
