db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/countrylanguage.csv
 - tests-examples/db2csv/world_1/tables/country.csv
output: tests-examples/db2csv/world_1/tables/0070_dev.csv
raw_question: For the countries founded before 1930, what is the total number of distinct official languages? 
question_index: 771 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - 1930
 - T
join_columns:
 - countrycode
 - code
groupby_columns: []
orderby_columns: []
functions:
 - count
columns:
 - language
 - indepyear
 - isofficial
filters:
 - '<'
 - '='
ieu: []
comment: |-
  SELECT count(DISTINCT T2.Language)
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE IndepYear < 1930
    AND T2.IsOfficial = "T"

sql: |-
  SELECT count(DISTINCT T2.Language)
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE IndepYear < 1930
    AND T2.IsOfficial = "T"
smbop_beam_join_columns:
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
smbop_beam_orderby_columns:
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
smbop_beam_constants:
- - 1930
  - T
- - 1930
  - T
- - 1930
  - T
- - 1930
  - T
- - 1930
  - T
smbop_beam_functions:
- - count
- - count
- - count
- - count
- []
smbop_beam_columns:
- - language
  - indepyear
- - language
  - indepyear
- - indepyear
  - isofficial
- - indepyear
  - isofficial
- - indepyear
smbop_beam_ieu:
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '<'
- - '<'
- - '<'
- - '<'
- - '<'
smbop_beam_inferred_code:
  - SELECT COUNT( DISTINCT countrylanguage.language ) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.indepyear<1930
  - SELECT COUNT( DISTINCT countrylanguage.language ) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.indepyear<1930
  - SELECT COUNT( DISTINCT countrylanguage.isofficial ) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.indepyear<1930
  - SELECT COUNT( DISTINCT countrylanguage.isofficial ) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.indepyear<1930
  - SELECT country.code FROM country WHERE country.indepyear<1930
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( DISTINCT countrylanguage.language ) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.indepyear<1930
  - SELECT COUNT( DISTINCT countrylanguage.language ) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.indepyear<1930
  - SELECT COUNT( DISTINCT countrylanguage.isofficial ) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.indepyear<1930
  - SELECT COUNT( DISTINCT countrylanguage.isofficial ) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.indepyear<1930
  - SELECT country.code FROM country WHERE country.indepyear<1930
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- []
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
ratsql_beam_constants:
- - t
  - 1930
- - t
  - 1930
- - t
  - 1930
- - t
  - 1930
- - t
  - 1930
- - t
  - 1930
  - '1'
- - t
  - 1930
- - t
  - 1930
- - t
  - 1930
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - language
  - indepyear
- - indepyear
  - isofficial
- - indepyear
- - indepyear
  - isofficial
- - language
  - isofficial
- - language
  - indepyear
- - language
  - indepyear
- - language
  - indepyear
- - language
  - indepyear
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '<'
- - '<'
- - '<'
- - '<'
- - '<'
- - '<'
- - '<'
- - '<'
- - '<'
ratsql_beam_inferred_code:
  - SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 'terminal'
  - SELECT Count(DISTINCT countrylanguage.IsOfficial) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 'terminal'
  - SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 'terminal'
  - SELECT Count(countrylanguage.IsOfficial) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 'terminal'
  - SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage WHERE countrylanguage.IsOfficial < 'terminal'
  - SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 'terminal' LIMIT 1
  - SELECT DISTINCT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 'terminal'
  - SELECT Count(countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 'terminal'
  - SELECT Count(DISTINCT countrylanguage.Language) FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930
  - SELECT Count(DISTINCT countrylanguage.IsOfficial) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930
  - SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930
  - SELECT Count(countrylanguage.IsOfficial) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930
  - SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage WHERE countrylanguage.IsOfficial < 1930
  - SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930 LIMIT 1
  - SELECT DISTINCT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930
  - SELECT Count(countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930
  - SELECT Count(DISTINCT countrylanguage.Language) FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - True
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10662651062011719
  - -0.10407447814941406
  - -0.10566592216491699
  - -0.10394096374511719
  - -0.1386713981628418
  - -0.10536432266235352
  - -0.12984991073608398
  - -0.10356903076171875
  - -0.10481786727905273
  - -0.10470819473266602
  - -0.10551261901855469
  - -0.28385165333747864
  - -0.1050562858581543
  - -0.10460734367370605
  - -0.08723783493041992
  - -0.1216278076171875
  - -0.08911323547363281
  - -0.10209035873413086
  - -0.10586929321289062
  - -0.10475540161132812
  - -0.10700559616088867
  - -0.1836426556110382
  - -0.11243271827697754
  - -0.10524511337280273
  - -0.10423421859741211
  - -0.1544203758239746
  - -0.10172080993652344
  - -0.10764312744140625
  - -0.10488033294677734
  - -0.09654903411865234
  - -0.10283803939819336
  - -0.14016246795654297
  - -0.10661840438842773
  - -0.10598325729370117
  - -0.3113558888435364
- - -0.10662651062011719
  - -0.10407447814941406
  - -0.10566592216491699
  - -0.10394096374511719
  - -0.1386713981628418
  - -0.10536432266235352
  - -0.12984991073608398
  - -0.10356903076171875
  - -0.10481786727905273
  - -0.10470819473266602
  - -0.10551261901855469
  - -2.58193302154541
  - -0.6579365730285645
  - -0.10561823844909668
  - -0.08936738967895508
  - -0.12712764739990234
  - -0.09170675277709961
  - -0.10189247131347656
  - -0.10625171661376953
  - -0.10503530502319336
  - -0.10661029815673828
  - -0.18090777099132538
  - -0.11241865158081055
  - -0.10531425476074219
  - -0.10557317733764648
  - -0.15326261520385742
  - -0.10166072845458984
  - -0.10770249366760254
  - -0.10493206977844238
  - -0.09633636474609375
  - -0.10278749465942383
  - -0.12406301498413086
  - -0.10668611526489258
  - -0.10591936111450195
  - -0.30865201354026794
- - -0.10662651062011719
  - -0.10407447814941406
  - -0.10566592216491699
  - -0.10394096374511719
  - -0.1386713981628418
  - -0.10536432266235352
  - -0.12984991073608398
  - -0.10356903076171875
  - -0.10481786727905273
  - -0.10470819473266602
  - -0.10551261901855469
  - -3.1469595432281494
  - -0.11129879951477051
  - -0.10632538795471191
  - -0.08809804916381836
  - -0.1383075714111328
  - -0.08825063705444336
  - -0.1018834114074707
  - -0.10650110244750977
  - -0.1051483154296875
  - -0.1063532829284668
  - -0.17955051362514496
  - -0.11245346069335938
  - -0.10533261299133301
  - -0.10441255569458008
  - -0.15836477279663086
  - -0.10161399841308594
  - -0.10772299766540527
  - -0.10490655899047852
  - -0.09616422653198242
  - -0.10302543640136719
  - -0.1924762725830078
  - -0.1066436767578125
  - -0.10607290267944336
  - -0.3103236258029938
- - -0.10662651062011719
  - -0.10407447814941406
  - -0.10566592216491699
  - -0.10394096374511719
  - -0.1386713981628418
  - -0.10536432266235352
  - -0.12984991073608398
  - -0.10356903076171875
  - -0.10481786727905273
  - -0.10470819473266602
  - -0.10551261901855469
  - -2.58193302154541
  - -0.869956374168396
  - -0.10653448104858398
  - -0.08763933181762695
  - -0.11798667907714844
  - -0.08873414993286133
  - -0.10184478759765625
  - -0.10657072067260742
  - -0.1049814224243164
  - -0.10658979415893555
  - -0.16295570135116577
  - -0.11255049705505371
  - -0.10536742210388184
  - -0.10549545288085938
  - -0.1440443992614746
  - -0.10163640975952148
  - -0.10776877403259277
  - -0.10492992401123047
  - -0.09652280807495117
  - -0.10260534286499023
  - -0.13762998580932617
  - -0.10635566711425781
  - -0.1058354377746582
  - -0.3110044002532959
- - -0.10662651062011719
  - -0.10407447814941406
  - -0.10566592216491699
  - -0.10394096374511719
  - -0.1386713981628418
  - -0.10536432266235352
  - -0.12984991073608398
  - -0.10356903076171875
  - -0.10481786727905273
  - -0.10470819473266602
  - -0.10551261901855469
  - -0.28385165333747864
  - -0.1050562858581543
  - -0.10460734367370605
  - -0.08723783493041992
  - -0.1216278076171875
  - -0.08911323547363281
  - -0.10209035873413086
  - -0.10586929321289062
  - -0.10475540161132812
  - -0.10700559616088867
  - -3.1887032985687256
  - -0.11162352561950684
  - -0.10486936569213867
  - -0.10429096221923828
  - -0.20903396606445312
  - -0.1019892692565918
  - -0.10773897171020508
  - -0.10477066040039062
  - -0.09647655487060547
  - -0.10400629043579102
  - -0.12734556198120117
  - -0.1070408821105957
  - -0.10525083541870117
  - -0.3060897886753082
- - -0.10662651062011719
  - -0.10407447814941406
  - -0.10566592216491699
  - -0.10394096374511719
  - -0.1386713981628418
  - -0.10536432266235352
  - -0.12984991073608398
  - -0.10356903076171875
  - -0.10481786727905273
  - -0.10470819473266602
  - -0.10551261901855469
  - -0.28385165333747864
  - -0.1050562858581543
  - -0.10460734367370605
  - -0.08723783493041992
  - -0.1216278076171875
  - -0.08911323547363281
  - -0.10209035873413086
  - -0.10586929321289062
  - -0.10475540161132812
  - -0.10700559616088867
  - -0.1836426556110382
  - -0.11243271827697754
  - -0.10524511337280273
  - -0.10423421859741211
  - -0.1544203758239746
  - -0.10172080993652344
  - -3.551853895187378
  - -0.10466122627258301
  - -0.09651374816894531
  - -0.10279226303100586
  - -0.12891435623168945
  - -0.10686445236206055
  - -0.10597705841064453
  - -0.310395747423172
- - -0.10662651062011719
  - -0.10407447814941406
  - -3.5699820518493652
  - -0.1039426326751709
  - -0.12156915664672852
  - -0.10300207138061523
  - -0.1268138885498047
  - -0.10314178466796875
  - -0.10500812530517578
  - -0.10481834411621094
  - -0.1051321029663086
  - -0.28255578875541687
  - -0.10425209999084473
  - -0.10476207733154297
  - -0.08990001678466797
  - -0.10970115661621094
  - -0.09178400039672852
  - -0.10204935073852539
  - -0.10520744323730469
  - -0.10473060607910156
  - -0.10695791244506836
  - -0.1813993901014328
  - -0.11247754096984863
  - -0.10524797439575195
  - -0.10418462753295898
  - -0.1569199562072754
  - -0.1017460823059082
  - -0.10763692855834961
  - -0.10486268997192383
  - -0.09667825698852539
  - -0.10283470153808594
  - -0.14624834060668945
  - -0.10656213760375977
  - -0.10596561431884766
  - -0.31182292103767395
- - -0.10662651062011719
  - -0.10407447814941406
  - -0.10566592216491699
  - -0.10394096374511719
  - -0.1386713981628418
  - -0.10536432266235352
  - -0.12984991073608398
  - -0.10356903076171875
  - -0.10481786727905273
  - -0.10470819473266602
  - -0.10551261901855469
  - -0.28385165333747864
  - -3.5278444290161133
  - -0.10514378547668457
  - -0.08554363250732422
  - -0.14417266845703125
  - -0.09575080871582031
  - -0.10195493698120117
  - -0.10519027709960938
  - -0.1049346923828125
  - -0.10713434219360352
  - -0.1877366006374359
  - -0.11238574981689453
  - -0.1052541732788086
  - -0.10347938537597656
  - -0.1282510757446289
  - -0.101837158203125
  - -0.10770845413208008
  - -0.10486602783203125
  - -0.09652328491210938
  - -0.10274553298950195
  - -0.16125869750976562
  - -0.10640144348144531
  - -0.10599231719970703
  - -0.3116702735424042
- - -0.10662651062011719
  - -0.10407447814941406
  - -0.10566592216491699
  - -0.10394096374511719
  - -0.1386713981628418
  - -0.10536432266235352
  - -0.12984991073608398
  - -0.10356903076171875
  - -0.10481786727905273
  - -0.10470819473266602
  - -0.10551261901855469
  - -0.28385165333747864
  - -0.1050562858581543
  - -0.10460734367370605
  - -0.08723783493041992
  - -0.1216278076171875
  - -0.08911323547363281
  - -0.10209035873413086
  - -0.10586929321289062
  - -0.10475540161132812
  - -0.10700559616088867
  - -0.1836426556110382
  - -0.11243271827697754
  - -0.10524511337280273
  - -0.10423421859741211
  - -0.1544203758239746
  - -0.10172080993652344
  - -0.10764312744140625
  - -0.10488033294677734
  - -0.09654903411865234
  - -0.10283803939819336
  - -0.14016246795654297
  - -0.10661840438842773
  - -0.10598325729370117
  - -3.8412013053894043
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'IndepYear'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'IsOfficial'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'IndepYear'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'IndepYear'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'IsOfficial'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'IndepYear'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'IsOfficial'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'IndepYear'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'IndepYear'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'IndepYear'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'IndepYear'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
