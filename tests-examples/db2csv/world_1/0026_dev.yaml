db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/country.csv
output: tests-examples/db2csv/world_1/tables/0026_dev.csv
raw_question: Give the total surface area covered by countries in Asia or Europe. 
question_index: 727 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - Europe
 - Asia
join_columns: []
groupby_columns: []
orderby_columns: []
functions:
 - sum
columns:
 - continent
 - surfacearea
filters:
 - '='
ieu: []
comment: |-
  SELECT sum(SurfaceArea)
  FROM country
  WHERE Continent = "Asia"
    OR Continent = "Europe"

sql: |-
  SELECT sum(SurfaceArea)
  FROM country
  WHERE Continent = "Asia"
    OR Continent = "Europe"
smbop_beam_join_columns:
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
smbop_beam_orderby_columns:
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
smbop_beam_constants:
- - Europe
  - Asia
- - Europe
  - Asia
- - Europe
  - Asia
- - Europe
  - Asia
- - Europe
  - Asia
smbop_beam_functions:
- - sum
- - sum
- - sum
- - sum
- - sum
smbop_beam_columns:
- - continent
  - surfacearea
  - region
- - surfacearea
  - region
- - continent
  - surfacearea
- - continent
  - surfacearea
  - region
- - continent
  - surfacearea
  - region
smbop_beam_ieu:
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT SUM( country.surfacearea ) FROM country WHERE country.continent = 'Asia' OR country.region = 'Europe'
  - SELECT SUM( country.surfacearea ) FROM country WHERE country.region = 'Asia' OR country.region = 'Europe'
  - SELECT SUM( country.surfacearea ) FROM country WHERE country.continent = 'Asia' OR country.continent = 'Europe'
  - SELECT SUM( country.surfacearea ) FROM country WHERE country.continent = 'Europe' OR country.region = 'Asia'
  - SELECT SUM( country.surfacearea ) FROM country WHERE country.region = 'Asia' OR country.continent = 'Europe'
smbop_beam_inferred_code_w_terminals:
  - SELECT SUM( country.surfacearea ) FROM country WHERE country.continent = 'Asia' OR country.region = 'Europe'
  - SELECT SUM( country.surfacearea ) FROM country WHERE country.region = 'Asia' OR country.region = 'Europe'
  - SELECT SUM( country.surfacearea ) FROM country WHERE country.continent = 'Asia' OR country.continent = 'Europe'
  - SELECT SUM( country.surfacearea ) FROM country WHERE country.continent = 'Europe' OR country.region = 'Asia'
  - SELECT SUM( country.surfacearea ) FROM country WHERE country.region = 'Asia' OR country.continent = 'Europe'
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
ratsql_beam_constants:
- - Europe
  - Asia
- - Europe
  - Asia
- - Europe
  - Asia
- - Europe
  - Asia
- - Europe
  - Asia
- - Europe
  - Asia
- - Europe
  - Asia
- - Europe
  - Asia
  - '1'
- - Europe
  - Asia
ratsql_beam_functions:
- - sum
- - sum
- - sum
- - sum
- - sum
- - sum
- - sum
ratsql_beam_columns:
- - surfacearea
  - region
- - continent
  - surfacearea
  - region
- - continent
  - surfacearea
  - region
- - continent
  - surfacearea
- - surfacearea
  - region
- - surfacearea
  - region
- - surfacearea
  - region
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'terminal' OR country.Region = 'terminal'
  - SELECT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'terminal' OR country.Continent = 'terminal'
  - SELECT Sum(country.SurfaceArea) FROM country WHERE country.Continent = 'terminal' OR country.Region = 'terminal'
  - SELECT Sum(country.SurfaceArea) FROM country WHERE country.Continent = 'terminal' OR country.Continent = 'terminal'
  - SELECT Sum(country.SurfaceArea) FROM country WHERE DISTINCT country.Region = 'terminal' OR country.Region = 'terminal'
  - SELECT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'terminal' OR DISTINCT country.Region = 'terminal'
  - SELECT Sum(DISTINCT country.SurfaceArea) FROM country WHERE country.Region = 'terminal' OR country.Region = 'terminal'
  - SELECT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'terminal' OR country.Region = 'terminal' LIMIT 1
  - SELECT DISTINCT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'terminal' OR country.Region = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - 
  - SELECT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'Asia' OR country.Continent = 'Europe'
  - SELECT Sum(country.SurfaceArea) FROM country WHERE country.Continent = 'Europe' OR country.Region = 'Asia'
  - SELECT Sum(country.SurfaceArea) FROM country WHERE country.Continent = 'Europe' OR country.Continent = 'Asia'
  - 
  - 
  - 
  - 
  - 
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - True
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10468339920043945
  - -0.10451602935791016
  - -0.10531091690063477
  - -0.1042013168334961
  - -0.1021275520324707
  - -0.10121440887451172
  - -0.13359498977661133
  - -0.1040639877319336
  - -0.10571098327636719
  - -0.10442638397216797
  - -0.1051173210144043
  - -0.05689847096800804
  - -0.10790777206420898
  - -0.10510110855102539
  - -0.09514904022216797
  - -0.1347494125366211
  - -0.10095548629760742
  - -0.1054544448852539
  - -0.10147905349731445
  - -0.10124921798706055
  - -0.10448408126831055
  - -0.10434770584106445
  - -0.10467338562011719
  - -0.5530582666397095
  - -0.11254572868347168
  - -0.10554385185241699
  - -0.1054234504699707
  - -0.09392595291137695
  - -0.10019874572753906
  - -0.10228443145751953
  - -0.10431337356567383
  - -0.10447978973388672
  - -0.10242271423339844
  - -0.5837658643722534
  - -0.11086463928222656
  - -0.1058187484741211
  - -0.10531187057495117
  - -0.10106801986694336
  - -0.10248184204101562
  - -0.10825181007385254
  - -0.10461878776550293
  - -0.09816265106201172
  - -0.10372591018676758
  - -0.11076545715332031
  - -0.10481595993041992
  - -0.10344743728637695
  - -0.07480128109455109
- - -0.10468339920043945
  - -0.10451602935791016
  - -0.10531091690063477
  - -0.1042013168334961
  - -0.1021275520324707
  - -0.10121440887451172
  - -0.13359498977661133
  - -0.1040639877319336
  - -0.10571098327636719
  - -0.10442638397216797
  - -0.1051173210144043
  - -0.05689847096800804
  - -0.10790777206420898
  - -0.10510110855102539
  - -0.09514904022216797
  - -0.1347494125366211
  - -0.10095548629760742
  - -0.1054544448852539
  - -0.10147905349731445
  - -0.10124921798706055
  - -0.10448408126831055
  - -0.10434770584106445
  - -0.10467338562011719
  - -0.5530582666397095
  - -0.11254572868347168
  - -0.10554385185241699
  - -0.1054234504699707
  - -0.09392595291137695
  - -0.10019874572753906
  - -0.10228443145751953
  - -0.10431337356567383
  - -0.10447978973388672
  - -0.10242271423339844
  - -0.904682457447052
  - -0.11026263236999512
  - -0.10581350326538086
  - -0.10510015487670898
  - -0.10116910934448242
  - -0.10248565673828125
  - -0.10828161239624023
  - -0.10462450981140137
  - -0.0981912612915039
  - -0.10377931594848633
  - -0.11083602905273438
  - -0.10483074188232422
  - -0.1034855842590332
  - -0.07308224588632584
- - -0.10468339920043945
  - -0.10451602935791016
  - -0.10531091690063477
  - -0.1042013168334961
  - -0.1021275520324707
  - -0.10121440887451172
  - -0.13359498977661133
  - -0.1040639877319336
  - -0.10571098327636719
  - -0.10442638397216797
  - -0.1051173210144043
  - -0.05689847096800804
  - -0.10790777206420898
  - -0.10510110855102539
  - -0.09514904022216797
  - -0.1347494125366211
  - -0.10095548629760742
  - -0.1054544448852539
  - -0.10147905349731445
  - -0.10124921798706055
  - -0.10448408126831055
  - -0.10434770584106445
  - -0.10467338562011719
  - -1.1102266311645508
  - -0.11187195777893066
  - -0.10566163063049316
  - -0.10514259338378906
  - -0.09589004516601562
  - -0.10028886795043945
  - -0.10227155685424805
  - -0.10439205169677734
  - -0.10450935363769531
  - -0.10225963592529297
  - -0.5867305397987366
  - -0.11077237129211426
  - -0.10580730438232422
  - -0.10524845123291016
  - -0.10104703903198242
  - -0.10248613357543945
  - -0.1082465648651123
  - -0.10462594032287598
  - -0.09813785552978516
  - -0.10370445251464844
  - -0.11072778701782227
  - -0.10481071472167969
  - -0.10344266891479492
  - -0.07382404804229736
- - -0.10468339920043945
  - -0.10451602935791016
  - -0.10531091690063477
  - -0.1042013168334961
  - -0.1021275520324707
  - -0.10121440887451172
  - -0.13359498977661133
  - -0.1040639877319336
  - -0.10571098327636719
  - -0.10442638397216797
  - -0.1051173210144043
  - -0.05689847096800804
  - -0.10790777206420898
  - -0.10510110855102539
  - -0.09514904022216797
  - -0.1347494125366211
  - -0.10095548629760742
  - -0.1054544448852539
  - -0.10147905349731445
  - -0.10124921798706055
  - -0.10448408126831055
  - -0.10434770584106445
  - -0.10467338562011719
  - -1.1102266311645508
  - -0.11187195777893066
  - -0.10566163063049316
  - -0.10514259338378906
  - -0.09589004516601562
  - -0.10028886795043945
  - -0.10227155685424805
  - -0.10439205169677734
  - -0.10450935363769531
  - -0.10225963592529297
  - -0.9051963686943054
  - -0.1102287769317627
  - -0.10582113265991211
  - -0.10510969161987305
  - -0.10114192962646484
  - -0.10250186920166016
  - -0.10828351974487305
  - -0.10463094711303711
  - -0.09817361831665039
  - -0.10376977920532227
  - -0.11081409454345703
  - -0.104827880859375
  - -0.10349035263061523
  - -0.07211153954267502
- - -0.10468339920043945
  - -0.10451602935791016
  - -0.10531091690063477
  - -0.1042013168334961
  - -0.1021275520324707
  - -0.10121440887451172
  - -0.13359498977661133
  - -0.1040639877319336
  - -0.10571098327636719
  - -0.10442638397216797
  - -0.1051173210144043
  - -0.05689847096800804
  - -0.10790777206420898
  - -0.10510110855102539
  - -0.09514904022216797
  - -0.1347494125366211
  - -0.10095548629760742
  - -0.1054544448852539
  - -0.10147905349731445
  - -0.10124921798706055
  - -0.10448408126831055
  - -0.10434770584106445
  - -0.10467338562011719
  - -0.5530582666397095
  - -3.4298481941223145
  - -0.1054844856262207
  - -0.104736328125
  - -0.09416055679321289
  - -0.10004329681396484
  - -0.10219049453735352
  - -0.10445737838745117
  - -0.10441875457763672
  - -0.10245990753173828
  - -0.5816662907600403
  - -0.11084389686584473
  - -0.10582113265991211
  - -0.10534906387329102
  - -0.10104179382324219
  - -0.10245847702026367
  - -0.10824728012084961
  - -0.10461902618408203
  - -0.09817838668823242
  - -0.10373210906982422
  - -0.11081504821777344
  - -0.10482120513916016
  - -0.10345649719238281
  - -0.07474774122238159
- - -0.10468339920043945
  - -0.10451602935791016
  - -0.10531091690063477
  - -0.1042013168334961
  - -0.1021275520324707
  - -0.10121440887451172
  - -0.13359498977661133
  - -0.1040639877319336
  - -0.10571098327636719
  - -0.10442638397216797
  - -0.1051173210144043
  - -0.05689847096800804
  - -0.10790777206420898
  - -0.10510110855102539
  - -0.09514904022216797
  - -0.1347494125366211
  - -0.10095548629760742
  - -0.1054544448852539
  - -0.10147905349731445
  - -0.10124921798706055
  - -0.10448408126831055
  - -0.10434770584106445
  - -0.10467338562011719
  - -0.5530582666397095
  - -0.11254572868347168
  - -0.10554385185241699
  - -0.1054234504699707
  - -0.09392595291137695
  - -0.10019874572753906
  - -0.10228443145751953
  - -0.10431337356567383
  - -0.10447978973388672
  - -0.10242271423339844
  - -0.5837658643722534
  - -3.465663194656372
  - -0.10599517822265625
  - -0.10512495040893555
  - -0.1007990837097168
  - -0.10267162322998047
  - -0.10822010040283203
  - -0.10463953018188477
  - -0.09827232360839844
  - -0.1037907600402832
  - -0.11083364486694336
  - -0.10483169555664062
  - -0.10349178314208984
  - -0.0738895982503891
- - -0.10468339920043945
  - -0.10451602935791016
  - -0.10531091690063477
  - -0.1042013168334961
  - -0.1021275520324707
  - -0.10121440887451172
  - -0.13359498977661133
  - -0.1040639877319336
  - -0.10571098327636719
  - -0.10442638397216797
  - -0.1051173210144043
  - -0.05689847096800804
  - -3.5204806327819824
  - -0.10504651069641113
  - -0.09535646438598633
  - -0.11375713348388672
  - -0.10129737854003906
  - -0.10480165481567383
  - -0.10140609741210938
  - -0.10122919082641602
  - -0.10454750061035156
  - -0.10434103012084961
  - -0.10469341278076172
  - -0.552277684211731
  - -0.11254620552062988
  - -0.1055450439453125
  - -0.10543394088745117
  - -0.09401798248291016
  - -0.10019493103027344
  - -0.10227537155151367
  - -0.10431575775146484
  - -0.10448265075683594
  - -0.10244989395141602
  - -0.5837855935096741
  - -0.11086630821228027
  - -0.10581660270690918
  - -0.10531044006347656
  - -0.10107088088989258
  - -0.1024937629699707
  - -0.10825228691101074
  - -0.10461807250976562
  - -0.09816455841064453
  - -0.10373210906982422
  - -0.11081171035766602
  - -0.10482168197631836
  - -0.10345935821533203
  - -0.07486377656459808
- - -0.10468339920043945
  - -0.10451602935791016
  - -0.10531091690063477
  - -0.1042013168334961
  - -0.1021275520324707
  - -0.10121440887451172
  - -0.13359498977661133
  - -0.1040639877319336
  - -0.10571098327636719
  - -0.10442638397216797
  - -0.1051173210144043
  - -0.05689847096800804
  - -0.10790777206420898
  - -0.10510110855102539
  - -0.09514904022216797
  - -0.1347494125366211
  - -0.10095548629760742
  - -0.1054544448852539
  - -0.10147905349731445
  - -0.10124921798706055
  - -0.10448408126831055
  - -0.10434770584106445
  - -0.10467338562011719
  - -0.5530582666397095
  - -0.11254572868347168
  - -0.10554385185241699
  - -0.1054234504699707
  - -0.09392595291137695
  - -0.10019874572753906
  - -0.10228443145751953
  - -0.10431337356567383
  - -0.10447978973388672
  - -0.10242271423339844
  - -0.5837658643722534
  - -0.11086463928222656
  - -0.1058187484741211
  - -0.10531187057495117
  - -0.10106801986694336
  - -0.10248184204101562
  - -3.539170742034912
  - -0.10448169708251953
  - -0.0980372428894043
  - -0.10358285903930664
  - -0.11046648025512695
  - -0.10476255416870117
  - -0.10349225997924805
  - -0.07477982342243195
- - -0.10468339920043945
  - -0.10451602935791016
  - -3.5717811584472656
  - -0.10430479049682617
  - -0.10157060623168945
  - -0.10314702987670898
  - -0.12102937698364258
  - -0.10428810119628906
  - -0.10576963424682617
  - -0.10431098937988281
  - -0.1049184799194336
  - -0.05702875927090645
  - -0.10788559913635254
  - -0.10504674911499023
  - -0.09540224075317383
  - -0.15471744537353516
  - -0.10024404525756836
  - -0.10468673706054688
  - -0.10148000717163086
  - -0.10123205184936523
  - -0.10443401336669922
  - -0.10411643981933594
  - -0.10487985610961914
  - -0.550078272819519
  - -0.11260080337524414
  - -0.10555553436279297
  - -0.10530281066894531
  - -0.09407520294189453
  - -0.10020256042480469
  - -0.10230827331542969
  - -0.10431194305419922
  - -0.10446786880493164
  - -0.1024932861328125
  - -0.5837046504020691
  - -0.11088728904724121
  - -0.10581421852111816
  - -0.10531377792358398
  - -0.10104751586914062
  - -0.10253620147705078
  - -0.10823988914489746
  - -0.1046140193939209
  - -0.09816837310791016
  - -0.10372114181518555
  - -0.11073732376098633
  - -0.10481691360473633
  - -0.10344314575195312
  - -0.0750136449933052
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'SurfaceArea'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'SurfaceArea'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'SurfaceArea'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'SurfaceArea'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'SurfaceArea'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'SurfaceArea'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'SurfaceArea'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'SurfaceArea'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'SurfaceArea'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
