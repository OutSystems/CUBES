db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/country.csv
output: tests-examples/db2csv/world_1/tables/0106_dev.csv
raw_question: Count the number of countries in Asia. 
question_index: 807 
constants:
 - Asia
functions:
 - count
columns:
 - continent
filters:
 - '='
comment: |-
  SELECT count(*)
  FROM country
  WHERE continent = "Asia"

sql: |-
  SELECT count(*)
  FROM country
  WHERE continent = "Asia"
smbop_beam_join_columns:
- []
- []
- []
- []
- - code
  - countrycode
- - code
  - countrycode
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
smbop_beam_constants:
- - Asia
- - Asia
- - Asia
- - Asia
- - Asia
- - Asia
- - Asia
- - Asia
- - Asia
- - Asia
smbop_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- []
- []
- - count
smbop_beam_columns:
- - continent
- - region
- - continent
  - region
- - region
- - continent
- - region
- - region
- - region
- - continent
- - continent
  - region
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT COUNT( * ) FROM country WHERE country.continent = 'Asia'
  - SELECT COUNT( * ) FROM country WHERE country.region = 'Asia'
  - SELECT COUNT( * ) FROM country WHERE country.continent = 'Asia' AND country.region = 'Asia'
  - SELECT COUNT( * ) FROM country WHERE country.region = 'Asia' AND country.region = 'Asia'
  - SELECT COUNT( * ) FROM city JOIN country ON city.countrycode = country.code WHERE country.continent = 'Asia'
  - SELECT COUNT( * ) FROM city JOIN country ON city.countrycode = country.code WHERE country.region = 'Asia'
  - SELECT COUNT( * ) FROM countrylanguage, country WHERE country.region = 'Asia' AND country.region = 'Asia'
  - SELECT country.name FROM country WHERE country.region = 'Asia'
  - SELECT country.name FROM country WHERE country.continent = 'Asia'
  - SELECT COUNT( country.continent ) FROM country WHERE country.continent = 'Asia' AND country.region = 'Asia'
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( * ) FROM country WHERE country.continent = 'Asia'
  - SELECT COUNT( * ) FROM country WHERE country.region = 'Asia'
  - SELECT COUNT( * ) FROM country WHERE country.continent = 'Asia' AND country.region = 'Asia'
  - SELECT COUNT( * ) FROM country WHERE country.region = 'Asia' AND country.region = 'Asia'
  - SELECT COUNT( * ) FROM city JOIN country ON city.countrycode = country.code WHERE country.continent = 'Asia'
  - SELECT COUNT( * ) FROM city JOIN country ON city.countrycode = country.code WHERE country.region = 'Asia'
  - SELECT COUNT( * ) FROM countrylanguage, country WHERE country.region = 'Asia' AND country.region = 'Asia'
  - SELECT country.name FROM country WHERE country.region = 'Asia'
  - SELECT country.name FROM country WHERE country.continent = 'Asia'
  - SELECT COUNT( country.continent ) FROM country WHERE country.continent = 'Asia' AND country.region = 'Asia'
ratsql_beam_join_columns:
- []
- []
- []
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
ratsql_beam_constants:
- - Asia
- - Asia
- - Asia
- - Asia
- - Asia
- - Asia
- - Asia
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - continent
- - continent
- - continent
- - continent
- - continent
- - continent
  - countrycode
- - continent
  - countrycode
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Count(*) FROM country WHERE country.Continent = 'terminal'
  - SELECT Count(*) FROM country WHERE DISTINCT country.Continent = 'terminal'
  - SELECT Count(DISTINCT *) FROM country WHERE country.Continent = 'terminal'
  - SELECT Count(*) FROM country WHERE country.Continent = 'terminal' LIMIT 1
  - SELECT DISTINCT Count(*) FROM country WHERE country.Continent = 'terminal'
  - SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'terminal'
  - SELECT Count(*) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = 'terminal'
  - SELECT Count(DISTINCT city.CountryCode) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = 'terminal'
  - SELECT Count(DISTINCT countrylanguage.CountryCode) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(*) FROM country WHERE country.Continent = 'Asia'
  - SELECT Count(*) FROM country WHERE DISTINCT country.Continent = 'Asia'
  - SELECT Count(DISTINCT *) FROM country WHERE country.Continent = 'Asia'
  - SELECT Count(*) FROM country WHERE country.Continent = 'Asia' LIMIT 1
  - SELECT DISTINCT Count(*) FROM country WHERE country.Continent = 'Asia'
  - SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia'
  - SELECT Count(*) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = 'Asia'
  - SELECT Count(DISTINCT city.CountryCode) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = 'Asia'
  - SELECT Count(DISTINCT countrylanguage.CountryCode) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia'
ratsql_beam_score_history:
- - -0.10788106918334961
  - -0.10516548156738281
  - -0.10503506660461426
  - -0.10407567024230957
  - -0.10091686248779297
  - -0.10792970657348633
  - -0.11421632766723633
  - -0.10385751724243164
  - -0.10569524765014648
  - -0.10458755493164062
  - -0.10557317733764648
  - -0.1466463953256607
  - -0.11066794395446777
  - -0.10544276237487793
  - -0.09867572784423828
  - -0.1016683578491211
  - -0.10155534744262695
  - -0.10109901428222656
  - -0.10469913482666016
  - -0.10471630096435547
  - -0.10507774353027344
  - -0.05894351005554199
  - -0.1119997501373291
  - -0.10547733306884766
  - -0.10538578033447266
  - -0.1003103256225586
  - -0.10278701782226562
  - -0.10776638984680176
  - -0.10472440719604492
  - -0.09827852249145508
  - -0.1033625602722168
  - -0.10961198806762695
  - -0.10538005828857422
  - -0.10383176803588867
  - -0.06302880495786667
- - -0.10788106918334961
  - -0.10516548156738281
  - -0.10503506660461426
  - -0.10407567024230957
  - -0.10091686248779297
  - -0.10792970657348633
  - -0.11421632766723633
  - -0.10385751724243164
  - -0.10569524765014648
  - -0.10458755493164062
  - -0.10557317733764648
  - -0.1466463953256607
  - -0.11066794395446777
  - -0.10544276237487793
  - -0.09867572784423828
  - -0.1016683578491211
  - -0.10155534744262695
  - -0.10109901428222656
  - -0.10469913482666016
  - -0.10471630096435547
  - -0.10507774353027344
  - -0.05894351005554199
  - -3.4396018981933594
  - -0.10542559623718262
  - -0.10503721237182617
  - -0.10004281997680664
  - -0.10253286361694336
  - -0.10776543617248535
  - -0.10473251342773438
  - -0.09837150573730469
  - -0.10300207138061523
  - -0.10970830917358398
  - -0.10533380508422852
  - -0.10380315780639648
  - -0.06279686093330383
- - -0.10788106918334961
  - -0.10516548156738281
  - -0.10503506660461426
  - -0.10407567024230957
  - -0.10091686248779297
  - -0.10792970657348633
  - -0.11421632766723633
  - -0.10385751724243164
  - -0.10569524765014648
  - -0.10458755493164062
  - -0.10557317733764648
  - -0.1466463953256607
  - -3.473828077316284
  - -0.10558843612670898
  - -0.10154056549072266
  - -0.10083770751953125
  - -0.10309362411499023
  - -0.10111379623413086
  - -0.10463190078735352
  - -0.10479116439819336
  - -0.10518360137939453
  - -0.06056751310825348
  - -0.11202740669250488
  - -0.1054682731628418
  - -0.10536527633666992
  - -0.1002955436706543
  - -0.1028742790222168
  - -0.10777831077575684
  - -0.10474014282226562
  - -0.09831905364990234
  - -0.10343551635742188
  - -0.10966014862060547
  - -0.10541486740112305
  - -0.10380315780639648
  - -0.06313266605138779
- - -0.10788106918334961
  - -0.10516548156738281
  - -0.10503506660461426
  - -0.10407567024230957
  - -0.10091686248779297
  - -0.10792970657348633
  - -0.11421632766723633
  - -0.10385751724243164
  - -0.10569524765014648
  - -0.10458755493164062
  - -0.10557317733764648
  - -0.1466463953256607
  - -0.11066794395446777
  - -0.10544276237487793
  - -0.09867572784423828
  - -0.1016683578491211
  - -0.10155534744262695
  - -0.10109901428222656
  - -0.10469913482666016
  - -0.10471630096435547
  - -0.10507774353027344
  - -0.05894351005554199
  - -0.1119997501373291
  - -0.10547733306884766
  - -0.10538578033447266
  - -0.1003103256225586
  - -0.10278701782226562
  - -3.551830530166626
  - -0.10496044158935547
  - -0.09911632537841797
  - -0.10329866409301758
  - -0.10964298248291016
  - -0.10561800003051758
  - -0.10381841659545898
  - -0.06265321373939514
- - -0.10788106918334961
  - -0.10516548156738281
  - -3.590912342071533
  - -0.10400962829589844
  - -0.09968709945678711
  - -0.11157608032226562
  - -0.11345243453979492
  - -0.10403203964233398
  - -0.10544633865356445
  - -0.10458564758300781
  - -0.10553646087646484
  - -0.14691001176834106
  - -0.11072254180908203
  - -0.10543465614318848
  - -0.09833908081054688
  - -0.10161876678466797
  - -0.10163450241088867
  - -0.10113382339477539
  - -0.10466194152832031
  - -0.10469436645507812
  - -0.10509538650512695
  - -0.05899969860911369
  - -0.11199641227722168
  - -0.10548043251037598
  - -0.10538578033447266
  - -0.10029315948486328
  - -0.1027836799621582
  - -0.10776472091674805
  - -0.10472631454467773
  - -0.09827232360839844
  - -0.10335493087768555
  - -0.10960674285888672
  - -0.10537290573120117
  - -0.10383272171020508
  - -0.0630563348531723
- - -0.10788106918334961
  - -0.10516548156738281
  - -0.10503506660461426
  - -0.10407567024230957
  - -0.10091686248779297
  - -0.10792970657348633
  - -0.11421632766723633
  - -0.10385751724243164
  - -0.10569524765014648
  - -0.10458755493164062
  - -0.10557317733764648
  - -0.1466463953256607
  - -0.11066794395446777
  - -0.10544276237487793
  - -0.09867572784423828
  - -0.1016683578491211
  - -0.10155534744262695
  - -0.10109901428222656
  - -0.10469913482666016
  - -0.10471630096435547
  - -0.10507774353027344
  - -0.05894351005554199
  - -0.1119997501373291
  - -0.10547733306884766
  - -0.10538578033447266
  - -0.1003103256225586
  - -0.10278701782226562
  - -0.10776638984680176
  - -0.10472440719604492
  - -0.09827852249145508
  - -0.1033625602722168
  - -0.10961198806762695
  - -0.10538005828857422
  - -0.10383176803588867
  - -3.8355765342712402
- - -0.10788106918334961
  - -0.10516548156738281
  - -0.10503506660461426
  - -0.10407567024230957
  - -0.10091686248779297
  - -0.10792970657348633
  - -0.11421632766723633
  - -0.10385751724243164
  - -0.10569524765014648
  - -0.10458755493164062
  - -0.10557317733764648
  - -0.1466463953256607
  - -0.11066794395446777
  - -0.10544276237487793
  - -0.09867572784423828
  - -0.1016683578491211
  - -0.10155534744262695
  - -0.10109901428222656
  - -0.10469913482666016
  - -0.10471630096435547
  - -0.10507774353027344
  - -0.05894351005554199
  - -0.1119997501373291
  - -0.10547733306884766
  - -0.10538578033447266
  - -0.1003103256225586
  - -0.10278701782226562
  - -0.10776638984680176
  - -0.10472440719604492
  - -0.09827852249145508
  - -0.1033625602722168
  - -0.10961198806762695
  - -0.10538005828857422
  - -0.10383176803588867
  - -3.9059202671051025
- - -0.10788106918334961
  - -0.10516548156738281
  - -0.10503506660461426
  - -0.10407567024230957
  - -0.10091686248779297
  - -0.10792970657348633
  - -0.11421632766723633
  - -0.10385751724243164
  - -0.10569524765014648
  - -0.10458755493164062
  - -0.10557317733764648
  - -4.975490570068359
  - -0.1309516429901123
  - -0.10549354553222656
  - -0.09701204299926758
  - -0.10524940490722656
  - -0.10196447372436523
  - -0.10092592239379883
  - -0.10460567474365234
  - -0.10465574264526367
  - -0.10507011413574219
  - -0.06881691515445709
  - -0.11221790313720703
  - -0.10542774200439453
  - -0.10532188415527344
  - -0.1003413200378418
  - -0.10358619689941406
  - -0.10779142379760742
  - -0.10475301742553711
  - -0.09809732437133789
  - -0.10351896286010742
  - -0.10929059982299805
  - -0.10506248474121094
  - -0.10372781753540039
  - -0.06939641386270523
- - -0.10788106918334961
  - -0.10516548156738281
  - -0.10503506660461426
  - -0.10407567024230957
  - -0.10091686248779297
  - -0.10792970657348633
  - -0.11421632766723633
  - -0.10385751724243164
  - -0.10569524765014648
  - -0.10458755493164062
  - -0.10557317733764648
  - -4.907341957092285
  - -0.1945946216583252
  - -0.10528945922851562
  - -0.09720039367675781
  - -0.10460376739501953
  - -0.10144996643066406
  - -0.10090827941894531
  - -0.10478925704956055
  - -0.10476970672607422
  - -0.10520219802856445
  - -0.06779126822948456
  - -0.11221718788146973
  - -0.10541963577270508
  - -0.10528707504272461
  - -0.10036659240722656
  - -0.1035776138305664
  - -0.10779047012329102
  - -0.10475516319274902
  - -0.09787750244140625
  - -0.10470438003540039
  - -0.11724281311035156
  - -0.10457944869995117
  - -0.10373163223266602
  - -0.0819549411535263
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
