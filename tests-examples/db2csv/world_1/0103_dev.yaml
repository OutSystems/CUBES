db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/country.csv
output: tests-examples/db2csv/world_1/tables/0103_dev.csv
raw_question: What are the names of the nations with the 3 lowest populations? 
question_index: 804 
has_limit: True 
has_order_by: True 
order_by_direction:
 -  asc 
constants:
 - '3'
join_columns: []
groupby_columns: []
functions: []
columns: []
filters: []
ieu: []
comment: |-
  SELECT Name
  FROM country
  ORDER BY Population ASC
  LIMIT 3

sql: |-
  SELECT Name
  FROM country
  ORDER BY Population ASC
  LIMIT 3
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- - population
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
smbop_beam_constants:
- - '3'
- []
- - '3'
- - '3'
- - '3'
- - '3'
- []
- []
- []
- []
smbop_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT country.name FROM country ORDER BY country.population ASC LIMIT 3
  - SELECT country.name FROM country ORDER BY country.population ASC
  - SELECT country.population FROM country ORDER BY country.population ASC LIMIT 3
  - SELECT country.code FROM country ORDER BY country.population ASC LIMIT 3
  - SELECT country.localname FROM country ORDER BY country.population ASC LIMIT 3
  - SELECT country.name FROM country ORDER BY country.population DESC LIMIT 3
  - SELECT country.population FROM country ORDER BY country.population ASC
  - SELECT country.population FROM country GROUP BY country.population
  - SELECT country.population FROM country
  - SELECT country.name FROM country ORDER BY country.population DESC
smbop_beam_inferred_code_w_terminals:
  - SELECT country.name FROM country ORDER BY country.population ASC LIMIT 3
  - SELECT country.name FROM country ORDER BY country.population ASC
  - SELECT country.population FROM country ORDER BY country.population ASC LIMIT 3
  - SELECT country.code FROM country ORDER BY country.population ASC LIMIT 3
  - SELECT country.localname FROM country ORDER BY country.population ASC LIMIT 3
  - SELECT country.name FROM country ORDER BY country.population DESC LIMIT 3
  - SELECT country.population FROM country ORDER BY country.population ASC
  - SELECT country.population FROM country GROUP BY country.population
  - SELECT country.population FROM country
  - SELECT country.name FROM country ORDER BY country.population DESC
smbop_beam_has_limit:
  - True
  - False
  - True
  - True
  - True
  - True
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - True
  - True
  - True
  - True
  - True
  - True
  - True
  - False
  - False
  - True
smbop_beam_order_by_direction:
- -  asc 
- []
- -  asc 
- -  asc 
- -  asc 
- -  desc 
- []
- []
- []
- []
ratsql_beam_join_columns:
- []
- - countrycode
  - code
- []
- - countrycode
  - code
- []
- []
- []
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
ratsql_beam_constants:
- - 3
  - '1'
- - 3
  - '1'
- - 3
  - '1'
- - 3
  - '1'
- - 3
  - '1'
- - 3
- - 3
  - '1'
- - 3
  - '1'
ratsql_beam_functions:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT country.Name FROM country ORDER BY country.Population Asc LIMIT 1
  - SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code ORDER BY country.Population Asc LIMIT 1
  - SELECT DISTINCT country.Name FROM country ORDER BY country.Population Asc LIMIT 1
  - SELECT country.Name FROM country ORDER BY DISTINCT country.Population Asc LIMIT 1
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode ORDER BY country.Population Asc LIMIT 1
  - SELECT country.Name FROM country ORDER BY country.Population Asc
  - SELECT country.Code FROM country ORDER BY country.Population Asc LIMIT 1
  - SELECT country.Name FROM country ORDER BY country.Population - country.Population Asc LIMIT 1
ratsql_beam_inferred_code_w_terminals:
  - SELECT country.Name FROM country ORDER BY country.Population Asc LIMIT 1
  - SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code ORDER BY country.Population Asc LIMIT 1
  - SELECT DISTINCT country.Name FROM country ORDER BY country.Population Asc LIMIT 1
  - SELECT country.Name FROM country ORDER BY DISTINCT country.Population Asc LIMIT 1
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode ORDER BY country.Population Asc LIMIT 1
  - SELECT country.Name FROM country ORDER BY country.Population Asc
  - SELECT country.Code FROM country ORDER BY country.Population Asc LIMIT 1
  - SELECT country.Name FROM country ORDER BY country.Population - country.Population Asc LIMIT 1
ratsql_beam_has_limit:
  - True
  - True
  - True
  - True
  - False
  - True
  - True
ratsql_beam_has_order_by:
  - True
  - True
  - True
  - True
  - True
  - True
  - True
ratsql_beam_order_by_direction:
- -  asc 
- -  asc 
- -  asc 
- -  asc 
- []
- -  asc 
- -  asc 
ratsql_beam_score_history:
- - -0.11164665222167969
  - -0.10463285446166992
  - -0.11525368690490723
  - -0.10428643226623535
  - -0.10069847106933594
  - -0.10362911224365234
  - -0.10448980331420898
  - -0.1015162467956543
  - -0.10470151901245117
  - -0.1051931381225586
  - -0.10518693923950195
  - -0.09372356534004211
  - -0.11284160614013672
  - -0.10457730293273926
  - -0.11624908447265625
  - -0.09889650344848633
  - -0.10150766372680664
  - -0.09765338897705078
  - -0.100555419921875
  - -0.10892868041992188
  - -0.09744071960449219
  - -0.10448646545410156
  - -0.10576391220092773
  - -0.10363578796386719
  - -0.07581369578838348
  - -0.1120598316192627
  - -0.10586261749267578
  - -0.09670734405517578
  - -0.10490822792053223
  - -0.09815502166748047
  - -0.10457324981689453
  - -0.15105056762695312
  - -0.10492515563964844
  - -0.10314607620239258
  - -0.09864380210638046
- - -0.11164665222167969
  - -0.10463285446166992
  - -0.11525368690490723
  - -0.10428643226623535
  - -0.10069847106933594
  - -0.10362911224365234
  - -0.10448980331420898
  - -0.1015162467956543
  - -0.10470151901245117
  - -0.1051931381225586
  - -0.10518693923950195
  - -0.09372356534004211
  - -0.11284160614013672
  - -0.10457730293273926
  - -0.11624908447265625
  - -0.09889650344848633
  - -0.10150766372680664
  - -0.09765338897705078
  - -0.100555419921875
  - -0.10892868041992188
  - -0.09744071960449219
  - -0.10448646545410156
  - -0.10576391220092773
  - -0.10363578796386719
  - -0.07581369578838348
  - -0.1120598316192627
  - -0.10586261749267578
  - -0.09670734405517578
  - -0.10490822792053223
  - -0.09815502166748047
  - -0.10457324981689453
  - -0.15105056762695312
  - -0.10492515563964844
  - -0.10314607620239258
  - -3.1677005290985107
- - -0.11164665222167969
  - -0.10463285446166992
  - -3.2962307929992676
  - -0.10437440872192383
  - -0.10072755813598633
  - -0.1032567024230957
  - -0.10437870025634766
  - -0.10155582427978516
  - -0.10465240478515625
  - -0.10510540008544922
  - -0.10515880584716797
  - -0.08916039764881134
  - -0.11282849311828613
  - -0.10461139678955078
  - -0.11593294143676758
  - -0.09856939315795898
  - -0.10109758377075195
  - -0.09785985946655273
  - -0.100982666015625
  - -0.10844898223876953
  - -0.09746837615966797
  - -0.10446929931640625
  - -0.10575723648071289
  - -0.10362529754638672
  - -0.07580938935279846
  - -0.11207199096679688
  - -0.10586285591125488
  - -0.09669137001037598
  - -0.1049189567565918
  - -0.09814691543579102
  - -0.10456180572509766
  - -0.1510148048400879
  - -0.10492706298828125
  - -0.10314321517944336
  - -0.0987643301486969
- - -0.11164665222167969
  - -0.10463285446166992
  - -0.11525368690490723
  - -0.10428643226623535
  - -0.10069847106933594
  - -0.10362911224365234
  - -0.10448980331420898
  - -0.1015162467956543
  - -0.10470151901245117
  - -0.1051931381225586
  - -0.10518693923950195
  - -0.09372356534004211
  - -0.11284160614013672
  - -0.10457730293273926
  - -0.11624908447265625
  - -0.09889650344848633
  - -0.10150766372680664
  - -0.09765338897705078
  - -0.100555419921875
  - -0.10892868041992188
  - -0.09744071960449219
  - -0.10448646545410156
  - -0.10576391220092773
  - -0.10363578796386719
  - -0.07581369578838348
  - -3.447049140930176
  - -0.10582780838012695
  - -0.0967099666595459
  - -0.1049339771270752
  - -0.09818172454833984
  - -0.10470962524414062
  - -0.1507248878479004
  - -0.10491943359375
  - -0.10314226150512695
  - -0.09886682033538818
- - -0.11164665222167969
  - -0.10463285446166992
  - -0.11525368690490723
  - -0.10428643226623535
  - -0.10069847106933594
  - -0.10362911224365234
  - -0.10448980331420898
  - -0.1015162467956543
  - -0.10470151901245117
  - -0.1051931381225586
  - -0.10518693923950195
  - -0.09372356534004211
  - -0.11284160614013672
  - -0.10457730293273926
  - -0.11624908447265625
  - -0.09889650344848633
  - -0.10150766372680664
  - -0.09765338897705078
  - -0.100555419921875
  - -0.10892868041992188
  - -0.09744071960449219
  - -0.10448646545410156
  - -0.10576391220092773
  - -0.10363578796386719
  - -0.07581369578838348
  - -0.1120598316192627
  - -0.10586261749267578
  - -0.09670734405517578
  - -0.10490822792053223
  - -0.09815502166748047
  - -0.10457324981689453
  - -0.15105056762695312
  - -0.10492515563964844
  - -0.10314607620239258
  - -3.6665842533111572
- - -0.11164665222167969
  - -0.10463285446166992
  - -0.11525368690490723
  - -0.10428643226623535
  - -0.10069847106933594
  - -0.10362911224365234
  - -0.10448980331420898
  - -0.1015162467956543
  - -0.10470151901245117
  - -0.1051931381225586
  - -0.10518693923950195
  - -0.09372356534004211
  - -0.11284160614013672
  - -0.10457730293273926
  - -0.11624908447265625
  - -0.09889650344848633
  - -0.10150766372680664
  - -0.09765338897705078
  - -0.100555419921875
  - -0.10892868041992188
  - -0.09744071960449219
  - -0.10448646545410156
  - -0.10576391220092773
  - -0.10363578796386719
  - -0.07581369578838348
  - -0.1120598316192627
  - -0.10586261749267578
  - -3.766784429550171
  - -0.11648178100585938
  - -0.10311508178710938
  - -0.15105485916137695
  - -0.10492897033691406
  - -0.10323572158813477
  - -0.0971532091498375
- - -0.11164665222167969
  - -0.10463285446166992
  - -0.11525368690490723
  - -0.10428643226623535
  - -0.10069847106933594
  - -0.10362911224365234
  - -0.10448980331420898
  - -0.1015162467956543
  - -0.10470151901245117
  - -0.1051931381225586
  - -0.10518693923950195
  - -5.191092014312744
  - -0.11313319206237793
  - -0.10410141944885254
  - -0.1167597770690918
  - -0.10164594650268555
  - -0.10385274887084961
  - -0.09695148468017578
  - -0.10039281845092773
  - -0.1091766357421875
  - -0.09859037399291992
  - -0.10444307327270508
  - -0.10578250885009766
  - -0.10367107391357422
  - -0.07650897651910782
  - -0.11205196380615234
  - -0.10587072372436523
  - -0.09664273262023926
  - -0.10491704940795898
  - -0.09813880920410156
  - -0.10458135604858398
  - -0.15361976623535156
  - -0.10492515563964844
  - -0.1031494140625
  - -0.0984523817896843
- - -0.11164665222167969
  - -0.10463285446166992
  - -0.11525368690490723
  - -0.10428643226623535
  - -0.10069847106933594
  - -0.10362911224365234
  - -0.10448980331420898
  - -0.1015162467956543
  - -0.10470151901245117
  - -0.1051931381225586
  - -0.10518693923950195
  - -0.09372356534004211
  - -0.11284160614013672
  - -0.10457730293273926
  - -0.11624908447265625
  - -0.09889650344848633
  - -0.10150766372680664
  - -0.09765338897705078
  - -0.100555419921875
  - -0.10892868041992188
  - -5.068630695343018
  - -0.09816360473632812
  - -0.1044321060180664
  - -0.10323762893676758
  - -0.060096144676208496
  - -0.1128530502319336
  - -0.10582756996154785
  - -0.09063434600830078
  - -0.09342384338378906
  - -0.3269202411174774
  - -0.11200237274169922
  - -0.10583782196044922
  - -0.09641218185424805
  - -0.10508012771606445
  - -0.09921550750732422
  - -0.1035146713256836
  - -0.16399812698364258
  - -0.10502386093139648
  - -0.10329389572143555
  - -0.09532038867473602
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Asc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Asc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Asc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Asc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'True'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Asc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Asc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Asc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Asc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Minus')
  - ('Minus', (True, True))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
