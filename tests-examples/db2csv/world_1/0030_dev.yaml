db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/country.csv
output: tests-examples/db2csv/world_1/tables/0030_dev.csv
raw_question: Give the mean GNP and total population of nations which are considered US territory. 
question_index: 731 
constants:
 - US Territory
functions:
 - avg
 - sum
columns:
 - governmentform
 - population
 - gnp
filters:
 - '='
comment: |-
  SELECT avg(GNP),
         sum(population)
  FROM country
  WHERE GovernmentForm = "US Territory"

sql: |-
  SELECT avg(GNP),
         sum(population)
  FROM country
  WHERE GovernmentForm = "US Territory"
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
smbop_beam_constants:
- []
- []
- []
- []
- []
- []
- []
smbop_beam_functions:
- - avg
  - sum
- - avg
  - sum
- - avg
  - sum
- - avg
  - sum
- - avg
  - sum
- - avg
  - sum
- - avg
  - sum
smbop_beam_columns:
- - code
  - population
  - gnp
- - population
  - region
  - gnp
- - code
  - population
  - gnp
- - code
  - population
  - region
  - gnp
- - population
  - region
  - gnp
- - code
  - gnpold
  - population
  - gnp
- - population
  - code2
  - gnp
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT AVG( country.gnp ) , SUM( country.population ) FROM country WHERE country.code = 'US territory'
  - SELECT AVG( country.gnp ) , SUM( country.population ) FROM country WHERE country.region = 'US territory'
  - SELECT AVG( country.gnp ) , SUM( country.population ) FROM country WHERE country.code = 'US'
  - SELECT AVG( country.gnp ) , SUM( country.population ) FROM country WHERE country.code = 'US territory' AND country.region = 'US territory'
  - SELECT AVG( country.gnp ) , SUM( country.population ) FROM country WHERE country.region = 'US'
  - SELECT AVG( country.gnp ) , AVG( country.gnpold ) , SUM( country.population ) FROM country WHERE country.code = 'US territory'
  - SELECT AVG( country.gnp ) , SUM( country.population ) FROM country WHERE country.code2 = 'US territory'
smbop_beam_inferred_code_w_terminals:
  - SELECT AVG( country.gnp ) , SUM( country.population ) FROM country WHERE country.code = 'US territory'
  - SELECT AVG( country.gnp ) , SUM( country.population ) FROM country WHERE country.region = 'US territory'
  - SELECT AVG( country.gnp ) , SUM( country.population ) FROM country WHERE country.code = 'US'
  - SELECT AVG( country.gnp ) , SUM( country.population ) FROM country WHERE country.code = 'US territory' AND country.region = 'US territory'
  - SELECT AVG( country.gnp ) , SUM( country.population ) FROM country WHERE country.region = 'US'
  - SELECT AVG( country.gnp ) , AVG( country.gnpold ) , SUM( country.population ) FROM country WHERE country.code = 'US territory'
  - SELECT AVG( country.gnp ) , SUM( country.population ) FROM country WHERE country.code2 = 'US territory'
ratsql_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
ratsql_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_functions:
- - avg
  - sum
- - avg
  - sum
- - avg
  - sum
- - avg
  - sum
- - avg
  - sum
- - avg
  - sum
- - avg
  - sum
- - avg
  - sum
- - avg
  - sum
ratsql_beam_columns:
- - governmentform
  - population
  - gnp
- - population
  - code2
  - gnp
- - governmentform
  - population
- - localname
  - population
  - gnp
- - population
  - code2
- - governmentform
  - population
  - gnp
- - governmentform
  - population
  - gnp
- - governmentform
  - population
  - gnp
- - governmentform
  - population
  - gnp
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Avg(country.GNP), Sum(country.Population) FROM country WHERE country.GovernmentForm = 'terminal'
  - SELECT Avg(country.GNP), Sum(country.Population) FROM country WHERE country.Code2 = 'terminal'
  - SELECT Avg(country.Population), Sum(country.Population) FROM country WHERE country.GovernmentForm = 'terminal'
  - SELECT Avg(country.GNP), Sum(country.Population) FROM country WHERE country.LocalName = 'terminal'
  - SELECT Avg(country.Population), Sum(country.Population) FROM country WHERE country.Code2 = 'terminal'
  - SELECT Avg(country.GNP), Sum(country.Population) FROM country WHERE DISTINCT country.GovernmentForm = 'terminal'
  - SELECT Avg(country.GNP), Sum(DISTINCT country.Population) FROM country WHERE country.GovernmentForm = 'terminal'
  - SELECT Avg(DISTINCT country.GNP), Sum(country.Population) FROM country WHERE country.GovernmentForm = 'terminal'
  - SELECT Avg(country.GNP), Sum(country.Population) FROM country WHERE country.GovernmentForm = 'terminal' LIMIT 1
  - SELECT DISTINCT Avg(country.GNP), Sum(country.Population) FROM country WHERE country.GovernmentForm = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - 
  - SELECT Avg(country.GNP), Sum(country.Population) FROM country WHERE country.Code2 = 'GN'
  - 
  - 
  - SELECT Avg(country.Population), Sum(country.Population) FROM country WHERE country.Code2 = 'GN'
  - 
  - 
  - 
  - 
  - 
ratsql_beam_score_history:
- - -0.10730695724487305
  - -0.10509729385375977
  - -0.10584592819213867
  - -0.10418367385864258
  - -0.1399555206298828
  - -0.10416269302368164
  - -0.09643888473510742
  - -0.10552310943603516
  - -0.10670089721679688
  - -0.10466575622558594
  - -0.10631561279296875
  - -0.24590088427066803
  - -0.10985469818115234
  - -0.10503125190734863
  - -0.12763166427612305
  - -0.08406543731689453
  - -0.1009511947631836
  - -0.10893392562866211
  - -0.10361099243164062
  - -0.10615158081054688
  - -0.08539775013923645
  - -0.1113131046295166
  - -0.1049652099609375
  - -0.09437131881713867
  - -0.10988855361938477
  - -0.10091495513916016
  - -0.1021585464477539
  - -0.10447263717651367
  - -0.10426902770996094
  - -0.10547351837158203
  - -0.3304421007633209
  - -0.11200690269470215
  - -0.10571026802062988
  - -0.10467958450317383
  - -0.10144662857055664
  - -0.10428714752197266
  - -0.10805010795593262
  - -0.10442256927490234
  - -0.10061979293823242
  - -0.10318708419799805
  - -0.1090540885925293
  - -0.10527896881103516
  - -0.10359334945678711
  - -0.05969149246811867
- - -0.10730695724487305
  - -0.10509729385375977
  - -0.10584592819213867
  - -0.10418367385864258
  - -0.1399555206298828
  - -0.10416269302368164
  - -0.09643888473510742
  - -0.10552310943603516
  - -0.10670089721679688
  - -0.10466575622558594
  - -0.10631561279296875
  - -0.24590088427066803
  - -0.10985469818115234
  - -0.10503125190734863
  - -0.12763166427612305
  - -0.08406543731689453
  - -0.1009511947631836
  - -0.10893392562866211
  - -0.10361099243164062
  - -0.10615158081054688
  - -0.08539775013923645
  - -0.1113131046295166
  - -0.1049652099609375
  - -0.09437131881713867
  - -0.10988855361938477
  - -0.10091495513916016
  - -0.1021585464477539
  - -0.10447263717651367
  - -0.10426902770996094
  - -0.10547351837158203
  - -1.8742595911026
  - -0.11311101913452148
  - -0.10540151596069336
  - -0.10460424423217773
  - -0.1015620231628418
  - -0.10444021224975586
  - -0.10803341865539551
  - -0.10442543029785156
  - -0.10070085525512695
  - -0.10313224792480469
  - -0.10903501510620117
  - -0.1052541732788086
  - -0.10357236862182617
  - -0.05979132279753685
- - -0.10730695724487305
  - -0.10509729385375977
  - -0.10584592819213867
  - -0.10418367385864258
  - -0.1399555206298828
  - -0.10416269302368164
  - -0.09643888473510742
  - -0.10552310943603516
  - -0.10670089721679688
  - -0.10466575622558594
  - -0.10631561279296875
  - -1.8924493789672852
  - -0.10777401924133301
  - -0.10522246360778809
  - -0.12870121002197266
  - -0.0990595817565918
  - -0.10010051727294922
  - -0.1077885627746582
  - -0.10375499725341797
  - -0.10655498504638672
  - -0.09908946603536606
  - -0.11120772361755371
  - -0.10504460334777832
  - -0.09491825103759766
  - -0.10302925109863281
  - -0.10102462768554688
  - -0.10217523574829102
  - -0.10442733764648438
  - -0.10429096221923828
  - -0.1054377555847168
  - -0.32997655868530273
  - -0.11201262474060059
  - -0.10570836067199707
  - -0.1047520637512207
  - -0.10164070129394531
  - -0.10388660430908203
  - -0.10804104804992676
  - -0.10442471504211426
  - -0.10126686096191406
  - -0.10319948196411133
  - -0.10912609100341797
  - -0.10526657104492188
  - -0.10360908508300781
  - -0.05951302871108055
- - -0.10730695724487305
  - -0.10509729385375977
  - -0.10584592819213867
  - -0.10418367385864258
  - -0.1399555206298828
  - -0.10416269302368164
  - -0.09643888473510742
  - -0.10552310943603516
  - -0.10670089721679688
  - -0.10466575622558594
  - -0.10631561279296875
  - -0.24590088427066803
  - -0.10985469818115234
  - -0.10503125190734863
  - -0.12763166427612305
  - -0.08406543731689453
  - -0.1009511947631836
  - -0.10893392562866211
  - -0.10361099243164062
  - -0.10615158081054688
  - -0.08539775013923645
  - -0.1113131046295166
  - -0.1049652099609375
  - -0.09437131881713867
  - -0.10988855361938477
  - -0.10091495513916016
  - -0.1021585464477539
  - -0.10447263717651367
  - -0.10426902770996094
  - -0.10547351837158203
  - -2.8699307441711426
  - -0.11243176460266113
  - -0.10567879676818848
  - -0.10468292236328125
  - -0.10147285461425781
  - -0.10442781448364258
  - -0.10804510116577148
  - -0.10441350936889648
  - -0.10022401809692383
  - -0.10322713851928711
  - -0.10904121398925781
  - -0.10534524917602539
  - -0.10361814498901367
  - -0.059242185205221176
- - -0.10730695724487305
  - -0.10509729385375977
  - -0.10584592819213867
  - -0.10418367385864258
  - -0.1399555206298828
  - -0.10416269302368164
  - -0.09643888473510742
  - -0.10552310943603516
  - -0.10670089721679688
  - -0.10466575622558594
  - -0.10631561279296875
  - -1.8924493789672852
  - -0.10777401924133301
  - -0.10522246360778809
  - -0.12870121002197266
  - -0.0990595817565918
  - -0.10010051727294922
  - -0.1077885627746582
  - -0.10375499725341797
  - -0.10655498504638672
  - -0.09908946603536606
  - -0.11120772361755371
  - -0.10504460334777832
  - -0.09491825103759766
  - -0.10302925109863281
  - -0.10102462768554688
  - -0.10217523574829102
  - -0.10442733764648438
  - -0.10429096221923828
  - -0.1054377555847168
  - -1.874229907989502
  - -0.11311173439025879
  - -0.1053934097290039
  - -0.10470247268676758
  - -0.10174179077148438
  - -0.10397481918334961
  - -0.10802483558654785
  - -0.10442805290222168
  - -0.10128641128540039
  - -0.10314464569091797
  - -0.10909891128540039
  - -0.10524129867553711
  - -0.10358476638793945
  - -0.059631746262311935
- - -0.10730695724487305
  - -0.10509729385375977
  - -0.10584592819213867
  - -0.10418367385864258
  - -0.1399555206298828
  - -0.10416269302368164
  - -0.09643888473510742
  - -0.10552310943603516
  - -0.10670089721679688
  - -0.10466575622558594
  - -0.10631561279296875
  - -0.24590088427066803
  - -0.10985469818115234
  - -0.10503125190734863
  - -0.12763166427612305
  - -0.08406543731689453
  - -0.1009511947631836
  - -0.10893392562866211
  - -0.10361099243164062
  - -0.10615158081054688
  - -0.08539775013923645
  - -0.1113131046295166
  - -0.1049652099609375
  - -0.09437131881713867
  - -0.10988855361938477
  - -0.10091495513916016
  - -0.1021585464477539
  - -0.10447263717651367
  - -0.10426902770996094
  - -0.10547351837158203
  - -0.3304421007633209
  - -3.4377875328063965
  - -0.10574507713317871
  - -0.10411643981933594
  - -0.10173702239990234
  - -0.1044468879699707
  - -0.1080312728881836
  - -0.10444259643554688
  - -0.10027074813842773
  - -0.10283565521240234
  - -0.10908842086791992
  - -0.10525035858154297
  - -0.10356330871582031
  - -0.0601838156580925
- - -0.10730695724487305
  - -0.10509729385375977
  - -0.10584592819213867
  - -0.10418367385864258
  - -0.1399555206298828
  - -0.10416269302368164
  - -0.09643888473510742
  - -0.10552310943603516
  - -0.10670089721679688
  - -0.10466575622558594
  - -0.10631561279296875
  - -0.24590088427066803
  - -0.10985469818115234
  - -0.10503125190734863
  - -0.12763166427612305
  - -0.08406543731689453
  - -0.1009511947631836
  - -0.10893392562866211
  - -0.10361099243164062
  - -0.10615158081054688
  - -0.08539775013923645
  - -3.4581828117370605
  - -0.10455965995788574
  - -0.09533023834228516
  - -0.11375999450683594
  - -0.1009984016418457
  - -0.10192060470581055
  - -0.10446882247924805
  - -0.10448455810546875
  - -0.1054987907409668
  - -0.3243464231491089
  - -0.11186981201171875
  - -0.10573530197143555
  - -0.10472822189331055
  - -0.10145854949951172
  - -0.10432624816894531
  - -0.10806441307067871
  - -0.10442876815795898
  - -0.10087013244628906
  - -0.10317039489746094
  - -0.10904073715209961
  - -0.105255126953125
  - -0.10359001159667969
  - -0.05968857184052467
- - -0.10730695724487305
  - -0.10509729385375977
  - -0.10584592819213867
  - -0.10418367385864258
  - -0.1399555206298828
  - -0.10416269302368164
  - -0.09643888473510742
  - -0.10552310943603516
  - -0.10670089721679688
  - -0.10466575622558594
  - -0.10631561279296875
  - -0.24590088427066803
  - -3.47810959815979
  - -0.10492706298828125
  - -0.12851238250732422
  - -0.0834813117980957
  - -0.10100126266479492
  - -0.10767364501953125
  - -0.10387229919433594
  - -0.10596990585327148
  - -0.09344945847988129
  - -0.1112978458404541
  - -0.10500073432922363
  - -0.09402894973754883
  - -0.10996818542480469
  - -0.10079431533813477
  - -0.10213804244995117
  - -0.10448741912841797
  - -0.10426998138427734
  - -0.10549497604370117
  - -0.33061787486076355
  - -0.11200809478759766
  - -0.10570764541625977
  - -0.10468339920043945
  - -0.10141515731811523
  - -0.1043691635131836
  - -0.10806059837341309
  - -0.1044304370880127
  - -0.10051250457763672
  - -0.10318613052368164
  - -0.10903501510620117
  - -0.10527610778808594
  - -0.10358572006225586
  - -0.05978413671255112
- - -0.10730695724487305
  - -0.10509729385375977
  - -0.10584592819213867
  - -0.10418367385864258
  - -0.1399555206298828
  - -0.10416269302368164
  - -0.09643888473510742
  - -0.10552310943603516
  - -0.10670089721679688
  - -0.10466575622558594
  - -0.10631561279296875
  - -0.24590088427066803
  - -0.10985469818115234
  - -0.10503125190734863
  - -0.12763166427612305
  - -0.08406543731689453
  - -0.1009511947631836
  - -0.10893392562866211
  - -0.10361099243164062
  - -0.10615158081054688
  - -0.08539775013923645
  - -0.1113131046295166
  - -0.1049652099609375
  - -0.09437131881713867
  - -0.10988855361938477
  - -0.10091495513916016
  - -0.1021585464477539
  - -0.10447263717651367
  - -0.10426902770996094
  - -0.10547351837158203
  - -0.3304421007633209
  - -0.11200690269470215
  - -0.10571026802062988
  - -0.10467958450317383
  - -0.10144662857055664
  - -0.10428714752197266
  - -3.5447874069213867
  - -0.10466909408569336
  - -0.10017681121826172
  - -0.10350799560546875
  - -0.10892343521118164
  - -0.10516643524169922
  - -0.10350179672241211
  - -0.06073356047272682
- - -0.10730695724487305
  - -0.10509729385375977
  - -3.570427894592285
  - -0.10367131233215332
  - -0.13174867630004883
  - -0.1050872802734375
  - -0.10041666030883789
  - -0.10509061813354492
  - -0.10606765747070312
  - -0.10456037521362305
  - -0.10610246658325195
  - -0.23290392756462097
  - -0.10988640785217285
  - -0.10503101348876953
  - -0.12891292572021484
  - -0.08496475219726562
  - -0.10096502304077148
  - -0.10909557342529297
  - -0.10369396209716797
  - -0.10618066787719727
  - -0.08707839250564575
  - -0.11132097244262695
  - -0.10497212409973145
  - -0.09430980682373047
  - -0.11012077331542969
  - -0.10087347030639648
  - -0.10215425491333008
  - -0.10447311401367188
  - -0.10427141189575195
  - -0.10548782348632812
  - -0.33058273792266846
  - -0.11200356483459473
  - -0.10570955276489258
  - -0.1046900749206543
  - -0.10144472122192383
  - -0.10426759719848633
  - -0.10805320739746094
  - -0.10442376136779785
  - -0.1006326675415039
  - -0.10319900512695312
  - -0.1090250015258789
  - -0.10527658462524414
  - -0.1035919189453125
  - -0.06034049764275551
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GNP'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GNP'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code2'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GNP'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'LocalName'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code2'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GNP'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GNP'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GNP'
  - 'True'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GNP'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GNP'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Sum')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Population'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
