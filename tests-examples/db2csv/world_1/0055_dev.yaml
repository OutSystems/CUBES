db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/countrylanguage.csv
 - tests-examples/db2csv/world_1/tables/country.csv
output: tests-examples/db2csv/world_1/tables/0055_dev.csv
raw_question: Which language is the most popular on the Asian continent? 
question_index: 756 
has_limit: True 
has_order_by: True 
order_by_direction:
 -  desc 
constants:
 - Asia
 - '1'
join_columns:
 - countrycode
 - code
groupby_columns:
 - language
orderby_columns:
 - language
functions:
 - count
columns:
 - continent
filters:
 - '='
ieu: []
comment: |-
  SELECT T2.Language
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T1.Continent = "Asia"
  GROUP BY T2.Language
  ORDER BY COUNT (*) DESC
  LIMIT 1

sql: |-
  SELECT T2.Language
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T1.Continent = "Asia"
  GROUP BY T2.Language
  ORDER BY COUNT (*) DESC
  LIMIT 1
smbop_beam_join_columns:
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- []
- []
- []
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
smbop_beam_groupby_columns:
- - countrycode
- - language
- []
- - language
- []
- []
- []
- []
- []
- []
smbop_beam_orderby_columns:
- - order
- - order
- - order
- - order
- []
- []
- []
- []
- []
- - order
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
smbop_beam_constants:
- - Asia
  - '1'
- - Asia
  - '1'
- - Asia
  - '1'
- - Asia
  - '1'
- - Asia
- - Asia
- - Asia
- - Asia
- - Asia
- - Asia
smbop_beam_functions:
- - count
- - count
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_columns:
- - continent
- - continent
- - continent
- - continent
- - continent
- []
- []
- - continent
- - continent
- - continent
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- []
- []
- - '='
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.continent = 'Asian' GROUP BY countrylanguage.countrycode ORDER BY COUNT( * ) DESC LIMIT 1
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.continent = 'Asian' GROUP BY countrylanguage.language ORDER BY COUNT( * ) DESC LIMIT 1
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.continent = 'Asian' ORDER BY countrylanguage.percentage DESC LIMIT 1
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.continent = 'Asian' GROUP BY countrylanguage.language ORDER BY countrylanguage.percentage DESC LIMIT 1
  - SELECT country.code FROM country WHERE country.continent = 'Asian'
  - SELECT country.continent FROM country
  - SELECT countrylanguage.language FROM countrylanguage
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.continent = 'Asian'
  - SELECT country.continent FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.continent = 'Asian'
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.continent = 'Asian' ORDER BY countrylanguage.percentage DESC
smbop_beam_inferred_code_w_terminals:
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.continent = 'Asian' GROUP BY countrylanguage.countrycode ORDER BY COUNT( * ) DESC LIMIT 1
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.continent = 'Asian' GROUP BY countrylanguage.language ORDER BY COUNT( * ) DESC LIMIT 1
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.continent = 'Asian' ORDER BY countrylanguage.percentage DESC LIMIT 1
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.continent = 'Asian' GROUP BY countrylanguage.language ORDER BY countrylanguage.percentage DESC LIMIT 1
  - SELECT country.code FROM country WHERE country.continent = 'Asian'
  - SELECT country.continent FROM country
  - SELECT countrylanguage.language FROM countrylanguage
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.continent = 'Asian'
  - SELECT country.continent FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.continent = 'Asian'
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.continent = 'Asian' ORDER BY countrylanguage.percentage DESC
smbop_beam_has_limit:
  - True
  - True
  - True
  - True
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - True
  - True
  - True
  - True
  - False
  - False
  - False
  - False
  - False
  - True
smbop_beam_order_by_direction:
- -  desc 
- -  desc 
- -  desc 
- -  desc 
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
ratsql_beam_groupby_columns:
- - language
- []
- - language
- []
- []
- []
- []
- []
ratsql_beam_orderby_columns:
- - order
- []
- - order
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
ratsql_beam_constants:
- - Asia
  - '1'
- - Asia
- - Asia
  - '1'
- - Asia
- - Asia
- - Asia
- - Asia
- - Asia
- - Asia
ratsql_beam_functions:
- - count
- - max
- - count
- - max
- - max
- - max
- - max
- - max
ratsql_beam_columns:
- - continent
- - percentage
  - continent
- []
- - percentage
  - continent
- - percentage
  - continent
- - percentage
  - continent
- - percentage
  - continent
- - percentage
  - continent
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- []
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Percentage = (SELECT Max(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'terminal')
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = (SELECT Max(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'terminal')
  - SELECT countrylanguage.Language FROM countrylanguage WHERE countrylanguage.Percentage = (SELECT Max(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'terminal')
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.IsOfficial = (SELECT Max(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'terminal')
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Percentage = (SELECT Max(countrylanguage.Percentage) FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'terminal')
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Percentage = (SELECT Max(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT country.Continent = 'terminal')
  - SELECT DISTINCT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Percentage = (SELECT Max(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'terminal')
ratsql_beam_inferred_code_w_terminals:
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Percentage = (SELECT Max(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' )
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = (SELECT Max(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' )
  - SELECT countrylanguage.Language FROM countrylanguage WHERE countrylanguage.Percentage = (SELECT Max(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' )
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.IsOfficial = (SELECT Max(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' )
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Percentage = (SELECT Max(countrylanguage.Percentage) FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' )
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Percentage = (SELECT Max(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT country.Continent = 'Asia' )
  - SELECT DISTINCT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Percentage = (SELECT Max(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' )
ratsql_beam_has_limit:
  - True
  - False
  - True
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - True
  - False
  - True
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- -  desc 
- []
- -  desc 
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10993337631225586
  - -0.10438060760498047
  - -0.10756421089172363
  - -0.10429215431213379
  - -0.10166692733764648
  - -0.10348176956176758
  - -0.10464763641357422
  - -0.1015162467956543
  - -0.10451602935791016
  - -0.10524272918701172
  - -0.10456275939941406
  - -0.11667361855506897
  - -0.1128685474395752
  - -0.1052699089050293
  - -0.09945535659790039
  - -0.10444974899291992
  - -0.10092782974243164
  - -0.10144472122192383
  - -0.10499763488769531
  - -0.10469388961791992
  - -0.10604000091552734
  - -0.9012081027030945
  - -0.11019158363342285
  - -0.10583329200744629
  - -0.6550874710083008
  - -0.12340116500854492
  - -0.11809492111206055
  - -0.10587263107299805
  - -0.10454463958740234
  - -0.14592178165912628
  - -0.1120457649230957
  - -0.10570430755615234
  - -0.1007847785949707
  - -0.09769868850708008
  - -0.09982109069824219
  - -0.10419321060180664
  - -0.08799552917480469
  - -0.10539436340332031
  - -0.10480690002441406
  - -0.15566301345825195
  - -0.129185289144516
  - -0.11022067070007324
  - -0.10583305358886719
  - -0.09878659248352051
  - -0.10515785217285156
  - -0.09822320938110352
  - -0.10557985305786133
  - -0.12392425537109375
  - -0.10477972030639648
  - -0.10510110855102539
  - -0.3193933665752411
  - -0.10486173629760742
  - -0.10403156280517578
  - -0.07475636899471283
- - -0.10993337631225586
  - -0.10438060760498047
  - -0.10756421089172363
  - -0.10429215431213379
  - -0.10166692733764648
  - -0.10348176956176758
  - -0.10464763641357422
  - -0.1015162467956543
  - -0.10451602935791016
  - -0.10524272918701172
  - -0.10456275939941406
  - -0.11667361855506897
  - -0.1128685474395752
  - -0.1052699089050293
  - -0.09945535659790039
  - -0.10444974899291992
  - -0.10092782974243164
  - -0.10144472122192383
  - -0.10499763488769531
  - -0.10469388961791992
  - -0.10604000091552734
  - -0.7688968777656555
  - -0.11032676696777344
  - -0.10554790496826172
  - -0.11694049835205078
  - -0.11662912368774414
  - -0.10120820999145508
  - -0.10488605499267578
  - -0.10646581649780273
  - -0.10424995422363281
  - -0.10374927520751953
  - -0.10161447525024414
  - -0.09471416473388672
  - -0.10443925857543945
  - -0.10539770126342773
  - -0.10502099990844727
  - -0.106201171875
  - -0.09605227410793304
  - -0.11037778854370117
  - -0.10524821281433105
  - -0.10603713989257812
  - -0.0999751091003418
  - -0.10163450241088867
  - -0.10232830047607422
  - -0.10424947738647461
  - -0.1044917106628418
  - -0.10362577438354492
  - -0.22584670782089233
  - -0.11081814765930176
  - -0.10554933547973633
  - -0.10218620300292969
  - -0.11123180389404297
  - -0.1013798713684082
  - -0.10820150375366211
  - -0.10503172874450684
  - -0.09882736206054688
  - -0.10515975952148438
  - -0.1132516860961914
  - -0.10474967956542969
  - -0.10401058197021484
  - -0.31310319900512695
  - -0.09439468383789062
  - -0.10395336151123047
  - -0.10739779472351074
  - -0.10476970672607422
  - -0.0973505973815918
  - -0.1045236587524414
  - -0.2544732093811035
  - -0.1046748161315918
  - -0.10431480407714844
  - -0.34286874532699585
  - -0.10521841049194336
  - -0.10386896133422852
  - -0.07843146473169327
- - -0.10993337631225586
  - -0.10438060760498047
  - -0.10756421089172363
  - -0.10429215431213379
  - -0.10166692733764648
  - -0.10348176956176758
  - -0.10464763641357422
  - -0.1015162467956543
  - -0.10451602935791016
  - -0.10524272918701172
  - -0.10456275939941406
  - -0.11667361855506897
  - -0.1128685474395752
  - -0.1052699089050293
  - -4.483077526092529
  - -0.2676835060119629
  - -0.13938331604003906
  - -0.10680150985717773
  - -0.10449981689453125
  - -0.14400267601013184
  - -0.11137032508850098
  - -0.10553932189941406
  - -0.10159873962402344
  - -0.09920883178710938
  - -0.09818124771118164
  - -0.10305976867675781
  - -0.08736324310302734
  - -0.10542917251586914
  - -0.10471487045288086
  - -0.16403579711914062
  - -0.14418670535087585
  - -0.11012983322143555
  - -0.1058053970336914
  - -0.09859108924865723
  - -0.10518693923950195
  - -0.09825801849365234
  - -0.1054372787475586
  - -0.1297616958618164
  - -0.10479068756103516
  - -0.10518312454223633
  - -0.33799201250076294
  - -0.10488128662109375
  - -0.10413599014282227
  - -0.07609467208385468
- - -0.10993337631225586
  - -0.10438060760498047
  - -0.10756421089172363
  - -0.10429215431213379
  - -0.10166692733764648
  - -0.10348176956176758
  - -0.10464763641357422
  - -0.1015162467956543
  - -0.10451602935791016
  - -0.10524272918701172
  - -0.10456275939941406
  - -0.11667361855506897
  - -0.1128685474395752
  - -0.1052699089050293
  - -0.09945535659790039
  - -0.10444974899291992
  - -0.10092782974243164
  - -0.10144472122192383
  - -0.10499763488769531
  - -0.10469388961791992
  - -0.10604000091552734
  - -0.9012081027030945
  - -0.11019158363342285
  - -0.10583329200744629
  - -1.195286750793457
  - -0.11756372451782227
  - -0.10137271881103516
  - -0.10471534729003906
  - -0.10593271255493164
  - -0.10418105125427246
  - -0.10312795639038086
  - -0.10066986083984375
  - -0.09034204483032227
  - -0.10218620300292969
  - -0.10508441925048828
  - -0.10469913482666016
  - -0.1058497428894043
  - -0.10711640119552612
  - -0.11030197143554688
  - -0.10520243644714355
  - -0.1066751480102539
  - -0.10193538665771484
  - -0.10178422927856445
  - -0.10252141952514648
  - -0.10426568984985352
  - -0.10450315475463867
  - -0.10347414016723633
  - -0.23113101720809937
  - -0.11081862449645996
  - -0.10551905632019043
  - -0.10051298141479492
  - -0.11243677139282227
  - -0.10027790069580078
  - -0.10827326774597168
  - -0.1050412654876709
  - -0.09907007217407227
  - -0.10544300079345703
  - -0.10756397247314453
  - -0.10478401184082031
  - -0.10404109954833984
  - -0.2895582318305969
  - -0.09484624862670898
  - -0.10361385345458984
  - -0.10739898681640625
  - -0.10477137565612793
  - -0.0972757339477539
  - -0.10441970825195312
  - -0.32431554794311523
  - -0.10468673706054688
  - -0.10428333282470703
  - -0.3437116742134094
  - -0.10520696640014648
  - -0.10389280319213867
  - -0.07890582829713821
- - -0.10993337631225586
  - -0.10438060760498047
  - -0.10756421089172363
  - -0.10429215431213379
  - -0.10166692733764648
  - -0.10348176956176758
  - -0.10464763641357422
  - -0.1015162467956543
  - -0.10451602935791016
  - -0.10524272918701172
  - -0.10456275939941406
  - -0.11667361855506897
  - -0.1128685474395752
  - -0.1052699089050293
  - -0.09945535659790039
  - -0.10444974899291992
  - -0.10092782974243164
  - -0.10144472122192383
  - -0.10499763488769531
  - -0.10469388961791992
  - -0.10604000091552734
  - -0.7688968777656555
  - -0.11032676696777344
  - -0.10554790496826172
  - -0.11694049835205078
  - -0.11662912368774414
  - -0.10120820999145508
  - -0.10488605499267578
  - -0.10646581649780273
  - -0.10424995422363281
  - -0.10374927520751953
  - -0.10161447525024414
  - -0.09471416473388672
  - -0.10443925857543945
  - -0.10539770126342773
  - -0.10502099990844727
  - -0.106201171875
  - -0.09605227410793304
  - -0.11037778854370117
  - -0.10524821281433105
  - -0.10603713989257812
  - -0.0999751091003418
  - -0.10163450241088867
  - -0.10232830047607422
  - -0.10424947738647461
  - -0.1044917106628418
  - -0.10362577438354492
  - -0.22584670782089233
  - -0.11081814765930176
  - -0.10554933547973633
  - -0.10218620300292969
  - -0.11123180389404297
  - -0.1013798713684082
  - -0.10820150375366211
  - -0.10503172874450684
  - -0.09882736206054688
  - -0.10515975952148438
  - -0.1132516860961914
  - -0.10474967956542969
  - -0.10401058197021484
  - -1.7677221298217773
  - -0.10180425643920898
  - -0.10290908813476562
  - -0.1073310375213623
  - -0.1049046516418457
  - -0.09781503677368164
  - -0.1040811538696289
  - -0.7294740676879883
  - -0.10463714599609375
  - -0.10336685180664062
  - -0.11488709598779678
- - -0.10993337631225586
  - -0.10438060760498047
  - -0.10756421089172363
  - -0.10429215431213379
  - -0.10166692733764648
  - -0.10348176956176758
  - -0.10464763641357422
  - -0.1015162467956543
  - -0.10451602935791016
  - -0.10524272918701172
  - -0.10456275939941406
  - -0.11667361855506897
  - -0.1128685474395752
  - -0.1052699089050293
  - -0.09945535659790039
  - -0.10444974899291992
  - -0.10092782974243164
  - -0.10144472122192383
  - -0.10499763488769531
  - -0.10469388961791992
  - -0.10604000091552734
  - -3.575596332550049
  - -0.11199784278869629
  - -0.10555887222290039
  - -0.10641098022460938
  - -0.10724067687988281
  - -0.10175180435180664
  - -0.10471343994140625
  - -0.10628914833068848
  - -0.10421133041381836
  - -0.10466432571411133
  - -0.10170888900756836
  - -0.09210586547851562
  - -0.10222673416137695
  - -0.10517215728759766
  - -0.10475635528564453
  - -0.1055760383605957
  - -0.11302061378955841
  - -0.11022400856018066
  - -0.10518527030944824
  - -0.10388326644897461
  - -0.10222721099853516
  - -0.10186052322387695
  - -0.10242557525634766
  - -0.10426139831542969
  - -0.1044931411743164
  - -0.10343742370605469
  - -0.2376049906015396
  - -0.11078095436096191
  - -0.10553407669067383
  - -0.09966802597045898
  - -0.11506509780883789
  - -0.1005849838256836
  - -0.10804271697998047
  - -0.10502457618713379
  - -0.09894084930419922
  - -0.10500860214233398
  - -0.10737085342407227
  - -0.10473203659057617
  - -0.10404253005981445
  - -0.3132976293563843
  - -0.09446334838867188
  - -0.10379457473754883
  - -0.10739970207214355
  - -0.10475468635559082
  - -0.09731054306030273
  - -0.10443782806396484
  - -0.3482069969177246
  - -0.10468816757202148
  - -0.10427427291870117
  - -0.34070920944213867
  - -0.10519933700561523
  - -0.10390233993530273
  - -0.07927899807691574
- - -0.10993337631225586
  - -0.10438060760498047
  - -0.10756421089172363
  - -0.10429215431213379
  - -0.10166692733764648
  - -0.10348176956176758
  - -0.10464763641357422
  - -0.1015162467956543
  - -0.10451602935791016
  - -0.10524272918701172
  - -0.10456275939941406
  - -0.11667361855506897
  - -0.1128685474395752
  - -0.1052699089050293
  - -0.09945535659790039
  - -0.10444974899291992
  - -0.10092782974243164
  - -0.10144472122192383
  - -0.10499763488769531
  - -0.10469388961791992
  - -0.10604000091552734
  - -0.7688968777656555
  - -0.11032676696777344
  - -0.10554790496826172
  - -0.11694049835205078
  - -0.11662912368774414
  - -0.10120820999145508
  - -0.10488605499267578
  - -0.10646581649780273
  - -0.10424995422363281
  - -0.10374927520751953
  - -0.10161447525024414
  - -0.09471416473388672
  - -0.10443925857543945
  - -0.10539770126342773
  - -0.10502099990844727
  - -0.106201171875
  - -0.09605227410793304
  - -0.11037778854370117
  - -0.10524821281433105
  - -0.10603713989257812
  - -0.0999751091003418
  - -0.10163450241088867
  - -0.10232830047607422
  - -0.10424947738647461
  - -0.1044917106628418
  - -0.10362577438354492
  - -0.22584670782089233
  - -0.11081814765930176
  - -0.10554933547973633
  - -0.10218620300292969
  - -0.11123180389404297
  - -0.1013798713684082
  - -0.10820150375366211
  - -0.10503172874450684
  - -0.09882736206054688
  - -0.10515975952148438
  - -0.1132516860961914
  - -0.10474967956542969
  - -0.10401058197021484
  - -3.1300058364868164
  - -0.10089778900146484
  - -0.10125255584716797
  - -0.10736083984375
  - -0.1047515869140625
  - -0.09698200225830078
  - -0.10410547256469727
  - -0.46242570877075195
  - -0.10467386245727539
  - -0.10460615158081055
  - -0.4057387709617615
  - -0.10509872436523438
  - -0.10381269454956055
  - -0.0790749192237854
- - -0.10993337631225586
  - -0.10438060760498047
  - -0.10756421089172363
  - -0.10429215431213379
  - -0.10166692733764648
  - -0.10348176956176758
  - -0.10464763641357422
  - -0.1015162467956543
  - -0.10451602935791016
  - -0.10524272918701172
  - -0.10456275939941406
  - -0.11667361855506897
  - -0.1128685474395752
  - -0.1052699089050293
  - -0.09945535659790039
  - -0.10444974899291992
  - -0.10092782974243164
  - -0.10144472122192383
  - -0.10499763488769531
  - -0.10469388961791992
  - -0.10604000091552734
  - -0.7688968777656555
  - -0.11032676696777344
  - -0.10554790496826172
  - -0.11694049835205078
  - -0.11662912368774414
  - -0.10120820999145508
  - -0.10488605499267578
  - -0.10646581649780273
  - -0.10424995422363281
  - -0.10374927520751953
  - -0.10161447525024414
  - -0.09471416473388672
  - -0.10443925857543945
  - -0.10539770126342773
  - -0.10502099990844727
  - -0.106201171875
  - -0.09605227410793304
  - -0.11037778854370117
  - -0.10524821281433105
  - -0.10603713989257812
  - -0.0999751091003418
  - -0.10163450241088867
  - -0.10232830047607422
  - -0.10424947738647461
  - -0.1044917106628418
  - -0.10362577438354492
  - -0.22584670782089233
  - -3.4651236534118652
  - -0.10567617416381836
  - -0.11092376708984375
  - -0.10611963272094727
  - -0.10069131851196289
  - -0.10800361633300781
  - -0.10506677627563477
  - -0.09955358505249023
  - -0.10500526428222656
  - -0.1173243522644043
  - -0.10469722747802734
  - -0.10399246215820312
  - -0.30573132634162903
  - -0.09464359283447266
  - -0.10407638549804688
  - -0.10739588737487793
  - -0.10477280616760254
  - -0.09736442565917969
  - -0.10452699661254883
  - -0.25704097747802734
  - -0.1046743392944336
  - -0.10431051254272461
  - -0.34235480427742004
  - -0.10521602630615234
  - -0.10387039184570312
  - -0.07847345620393753
- - -0.10993337631225586
  - -0.10438060760498047
  - -0.10756421089172363
  - -0.10429215431213379
  - -0.10166692733764648
  - -0.10348176956176758
  - -0.10464763641357422
  - -0.1015162467956543
  - -0.10451602935791016
  - -0.10524272918701172
  - -0.10456275939941406
  - -0.11667361855506897
  - -3.4560399055480957
  - -0.10502219200134277
  - -0.09158563613891602
  - -0.1035003662109375
  - -0.10117101669311523
  - -0.10148429870605469
  - -0.10496807098388672
  - -0.1047372817993164
  - -0.10599851608276367
  - -0.7900311350822449
  - -0.11023211479187012
  - -0.10555386543273926
  - -0.1178274154663086
  - -0.11742782592773438
  - -0.10119152069091797
  - -0.10505914688110352
  - -0.10646510124206543
  - -0.10427045822143555
  - -0.10376262664794922
  - -0.10162496566772461
  - -0.0946202278137207
  - -0.10445070266723633
  - -0.10540485382080078
  - -0.1050262451171875
  - -0.10620784759521484
  - -0.09529481083154678
  - -0.11036491394042969
  - -0.10524511337280273
  - -0.1068735122680664
  - -0.09989309310913086
  - -0.10164451599121094
  - -0.10232210159301758
  - -0.10425043106079102
  - -0.10449075698852539
  - -0.10362100601196289
  - -0.22618620097637177
  - -0.11081695556640625
  - -0.10555076599121094
  - -0.10221147537231445
  - -0.11129522323608398
  - -0.10136842727661133
  - -0.1081838607788086
  - -0.10502743721008301
  - -0.0987391471862793
  - -0.10514211654663086
  - -0.11094093322753906
  - -0.10474729537963867
  - -0.1040182113647461
  - -0.31905001401901245
  - -0.0942683219909668
  - -0.10391998291015625
  - -0.10739850997924805
  - -0.10476326942443848
  - -0.09734869003295898
  - -0.10452699661254883
  - -0.2625312805175781
  - -0.10467767715454102
  - -0.10431480407714844
  - -0.34233126044273376
  - -0.10521268844604492
  - -0.10387372970581055
  - -0.07851522415876389
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Percentage'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Percentage'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Percentage'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Percentage'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Percentage'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'IsOfficial'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Percentage'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Percentage'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Percentage'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Percentage'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Percentage'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Percentage'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Percentage'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
