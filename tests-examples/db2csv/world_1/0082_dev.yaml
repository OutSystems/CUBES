db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/country.csv
 - tests-examples/db2csv/world_1/tables/countrylanguage.csv
output: tests-examples/db2csv/world_1/tables/0082_dev.csv
raw_question: Return the codes of countries that do not speak English and do not have Republics for governments. 
question_index: 783 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - Republic
 - English
join_columns: []
groupby_columns: []
functions: []
columns:
 - governmentform
 - language
filters:
 - '!='
 - '='
ieu:
 - except
comment: |-
  SELECT Code
  FROM country
  WHERE GovernmentForm != "Republic"
  EXCEPT
  SELECT CountryCode
  FROM countrylanguage
  WHERE LANGUAGE = "English"

sql: |-
  SELECT Code
  FROM country
  WHERE GovernmentForm != "Republic"
  EXCEPT
  SELECT CountryCode
  FROM countrylanguage
  WHERE LANGUAGE = "English"
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
smbop_beam_constants:
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
smbop_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_columns:
- - isofficial
  - language
- - governmentform
  - language
- - governmentform
  - language
- - language
- - isofficial
- - language
- []
- - governmentform
- []
smbop_beam_ieu:
- []
- - except
- - except
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '!='
- - '!='
  - '='
- - '='
- - '!='
- - '!='
- - '='
- []
- - '='
- []
smbop_beam_inferred_code:
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'English' OR countrylanguage.isofficial != 'Republics'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'English' EXCEPT SELECT country.code FROM country WHERE country.governmentform = 'Republics'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English' EXCEPT SELECT country.code FROM country WHERE country.governmentform = 'Republics'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'English'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.isofficial != 'Republics'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English'
  - SELECT countrylanguage.countrycode FROM countrylanguage
  - SELECT country.code FROM country WHERE country.governmentform = 'Republics'
  - SELECT country.code FROM country
smbop_beam_inferred_code_w_terminals:
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'English' OR countrylanguage.isofficial != 'Republics'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'English' EXCEPT SELECT country.code FROM country WHERE country.governmentform = 'Republics'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English' EXCEPT SELECT country.code FROM country WHERE country.governmentform = 'Republics'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'English'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.isofficial != 'Republics'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English'
  - SELECT countrylanguage.countrycode FROM countrylanguage
  - SELECT country.code FROM country WHERE country.governmentform = 'Republics'
  - SELECT country.code FROM country
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
ratsql_beam_constants:
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
- - Republic
  - English
ratsql_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_columns:
- - language
- - percentage
  - language
- - language
- - governmentform
  - language
- - language
- - language
- - language
- - percentage
  - language
ratsql_beam_ieu:
- - except
- - except
- - except
- - except
- - except
- - except
- - except
- - except
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Percentage = 'terminal'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'terminal'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' EXCEPT SELECT countrylanguage.CountryCode FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' EXCEPT SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' EXCEPT SELECT DISTINCT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Percentage = 'terminal'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT countrylanguage.Language = 'terminal' EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'Republic'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Percentage = 'Republic'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Republic'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'Republic'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' EXCEPT SELECT countrylanguage.CountryCode FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Republic'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' EXCEPT SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Republic'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' EXCEPT SELECT DISTINCT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'Republic'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Percentage = 'Republic'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT countrylanguage.Language = 'English' EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'Republic'
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10562276840209961
  - -0.10481023788452148
  - -0.10492920875549316
  - -0.10430788993835449
  - -0.10383319854736328
  - -0.10354471206665039
  - -0.10420083999633789
  - -0.1022195816040039
  - -0.10440635681152344
  - -0.1052403450012207
  - -0.10608100891113281
  - -0.0990862250328064
  - -0.11039280891418457
  - -0.10535264015197754
  - -0.08988285064697266
  - -0.11683940887451172
  - -0.10408163070678711
  - -0.10174894332885742
  - -0.10434722900390625
  - -0.10506582260131836
  - -0.10648918151855469
  - -0.10515723377466202
  - -0.11141419410705566
  - -0.1061410903930664
  - -0.10190153121948242
  - -0.09958219528198242
  - -0.10364532470703125
  - -0.10820460319519043
  - -0.10499978065490723
  - -0.10933399200439453
  - -0.10975408554077148
  - -0.10600566864013672
  - -0.10935044288635254
  - -0.10381960868835449
  - -0.10113906860351562
  - -0.10270452499389648
  - -0.10363245010375977
  - -0.10276126861572266
  - -0.1048727035522461
  - -0.10486412048339844
  - -0.10539913177490234
  - -0.1019192785024643
  - -0.11152887344360352
  - -0.10565924644470215
  - -0.1048579216003418
  - -0.09973287582397461
  - -0.10095691680908203
  - -0.10256052017211914
  - -0.10406923294067383
  - -0.10523557662963867
  - -0.10527944564819336
  - -0.36945754289627075
  - -0.1112058162689209
  - -0.10612773895263672
  - -0.10403728485107422
  - -0.10097074508666992
  - -0.1060018539428711
  - -0.10831713676452637
  - -0.10487246513366699
  - -0.09626007080078125
  - -0.10597515106201172
  - -0.10967445373535156
  - -0.10515403747558594
  - -0.10351848602294922
  - -0.24121589958667755
  - -0.10266685485839844
  - -0.11011028289794922
  - -0.10486650466918945
  - -0.10390281677246094
  - -0.030141688883304596
- - -0.10562276840209961
  - -0.10481023788452148
  - -0.10492920875549316
  - -0.10430788993835449
  - -0.10383319854736328
  - -0.10354471206665039
  - -0.10420083999633789
  - -0.1022195816040039
  - -0.10440635681152344
  - -0.1052403450012207
  - -0.10608100891113281
  - -0.0990862250328064
  - -0.11039280891418457
  - -0.10535264015197754
  - -0.08988285064697266
  - -0.11683940887451172
  - -0.10408163070678711
  - -0.10174894332885742
  - -0.10434722900390625
  - -0.10506582260131836
  - -0.10648918151855469
  - -0.10515723377466202
  - -0.11141419410705566
  - -0.1061410903930664
  - -0.10190153121948242
  - -0.09958219528198242
  - -0.10364532470703125
  - -0.10820460319519043
  - -0.10499978065490723
  - -0.10933399200439453
  - -0.10975408554077148
  - -0.10600566864013672
  - -0.10935044288635254
  - -0.10381960868835449
  - -0.10113906860351562
  - -0.10270452499389648
  - -0.10363245010375977
  - -0.10276126861572266
  - -0.1048727035522461
  - -0.10486412048339844
  - -0.10539913177490234
  - -0.1019192785024643
  - -0.11152887344360352
  - -0.10565924644470215
  - -0.1048579216003418
  - -0.09973287582397461
  - -0.10095691680908203
  - -0.10256052017211914
  - -0.10406923294067383
  - -0.10523557662963867
  - -0.10527944564819336
  - -1.7261059284210205
  - -0.11158943176269531
  - -0.10569524765014648
  - -0.08383989334106445
  - -0.1004490852355957
  - -0.10076141357421875
  - -0.10908055305480957
  - -0.10485506057739258
  - -0.09507989883422852
  - -0.10864496231079102
  - -0.10930824279785156
  - -0.1052393913269043
  - -0.10453176498413086
  - -0.25417134165763855
  - -0.10219097137451172
  - -0.11027717590332031
  - -0.10499143600463867
  - -0.10360431671142578
  - -0.0304708294570446
- - -0.10562276840209961
  - -0.10481023788452148
  - -0.10492920875549316
  - -0.10430788993835449
  - -0.10383319854736328
  - -0.10354471206665039
  - -0.10420083999633789
  - -0.1022195816040039
  - -0.10440635681152344
  - -0.1052403450012207
  - -0.10608100891113281
  - -0.0990862250328064
  - -0.11039280891418457
  - -0.10535264015197754
  - -0.08988285064697266
  - -0.11683940887451172
  - -0.10408163070678711
  - -0.10174894332885742
  - -0.10434722900390625
  - -0.10506582260131836
  - -0.10648918151855469
  - -0.10515723377466202
  - -0.11141419410705566
  - -0.1061410903930664
  - -0.10190153121948242
  - -0.09958219528198242
  - -0.10364532470703125
  - -0.10820460319519043
  - -0.10499978065490723
  - -0.10933399200439453
  - -0.10975408554077148
  - -0.10600566864013672
  - -0.10935044288635254
  - -0.10381960868835449
  - -0.10113906860351562
  - -0.10270452499389648
  - -0.10363245010375977
  - -0.10276126861572266
  - -0.1048727035522461
  - -0.10486412048339844
  - -0.10539913177490234
  - -0.1019192785024643
  - -0.11152887344360352
  - -0.10565924644470215
  - -0.1048579216003418
  - -0.09973287582397461
  - -0.10095691680908203
  - -0.10256052017211914
  - -0.10406923294067383
  - -0.10523557662963867
  - -0.10527944564819336
  - -0.36945754289627075
  - -0.1112058162689209
  - -0.10612773895263672
  - -0.10403728485107422
  - -0.10097074508666992
  - -0.1060018539428711
  - -0.10831713676452637
  - -0.10487246513366699
  - -0.09626007080078125
  - -0.10597515106201172
  - -0.10967445373535156
  - -0.10515403747558594
  - -0.10351848602294922
  - -1.9240111112594604
  - -0.10120964050292969
  - -0.1047658920288086
  - -0.10477113723754883
  - -0.1026163101196289
  - -0.21087646484375
- - -0.10562276840209961
  - -0.10481023788452148
  - -0.10492920875549316
  - -0.10430788993835449
  - -0.10383319854736328
  - -0.10354471206665039
  - -0.10420083999633789
  - -0.1022195816040039
  - -0.10440635681152344
  - -0.1052403450012207
  - -0.10608100891113281
  - -0.0990862250328064
  - -0.11039280891418457
  - -0.10535264015197754
  - -0.08988285064697266
  - -0.11683940887451172
  - -0.10408163070678711
  - -0.10174894332885742
  - -0.10434722900390625
  - -0.10506582260131836
  - -0.10648918151855469
  - -0.10515723377466202
  - -0.11141419410705566
  - -0.1061410903930664
  - -0.10190153121948242
  - -0.09958219528198242
  - -0.10364532470703125
  - -0.10820460319519043
  - -0.10499978065490723
  - -0.10933399200439453
  - -0.10975408554077148
  - -0.10600566864013672
  - -0.10935044288635254
  - -0.10381960868835449
  - -0.10113906860351562
  - -0.10270452499389648
  - -0.10363245010375977
  - -0.10276126861572266
  - -0.1048727035522461
  - -0.10486412048339844
  - -0.10539913177490234
  - -0.1019192785024643
  - -0.11152887344360352
  - -0.10565924644470215
  - -0.1048579216003418
  - -0.09973287582397461
  - -0.10095691680908203
  - -0.10256052017211914
  - -0.10406923294067383
  - -0.10523557662963867
  - -0.10527944564819336
  - -2.899008274078369
  - -0.11181211471557617
  - -0.10567522048950195
  - -0.09683370590209961
  - -0.10116863250732422
  - -0.10537338256835938
  - -0.10828804969787598
  - -0.10478067398071289
  - -0.09349536895751953
  - -0.10752725601196289
  - -0.10978412628173828
  - -0.10530376434326172
  - -0.10375308990478516
  - -0.24088887870311737
  - -0.10207462310791016
  - -0.1099848747253418
  - -0.10484075546264648
  - -0.10384178161621094
  - -0.029962962493300438
- - -0.10562276840209961
  - -0.10481023788452148
  - -0.10492920875549316
  - -0.10430788993835449
  - -0.10383319854736328
  - -0.10354471206665039
  - -0.10420083999633789
  - -0.1022195816040039
  - -0.10440635681152344
  - -0.1052403450012207
  - -0.10608100891113281
  - -0.0990862250328064
  - -0.11039280891418457
  - -0.10535264015197754
  - -0.08988285064697266
  - -0.11683940887451172
  - -0.10408163070678711
  - -0.10174894332885742
  - -0.10434722900390625
  - -0.10506582260131836
  - -0.10648918151855469
  - -0.10515723377466202
  - -0.11141419410705566
  - -0.1061410903930664
  - -0.10190153121948242
  - -0.09958219528198242
  - -0.10364532470703125
  - -0.10820460319519043
  - -0.10499978065490723
  - -0.10933399200439453
  - -0.10975408554077148
  - -0.10600566864013672
  - -0.10935044288635254
  - -0.10381960868835449
  - -0.10113906860351562
  - -0.10270452499389648
  - -0.10363245010375977
  - -0.10276126861572266
  - -0.1048727035522461
  - -0.10486412048339844
  - -0.10539913177490234
  - -0.1019192785024643
  - -0.11152887344360352
  - -0.10565924644470215
  - -0.1048579216003418
  - -0.09973287582397461
  - -0.10095691680908203
  - -0.10256052017211914
  - -0.10406923294067383
  - -0.10523557662963867
  - -0.10527944564819336
  - -0.36945754289627075
  - -0.1112058162689209
  - -0.10612773895263672
  - -0.10403728485107422
  - -0.10097074508666992
  - -0.1060018539428711
  - -0.10831713676452637
  - -0.10487246513366699
  - -0.09626007080078125
  - -0.10597515106201172
  - -0.10967445373535156
  - -0.10515403747558594
  - -0.10351848602294922
  - -3.3141608238220215
  - -0.09536218643188477
  - -0.11089324951171875
  - -0.10475730895996094
  - -0.10351324081420898
  - -0.08349630236625671
- - -0.10562276840209961
  - -0.10481023788452148
  - -0.10492920875549316
  - -0.10430788993835449
  - -0.10383319854736328
  - -0.10354471206665039
  - -0.10420083999633789
  - -0.1022195816040039
  - -0.10440635681152344
  - -0.1052403450012207
  - -0.10608100891113281
  - -0.0990862250328064
  - -0.11039280891418457
  - -0.10535264015197754
  - -0.08988285064697266
  - -0.11683940887451172
  - -0.10408163070678711
  - -0.10174894332885742
  - -0.10434722900390625
  - -0.10506582260131836
  - -0.10648918151855469
  - -0.10515723377466202
  - -0.11141419410705566
  - -0.1061410903930664
  - -0.10190153121948242
  - -0.09958219528198242
  - -0.10364532470703125
  - -0.10820460319519043
  - -0.10499978065490723
  - -0.10933399200439453
  - -0.10975408554077148
  - -0.10600566864013672
  - -0.10935044288635254
  - -0.10381960868835449
  - -0.10113906860351562
  - -0.10270452499389648
  - -0.10363245010375977
  - -0.10276126861572266
  - -0.1048727035522461
  - -0.10486412048339844
  - -0.10539913177490234
  - -3.4552292823791504
  - -0.11153674125671387
  - -0.10522675514221191
  - -0.0924234390258789
  - -0.10100269317626953
  - -0.1004185676574707
  - -0.10198450088500977
  - -0.10469961166381836
  - -0.10495471954345703
  - -0.10457372665405273
  - -0.2980787456035614
  - -0.11094927787780762
  - -0.10606622695922852
  - -0.10390520095825195
  - -0.10063934326171875
  - -0.1069798469543457
  - -0.10808444023132324
  - -0.10488104820251465
  - -0.09651517868041992
  - -0.1061091423034668
  - -0.10844135284423828
  - -0.10520076751708984
  - -0.10332632064819336
  - -0.2657357454299927
  - -0.10073614120483398
  - -0.10982608795166016
  - -0.10483360290527344
  - -0.1037588119506836
  - -0.030275624245405197
- - -0.10562276840209961
  - -0.10481023788452148
  - -0.10492920875549316
  - -0.10430788993835449
  - -0.10383319854736328
  - -0.10354471206665039
  - -0.10420083999633789
  - -0.1022195816040039
  - -0.10440635681152344
  - -0.1052403450012207
  - -0.10608100891113281
  - -0.0990862250328064
  - -0.11039280891418457
  - -0.10535264015197754
  - -0.08988285064697266
  - -0.11683940887451172
  - -0.10408163070678711
  - -0.10174894332885742
  - -0.10434722900390625
  - -0.10506582260131836
  - -0.10648918151855469
  - -0.10515723377466202
  - -0.11141419410705566
  - -0.1061410903930664
  - -0.10190153121948242
  - -0.09958219528198242
  - -0.10364532470703125
  - -0.10820460319519043
  - -0.10499978065490723
  - -0.10933399200439453
  - -0.10975408554077148
  - -0.10600566864013672
  - -3.4467875957489014
  - -0.10447955131530762
  - -0.10155725479125977
  - -0.10258626937866211
  - -0.10355186462402344
  - -0.10297393798828125
  - -0.10489034652709961
  - -0.10483598709106445
  - -0.10540390014648438
  - -0.09105035662651062
  - -0.1115732192993164
  - -0.10562562942504883
  - -0.10468149185180664
  - -0.09981250762939453
  - -0.1009664535522461
  - -0.10258245468139648
  - -0.10406923294067383
  - -0.10521936416625977
  - -0.1052708625793457
  - -0.3708252012729645
  - -0.11120057106018066
  - -0.10611820220947266
  - -0.10403013229370117
  - -0.10097217559814453
  - -0.10596179962158203
  - -0.10831499099731445
  - -0.1048731803894043
  - -0.09630870819091797
  - -0.10595703125
  - -0.1096658706665039
  - -0.10515689849853516
  - -0.10351705551147461
  - -0.24107323586940765
  - -0.10265254974365234
  - -0.11011648178100586
  - -0.10486602783203125
  - -0.10390281677246094
  - -0.030138565227389336
- - -0.10562276840209961
  - -0.10481023788452148
  - -0.10492920875549316
  - -0.10430788993835449
  - -0.10383319854736328
  - -0.10354471206665039
  - -0.10420083999633789
  - -0.1022195816040039
  - -0.10440635681152344
  - -0.1052403450012207
  - -0.10608100891113281
  - -0.0990862250328064
  - -0.11039280891418457
  - -0.10535264015197754
  - -0.08988285064697266
  - -0.11683940887451172
  - -0.10408163070678711
  - -0.10174894332885742
  - -0.10434722900390625
  - -0.10506582260131836
  - -0.10648918151855469
  - -0.10515723377466202
  - -0.11141419410705566
  - -0.1061410903930664
  - -0.10190153121948242
  - -0.09958219528198242
  - -0.10364532470703125
  - -0.10820460319519043
  - -0.10499978065490723
  - -0.10933399200439453
  - -0.10975408554077148
  - -0.10600566864013672
  - -0.10935044288635254
  - -0.10381960868835449
  - -0.10113906860351562
  - -0.10270452499389648
  - -0.10363245010375977
  - -0.10276126861572266
  - -0.1048727035522461
  - -0.10486412048339844
  - -0.10539913177490234
  - -0.1019192785024643
  - -0.11152887344360352
  - -0.10565924644470215
  - -0.1048579216003418
  - -0.09973287582397461
  - -0.10095691680908203
  - -0.10256052017211914
  - -0.10406923294067383
  - -0.10523557662963867
  - -0.10527944564819336
  - -1.7261059284210205
  - -0.11158943176269531
  - -0.10569524765014648
  - -0.08383989334106445
  - -0.1004490852355957
  - -0.10076141357421875
  - -0.10908055305480957
  - -0.10485506057739258
  - -0.09507989883422852
  - -0.10864496231079102
  - -0.10930824279785156
  - -0.1052393913269043
  - -0.10453176498413086
  - -1.9955871105194092
  - -0.10224771499633789
  - -0.10498285293579102
  - -0.10485219955444336
  - -0.1028909683227539
  - -0.28000888228416443
- - -0.10562276840209961
  - -0.10481023788452148
  - -0.10492920875549316
  - -0.10430788993835449
  - -0.10383319854736328
  - -0.10354471206665039
  - -0.10420083999633789
  - -0.1022195816040039
  - -0.10440635681152344
  - -0.1052403450012207
  - -0.10608100891113281
  - -0.0990862250328064
  - -0.11039280891418457
  - -0.10535264015197754
  - -0.08988285064697266
  - -0.11683940887451172
  - -0.10408163070678711
  - -0.10174894332885742
  - -0.10434722900390625
  - -0.10506582260131836
  - -0.10648918151855469
  - -0.10515723377466202
  - -3.4421184062957764
  - -0.10593485832214355
  - -0.09787368774414062
  - -0.09985828399658203
  - -0.1028289794921875
  - -0.10820889472961426
  - -0.1050269603729248
  - -0.10805225372314453
  - -0.10849523544311523
  - -0.10640478134155273
  - -0.10923600196838379
  - -0.10379433631896973
  - -0.10046815872192383
  - -0.10270166397094727
  - -0.10362815856933594
  - -0.1028146743774414
  - -0.1049051284790039
  - -0.10483312606811523
  - -0.10539627075195312
  - -0.10307926684617996
  - -0.11153340339660645
  - -0.10566544532775879
  - -0.10538434982299805
  - -0.09973907470703125
  - -0.1009664535522461
  - -0.10258293151855469
  - -0.10406637191772461
  - -0.10523796081542969
  - -0.10528898239135742
  - -0.3712330460548401
  - -0.1112053394317627
  - -0.10612845420837402
  - -0.10404109954833984
  - -0.1009521484375
  - -0.10595130920410156
  - -0.1083066463470459
  - -0.10487914085388184
  - -0.09618473052978516
  - -0.10596466064453125
  - -0.10950756072998047
  - -0.10510969161987305
  - -0.10340738296508789
  - -0.24771399796009064
  - -0.10273265838623047
  - -0.11012697219848633
  - -0.10487794876098633
  - -0.10389328002929688
  - -0.030105482786893845
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Percentage'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Percentage'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
