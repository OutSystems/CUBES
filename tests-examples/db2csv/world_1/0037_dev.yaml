db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/countrylanguage.csv
 - tests-examples/db2csv/world_1/tables/country.csv
output: tests-examples/db2csv/world_1/tables/0037_dev.csv
raw_question: How many official languages does Afghanistan have? 
question_index: 738 
constants:
 - Afghanistan
 - T
join_columns:
 - code
 - countrycode
functions:
 - count
columns:
 - name
 - isofficial
filters:
 - '='
comment: |-
  SELECT COUNT(*)
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T1.Name = "Afghanistan"
    AND IsOfficial = "T"

sql: |-
  SELECT COUNT(*)
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T1.Name = "Afghanistan"
    AND IsOfficial = "T"
smbop_beam_join_columns:
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- []
- []
- - code
  - countrycode
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
smbop_beam_constants:
- - Afghanistan
  - t
- - Afghanistan
  - t
- - Afghanistan
  - t
- - Afghanistan
  - t
- - Afghanistan
  - t
- - Afghanistan
  - t
smbop_beam_functions:
- - count
- - count
- - count
- []
- - count
- []
smbop_beam_columns:
- - name
  - isofficial
- - name
- - name
  - isofficial
- []
- []
- - name
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- []
- []
- - '='
smbop_beam_inferred_code:
  - SELECT COUNT( DISTINCT countrylanguage.isofficial ) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.name = 'Afghanistan'
  - SELECT COUNT( * ) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.name = 'Afghanistan'
  - SELECT COUNT( DISTINCT countrylanguage.isofficial ) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = 'Afghanistan'
  - SELECT countrylanguage.countrycode FROM countrylanguage
  - SELECT COUNT( * ) FROM countrylanguage
  - SELECT DISTINCT countrylanguage.isofficial FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.name = 'Afghanistan'
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( DISTINCT countrylanguage.isofficial ) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.name = 'Afghanistan'
  - SELECT COUNT( * ) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.name = 'Afghanistan'
  - SELECT COUNT( DISTINCT countrylanguage.isofficial ) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = 'Afghanistan'
  - SELECT countrylanguage.countrycode FROM countrylanguage
  - SELECT COUNT( * ) FROM countrylanguage
  - SELECT DISTINCT countrylanguage.isofficial FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.name = 'Afghanistan'
ratsql_beam_join_columns:
- - code
  - countrycode
- []
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
ratsql_beam_constants:
- - Afghanistan
  - t
- - Afghanistan
  - t
- - Afghanistan
  - t
- - Afghanistan
  - t
- - Afghanistan
  - t
- - Afghanistan
  - t
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - language
  - name
- - language
  - countrycode
- - language
  - name
- - language
  - name
- - language
  - name
- - language
  - name
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'terminal'
  - SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage WHERE countrylanguage.CountryCode = 'terminal'
  - SELECT Count(DISTINCT countrylanguage.Language) FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'terminal'
  - SELECT Count(countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'terminal'
  - SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT country.Name = 'terminal'
  - SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'terminal' LIMIT 1
  - SELECT DISTINCT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'Afghanistan'
  - 
  - SELECT Count(DISTINCT countrylanguage.Language) FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'Afghanistan'
  - SELECT Count(countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'Afghanistan'
  - SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT country.Name = 'Afghanistan'
  - SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'Afghanistan' LIMIT 1
  - SELECT DISTINCT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'Afghanistan'
ratsql_beam_score_history:
- - -0.10733890533447266
  - -0.10524368286132812
  - -0.10642671585083008
  - -0.10402226448059082
  - -0.10073041915893555
  - -0.1031498908996582
  - -0.11174392700195312
  - -0.10172367095947266
  - -0.10518264770507812
  - -0.10463953018188477
  - -0.10560894012451172
  - -0.0721956118941307
  - -0.11336064338684082
  - -0.10541629791259766
  - -0.09418487548828125
  - -0.10182619094848633
  - -0.10322904586791992
  - -0.10239458084106445
  - -0.10481405258178711
  - -0.10489130020141602
  - -0.1059718132019043
  - -0.1331174522638321
  - -0.1126244068145752
  - -0.10564589500427246
  - -0.10417938232421875
  - -0.10080862045288086
  - -0.10289621353149414
  - -0.10766339302062988
  - -0.10469269752502441
  - -0.0978994369506836
  - -0.10318136215209961
  - -0.1219487190246582
  - -0.10458135604858398
  - -0.10436153411865234
  - -0.6223227381706238
  - -0.10566091537475586
  - -0.10522985458374023
  - -0.0585867315530777
- - -0.10733890533447266
  - -0.10524368286132812
  - -0.10642671585083008
  - -0.10402226448059082
  - -0.10073041915893555
  - -0.1031498908996582
  - -0.11174392700195312
  - -0.10172367095947266
  - -0.10518264770507812
  - -0.10463953018188477
  - -0.10560894012451172
  - -0.0721956118941307
  - -0.11336064338684082
  - -0.10541629791259766
  - -0.09418487548828125
  - -0.10182619094848633
  - -0.10322904586791992
  - -0.10239458084106445
  - -0.10481405258178711
  - -0.10489130020141602
  - -0.1059718132019043
  - -2.572864532470703
  - -0.11390519142150879
  - -0.10503745079040527
  - -0.10274457931518555
  - -0.10088968276977539
  - -0.10253286361694336
  - -0.10766291618347168
  - -0.10450553894042969
  - -0.09991836547851562
  - -0.10271883010864258
  - -0.2594475746154785
  - -0.10600948333740234
  - -0.10350513458251953
  - -0.18553487956523895
- - -0.10733890533447266
  - -0.10524368286132812
  - -0.10642671585083008
  - -0.10402226448059082
  - -0.10073041915893555
  - -0.1031498908996582
  - -0.11174392700195312
  - -0.10172367095947266
  - -0.10518264770507812
  - -0.10463953018188477
  - -0.10560894012451172
  - -0.0721956118941307
  - -0.11336064338684082
  - -0.10541629791259766
  - -0.09418487548828125
  - -0.10182619094848633
  - -0.10322904586791992
  - -0.10239458084106445
  - -0.10481405258178711
  - -0.10489130020141602
  - -0.1059718132019043
  - -0.1331174522638321
  - -0.1126244068145752
  - -0.10564589500427246
  - -0.10417938232421875
  - -0.10080862045288086
  - -0.10289621353149414
  - -0.10766339302062988
  - -0.10469269752502441
  - -0.0978994369506836
  - -0.10318136215209961
  - -0.1219487190246582
  - -0.10458135604858398
  - -0.10436153411865234
  - -2.843087911605835
  - -0.10446023941040039
  - -0.10409784317016602
  - -0.173662006855011
- - -0.10733890533447266
  - -0.10524368286132812
  - -0.10642671585083008
  - -0.10402226448059082
  - -0.10073041915893555
  - -0.1031498908996582
  - -0.11174392700195312
  - -0.10172367095947266
  - -0.10518264770507812
  - -0.10463953018188477
  - -0.10560894012451172
  - -0.0721956118941307
  - -2.885441780090332
  - -0.10522007942199707
  - -0.09476089477539062
  - -0.10149478912353516
  - -0.10289335250854492
  - -0.10224723815917969
  - -0.10487031936645508
  - -0.10482358932495117
  - -0.10568475723266602
  - -0.13266123831272125
  - -0.11250638961791992
  - -0.10560727119445801
  - -0.1039876937866211
  - -0.10075521469116211
  - -0.10294914245605469
  - -0.10762715339660645
  - -0.10469889640808105
  - -0.09799718856811523
  - -0.10307884216308594
  - -0.12062883377075195
  - -0.10456609725952148
  - -0.10425376892089844
  - -0.6168140172958374
  - -0.10568428039550781
  - -0.10527610778808594
  - -0.05770469829440117
- - -0.10733890533447266
  - -0.10524368286132812
  - -0.10642671585083008
  - -0.10402226448059082
  - -0.10073041915893555
  - -0.1031498908996582
  - -0.11174392700195312
  - -0.10172367095947266
  - -0.10518264770507812
  - -0.10463953018188477
  - -0.10560894012451172
  - -0.0721956118941307
  - -0.11336064338684082
  - -0.10541629791259766
  - -0.09418487548828125
  - -0.10182619094848633
  - -0.10322904586791992
  - -0.10239458084106445
  - -0.10481405258178711
  - -0.10489130020141602
  - -0.1059718132019043
  - -0.1331174522638321
  - -3.4423959255218506
  - -0.1058340072631836
  - -0.10364246368408203
  - -0.10078668594360352
  - -0.10284233093261719
  - -0.10766983032226562
  - -0.10466122627258301
  - -0.09763526916503906
  - -0.10337162017822266
  - -0.12268590927124023
  - -0.10456562042236328
  - -0.10438871383666992
  - -0.6237258911132812
  - -0.10565376281738281
  - -0.10515785217285156
  - -0.05831035226583481
- - -0.10733890533447266
  - -0.10524368286132812
  - -0.10642671585083008
  - -0.10402226448059082
  - -0.10073041915893555
  - -0.1031498908996582
  - -0.11174392700195312
  - -0.10172367095947266
  - -0.10518264770507812
  - -0.10463953018188477
  - -0.10560894012451172
  - -0.0721956118941307
  - -0.11336064338684082
  - -0.10541629791259766
  - -0.09418487548828125
  - -0.10182619094848633
  - -0.10322904586791992
  - -0.10239458084106445
  - -0.10481405258178711
  - -0.10489130020141602
  - -0.1059718132019043
  - -0.1331174522638321
  - -0.1126244068145752
  - -0.10564589500427246
  - -0.10417938232421875
  - -0.10080862045288086
  - -0.10289621353149414
  - -3.554736375808716
  - -0.10500454902648926
  - -0.09760618209838867
  - -0.10347509384155273
  - -0.12212467193603516
  - -0.10457754135131836
  - -0.10436439514160156
  - -0.618473470211029
  - -0.10562658309936523
  - -0.10528945922851562
  - -0.058692630380392075
- - -0.10733890533447266
  - -0.10524368286132812
  - -3.5547051429748535
  - -0.10408687591552734
  - -0.10136938095092773
  - -0.10593748092651367
  - -0.11458396911621094
  - -0.10150003433227539
  - -0.10521984100341797
  - -0.1045069694519043
  - -0.10553359985351562
  - -0.07172559201717377
  - -0.11642980575561523
  - -0.10543942451477051
  - -0.09389925003051758
  - -0.10196685791015625
  - -0.10326862335205078
  - -0.10234546661376953
  - -0.1049189567565918
  - -0.10482645034790039
  - -0.10591506958007812
  - -0.13530144095420837
  - -0.11250591278076172
  - -0.10566473007202148
  - -0.10416507720947266
  - -0.10081911087036133
  - -0.1028742790222168
  - -0.10764789581298828
  - -0.10467720031738281
  - -0.09782886505126953
  - -0.10303306579589844
  - -0.12148284912109375
  - -0.10459232330322266
  - -0.10438203811645508
  - -0.6206508278846741
  - -0.10564756393432617
  - -0.10522651672363281
  - -0.058421678841114044
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
