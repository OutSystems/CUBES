db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/country.csv
 - tests-examples/db2csv/world_1/tables/countrylanguage.csv
output: tests-examples/db2csv/world_1/tables/0056_dev.csv
raw_question: What is the language that is used by the largest number of Asian nations? 
question_index: 757 
has_limit: True 
has_order_by: True 
order_by_direction:
 -  desc 
constants:
 - Asia
 - '1'
join_columns:
 - countrycode
 - code
groupby_columns:
 - language
functions:
 - count
columns:
 - continent
filters:
 - '='
ieu: []
comment: |-
  SELECT T2.Language
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T1.Continent = "Asia"
  GROUP BY T2.Language
  ORDER BY COUNT (*) DESC
  LIMIT 1

sql: |-
  SELECT T2.Language
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T1.Continent = "Asia"
  GROUP BY T2.Language
  ORDER BY COUNT (*) DESC
  LIMIT 1
smbop_beam_join_columns:
- - countrycode
  - code
- - countrycode
  - code
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- - language
- - language
- []
- []
- - language
- []
- []
- - language
- []
- - language
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
smbop_beam_constants:
- - Asia
  - '1)'
- - Asia
  - '1)'
- - Asia
- - Asia
- - Asia
- - Asia
  - '2'
- - Asia
- - Asia
- - Asia
  - '1'
- - Asia
  - '1'
smbop_beam_functions:
- - count
- - count
- []
- []
- - count
- []
- []
- []
- []
- - count
smbop_beam_columns:
- - continent
- - region
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.continent = (SELECT countrylanguage.language FROM countrylanguage GROUP BY countrylanguage.language ORDER BY COUNT( * ) DESC LIMIT 1)
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.region = (SELECT countrylanguage.language FROM countrylanguage GROUP BY countrylanguage.language ORDER BY COUNT( * ) DESC LIMIT 1)
  - SELECT country.code FROM country ORDER BY country.region ASC
  - SELECT countrylanguage.language FROM countrylanguage
  - SELECT countrylanguage.language FROM countrylanguage GROUP BY countrylanguage.language ORDER BY COUNT( * ) DESC
  - SELECT country.code FROM country ORDER BY country.region ASC LIMIT 2
  - SELECT country.code FROM country
  - SELECT countrylanguage.language FROM countrylanguage GROUP BY countrylanguage.language
  - SELECT country.code FROM country ORDER BY country.region ASC LIMIT 1
  - SELECT countrylanguage.language FROM countrylanguage GROUP BY countrylanguage.language ORDER BY COUNT( * ) DESC LIMIT 1
smbop_beam_inferred_code_w_terminals:
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.continent = (SELECT countrylanguage.language FROM countrylanguage GROUP BY countrylanguage.language ORDER BY COUNT( * ) DESC LIMIT 1)
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.region = (SELECT countrylanguage.language FROM countrylanguage GROUP BY countrylanguage.language ORDER BY COUNT( * ) DESC LIMIT 1)
  - SELECT country.code FROM country ORDER BY country.region ASC
  - SELECT countrylanguage.language FROM countrylanguage
  - SELECT countrylanguage.language FROM countrylanguage GROUP BY countrylanguage.language ORDER BY COUNT( * ) DESC
  - SELECT country.code FROM country ORDER BY country.region ASC LIMIT 2
  - SELECT country.code FROM country
  - SELECT countrylanguage.language FROM countrylanguage GROUP BY countrylanguage.language
  - SELECT country.code FROM country ORDER BY country.region ASC LIMIT 1
  - SELECT countrylanguage.language FROM countrylanguage GROUP BY countrylanguage.language ORDER BY COUNT( * ) DESC LIMIT 1
smbop_beam_has_limit:
  - True
  - True
  - False
  - False
  - False
  - True
  - False
  - False
  - True
  - True
smbop_beam_has_order_by:
  - True
  - True
  - True
  - False
  - True
  - True
  - False
  - False
  - True
  - True
smbop_beam_order_by_direction:
- -  desc 
- -  desc 
- []
- []
- []
- -  asc 
- []
- []
- -  asc 
- -  desc 
ratsql_beam_join_columns:
- []
- []
- []
- []
- - countrycode
  - code
- - countrycode
  - code
- []
ratsql_beam_groupby_columns:
- - language
- - language
- - language
- - language
- - language
- - language
- - language
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
ratsql_beam_constants:
- - Asia
  - '1'
- - Asia
  - '1'
- - Asia
  - '1'
- - Asia
  - '1'
- - Asia
  - '1'
- - Asia
- - Asia
  - '1'
- - Asia
  - '1'
- - Asia
  - '1'
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- []
- - isofficial
- []
- []
- []
- []
- - percentage
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- - '='
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
  - SELECT countrylanguage.Language FROM countrylanguage WHERE countrylanguage.IsOfficial = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
  - SELECT DISTINCT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
  - SELECT countrylanguage.Language FROM countrylanguage GROUP BY DISTINCT countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
  - SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(DISTINCT *) Desc LIMIT 1
  - SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
  - SELECT countrylanguage.Language FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
  - SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(countrylanguage.Percentage) Desc LIMIT 1
ratsql_beam_inferred_code_w_terminals:
  - SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
  - SELECT countrylanguage.Language FROM countrylanguage WHERE countrylanguage.IsOfficial = 't' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
  - SELECT DISTINCT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
  - SELECT countrylanguage.Language FROM countrylanguage GROUP BY DISTINCT countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
  - SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(DISTINCT *) Desc LIMIT 1
  - SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
  - SELECT countrylanguage.Language FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
  - SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(countrylanguage.Percentage) Desc LIMIT 1
ratsql_beam_has_limit:
  - True
  - True
  - True
  - False
  - True
  - True
  - True
ratsql_beam_has_order_by:
  - True
  - True
  - True
  - True
  - True
  - True
  - True
ratsql_beam_order_by_direction:
- -  desc 
- -  desc 
- -  desc 
- []
- -  desc 
- -  desc 
- -  desc 
ratsql_beam_score_history:
- - -0.10460424423217773
  - -0.10392045974731445
  - -0.1050570011138916
  - -0.1043710708618164
  - -0.1014561653137207
  - -0.10259485244750977
  - -0.10441398620605469
  - -0.101409912109375
  - -0.10430240631103516
  - -0.10525894165039062
  - -0.10450029373168945
  - -0.1022815853357315
  - -0.11274194717407227
  - -0.10546612739562988
  - -0.3133230209350586
  - -0.11376523971557617
  - -0.10318994522094727
  - -0.10602712631225586
  - -0.10507965087890625
  - -0.07747387886047363
  - -0.11243033409118652
  - -0.10564661026000977
  - -0.09961414337158203
  - -0.10111570358276367
  - -0.09959793090820312
  - -0.10338020324707031
  - -0.08833503723144531
  - -0.10503482818603516
  - -0.10454034805297852
  - -0.11349344253540039
  - -0.22812683880329132
  - -0.11003232002258301
  - -0.105926513671875
  - -0.09843945503234863
  - -0.10510945320129395
  - -0.0980534553527832
  - -0.10300779342651367
  - -0.1074066162109375
  - -0.10491180419921875
  - -0.10474777221679688
  - -0.06218663975596428
- - -0.10460424423217773
  - -0.10392045974731445
  - -0.1050570011138916
  - -0.1043710708618164
  - -0.1014561653137207
  - -0.10259485244750977
  - -0.10441398620605469
  - -0.101409912109375
  - -0.10430240631103516
  - -0.10525894165039062
  - -0.10450029373168945
  - -0.1022815853357315
  - -0.11274194717407227
  - -0.10546612739562988
  - -1.9567828178405762
  - -0.10560274124145508
  - -0.10183238983154297
  - -0.10137796401977539
  - -0.10489511489868164
  - -0.1045370101928711
  - -0.10584735870361328
  - -0.32807743549346924
  - -0.11214494705200195
  - -0.10590529441833496
  - -0.10391712188720703
  - -0.10187721252441406
  - -0.10685920715332031
  - -0.10686397552490234
  - -0.10543298721313477
  - -0.07445244491100311
  - -0.11271214485168457
  - -0.10581040382385254
  - -0.0997767448425293
  - -0.1015315055847168
  - -0.10190820693969727
  - -0.10401630401611328
  - -0.08892059326171875
  - -0.10493040084838867
  - -0.10454607009887695
  - -0.11170053482055664
  - -0.2012559175491333
  - -0.11023092269897461
  - -0.10595846176147461
  - -0.09870767593383789
  - -0.10511565208435059
  - -0.09745311737060547
  - -0.10324859619140625
  - -0.10749959945678711
  - -0.1048879623413086
  - -0.10470104217529297
  - -0.06224679574370384
- - -0.10460424423217773
  - -0.10392045974731445
  - -0.1050570011138916
  - -0.1043710708618164
  - -0.1014561653137207
  - -0.10259485244750977
  - -0.10441398620605469
  - -0.101409912109375
  - -0.10430240631103516
  - -0.10525894165039062
  - -0.10450029373168945
  - -0.1022815853357315
  - -3.455148935317993
  - -0.10512042045593262
  - -0.2818150520324707
  - -0.11404991149902344
  - -0.10283279418945312
  - -0.10529041290283203
  - -0.10509920120239258
  - -0.07822269201278687
  - -0.1124420166015625
  - -0.1056523323059082
  - -0.099578857421875
  - -0.10110139846801758
  - -0.09962081909179688
  - -0.10335969924926758
  - -0.08833837509155273
  - -0.10503482818603516
  - -0.10450506210327148
  - -0.11339426040649414
  - -0.22771482169628143
  - -0.1100313663482666
  - -0.10591840744018555
  - -0.0984342098236084
  - -0.10511255264282227
  - -0.0980386734008789
  - -0.10291576385498047
  - -0.10748147964477539
  - -0.10492134094238281
  - -0.10476255416870117
  - -0.061955515295267105
- - -0.10460424423217773
  - -0.10392045974731445
  - -0.1050570011138916
  - -0.1043710708618164
  - -0.1014561653137207
  - -0.10259485244750977
  - -0.10441398620605469
  - -0.101409912109375
  - -0.10430240631103516
  - -0.10525894165039062
  - -0.10450029373168945
  - -0.1022815853357315
  - -0.11274194717407227
  - -0.10546612739562988
  - -0.3133230209350586
  - -0.11376523971557617
  - -0.10318994522094727
  - -0.10602712631225586
  - -0.10507965087890625
  - -0.07747387886047363
  - -3.437567949295044
  - -0.10471272468566895
  - -0.1023111343383789
  - -0.10189151763916016
  - -0.09989452362060547
  - -0.10310602188110352
  - -0.08796119689941406
  - -0.10504150390625
  - -0.10454130172729492
  - -0.11353111267089844
  - -0.2280709445476532
  - -0.11003613471984863
  - -0.10592865943908691
  - -0.09852313995361328
  - -0.1051027774810791
  - -0.09814691543579102
  - -0.10293436050415039
  - -0.10746097564697266
  - -0.10492324829101562
  - -0.10474157333374023
  - -0.06170516833662987
- - -0.10460424423217773
  - -0.10392045974731445
  - -0.1050570011138916
  - -0.1043710708618164
  - -0.1014561653137207
  - -0.10259485244750977
  - -0.10441398620605469
  - -0.101409912109375
  - -0.10430240631103516
  - -0.10525894165039062
  - -0.10450029373168945
  - -0.1022815853357315
  - -0.11274194717407227
  - -0.10546612739562988
  - -0.3133230209350586
  - -0.11376523971557617
  - -0.10318994522094727
  - -0.10602712631225586
  - -0.10507965087890625
  - -0.07747387886047363
  - -0.11243033409118652
  - -0.10564661026000977
  - -0.09961414337158203
  - -0.10111570358276367
  - -0.09959793090820312
  - -0.10338020324707031
  - -0.08833503723144531
  - -0.10503482818603516
  - -0.10454034805297852
  - -0.11349344253540039
  - -0.22812683880329132
  - -3.4841315746307373
  - -0.10532259941101074
  - -0.09829235076904297
  - -0.10511112213134766
  - -0.09783029556274414
  - -0.10309362411499023
  - -0.10749673843383789
  - -0.10491609573364258
  - -0.10477161407470703
  - -0.061659663915634155
- - -0.10460424423217773
  - -0.10392045974731445
  - -0.1050570011138916
  - -0.1043710708618164
  - -0.1014561653137207
  - -0.10259485244750977
  - -0.10441398620605469
  - -0.101409912109375
  - -0.10430240631103516
  - -0.10525894165039062
  - -0.10450029373168945
  - -0.1022815853357315
  - -0.11274194717407227
  - -0.10546612739562988
  - -0.3133230209350586
  - -0.11376523971557617
  - -0.10318994522094727
  - -0.10602712631225586
  - -0.10507965087890625
  - -0.07747387886047363
  - -0.11243033409118652
  - -0.10564661026000977
  - -0.09961414337158203
  - -0.10111570358276367
  - -0.09959793090820312
  - -0.10338020324707031
  - -0.08833503723144531
  - -0.10503482818603516
  - -0.10454034805297852
  - -0.11349344253540039
  - -0.22812683880329132
  - -0.11003232002258301
  - -0.105926513671875
  - -3.757167100906372
  - -0.11412334442138672
  - -0.10254192352294922
  - -0.1068105697631836
  - -0.10495328903198242
  - -0.1050715446472168
  - -0.07116153836250305
- - -0.10460424423217773
  - -0.10392045974731445
  - -0.1050570011138916
  - -0.1043710708618164
  - -0.1014561653137207
  - -0.10259485244750977
  - -0.10441398620605469
  - -0.101409912109375
  - -0.10430240631103516
  - -0.10525894165039062
  - -0.10450029373168945
  - -0.1022815853357315
  - -0.11274194717407227
  - -0.10546612739562988
  - -0.3133230209350586
  - -0.11376523971557617
  - -0.10318994522094727
  - -0.10602712631225586
  - -0.10507965087890625
  - -0.07747387886047363
  - -0.11243033409118652
  - -0.10564661026000977
  - -0.09961414337158203
  - -0.10111570358276367
  - -0.09959793090820312
  - -0.10338020324707031
  - -0.08833503723144531
  - -0.10503482818603516
  - -0.10454034805297852
  - -0.11349344253540039
  - -0.22812683880329132
  - -0.11003232002258301
  - -0.105926513671875
  - -0.09843945503234863
  - -0.10510945320129395
  - -0.0980534553527832
  - -0.10300779342651367
  - -0.1074066162109375
  - -0.10491180419921875
  - -0.10474777221679688
  - -3.7936105728149414
- - -0.10460424423217773
  - -0.10392045974731445
  - -0.1050570011138916
  - -0.1043710708618164
  - -0.1014561653137207
  - -0.10259485244750977
  - -0.10441398620605469
  - -0.101409912109375
  - -0.10430240631103516
  - -0.10525894165039062
  - -0.10450029373168945
  - -0.1022815853357315
  - -0.11274194717407227
  - -0.10546612739562988
  - -0.3133230209350586
  - -0.11376523971557617
  - -0.10318994522094727
  - -0.10602712631225586
  - -0.10507965087890625
  - -0.07747387886047363
  - -0.11243033409118652
  - -0.10564661026000977
  - -0.09961414337158203
  - -0.10111570358276367
  - -0.09959793090820312
  - -0.10338020324707031
  - -0.08833503723144531
  - -0.10503482818603516
  - -0.10454034805297852
  - -0.11349344253540039
  - -0.22812683880329132
  - -0.11003232002258301
  - -0.105926513671875
  - -0.09843945503234863
  - -0.10510945320129395
  - -0.0980534553527832
  - -0.10300779342651367
  - -0.1074066162109375
  - -0.10491180419921875
  - -0.10474777221679688
  - -3.979104995727539
- - -0.10460424423217773
  - -0.10392045974731445
  - -0.1050570011138916
  - -0.1043710708618164
  - -0.1014561653137207
  - -0.10259485244750977
  - -0.10441398620605469
  - -0.101409912109375
  - -0.10430240631103516
  - -0.10525894165039062
  - -0.10450029373168945
  - -0.1022815853357315
  - -0.11274194717407227
  - -0.10546612739562988
  - -0.3133230209350586
  - -0.11376523971557617
  - -0.10318994522094727
  - -0.10602712631225586
  - -0.10507965087890625
  - -0.07747387886047363
  - -0.11243033409118652
  - -0.10564661026000977
  - -0.09961414337158203
  - -0.10111570358276367
  - -0.09959793090820312
  - -0.10338020324707031
  - -0.08833503723144531
  - -0.10503482818603516
  - -0.10454034805297852
  - -0.11349344253540039
  - -4.367285251617432
  - -0.11086249351501465
  - -0.10623812675476074
  - -0.09896588325500488
  - -0.10506129264831543
  - -0.09698629379272461
  - -0.10296106338500977
  - -0.1076974868774414
  - -0.10496902465820312
  - -0.104827880859375
  - -0.06331238895654678
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'IsOfficial'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'True'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (True, 'bool'))
  - ('order_by', (True, True))
  - ('order', 'Desc')
  - ('val_unit*', 1)
  - ('val_unit_seq_elem', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('val_unit', 'Divide')
  - 'False'
  - '<EOS>'
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
