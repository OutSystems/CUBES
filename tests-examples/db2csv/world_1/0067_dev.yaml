db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/country.csv
 - tests-examples/db2csv/world_1/tables/countrylanguage.csv
output: tests-examples/db2csv/world_1/tables/0067_dev.csv
raw_question: What is the official language spoken in the country whose head of state is Beatrix? 
question_index: 768 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - T
 - Beatrix
join_columns:
 - countrycode
 - code
groupby_columns: []
functions: []
columns:
 - isofficial
 - headofstate
filters:
 - '='
ieu: []
comment: |-
  SELECT T2.Language
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T1.HeadOfState = "Beatrix"
    AND T2.IsOfficial = "T"

sql: |-
  SELECT T2.Language
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T1.HeadOfState = "Beatrix"
    AND T2.IsOfficial = "T"
smbop_beam_join_columns:
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- []
- - countrycode
  - code
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
smbop_beam_constants:
- - T
  - Beatrix
- - T
  - Beatrix
- - T
  - Beatrix
- - T
  - Beatrix
- - T
  - Beatrix
- - T
  - Beatrix
- - T
  - Beatrix
- - T
  - Beatrix
- - T
  - Beatrix
- - T
  - Beatrix
smbop_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
- - avg
- []
smbop_beam_columns:
- - headofstate
- - headofstate
- - headofstate
- - countrycode
  - headofstate
- - headofstate
- - countrycode
  - headofstate
- - countrycode
  - headofstate
- - countrycode
  - headofstate
- - language
- []
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - '='
  - '>'
  - '>='
- - '='
- - '='
  - '>'
  - '>='
- - '='
  - '>'
  - '>='
- - '='
  - '>'
  - '>='
- []
- []
smbop_beam_inferred_code:
  - SELECT countrylanguage.isofficial FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.headofstate = 'Beatrix'
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.headofstate = 'Beatrix'
  - SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'
  - SELECT countrylanguage.isofficial FROM countrylanguage, country WHERE countrylanguage.countrycode >= country.code AND country.headofstate = 'Beatrix'
  - SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'
  - SELECT countrylanguage.language FROM countrylanguage, country WHERE countrylanguage.countrycode >= country.code AND country.headofstate = 'Beatrix'
  - SELECT countrylanguage.isofficial FROM country, countrylanguage WHERE countrylanguage.countrycode >= country.code AND country.headofstate = 'Beatrix'
  - SELECT countrylanguage.language FROM country, countrylanguage WHERE countrylanguage.countrycode >= country.code AND country.headofstate = 'Beatrix'
  - SELECT AVG( countrylanguage.language ) FROM countrylanguage
  - SELECT countrylanguage.isofficial FROM countrylanguage
smbop_beam_inferred_code_w_terminals:
  - SELECT countrylanguage.isofficial FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.headofstate = 'Beatrix'
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.headofstate = 'Beatrix'
  - SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'
  - SELECT countrylanguage.isofficial FROM countrylanguage, country WHERE countrylanguage.countrycode >= country.code AND country.headofstate = 'Beatrix'
  - SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'
  - SELECT countrylanguage.language FROM countrylanguage, country WHERE countrylanguage.countrycode >= country.code AND country.headofstate = 'Beatrix'
  - SELECT countrylanguage.isofficial FROM country, countrylanguage WHERE countrylanguage.countrycode >= country.code AND country.headofstate = 'Beatrix'
  - SELECT countrylanguage.language FROM country, countrylanguage WHERE countrylanguage.countrycode >= country.code AND country.headofstate = 'Beatrix'
  - SELECT AVG( countrylanguage.language ) FROM countrylanguage
  - SELECT countrylanguage.isofficial FROM countrylanguage
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
ratsql_beam_constants:
- - t
- - t
- - t
- - t
  - '1'
- - t
- - t
- - t
- - t
- - t
ratsql_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_columns:
- - headofstate
- - headofstate
- - headofstate
- - headofstate
- - headofstate
- - headofstate
- - headofstate
- - isofficial
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'terminal'
  - SELECT DISTINCT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'terminal'
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT country.HeadOfState = 'terminal'
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'terminal' LIMIT 1
  - SELECT countrylanguage.Language FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'terminal'
  - SELECT countrylanguage.IsOfficial FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'terminal'
  - SELECT country.GovernmentForm FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'terminal'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'terminal'
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.IsOfficial = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 't'
  - SELECT DISTINCT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 't'
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT country.HeadOfState = 't'
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 't' LIMIT 1
  - SELECT countrylanguage.Language FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 't'
  - SELECT countrylanguage.IsOfficial FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 't'
  - SELECT country.GovernmentForm FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 't'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 't'
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.IsOfficial = 't'
ratsql_beam_has_limit:
  - False
  - False
  - True
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10450172424316406
  - -0.10431718826293945
  - -0.11472296714782715
  - -0.10417485237121582
  - -0.10123348236083984
  - -0.1024327278137207
  - -0.1047220230102539
  - -0.1017608642578125
  - -0.10444498062133789
  - -0.10509586334228516
  - -0.10521793365478516
  - -0.12756823003292084
  - -0.11151862144470215
  - -0.10524940490722656
  - -0.0914297103881836
  - -0.10458230972290039
  - -0.10027170181274414
  - -0.10100889205932617
  - -0.10437154769897461
  - -0.10442638397216797
  - -0.10543632507324219
  - -0.07310540229082108
  - -0.11142158508300781
  - -0.10580062866210938
  - -0.10378217697143555
  - -0.10118722915649414
  - -0.10301876068115234
  - -0.10683631896972656
  - -0.10485005378723145
  - -0.09777975082397461
  - -0.10436010360717773
  - -0.11506795883178711
  - -0.10515689849853516
  - -0.10494041442871094
  - -0.11526715010404587
  - -0.10577058792114258
  - -0.10503673553466797
  - -0.08785519748926163
- - -0.10450172424316406
  - -0.10431718826293945
  - -3.310804843902588
  - -0.10403561592102051
  - -0.10092973709106445
  - -0.102447509765625
  - -0.10507822036743164
  - -0.10167646408081055
  - -0.10445833206176758
  - -0.10509490966796875
  - -0.10514593124389648
  - -0.12027326226234436
  - -0.11167383193969727
  - -0.10524153709411621
  - -0.0914926528930664
  - -0.10366344451904297
  - -0.10027503967285156
  - -0.10100555419921875
  - -0.1043853759765625
  - -0.10442447662353516
  - -0.10545825958251953
  - -0.07287035882472992
  - -0.11140060424804688
  - -0.10580778121948242
  - -0.10371160507202148
  - -0.10121297836303711
  - -0.1030111312866211
  - -0.10683369636535645
  - -0.10485005378723145
  - -0.0978078842163086
  - -0.10431194305419922
  - -0.11513805389404297
  - -0.10516023635864258
  - -0.10493755340576172
  - -0.1154492199420929
  - -0.10576963424682617
  - -0.1050424575805664
  - -0.08781294524669647
- - -0.10450172424316406
  - -0.10431718826293945
  - -0.11472296714782715
  - -0.10417485237121582
  - -0.10123348236083984
  - -0.1024327278137207
  - -0.1047220230102539
  - -0.1017608642578125
  - -0.10444498062133789
  - -0.10509586334228516
  - -0.10521793365478516
  - -0.12756823003292084
  - -0.11151862144470215
  - -0.10524940490722656
  - -0.0914297103881836
  - -0.10458230972290039
  - -0.10027170181274414
  - -0.10100889205932617
  - -0.10437154769897461
  - -0.10442638397216797
  - -0.10543632507324219
  - -0.07310540229082108
  - -3.44661283493042
  - -0.10610198974609375
  - -0.10311698913574219
  - -0.10118341445922852
  - -0.10313081741333008
  - -0.1069037914276123
  - -0.10483860969543457
  - -0.09773921966552734
  - -0.10428905487060547
  - -0.11502695083618164
  - -0.10514450073242188
  - -0.10489034652709961
  - -0.11672071367502213
  - -0.10577869415283203
  - -0.10506296157836914
  - -0.08756429702043533
- - -0.10450172424316406
  - -0.10431718826293945
  - -0.11472296714782715
  - -0.10417485237121582
  - -0.10123348236083984
  - -0.1024327278137207
  - -0.1047220230102539
  - -0.1017608642578125
  - -0.10444498062133789
  - -0.10509586334228516
  - -0.10521793365478516
  - -0.12756823003292084
  - -0.11151862144470215
  - -0.10524940490722656
  - -0.0914297103881836
  - -0.10458230972290039
  - -0.10027170181274414
  - -0.10100889205932617
  - -0.10437154769897461
  - -0.10442638397216797
  - -0.10543632507324219
  - -0.07310540229082108
  - -0.11142158508300781
  - -0.10580062866210938
  - -0.10378217697143555
  - -0.10118722915649414
  - -0.10301876068115234
  - -3.562670946121216
  - -0.10473918914794922
  - -0.09804296493530273
  - -0.10451364517211914
  - -0.11544370651245117
  - -0.10511493682861328
  - -0.10479497909545898
  - -0.11609572917222977
  - -0.10585880279541016
  - -0.10500478744506836
  - -0.08815257251262665
- - -0.10450172424316406
  - -0.10431718826293945
  - -0.11472296714782715
  - -0.10417485237121582
  - -0.10123348236083984
  - -0.1024327278137207
  - -0.1047220230102539
  - -0.1017608642578125
  - -0.10444498062133789
  - -0.10509586334228516
  - -0.10521793365478516
  - -0.12756823003292084
  - -0.11151862144470215
  - -0.10524940490722656
  - -0.0914297103881836
  - -0.10458230972290039
  - -0.10027170181274414
  - -0.10100889205932617
  - -0.10437154769897461
  - -0.10442638397216797
  - -0.10543632507324219
  - -0.07310540229082108
  - -0.11142158508300781
  - -0.10580062866210938
  - -0.10378217697143555
  - -0.10118722915649414
  - -0.10301876068115234
  - -0.10683631896972656
  - -0.10485005378723145
  - -0.09777975082397461
  - -0.10436010360717773
  - -0.11506795883178711
  - -0.10515689849853516
  - -0.10494041442871094
  - -3.4709701538085938
  - -0.10524511337280273
  - -0.10645008087158203
  - -0.3470071852207184
- - -0.10450172424316406
  - -0.10431718826293945
  - -0.11472296714782715
  - -0.10417485237121582
  - -0.10123348236083984
  - -0.1024327278137207
  - -0.1047220230102539
  - -0.1017608642578125
  - -0.10444498062133789
  - -0.10509586334228516
  - -0.10521793365478516
  - -3.918856143951416
  - -0.11083483695983887
  - -0.10521078109741211
  - -0.09113264083862305
  - -0.10616159439086914
  - -0.10030508041381836
  - -0.10098123550415039
  - -0.10438251495361328
  - -0.10442924499511719
  - -0.1054525375366211
  - -0.07093014568090439
  - -0.11140036582946777
  - -0.10583090782165527
  - -0.1039128303527832
  - -0.1011810302734375
  - -0.10313653945922852
  - -0.1070554256439209
  - -0.10482287406921387
  - -0.09819650650024414
  - -0.10384988784790039
  - -0.12026643753051758
  - -0.10513448715209961
  - -0.10442686080932617
  - -0.13158242404460907
  - -0.10563898086547852
  - -0.10525321960449219
  - -0.09158436954021454
- - -0.10450172424316406
  - -0.10431718826293945
  - -0.11472296714782715
  - -0.10417485237121582
  - -0.10123348236083984
  - -0.1024327278137207
  - -0.1047220230102539
  - -0.1017608642578125
  - -0.10444498062133789
  - -0.10509586334228516
  - -0.10521793365478516
  - -4.978147029876709
  - -0.1127481460571289
  - -0.10523176193237305
  - -0.0911564826965332
  - -0.1037893295288086
  - -0.1001429557800293
  - -0.10103082656860352
  - -0.10434484481811523
  - -0.10446310043334961
  - -0.10558414459228516
  - -0.06741033494472504
  - -0.1113119125366211
  - -0.10588192939758301
  - -0.10406923294067383
  - -0.1014094352722168
  - -0.10294342041015625
  - -0.10714459419250488
  - -0.10482025146484375
  - -0.0985870361328125
  - -0.1035003662109375
  - -0.15130329132080078
  - -0.10512256622314453
  - -0.1041421890258789
  - -0.11501439660787582
  - -0.10550737380981445
  - -0.10531902313232422
  - -0.10936522483825684
- - -0.10450172424316406
  - -0.10431718826293945
  - -0.11472296714782715
  - -0.10417485237121582
  - -0.10123348236083984
  - -0.1024327278137207
  - -0.1047220230102539
  - -0.1017608642578125
  - -0.10444498062133789
  - -0.10509586334228516
  - -0.10521793365478516
  - -5.170571804046631
  - -0.11153912544250488
  - -0.10543012619018555
  - -0.09115123748779297
  - -0.10229158401489258
  - -0.10031461715698242
  - -0.10107898712158203
  - -0.10437297821044922
  - -0.10447216033935547
  - -0.10549783706665039
  - -0.07100477069616318
  - -0.11137843132019043
  - -0.10586285591125488
  - -0.10408401489257812
  - -0.10130691528320312
  - -0.10299062728881836
  - -0.10713481903076172
  - -0.10481667518615723
  - -0.09870243072509766
  - -0.10354852676391602
  - -0.14973878860473633
  - -0.10511970520019531
  - -0.1041412353515625
  - -0.11516134440898895
  - -0.1054983139038086
  - -0.10532617568969727
  - -0.10873337835073471
- - -0.10450172424316406
  - -0.10431718826293945
  - -0.11472296714782715
  - -0.10417485237121582
  - -0.10123348236083984
  - -0.1024327278137207
  - -0.1047220230102539
  - -0.1017608642578125
  - -0.10444498062133789
  - -0.10509586334228516
  - -0.10521793365478516
  - -0.12756823003292084
  - -0.11151862144470215
  - -0.10524940490722656
  - -0.0914297103881836
  - -0.10458230972290039
  - -0.10027170181274414
  - -0.10100889205932617
  - -0.10437154769897461
  - -0.10442638397216797
  - -0.10543632507324219
  - -5.202036380767822
  - -0.11292314529418945
  - -0.10540413856506348
  - -0.10723066329956055
  - -0.10051202774047852
  - -0.10291719436645508
  - -0.10674929618835449
  - -0.1046912670135498
  - -0.10610437393188477
  - -0.10394001007080078
  - -0.11492586135864258
  - -0.10513925552368164
  - -0.10525178909301758
  - -0.11834300309419632
  - -0.1054830551147461
  - -0.10507535934448242
  - -0.08484859019517899
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'IsOfficial'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'IsOfficial'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
