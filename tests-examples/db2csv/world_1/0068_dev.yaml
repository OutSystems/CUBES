db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/countrylanguage.csv
 - tests-examples/db2csv/world_1/tables/country.csv
output: tests-examples/db2csv/world_1/tables/0068_dev.csv
raw_question: What is the official language used in the country the name of whose head of state is Beatrix. 
question_index: 769 
constants:
 - T
 - Beatrix
join_columns:
 - code
 - countrycode
columns:
 - headofstate
 - isofficial
filters:
 - '='
comment: |-
  SELECT T2.Language
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T1.HeadOfState = "Beatrix"
    AND T2.IsOfficial = "T"

sql: |-
  SELECT T2.Language
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T1.HeadOfState = "Beatrix"
    AND T2.IsOfficial = "T"
smbop_beam_join_columns:
- - code
  - countrycode
- - code
  - countrycode
- []
- - code
  - countrycode
- []
- - code
  - countrycode
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
smbop_beam_constants:
- - t
- - t
- - t
- - t
- - t
- - t
- - t
- - t
- - t
smbop_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_columns:
- - headofstate
- - headofstate
- - countrycode
  - headofstate
- - headofstate
- - countrycode
  - headofstate
- - headofstate
- - countrycode
  - headofstate
- - countrycode
  - headofstate
- []
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
  - '>='
  - '>'
- - '='
- - '='
  - '>='
  - '>'
- - '='
- - '='
  - '>='
  - '>'
- - '='
  - '>='
  - '>'
- []
smbop_beam_inferred_code:
  - SELECT countrylanguage.isofficial FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.headofstate = 'Beatrix'
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.headofstate = 'Beatrix'
  - SELECT countrylanguage.isofficial FROM countrylanguage, country WHERE countrylanguage.countrycode >= country.code AND country.headofstate = 'Beatrix'
  - SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'
  - SELECT countrylanguage.language FROM countrylanguage, country WHERE countrylanguage.countrycode >= country.code AND country.headofstate = 'Beatrix'
  - SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'
  - SELECT countrylanguage.isofficial FROM country, countrylanguage WHERE countrylanguage.countrycode >= country.code AND country.headofstate = 'Beatrix'
  - SELECT countrylanguage.language FROM country, countrylanguage WHERE countrylanguage.countrycode >= country.code AND country.headofstate = 'Beatrix'
  - SELECT countrylanguage.isofficial FROM countrylanguage
smbop_beam_inferred_code_w_terminals:
  - SELECT countrylanguage.isofficial FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.headofstate = 'Beatrix'
  - SELECT countrylanguage.language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.headofstate = 'Beatrix'
  - SELECT countrylanguage.isofficial FROM countrylanguage, country WHERE countrylanguage.countrycode >= country.code AND country.headofstate = 'Beatrix'
  - SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'
  - SELECT countrylanguage.language FROM countrylanguage, country WHERE countrylanguage.countrycode >= country.code AND country.headofstate = 'Beatrix'
  - SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'
  - SELECT countrylanguage.isofficial FROM country, countrylanguage WHERE countrylanguage.countrycode >= country.code AND country.headofstate = 'Beatrix'
  - SELECT countrylanguage.language FROM country, countrylanguage WHERE countrylanguage.countrycode >= country.code AND country.headofstate = 'Beatrix'
  - SELECT countrylanguage.isofficial FROM countrylanguage
ratsql_beam_join_columns:
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- []
- []
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
ratsql_beam_constants:
- - t
- - t
- - t
- - t
- - t
- - t
- - t
ratsql_beam_functions:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_columns:
- - headofstate
- - headofstate
- - headofstate
- - headofstate
- - headofstate
- - headofstate
- - headofstate
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'terminal'
  - SELECT countrylanguage.Language, country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'terminal'
  - SELECT countrylanguage.Language FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'terminal'
  - SELECT countrylanguage.Language, country.Name FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'terminal'
  - SELECT DISTINCT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'terminal'
  - SELECT country.Name FROM country WHERE country.HeadOfState = 'terminal'
  - SELECT countrylanguage.Language, country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT country.HeadOfState = 'terminal'
  - SELECT country.Name, country.Name FROM country WHERE country.HeadOfState = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = t
  - SELECT countrylanguage.Language, country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = t
  - SELECT countrylanguage.Language FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = t
  - SELECT countrylanguage.Language, country.Name FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = t
  - SELECT DISTINCT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = t
  - SELECT country.Name FROM country WHERE country.HeadOfState = t
  - SELECT countrylanguage.Language, country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT country.HeadOfState = t
  - SELECT country.Name, country.Name FROM country WHERE country.HeadOfState = t
ratsql_beam_score_history:
- - -0.10441970825195312
  - -0.10457706451416016
  - -0.11595988273620605
  - -0.1042633056640625
  - -1.1781740188598633
  - -0.10280179977416992
  - -0.10439538955688477
  - -0.10156822204589844
  - -0.10441207885742188
  - -0.10487174987792969
  - -0.10469913482666016
  - -0.15677586197853088
  - -0.11166262626647949
  - -0.10502815246582031
  - -0.0909113883972168
  - -0.1021738052368164
  - -0.1001138687133789
  - -0.1010751724243164
  - -0.10460281372070312
  - -0.10439586639404297
  - -0.10523509979248047
  - -0.08131278306245804
  - -0.11171412467956543
  - -0.10569405555725098
  - -0.10463809967041016
  - -0.10059547424316406
  - -0.10349464416503906
  - -0.10693144798278809
  - -0.10481071472167969
  - -0.09797430038452148
  - -0.10362863540649414
  - -0.11329269409179688
  - -0.10495281219482422
  - -0.10479927062988281
  - -0.3562009632587433
  - -0.10430622100830078
  - -0.10440874099731445
  - -0.1331409364938736
- - -0.10441970825195312
  - -0.10457706451416016
  - -0.11595988273620605
  - -0.1042633056640625
  - -0.5652084350585938
  - -0.1038050651550293
  - -0.10356807708740234
  - -0.10131978988647461
  - -0.10447549819946289
  - -0.10495471954345703
  - -0.10480213165283203
  - -0.13674698770046234
  - -0.11157941818237305
  - -0.10495209693908691
  - -0.09732913970947266
  - -0.10386848449707031
  - -0.10403299331665039
  - -0.10450029373168945
  - -0.1042180061340332
  - -0.10499715805053711
  - -0.19319523870944977
  - -0.11201810836791992
  - -0.10524892807006836
  - -0.0932765007019043
  - -0.10270166397094727
  - -0.09982776641845703
  - -0.10114097595214844
  - -0.10491275787353516
  - -0.10370922088623047
  - -0.10479545593261719
  - -0.08238361775875092
  - -0.11171531677246094
  - -0.10565400123596191
  - -0.1049962043762207
  - -0.10096073150634766
  - -0.10337018966674805
  - -0.10697317123413086
  - -0.10477638244628906
  - -0.0978541374206543
  - -0.1034855842590332
  - -0.11351203918457031
  - -0.1049656867980957
  - -0.10505867004394531
  - -0.38049453496932983
  - -0.10410833358764648
  - -0.10448026657104492
  - -0.13209335505962372
- - -0.10441970825195312
  - -0.10457706451416016
  - -0.11595988273620605
  - -0.1042633056640625
  - -1.1781740188598633
  - -0.10280179977416992
  - -0.10439538955688477
  - -0.10156822204589844
  - -0.10441207885742188
  - -0.10487174987792969
  - -0.10469913482666016
  - -0.15677586197853088
  - -0.11166262626647949
  - -0.10502815246582031
  - -0.0909113883972168
  - -0.1021738052368164
  - -0.1001138687133789
  - -0.1010751724243164
  - -0.10460281372070312
  - -0.10439586639404297
  - -0.10523509979248047
  - -0.08131278306245804
  - -0.11171412467956543
  - -0.10569405555725098
  - -0.10463809967041016
  - -0.10059547424316406
  - -0.10349464416503906
  - -0.10693144798278809
  - -0.10481071472167969
  - -0.09797430038452148
  - -0.10362863540649414
  - -0.11329269409179688
  - -0.10495281219482422
  - -0.10479927062988281
  - -2.527231216430664
  - -0.10513734817504883
  - -0.10548257827758789
  - -0.18559488654136658
- - -0.10441970825195312
  - -0.10457706451416016
  - -0.11595988273620605
  - -0.1042633056640625
  - -0.5652084350585938
  - -0.1038050651550293
  - -0.10356807708740234
  - -0.10131978988647461
  - -0.10447549819946289
  - -0.10495471954345703
  - -0.10480213165283203
  - -0.13674698770046234
  - -0.11157941818237305
  - -0.10495209693908691
  - -0.09732913970947266
  - -0.10386848449707031
  - -0.10403299331665039
  - -0.10450029373168945
  - -0.1042180061340332
  - -0.10499715805053711
  - -0.19319523870944977
  - -0.11201810836791992
  - -0.10524892807006836
  - -0.0932765007019043
  - -0.10270166397094727
  - -0.09982776641845703
  - -0.10114097595214844
  - -0.10491275787353516
  - -0.10370922088623047
  - -0.10479545593261719
  - -0.08238361775875092
  - -0.11171531677246094
  - -0.10565400123596191
  - -0.1049962043762207
  - -0.10096073150634766
  - -0.10337018966674805
  - -0.10697317123413086
  - -0.10477638244628906
  - -0.0978541374206543
  - -0.1034855842590332
  - -0.11351203918457031
  - -0.1049656867980957
  - -0.10505867004394531
  - -2.490093231201172
  - -0.105072021484375
  - -0.10536956787109375
  - -0.1870211958885193
- - -0.10441970825195312
  - -0.10457706451416016
  - -3.271446704864502
  - -0.10396122932434082
  - -0.9448237419128418
  - -0.1028127670288086
  - -0.10455513000488281
  - -0.1016225814819336
  - -0.1044464111328125
  - -0.10483264923095703
  - -0.10457468032836914
  - -0.15135571360588074
  - -0.11173033714294434
  - -0.10502886772155762
  - -0.09072113037109375
  - -0.10237550735473633
  - -0.1001133918762207
  - -0.10106754302978516
  - -0.10463237762451172
  - -0.10438919067382812
  - -0.10523748397827148
  - -0.0808224007487297
  - -0.11171722412109375
  - -0.10569214820861816
  - -0.1046133041381836
  - -0.1006021499633789
  - -0.10349464416503906
  - -0.10693168640136719
  - -0.10481071472167969
  - -0.09797191619873047
  - -0.10362529754638672
  - -0.11330986022949219
  - -0.10495328903198242
  - -0.10480165481567383
  - -0.35650020837783813
  - -0.10430383682250977
  - -0.10440826416015625
  - -0.1331370770931244
- - -0.10441970825195312
  - -0.10457706451416016
  - -0.11595988273620605
  - -0.1042633056640625
  - -1.1781740188598633
  - -0.10280179977416992
  - -0.10439538955688477
  - -0.10156822204589844
  - -0.10441207885742188
  - -0.10487174987792969
  - -0.10469913482666016
  - -3.7214314937591553
  - -0.1118314266204834
  - -0.10533380508422852
  - -0.08937501907348633
  - -0.10234689712524414
  - -0.1001591682434082
  - -0.1011495590209961
  - -0.10457372665405273
  - -0.10448169708251953
  - -0.10548543930053711
  - -0.08085175603628159
  - -0.11156272888183594
  - -0.10579037666320801
  - -0.10470104217529297
  - -0.10091543197631836
  - -0.10341930389404297
  - -0.10730767250061035
  - -0.10475325584411621
  - -0.09902572631835938
  - -0.10326290130615234
  - -0.13444948196411133
  - -0.10518598556518555
  - -0.10332727432250977
  - -0.14644387364387512
- - -0.10441970825195312
  - -0.10457706451416016
  - -0.11595988273620605
  - -0.1042633056640625
  - -0.5652084350585938
  - -0.1038050651550293
  - -0.10356807708740234
  - -0.10131978988647461
  - -0.10447549819946289
  - -0.10495471954345703
  - -0.10480213165283203
  - -0.13674698770046234
  - -0.11157941818237305
  - -0.10495209693908691
  - -0.09732913970947266
  - -0.10386848449707031
  - -0.10403299331665039
  - -0.10450029373168945
  - -0.1042180061340332
  - -0.10499715805053711
  - -0.19319523870944977
  - -0.11201810836791992
  - -0.10524892807006836
  - -0.0932765007019043
  - -0.10270166397094727
  - -0.09982776641845703
  - -0.10114097595214844
  - -0.10491275787353516
  - -0.10370922088623047
  - -0.10479545593261719
  - -0.08238361775875092
  - -3.4408607482910156
  - -0.10589241981506348
  - -0.1035466194152832
  - -0.10079050064086914
  - -0.10349273681640625
  - -0.1070547103881836
  - -0.10476255416870117
  - -0.09777069091796875
  - -0.10341262817382812
  - -0.11361217498779297
  - -0.10492897033691406
  - -0.10497474670410156
  - -0.37992700934410095
  - -0.10410833358764648
  - -0.1044921875
  - -0.13211162388324738
- - -0.10441970825195312
  - -0.10457706451416016
  - -0.11595988273620605
  - -0.1042633056640625
  - -0.5652084350585938
  - -0.1038050651550293
  - -0.10356807708740234
  - -0.10131978988647461
  - -0.10447549819946289
  - -0.10495471954345703
  - -0.10480213165283203
  - -3.8946850299835205
  - -0.11235666275024414
  - -0.10511612892150879
  - -0.09624576568603516
  - -0.10382413864135742
  - -0.10444211959838867
  - -0.1045846939086914
  - -0.10390043258666992
  - -0.10497903823852539
  - -0.1934804767370224
  - -0.11162996292114258
  - -0.10526037216186523
  - -0.09391641616821289
  - -0.1025857925415039
  - -0.0999917984008789
  - -0.10117864608764648
  - -0.10488700866699219
  - -0.10363054275512695
  - -0.10485696792602539
  - -0.08543430268764496
  - -0.11153197288513184
  - -0.10575222969055176
  - -0.10465764999389648
  - -0.10096120834350586
  - -0.10344791412353516
  - -0.1072695255279541
  - -0.1047358512878418
  - -0.09805822372436523
  - -0.10323667526245117
  - -0.2651681900024414
  - -0.10517597198486328
  - -0.10316848754882812
  - -0.16031672060489655
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'HeadOfState'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
