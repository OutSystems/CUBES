db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/countrylanguage.csv
 - tests-examples/db2csv/world_1/tables/country.csv
output: tests-examples/db2csv/world_1/tables/0038_dev.csv
raw_question: How many official languages are spoken in Afghanistan? 
question_index: 739 
constants:
 - Afghanistan
 - T
join_columns:
 - code
 - countrycode
functions:
 - count
columns:
 - name
 - isofficial
filters:
 - '='
comment: |-
  SELECT COUNT(*)
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T1.Name = "Afghanistan"
    AND IsOfficial = "T"

sql: |-
  SELECT COUNT(*)
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T1.Name = "Afghanistan"
    AND IsOfficial = "T"
smbop_beam_join_columns:
- - code
  - countrycode
- - code
  - countrycode
- []
- - code
  - countrycode
- - code
  - countrycode
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
smbop_beam_constants:
- - Afghanistan
  - t
- - Afghanistan
  - t
- - Afghanistan
  - t
- - Afghanistan
  - t
- - Afghanistan
  - t
smbop_beam_functions:
- - count
- - count
- - count
- []
- - count
smbop_beam_columns:
- - name
  - isofficial
- - name
- []
- - name
- - name
  - isofficial
smbop_beam_ieu:
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- []
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT COUNT( DISTINCT countrylanguage.isofficial ) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.name = 'Afghanistan'
  - SELECT COUNT( * ) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.name = 'Afghanistan'
  - SELECT COUNT( * ) FROM countrylanguage
  - SELECT DISTINCT countrylanguage.isofficial FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.name = 'Afghanistan'
  - SELECT COUNT( DISTINCT countrylanguage.isofficial ) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = 'Afghanistan'
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( DISTINCT countrylanguage.isofficial ) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.name = 'Afghanistan'
  - SELECT COUNT( * ) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.name = 'Afghanistan'
  - SELECT COUNT( * ) FROM countrylanguage
  - SELECT DISTINCT countrylanguage.isofficial FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.name = 'Afghanistan'
  - SELECT COUNT( DISTINCT countrylanguage.isofficial ) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = 'Afghanistan'
ratsql_beam_join_columns:
- - code
  - countrycode
- []
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
- - code
  - countrycode
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
ratsql_beam_constants:
- - Afghanistan
  - t
- - Afghanistan
  - t
- - Afghanistan
  - t
- - Afghanistan
  - t
- - Afghanistan
  - t
- - Afghanistan
  - t
- - Afghanistan
  - t
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - language
  - name
- - language
  - countrycode
- - language
  - name
- - language
  - name
- - language
  - name
- - language
  - name
- - language
  - countrycode
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'terminal'
  - SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage WHERE countrylanguage.CountryCode = 'terminal'
  - SELECT Count(DISTINCT countrylanguage.Language) FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'terminal'
  - SELECT Count(countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'terminal'
  - SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT country.Name = 'terminal'
  - SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'terminal' LIMIT 1
  - SELECT DISTINCT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'terminal'
  - SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.CountryCode = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'Afghanistan'
  - 
  - SELECT Count(DISTINCT countrylanguage.Language) FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'Afghanistan'
  - SELECT Count(countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'Afghanistan'
  - SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT country.Name = 'Afghanistan'
  - SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'Afghanistan' LIMIT 1
  - SELECT DISTINCT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'Afghanistan'
  - 
ratsql_beam_score_history:
- - -0.1074514389038086
  - -0.10504531860351562
  - -0.10639691352844238
  - -0.10400176048278809
  - -0.10088014602661133
  - -0.1038813591003418
  - -0.10939741134643555
  - -0.1015172004699707
  - -0.10509920120239258
  - -0.10456037521362305
  - -0.10550928115844727
  - -0.076423279941082
  - -0.10445022583007812
  - -0.10551023483276367
  - -0.09403276443481445
  - -0.09953022003173828
  - -0.10293245315551758
  - -0.10192346572875977
  - -0.10477113723754883
  - -0.10487747192382812
  - -0.10568618774414062
  - -0.13511598110198975
  - -0.11259579658508301
  - -0.10567307472229004
  - -0.10441350936889648
  - -0.10097455978393555
  - -0.10298967361450195
  - -0.10762381553649902
  - -0.10467123985290527
  - -0.09772729873657227
  - -0.10419559478759766
  - -0.12219047546386719
  - -0.10448884963989258
  - -0.10428047180175781
  - -0.626631498336792
  - -0.10549736022949219
  - -0.1064748764038086
  - -0.0676657184958458
- - -0.1074514389038086
  - -0.10504531860351562
  - -0.10639691352844238
  - -0.10400176048278809
  - -0.10088014602661133
  - -0.1038813591003418
  - -0.10939741134643555
  - -0.1015172004699707
  - -0.10509920120239258
  - -0.10456037521362305
  - -0.10550928115844727
  - -0.076423279941082
  - -0.10445022583007812
  - -0.10551023483276367
  - -0.09403276443481445
  - -0.09953022003173828
  - -0.10293245315551758
  - -0.10192346572875977
  - -0.10477113723754883
  - -0.10487747192382812
  - -0.10568618774414062
  - -2.6009581089019775
  - -0.1138920783996582
  - -0.10507583618164062
  - -0.10175609588623047
  - -0.1013951301574707
  - -0.10280847549438477
  - -0.1075890064239502
  - -0.10446858406066895
  - -0.10037899017333984
  - -0.10277271270751953
  - -0.29857683181762695
  - -0.10578727722167969
  - -0.10342931747436523
  - -0.1942661702632904
- - -0.1074514389038086
  - -0.10504531860351562
  - -0.10639691352844238
  - -0.10400176048278809
  - -0.10088014602661133
  - -0.1038813591003418
  - -0.10939741134643555
  - -0.1015172004699707
  - -0.10509920120239258
  - -0.10456037521362305
  - -0.10550928115844727
  - -0.076423279941082
  - -0.10445022583007812
  - -0.10551023483276367
  - -0.09403276443481445
  - -0.09953022003173828
  - -0.10293245315551758
  - -0.10192346572875977
  - -0.10477113723754883
  - -0.10487747192382812
  - -0.10568618774414062
  - -0.13511598110198975
  - -0.11259579658508301
  - -0.10567307472229004
  - -0.10441350936889648
  - -0.10097455978393555
  - -0.10298967361450195
  - -0.10762381553649902
  - -0.10467123985290527
  - -0.09772729873657227
  - -0.10419559478759766
  - -0.12219047546386719
  - -0.10448884963989258
  - -0.10428047180175781
  - -2.977551221847534
  - -0.10434770584106445
  - -0.10399770736694336
  - -0.16703477501869202
- - -0.1074514389038086
  - -0.10504531860351562
  - -0.10639691352844238
  - -0.10400176048278809
  - -0.10088014602661133
  - -0.1038813591003418
  - -0.10939741134643555
  - -0.1015172004699707
  - -0.10509920120239258
  - -0.10456037521362305
  - -0.10550928115844727
  - -0.076423279941082
  - -3.1178174018859863
  - -0.10529017448425293
  - -0.09444236755371094
  - -0.0994572639465332
  - -0.10358667373657227
  - -0.10182332992553711
  - -0.10480260848999023
  - -0.10487937927246094
  - -0.10552310943603516
  - -0.13459929823875427
  - -0.11246681213378906
  - -0.10562276840209961
  - -0.10430097579956055
  - -0.1009521484375
  - -0.10300588607788086
  - -0.10758543014526367
  - -0.10467696189880371
  - -0.0978388786315918
  - -0.10415077209472656
  - -0.12216520309448242
  - -0.10447216033935547
  - -0.10418272018432617
  - -0.6234102249145508
  - -0.1055440902709961
  - -0.10640764236450195
  - -0.06641212850809097
- - -0.1074514389038086
  - -0.10504531860351562
  - -0.10639691352844238
  - -0.10400176048278809
  - -0.10088014602661133
  - -0.1038813591003418
  - -0.10939741134643555
  - -0.1015172004699707
  - -0.10509920120239258
  - -0.10456037521362305
  - -0.10550928115844727
  - -0.076423279941082
  - -0.10445022583007812
  - -0.10551023483276367
  - -0.09403276443481445
  - -0.09953022003173828
  - -0.10293245315551758
  - -0.10192346572875977
  - -0.10477113723754883
  - -0.10487747192382812
  - -0.10568618774414062
  - -0.13511598110198975
  - -3.4433374404907227
  - -0.10591697692871094
  - -0.10400533676147461
  - -0.10097551345825195
  - -0.10294866561889648
  - -0.10763740539550781
  - -0.10460996627807617
  - -0.09752321243286133
  - -0.10431814193725586
  - -0.12291526794433594
  - -0.10447406768798828
  - -0.10432004928588867
  - -0.6280250549316406
  - -0.10551166534423828
  - -0.10639238357543945
  - -0.06702066957950592
- - -0.1074514389038086
  - -0.10504531860351562
  - -0.10639691352844238
  - -0.10400176048278809
  - -0.10088014602661133
  - -0.1038813591003418
  - -0.10939741134643555
  - -0.1015172004699707
  - -0.10509920120239258
  - -0.10456037521362305
  - -0.10550928115844727
  - -0.076423279941082
  - -0.10445022583007812
  - -0.10551023483276367
  - -0.09403276443481445
  - -0.09953022003173828
  - -0.10293245315551758
  - -0.10192346572875977
  - -0.10477113723754883
  - -0.10487747192382812
  - -0.10568618774414062
  - -0.13511598110198975
  - -0.11259579658508301
  - -0.10567307472229004
  - -0.10441350936889648
  - -0.10097455978393555
  - -0.10298967361450195
  - -3.554812431335449
  - -0.10497522354125977
  - -0.09651708602905273
  - -0.10434484481811523
  - -0.1225433349609375
  - -0.10447216033935547
  - -0.10422945022583008
  - -0.6243991851806641
  - -0.10549068450927734
  - -0.10647106170654297
  - -0.06716982275247574
- - -0.1074514389038086
  - -0.10504531860351562
  - -3.557370185852051
  - -0.10404467582702637
  - -0.10163593292236328
  - -0.10611772537231445
  - -0.11210775375366211
  - -0.10129547119140625
  - -0.10507965087890625
  - -0.1044301986694336
  - -0.10543203353881836
  - -0.07562272250652313
  - -0.10886454582214355
  - -0.10552787780761719
  - -0.09378576278686523
  - -0.0999460220336914
  - -0.10293388366699219
  - -0.10187673568725586
  - -0.1048126220703125
  - -0.10483217239379883
  - -0.105621337890625
  - -0.13670268654823303
  - -0.11238765716552734
  - -0.10570693016052246
  - -0.10447931289672852
  - -0.10097694396972656
  - -0.10298919677734375
  - -0.10761618614196777
  - -0.10466599464416504
  - -0.09768009185791016
  - -0.10407590866088867
  - -0.12226152420043945
  - -0.10449028015136719
  - -0.10428333282470703
  - -0.626045823097229
  - -0.10550260543823242
  - -0.10647392272949219
  - -0.0676114559173584
- - -0.1074514389038086
  - -0.10504531860351562
  - -0.10639691352844238
  - -0.10400176048278809
  - -0.10088014602661133
  - -0.1038813591003418
  - -0.10939741134643555
  - -0.1015172004699707
  - -0.10509920120239258
  - -0.10456037521362305
  - -0.10550928115844727
  - -0.076423279941082
  - -0.10445022583007812
  - -0.10551023483276367
  - -0.09403276443481445
  - -0.09953022003173828
  - -0.10293245315551758
  - -0.10192346572875977
  - -0.10477113723754883
  - -0.10487747192382812
  - -0.10568618774414062
  - -2.6009581089019775
  - -0.1138920783996582
  - -0.10507583618164062
  - -0.10175609588623047
  - -0.1013951301574707
  - -0.10280847549438477
  - -0.1075890064239502
  - -0.10446858406066895
  - -0.10037899017333984
  - -0.10277271270751953
  - -1.7893314361572266
  - -0.10551929473876953
  - -0.10375118255615234
  - -0.43678900599479675
  - -0.10543203353881836
  - -0.10738706588745117
  - -0.0730733796954155
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
