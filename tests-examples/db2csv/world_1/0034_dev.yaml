db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/country.csv
output: tests-examples/db2csv/world_1/tables/0034_dev.csv
raw_question: How many different forms of governments are there in Africa? 
question_index: 735 
constants:
 - Africa
functions:
 - count
columns:
 - governmentform
 - continent
filters:
 - '='
comment: |-
  SELECT count(DISTINCT GovernmentForm)
  FROM country
  WHERE Continent = "Africa"

sql: |-
  SELECT count(DISTINCT GovernmentForm)
  FROM country
  WHERE Continent = "Africa"
smbop_beam_join_columns:
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
smbop_beam_constants:
- - Africa
- - Africa
- - Africa
- - Africa
smbop_beam_functions:
- - count
- - count
- - count
- - count
smbop_beam_columns:
- - governmentform
  - continent
- - governmentform
- - governmentform
  - region
- - governmentform
  - region
smbop_beam_ieu:
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- []
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT COUNT( DISTINCT country.governmentform ) FROM country WHERE country.continent = 'Africa'
  - SELECT COUNT( DISTINCT country.governmentform ) FROM country
  - SELECT COUNT( DISTINCT country.governmentform ) FROM city, country WHERE country.region = 'Africa'
  - SELECT COUNT( DISTINCT country.governmentform ) FROM country WHERE country.region = 'Africa'
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( DISTINCT country.governmentform ) FROM country WHERE country.continent = 'Africa'
  - SELECT COUNT( DISTINCT country.governmentform ) FROM country
  - SELECT COUNT( DISTINCT country.governmentform ) FROM city, country WHERE country.region = 'Africa'
  - SELECT COUNT( DISTINCT country.governmentform ) FROM country WHERE country.region = 'Africa'
ratsql_beam_join_columns:
- []
- []
- []
- []
- - code
  - countrycode
- - code
  - countrycode
- []
- []
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
ratsql_beam_constants:
- - Africa
- - Africa
- - Africa
- - Africa
- - Africa
- - Africa
- - Africa
- - Africa
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - governmentform
  - continent
- - governmentform
  - continent
- - governmentform
  - continent
- - governmentform
  - continent
- - governmentform
  - continent
- - governmentform
  - continent
- - continent
- - governmentform
  - region
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Continent = 'terminal'
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE DISTINCT country.Continent = 'terminal'
  - SELECT Count(country.GovernmentForm) FROM country WHERE country.Continent = 'terminal'
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Continent = 'terminal' LIMIT 1
  - SELECT DISTINCT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Continent = 'terminal'
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'terminal'
  - SELECT Count(DISTINCT country.GovernmentForm) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = 'terminal'
  - SELECT Count(*) FROM country WHERE country.Continent = 'terminal'
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Region = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Continent = 'Africa'
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE DISTINCT country.Continent = 'Africa'
  - SELECT Count(country.GovernmentForm) FROM country WHERE country.Continent = 'Africa'
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Continent = 'Africa' LIMIT 1
  - SELECT DISTINCT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Continent = 'Africa'
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Africa'
  - SELECT Count(DISTINCT country.GovernmentForm) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = 'Africa'
  - SELECT Count(*) FROM country WHERE country.Continent = 'Africa'
  - SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Region = Africa
ratsql_beam_score_history:
- - -0.10860252380371094
  - -0.10520744323730469
  - -0.10646510124206543
  - -0.10402989387512207
  - -0.1018667221069336
  - -0.10741233825683594
  - -0.12182855606079102
  - -0.10404634475708008
  - -0.10525751113891602
  - -0.10427284240722656
  - -0.1057276725769043
  - -0.10953746736049652
  - -0.10872888565063477
  - -0.10530400276184082
  - -0.09459543228149414
  - -0.10065269470214844
  - -0.10131406784057617
  - -0.1011967658996582
  - -0.1041874885559082
  - -0.10430479049682617
  - -0.10612869262695312
  - -0.11608543246984482
  - -0.11292839050292969
  - -0.1052541732788086
  - -0.10518836975097656
  - -0.1007843017578125
  - -0.10229110717773438
  - -0.10810971260070801
  - -0.10452461242675781
  - -0.0994563102722168
  - -0.10360956192016602
  - -0.10850286483764648
  - -0.10536813735961914
  - -0.10359716415405273
  - -0.07454760372638702
- - -0.10860252380371094
  - -0.10520744323730469
  - -0.10646510124206543
  - -0.10402989387512207
  - -0.1018667221069336
  - -0.10741233825683594
  - -0.12182855606079102
  - -0.10404634475708008
  - -0.10525751113891602
  - -0.10427284240722656
  - -0.1057276725769043
  - -0.10953746736049652
  - -0.10872888565063477
  - -0.10530400276184082
  - -0.09459543228149414
  - -0.10065269470214844
  - -0.10131406784057617
  - -0.1011967658996582
  - -0.1041874885559082
  - -0.10430479049682617
  - -0.10612869262695312
  - -0.11608543246984482
  - -3.4327831268310547
  - -0.10558485984802246
  - -0.1039886474609375
  - -0.10071611404418945
  - -0.10240888595581055
  - -0.10809588432312012
  - -0.10455465316772461
  - -0.09940910339355469
  - -0.1036529541015625
  - -0.10851860046386719
  - -0.10525703430175781
  - -0.10357666015625
  - -0.07463479042053223
- - -0.10860252380371094
  - -0.10520744323730469
  - -0.10646510124206543
  - -0.10402989387512207
  - -0.1018667221069336
  - -0.10741233825683594
  - -0.12182855606079102
  - -0.10404634475708008
  - -0.10525751113891602
  - -0.10427284240722656
  - -0.1057276725769043
  - -0.10953746736049652
  - -3.4785237312316895
  - -0.10526275634765625
  - -0.09239387512207031
  - -0.1023859977722168
  - -0.10142183303833008
  - -0.10122871398925781
  - -0.10426044464111328
  - -0.10428142547607422
  - -0.10586071014404297
  - -0.10978733748197556
  - -0.11288571357727051
  - -0.10526537895202637
  - -0.1048884391784668
  - -0.10080528259277344
  - -0.10230302810668945
  - -0.1080935001373291
  - -0.10452055931091309
  - -0.09930562973022461
  - -0.10361528396606445
  - -0.10850858688354492
  - -0.10533332824707031
  - -0.10359382629394531
  - -0.07458975911140442
- - -0.10860252380371094
  - -0.10520744323730469
  - -0.10646510124206543
  - -0.10402989387512207
  - -0.1018667221069336
  - -0.10741233825683594
  - -0.12182855606079102
  - -0.10404634475708008
  - -0.10525751113891602
  - -0.10427284240722656
  - -0.1057276725769043
  - -0.10953746736049652
  - -0.10872888565063477
  - -0.10530400276184082
  - -0.09459543228149414
  - -0.10065269470214844
  - -0.10131406784057617
  - -0.1011967658996582
  - -0.1041874885559082
  - -0.10430479049682617
  - -0.10612869262695312
  - -0.11608543246984482
  - -0.11292839050292969
  - -0.1052541732788086
  - -0.10518836975097656
  - -0.1007843017578125
  - -0.10229110717773438
  - -3.546251058578491
  - -0.10491394996643066
  - -0.09999656677246094
  - -0.1034998893737793
  - -0.10850143432617188
  - -0.10547637939453125
  - -0.10367107391357422
  - -0.07278523594141006
- - -0.10860252380371094
  - -0.10520744323730469
  - -3.556607961654663
  - -0.10405516624450684
  - -0.10176706314086914
  - -0.1099238395690918
  - -0.1198878288269043
  - -0.10393714904785156
  - -0.10550594329833984
  - -0.10428094863891602
  - -0.10624074935913086
  - -0.10659972578287125
  - -0.10884904861450195
  - -0.10529971122741699
  - -0.09384632110595703
  - -0.1006937026977539
  - -0.10107231140136719
  - -0.10116958618164062
  - -0.10417842864990234
  - -0.10431766510009766
  - -0.10598373413085938
  - -0.1221492663025856
  - -0.11290431022644043
  - -0.10523700714111328
  - -0.10520601272583008
  - -0.10079622268676758
  - -0.10228300094604492
  - -0.10810661315917969
  - -0.10452771186828613
  - -0.09946632385253906
  - -0.10360193252563477
  - -0.10849714279174805
  - -0.10536909103393555
  - -0.10359525680541992
  - -0.07452812790870667
- - -0.10860252380371094
  - -0.10520744323730469
  - -0.10646510124206543
  - -0.10402989387512207
  - -0.1018667221069336
  - -0.10741233825683594
  - -0.12182855606079102
  - -0.10404634475708008
  - -0.10525751113891602
  - -0.10427284240722656
  - -0.1057276725769043
  - -0.10953746736049652
  - -0.10872888565063477
  - -0.10530400276184082
  - -0.09459543228149414
  - -0.10065269470214844
  - -0.10131406784057617
  - -0.1011967658996582
  - -0.1041874885559082
  - -0.10430479049682617
  - -0.10612869262695312
  - -0.11608543246984482
  - -0.11292839050292969
  - -0.1052541732788086
  - -0.10518836975097656
  - -0.1007843017578125
  - -0.10229110717773438
  - -0.10810971260070801
  - -0.10452461242675781
  - -0.0994563102722168
  - -0.10360956192016602
  - -0.10850286483764648
  - -0.10536813735961914
  - -0.10359716415405273
  - -3.6871888637542725
- - -0.10860252380371094
  - -0.10520744323730469
  - -0.10646510124206543
  - -0.10402989387512207
  - -0.1018667221069336
  - -0.10741233825683594
  - -0.12182855606079102
  - -0.10404634475708008
  - -0.10525751113891602
  - -0.10427284240722656
  - -0.1057276725769043
  - -0.10953746736049652
  - -0.10872888565063477
  - -0.10530400276184082
  - -0.09459543228149414
  - -0.10065269470214844
  - -0.10131406784057617
  - -0.1011967658996582
  - -0.1041874885559082
  - -0.10430479049682617
  - -0.10612869262695312
  - -0.11608543246984482
  - -0.11292839050292969
  - -0.1052541732788086
  - -0.10518836975097656
  - -0.1007843017578125
  - -0.10229110717773438
  - -0.10810971260070801
  - -0.10452461242675781
  - -0.0994563102722168
  - -0.10360956192016602
  - -0.10850286483764648
  - -0.10536813735961914
  - -0.10359716415405273
  - -3.7192139625549316
- - -0.10860252380371094
  - -0.10520744323730469
  - -0.10646510124206543
  - -0.10402989387512207
  - -0.1018667221069336
  - -0.10741233825683594
  - -0.12182855606079102
  - -0.10404634475708008
  - -0.10525751113891602
  - -0.10427284240722656
  - -0.1057276725769043
  - -4.41145658493042
  - -0.10961604118347168
  - -0.1051795482635498
  - -0.09384346008300781
  - -0.1038661003112793
  - -0.10174179077148438
  - -0.10123872756958008
  - -0.10434293746948242
  - -0.1044468879699707
  - -0.10601425170898438
  - -0.1077643632888794
  - -0.11302065849304199
  - -0.10532116889953613
  - -0.10503196716308594
  - -0.10070228576660156
  - -0.10220050811767578
  - -0.10803771018981934
  - -0.10451960563659668
  - -0.09905338287353516
  - -0.10330533981323242
  - -0.10858964920043945
  - -0.10529708862304688
  - -0.10367870330810547
  - -0.07532845437526703
- - -0.10860252380371094
  - -0.10520744323730469
  - -0.10646510124206543
  - -0.10402989387512207
  - -0.1018667221069336
  - -0.10741233825683594
  - -0.12182855606079102
  - -0.10404634475708008
  - -0.10525751113891602
  - -0.10427284240722656
  - -0.1057276725769043
  - -0.10953746736049652
  - -0.10872888565063477
  - -0.10530400276184082
  - -0.09459543228149414
  - -0.10065269470214844
  - -0.10131406784057617
  - -0.1011967658996582
  - -0.1041874885559082
  - -0.10430479049682617
  - -0.10612869262695312
  - -4.445934295654297
  - -0.11324882507324219
  - -0.10527873039245605
  - -0.1033320426940918
  - -0.1007847785949707
  - -0.10279369354248047
  - -0.1081240177154541
  - -0.10453391075134277
  - -0.10009050369262695
  - -0.10350704193115234
  - -0.10847282409667969
  - -0.10545587539672852
  - -0.10364007949829102
  - -0.0745316743850708
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'GovernmentForm'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Region'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
