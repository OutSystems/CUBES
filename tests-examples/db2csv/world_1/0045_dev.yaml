db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/country.csv
 - tests-examples/db2csv/world_1/tables/countrylanguage.csv
output: tests-examples/db2csv/world_1/tables/0045_dev.csv
raw_question: What are the names of nations speak both English and French? 
question_index: 746 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - French
 - English
join_columns:
 - countrycode
 - code
groupby_columns: []
functions: []
columns:
 - language
filters:
 - '='
ieu:
 - intersect
comment: |-
  SELECT T1.Name
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T2.Language = "English" INTERSECT
    SELECT T1.Name
    FROM country AS T1
    JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = "French"

sql: |-
  SELECT T1.Name
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T2.Language = "English" INTERSECT
    SELECT T1.Name
    FROM country AS T1
    JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = "French"
smbop_beam_join_columns:
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- []
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
smbop_beam_constants:
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
smbop_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_columns:
- - language
- - language
- - language
- - language
- []
- - language
- - language
- - language
- - language
smbop_beam_ieu:
- - intersect
- - intersect
- - intersect
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - '='
- []
- - '='
- - '='
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' INTERSECT SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' INTERSECT SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'English' INTERSECT SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English'
  - SELECT country.name FROM country
  - SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'English'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English and French'
smbop_beam_inferred_code_w_terminals:
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' INTERSECT SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' INTERSECT SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'English' INTERSECT SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English'
  - SELECT country.name FROM country
  - SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE countrylanguage.language = 'English'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'French'
  - SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English and French'
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
ratsql_beam_constants:
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
- - French
  - English
ratsql_beam_functions:
- []
- []
- []
- []
- []
ratsql_beam_columns:
- - language
- - language
- - language
- - language
- - language
ratsql_beam_ieu:
- - intersect
- - intersect
- - intersect
- - intersect
- - intersect
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT countrylanguage.Language = 'terminal'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' LIMIT 1 INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English'
  - SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French' INTERSECT SELECT country.Name FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT countrylanguage.Language = 'French' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT countrylanguage.Language = 'English'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French' INTERSECT SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English'
  - SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French' LIMIT 1 INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English'
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10657167434692383
  - -0.10416698455810547
  - -0.10481405258178711
  - -0.10435771942138672
  - -0.10310173034667969
  - -0.10248422622680664
  - -0.10565853118896484
  - -0.10159826278686523
  - -0.10498809814453125
  - -0.10463333129882812
  - -0.10451602935791016
  - -0.10118100792169571
  - -0.11067342758178711
  - -0.1051645278930664
  - -0.09006261825561523
  - -0.10097408294677734
  - -0.10308361053466797
  - -0.1009969711303711
  - -0.10484838485717773
  - -0.10499858856201172
  - -0.10570144653320312
  - -0.09317667782306671
  - -0.11096644401550293
  - -0.10575222969055176
  - -0.1033625602722168
  - -0.10090827941894531
  - -0.10087823867797852
  - -0.10700631141662598
  - -0.10480046272277832
  - -0.08431053161621094
  - -0.10812759399414062
  - -0.10614824295043945
  - -0.10936546325683594
  - -0.1039435863494873
  - -0.10205554962158203
  - -0.10300207138061523
  - -0.10468196868896484
  - -0.1020655632019043
  - -0.10442495346069336
  - -0.10459041595458984
  - -0.10454034805297852
  - -0.15246756374835968
  - -0.11140942573547363
  - -0.10557198524475098
  - -0.09040498733520508
  - -0.10513973236083984
  - -0.1007380485534668
  - -0.10187387466430664
  - -0.10440874099731445
  - -0.10503149032592773
  - -0.1039743423461914
  - -0.10726001858711243
  - -0.11141204833984375
  - -0.10616660118103027
  - -0.10452604293823242
  - -0.1024470329284668
  - -0.1059412956237793
  - -0.10742855072021484
  - -0.10485506057739258
  - -0.10528373718261719
  - -0.10603475570678711
  - -0.12279510498046875
  - -0.10523080825805664
  - -0.10488128662109375
  - -0.819195568561554
  - -0.10591316223144531
  - -0.10522890090942383
  - -0.05632351338863373
  - -0.0921335220336914
  - -0.11079120635986328
  - -0.1055908203125
  - -0.10386466979980469
  - -0.4125920534133911
  - -0.10652589797973633
  - -0.10512161254882812
  - -0.09084376692771912
- - -0.10657167434692383
  - -0.10416698455810547
  - -0.10481405258178711
  - -0.10435771942138672
  - -0.10310173034667969
  - -0.10248422622680664
  - -0.10565853118896484
  - -0.10159826278686523
  - -0.10498809814453125
  - -0.10463333129882812
  - -0.10451602935791016
  - -0.10118100792169571
  - -0.11067342758178711
  - -0.1051645278930664
  - -0.09006261825561523
  - -0.10097408294677734
  - -0.10308361053466797
  - -0.1009969711303711
  - -0.10484838485717773
  - -0.10499858856201172
  - -0.10570144653320312
  - -0.09317667782306671
  - -0.11096644401550293
  - -0.10575222969055176
  - -0.1033625602722168
  - -0.10090827941894531
  - -0.10087823867797852
  - -0.10700631141662598
  - -0.10480046272277832
  - -0.08431053161621094
  - -0.10812759399414062
  - -0.10614824295043945
  - -0.10936546325683594
  - -0.1039435863494873
  - -0.10205554962158203
  - -0.10300207138061523
  - -0.10468196868896484
  - -0.1020655632019043
  - -0.10442495346069336
  - -0.10459041595458984
  - -0.10454034805297852
  - -0.15246756374835968
  - -0.11140942573547363
  - -0.10557198524475098
  - -0.09040498733520508
  - -0.10513973236083984
  - -0.1007380485534668
  - -0.10187387466430664
  - -0.10440874099731445
  - -0.10503149032592773
  - -0.1039743423461914
  - -0.10726001858711243
  - -0.11141204833984375
  - -0.10616660118103027
  - -0.10452604293823242
  - -0.1024470329284668
  - -0.1059412956237793
  - -0.10742855072021484
  - -0.10485506057739258
  - -0.10528373718261719
  - -0.10603475570678711
  - -0.12279510498046875
  - -0.10523080825805664
  - -0.10488128662109375
  - -0.819195568561554
  - -0.10591316223144531
  - -0.10522890090942383
  - -0.05632351338863373
  - -0.0921335220336914
  - -0.11079120635986328
  - -0.1055908203125
  - -0.10386466979980469
  - -2.7108469009399414
  - -0.10860872268676758
  - -0.1044306755065918
  - -0.34757086634635925
- - -0.10657167434692383
  - -0.10416698455810547
  - -0.10481405258178711
  - -0.10435771942138672
  - -0.10310173034667969
  - -0.10248422622680664
  - -0.10565853118896484
  - -0.10159826278686523
  - -0.10498809814453125
  - -0.10463333129882812
  - -0.10451602935791016
  - -0.10118100792169571
  - -0.11067342758178711
  - -0.1051645278930664
  - -0.09006261825561523
  - -0.10097408294677734
  - -0.10308361053466797
  - -0.1009969711303711
  - -0.10484838485717773
  - -0.10499858856201172
  - -0.10570144653320312
  - -0.09317667782306671
  - -0.11096644401550293
  - -0.10575222969055176
  - -0.1033625602722168
  - -0.10090827941894531
  - -0.10087823867797852
  - -0.10700631141662598
  - -0.10480046272277832
  - -0.08431053161621094
  - -0.10812759399414062
  - -0.10614824295043945
  - -0.10936546325683594
  - -0.1039435863494873
  - -0.10205554962158203
  - -0.10300207138061523
  - -0.10468196868896484
  - -0.1020655632019043
  - -0.10442495346069336
  - -0.10459041595458984
  - -0.10454034805297852
  - -0.15246756374835968
  - -0.11140942573547363
  - -0.10557198524475098
  - -0.09040498733520508
  - -0.10513973236083984
  - -0.1007380485534668
  - -0.10187387466430664
  - -0.10440874099731445
  - -0.10503149032592773
  - -0.1039743423461914
  - -0.10726001858711243
  - -0.11141204833984375
  - -0.10616660118103027
  - -0.10452604293823242
  - -0.1024470329284668
  - -0.1059412956237793
  - -0.10742855072021484
  - -0.10485506057739258
  - -0.10528373718261719
  - -0.10603475570678711
  - -0.12279510498046875
  - -0.10523080825805664
  - -0.10488128662109375
  - -2.529419422149658
  - -0.10540962219238281
  - -0.10408830642700195
  - -1.0212922096252441
  - -0.11029052734375
  - -0.11688232421875
  - -0.10558843612670898
  - -0.10479307174682617
  - -0.4035837948322296
  - -0.10549783706665039
  - -0.1042022705078125
  - -0.09497158974409103
- - -0.10657167434692383
  - -0.10416698455810547
  - -0.10481405258178711
  - -0.10435771942138672
  - -0.10310173034667969
  - -0.10248422622680664
  - -0.10565853118896484
  - -0.10159826278686523
  - -0.10498809814453125
  - -0.10463333129882812
  - -0.10451602935791016
  - -0.10118100792169571
  - -0.11067342758178711
  - -0.1051645278930664
  - -0.09006261825561523
  - -0.10097408294677734
  - -0.10308361053466797
  - -0.1009969711303711
  - -0.10484838485717773
  - -0.10499858856201172
  - -0.10570144653320312
  - -0.09317667782306671
  - -3.4568228721618652
  - -0.10582113265991211
  - -0.10157489776611328
  - -0.10053062438964844
  - -0.10051202774047852
  - -0.10703587532043457
  - -0.10483217239379883
  - -0.08357858657836914
  - -0.10790777206420898
  - -0.1061253547668457
  - -0.10938429832458496
  - -0.10395431518554688
  - -0.1020359992980957
  - -0.1030278205871582
  - -0.10468196868896484
  - -0.10206127166748047
  - -0.10442304611206055
  - -0.10460186004638672
  - -0.10452651977539062
  - -0.1460619866847992
  - -0.11140871047973633
  - -0.1055612564086914
  - -0.09037971496582031
  - -0.10512113571166992
  - -0.1007375717163086
  - -0.10185766220092773
  - -0.10440587997436523
  - -0.1050271987915039
  - -0.10396957397460938
  - -0.10737105458974838
  - -0.11141324043273926
  - -0.10616707801818848
  - -0.104522705078125
  - -0.10246515274047852
  - -0.10589265823364258
  - -0.10742568969726562
  - -0.10485434532165527
  - -0.10515737533569336
  - -0.10594892501831055
  - -0.12256431579589844
  - -0.1051950454711914
  - -0.10487937927246094
  - -0.8147794604301453
  - -0.10592460632324219
  - -0.10524940490722656
  - -0.056519560515880585
  - -0.09218072891235352
  - -0.11075735092163086
  - -0.10559320449829102
  - -0.10387229919433594
  - -0.41188350319862366
  - -0.10651397705078125
  - -0.1050558090209961
  - -0.0909079909324646
- - -0.10657167434692383
  - -0.10416698455810547
  - -0.10481405258178711
  - -0.10435771942138672
  - -0.10310173034667969
  - -0.10248422622680664
  - -0.10565853118896484
  - -0.10159826278686523
  - -0.10498809814453125
  - -0.10463333129882812
  - -0.10451602935791016
  - -0.10118100792169571
  - -0.11067342758178711
  - -0.1051645278930664
  - -0.09006261825561523
  - -0.10097408294677734
  - -0.10308361053466797
  - -0.1009969711303711
  - -0.10484838485717773
  - -0.10499858856201172
  - -0.10570144653320312
  - -0.09317667782306671
  - -0.11096644401550293
  - -0.10575222969055176
  - -0.1033625602722168
  - -0.10090827941894531
  - -0.10087823867797852
  - -0.10700631141662598
  - -0.10480046272277832
  - -0.08431053161621094
  - -0.10812759399414062
  - -0.10614824295043945
  - -0.10936546325683594
  - -0.1039435863494873
  - -0.10205554962158203
  - -0.10300207138061523
  - -0.10468196868896484
  - -0.1020655632019043
  - -0.10442495346069336
  - -0.10459041595458984
  - -0.10454034805297852
  - -0.15246756374835968
  - -0.11140942573547363
  - -0.10557198524475098
  - -0.09040498733520508
  - -0.10513973236083984
  - -0.1007380485534668
  - -0.10187387466430664
  - -0.10440874099731445
  - -0.10503149032592773
  - -0.1039743423461914
  - -0.10726001858711243
  - -3.4431586265563965
  - -0.10586905479431152
  - -0.10516357421875
  - -0.10342741012573242
  - -0.10557365417480469
  - -0.10741877555847168
  - -0.10486388206481934
  - -0.1056985855102539
  - -0.10632801055908203
  - -0.12330341339111328
  - -0.10524320602416992
  - -0.10489368438720703
  - -0.8205617666244507
  - -0.1059269905090332
  - -0.10519552230834961
  - -0.05677909031510353
  - -0.09213638305664062
  - -0.11081981658935547
  - -0.10559225082397461
  - -0.10387229919433594
  - -0.41217106580734253
  - -0.10653018951416016
  - -0.10509204864501953
  - -0.09088001400232315
- - -0.10657167434692383
  - -0.10416698455810547
  - -0.10481405258178711
  - -0.10435771942138672
  - -0.10310173034667969
  - -0.10248422622680664
  - -0.10565853118896484
  - -0.10159826278686523
  - -0.10498809814453125
  - -0.10463333129882812
  - -0.10451602935791016
  - -0.10118100792169571
  - -0.11067342758178711
  - -0.1051645278930664
  - -0.09006261825561523
  - -0.10097408294677734
  - -0.10308361053466797
  - -0.1009969711303711
  - -0.10484838485717773
  - -0.10499858856201172
  - -0.10570144653320312
  - -0.09317667782306671
  - -0.11096644401550293
  - -0.10575222969055176
  - -0.1033625602722168
  - -0.10090827941894531
  - -0.10087823867797852
  - -0.10700631141662598
  - -0.10480046272277832
  - -0.08431053161621094
  - -0.10812759399414062
  - -0.10614824295043945
  - -0.10936546325683594
  - -0.1039435863494873
  - -0.10205554962158203
  - -0.10300207138061523
  - -0.10468196868896484
  - -0.1020655632019043
  - -0.10442495346069336
  - -0.10459041595458984
  - -0.10454034805297852
  - -0.15246756374835968
  - -3.4583470821380615
  - -0.10458111763000488
  - -0.09133005142211914
  - -0.10540008544921875
  - -0.10077905654907227
  - -0.10172462463378906
  - -0.10446596145629883
  - -0.10492753982543945
  - -0.10408878326416016
  - -0.10766032338142395
  - -0.11146044731140137
  - -0.10616326332092285
  - -0.10462045669555664
  - -0.1024179458618164
  - -0.10585784912109375
  - -0.10745930671691895
  - -0.10483288764953613
  - -0.1045689582824707
  - -0.10588216781616211
  - -0.12318134307861328
  - -0.1052255630493164
  - -0.10486793518066406
  - -0.8187010288238525
  - -0.10598945617675781
  - -0.10521459579467773
  - -0.05601426959037781
  - -0.0922079086303711
  - -0.1108560562133789
  - -0.10558938980102539
  - -0.1038670539855957
  - -0.4122338891029358
  - -0.1065220832824707
  - -0.10510635375976562
  - -0.0908411517739296
- - -0.10657167434692383
  - -0.10416698455810547
  - -0.10481405258178711
  - -0.10435771942138672
  - -0.10310173034667969
  - -0.10248422622680664
  - -0.10565853118896484
  - -0.10159826278686523
  - -0.10498809814453125
  - -0.10463333129882812
  - -0.10451602935791016
  - -0.10118100792169571
  - -3.477447986602783
  - -0.10336637496948242
  - -0.08967304229736328
  - -0.10284757614135742
  - -0.10345888137817383
  - -0.1010427474975586
  - -0.10490751266479492
  - -0.10498332977294922
  - -0.10576152801513672
  - -0.09221703559160233
  - -0.11096453666687012
  - -0.10572624206542969
  - -0.10338544845581055
  - -0.10085868835449219
  - -0.10108709335327148
  - -0.10700631141662598
  - -0.1047830581665039
  - -0.08398866653442383
  - -0.10804080963134766
  - -0.10611152648925781
  - -0.10936307907104492
  - -0.10394454002380371
  - -0.10204458236694336
  - -0.1029963493347168
  - -0.10467958450317383
  - -0.10206794738769531
  - -0.10442543029785156
  - -0.10459327697753906
  - -0.10453605651855469
  - -0.1508016288280487
  - -0.11141085624694824
  - -0.10557007789611816
  - -0.09037399291992188
  - -0.10513830184936523
  - -0.1007375717163086
  - -0.10187339782714844
  - -0.10441112518310547
  - -0.10503101348876953
  - -0.103973388671875
  - -0.1072753295302391
  - -0.11141204833984375
  - -0.10616660118103027
  - -0.10452508926391602
  - -0.10245180130004883
  - -0.10593748092651367
  - -0.10742759704589844
  - -0.10485506057739258
  - -0.10528993606567383
  - -0.10602712631225586
  - -0.1227259635925293
  - -0.10522842407226562
  - -0.10488271713256836
  - -0.8188252449035645
  - -0.10591459274291992
  - -0.10523176193237305
  - -0.05634785443544388
  - -0.09213924407958984
  - -0.11078739166259766
  - -0.1055908203125
  - -0.10386514663696289
  - -0.41257351636886597
  - -0.10652542114257812
  - -0.10512018203735352
  - -0.09084898978471756
- - -0.10657167434692383
  - -0.10416698455810547
  - -0.10481405258178711
  - -0.10435771942138672
  - -0.10310173034667969
  - -0.10248422622680664
  - -0.10565853118896484
  - -0.10159826278686523
  - -0.10498809814453125
  - -0.10463333129882812
  - -0.10451602935791016
  - -0.10118100792169571
  - -0.11067342758178711
  - -0.1051645278930664
  - -0.09006261825561523
  - -0.10097408294677734
  - -0.10308361053466797
  - -0.1009969711303711
  - -0.10484838485717773
  - -0.10499858856201172
  - -0.10570144653320312
  - -0.09317667782306671
  - -0.11096644401550293
  - -0.10575222969055176
  - -0.1033625602722168
  - -0.10090827941894531
  - -0.10087823867797852
  - -3.560009717941284
  - -0.10483026504516602
  - -0.09278106689453125
  - -0.10806512832641602
  - -0.106597900390625
  - -0.10950922966003418
  - -0.10388684272766113
  - -0.10232734680175781
  - -0.10292959213256836
  - -0.10467004776000977
  - -0.10208606719970703
  - -0.10442686080932617
  - -0.10461711883544922
  - -0.10449600219726562
  - -0.1337507665157318
  - -0.11144685745239258
  - -0.1055440902709961
  - -0.09046792984008789
  - -0.10503005981445312
  - -0.10075759887695312
  - -0.10182809829711914
  - -0.10441446304321289
  - -0.10501718521118164
  - -0.10400152206420898
  - -0.10712400823831558
  - -0.11142230033874512
  - -0.10616278648376465
  - -0.10451126098632812
  - -0.10251569747924805
  - -0.10586738586425781
  - -0.10742759704589844
  - -0.10485982894897461
  - -0.10460853576660156
  - -0.10628557205200195
  - -0.12253570556640625
  - -0.10516595840454102
  - -0.10490655899047852
  - -0.8104561567306519
  - -0.10588359832763672
  - -0.10530948638916016
  - -0.05668695643544197
  - -0.09222269058227539
  - -0.11063480377197266
  - -0.10559606552124023
  - -0.1038823127746582
  - -0.4105846583843231
  - -0.10648441314697266
  - -0.10492801666259766
  - -0.09100888669490814
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (True, False, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
