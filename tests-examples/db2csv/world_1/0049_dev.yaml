db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/country.csv
 - tests-examples/db2csv/world_1/tables/countrylanguage.csv
output: tests-examples/db2csv/world_1/tables/0049_dev.csv
raw_question: What is the number of distinct continents where Chinese is spoken? 
question_index: 750 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - Chinese
join_columns:
 - countrycode
 - code
groupby_columns: []
functions:
 - count
columns:
 - continent
 - language
filters:
 - '='
ieu: []
comment: |-
  SELECT COUNT(DISTINCT Continent)
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T2.Language = "Chinese"

sql: |-
  SELECT COUNT(DISTINCT Continent)
  FROM country AS T1
  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
  WHERE T2.Language = "Chinese"
smbop_beam_join_columns:
- - countrycode
  - code
smbop_beam_groupby_columns:
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
smbop_beam_constants:
- - Chinese
smbop_beam_functions:
- - count
smbop_beam_columns:
- - continent
  - language
smbop_beam_ieu:
- []
smbop_beam_filters:
- - '='
smbop_beam_inferred_code:
  - SELECT COUNT( DISTINCT country.continent ) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Chinese'
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( DISTINCT country.continent ) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Chinese'
smbop_beam_has_limit:
  - False
smbop_beam_has_order_by:
  - False
smbop_beam_order_by_direction:
- []
ratsql_beam_join_columns:
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
- - countrycode
  - code
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/country.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
ratsql_beam_constants:
- - Chinese
- - Chinese
- - Chinese
- - Chinese
- - Chinese
  - '1'
- - Chinese
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - continent
  - language
- - continent
  - language
- - continent
  - language
- - continent
  - language
- - continent
  - language
ratsql_beam_ieu:
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Count(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT Count(country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT Count(DISTINCT country.Continent) FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
  - SELECT Count(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT countrylanguage.Language = 'terminal'
  - SELECT Count(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' LIMIT 1
  - SELECT DISTINCT Count(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese'
  - SELECT Count(country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese'
  - SELECT Count(DISTINCT country.Continent) FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese'
  - SELECT Count(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE DISTINCT countrylanguage.Language = 'Chinese'
  - SELECT Count(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese' LIMIT 1
  - SELECT DISTINCT Count(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese'
ratsql_beam_has_limit:
  - False
  - False
  - False
  - True
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.11018991470336914
  - -0.10621356964111328
  - -0.10660982131958008
  - -0.1038520336151123
  - -0.10188913345336914
  - -0.1076202392578125
  - -0.1162872314453125
  - -0.10209846496582031
  - -0.10651731491088867
  - -0.10452461242675781
  - -0.10513448715209961
  - -0.07195036858320236
  - -0.12902021408081055
  - -0.10449457168579102
  - -0.0940546989440918
  - -0.10479068756103516
  - -0.10264301300048828
  - -0.10175466537475586
  - -0.1047978401184082
  - -0.10425758361816406
  - -0.1058192253112793
  - -0.07998277246952057
  - -0.11184382438659668
  - -0.1056363582611084
  - -0.1057281494140625
  - -0.10114526748657227
  - -0.10215234756469727
  - -0.10773992538452148
  - -0.10461711883544922
  - -0.09899425506591797
  - -0.10315895080566406
  - -0.11659622192382812
  - -0.1064901351928711
  - -0.10416603088378906
  - -0.4839742183685303
  - -0.10467004776000977
  - -0.10662460327148438
  - -0.10221916437149048
- - -0.11018991470336914
  - -0.10621356964111328
  - -0.10660982131958008
  - -0.1038520336151123
  - -0.10188913345336914
  - -0.1076202392578125
  - -0.1162872314453125
  - -0.10209846496582031
  - -0.10651731491088867
  - -0.10452461242675781
  - -0.10513448715209961
  - -0.07195036858320236
  - -2.713181972503662
  - -0.10464310646057129
  - -0.09150838851928711
  - -0.10510110855102539
  - -0.10265636444091797
  - -0.1017918586730957
  - -0.1048588752746582
  - -0.10426855087280273
  - -0.10581731796264648
  - -0.07918164879083633
  - -0.11187052726745605
  - -0.10565018653869629
  - -0.10583114624023438
  - -0.10114145278930664
  - -0.10217857360839844
  - -0.10772204399108887
  - -0.10462284088134766
  - -0.09893655776977539
  - -0.10339975357055664
  - -0.11491823196411133
  - -0.10605239868164062
  - -0.10445499420166016
  - -0.48424232006073
  - -0.10465812683105469
  - -0.10650920867919922
  - -0.1057218462228775
- - -0.11018991470336914
  - -0.10621356964111328
  - -0.10660982131958008
  - -0.1038520336151123
  - -0.10188913345336914
  - -0.1076202392578125
  - -0.1162872314453125
  - -0.10209846496582031
  - -0.10651731491088867
  - -0.10452461242675781
  - -0.10513448715209961
  - -0.07195036858320236
  - -0.12902021408081055
  - -0.10449457168579102
  - -0.0940546989440918
  - -0.10479068756103516
  - -0.10264301300048828
  - -0.10175466537475586
  - -0.1047978401184082
  - -0.10425758361816406
  - -0.1058192253112793
  - -0.07998277246952057
  - -0.11184382438659668
  - -0.1056363582611084
  - -0.1057281494140625
  - -0.10114526748657227
  - -0.10215234756469727
  - -0.10773992538452148
  - -0.10461711883544922
  - -0.09899425506591797
  - -0.10315895080566406
  - -0.11659622192382812
  - -0.1064901351928711
  - -0.10416603088378906
  - -2.518162250518799
  - -0.10535001754760742
  - -0.1054234504699707
  - -0.728524923324585
- - -0.11018991470336914
  - -0.10621356964111328
  - -0.10660982131958008
  - -0.1038520336151123
  - -0.10188913345336914
  - -0.1076202392578125
  - -0.1162872314453125
  - -0.10209846496582031
  - -0.10651731491088867
  - -0.10452461242675781
  - -0.10513448715209961
  - -0.07195036858320236
  - -0.12902021408081055
  - -0.10449457168579102
  - -0.0940546989440918
  - -0.10479068756103516
  - -0.10264301300048828
  - -0.10175466537475586
  - -0.1047978401184082
  - -0.10425758361816406
  - -0.1058192253112793
  - -0.07998277246952057
  - -3.4427926540374756
  - -0.10572052001953125
  - -0.10472726821899414
  - -0.10098552703857422
  - -0.1020355224609375
  - -0.10775208473205566
  - -0.10460400581359863
  - -0.09916400909423828
  - -0.1029963493347168
  - -0.1303877830505371
  - -0.1067647933959961
  - -0.1040496826171875
  - -0.4823349714279175
  - -0.10467958450317383
  - -0.10655498504638672
  - -0.10156156867742538
- - -0.11018991470336914
  - -0.10621356964111328
  - -0.10660982131958008
  - -0.1038520336151123
  - -0.10188913345336914
  - -0.1076202392578125
  - -0.1162872314453125
  - -0.10209846496582031
  - -0.10651731491088867
  - -0.10452461242675781
  - -0.10513448715209961
  - -0.07195036858320236
  - -0.12902021408081055
  - -0.10449457168579102
  - -0.0940546989440918
  - -0.10479068756103516
  - -0.10264301300048828
  - -0.10175466537475586
  - -0.1047978401184082
  - -0.10425758361816406
  - -0.1058192253112793
  - -0.07998277246952057
  - -0.11184382438659668
  - -0.1056363582611084
  - -0.1057281494140625
  - -0.10114526748657227
  - -0.10215234756469727
  - -3.55130934715271
  - -0.10491013526916504
  - -0.1001577377319336
  - -0.10306024551391602
  - -0.13444232940673828
  - -0.10658836364746094
  - -0.10406208038330078
  - -0.474396288394928
  - -0.10468387603759766
  - -0.10648727416992188
  - -0.1027117595076561
- - -0.11018991470336914
  - -0.10621356964111328
  - -3.5702264308929443
  - -0.10367918014526367
  - -0.10137176513671875
  - -0.11107778549194336
  - -0.11668586730957031
  - -0.10246562957763672
  - -0.10643339157104492
  - -0.10446643829345703
  - -0.10504531860351562
  - -0.07315404713153839
  - -0.16251778602600098
  - -0.10466313362121582
  - -0.09467267990112305
  - -0.10482549667358398
  - -0.10265159606933594
  - -0.10176467895507812
  - -0.10480070114135742
  - -0.10424613952636719
  - -0.10582542419433594
  - -0.08013109862804413
  - -0.11182117462158203
  - -0.10563993453979492
  - -0.10577392578125
  - -0.10115480422973633
  - -0.10213518142700195
  - -0.10770416259765625
  - -0.10462522506713867
  - -0.09863710403442383
  - -0.10321474075317383
  - -0.1154937744140625
  - -0.10641050338745117
  - -0.10422325134277344
  - -0.48276710510253906
  - -0.10466384887695312
  - -0.10662508010864258
  - -0.10292214900255203
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Continent'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
