db: tests-examples/db2csv/world_1/tables/world_1.sqlite
inputs:
 - tests-examples/db2csv/world_1/tables/countrylanguage.csv
output: tests-examples/db2csv/world_1/tables/0080_dev.csv
raw_question: Give the country codes for countries in which people speak langauges that are not English. 
question_index: 781 
constants:
 - English
columns:
 - language
filters:
 - '!='
comment: |-
  SELECT DISTINCT CountryCode
  FROM countrylanguage
  WHERE LANGUAGE != "English"

sql: |-
  SELECT DISTINCT CountryCode
  FROM countrylanguage
  WHERE LANGUAGE != "English"
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
smbop_beam_constants:
- - English
- - English
- - English
- - English
- - English
- - English
- - English
- - English
- - English
- - English
smbop_beam_functions:
- []
- []
- - avg
- []
- []
- []
- []
- []
- []
- []
smbop_beam_columns:
- - language
- - language
  - countrycode
- - language
- - language
- - language
- - language
- - language
- - language
- - language
- - language
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '!='
- - '='
- - '!='
- - '!='
- - '!='
- - '!='
- - '='
- - '>='
  - '>'
- - '!='
- - 'like'
smbop_beam_inferred_code:
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'English'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.countrycode NOT IN (SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English')
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != (SELECT AVG( countrylanguage.language ) FROM countrylanguage)
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'not English'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'are not English'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'English' ORDER BY countrylanguage.countrycode ASC
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language >= 'English'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'English' ORDER BY countrylanguage.countrycode DESC
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language LIKE '%English%'
smbop_beam_inferred_code_w_terminals:
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'English'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.countrycode NOT IN (SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English')
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != (SELECT AVG( countrylanguage.language ) FROM countrylanguage)
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'not English'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'are not English'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'English' ORDER BY countrylanguage.countrycode ASC
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'English'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language >= 'English'
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'English' ORDER BY countrylanguage.countrycode DESC
  - SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language LIKE '%English%'
ratsql_beam_join_columns:
- - code
  - countrycode
- - code
  - countrycode
- []
- []
- - code
  - countrycode
- - code
  - countrycode
- []
- - code
  - countrycode
- []
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
- - tests-examples/db2csv/world_1/tables/city.csv
  - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
  - tests-examples/db2csv/world_1/tables/country.csv
- - tests-examples/db2csv/world_1/tables/countrylanguage.csv
ratsql_beam_constants:
- - English
- - English
- - English
- - English
- - English
- - English
- - English
- - English
- - English
ratsql_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_columns:
- - language
- - language
- - language
- - language
- - language
- - language
- - code
  - language
- - language
- - language
ratsql_beam_ieu:
- []
- []
- - except
- []
- []
- []
- []
- []
- - except
ratsql_beam_filters:
- - '!='
- - '!='
- - '='
- - '!='
- - '!='
- - '!='
- - '='
- - '<'
  - '<='
- - '='
ratsql_beam_inferred_code:
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'terminal'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'terminal'
  - SELECT country.Code FROM country EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
  - SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language != 'terminal'
  - SELECT country.Code FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'terminal'
  - SELECT DISTINCT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'terminal'
  - SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language <= 'terminal'
  - SELECT country.Name FROM country EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English'
  - SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English'
  - SELECT country.Code FROM country EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English'
  - SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language != 'English'
  - SELECT country.Code FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English'
  - SELECT DISTINCT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English'
  - SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English'
  - SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language <= 'English'
  - SELECT country.Name FROM country EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English'
ratsql_beam_score_history:
- - -0.1045231819152832
  - -0.1046438217163086
  - -0.10840225219726562
  - -0.10399246215820312
  - -0.10175752639770508
  - -0.10238790512084961
  - -0.10491228103637695
  - -0.10148191452026367
  - -0.10429620742797852
  - -0.10481405258178711
  - -0.10470438003540039
  - -0.33959275484085083
  - -0.10974717140197754
  - -0.10496902465820312
  - -0.2905092239379883
  - -1.3863215446472168
  - -0.11061811447143555
  - -0.10324716567993164
  - -0.1038508415222168
  - -0.10488367080688477
  - -0.10576820373535156
  - -0.10791119933128357
  - -0.11163544654846191
  - -0.1055293083190918
  - -0.1050877571105957
  - -0.10240983963012695
  - -0.10247421264648438
  - -0.10745954513549805
  - -0.1047658920288086
  - -0.10406017303466797
  - -0.10388422012329102
  - -0.42168569564819336
  - -0.10524702072143555
  - -0.10541725158691406
  - -0.34144076704978943
  - -0.104888916015625
  - -0.10525989532470703
  - -0.04874584078788757
- - -0.1045231819152832
  - -0.1046438217163086
  - -0.10840225219726562
  - -0.10399246215820312
  - -0.10175752639770508
  - -0.10238790512084961
  - -0.10491228103637695
  - -0.10148191452026367
  - -0.10429620742797852
  - -0.10481405258178711
  - -0.10470438003540039
  - -1.9278481006622314
  - -0.10942268371582031
  - -0.10492873191833496
  - -0.2808985710144043
  - -1.675534725189209
  - -0.12117433547973633
  - -0.1033620834350586
  - -0.10387754440307617
  - -0.10541486740112305
  - -0.10579824447631836
  - -0.10081861913204193
  - -0.11164379119873047
  - -0.10554647445678711
  - -0.1051020622253418
  - -0.1024479866027832
  - -0.10256195068359375
  - -0.10725116729736328
  - -0.10480093955993652
  - -0.10199499130249023
  - -0.10367107391357422
  - -0.10638999938964844
  - -0.10530281066894531
  - -0.10631752014160156
  - -0.3068670928478241
  - -0.10490989685058594
  - -0.10477352142333984
  - -0.05048621818423271
- - -0.1045231819152832
  - -0.1046438217163086
  - -0.10840225219726562
  - -0.10399246215820312
  - -0.10175752639770508
  - -0.10238790512084961
  - -0.10491228103637695
  - -0.10148191452026367
  - -0.10429620742797852
  - -0.10481405258178711
  - -0.10470438003540039
  - -0.33959275484085083
  - -0.10974717140197754
  - -0.10496902465820312
  - -2.4778125286102295
  - -0.09832286834716797
  - -0.10783863067626953
  - -0.10731029510498047
  - -0.10310673713684082
  - -0.0779581069946289
  - -0.10910987854003906
  - -0.10499000549316406
  - -0.10958266258239746
  - -0.1038827896118164
  - -0.10169601440429688
  - -0.10278749465942383
  - -0.1039590835571289
  - -0.10232019424438477
  - -0.10476398468017578
  - -0.10491418838500977
  - -0.10583734512329102
  - -0.1906394064426422
  - -0.11140871047973633
  - -0.10532903671264648
  - -0.08283042907714844
  - -0.1067805290222168
  - -0.10117197036743164
  - -0.10174894332885742
  - -0.10371971130371094
  - -0.1051950454711914
  - -0.10400629043579102
  - -0.08436684310436249
  - -0.11169052124023438
  - -0.10573506355285645
  - -0.10411977767944336
  - -0.10078096389770508
  - -0.10546636581420898
  - -0.10769796371459961
  - -0.10517597198486328
  - -0.09740304946899414
  - -0.10637569427490234
  - -0.10992765426635742
  - -0.10505962371826172
  - -0.10399532318115234
  - -0.10301312804222107
  - -0.09819221496582031
  - -0.10808992385864258
  - -0.10458612442016602
  - -0.1042022705078125
  - -0.10532569140195847
- - -0.1045231819152832
  - -0.1046438217163086
  - -0.10840225219726562
  - -0.10399246215820312
  - -0.10175752639770508
  - -0.10238790512084961
  - -0.10491228103637695
  - -0.10148191452026367
  - -0.10429620742797852
  - -0.10481405258178711
  - -0.10470438003540039
  - -4.220837116241455
  - -0.11187338829040527
  - -0.10538196563720703
  - -0.7429389953613281
  - -0.4777994155883789
  - -0.09253883361816406
  - -0.10265874862670898
  - -0.1039128303527832
  - -0.10518836975097656
  - -0.10523605346679688
  - -0.09061045944690704
  - -0.11216044425964355
  - -0.10567045211791992
  - -0.10730218887329102
  - -0.10291194915771484
  - -0.10265207290649414
  - -0.10769057273864746
  - -0.10481023788452148
  - -0.1062474250793457
  - -0.10482597351074219
  - -0.10868024826049805
  - -0.10718727111816406
  - -0.10493946075439453
  - -0.24060195684432983
- - -0.1045231819152832
  - -0.1046438217163086
  - -0.10840225219726562
  - -0.10399246215820312
  - -0.10175752639770508
  - -0.10238790512084961
  - -0.10491228103637695
  - -0.10148191452026367
  - -0.10429620742797852
  - -0.10481405258178711
  - -0.10470438003540039
  - -0.33959275484085083
  - -0.10974717140197754
  - -0.10496902465820312
  - -0.2905092239379883
  - -1.3863215446472168
  - -0.11061811447143555
  - -0.10324716567993164
  - -0.1038508415222168
  - -0.10488367080688477
  - -0.10576820373535156
  - -0.10791119933128357
  - -0.11163544654846191
  - -0.1055293083190918
  - -0.1050877571105957
  - -0.10240983963012695
  - -0.10247421264648438
  - -0.10745954513549805
  - -0.1047658920288086
  - -0.10406017303466797
  - -0.10388422012329102
  - -1.5546674728393555
  - -0.10782289505004883
  - -0.10363006591796875
  - -2.6427106857299805
- - -0.1045231819152832
  - -0.1046438217163086
  - -3.485339879989624
  - -0.10356450080871582
  - -0.10127973556518555
  - -0.10277223587036133
  - -0.10461711883544922
  - -0.10136127471923828
  - -0.1043233871459961
  - -0.10482645034790039
  - -0.10473442077636719
  - -0.32874998450279236
  - -0.10976123809814453
  - -0.10500979423522949
  - -0.27825021743774414
  - -1.4317207336425781
  - -0.11093997955322266
  - -0.10326719284057617
  - -0.10383415222167969
  - -0.10491943359375
  - -0.1058502197265625
  - -0.10718666017055511
  - -0.11162781715393066
  - -0.10553884506225586
  - -0.10513877868652344
  - -0.10245752334594727
  - -0.10247945785522461
  - -0.10745859146118164
  - -0.10476803779602051
  - -0.10405158996582031
  - -0.10387897491455078
  - -0.4086627960205078
  - -0.10526466369628906
  - -0.1054387092590332
  - -0.34128203988075256
  - -0.10489511489868164
  - -0.10526180267333984
  - -0.04878432676196098
- - -0.1045231819152832
  - -0.1046438217163086
  - -0.10840225219726562
  - -0.10399246215820312
  - -0.10175752639770508
  - -0.10238790512084961
  - -0.10491228103637695
  - -0.10148191452026367
  - -0.10429620742797852
  - -0.10481405258178711
  - -0.10470438003540039
  - -0.33959275484085083
  - -0.10974717140197754
  - -0.10496902465820312
  - -0.2905092239379883
  - -1.5283699035644531
  - -0.11816835403442383
  - -0.09772729873657227
  - -0.09690999984741211
  - -0.09986400604248047
  - -0.10646533966064453
  - -0.10758733749389648
  - -0.10376358032226562
  - -0.23675169050693512
  - -0.11103296279907227
  - -0.10497283935546875
  - -0.1137089729309082
  - -0.0993185043334961
  - -0.10481119155883789
  - -0.10355234146118164
  - -0.11672019958496094
  - -0.10486054420471191
  - -0.10302066802978516
  - -0.10339641571044922
  - -0.11133003234863281
  - -0.10259675979614258
  - -0.1051182746887207
  - -0.10441303253173828
  - -0.10625600814819336
  - -0.07022397220134735
  - -0.11080336570739746
  - -0.10525202751159668
  - -0.09371519088745117
  - -0.1055912971496582
  - -0.10084199905395508
  - -0.10125541687011719
  - -0.10368108749389648
  - -0.10500431060791016
  - -0.10440874099731445
  - -0.08945923298597336
  - -0.11171746253967285
  - -0.1056814193725586
  - -0.10453510284423828
  - -0.10049152374267578
  - -0.10706138610839844
  - -0.10782504081726074
  - -0.10528254508972168
  - -0.10079574584960938
  - -0.10203933715820312
  - -0.10884952545166016
  - -0.10465240478515625
  - -0.10506820678710938
  - -0.0880398154258728
  - -0.09693717956542969
  - -0.09937572479248047
  - -0.10763025283813477
  - -0.10442447662353516
  - -0.09615373611450195
  - -0.10385370254516602
  - -0.11363458633422852
  - -0.10538196563720703
  - -0.10533714294433594
  - -0.14188191294670105
- - -0.1045231819152832
  - -0.1046438217163086
  - -0.10840225219726562
  - -0.10399246215820312
  - -0.10175752639770508
  - -0.10238790512084961
  - -0.10491228103637695
  - -0.10148191452026367
  - -0.10429620742797852
  - -0.10481405258178711
  - -0.10470438003540039
  - -0.33959275484085083
  - -0.10974717140197754
  - -0.10496902465820312
  - -0.2905092239379883
  - -4.492082595825195
  - -0.16873693466186523
  - -0.10171318054199219
  - -0.10408878326416016
  - -0.1049642562866211
  - -0.1047983169555664
  - -0.36369583010673523
  - -0.11127161979675293
  - -0.10573768615722656
  - -0.10501289367675781
  - -0.10085248947143555
  - -0.10190200805664062
  - -0.10748052597045898
  - -0.10496163368225098
  - -0.33292579650878906
  - -0.10093402862548828
  - -0.1919388771057129
  - -0.10519075393676758
  - -0.1053457260131836
  - -0.3471820652484894
  - -0.10523748397827148
  - -0.10489702224731445
  - -0.04935671389102936
- - -0.1045231819152832
  - -0.1046438217163086
  - -0.10840225219726562
  - -0.10399246215820312
  - -0.10175752639770508
  - -0.10238790512084961
  - -0.10491228103637695
  - -0.10148191452026367
  - -0.10429620742797852
  - -0.10481405258178711
  - -0.10470438003540039
  - -1.9278481006622314
  - -0.10942268371582031
  - -0.10492873191833496
  - -2.3754825592041016
  - -0.09997749328613281
  - -0.10782575607299805
  - -0.10741305351257324
  - -0.10417795181274414
  - -0.07594585418701172
  - -0.10479545593261719
  - -0.10398387908935547
  - -0.10975432395935059
  - -0.10387277603149414
  - -0.10164594650268555
  - -0.10278606414794922
  - -0.10399103164672852
  - -0.10231733322143555
  - -0.1047205924987793
  - -0.10490989685058594
  - -0.10579109191894531
  - -0.19197441637516022
  - -0.1114034652709961
  - -0.1053314208984375
  - -0.0843820571899414
  - -0.10672283172607422
  - -0.1011962890625
  - -0.10172653198242188
  - -0.10371875762939453
  - -0.10519838333129883
  - -0.10404682159423828
  - -0.0846724808216095
  - -0.11168289184570312
  - -0.10573673248291016
  - -0.1041107177734375
  - -0.10086917877197266
  - -0.10509586334228516
  - -0.10770010948181152
  - -0.10519027709960938
  - -0.09703636169433594
  - -0.10634088516235352
  - -0.10989665985107422
  - -0.10501718521118164
  - -0.10353708267211914
  - -0.10593728721141815
  - -0.09829568862915039
  - -0.10808658599853516
  - -0.10457420349121094
  - -0.10420608520507812
  - -0.10555870831012726
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'city'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Not')
  - ('Not', (True,))
  - ('cond', 'In')
  - ('In', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Code'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Le')
  - ('Le', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, True, False))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'CountryCode'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Language'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'countrylanguage'
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'country'
