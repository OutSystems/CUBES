db: tests-examples/db2csv/singer/tables/singer.sqlite
inputs:
 - tests-examples/db2csv/singer/tables/singer.csv
output: tests-examples/db2csv/singer/tables/0005_dev.csv
raw_question: What are the birth year and citizenship of singers? 
question_index: 1004 
comment: |-
  SELECT Birth_Year,
         Citizenship
  FROM singer

sql: |-
  SELECT Birth_Year,
         Citizenship
  FROM singer
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- - birth_year,
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
  - tests-examples/db2csv/singer/tables/song.csv
- - tests-examples/db2csv/singer/tables/singer.csv
  - tests-examples/db2csv/singer/tables/song.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
smbop_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_functions:
- []
- []
- []
- []
- - count
- []
- []
- - count
- []
smbop_beam_columns:
- []
- []
- - birth_year
- []
- []
- []
- []
- []
- []
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- []
- []
- - '!='
- []
- []
- []
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT singer.birth_year , singer.citizenship FROM singer
  - SELECT singer.birth_year , singer.citizenship FROM singer ORDER BY singer.birth_year , singer.citizenship ASC
  - SELECT singer.birth_year , singer.citizenship FROM singer WHERE singer.birth_year != singer.birth_year
  - SELECT singer.birth_year , singer.citizenship FROM singer GROUP BY singer.birth_year , singer.citizenship
  - SELECT COUNT( * ) FROM singer
  - SELECT singer.birth_year , singer.citizenship FROM singer , song
  - SELECT singer.birth_year , singer.citizenship FROM song , singer
  - SELECT COUNT( * ) FROM singer ORDER BY singer.birth_year , singer.citizenship ASC
  - SELECT DISTINCT citizenship FROM singer
smbop_beam_inferred_code_w_terminals:
  - SELECT singer.birth_year , singer.citizenship FROM singer
  - SELECT singer.birth_year , singer.citizenship FROM singer ORDER BY singer.birth_year , singer.citizenship ASC
  - SELECT singer.birth_year , singer.citizenship FROM singer WHERE singer.birth_year != singer.birth_year
  - SELECT singer.birth_year , singer.citizenship FROM singer GROUP BY singer.birth_year , singer.citizenship
  - SELECT COUNT( * ) FROM singer
  - SELECT singer.birth_year , singer.citizenship FROM singer , song
  - SELECT singer.birth_year , singer.citizenship FROM song , singer
  - SELECT COUNT( * ) FROM singer ORDER BY singer.birth_year , singer.citizenship ASC
  - SELECT DISTINCT citizenship FROM singer
ratsql_beam_join_columns:
- []
- - singer_id
- []
- []
- []
- []
- - singer_id
- - singer_id
- []
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
  - tests-examples/db2csv/singer/tables/song.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
  - tests-examples/db2csv/singer/tables/song.csv
- - tests-examples/db2csv/singer/tables/singer.csv
  - tests-examples/db2csv/singer/tables/song.csv
- - tests-examples/db2csv/singer/tables/singer.csv
ratsql_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT singer.Birth_Year, singer.Citizenship FROM singer
  - SELECT singer.Birth_Year, singer.Citizenship FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID
  - SELECT DISTINCT singer.Birth_Year, singer.Citizenship FROM singer
  - SELECT singer.Birth_Year, DISTINCT singer.Citizenship FROM singer
  - SELECT singer.Birth_Year, singer.Citizenship FROM singer LIMIT 1
  - SELECT singer.Singer_ID, singer.Citizenship FROM singer
  - SELECT singer.Birth_Year, singer.Singer_ID FROM singer
  - SELECT song.Singer_ID, singer.Citizenship FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID
  - SELECT song.Song_ID, singer.Citizenship FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID
  - SELECT singer.Net_Worth_Millions, singer.Citizenship FROM singer
ratsql_beam_inferred_code_w_terminals:
  - SELECT singer.Birth_Year, singer.Citizenship FROM singer
  - SELECT singer.Birth_Year, singer.Citizenship FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID
  - SELECT DISTINCT singer.Birth_Year, singer.Citizenship FROM singer
  - SELECT singer.Birth_Year, DISTINCT singer.Citizenship FROM singer
  - SELECT singer.Birth_Year, singer.Citizenship FROM singer LIMIT 1
  - SELECT singer.Singer_ID, singer.Citizenship FROM singer
  - SELECT singer.Birth_Year, singer.Singer_ID FROM singer
  - SELECT song.Singer_ID, singer.Citizenship FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID
  - SELECT song.Song_ID, singer.Citizenship FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID
  - SELECT singer.Net_Worth_Millions, singer.Citizenship FROM singer
ratsql_beam_score_history:
- - -0.10294485092163086
  - -0.10402536392211914
  - -0.11451387405395508
  - -0.10436558723449707
  - -0.1240701675415039
  - -0.101837158203125
  - -0.10288333892822266
  - -0.1010446548461914
  - -0.10404109954833984
  - -0.1049203872680664
  - -0.1051473617553711
  - -0.1087431088089943
  - -0.11255550384521484
  - -0.1052711009979248
  - -0.10125064849853516
  - -0.10372352600097656
  - -0.102142333984375
  - -0.10487794876098633
  - -0.10603046417236328
  - -0.1047830581665039
  - -0.06702390313148499
  - -0.11170434951782227
  - -0.10526418685913086
  - -0.11454105377197266
  - -0.10117530822753906
  - -0.10405635833740234
  - -0.10730290412902832
  - -0.10475754737854004
  - -0.0978846549987793
  - -0.10536623001098633
  - -0.1110219955444336
  - -0.10457515716552734
  - -0.10383749008178711
  - -0.0793035551905632
- - -0.10294485092163086
  - -0.10402536392211914
  - -0.11451387405395508
  - -0.10436558723449707
  - -0.1240701675415039
  - -0.101837158203125
  - -0.10288333892822266
  - -0.1010446548461914
  - -0.10404109954833984
  - -0.1049203872680664
  - -0.1051473617553711
  - -0.1087431088089943
  - -0.11255550384521484
  - -0.1052711009979248
  - -0.10125064849853516
  - -0.10372352600097656
  - -0.102142333984375
  - -0.10487794876098633
  - -0.10603046417236328
  - -0.1047830581665039
  - -0.06702390313148499
  - -0.11170434951782227
  - -0.10526418685913086
  - -0.11454105377197266
  - -0.10117530822753906
  - -0.10405635833740234
  - -0.10730290412902832
  - -0.10475754737854004
  - -0.0978846549987793
  - -0.10536623001098633
  - -0.1110219955444336
  - -0.10457515716552734
  - -0.10383749008178711
  - -2.573861837387085
- - -0.10294485092163086
  - -0.10402536392211914
  - -3.327782392501831
  - -0.10424447059631348
  - -0.12167215347290039
  - -0.10200786590576172
  - -0.10306787490844727
  - -0.10108757019042969
  - -0.10401201248168945
  - -0.10489845275878906
  - -0.10513019561767578
  - -0.10828525573015213
  - -0.11255478858947754
  - -0.1052713394165039
  - -0.10123920440673828
  - -0.1037297248840332
  - -0.10214710235595703
  - -0.10488462448120117
  - -0.10599613189697266
  - -0.10477828979492188
  - -0.06624768674373627
  - -0.11171746253967285
  - -0.10526108741760254
  - -0.11448383331298828
  - -0.10115861892700195
  - -0.10403966903686523
  - -0.10730457305908203
  - -0.10475683212280273
  - -0.09788036346435547
  - -0.10536432266235352
  - -0.11098718643188477
  - -0.10457372665405273
  - -0.10384082794189453
  - -0.07913494855165482
- - -0.10294485092163086
  - -0.10402536392211914
  - -0.11451387405395508
  - -0.10436558723449707
  - -0.1240701675415039
  - -0.101837158203125
  - -0.10288333892822266
  - -0.1010446548461914
  - -0.10404109954833984
  - -0.1049203872680664
  - -0.1051473617553711
  - -0.1087431088089943
  - -0.11255550384521484
  - -0.1052711009979248
  - -0.10125064849853516
  - -0.10372352600097656
  - -0.102142333984375
  - -0.10487794876098633
  - -0.10603046417236328
  - -0.1047830581665039
  - -0.06702390313148499
  - -3.468461513519287
  - -0.10468673706054688
  - -0.11665821075439453
  - -0.10134172439575195
  - -0.10355043411254883
  - -0.10731291770935059
  - -0.10484480857849121
  - -0.09786462783813477
  - -0.10506820678710938
  - -0.11138010025024414
  - -0.10459566116333008
  - -0.10384798049926758
  - -0.08005143702030182
- - -0.10294485092163086
  - -0.10402536392211914
  - -0.11451387405395508
  - -0.10436558723449707
  - -0.1240701675415039
  - -0.101837158203125
  - -0.10288333892822266
  - -0.1010446548461914
  - -0.10404109954833984
  - -0.1049203872680664
  - -0.1051473617553711
  - -0.1087431088089943
  - -0.11255550384521484
  - -0.1052711009979248
  - -0.10125064849853516
  - -0.10372352600097656
  - -0.102142333984375
  - -0.10487794876098633
  - -0.10603046417236328
  - -0.1047830581665039
  - -0.06702390313148499
  - -0.11170434951782227
  - -0.10526418685913086
  - -0.11454105377197266
  - -0.10117530822753906
  - -0.10405635833740234
  - -3.5578463077545166
  - -0.10460281372070312
  - -0.09743595123291016
  - -0.10463953018188477
  - -0.11043977737426758
  - -0.10454988479614258
  - -0.10378694534301758
  - -0.07945220917463303
- - -0.10294485092163086
  - -0.10402536392211914
  - -0.11451387405395508
  - -0.10436558723449707
  - -0.1240701675415039
  - -0.101837158203125
  - -0.10288333892822266
  - -0.1010446548461914
  - -0.10404109954833984
  - -0.1049203872680664
  - -0.1051473617553711
  - -3.936232566833496
  - -0.11363625526428223
  - -0.10506868362426758
  - -0.10051393508911133
  - -0.10374021530151367
  - -0.10208559036254883
  - -0.1052408218383789
  - -0.10652637481689453
  - -0.10477066040039062
  - -0.07685113698244095
  - -0.11179018020629883
  - -0.10525345802307129
  - -0.11419105529785156
  - -0.10118675231933594
  - -0.10378360748291016
  - -0.10729074478149414
  - -0.10475587844848633
  - -0.09788990020751953
  - -0.1053762435913086
  - -0.11103630065917969
  - -0.10459232330322266
  - -0.10383081436157227
  - -0.07874453812837601
- - -0.10294485092163086
  - -0.10402536392211914
  - -0.11451387405395508
  - -0.10436558723449707
  - -0.1240701675415039
  - -0.101837158203125
  - -0.10288333892822266
  - -0.1010446548461914
  - -0.10404109954833984
  - -0.1049203872680664
  - -0.1051473617553711
  - -0.1087431088089943
  - -0.11255550384521484
  - -0.1052711009979248
  - -0.10125064849853516
  - -0.10372352600097656
  - -0.102142333984375
  - -0.10487794876098633
  - -0.10603046417236328
  - -0.1047830581665039
  - -4.42464017868042
  - -0.11211061477661133
  - -0.10522747039794922
  - -0.11628293991088867
  - -0.10092449188232422
  - -0.10510683059692383
  - -0.10726809501647949
  - -0.1047515869140625
  - -0.0985555648803711
  - -0.10548877716064453
  - -0.11076831817626953
  - -0.10465383529663086
  - -0.10389089584350586
  - -0.07654188573360443
- - -0.10294485092163086
  - -0.10402536392211914
  - -0.11451387405395508
  - -0.10436558723449707
  - -0.1240701675415039
  - -0.101837158203125
  - -0.10288333892822266
  - -0.1010446548461914
  - -0.10404109954833984
  - -0.1049203872680664
  - -0.1051473617553711
  - -4.586974143981934
  - -0.11286735534667969
  - -0.10532951354980469
  - -0.10144186019897461
  - -0.10382699966430664
  - -0.10236454010009766
  - -0.10501861572265625
  - -0.10620737075805664
  - -0.10473203659057617
  - -0.07152096182107925
  - -0.1118781566619873
  - -0.10524916648864746
  - -0.11434793472290039
  - -0.10140609741210938
  - -0.10338926315307617
  - -0.10715746879577637
  - -0.10477900505065918
  - -0.09760332107543945
  - -0.1045842170715332
  - -0.15250492095947266
  - -0.10499858856201172
  - -0.10358047485351562
  - -0.06436276435852051
- - -0.10294485092163086
  - -0.10402536392211914
  - -0.11451387405395508
  - -0.10436558723449707
  - -0.1240701675415039
  - -0.101837158203125
  - -0.10288333892822266
  - -0.1010446548461914
  - -0.10404109954833984
  - -0.1049203872680664
  - -0.1051473617553711
  - -4.608139514923096
  - -0.11228156089782715
  - -0.1054067611694336
  - -0.10182046890258789
  - -0.10380172729492188
  - -0.10217952728271484
  - -0.1047062873840332
  - -0.1057577133178711
  - -0.1047816276550293
  - -0.09180842339992523
  - -0.1118316650390625
  - -0.10529446601867676
  - -0.1145787239074707
  - -0.1013946533203125
  - -0.10366344451904297
  - -0.1071629524230957
  - -0.10477399826049805
  - -0.09768533706665039
  - -0.1045231819152832
  - -0.157928466796875
  - -0.10500097274780273
  - -0.10357046127319336
  - -0.06380270421504974
- - -0.10294485092163086
  - -0.10402536392211914
  - -0.11451387405395508
  - -0.10436558723449707
  - -0.1240701675415039
  - -0.101837158203125
  - -0.10288333892822266
  - -0.1010446548461914
  - -0.10404109954833984
  - -0.1049203872680664
  - -0.1051473617553711
  - -4.675518035888672
  - -0.11257576942443848
  - -0.10502362251281738
  - -0.10119771957397461
  - -0.10364007949829102
  - -0.1020197868347168
  - -0.10447978973388672
  - -0.10480785369873047
  - -0.10488414764404297
  - -0.07441326975822449
  - -0.11172819137573242
  - -0.10531377792358398
  - -0.11477899551391602
  - -0.1012263298034668
  - -0.10458564758300781
  - -0.10729169845581055
  - -0.10476183891296387
  - -0.09795284271240234
  - -0.10535049438476562
  - -0.11094951629638672
  - -0.10456418991088867
  - -0.10383749008178711
  - -0.0792027935385704
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Birth_Year'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Birth_Year'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'song'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Birth_Year'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Birth_Year'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Birth_Year'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Singer_ID'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Birth_Year'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Singer_ID'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Singer_ID'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Song_ID'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Net_Worth_Millions'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
