db: tests-examples/db2csv/singer/tables/singer.sqlite
inputs:
 - tests-examples/db2csv/singer/tables/singer.csv
output: tests-examples/db2csv/singer/tables/0014_dev.csv
raw_question: For each citizenship, how many singers are from that country? 
question_index: 1013 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants: []
join_columns: []
groupby_columns:
 - citizenship
orderby_columns: []
functions:
 - count
columns: []
filters: []
ieu: []
comment: |-
  SELECT Citizenship,
         COUNT(*)
  FROM singer
  GROUP BY Citizenship

sql: |-
  SELECT Citizenship,
         COUNT(*)
  FROM singer
  GROUP BY Citizenship
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- []
- []
- []
- []
smbop_beam_orderby_columns:
- []
- []
- []
- []
- - order
- - order
- - order
- []
- []
- - order
smbop_beam_tables:
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
  - tests-examples/db2csv/singer/tables/song.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
smbop_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
smbop_beam_columns:
- []
- []
- []
- []
- - citizenship
- []
- []
- []
- []
- []
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT singer.citizenship , COUNT( * ) FROM singer GROUP BY singer.citizenship
  - SELECT COUNT( * ) , singer.citizenship FROM singer GROUP BY singer.citizenship
  - SELECT COUNT( * ) , COUNT( * ) FROM singer GROUP BY singer.citizenship
  - SELECT singer.citizenship , COUNT( * ) FROM song , singer GROUP BY singer.citizenship
  - SELECT singer.citizenship , COUNT( * ) FROM singer GROUP BY singer.citizenship ORDER BY COUNT( DISTINCT singer.citizenship ) DESC
  - SELECT singer.citizenship , COUNT( * ) FROM singer GROUP BY singer.citizenship ORDER BY COUNT( DISTINCT 1 ) DESC
  - SELECT singer.citizenship , COUNT( * ) FROM singer ORDER BY singer.citizenship DESC
  - SELECT COUNT( * ) , singer.citizenship FROM singer
  - SELECT COUNT( * ) , COUNT( * ) FROM singer
  - SELECT singer.citizenship , COUNT( * ) FROM singer ORDER BY singer.citizenship ASC
smbop_beam_inferred_code_w_terminals:
  - SELECT singer.citizenship , COUNT( * ) FROM singer GROUP BY singer.citizenship
  - SELECT COUNT( * ) , singer.citizenship FROM singer GROUP BY singer.citizenship
  - SELECT COUNT( * ) , COUNT( * ) FROM singer GROUP BY singer.citizenship
  - SELECT singer.citizenship , COUNT( * ) FROM song , singer GROUP BY singer.citizenship
  - SELECT singer.citizenship , COUNT( * ) FROM singer GROUP BY singer.citizenship ORDER BY COUNT( DISTINCT singer.citizenship ) DESC
  - SELECT singer.citizenship , COUNT( * ) FROM singer GROUP BY singer.citizenship ORDER BY COUNT( DISTINCT 1 ) DESC
  - SELECT singer.citizenship , COUNT( * ) FROM singer ORDER BY singer.citizenship DESC
  - SELECT COUNT( * ) , singer.citizenship FROM singer
  - SELECT COUNT( * ) , COUNT( * ) FROM singer
  - SELECT singer.citizenship , COUNT( * ) FROM singer ORDER BY singer.citizenship ASC
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - True
  - True
  - True
  - False
  - False
  - True
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- []
- - singer_id
- []
- []
- []
- []
ratsql_beam_groupby_columns:
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - singer_id
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
  - tests-examples/db2csv/singer/tables/song.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
ratsql_beam_constants:
- []
- []
- []
- []
- []
- []
- - '1'
- []
- []
- []
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- []
- []
- []
- []
- []
- []
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT Count(*), singer.Citizenship FROM singer GROUP BY singer.Citizenship
  - SELECT Count(*), singer.Citizenship FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Citizenship
  - SELECT Count(DISTINCT *), singer.Citizenship FROM singer GROUP BY singer.Citizenship
  - SELECT Count(*), DISTINCT singer.Citizenship FROM singer GROUP BY singer.Citizenship
  - SELECT Count(*), singer.Citizenship FROM singer GROUP BY DISTINCT singer.Citizenship
  - SELECT DISTINCT Count(*), singer.Citizenship FROM singer GROUP BY singer.Citizenship
  - SELECT Count(*), singer.Citizenship FROM singer GROUP BY singer.Citizenship LIMIT 1
  - SELECT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship
  - SELECT Count(*), singer.Citizenship FROM singer GROUP BY singer.Singer_ID
  - SELECT Count(*), singer.Citizenship FROM singer GROUP BY *
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(*), singer.Citizenship FROM singer GROUP BY singer.Citizenship
  - SELECT Count(*), singer.Citizenship FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Citizenship
  - SELECT Count(DISTINCT *), singer.Citizenship FROM singer GROUP BY singer.Citizenship
  - SELECT Count(*), DISTINCT singer.Citizenship FROM singer GROUP BY singer.Citizenship
  - SELECT Count(*), singer.Citizenship FROM singer GROUP BY DISTINCT singer.Citizenship
  - SELECT DISTINCT Count(*), singer.Citizenship FROM singer GROUP BY singer.Citizenship
  - SELECT Count(*), singer.Citizenship FROM singer GROUP BY singer.Citizenship LIMIT 1
  - SELECT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship
  - SELECT Count(*), singer.Citizenship FROM singer GROUP BY singer.Singer_ID
  - SELECT Count(*), singer.Citizenship FROM singer GROUP BY *
ratsql_beam_has_limit:
  - False
  - False
  - False
  - True
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10579729080200195
  - -0.10411405563354492
  - -0.10878324508666992
  - -0.10406494140625
  - -0.12355661392211914
  - -0.10254859924316406
  - -0.18026304244995117
  - -0.10124635696411133
  - -0.10703849792480469
  - -0.10555410385131836
  - -0.10513591766357422
  - -0.07669955492019653
  - -0.1140284538269043
  - -0.10519099235534668
  - -0.0987234115600586
  - -0.10623311996459961
  - -0.10315752029418945
  - -0.10678291320800781
  - -0.10417461395263672
  - -0.10622739791870117
  - -0.07672859728336334
  - -0.11350297927856445
  - -0.10610795021057129
  - -0.09575939178466797
  - -0.10240983963012695
  - -0.10121822357177734
  - -0.10492658615112305
  - -0.1046605110168457
  - -0.10295355319976807
  - -0.11211609840393066
  - -0.10576963424682617
  - -0.10734796524047852
  - -0.1074669361114502
  - -0.10514044761657715
  - -0.09830570220947266
  - -0.10492277145385742
  - -0.11038541793823242
  - -0.10650253295898438
  - -0.10707902908325195
  - -0.11080913990736008
- - -0.10579729080200195
  - -0.10411405563354492
  - -0.10878324508666992
  - -0.10406494140625
  - -0.12355661392211914
  - -0.10254859924316406
  - -0.18026304244995117
  - -0.10124635696411133
  - -0.10703849792480469
  - -0.10555410385131836
  - -0.10513591766357422
  - -0.07669955492019653
  - -0.1140284538269043
  - -0.10519099235534668
  - -0.0987234115600586
  - -0.10623311996459961
  - -0.10315752029418945
  - -0.10678291320800781
  - -0.10417461395263672
  - -0.10622739791870117
  - -0.07672859728336334
  - -0.11350297927856445
  - -0.10610795021057129
  - -0.09575939178466797
  - -0.10240983963012695
  - -0.10121822357177734
  - -0.10492658615112305
  - -0.1046605110168457
  - -0.10295355319976807
  - -0.11211609840393066
  - -0.10576963424682617
  - -0.10734796524047852
  - -0.1074669361114502
  - -0.10514044761657715
  - -0.09830570220947266
  - -0.10492277145385742
  - -0.11038541793823242
  - -0.10650253295898438
  - -0.10707902908325195
  - -2.2548394203186035
- - -0.10579729080200195
  - -0.10411405563354492
  - -0.10878324508666992
  - -0.10406494140625
  - -0.12355661392211914
  - -0.10254859924316406
  - -0.18026304244995117
  - -0.10124635696411133
  - -0.10703849792480469
  - -0.10555410385131836
  - -0.10513591766357422
  - -0.07669955492019653
  - -3.4221444129943848
  - -0.10354232788085938
  - -0.09965133666992188
  - -0.10567378997802734
  - -0.1031489372253418
  - -0.10753154754638672
  - -0.10409212112426758
  - -0.10609149932861328
  - -0.08068879693746567
  - -0.11350512504577637
  - -0.10613059997558594
  - -0.09777450561523438
  - -0.10247611999511719
  - -0.10119342803955078
  - -0.10494852066040039
  - -0.10468149185180664
  - -0.10303119570016861
  - -0.1121666431427002
  - -0.10576343536376953
  - -0.10736751556396484
  - -0.1074669361114502
  - -0.10514307022094727
  - -0.09834671020507812
  - -0.10492753982543945
  - -0.11034011840820312
  - -0.10642719268798828
  - -0.10696983337402344
  - -0.11132332682609558
- - -0.10579729080200195
  - -0.10411405563354492
  - -0.10878324508666992
  - -0.10406494140625
  - -0.12355661392211914
  - -0.10254859924316406
  - -0.18026304244995117
  - -0.10124635696411133
  - -0.10703849792480469
  - -0.10555410385131836
  - -0.10513591766357422
  - -0.07669955492019653
  - -0.1140284538269043
  - -0.10519099235534668
  - -0.0987234115600586
  - -0.10623311996459961
  - -0.10315752029418945
  - -0.10678291320800781
  - -0.10417461395263672
  - -0.10622739791870117
  - -0.07672859728336334
  - -3.4337635040283203
  - -0.10595178604125977
  - -0.09828758239746094
  - -0.10272216796875
  - -0.10092496871948242
  - -0.10505962371826172
  - -0.1048593521118164
  - -0.10153960436582565
  - -0.11219358444213867
  - -0.10577034950256348
  - -0.10762262344360352
  - -0.10746121406555176
  - -0.10514235496520996
  - -0.09833621978759766
  - -0.10499811172485352
  - -0.11035680770874023
  - -0.10651445388793945
  - -0.10706424713134766
  - -0.11069687455892563
- - -0.10579729080200195
  - -0.10411405563354492
  - -0.10878324508666992
  - -0.10406494140625
  - -0.12355661392211914
  - -0.10254859924316406
  - -0.18026304244995117
  - -0.10124635696411133
  - -0.10703849792480469
  - -0.10555410385131836
  - -0.10513591766357422
  - -0.07669955492019653
  - -0.1140284538269043
  - -0.10519099235534668
  - -0.0987234115600586
  - -0.10623311996459961
  - -0.10315752029418945
  - -0.10678291320800781
  - -0.10417461395263672
  - -0.10622739791870117
  - -0.07672859728336334
  - -0.11350297927856445
  - -0.10610795021057129
  - -0.09575939178466797
  - -0.10240983963012695
  - -0.10121822357177734
  - -0.10492658615112305
  - -0.1046605110168457
  - -0.10295355319976807
  - -3.440962314605713
  - -0.10579895973205566
  - -0.10692596435546875
  - -0.1073920726776123
  - -0.10515427589416504
  - -0.0985875129699707
  - -0.10502433776855469
  - -0.11034297943115234
  - -0.10663747787475586
  - -0.10715103149414062
  - -0.10712786018848419
- - -0.10579729080200195
  - -0.10411405563354492
  - -3.5403800010681152
  - -0.10386371612548828
  - -0.12935638427734375
  - -0.10308504104614258
  - -0.1726226806640625
  - -0.10129451751708984
  - -0.10678863525390625
  - -0.10524129867553711
  - -0.10504007339477539
  - -0.07745026797056198
  - -0.113739013671875
  - -0.10483264923095703
  - -0.0982365608215332
  - -0.10582876205444336
  - -0.10324907302856445
  - -0.10694551467895508
  - -0.10410881042480469
  - -0.10618019104003906
  - -0.08026356995105743
  - -0.11355185508728027
  - -0.10609292984008789
  - -0.09571170806884766
  - -0.10241556167602539
  - -0.10120820999145508
  - -0.10493803024291992
  - -0.10465240478515625
  - -0.10318281501531601
  - -0.11211371421813965
  - -0.10577034950256348
  - -0.10737133026123047
  - -0.1074669361114502
  - -0.10514068603515625
  - -0.09828329086303711
  - -0.10490608215332031
  - -0.11035966873168945
  - -0.10650348663330078
  - -0.10708761215209961
  - -0.11073433607816696
- - -0.10579729080200195
  - -0.10411405563354492
  - -0.10878324508666992
  - -0.10406494140625
  - -0.12355661392211914
  - -0.10254859924316406
  - -0.18026304244995117
  - -0.10124635696411133
  - -0.10703849792480469
  - -0.10555410385131836
  - -0.10513591766357422
  - -0.07669955492019653
  - -0.1140284538269043
  - -0.10519099235534668
  - -0.0987234115600586
  - -0.10623311996459961
  - -0.10315752029418945
  - -0.10678291320800781
  - -0.10417461395263672
  - -0.10622739791870117
  - -0.07672859728336334
  - -0.11350297927856445
  - -0.10610795021057129
  - -0.09575939178466797
  - -0.10240983963012695
  - -0.10121822357177734
  - -0.10492658615112305
  - -0.1046605110168457
  - -0.10295355319976807
  - -0.11211609840393066
  - -0.10576963424682617
  - -0.10734796524047852
  - -3.547637462615967
  - -0.10517334938049316
  - -0.09814262390136719
  - -0.10414934158325195
  - -0.11007261276245117
  - -0.10671043395996094
  - -0.10732173919677734
  - -0.11081340909004211
- - -0.10579729080200195
  - -0.10411405563354492
  - -0.10878324508666992
  - -0.10406494140625
  - -0.12355661392211914
  - -0.10254859924316406
  - -3.612575054168701
  - -0.10222196578979492
  - -0.10534286499023438
  - -0.1054525375366211
  - -0.10655069351196289
  - -0.09805171936750412
  - -0.1133732795715332
  - -0.10579562187194824
  - -0.10303783416748047
  - -0.11293935775756836
  - -0.10234498977661133
  - -0.10609769821166992
  - -0.10592508316040039
  - -0.10585975646972656
  - -0.0762513130903244
  - -0.11435294151306152
  - -0.10528349876403809
  - -0.1218867301940918
  - -0.10797357559204102
  - -0.10274887084960938
  - -0.1045999526977539
  - -0.10489559173583984
  - -0.09768052399158478
  - -0.11192083358764648
  - -0.10564827919006348
  - -0.10919618606567383
  - -0.10744476318359375
  - -0.10515284538269043
  - -0.09809255599975586
  - -0.10508394241333008
  - -0.11015081405639648
  - -0.10657215118408203
  - -0.10699796676635742
  - -0.11061929166316986
- - -0.10579729080200195
  - -0.10411405563354492
  - -0.10878324508666992
  - -0.10406494140625
  - -0.12355661392211914
  - -0.10254859924316406
  - -0.18026304244995117
  - -0.10124635696411133
  - -0.10703849792480469
  - -0.10555410385131836
  - -0.10513591766357422
  - -0.07669955492019653
  - -0.1140284538269043
  - -0.10519099235534668
  - -0.0987234115600586
  - -0.10623311996459961
  - -0.10315752029418945
  - -0.10678291320800781
  - -0.10417461395263672
  - -0.10622739791870117
  - -0.07672859728336334
  - -0.11350297927856445
  - -0.10610795021057129
  - -0.09575939178466797
  - -0.10240983963012695
  - -0.10121822357177734
  - -0.10492658615112305
  - -0.1046605110168457
  - -4.366260051727295
  - -0.11210274696350098
  - -0.10536956787109375
  - -0.10669612884521484
  - -0.10740923881530762
  - -0.10500216484069824
  - -0.09830522537231445
  - -0.10539388656616211
  - -0.11079883575439453
  - -0.10731220245361328
  - -0.10836648941040039
  - -0.11040399968624115
- - -0.10579729080200195
  - -0.10411405563354492
  - -0.10878324508666992
  - -0.10406494140625
  - -0.12355661392211914
  - -0.10254859924316406
  - -0.18026304244995117
  - -0.10124635696411133
  - -0.10703849792480469
  - -0.10555410385131836
  - -0.10513591766357422
  - -0.07669955492019653
  - -0.1140284538269043
  - -0.10519099235534668
  - -0.0987234115600586
  - -0.10623311996459961
  - -0.10315752029418945
  - -0.10678291320800781
  - -0.10417461395263672
  - -0.10622739791870117
  - -0.07672859728336334
  - -0.11350297927856445
  - -0.10610795021057129
  - -0.09575939178466797
  - -0.10240983963012695
  - -0.10121822357177734
  - -0.10492658615112305
  - -0.1046605110168457
  - -4.490804195404053
  - -0.11037468910217285
  - -0.10557246208190918
  - -0.10599708557128906
  - -0.10773062705993652
  - -0.1051177978515625
  - -0.10004997253417969
  - -0.10464096069335938
  - -0.11013269424438477
  - -0.10644054412841797
  - -0.10695838928222656
  - -0.11240577697753906
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'song'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'True'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'True'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Singer_ID'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
