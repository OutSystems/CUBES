db: tests-examples/db2csv/singer/tables/singer.sqlite
inputs:
 - tests-examples/db2csv/singer/tables/singer.csv
output: tests-examples/db2csv/singer/tables/0008_dev.csv
raw_question: What are the names of the singers who are not French citizens? 
question_index: 1007 
constants:
 - France
columns:
 - citizenship
filters:
 - '!='
comment: |-
  SELECT Name
  FROM singer
  WHERE Citizenship != "France"

sql: |-
  SELECT Name
  FROM singer
  WHERE Citizenship != "France"
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
smbop_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_functions:
- []
- []
- []
- - count
- []
- []
- []
- []
- - count
- []
smbop_beam_columns:
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - citizenship
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '!='
- - '='
  - '!='
- - '='
- - '!='
- - '!='
- - '>='
  - '>'
- - '<'
- - '='
- - '!='
- - 'like'
smbop_beam_inferred_code:
  - SELECT singer.name FROM singer WHERE singer.citizenship != 'French'
  - SELECT singer.name FROM singer WHERE singer.citizenship != (SELECT singer.name FROM singer WHERE singer.citizenship = 'French')
  - SELECT singer.name FROM singer WHERE singer.citizenship NOT IN (SELECT singer.name FROM singer WHERE singer.citizenship = 'French')
  - SELECT COUNT( DISTINCT singer.citizenship ) FROM singer WHERE singer.citizenship != 'French'
  - SELECT singer.name FROM singer WHERE singer.citizenship != 'French citizens'
  - SELECT singer.name FROM singer WHERE singer.citizenship >= 'French'
  - SELECT singer.name FROM singer WHERE singer.citizenship<'French'
  - SELECT singer.name FROM singer WHERE singer.citizenship = 'French'
  - SELECT COUNT( * ) FROM singer WHERE singer.citizenship != 'French'
  - SELECT singer.name FROM singer WHERE singer.citizenship LIKE '%French%'
smbop_beam_inferred_code_w_terminals:
  - SELECT singer.name FROM singer WHERE singer.citizenship != 'French'
  - SELECT singer.name FROM singer WHERE singer.citizenship != (SELECT singer.name FROM singer WHERE singer.citizenship = 'French')
  - SELECT singer.name FROM singer WHERE singer.citizenship NOT IN (SELECT singer.name FROM singer WHERE singer.citizenship = 'French')
  - SELECT COUNT( DISTINCT singer.citizenship ) FROM singer WHERE singer.citizenship != 'French'
  - SELECT singer.name FROM singer WHERE singer.citizenship != 'French citizens'
  - SELECT singer.name FROM singer WHERE singer.citizenship >= 'French'
  - SELECT singer.name FROM singer WHERE singer.citizenship<'French'
  - SELECT singer.name FROM singer WHERE singer.citizenship = 'French'
  - SELECT COUNT( * ) FROM singer WHERE singer.citizenship != 'French'
  - SELECT singer.name FROM singer WHERE singer.citizenship LIKE '%French%'
ratsql_beam_join_columns:
- []
- - singer_id
- []
- []
- []
- []
- - singer_id
- []
- - singer_id
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
  - tests-examples/db2csv/singer/tables/song.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
  - tests-examples/db2csv/singer/tables/song.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
  - tests-examples/db2csv/singer/tables/song.csv
ratsql_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_columns:
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - citizenship
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '!='
- - '!='
- - '!='
- - '='
- - '!='
- - '!='
- - '!='
- - '!='
- - '!='
ratsql_beam_inferred_code:
  - SELECT singer.Name FROM singer WHERE singer.Citizenship != 'terminal'
  - SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE singer.Citizenship != 'terminal'
  - SELECT DISTINCT singer.Name FROM singer WHERE singer.Citizenship != 'terminal'
  - SELECT singer.Name FROM singer WHERE singer.Citizenship = 'terminal'
  - SELECT singer.Name FROM singer WHERE DISTINCT singer.Citizenship != 'terminal'
  - SELECT singer.Name FROM singer WHERE singer.Citizenship != 'terminal' LIMIT 1
  - SELECT singer.Singer_ID FROM singer WHERE singer.Citizenship != 'terminal'
  - SELECT song.Singer_ID FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE singer.Citizenship != 'terminal'
  - SELECT * FROM singer WHERE singer.Citizenship != 'terminal'
  - SELECT song.Song_ID FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE singer.Citizenship != 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - 
  - 
  - 
  - 
  - 
  - 
  - 
  - 
  - 
  - 
ratsql_beam_score_history:
- - -0.10227489471435547
  - -0.1048283576965332
  - -0.11717939376831055
  - -0.10430455207824707
  - -0.10120487213134766
  - -0.1025552749633789
  - -0.10564899444580078
  - -0.10155153274536133
  - -0.10460948944091797
  - -0.10533618927001953
  - -0.10454940795898438
  - -0.09454338997602463
  - -0.11155200004577637
  - -0.10530257225036621
  - -0.09073972702026367
  - -0.13402366638183594
  - -0.08752727508544922
  - -0.10130023956298828
  - -0.1041259765625
  - -0.10426664352416992
  - -0.1045236587524414
  - -0.04615166038274765
  - -0.1119992733001709
  - -0.10551762580871582
  - -0.10554313659667969
  - -0.101318359375
  - -0.10218000411987305
  - -0.10794305801391602
  - -0.10465264320373535
  - -0.09857654571533203
  - -0.10419321060180664
  - -0.1086130142211914
  - -0.10490703582763672
  - -0.1033926010131836
  - -0.07730463147163391
- - -0.10227489471435547
  - -0.1048283576965332
  - -0.11717939376831055
  - -0.10430455207824707
  - -0.10120487213134766
  - -0.1025552749633789
  - -0.10564899444580078
  - -0.10155153274536133
  - -0.10460948944091797
  - -0.10533618927001953
  - -0.10454940795898438
  - -0.09454338997602463
  - -0.11155200004577637
  - -0.10530257225036621
  - -0.09073972702026367
  - -0.13402366638183594
  - -0.08752727508544922
  - -0.10130023956298828
  - -0.1041259765625
  - -0.10426664352416992
  - -0.1045236587524414
  - -0.04615166038274765
  - -0.1119992733001709
  - -0.10551762580871582
  - -0.10554313659667969
  - -0.101318359375
  - -0.10218000411987305
  - -0.10794305801391602
  - -0.10465264320373535
  - -0.09857654571533203
  - -0.10419321060180664
  - -0.1086130142211914
  - -0.10490703582763672
  - -0.1033926010131836
  - -2.598405122756958
- - -0.10227489471435547
  - -0.1048283576965332
  - -3.250607490539551
  - -0.10442090034484863
  - -0.10044050216674805
  - -0.10268402099609375
  - -0.10523700714111328
  - -0.10149860382080078
  - -0.10455131530761719
  - -0.10530996322631836
  - -0.10458087921142578
  - -0.09249898046255112
  - -0.11142468452453613
  - -0.1052546501159668
  - -0.09232234954833984
  - -0.12876224517822266
  - -0.08850383758544922
  - -0.10132217407226562
  - -0.10410642623901367
  - -0.1042475700378418
  - -0.10453987121582031
  - -0.04598977789282799
  - -0.1119842529296875
  - -0.10551834106445312
  - -0.10554170608520508
  - -0.1013174057006836
  - -0.10217523574829102
  - -0.10793805122375488
  - -0.10465168952941895
  - -0.0985870361328125
  - -0.10419416427612305
  - -0.10860490798950195
  - -0.10490608215332031
  - -0.10339021682739258
  - -0.07722970843315125
- - -0.10227489471435547
  - -0.1048283576965332
  - -0.11717939376831055
  - -0.10430455207824707
  - -0.10120487213134766
  - -0.1025552749633789
  - -0.10564899444580078
  - -0.10155153274536133
  - -0.10460948944091797
  - -0.10533618927001953
  - -0.10454940795898438
  - -0.09454338997602463
  - -0.11155200004577637
  - -0.10530257225036621
  - -0.09073972702026367
  - -3.3914337158203125
  - -0.10207509994506836
  - -0.10095024108886719
  - -0.10395431518554688
  - -0.10477447509765625
  - -0.10477542877197266
  - -0.049122828990221024
  - -0.11165332794189453
  - -0.1055607795715332
  - -0.10411310195922852
  - -0.10145807266235352
  - -0.10200834274291992
  - -0.10789036750793457
  - -0.10471200942993164
  - -0.13789844512939453
  - -0.10347604751586914
  - -0.10775232315063477
  - -0.10495948791503906
  - -0.10331583023071289
  - -0.07930696755647659
- - -0.10227489471435547
  - -0.1048283576965332
  - -0.11717939376831055
  - -0.10430455207824707
  - -0.10120487213134766
  - -0.1025552749633789
  - -0.10564899444580078
  - -0.10155153274536133
  - -0.10460948944091797
  - -0.10533618927001953
  - -0.10454940795898438
  - -0.09454338997602463
  - -0.11155200004577637
  - -0.10530257225036621
  - -0.09073972702026367
  - -0.13402366638183594
  - -0.08752727508544922
  - -0.10130023956298828
  - -0.1041259765625
  - -0.10426664352416992
  - -0.1045236587524414
  - -0.04615166038274765
  - -3.4423720836639404
  - -0.10563135147094727
  - -0.10425710678100586
  - -0.10152006149291992
  - -0.10253477096557617
  - -0.10791134834289551
  - -0.10461235046386719
  - -0.09819269180297852
  - -0.10396671295166016
  - -0.1086421012878418
  - -0.10492277145385742
  - -0.10340213775634766
  - -0.0768711194396019
- - -0.10227489471435547
  - -0.1048283576965332
  - -0.11717939376831055
  - -0.10430455207824707
  - -0.10120487213134766
  - -0.1025552749633789
  - -0.10564899444580078
  - -0.10155153274536133
  - -0.10460948944091797
  - -0.10533618927001953
  - -0.10454940795898438
  - -0.09454338997602463
  - -0.11155200004577637
  - -0.10530257225036621
  - -0.09073972702026367
  - -0.13402366638183594
  - -0.08752727508544922
  - -0.10130023956298828
  - -0.1041259765625
  - -0.10426664352416992
  - -0.1045236587524414
  - -0.04615166038274765
  - -0.1119992733001709
  - -0.10551762580871582
  - -0.10554313659667969
  - -0.101318359375
  - -0.10218000411987305
  - -3.548938751220703
  - -0.10441088676452637
  - -0.09846973419189453
  - -0.10396528244018555
  - -0.10800838470458984
  - -0.10486364364624023
  - -0.10337495803833008
  - -0.07638804614543915
- - -0.10227489471435547
  - -0.1048283576965332
  - -0.11717939376831055
  - -0.10430455207824707
  - -0.10120487213134766
  - -0.1025552749633789
  - -0.10564899444580078
  - -0.10155153274536133
  - -0.10460948944091797
  - -0.10533618927001953
  - -0.10454940795898438
  - -4.217383861541748
  - -0.11310577392578125
  - -0.10514640808105469
  - -0.09923553466796875
  - -0.11640644073486328
  - -0.0854177474975586
  - -0.10151863098144531
  - -0.104034423828125
  - -0.10416889190673828
  - -0.10443305969238281
  - -0.04213979095220566
  - -0.11167001724243164
  - -0.10554647445678711
  - -0.10598278045654297
  - -0.10143709182739258
  - -0.10217475891113281
  - -0.10803961753845215
  - -0.10472488403320312
  - -0.09857845306396484
  - -0.1041421890258789
  - -0.10973596572875977
  - -0.10497570037841797
  - -0.10345125198364258
  - -0.08374728262424469
- - -0.10227489471435547
  - -0.1048283576965332
  - -0.11717939376831055
  - -0.10430455207824707
  - -0.10120487213134766
  - -0.1025552749633789
  - -0.10564899444580078
  - -0.10155153274536133
  - -0.10460948944091797
  - -0.10533618927001953
  - -0.10454940795898438
  - -4.618985652923584
  - -0.1120443344116211
  - -0.10520339012145996
  - -0.09931135177612305
  - -0.18306732177734375
  - -0.07814788818359375
  - -0.10117053985595703
  - -0.10403108596801758
  - -0.10409688949584961
  - -0.10442543029785156
  - -0.04364443197846413
  - -0.11169004440307617
  - -0.10552453994750977
  - -0.1055903434753418
  - -0.1013479232788086
  - -0.10236644744873047
  - -0.10793352127075195
  - -0.10468411445617676
  - -0.09879302978515625
  - -0.10419178009033203
  - -0.1080317497253418
  - -0.10485029220581055
  - -0.10336017608642578
  - -0.07551848888397217
- - -0.10227489471435547
  - -0.1048283576965332
  - -0.11717939376831055
  - -0.10430455207824707
  - -0.10120487213134766
  - -0.1025552749633789
  - -0.10564899444580078
  - -0.10155153274536133
  - -0.10460948944091797
  - -0.10533618927001953
  - -0.10454940795898438
  - -4.702829837799072
  - -0.11204028129577637
  - -0.10509562492370605
  - -0.09215545654296875
  - -0.13227272033691406
  - -0.0888204574584961
  - -0.10127019882202148
  - -0.1041254997253418
  - -0.10463523864746094
  - -0.10445594787597656
  - -0.042897019535303116
  - -0.11213397979736328
  - -0.10552811622619629
  - -0.1060342788696289
  - -0.10138082504272461
  - -0.10209274291992188
  - -0.10794210433959961
  - -0.10465002059936523
  - -0.0985875129699707
  - -0.10419034957885742
  - -0.1082911491394043
  - -0.10489034652709961
  - -0.10335683822631836
  - -0.07702542841434479
- - -0.10227489471435547
  - -0.1048283576965332
  - -0.11717939376831055
  - -0.10430455207824707
  - -0.10120487213134766
  - -0.1025552749633789
  - -0.10564899444580078
  - -0.10155153274536133
  - -0.10460948944091797
  - -0.10533618927001953
  - -0.10454940795898438
  - -4.7351765632629395
  - -0.11101388931274414
  - -0.10515260696411133
  - -0.08420133590698242
  - -0.14893674850463867
  - -0.08651208877563477
  - -0.10134077072143555
  - -0.1041102409362793
  - -0.10428810119628906
  - -0.1045527458190918
  - -0.046316590160131454
  - -0.11197471618652344
  - -0.10552978515625
  - -0.10570621490478516
  - -0.10136890411376953
  - -0.1022343635559082
  - -0.10793375968933105
  - -0.10466337203979492
  - -0.09908580780029297
  - -0.10490942001342773
  - -0.10855770111083984
  - -0.10480308532714844
  - -0.10336780548095703
  - -0.07274067401885986
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'song'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Singer_ID'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Singer_ID'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Song_ID'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Ne')
  - ('Ne', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
