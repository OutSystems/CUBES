db: tests-examples/db2csv/singer/tables/singer.sqlite
inputs:
 - tests-examples/db2csv/singer/tables/singer.csv
output: tests-examples/db2csv/singer/tables/0013_dev.csv
raw_question: Show different citizenship of singers and the number of singers of each citizenship. 
question_index: 1012 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants: []
join_columns: []
groupby_columns:
 - citizenship
functions:
 - count
columns: []
filters: []
ieu: []
comment: |-
  SELECT Citizenship,
         COUNT(*)
  FROM singer
  GROUP BY Citizenship

sql: |-
  SELECT Citizenship,
         COUNT(*)
  FROM singer
  GROUP BY Citizenship
smbop_beam_join_columns:
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- - citizenship
- - citizenship
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
smbop_beam_constants:
- []
- []
- []
- []
- []
smbop_beam_functions:
- - count
- - count
- - count
- - count
- - count
smbop_beam_columns:
- []
- - 2
- []
- []
- []
smbop_beam_ieu:
- []
- []
- []
- []
- []
smbop_beam_filters:
- []
- []
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT singer.citizenship , COUNT( * ) FROM singer GROUP BY singer.citizenship
  - SELECT singer.citizenship , COUNT( * ) FROM singer GROUP BY singer.citizenship ORDER BY COUNT( DISTINCT 2 ) DESC
  - SELECT singer.citizenship , COUNT( * ) FROM singer ORDER BY singer.citizenship DESC
  - SELECT singer.citizenship , COUNT( * ) FROM singer
  - SELECT singer.citizenship , COUNT( * ) FROM singer ORDER BY singer.citizenship ASC
smbop_beam_inferred_code_w_terminals:
  - SELECT singer.citizenship , COUNT( * ) FROM singer GROUP BY singer.citizenship
  - SELECT singer.citizenship , COUNT( * ) FROM singer GROUP BY singer.citizenship ORDER BY COUNT( DISTINCT 2 ) DESC
  - SELECT singer.citizenship , COUNT( * ) FROM singer ORDER BY singer.citizenship DESC
  - SELECT singer.citizenship , COUNT( * ) FROM singer
  - SELECT singer.citizenship , COUNT( * ) FROM singer ORDER BY singer.citizenship ASC
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - True
  - True
  - False
  - True
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- []
- - singer_id
- []
- []
- []
- []
- []
- - singer_id
ratsql_beam_groupby_columns:
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - citizenship
- - citizenship
ratsql_beam_tables:
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/song.csv
  - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/singer.csv
- - tests-examples/db2csv/singer/tables/song.csv
  - tests-examples/db2csv/singer/tables/singer.csv
ratsql_beam_constants:
- []
- []
- []
- []
- []
- - '1'
- []
- []
- []
- []
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship
  - SELECT singer.Citizenship, Count(*) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Citizenship
  - SELECT DISTINCT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship
  - SELECT singer.Citizenship, Count(DISTINCT *) FROM singer GROUP BY singer.Citizenship
  - SELECT singer.Citizenship, Count(*) FROM singer GROUP BY DISTINCT singer.Citizenship
  - SELECT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship LIMIT 1
  - SELECT Count(*), singer.Citizenship FROM singer GROUP BY singer.Citizenship
  - SELECT *, Count(*) FROM singer GROUP BY singer.Citizenship
  - SELECT singer.Singer_ID, Count(*) FROM singer GROUP BY singer.Citizenship
  - SELECT song.Singer_ID, Count(*) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Citizenship
ratsql_beam_inferred_code_w_terminals:
  - SELECT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship
  - SELECT singer.Citizenship, Count(*) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Citizenship
  - SELECT DISTINCT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship
  - SELECT singer.Citizenship, Count(DISTINCT *) FROM singer GROUP BY singer.Citizenship
  - SELECT singer.Citizenship, Count(*) FROM singer GROUP BY DISTINCT singer.Citizenship
  - SELECT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship LIMIT 1
  - SELECT Count(*), singer.Citizenship FROM singer GROUP BY singer.Citizenship
  - SELECT *, Count(*) FROM singer GROUP BY singer.Citizenship
  - SELECT singer.Singer_ID, Count(*) FROM singer GROUP BY singer.Citizenship
  - SELECT song.Singer_ID, Count(*) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Citizenship
ratsql_beam_has_limit:
  - False
  - False
  - False
  - True
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10262823104858398
  - -0.10648584365844727
  - -0.10729074478149414
  - -0.1043083667755127
  - -0.12243890762329102
  - -0.10272979736328125
  - -0.1187748908996582
  - -0.10213947296142578
  - -0.10503911972045898
  - -0.10573387145996094
  - -0.10514974594116211
  - -0.1682002693414688
  - -0.11323022842407227
  - -0.10564112663269043
  - -0.100860595703125
  - -0.11764764785766602
  - -0.10202169418334961
  - -0.10609817504882812
  - -0.10556650161743164
  - -0.10497236251831055
  - -0.11846499890089035
  - -0.11298894882202148
  - -0.10543394088745117
  - -0.11619234085083008
  - -0.10610389709472656
  - -0.10130643844604492
  - -0.10498666763305664
  - -0.10500574111938477
  - -0.10903646796941757
  - -0.11106014251708984
  - -0.10565400123596191
  - -0.10439395904541016
  - -0.10761380195617676
  - -0.10485315322875977
  - -0.09826231002807617
  - -0.10616636276245117
  - -0.10956239700317383
  - -0.10550928115844727
  - -0.10488748550415039
  - -0.08246716111898422
- - -0.10262823104858398
  - -0.10648584365844727
  - -0.10729074478149414
  - -0.1043083667755127
  - -0.12243890762329102
  - -0.10272979736328125
  - -0.1187748908996582
  - -0.10213947296142578
  - -0.10503911972045898
  - -0.10573387145996094
  - -0.10514974594116211
  - -0.1682002693414688
  - -0.11323022842407227
  - -0.10564112663269043
  - -0.100860595703125
  - -0.11764764785766602
  - -0.10202169418334961
  - -0.10609817504882812
  - -0.10556650161743164
  - -0.10497236251831055
  - -0.11846499890089035
  - -0.11298894882202148
  - -0.10543394088745117
  - -0.11619234085083008
  - -0.10610389709472656
  - -0.10130643844604492
  - -0.10498666763305664
  - -0.10500574111938477
  - -0.10903646796941757
  - -0.11106014251708984
  - -0.10565400123596191
  - -0.10439395904541016
  - -0.10761380195617676
  - -0.10485315322875977
  - -0.09826231002807617
  - -0.10616636276245117
  - -0.10956239700317383
  - -0.10550928115844727
  - -0.10488748550415039
  - -2.5363051891326904
- - -0.10262823104858398
  - -0.10648584365844727
  - -0.10729074478149414
  - -0.1043083667755127
  - -0.12243890762329102
  - -0.10272979736328125
  - -0.1187748908996582
  - -0.10213947296142578
  - -0.10503911972045898
  - -0.10573387145996094
  - -0.10514974594116211
  - -0.1682002693414688
  - -3.4398348331451416
  - -0.10537838935852051
  - -0.10069131851196289
  - -0.11785745620727539
  - -0.10174131393432617
  - -0.10610198974609375
  - -0.10559558868408203
  - -0.10502147674560547
  - -0.11792077869176865
  - -0.11309671401977539
  - -0.10548615455627441
  - -0.11689996719360352
  - -0.10692262649536133
  - -0.10077571868896484
  - -0.104949951171875
  - -0.10504436492919922
  - -0.10933669656515121
  - -0.1111001968383789
  - -0.10564613342285156
  - -0.10441446304321289
  - -0.1076040267944336
  - -0.10485243797302246
  - -0.09825658798217773
  - -0.10614538192749023
  - -0.10955429077148438
  - -0.1055154800415039
  - -0.10488128662109375
  - -0.08241172134876251
- - -0.10262823104858398
  - -0.10648584365844727
  - -0.10729074478149414
  - -0.1043083667755127
  - -0.12243890762329102
  - -0.10272979736328125
  - -0.1187748908996582
  - -0.10213947296142578
  - -0.10503911972045898
  - -0.10573387145996094
  - -0.10514974594116211
  - -0.1682002693414688
  - -0.11323022842407227
  - -0.10564112663269043
  - -0.100860595703125
  - -0.11764764785766602
  - -0.10202169418334961
  - -0.10609817504882812
  - -0.10556650161743164
  - -0.10497236251831055
  - -0.11846499890089035
  - -3.4402949810028076
  - -0.1047210693359375
  - -0.12219095230102539
  - -0.10657882690429688
  - -0.10116863250732422
  - -0.10504722595214844
  - -0.1050105094909668
  - -0.10991977900266647
  - -0.11109137535095215
  - -0.1056525707244873
  - -0.10445690155029297
  - -0.10761570930480957
  - -0.10485029220581055
  - -0.09828519821166992
  - -0.10612058639526367
  - -0.10958528518676758
  - -0.10551071166992188
  - -0.10489845275878906
  - -0.08237867802381516
- - -0.10262823104858398
  - -0.10648584365844727
  - -0.10729074478149414
  - -0.1043083667755127
  - -0.12243890762329102
  - -0.10272979736328125
  - -0.1187748908996582
  - -0.10213947296142578
  - -0.10503911972045898
  - -0.10573387145996094
  - -0.10514974594116211
  - -0.1682002693414688
  - -0.11323022842407227
  - -0.10564112663269043
  - -0.100860595703125
  - -0.11764764785766602
  - -0.10202169418334961
  - -0.10609817504882812
  - -0.10556650161743164
  - -0.10497236251831055
  - -0.11846499890089035
  - -0.11298894882202148
  - -0.10543394088745117
  - -0.11619234085083008
  - -0.10610389709472656
  - -0.10130643844604492
  - -0.10498666763305664
  - -0.10500574111938477
  - -0.10903646796941757
  - -3.4529542922973633
  - -0.10552835464477539
  - -0.1047201156616211
  - -0.10742950439453125
  - -0.10480213165283203
  - -0.09838724136352539
  - -0.10610198974609375
  - -0.10944700241088867
  - -0.1056513786315918
  - -0.10493040084838867
  - -0.08132080733776093
- - -0.10262823104858398
  - -0.10648584365844727
  - -0.10729074478149414
  - -0.1043083667755127
  - -0.12243890762329102
  - -0.10272979736328125
  - -0.1187748908996582
  - -0.10213947296142578
  - -0.10503911972045898
  - -0.10573387145996094
  - -0.10514974594116211
  - -0.1682002693414688
  - -0.11323022842407227
  - -0.10564112663269043
  - -0.100860595703125
  - -0.11764764785766602
  - -0.10202169418334961
  - -0.10609817504882812
  - -0.10556650161743164
  - -0.10497236251831055
  - -0.11846499890089035
  - -0.11298894882202148
  - -0.10543394088745117
  - -0.11619234085083008
  - -0.10610389709472656
  - -0.10130643844604492
  - -0.10498666763305664
  - -0.10500574111938477
  - -0.10903646796941757
  - -0.11106014251708984
  - -0.10565400123596191
  - -0.10439395904541016
  - -3.54477596282959
  - -0.10503387451171875
  - -0.09891939163208008
  - -0.10492849349975586
  - -0.10910797119140625
  - -0.1055760383605957
  - -0.10467147827148438
  - -0.08250810205936432
- - -0.10262823104858398
  - -0.10648584365844727
  - -0.10729074478149414
  - -0.1043083667755127
  - -0.12243890762329102
  - -0.10272979736328125
  - -3.760571002960205
  - -0.10043525695800781
  - -0.10847902297973633
  - -0.10528230667114258
  - -0.10475683212280273
  - -0.08568720519542694
  - -0.11151623725891113
  - -0.10455203056335449
  - -0.09778356552124023
  - -0.10534000396728516
  - -0.1022481918334961
  - -0.10674428939819336
  - -0.10451364517211914
  - -0.10697412490844727
  - -0.11026447266340256
  - -0.11279916763305664
  - -0.10596942901611328
  - -0.10742425918579102
  - -0.10330009460449219
  - -0.10036373138427734
  - -0.10447025299072266
  - -0.10469627380371094
  - -0.10761900246143341
  - -0.1114816665649414
  - -0.10567784309387207
  - -0.10416030883789062
  - -0.10765290260314941
  - -0.10488557815551758
  - -0.09818649291992188
  - -0.10468435287475586
  - -0.10928869247436523
  - -0.1056070327758789
  - -0.1046900749206543
  - -0.08173591643571854
- - -0.10262823104858398
  - -0.10648584365844727
  - -0.10729074478149414
  - -0.1043083667755127
  - -0.12243890762329102
  - -0.10272979736328125
  - -0.1187748908996582
  - -0.10213947296142578
  - -0.10503911972045898
  - -0.10573387145996094
  - -0.10514974594116211
  - -4.041845798492432
  - -0.11377429962158203
  - -0.10508036613464355
  - -0.10208749771118164
  - -0.10840797424316406
  - -0.10128021240234375
  - -0.1055760383605957
  - -0.10507822036743164
  - -0.10581254959106445
  - -0.10092294216156006
  - -0.11193060874938965
  - -0.10448694229125977
  - -0.11216974258422852
  - -0.10522174835205078
  - -0.10141324996948242
  - -0.10528039932250977
  - -0.10524988174438477
  - -0.10248883813619614
  - -0.1109781265258789
  - -0.10561394691467285
  - -0.10473155975341797
  - -0.1074831485748291
  - -0.10486888885498047
  - -0.09842491149902344
  - -0.10636472702026367
  - -0.10882806777954102
  - -0.10558271408081055
  - -0.1049642562866211
  - -0.07466112077236176
- - -0.10262823104858398
  - -0.10648584365844727
  - -0.10729074478149414
  - -0.1043083667755127
  - -0.12243890762329102
  - -0.10272979736328125
  - -0.1187748908996582
  - -0.10213947296142578
  - -0.10503911972045898
  - -0.10573387145996094
  - -0.10514974594116211
  - -4.062718868255615
  - -0.11307716369628906
  - -0.10507416725158691
  - -0.10201549530029297
  - -0.10696935653686523
  - -0.10167217254638672
  - -0.10566377639770508
  - -0.10544919967651367
  - -0.10516357421875
  - -0.09954453259706497
  - -0.11249136924743652
  - -0.10473203659057617
  - -0.11059999465942383
  - -0.10666370391845703
  - -0.10142183303833008
  - -0.10513782501220703
  - -0.10514259338378906
  - -0.10508500784635544
  - -0.11091947555541992
  - -0.10560965538024902
  - -0.10421466827392578
  - -0.10750269889831543
  - -0.10486650466918945
  - -0.09820365905761719
  - -0.10642814636230469
  - -0.10955619812011719
  - -0.10558176040649414
  - -0.10486221313476562
  - -0.08177293837070465
- - -0.10262823104858398
  - -0.10648584365844727
  - -0.10729074478149414
  - -0.1043083667755127
  - -0.12243890762329102
  - -0.10272979736328125
  - -0.1187748908996582
  - -0.10213947296142578
  - -0.10503911972045898
  - -0.10573387145996094
  - -0.10514974594116211
  - -4.058732509613037
  - -0.11247086524963379
  - -0.10498166084289551
  - -0.10073232650756836
  - -0.11231184005737305
  - -0.10192251205444336
  - -0.1058816909790039
  - -0.1055145263671875
  - -0.1051015853881836
  - -0.09755131602287292
  - -0.11291265487670898
  - -0.10485124588012695
  - -0.11256599426269531
  - -0.10804939270019531
  - -0.10143327713012695
  - -0.10503339767456055
  - -0.1050567626953125
  - -0.1112806648015976
  - -0.11091423034667969
  - -0.10561394691467285
  - -0.10457515716552734
  - -0.10749125480651855
  - -0.10486745834350586
  - -0.09834671020507812
  - -0.10648679733276367
  - -0.10905027389526367
  - -0.10557031631469727
  - -0.10494756698608398
  - -0.07573346793651581
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'song'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'True'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'True'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Singer_ID'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Singer_ID'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Citizenship'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
