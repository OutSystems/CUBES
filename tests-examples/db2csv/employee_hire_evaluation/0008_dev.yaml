db: tests-examples/db2csv/employee_hire_evaluation/tables/employee_hire_evaluation.sqlite
inputs:
 - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
output: tests-examples/db2csv/employee_hire_evaluation/tables/0008_dev.csv
raw_question: Find the cities that have more than one employee under age 30. 
question_index: 266 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - 30
 - 1
join_columns: []
groupby_columns:
 - city
orderby_columns: []
functions:
 - count
columns:
 - age
filters:
 - '<'
 - '>'
ieu: []
comment: |-
  SELECT city
  FROM employee
  WHERE age < 30
  GROUP BY city
  HAVING count(*) > 1

sql: |-
  SELECT city
  FROM employee
  WHERE age < 30
  GROUP BY city
  HAVING count(*) > 1
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- - city
- - city
- - city
- - city
- - city
- - city
- []
- - city
- - city
- - city
smbop_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
- - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
- - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
- - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
- - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
- - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
- - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
- - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
- - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
- - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
smbop_beam_constants:
- - 30
  - 1
- - 30
  - 1
- - 30
  - 1
- - 30
  - 1
- - 30
  - 1
- - 30
  - 1
- - 30
  - 1
- - 30
  - 1
- - 30
  - 1
- - 30
  - 1
smbop_beam_functions:
- - count
- - count
- - avg
  - count
- - count
- - count
- - count
- []
- []
- - count
  - sum
- - count
smbop_beam_columns:
- - age
- - age
- - age
- - age
- - age
- - age
- - age
- - age
- []
- - age
smbop_beam_ieu:
- []
- - intersect
- []
- - union
- - intersect
  - intersect
- - intersect
- []
- []
- []
- - except
smbop_beam_filters:
- - '<'
  - '>'
- - '<'
  - '>'
- - '<'
  - '>'
- - '<'
  - '>'
- - '<'
  - '>'
- - '<'
  - '>'
- - '<'
- - '<'
- - '>'
- - '<'
  - '>'
smbop_beam_inferred_code:
  - SELECT employee.city FROM employee WHERE employee.age<30 GROUP BY employee.city HAVING COUNT( * ) > 1
  - SELECT employee.city FROM employee GROUP BY employee.city HAVING COUNT( * ) > 1 INTERSECT SELECT employee.city FROM employee WHERE employee.age<30
  - SELECT employee.city FROM employee GROUP BY employee.city HAVING COUNT( * ) > 1 AND AVG( employee.age )<30
  - SELECT employee.city FROM employee GROUP BY employee.city HAVING COUNT( * ) > 1 UNION SELECT employee.city FROM employee WHERE employee.age<30
  - SELECT employee.city FROM employee GROUP BY employee.city HAVING COUNT( * ) > 1 INTERSECT SELECT employee.city FROM employee WHERE employee.age<30 INTERSECT SELECT employee.city FROM employee WHERE employee.age<30
  - SELECT employee.city FROM employee GROUP BY employee.city HAVING COUNT( * ) > 1 INTERSECT SELECT employee.city FROM employee WHERE employee.age<30 GROUP BY employee.city HAVING COUNT( * ) > 1
  - SELECT employee.city FROM employee WHERE employee.age<30
  - SELECT employee.city FROM employee WHERE employee.age<30 GROUP BY employee.city
  - SELECT employee.city FROM employee GROUP BY employee.city HAVING COUNT( * ) > 1 AND SUM( 1 ) > 30
  - SELECT employee.city FROM employee GROUP BY employee.city HAVING COUNT( * ) > 1 EXCEPT SELECT employee.city FROM employee WHERE employee.age<30
smbop_beam_inferred_code_w_terminals:
  - SELECT employee.city FROM employee WHERE employee.age<30 GROUP BY employee.city HAVING COUNT( * ) > 1
  - SELECT employee.city FROM employee GROUP BY employee.city HAVING COUNT( * ) > 1 INTERSECT SELECT employee.city FROM employee WHERE employee.age<30
  - SELECT employee.city FROM employee GROUP BY employee.city HAVING COUNT( * ) > 1 AND AVG( employee.age )<30
  - SELECT employee.city FROM employee GROUP BY employee.city HAVING COUNT( * ) > 1 UNION SELECT employee.city FROM employee WHERE employee.age<30
  - SELECT employee.city FROM employee GROUP BY employee.city HAVING COUNT( * ) > 1 INTERSECT SELECT employee.city FROM employee WHERE employee.age<30 INTERSECT SELECT employee.city FROM employee WHERE employee.age<30
  - SELECT employee.city FROM employee GROUP BY employee.city HAVING COUNT( * ) > 1 INTERSECT SELECT employee.city FROM employee WHERE employee.age<30 GROUP BY employee.city HAVING COUNT( * ) > 1
  - SELECT employee.city FROM employee WHERE employee.age<30
  - SELECT employee.city FROM employee WHERE employee.age<30 GROUP BY employee.city
  - SELECT employee.city FROM employee GROUP BY employee.city HAVING COUNT( * ) > 1 AND SUM( 1 ) > 30
  - SELECT employee.city FROM employee GROUP BY employee.city HAVING COUNT( * ) > 1 EXCEPT SELECT employee.city FROM employee WHERE employee.age<30
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- []
- []
- []
- []
- - employee_id
- - employee_id
- - employee_id
  - shop_id
- []
ratsql_beam_groupby_columns:
- - city
- - city
- []
- - city
- - city
- - city
- - city
- - city
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
- - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
- - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
- - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
- - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
  - tests-examples/db2csv/employee_hire_evaluation/tables/evaluation.csv
- - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
  - tests-examples/db2csv/employee_hire_evaluation/tables/hiring.csv
- - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
  - tests-examples/db2csv/employee_hire_evaluation/tables/shop.csv
  - tests-examples/db2csv/employee_hire_evaluation/tables/hiring.csv
- - tests-examples/db2csv/employee_hire_evaluation/tables/employee.csv
ratsql_beam_constants:
- - 1
  - 30
- - 1
  - 30
- - 1
  - 30
- - 1
  - 30
- - 1
  - 30
- - 1
  - 30
- - 1
  - 30
- - 1
  - 30
- - 1
  - 30
- - 1
  - 30
ratsql_beam_functions:
- - count
- - count
- []
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - age
- - age
- - age
- - age
  - employee_id
- - age
- - age
- - age
- - age
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '<'
  - '>'
- - '>'
- - ' between '
- - '<'
  - '>'
- - '<'
  - '>'
- - '<'
  - '>'
- - '<'
  - '>'
- - '<'
  - '>'
ratsql_beam_inferred_code:
  - SELECT employee.City FROM employee WHERE employee.Age < 'terminal' GROUP BY employee.City HAVING Count(*) > 'terminal'
  - SELECT employee.City FROM employee WHERE employee.Age > 'terminal' GROUP BY employee.City HAVING Count(*) > 'terminal'
  - SELECT employee.City FROM employee WHERE employee.Age BETWEEN 'terminal' AND 'terminal'
  - SELECT employee.City FROM employee WHERE employee.Age < 'terminal' GROUP BY employee.City HAVING Count(employee.Employee_ID) > 'terminal'
  - SELECT employee.City FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE employee.Age < 'terminal' GROUP BY employee.City HAVING Count(*) > 'terminal'
  - SELECT employee.City FROM employee JOIN hiring ON employee.Employee_ID = hiring.Employee_ID WHERE employee.Age < 'terminal' GROUP BY employee.City HAVING Count(*) > 'terminal'
  - SELECT employee.City FROM employee JOIN shop JOIN hiring ON employee.Employee_ID = hiring.Employee_ID AND hiring.Shop_ID = shop.Shop_ID WHERE employee.Age < 'terminal' GROUP BY employee.City HAVING Count(*) > 'terminal'
  - SELECT employee.City FROM employee WHERE employee.Age < 'terminal' GROUP BY DISTINCT employee.City HAVING Count(*) > 'terminal'
  - SELECT DISTINCT employee.City FROM employee WHERE employee.Age < 'terminal' GROUP BY employee.City HAVING Count(*) > 'terminal'
  - SELECT employee.City FROM employee WHERE DISTINCT employee.Age < 'terminal' GROUP BY employee.City HAVING Count(*) > 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT employee.City FROM employee WHERE employee.Age < 30 GROUP BY employee.City HAVING Count(*) > 1
  - SELECT employee.City FROM employee WHERE employee.Age > 30 GROUP BY employee.City HAVING Count(*) > 1
  - SELECT employee.City FROM employee WHERE employee.Age BETWEEN 1 AND 30
  - 
  - SELECT employee.City FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE employee.Age < 30 GROUP BY employee.City HAVING Count(*) > 1
  - SELECT employee.City FROM employee JOIN hiring ON employee.Employee_ID = hiring.Employee_ID WHERE employee.Age < 30 GROUP BY employee.City HAVING Count(*) > 1
  - SELECT employee.City FROM employee JOIN shop JOIN hiring ON employee.Employee_ID = hiring.Employee_ID AND hiring.Shop_ID = shop.Shop_ID WHERE employee.Age < 30 GROUP BY employee.City HAVING Count(*) > 1
  - SELECT employee.City FROM employee WHERE employee.Age < 30 GROUP BY DISTINCT employee.City HAVING Count(*) > 1
  - SELECT DISTINCT employee.City FROM employee WHERE employee.Age < 30 GROUP BY employee.City HAVING Count(*) > 1
  - SELECT employee.City FROM employee WHERE DISTINCT employee.Age < 30 GROUP BY employee.City HAVING Count(*) > 1
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10483217239379883
  - -0.10395288467407227
  - -0.10571646690368652
  - -0.10423707962036133
  - -0.10477781295776367
  - -0.1025390625
  - -0.10437536239624023
  - -0.10156726837158203
  - -0.10453128814697266
  - -0.1053466796875
  - -0.10484981536865234
  - -0.12106896936893463
  - -0.11028575897216797
  - -0.10464191436767578
  - -0.09557485580444336
  - -0.44353437423706055
  - -0.09495782852172852
  - -0.10100126266479492
  - -0.10429573059082031
  - -0.10492944717407227
  - -0.10123920440673828
  - -0.09587714821100235
  - -0.11165452003479004
  - -0.10559582710266113
  - -0.1102457046508789
  - -0.1288928985595703
  - -0.11099386215209961
  - -0.10218286514282227
  - -0.10478591918945312
  - -0.10541710257530212
  - -0.11372685432434082
  - -0.10535740852355957
  - -0.08571958541870117
  - -0.10173892974853516
  - -0.10272693634033203
  - -0.10408830642700195
  - -0.10738849639892578
  - -0.11527156829833984
  - -0.20717351138591766
  - -0.11093974113464355
  - -0.1063084602355957
  - -0.10643339157104492
  - -0.10876798629760742
  - -0.10767531394958496
  - -0.10558032989501953
  - -0.09711885452270508
  - -0.10540485382080078
  - -0.11098766326904297
  - -0.10741567611694336
  - -0.10403251647949219
  - -0.12045600265264511
- - -0.10483217239379883
  - -0.10395288467407227
  - -0.10571646690368652
  - -0.10423707962036133
  - -0.10477781295776367
  - -0.1025390625
  - -0.10437536239624023
  - -0.10156726837158203
  - -0.10453128814697266
  - -0.1053466796875
  - -0.10484981536865234
  - -0.12106896936893463
  - -0.11028575897216797
  - -0.10464191436767578
  - -0.09557485580444336
  - -2.1215810775756836
  - -0.1034231185913086
  - -0.10469484329223633
  - -0.10412788391113281
  - -0.10464286804199219
  - -0.09500312805175781
  - -0.17566269636154175
  - -0.11096000671386719
  - -0.10553479194641113
  - -0.11242151260375977
  - -0.11244773864746094
  - -0.10144996643066406
  - -0.10292530059814453
  - -0.10476541519165039
  - -0.10299958288669586
  - -0.11380338668823242
  - -0.10531735420227051
  - -0.0824594497680664
  - -0.1002206802368164
  - -0.10268115997314453
  - -0.1041259765625
  - -0.10743236541748047
  - -0.11490297317504883
  - -0.20486903190612793
  - -0.11090469360351562
  - -0.1063070297241211
  - -0.10647296905517578
  - -0.10842323303222656
  - -0.1076669692993164
  - -0.10558748245239258
  - -0.09715652465820312
  - -0.10536766052246094
  - -0.1110692024230957
  - -0.10740518569946289
  - -0.10402059555053711
  - -0.12053504586219788
- - -0.10483217239379883
  - -0.10395288467407227
  - -0.10571646690368652
  - -0.10423707962036133
  - -0.10477781295776367
  - -0.1025390625
  - -0.10437536239624023
  - -0.10156726837158203
  - -0.10453128814697266
  - -0.1053466796875
  - -0.10484981536865234
  - -0.12106896936893463
  - -0.11028575897216797
  - -0.10464191436767578
  - -0.09557485580444336
  - -4.814105987548828
  - -0.25879383087158203
  - -0.1035013198852539
  - -0.10464239120483398
  - -0.10515928268432617
  - -0.10372209548950195
  - -0.0768798366189003
  - -0.1112673282623291
  - -0.10569453239440918
  - -0.11229228973388672
  - -0.12626981735229492
  - -0.10970497131347656
  - -0.10294198989868164
  - -0.10780024528503418
  - -0.10501217842102051
  - -0.09613275527954102
  - -0.1048736572265625
  - -0.11181020736694336
  - -0.10853958129882812
  - -0.10377931594848633
  - -0.12838511168956757
- - -0.10483217239379883
  - -0.10395288467407227
  - -0.10571646690368652
  - -0.10423707962036133
  - -0.10477781295776367
  - -0.1025390625
  - -0.10437536239624023
  - -0.10156726837158203
  - -0.10453128814697266
  - -0.1053466796875
  - -0.10484981536865234
  - -0.12106896936893463
  - -0.11028575897216797
  - -0.10464191436767578
  - -0.09557485580444336
  - -0.44353437423706055
  - -0.09495782852172852
  - -0.10100126266479492
  - -0.10429573059082031
  - -0.10492944717407227
  - -0.10123920440673828
  - -0.09587714821100235
  - -0.11165452003479004
  - -0.10559582710266113
  - -0.1102457046508789
  - -0.1288928985595703
  - -0.11099386215209961
  - -0.10218286514282227
  - -0.10478591918945312
  - -0.10541710257530212
  - -0.11372685432434082
  - -0.10535740852355957
  - -0.08571958541870117
  - -0.10173892974853516
  - -0.10272693634033203
  - -0.10408830642700195
  - -0.10738849639892578
  - -0.11527156829833984
  - -3.039777994155884
  - -0.11012601852416992
  - -0.10597085952758789
  - -0.10572671890258789
  - -0.12160968780517578
  - -0.10753393173217773
  - -0.10566449165344238
  - -0.09748268127441406
  - -0.1060323715209961
  - -0.11158132553100586
  - -0.10994911193847656
  - -0.10414791107177734
  - -0.11674680560827255
- - -0.10483217239379883
  - -0.10395288467407227
  - -0.10571646690368652
  - -0.10423707962036133
  - -0.10477781295776367
  - -0.1025390625
  - -0.10437536239624023
  - -0.10156726837158203
  - -0.10453128814697266
  - -0.1053466796875
  - -0.10484981536865234
  - -0.12106896936893463
  - -0.11028575897216797
  - -0.10464191436767578
  - -0.09557485580444336
  - -0.44353437423706055
  - -0.09495782852172852
  - -0.10100126266479492
  - -0.10429573059082031
  - -0.10492944717407227
  - -0.10123920440673828
  - -0.09587714821100235
  - -0.11165452003479004
  - -0.10559582710266113
  - -0.1102457046508789
  - -0.1288928985595703
  - -0.11099386215209961
  - -0.10218286514282227
  - -0.10478591918945312
  - -0.10541710257530212
  - -0.11372685432434082
  - -0.10535740852355957
  - -0.08571958541870117
  - -0.10173892974853516
  - -0.10272693634033203
  - -0.10408830642700195
  - -0.10738849639892578
  - -0.11527156829833984
  - -0.20717351138591766
  - -0.11093974113464355
  - -0.1063084602355957
  - -0.10643339157104492
  - -0.10876798629760742
  - -0.10767531394958496
  - -0.10558032989501953
  - -0.09711885452270508
  - -0.10540485382080078
  - -0.11098766326904297
  - -0.10741567611694336
  - -0.10403251647949219
  - -3.1788289546966553
- - -0.10483217239379883
  - -0.10395288467407227
  - -0.10571646690368652
  - -0.10423707962036133
  - -0.10477781295776367
  - -0.1025390625
  - -0.10437536239624023
  - -0.10156726837158203
  - -0.10453128814697266
  - -0.1053466796875
  - -0.10484981536865234
  - -0.12106896936893463
  - -0.11028575897216797
  - -0.10464191436767578
  - -0.09557485580444336
  - -0.44353437423706055
  - -0.09495782852172852
  - -0.10100126266479492
  - -0.10429573059082031
  - -0.10492944717407227
  - -0.10123920440673828
  - -0.09587714821100235
  - -0.11165452003479004
  - -0.10559582710266113
  - -0.1102457046508789
  - -0.1288928985595703
  - -0.11099386215209961
  - -0.10218286514282227
  - -0.10478591918945312
  - -0.10541710257530212
  - -0.11372685432434082
  - -0.10535740852355957
  - -0.08571958541870117
  - -0.10173892974853516
  - -0.10272693634033203
  - -0.10408830642700195
  - -0.10738849639892578
  - -0.11527156829833984
  - -0.20717351138591766
  - -0.11093974113464355
  - -0.1063084602355957
  - -0.10643339157104492
  - -0.10876798629760742
  - -0.10767531394958496
  - -0.10558032989501953
  - -0.09711885452270508
  - -0.10540485382080078
  - -0.11098766326904297
  - -0.10741567611694336
  - -0.10403251647949219
  - -3.3061277866363525
- - -0.10483217239379883
  - -0.10395288467407227
  - -0.10571646690368652
  - -0.10423707962036133
  - -0.10477781295776367
  - -0.1025390625
  - -0.10437536239624023
  - -0.10156726837158203
  - -0.10453128814697266
  - -0.1053466796875
  - -0.10484981536865234
  - -0.12106896936893463
  - -0.11028575897216797
  - -0.10464191436767578
  - -0.09557485580444336
  - -0.44353437423706055
  - -0.09495782852172852
  - -0.10100126266479492
  - -0.10429573059082031
  - -0.10492944717407227
  - -0.10123920440673828
  - -0.09587714821100235
  - -0.11165452003479004
  - -0.10559582710266113
  - -0.1102457046508789
  - -0.1288928985595703
  - -0.11099386215209961
  - -0.10218286514282227
  - -0.10478591918945312
  - -0.10541710257530212
  - -0.11372685432434082
  - -0.10535740852355957
  - -0.08571958541870117
  - -0.10173892974853516
  - -0.10272693634033203
  - -0.10408830642700195
  - -0.10738849639892578
  - -0.11527156829833984
  - -0.20717351138591766
  - -0.11093974113464355
  - -0.1063084602355957
  - -0.10643339157104492
  - -0.10876798629760742
  - -0.10767531394958496
  - -0.10558032989501953
  - -0.09711885452270508
  - -0.10540485382080078
  - -0.11098766326904297
  - -0.10741567611694336
  - -0.10403251647949219
  - -3.346945285797119
- - -0.10483217239379883
  - -0.10395288467407227
  - -0.10571646690368652
  - -0.10423707962036133
  - -0.10477781295776367
  - -0.1025390625
  - -0.10437536239624023
  - -0.10156726837158203
  - -0.10453128814697266
  - -0.1053466796875
  - -0.10484981536865234
  - -0.12106896936893463
  - -0.11028575897216797
  - -0.10464191436767578
  - -0.09557485580444336
  - -0.44353437423706055
  - -0.09495782852172852
  - -0.10100126266479492
  - -0.10429573059082031
  - -0.10492944717407227
  - -0.10123920440673828
  - -0.09587714821100235
  - -0.11165452003479004
  - -0.10559582710266113
  - -0.1102457046508789
  - -0.1288928985595703
  - -0.11099386215209961
  - -0.10218286514282227
  - -0.10478591918945312
  - -0.10541710257530212
  - -3.411482810974121
  - -0.1041405200958252
  - -0.10016632080078125
  - -0.09631633758544922
  - -0.10282182693481445
  - -0.10418176651000977
  - -0.1073613166809082
  - -0.1149134635925293
  - -0.2057264745235443
  - -0.11097431182861328
  - -0.10628271102905273
  - -0.10636472702026367
  - -0.10577630996704102
  - -0.10767936706542969
  - -0.10552835464477539
  - -0.09720754623413086
  - -0.1056222915649414
  - -0.11079931259155273
  - -0.10694646835327148
  - -0.10396432876586914
  - -0.12123730778694153
- - -0.10483217239379883
  - -0.10395288467407227
  - -0.10571646690368652
  - -0.10423707962036133
  - -0.10477781295776367
  - -0.1025390625
  - -0.10437536239624023
  - -0.10156726837158203
  - -0.10453128814697266
  - -0.1053466796875
  - -0.10484981536865234
  - -0.12106896936893463
  - -3.493204355239868
  - -0.11638665199279785
  - -0.10122203826904297
  - -0.38217830657958984
  - -0.09800529479980469
  - -0.1008753776550293
  - -0.1043863296508789
  - -0.10496091842651367
  - -0.10136604309082031
  - -0.09650580585002899
  - -0.11171650886535645
  - -0.10559248924255371
  - -0.11080074310302734
  - -0.12332725524902344
  - -0.10472393035888672
  - -0.10153818130493164
  - -0.10470771789550781
  - -0.10153335332870483
  - -0.11365675926208496
  - -0.10534453392028809
  - -0.08232402801513672
  - -0.10120487213134766
  - -0.10268831253051758
  - -0.10407495498657227
  - -0.1066436767578125
  - -0.11530590057373047
  - -0.20295029878616333
  - -0.1109316349029541
  - -0.10630083084106445
  - -0.10643863677978516
  - -0.1107778549194336
  - -0.10763955116271973
  - -0.10560011863708496
  - -0.09692096710205078
  - -0.10518836975097656
  - -0.11091327667236328
  - -0.10733556747436523
  - -0.10421991348266602
  - -0.12126550823450089
- - -0.10483217239379883
  - -0.10395288467407227
  - -0.10571646690368652
  - -0.10423707962036133
  - -0.10477781295776367
  - -0.1025390625
  - -0.10437536239624023
  - -0.10156726837158203
  - -0.10453128814697266
  - -0.1053466796875
  - -0.10484981536865234
  - -0.12106896936893463
  - -0.11028575897216797
  - -0.10464191436767578
  - -0.09557485580444336
  - -0.44353437423706055
  - -0.09495782852172852
  - -0.10100126266479492
  - -0.10429573059082031
  - -0.10492944717407227
  - -0.10123920440673828
  - -0.09587714821100235
  - -3.4458491802215576
  - -0.10540437698364258
  - -0.11204195022583008
  - -0.1208028793334961
  - -0.1122899055480957
  - -0.10232400894165039
  - -0.10479021072387695
  - -0.11503288894891739
  - -0.11384034156799316
  - -0.10537290573120117
  - -0.08725929260253906
  - -0.10159063339233398
  - -0.1027231216430664
  - -0.10409021377563477
  - -0.1072998046875
  - -0.1146388053894043
  - -0.2076030820608139
  - -0.11093616485595703
  - -0.10630393028259277
  - -0.10645294189453125
  - -0.10912132263183594
  - -0.10768985748291016
  - -0.1055762767791748
  - -0.09720325469970703
  - -0.10553264617919922
  - -0.11099481582641602
  - -0.10745668411254883
  - -0.10397195816040039
  - -0.12040971219539642
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'employee'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'employee'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Between')
  - ('Between', (True, True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'employee'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Count')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'employee'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'evaluation'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'hiring'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'shop'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'True'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'employee'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'employee'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'City'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'employee'
