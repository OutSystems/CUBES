db: tests-examples/db2csv/pets_1/tables/pets_1.sqlite
inputs:
 - tests-examples/db2csv/pets_1/tables/pets.csv
output: tests-examples/db2csv/pets_1/tables/0002_dev.csv
raw_question: How many pets have a greater weight than 10? 
question_index: 46 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - 10
join_columns: []
groupby_columns: []
orderby_columns: []
functions:
 - count
columns:
 - weight
filters:
 - '>'
ieu: []
comment: |-
  SELECT count(*)
  FROM pets
  WHERE weight > 10

sql: |-
  SELECT count(*)
  FROM pets
  WHERE weight > 10
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/pets_1/tables/pets.csv
- - tests-examples/db2csv/pets_1/tables/pets.csv
- - tests-examples/db2csv/pets_1/tables/pets.csv
- - tests-examples/db2csv/pets_1/tables/student.csv
- - tests-examples/db2csv/pets_1/tables/pets.csv
- - tests-examples/db2csv/pets_1/tables/student.csv
- - tests-examples/db2csv/pets_1/tables/pets.csv
  - tests-examples/db2csv/pets_1/tables/student.csv
- - tests-examples/db2csv/pets_1/tables/has_pet.csv
  - tests-examples/db2csv/pets_1/tables/pets.csv
smbop_beam_constants:
- - 10
- - 10
- - 10
- - 10
- - 10
- - 10
- - 10
- - 10
smbop_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
smbop_beam_columns:
- - weight
- []
- - weight
- []
- - weight
- - stuid
- - weight
- - weight
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '>'
- - '>'
- - '='
- - '>'
- - '!='
- - '>'
- - '<'
- - '<'
smbop_beam_inferred_code:
  - SELECT COUNT( * ) FROM pets WHERE pets.weight > 10
  - SELECT COUNT( * ) FROM pets WHERE 10 > 10
  - SELECT COUNT( * ) FROM pets WHERE pets.weight = 10
  - SELECT COUNT( * ) FROM student WHERE 10 > 10
  - SELECT COUNT( * ) FROM pets WHERE pets.weight != 10
  - SELECT COUNT( * ) FROM student WHERE student.stuid > 10
  - SELECT COUNT( * ) FROM student, pets WHERE pets.weight<10
  - SELECT COUNT( * ) FROM has_pet, pets WHERE pets.weight<10
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( * ) FROM pets WHERE pets.weight > 10
  - SELECT COUNT( * ) FROM pets WHERE 10 > 10
  - SELECT COUNT( * ) FROM pets WHERE pets.weight = 10
  - SELECT COUNT( * ) FROM student WHERE 10 > 10
  - SELECT COUNT( * ) FROM pets WHERE pets.weight != 10
  - SELECT COUNT( * ) FROM student WHERE student.stuid > 10
  - SELECT COUNT( * ) FROM student, pets WHERE pets.weight<10
  - SELECT COUNT( * ) FROM has_pet, pets WHERE pets.weight<10
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- []
- - petid
  - stuid
- - petid
- []
- []
- []
- - petid
  - stuid
- - petid
  - stuid
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/pets_1/tables/pets.csv
- - tests-examples/db2csv/pets_1/tables/has_pet.csv
  - tests-examples/db2csv/pets_1/tables/student.csv
  - tests-examples/db2csv/pets_1/tables/pets.csv
- - tests-examples/db2csv/pets_1/tables/has_pet.csv
  - tests-examples/db2csv/pets_1/tables/pets.csv
- - tests-examples/db2csv/pets_1/tables/pets.csv
- - tests-examples/db2csv/pets_1/tables/pets.csv
- - tests-examples/db2csv/pets_1/tables/pets.csv
- - tests-examples/db2csv/pets_1/tables/has_pet.csv
  - tests-examples/db2csv/pets_1/tables/student.csv
  - tests-examples/db2csv/pets_1/tables/pets.csv
- - tests-examples/db2csv/pets_1/tables/has_pet.csv
  - tests-examples/db2csv/pets_1/tables/student.csv
  - tests-examples/db2csv/pets_1/tables/pets.csv
ratsql_beam_constants:
- - 10
- - 10
- - 10
- - 10
- - 10
- - 10
- - 10
  - '1'
- - 10
- - 10
- - 10
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - weight
- - weight
- - weight
- - weight
- - weight
- - pettype
  - weight
- - fname
  - weight
- - lname
  - weight
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
ratsql_beam_inferred_code:
  - SELECT Count(*) FROM Pets WHERE Pets.weight > 'terminal'
  - SELECT Count(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.weight > 'terminal'
  - SELECT Count(*) FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.weight > 'terminal'
  - SELECT Count(*) FROM Pets WHERE DISTINCT Pets.weight > 'terminal'
  - SELECT DISTINCT Count(*) FROM Pets WHERE Pets.weight > 'terminal'
  - SELECT Count(DISTINCT *) FROM Pets WHERE Pets.weight > 'terminal'
  - SELECT Count(*) FROM Pets WHERE Pets.weight > 'terminal' LIMIT 1
  - SELECT Count(DISTINCT Pets.PetType) FROM Pets WHERE Pets.weight > 'terminal'
  - SELECT Count(DISTINCT Student.Fname) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.weight > 'terminal'
  - SELECT Count(DISTINCT Student.LName) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.weight > 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(*) FROM Pets WHERE Pets.weight > 10
  - SELECT Count(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.weight > 10
  - SELECT Count(*) FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.weight > 10
  - SELECT Count(*) FROM Pets WHERE DISTINCT Pets.weight > 10
  - SELECT DISTINCT Count(*) FROM Pets WHERE Pets.weight > 10
  - SELECT Count(DISTINCT *) FROM Pets WHERE Pets.weight > 10
  - SELECT Count(*) FROM Pets WHERE Pets.weight > 10 LIMIT 1
  - SELECT Count(DISTINCT Pets.PetType) FROM Pets WHERE Pets.weight > 10
  - SELECT Count(DISTINCT Student.Fname) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.weight > 10
  - SELECT Count(DISTINCT Student.LName) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.weight > 10
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - True
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10857343673706055
  - -0.1061563491821289
  - -0.10875105857849121
  - -0.10391712188720703
  - -0.10229063034057617
  - -0.10556268692016602
  - -0.11435222625732422
  - -0.10296106338500977
  - -0.10505056381225586
  - -0.10480785369873047
  - -0.1064906120300293
  - -0.16238094866275787
  - -0.10837149620056152
  - -0.10466861724853516
  - -0.09149312973022461
  - -0.09895896911621094
  - -0.09620285034179688
  - -0.10293340682983398
  - -0.10519218444824219
  - -0.10437870025634766
  - -0.10511589050292969
  - -0.07555076479911804
  - -0.11135482788085938
  - -0.10540127754211426
  - -0.11218643188476562
  - -0.09751510620117188
  - -0.10227584838867188
  - -0.10766172409057617
  - -0.10476946830749512
  - -0.09680366516113281
  - -0.10370302200317383
  - -0.10941362380981445
  - -0.10598421096801758
  - -0.10422229766845703
  - -0.11265493184328079
- - -0.10857343673706055
  - -0.1061563491821289
  - -0.10875105857849121
  - -0.10391712188720703
  - -0.10229063034057617
  - -0.10556268692016602
  - -0.11435222625732422
  - -0.10296106338500977
  - -0.10505056381225586
  - -0.10480785369873047
  - -0.1064906120300293
  - -0.16238094866275787
  - -0.10837149620056152
  - -0.10466861724853516
  - -0.09149312973022461
  - -0.09895896911621094
  - -0.09620285034179688
  - -0.10293340682983398
  - -0.10519218444824219
  - -0.10437870025634766
  - -0.10511589050292969
  - -0.07555076479911804
  - -0.11135482788085938
  - -0.10540127754211426
  - -0.11218643188476562
  - -0.09751510620117188
  - -0.10227584838867188
  - -0.10766172409057617
  - -0.10476946830749512
  - -0.09680366516113281
  - -0.10370302200317383
  - -0.10941362380981445
  - -0.10598421096801758
  - -0.10422229766845703
  - -2.886678695678711
- - -0.10857343673706055
  - -0.1061563491821289
  - -0.10875105857849121
  - -0.10391712188720703
  - -0.10229063034057617
  - -0.10556268692016602
  - -0.11435222625732422
  - -0.10296106338500977
  - -0.10505056381225586
  - -0.10480785369873047
  - -0.1064906120300293
  - -0.16238094866275787
  - -0.10837149620056152
  - -0.10466861724853516
  - -0.09149312973022461
  - -0.09895896911621094
  - -0.09620285034179688
  - -0.10293340682983398
  - -0.10519218444824219
  - -0.10437870025634766
  - -0.10511589050292969
  - -0.07555076479911804
  - -0.11135482788085938
  - -0.10540127754211426
  - -0.11218643188476562
  - -0.09751510620117188
  - -0.10227584838867188
  - -0.10766172409057617
  - -0.10476946830749512
  - -0.09680366516113281
  - -0.10370302200317383
  - -0.10941362380981445
  - -0.10598421096801758
  - -0.10422229766845703
  - -2.980253219604492
- - -0.10857343673706055
  - -0.1061563491821289
  - -0.10875105857849121
  - -0.10391712188720703
  - -0.10229063034057617
  - -0.10556268692016602
  - -0.11435222625732422
  - -0.10296106338500977
  - -0.10505056381225586
  - -0.10480785369873047
  - -0.1064906120300293
  - -0.16238094866275787
  - -0.10837149620056152
  - -0.10466861724853516
  - -0.09149312973022461
  - -0.09895896911621094
  - -0.09620285034179688
  - -0.10293340682983398
  - -0.10519218444824219
  - -0.10437870025634766
  - -0.10511589050292969
  - -0.07555076479911804
  - -3.4516706466674805
  - -0.1058809757232666
  - -0.11703157424926758
  - -0.09588241577148438
  - -0.10218381881713867
  - -0.10766434669494629
  - -0.104766845703125
  - -0.09705543518066406
  - -0.10384941101074219
  - -0.10928916931152344
  - -0.10585546493530273
  - -0.10419225692749023
  - -0.11368625611066818
- - -0.10857343673706055
  - -0.1061563491821289
  - -3.5078141689300537
  - -0.10410833358764648
  - -0.10091972351074219
  - -0.10587310791015625
  - -0.11439800262451172
  - -0.1027531623840332
  - -0.10505867004394531
  - -0.1048135757446289
  - -0.10655736923217773
  - -0.16458554565906525
  - -0.10856270790100098
  - -0.10461187362670898
  - -0.09225988388061523
  - -0.0966639518737793
  - -0.0959782600402832
  - -0.10298919677734375
  - -0.1052403450012207
  - -0.10440587997436523
  - -0.10515165328979492
  - -0.07304690033197403
  - -0.11139178276062012
  - -0.10540103912353516
  - -0.11216068267822266
  - -0.09756708145141602
  - -0.10228300094604492
  - -0.10766339302062988
  - -0.10476851463317871
  - -0.0967855453491211
  - -0.10369491577148438
  - -0.10944318771362305
  - -0.10598039627075195
  - -0.10422134399414062
  - -0.11269604414701462
- - -0.10857343673706055
  - -0.1061563491821289
  - -0.10875105857849121
  - -0.10391712188720703
  - -0.10229063034057617
  - -0.10556268692016602
  - -0.11435222625732422
  - -0.10296106338500977
  - -0.10505056381225586
  - -0.10480785369873047
  - -0.1064906120300293
  - -0.16238094866275787
  - -3.539602756500244
  - -0.10579395294189453
  - -0.08959722518920898
  - -0.0983123779296875
  - -0.0958251953125
  - -0.10282087326049805
  - -0.10518026351928711
  - -0.10436010360717773
  - -0.10512781143188477
  - -0.07724328339099884
  - -0.11133408546447754
  - -0.10541057586669922
  - -0.1122126579284668
  - -0.09751129150390625
  - -0.10227203369140625
  - -0.10765981674194336
  - -0.10476994514465332
  - -0.0968327522277832
  - -0.10373544692993164
  - -0.10952901840209961
  - -0.10611772537231445
  - -0.10417795181274414
  - -0.11277559399604797
- - -0.10857343673706055
  - -0.1061563491821289
  - -0.10875105857849121
  - -0.10391712188720703
  - -0.10229063034057617
  - -0.10556268692016602
  - -0.11435222625732422
  - -0.10296106338500977
  - -0.10505056381225586
  - -0.10480785369873047
  - -0.1064906120300293
  - -0.16238094866275787
  - -0.10837149620056152
  - -0.10466861724853516
  - -0.09149312973022461
  - -0.09895896911621094
  - -0.09620285034179688
  - -0.10293340682983398
  - -0.10519218444824219
  - -0.10437870025634766
  - -0.10511589050292969
  - -0.07555076479911804
  - -0.11135482788085938
  - -0.10540127754211426
  - -0.11218643188476562
  - -0.09751510620117188
  - -0.10227584838867188
  - -3.55138897895813
  - -0.10481548309326172
  - -0.09717369079589844
  - -0.10386848449707031
  - -0.10959577560424805
  - -0.10641622543334961
  - -0.10395240783691406
  - -0.11141707003116608
- - -0.10857343673706055
  - -0.1061563491821289
  - -0.10875105857849121
  - -0.10391712188720703
  - -0.10229063034057617
  - -0.10556268692016602
  - -0.11435222625732422
  - -0.10296106338500977
  - -0.10505056381225586
  - -0.10480785369873047
  - -0.1064906120300293
  - -4.136263370513916
  - -0.1154930591583252
  - -0.11291360855102539
  - -0.08262062072753906
  - -0.1128082275390625
  - -0.09244585037231445
  - -0.10271644592285156
  - -0.10422849655151367
  - -0.10429954528808594
  - -0.10557699203491211
  - -0.0753774344921112
  - -0.11153125762939453
  - -0.10536646842956543
  - -0.11588621139526367
  - -0.09719562530517578
  - -0.10232734680175781
  - -0.1076347827911377
  - -0.10477042198181152
  - -0.09677743911743164
  - -0.1036672592163086
  - -0.10980939865112305
  - -0.10613775253295898
  - -0.1041421890258789
  - -0.1118319183588028
- - -0.10857343673706055
  - -0.1061563491821289
  - -0.10875105857849121
  - -0.10391712188720703
  - -0.10229063034057617
  - -0.10556268692016602
  - -0.11435222625732422
  - -0.10296106338500977
  - -0.10505056381225586
  - -0.10480785369873047
  - -0.1064906120300293
  - -4.433730602264404
  - -0.16437029838562012
  - -0.13604259490966797
  - -0.09429931640625
  - -0.12393760681152344
  - -0.0929708480834961
  - -0.10290241241455078
  - -0.1044154167175293
  - -0.10431146621704102
  - -0.10565567016601562
  - -0.07441116869449615
  - -0.11153507232666016
  - -0.10536694526672363
  - -0.11754894256591797
  - -0.09707260131835938
  - -0.10228538513183594
  - -0.10757064819335938
  - -0.10475301742553711
  - -0.09658479690551758
  - -0.10587596893310547
  - -0.12842178344726562
  - -0.10483217239379883
  - -0.10378646850585938
  - -0.1184617131948471
- - -0.10857343673706055
  - -0.1061563491821289
  - -0.10875105857849121
  - -0.10391712188720703
  - -0.10229063034057617
  - -0.10556268692016602
  - -0.11435222625732422
  - -0.10296106338500977
  - -0.10505056381225586
  - -0.10480785369873047
  - -0.1064906120300293
  - -4.374912738800049
  - -0.2237093448638916
  - -0.13892149925231934
  - -0.09478759765625
  - -0.12262821197509766
  - -0.09288549423217773
  - -0.10289144515991211
  - -0.10442638397216797
  - -0.10430717468261719
  - -0.10565900802612305
  - -0.07405920326709747
  - -0.11151480674743652
  - -0.10537075996398926
  - -0.11756753921508789
  - -0.09710264205932617
  - -0.10228109359741211
  - -0.10757255554199219
  - -0.1047523021697998
  - -0.09658098220825195
  - -0.10584068298339844
  - -0.12783432006835938
  - -0.10483360290527344
  - -0.10378599166870117
  - -0.11851465702056885
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Pets'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Student'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Has_Pet'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'weight'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Pets'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Pets'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Pets'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Pets'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'PetType'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Pets'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Fname'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Pets'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'LName'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'weight'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Pets'
