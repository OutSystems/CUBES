db: tests-examples/db2csv/pets_1/tables/pets_1.sqlite
inputs:
 - tests-examples/db2csv/pets_1/tables/student.csv
 - tests-examples/db2csv/pets_1/tables/has_pet.csv
output: tests-examples/db2csv/pets_1/tables/0034_dev.csv
raw_question: What is the id of the pet owned by the student whose last name is 'Smith'? 
question_index: 78 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - Smith
join_columns:
 - stuid
groupby_columns: []
functions: []
columns:
 - lname
filters:
 - '='
ieu: []
comment: |-
  SELECT T2.petid
  FROM student AS T1
  JOIN has_pet AS T2 ON T1.stuid = T2.stuid
  WHERE T1.Lname = 'Smith'

sql: |-
  SELECT T2.petid
  FROM student AS T1
  JOIN has_pet AS T2 ON T1.stuid = T2.stuid
  WHERE T1.Lname = 'Smith'
smbop_beam_join_columns:
- - stuid
- - stuid
- - stuid
- []
- []
- - stuid
- - stuid
- - stuid
- - stuid
- - stuid
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/pets_1/tables/student.csv
  - tests-examples/db2csv/pets_1/tables/has_pet.csv
- - tests-examples/db2csv/pets_1/tables/student.csv
  - tests-examples/db2csv/pets_1/tables/has_pet.csv
- - tests-examples/db2csv/pets_1/tables/student.csv
  - tests-examples/db2csv/pets_1/tables/has_pet.csv
- - tests-examples/db2csv/pets_1/tables/student.csv
  - tests-examples/db2csv/pets_1/tables/has_pet.csv
- - tests-examples/db2csv/pets_1/tables/student.csv
  - tests-examples/db2csv/pets_1/tables/has_pet.csv
- - tests-examples/db2csv/pets_1/tables/student.csv
  - tests-examples/db2csv/pets_1/tables/has_pet.csv
- - tests-examples/db2csv/pets_1/tables/student.csv
  - tests-examples/db2csv/pets_1/tables/has_pet.csv
- - tests-examples/db2csv/pets_1/tables/student.csv
  - tests-examples/db2csv/pets_1/tables/has_pet.csv
- - tests-examples/db2csv/pets_1/tables/student.csv
  - tests-examples/db2csv/pets_1/tables/has_pet.csv
- - tests-examples/db2csv/pets_1/tables/student.csv
  - tests-examples/db2csv/pets_1/tables/has_pet.csv
smbop_beam_constants:
- - Smith
- - Smith
- - Smith
- - Smith
- - Smith
- - Smith
- - Smith
- - Smith
- - Smith
- - Smith
smbop_beam_functions:
- []
- []
- []
- []
- []
- - count
- []
- []
- []
- []
smbop_beam_columns:
- - lname
- - lname
- - lname
- - lname
- - lname
- - lname
- - lname
- - lname
- - lname
- - lname
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- - intersect
- []
- - union
  - intersect
  - union
smbop_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
smbop_beam_inferred_code:
  - SELECT has_pet.petid FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith'
  - SELECT has_pet.petid FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith'
  - SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith'
  - SELECT has_pet.petid FROM has_pet, student WHERE has_pet.stuid = student.stuid OR student.lname = 'Smith'
  - SELECT has_pet.petid FROM student, has_pet WHERE has_pet.stuid = student.stuid OR student.lname = 'Smith'
  - SELECT COUNT( student.lname ) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith'
  - SELECT DISTINCT student.lname FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith'
  - SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith' INTERSECT SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith'
  - SELECT student.lname FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith'
  - SELECT has_pet.petid FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith' UNION SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith' INTERSECT SELECT has_pet.petid FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith' UNION SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith'
smbop_beam_inferred_code_w_terminals:
  - SELECT has_pet.petid FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith'
  - SELECT has_pet.petid FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith'
  - SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith'
  - SELECT has_pet.petid FROM has_pet, student WHERE has_pet.stuid = student.stuid OR student.lname = 'Smith'
  - SELECT has_pet.petid FROM student, has_pet WHERE has_pet.stuid = student.stuid OR student.lname = 'Smith'
  - SELECT COUNT( student.lname ) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith'
  - SELECT DISTINCT student.lname FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith'
  - SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith' INTERSECT SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith'
  - SELECT student.lname FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith'
  - SELECT has_pet.petid FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith' UNION SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith' INTERSECT SELECT has_pet.petid FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith' UNION SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith'
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- - petid
  - stuid
- - petid
  - stuid
- - petid
  - stuid
- - petid
  - stuid
- - petid
  - stuid
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/pets_1/tables/student.csv
  - tests-examples/db2csv/pets_1/tables/has_pet.csv
  - tests-examples/db2csv/pets_1/tables/pets.csv
- - tests-examples/db2csv/pets_1/tables/student.csv
  - tests-examples/db2csv/pets_1/tables/has_pet.csv
  - tests-examples/db2csv/pets_1/tables/pets.csv
- - tests-examples/db2csv/pets_1/tables/student.csv
  - tests-examples/db2csv/pets_1/tables/has_pet.csv
  - tests-examples/db2csv/pets_1/tables/pets.csv
- - tests-examples/db2csv/pets_1/tables/student.csv
  - tests-examples/db2csv/pets_1/tables/has_pet.csv
  - tests-examples/db2csv/pets_1/tables/pets.csv
- - tests-examples/db2csv/pets_1/tables/student.csv
  - tests-examples/db2csv/pets_1/tables/has_pet.csv
  - tests-examples/db2csv/pets_1/tables/pets.csv
ratsql_beam_constants:
- - Smith
- - Smith
- - Smith
- - Smith
- - Smith
- - Smith
  - '1'
ratsql_beam_functions:
- []
- []
- []
- []
- []
ratsql_beam_columns:
- - lname
- - lname
- - lname
- - lname
- - lname
ratsql_beam_ieu:
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Pets.PetType FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'terminal'
  - SELECT Has_Pet.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'terminal'
  - SELECT Pets.pet_age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'terminal'
  - SELECT Pets.PetType FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE DISTINCT Student.LName = 'terminal'
  - SELECT DISTINCT Pets.PetType FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'terminal'
  - SELECT Pets.PetType FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'terminal' LIMIT 1
ratsql_beam_inferred_code_w_terminals:
  - SELECT Pets.PetType FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'Smith'
  - SELECT Has_Pet.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'Smith'
  - SELECT Pets.pet_age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'Smith'
  - SELECT Pets.PetType FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE DISTINCT Student.LName = 'Smith'
  - SELECT DISTINCT Pets.PetType FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'Smith'
  - SELECT Pets.PetType FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'Smith' LIMIT 1
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - True
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10361528396606445
  - -0.10439395904541016
  - -0.1062002182006836
  - -0.1040046215057373
  - -0.10155582427978516
  - -0.10227203369140625
  - -0.10468292236328125
  - -0.10193681716918945
  - -0.10426712036132812
  - -0.10456371307373047
  - -0.10432243347167969
  - -0.2692945599555969
  - -0.11179447174072266
  - -0.10498952865600586
  - -0.09428882598876953
  - -0.10442399978637695
  - -0.10057687759399414
  - -0.10150623321533203
  - -0.10389089584350586
  - -0.10443496704101562
  - -0.10546588897705078
  - -0.08782429993152618
  - -0.11117005348205566
  - -0.10604476928710938
  - -0.10426044464111328
  - -0.10144329071044922
  - -0.10289859771728516
  - -0.10702896118164062
  - -0.10499429702758789
  - -0.09543180465698242
  - -0.10481834411621094
  - -0.11974000930786133
  - -0.10627222061157227
  - -0.10467529296875
  - -0.555362343788147
  - -0.10480785369873047
  - -0.1042323112487793
  - -0.6290758848190308
  - -0.10577154159545898
  - -0.10552358627319336
  - -0.23233844339847565
- - -0.10361528396606445
  - -0.10439395904541016
  - -0.1062002182006836
  - -0.1040046215057373
  - -0.10155582427978516
  - -0.10227203369140625
  - -0.10468292236328125
  - -0.10193681716918945
  - -0.10426712036132812
  - -0.10456371307373047
  - -0.10432243347167969
  - -2.463775873184204
  - -0.11133217811584473
  - -0.1049356460571289
  - -0.09394264221191406
  - -0.10421085357666016
  - -0.10054588317871094
  - -0.1015024185180664
  - -0.10393095016479492
  - -0.10443258285522461
  - -0.10546350479125977
  - -0.08713039755821228
  - -0.11116194725036621
  - -0.10603833198547363
  - -0.10425424575805664
  - -0.10147762298583984
  - -0.10291337966918945
  - -0.10702395439147949
  - -0.10498309135437012
  - -0.0954127311706543
  - -0.10476398468017578
  - -0.11966896057128906
  - -0.1062326431274414
  - -0.10466957092285156
  - -0.5565385818481445
  - -0.10480785369873047
  - -0.10422849655151367
  - -0.6288667321205139
  - -0.10577678680419922
  - -0.10550689697265625
  - -0.23244483768939972
- - -0.10361528396606445
  - -0.10439395904541016
  - -0.1062002182006836
  - -0.1040046215057373
  - -0.10155582427978516
  - -0.10227203369140625
  - -0.10468292236328125
  - -0.10193681716918945
  - -0.10426712036132812
  - -0.10456371307373047
  - -0.10432243347167969
  - -2.8210413455963135
  - -0.11132144927978516
  - -0.10497736930847168
  - -0.09441089630126953
  - -0.10381126403808594
  - -0.10061359405517578
  - -0.10150575637817383
  - -0.1038966178894043
  - -0.1043853759765625
  - -0.10543060302734375
  - -0.09223649650812149
  - -0.11112236976623535
  - -0.10607051849365234
  - -0.10427570343017578
  - -0.101165771484375
  - -0.10290241241455078
  - -0.10703492164611816
  - -0.10498642921447754
  - -0.09540891647338867
  - -0.10475540161132812
  - -0.11991596221923828
  - -0.10625410079956055
  - -0.1046910285949707
  - -0.5564039945602417
  - -0.10480833053588867
  - -0.10422992706298828
  - -0.6288825273513794
  - -0.10577630996704102
  - -0.10550737380981445
  - -0.23279701173305511
- - -0.10361528396606445
  - -0.10439395904541016
  - -0.1062002182006836
  - -0.1040046215057373
  - -0.10155582427978516
  - -0.10227203369140625
  - -0.10468292236328125
  - -0.10193681716918945
  - -0.10426712036132812
  - -0.10456371307373047
  - -0.10432243347167969
  - -0.2692945599555969
  - -0.11179447174072266
  - -0.10498952865600586
  - -0.09428882598876953
  - -0.10442399978637695
  - -0.10057687759399414
  - -0.10150623321533203
  - -0.10389089584350586
  - -0.10443496704101562
  - -0.10546588897705078
  - -0.08782429993152618
  - -3.4477298259735107
  - -0.1058511734008789
  - -0.10454416275024414
  - -0.10169029235839844
  - -0.10298395156860352
  - -0.10701918601989746
  - -0.10497641563415527
  - -0.09554004669189453
  - -0.10457706451416016
  - -0.11993217468261719
  - -0.10611915588378906
  - -0.10465812683105469
  - -0.5632855296134949
  - -0.10480070114135742
  - -0.10422754287719727
  - -0.6283639073371887
  - -0.10580682754516602
  - -0.10550689697265625
  - -0.23291780054569244
- - -0.10361528396606445
  - -0.10439395904541016
  - -0.1062002182006836
  - -0.1040046215057373
  - -0.10155582427978516
  - -0.10227203369140625
  - -0.10468292236328125
  - -0.10193681716918945
  - -0.10426712036132812
  - -0.10456371307373047
  - -0.10432243347167969
  - -0.2692945599555969
  - -3.4661178588867188
  - -0.10513496398925781
  - -0.09480571746826172
  - -0.103759765625
  - -0.10061264038085938
  - -0.10145807266235352
  - -0.10388469696044922
  - -0.10439729690551758
  - -0.105499267578125
  - -0.0866502970457077
  - -0.11110949516296387
  - -0.1060481071472168
  - -0.10427474975585938
  - -0.10132265090942383
  - -0.10290861129760742
  - -0.10702848434448242
  - -0.10498929023742676
  - -0.09540748596191406
  - -0.10478639602661133
  - -0.11974716186523438
  - -0.1062631607055664
  - -0.10469961166381836
  - -0.555463433265686
  - -0.10480880737304688
  - -0.10422134399414062
  - -0.6287374496459961
  - -0.10576248168945312
  - -0.10545969009399414
  - -0.23284319043159485
- - -0.10361528396606445
  - -0.10439395904541016
  - -0.1062002182006836
  - -0.1040046215057373
  - -0.10155582427978516
  - -0.10227203369140625
  - -0.10468292236328125
  - -0.10193681716918945
  - -0.10426712036132812
  - -0.10456371307373047
  - -0.10432243347167969
  - -0.2692945599555969
  - -0.11179447174072266
  - -0.10498952865600586
  - -0.09428882598876953
  - -0.10442399978637695
  - -0.10057687759399414
  - -0.10150623321533203
  - -0.10389089584350586
  - -0.10443496704101562
  - -0.10546588897705078
  - -0.08782429993152618
  - -0.11117005348205566
  - -0.10604476928710938
  - -0.10426044464111328
  - -0.10144329071044922
  - -0.10289859771728516
  - -3.5595662593841553
  - -0.10473942756652832
  - -0.09496736526489258
  - -0.1046605110168457
  - -0.12386798858642578
  - -0.10624313354492188
  - -0.10477590560913086
  - -0.561211109161377
  - -0.10477638244628906
  - -0.10420560836791992
  - -0.629459023475647
  - -0.1057887077331543
  - -0.10546445846557617
  - -0.23384307324886322
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'PetType'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'LName'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Has_Pet'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Student'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Pets'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'PetID'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'LName'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Has_Pet'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Student'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Pets'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'pet_age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'LName'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Has_Pet'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Student'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Pets'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'PetType'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'LName'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Has_Pet'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Student'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Pets'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'PetType'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'LName'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Has_Pet'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Student'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Pets'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'PetType'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'LName'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Has_Pet'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Student'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'Pets'
