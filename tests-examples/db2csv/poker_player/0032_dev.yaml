db: tests-examples/db2csv/poker_player/tables/poker_player.sqlite
inputs:
 - tests-examples/db2csv/poker_player/tables/people.csv
output: tests-examples/db2csv/poker_player/tables/0032_dev.csv
raw_question: Return the nationalities for which there are two or more people. 
question_index: 678 
constants:
 - 2
groupby_columns:
 - nationality
functions:
 - count
comment: |-
  SELECT Nationality
  FROM people
  GROUP BY Nationality
  HAVING COUNT(*) >= 2

sql: |-
  SELECT Nationality
  FROM people
  GROUP BY Nationality
  HAVING COUNT(*) >= 2
smbop_beam_join_columns:
- []
- []
- []
smbop_beam_groupby_columns:
- - nationality
- - nationality
- - nationality
smbop_beam_tables:
- - tests-examples/db2csv/poker_player/tables/people.csv
- - tests-examples/db2csv/poker_player/tables/people.csv
- - tests-examples/db2csv/poker_player/tables/people.csv
smbop_beam_constants:
- - 2
- - 2
- - 2
smbop_beam_functions:
- - count
- - count
- - count
smbop_beam_columns:
- []
- []
- - 2
smbop_beam_ieu:
- []
- []
- []
smbop_beam_filters:
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT people.nationality FROM people GROUP BY people.nationality HAVING COUNT( * ) >= 2
  - SELECT 2 FROM people GROUP BY people.nationality HAVING COUNT( * ) >= 2
  - SELECT COUNT( DISTINCT 2 ) FROM people GROUP BY people.nationality HAVING COUNT( * ) >= 2
smbop_beam_inferred_code_w_terminals:
  - SELECT people.nationality FROM people GROUP BY people.nationality HAVING COUNT( * ) >= 2
  - SELECT 2 FROM people GROUP BY people.nationality HAVING COUNT( * ) >= 2
  - SELECT COUNT( DISTINCT 2 ) FROM people GROUP BY people.nationality HAVING COUNT( * ) >= 2
ratsql_beam_join_columns:
- []
- - people_id
- []
- []
- []
- []
- []
- []
ratsql_beam_groupby_columns:
- - nationality
- - nationality
- - nationality
- - nationality
- - nationality
- - nationality
- - nationality
- - nationality
ratsql_beam_tables:
- - tests-examples/db2csv/poker_player/tables/people.csv
- - tests-examples/db2csv/poker_player/tables/people.csv
  - tests-examples/db2csv/poker_player/tables/poker_player.csv
- - tests-examples/db2csv/poker_player/tables/people.csv
- - tests-examples/db2csv/poker_player/tables/people.csv
- - tests-examples/db2csv/poker_player/tables/people.csv
- - tests-examples/db2csv/poker_player/tables/people.csv
- - tests-examples/db2csv/poker_player/tables/people.csv
- - tests-examples/db2csv/poker_player/tables/people.csv
ratsql_beam_constants:
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- []
- []
- []
- []
- - people_id
- []
- - height
- - birth_date
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 'terminal'
  - SELECT people.Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality HAVING Count(*) >= 'terminal'
  - SELECT DISTINCT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 'terminal'
  - SELECT people.Nationality FROM people GROUP BY DISTINCT people.Nationality HAVING Count(*) >= 'terminal'
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(DISTINCT *) >= 'terminal'
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 'terminal' LIMIT 1
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(people.People_ID) >= 'terminal'
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) > 'terminal'
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(people.Height) >= 'terminal'
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(people.Birth_Date) >= 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 2
  - SELECT people.Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality HAVING Count(*) >= 2
  - SELECT DISTINCT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 2
  - SELECT people.Nationality FROM people GROUP BY DISTINCT people.Nationality HAVING Count(*) >= 2
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(DISTINCT *) >= 2
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 2 LIMIT 1
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(people.People_ID) >= 2
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) > 2
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(people.Height) >= 2
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(people.Birth_Date) >= 2
ratsql_beam_score_history:
- - -0.10213661193847656
  - -0.10407400131225586
  - -0.10805606842041016
  - -0.10421085357666016
  - -0.10179853439331055
  - -0.10195684432983398
  - -0.10442781448364258
  - -0.10182046890258789
  - -0.10439109802246094
  - -0.10460519790649414
  - -0.10541343688964844
  - -0.11059794574975967
  - -0.11351346969604492
  - -0.1055154800415039
  - -0.12115240097045898
  - -0.11339139938354492
  - -0.1031346321105957
  - -0.104766845703125
  - -0.10564279556274414
  - -0.12010359764099121
  - -0.11253786087036133
  - -0.10542106628417969
  - -0.07392406463623047
  - -0.10837745666503906
  - -0.102569580078125
  - -0.10580635070800781
  - -0.10777473449707031
  - -0.11498451232910156
  - -0.14339545369148254
  - -0.11081886291503906
  - -0.10634088516235352
  - -0.10304546356201172
  - -0.1033639907836914
  - -0.10753774642944336
  - -0.10535478591918945
  - -0.09679841995239258
  - -0.10422611236572266
  - -0.113555908203125
  - -0.10485029220581055
  - -0.10344839096069336
  - -0.11107788980007172
- - -0.10213661193847656
  - -0.10407400131225586
  - -0.10805606842041016
  - -0.10421085357666016
  - -0.10179853439331055
  - -0.10195684432983398
  - -0.10442781448364258
  - -0.10182046890258789
  - -0.10439109802246094
  - -0.10460519790649414
  - -0.10541343688964844
  - -0.11059794574975967
  - -0.11351346969604492
  - -0.1055154800415039
  - -0.12115240097045898
  - -0.11339139938354492
  - -0.1031346321105957
  - -0.104766845703125
  - -0.10564279556274414
  - -0.12010359764099121
  - -0.11253786087036133
  - -0.10542106628417969
  - -0.07392406463623047
  - -0.10837745666503906
  - -0.102569580078125
  - -0.10580635070800781
  - -0.10777473449707031
  - -0.11498451232910156
  - -0.14339545369148254
  - -0.11081886291503906
  - -0.10634088516235352
  - -0.10304546356201172
  - -0.1033639907836914
  - -0.10753774642944336
  - -0.10535478591918945
  - -0.09679841995239258
  - -0.10422611236572266
  - -0.113555908203125
  - -0.10485029220581055
  - -0.10344839096069336
  - -2.252548933029175
- - -0.10213661193847656
  - -0.10407400131225586
  - -0.10805606842041016
  - -0.10421085357666016
  - -0.10179853439331055
  - -0.10195684432983398
  - -0.10442781448364258
  - -0.10182046890258789
  - -0.10439109802246094
  - -0.10460519790649414
  - -0.10541343688964844
  - -0.11059794574975967
  - -3.4309353828430176
  - -0.10394477844238281
  - -0.12012958526611328
  - -0.11330986022949219
  - -0.10281085968017578
  - -0.10471296310424805
  - -0.10574007034301758
  - -0.12073759734630585
  - -0.11252570152282715
  - -0.10542011260986328
  - -0.07328319549560547
  - -0.1080160140991211
  - -0.10250568389892578
  - -0.10578060150146484
  - -0.10800552368164062
  - -0.11499834060668945
  - -0.14331798255443573
  - -0.11081218719482422
  - -0.10633707046508789
  - -0.10308551788330078
  - -0.10338020324707031
  - -0.10753417015075684
  - -0.10535359382629395
  - -0.09682464599609375
  - -0.10424041748046875
  - -0.11355257034301758
  - -0.10486173629760742
  - -0.10346078872680664
  - -0.11116589605808258
- - -0.10213661193847656
  - -0.10407400131225586
  - -0.10805606842041016
  - -0.10421085357666016
  - -0.10179853439331055
  - -0.10195684432983398
  - -0.10442781448364258
  - -0.10182046890258789
  - -0.10439109802246094
  - -0.10460519790649414
  - -0.10541343688964844
  - -0.11059794574975967
  - -0.11351346969604492
  - -0.1055154800415039
  - -0.12115240097045898
  - -0.11339139938354492
  - -0.1031346321105957
  - -0.104766845703125
  - -0.10564279556274414
  - -0.12010359764099121
  - -3.436683416366577
  - -0.10494446754455566
  - -0.08066797256469727
  - -0.10560131072998047
  - -0.10351085662841797
  - -0.10582160949707031
  - -0.10778427124023438
  - -0.1147150993347168
  - -0.1422290951013565
  - -0.11078858375549316
  - -0.10633277893066406
  - -0.10344266891479492
  - -0.10340309143066406
  - -0.10749268531799316
  - -0.1053619384765625
  - -0.09682703018188477
  - -0.10421895980834961
  - -0.1136326789855957
  - -0.10486268997192383
  - -0.10346269607543945
  - -0.11120375990867615
- - -0.10213661193847656
  - -0.10407400131225586
  - -0.10805606842041016
  - -0.10421085357666016
  - -0.10179853439331055
  - -0.10195684432983398
  - -0.10442781448364258
  - -0.10182046890258789
  - -0.10439109802246094
  - -0.10460519790649414
  - -0.10541343688964844
  - -0.11059794574975967
  - -0.11351346969604492
  - -0.1055154800415039
  - -0.12115240097045898
  - -0.11339139938354492
  - -0.1031346321105957
  - -0.104766845703125
  - -0.10564279556274414
  - -0.12010359764099121
  - -0.11253786087036133
  - -0.10542106628417969
  - -0.07392406463623047
  - -0.10837745666503906
  - -0.102569580078125
  - -0.10580635070800781
  - -0.10777473449707031
  - -0.11498451232910156
  - -0.14339545369148254
  - -3.472784996032715
  - -0.10608267784118652
  - -0.1009531021118164
  - -0.10379409790039062
  - -0.10752439498901367
  - -0.1053307056427002
  - -0.09635496139526367
  - -0.10424423217773438
  - -0.11361503601074219
  - -0.1048269271850586
  - -0.1034703254699707
  - -0.1111527755856514
- - -0.10213661193847656
  - -0.10407400131225586
  - -0.10805606842041016
  - -0.10421085357666016
  - -0.10179853439331055
  - -0.10195684432983398
  - -0.10442781448364258
  - -0.10182046890258789
  - -0.10439109802246094
  - -0.10460519790649414
  - -0.10541343688964844
  - -0.11059794574975967
  - -0.11351346969604492
  - -0.1055154800415039
  - -0.12115240097045898
  - -0.11339139938354492
  - -0.1031346321105957
  - -0.104766845703125
  - -0.10564279556274414
  - -0.12010359764099121
  - -0.11253786087036133
  - -0.10542106628417969
  - -0.07392406463623047
  - -0.10837745666503906
  - -0.102569580078125
  - -0.10580635070800781
  - -0.10777473449707031
  - -0.11498451232910156
  - -0.14339545369148254
  - -0.11081886291503906
  - -0.10634088516235352
  - -0.10304546356201172
  - -0.1033639907836914
  - -3.5467305183410645
  - -0.10520076751708984
  - -0.09760761260986328
  - -0.10419464111328125
  - -0.11321878433227539
  - -0.10491037368774414
  - -0.10352754592895508
  - -0.11235985904932022
- - -0.10213661193847656
  - -0.10407400131225586
  - -0.10805606842041016
  - -0.10421085357666016
  - -0.10179853439331055
  - -0.10195684432983398
  - -0.10442781448364258
  - -0.10182046890258789
  - -0.10439109802246094
  - -0.10460519790649414
  - -0.10541343688964844
  - -0.11059794574975967
  - -0.11351346969604492
  - -0.1055154800415039
  - -0.12115240097045898
  - -0.11339139938354492
  - -0.1031346321105957
  - -0.104766845703125
  - -0.10564279556274414
  - -0.12010359764099121
  - -0.11253786087036133
  - -0.10542106628417969
  - -0.07392406463623047
  - -0.10837745666503906
  - -0.102569580078125
  - -0.10580635070800781
  - -0.10777473449707031
  - -0.11498451232910156
  - -4.127046585083008
  - -0.11020469665527344
  - -0.10605120658874512
  - -0.10236454010009766
  - -0.10314083099365234
  - -0.10751843452453613
  - -0.10530424118041992
  - -0.09667253494262695
  - -0.10433292388916016
  - -0.11369132995605469
  - -0.10484933853149414
  - -0.1035470962524414
  - -0.10979065299034119
- - -0.10213661193847656
  - -0.10407400131225586
  - -0.10805606842041016
  - -0.10421085357666016
  - -0.10179853439331055
  - -0.10195684432983398
  - -0.10442781448364258
  - -0.10182046890258789
  - -0.10439109802246094
  - -0.10460519790649414
  - -0.10541343688964844
  - -0.11059794574975967
  - -0.11351346969604492
  - -0.1055154800415039
  - -0.12115240097045898
  - -0.11339139938354492
  - -0.1031346321105957
  - -0.104766845703125
  - -0.10564279556274414
  - -0.12010359764099121
  - -0.11253786087036133
  - -0.10542106628417969
  - -4.14404296875
  - -0.10668134689331055
  - -0.10228443145751953
  - -0.1048283576965332
  - -0.10564994812011719
  - -0.1184086799621582
  - -0.1534608006477356
  - -0.11052799224853516
  - -0.1063241958618164
  - -0.10411739349365234
  - -0.10367059707641602
  - -0.10746645927429199
  - -0.10529184341430664
  - -0.09739017486572266
  - -0.10491514205932617
  - -0.11332416534423828
  - -0.10489654541015625
  - -0.10354995727539062
  - -0.10921528935432434
- - -0.10213661193847656
  - -0.10407400131225586
  - -0.10805606842041016
  - -0.10421085357666016
  - -0.10179853439331055
  - -0.10195684432983398
  - -0.10442781448364258
  - -0.10182046890258789
  - -0.10439109802246094
  - -0.10460519790649414
  - -0.10541343688964844
  - -0.11059794574975967
  - -0.11351346969604492
  - -0.1055154800415039
  - -0.12115240097045898
  - -0.11339139938354492
  - -0.1031346321105957
  - -0.104766845703125
  - -0.10564279556274414
  - -0.12010359764099121
  - -0.11253786087036133
  - -0.10542106628417969
  - -0.07392406463623047
  - -0.10837745666503906
  - -0.102569580078125
  - -0.10580635070800781
  - -0.10777473449707031
  - -0.11498451232910156
  - -4.374943733215332
  - -0.11348271369934082
  - -0.10588765144348145
  - -0.10202789306640625
  - -0.10287237167358398
  - -0.10747694969177246
  - -0.10530781745910645
  - -0.09654808044433594
  - -0.10452556610107422
  - -0.1140604019165039
  - -0.10487747192382812
  - -0.10356569290161133
  - -0.10979876667261124
- - -0.10213661193847656
  - -0.10407400131225586
  - -0.10805606842041016
  - -0.10421085357666016
  - -0.10179853439331055
  - -0.10195684432983398
  - -0.10442781448364258
  - -0.10182046890258789
  - -0.10439109802246094
  - -0.10460519790649414
  - -0.10541343688964844
  - -0.11059794574975967
  - -0.11351346969604492
  - -0.1055154800415039
  - -0.12115240097045898
  - -0.11339139938354492
  - -0.1031346321105957
  - -0.104766845703125
  - -0.10564279556274414
  - -0.12010359764099121
  - -0.11253786087036133
  - -0.10542106628417969
  - -0.07392406463623047
  - -0.10837745666503906
  - -0.102569580078125
  - -0.10580635070800781
  - -0.10777473449707031
  - -0.11498451232910156
  - -4.3945088386535645
  - -0.11700606346130371
  - -0.10592055320739746
  - -0.10205221176147461
  - -0.10289764404296875
  - -0.10747051239013672
  - -0.10532021522521973
  - -0.09658527374267578
  - -0.10443353652954102
  - -0.1140127182006836
  - -0.10486602783203125
  - -0.1035623550415039
  - -0.1099056825041771
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'people'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'poker_player'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'people'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'True'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'people'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'people'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'people'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('cond', 'Between')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'people'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'people'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('cond', 'In')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'people'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('cond', 'Gt')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'people'
