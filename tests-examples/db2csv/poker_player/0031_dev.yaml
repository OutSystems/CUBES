db: tests-examples/db2csv/poker_player/tables/poker_player.sqlite
inputs:
 - tests-examples/db2csv/poker_player/tables/people.csv
output: tests-examples/db2csv/poker_player/tables/0031_dev.csv
raw_question: What are the nationalities that are shared by at least two people? 
question_index: 677 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - 2
join_columns: []
groupby_columns:
 - nationality
functions:
 - count
columns: []
filters: []
ieu: []
comment: |-
  SELECT Nationality
  FROM people
  GROUP BY Nationality
  HAVING COUNT(*) >= 2

sql: |-
  SELECT Nationality
  FROM people
  GROUP BY Nationality
  HAVING COUNT(*) >= 2
smbop_beam_join_columns:
- []
- []
- []
smbop_beam_groupby_columns:
- - nationality
- - nationality
- []
smbop_beam_tables:
- - tests-examples/db2csv/poker_player/tables/people.csv
- - tests-examples/db2csv/poker_player/tables/people.csv
- - tests-examples/db2csv/poker_player/tables/people.csv
smbop_beam_constants:
- - 2
- - 2
- - 2
smbop_beam_functions:
- - count
- - count
- []
smbop_beam_columns:
- []
- []
- []
smbop_beam_ieu:
- []
- []
- []
smbop_beam_filters:
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT people.nationality FROM people GROUP BY people.nationality HAVING COUNT( * ) >= 2
  - SELECT 2 FROM people GROUP BY people.nationality HAVING COUNT( * ) >= 2
  - SELECT people.nationality FROM people
smbop_beam_inferred_code_w_terminals:
  - SELECT people.nationality FROM people GROUP BY people.nationality HAVING COUNT( * ) >= 2
  - SELECT 2 FROM people GROUP BY people.nationality HAVING COUNT( * ) >= 2
  - SELECT people.nationality FROM people
smbop_beam_has_limit:
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
ratsql_beam_join_columns:
- []
- - people_id
- []
- []
- []
- []
- []
- - people_id
ratsql_beam_groupby_columns:
- - nationality
- - nationality
- - nationality
- - nationality
- - nationality
- - nationality
- - nationality
- - nationality
ratsql_beam_tables:
- - tests-examples/db2csv/poker_player/tables/people.csv
- - tests-examples/db2csv/poker_player/tables/poker_player.csv
  - tests-examples/db2csv/poker_player/tables/people.csv
- - tests-examples/db2csv/poker_player/tables/people.csv
- - tests-examples/db2csv/poker_player/tables/people.csv
- - tests-examples/db2csv/poker_player/tables/people.csv
- - tests-examples/db2csv/poker_player/tables/people.csv
- - tests-examples/db2csv/poker_player/tables/people.csv
- - tests-examples/db2csv/poker_player/tables/poker_player.csv
  - tests-examples/db2csv/poker_player/tables/people.csv
ratsql_beam_constants:
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
  - '1'
- - 2
- - 2
- - 2
- - 2
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- []
- []
- []
- []
- - people_id
- - birth_date
- - height
- - best_finish
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 'terminal'
  - SELECT people.Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality HAVING Count(*) >= 'terminal'
  - SELECT DISTINCT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 'terminal'
  - SELECT people.Nationality FROM people GROUP BY DISTINCT people.Nationality HAVING Count(*) >= 'terminal'
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(DISTINCT *) >= 'terminal'
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 'terminal' LIMIT 1
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(people.People_ID) >= 'terminal'
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(people.Birth_Date) >= 'terminal'
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(people.Height) >= 'terminal'
  - SELECT people.Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality HAVING Count(poker_player.Best_Finish) >= 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 2
  - SELECT people.Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality HAVING Count(*) >= 2
  - SELECT DISTINCT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 2
  - SELECT people.Nationality FROM people GROUP BY DISTINCT people.Nationality HAVING Count(*) >= 2
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(DISTINCT *) >= 2
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 2 LIMIT 1
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(people.People_ID) >= '2'
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(people.Birth_Date) >= '2'
  - SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(people.Height) >= '2'
  - SELECT people.Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY people.Nationality HAVING Count(poker_player.Best_Finish) >= '2'
ratsql_beam_has_limit:
  - False
  - False
  - False
  - True
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10220098495483398
  - -0.10497331619262695
  - -0.10744571685791016
  - -0.10435223579406738
  - -0.10256576538085938
  - -0.10239410400390625
  - -0.10475969314575195
  - -0.10226821899414062
  - -0.10446453094482422
  - -0.10464811325073242
  - -0.10491752624511719
  - -0.10139968991279602
  - -0.11336398124694824
  - -0.10527324676513672
  - -0.11582803726196289
  - -0.12998294830322266
  - -0.10471630096435547
  - -0.10564374923706055
  - -0.10552692413330078
  - -0.0912303477525711
  - -0.11243081092834473
  - -0.1055765151977539
  - -0.08674287796020508
  - -0.1027226448059082
  - -0.1023406982421875
  - -0.10526180267333984
  - -0.10760211944580078
  - -0.11200904846191406
  - -0.1546359807252884
  - -0.11080050468444824
  - -0.10632181167602539
  - -0.10257482528686523
  - -0.10257291793823242
  - -0.10753130912780762
  - -0.1054069995880127
  - -0.09719991683959961
  - -0.10440921783447266
  - -0.11244487762451172
  - -0.10514974594116211
  - -0.1032419204711914
  - -0.12382355332374573
- - -0.10220098495483398
  - -0.10497331619262695
  - -0.10744571685791016
  - -0.10435223579406738
  - -0.10256576538085938
  - -0.10239410400390625
  - -0.10475969314575195
  - -0.10226821899414062
  - -0.10446453094482422
  - -0.10464811325073242
  - -0.10491752624511719
  - -0.10139968991279602
  - -0.11336398124694824
  - -0.10527324676513672
  - -0.11582803726196289
  - -0.12998294830322266
  - -0.10471630096435547
  - -0.10564374923706055
  - -0.10552692413330078
  - -0.0912303477525711
  - -0.11243081092834473
  - -0.1055765151977539
  - -0.08674287796020508
  - -0.1027226448059082
  - -0.1023406982421875
  - -0.10526180267333984
  - -0.10760211944580078
  - -0.11200904846191406
  - -0.1546359807252884
  - -0.11080050468444824
  - -0.10632181167602539
  - -0.10257482528686523
  - -0.10257291793823242
  - -0.10753130912780762
  - -0.1054069995880127
  - -0.09719991683959961
  - -0.10440921783447266
  - -0.11244487762451172
  - -0.10514974594116211
  - -0.1032419204711914
  - -2.1501705646514893
- - -0.10220098495483398
  - -0.10497331619262695
  - -0.10744571685791016
  - -0.10435223579406738
  - -0.10256576538085938
  - -0.10239410400390625
  - -0.10475969314575195
  - -0.10226821899414062
  - -0.10446453094482422
  - -0.10464811325073242
  - -0.10491752624511719
  - -0.10139968991279602
  - -3.4375014305114746
  - -0.10211014747619629
  - -0.11726570129394531
  - -0.1290874481201172
  - -0.10498571395874023
  - -0.10587072372436523
  - -0.10553503036499023
  - -0.09360405057668686
  - -0.11225366592407227
  - -0.10558295249938965
  - -0.08983039855957031
  - -0.10303163528442383
  - -0.10234975814819336
  - -0.10529184341430664
  - -0.10786962509155273
  - -0.11213111877441406
  - -0.15437234938144684
  - -0.11079001426696777
  - -0.10631513595581055
  - -0.10253381729125977
  - -0.10263919830322266
  - -0.10754084587097168
  - -0.10540652275085449
  - -0.09718561172485352
  - -0.1044163703918457
  - -0.11242485046386719
  - -0.10514545440673828
  - -0.10324668884277344
  - -0.12382292002439499
- - -0.10220098495483398
  - -0.10497331619262695
  - -0.10744571685791016
  - -0.10435223579406738
  - -0.10256576538085938
  - -0.10239410400390625
  - -0.10475969314575195
  - -0.10226821899414062
  - -0.10446453094482422
  - -0.10464811325073242
  - -0.10491752624511719
  - -0.10139968991279602
  - -0.11336398124694824
  - -0.10527324676513672
  - -0.11582803726196289
  - -0.12998294830322266
  - -0.10471630096435547
  - -0.10564374923706055
  - -0.10552692413330078
  - -0.0912303477525711
  - -3.43835186958313
  - -0.10514664649963379
  - -0.09459972381591797
  - -0.1059255599975586
  - -0.1023397445678711
  - -0.10536479949951172
  - -0.10751008987426758
  - -0.11169958114624023
  - -0.15361733734607697
  - -0.11072754859924316
  - -0.1063079833984375
  - -0.10286283493041992
  - -0.1025705337524414
  - -0.10752487182617188
  - -0.10540509223937988
  - -0.09731006622314453
  - -0.10441255569458008
  - -0.11249828338623047
  - -0.10517597198486328
  - -0.10323858261108398
  - -0.12381333857774734
- - -0.10220098495483398
  - -0.10497331619262695
  - -0.10744571685791016
  - -0.10435223579406738
  - -0.10256576538085938
  - -0.10239410400390625
  - -0.10475969314575195
  - -0.10226821899414062
  - -0.10446453094482422
  - -0.10464811325073242
  - -0.10491752624511719
  - -0.10139968991279602
  - -0.11336398124694824
  - -0.10527324676513672
  - -0.11582803726196289
  - -0.12998294830322266
  - -0.10471630096435547
  - -0.10564374923706055
  - -0.10552692413330078
  - -0.0912303477525711
  - -0.11243081092834473
  - -0.1055765151977539
  - -0.08674287796020508
  - -0.1027226448059082
  - -0.1023406982421875
  - -0.10526180267333984
  - -0.10760211944580078
  - -0.11200904846191406
  - -0.1546359807252884
  - -3.4693000316619873
  - -0.10609817504882812
  - -0.10094261169433594
  - -0.10286426544189453
  - -0.10746622085571289
  - -0.1053922176361084
  - -0.09696531295776367
  - -0.10454034805297852
  - -0.11256790161132812
  - -0.10513544082641602
  - -0.1032719612121582
  - -0.1235625222325325
- - -0.10220098495483398
  - -0.10497331619262695
  - -0.10744571685791016
  - -0.10435223579406738
  - -0.10256576538085938
  - -0.10239410400390625
  - -0.10475969314575195
  - -0.10226821899414062
  - -0.10446453094482422
  - -0.10464811325073242
  - -0.10491752624511719
  - -0.10139968991279602
  - -0.11336398124694824
  - -0.10527324676513672
  - -0.11582803726196289
  - -0.12998294830322266
  - -0.10471630096435547
  - -0.10564374923706055
  - -0.10552692413330078
  - -0.0912303477525711
  - -0.11243081092834473
  - -0.1055765151977539
  - -0.08674287796020508
  - -0.1027226448059082
  - -0.1023406982421875
  - -0.10526180267333984
  - -0.10760211944580078
  - -0.11200904846191406
  - -0.1546359807252884
  - -0.11080050468444824
  - -0.10632181167602539
  - -0.10257482528686523
  - -0.10257291793823242
  - -3.546782970428467
  - -0.10538768768310547
  - -0.09772348403930664
  - -0.1043553352355957
  - -0.11261177062988281
  - -0.10522603988647461
  - -0.10321521759033203
  - -0.12426877021789551
- - -0.10220098495483398
  - -0.10497331619262695
  - -0.10744571685791016
  - -0.10435223579406738
  - -0.10256576538085938
  - -0.10239410400390625
  - -0.10475969314575195
  - -0.10226821899414062
  - -0.10446453094482422
  - -0.10464811325073242
  - -0.10491752624511719
  - -0.10139968991279602
  - -0.11336398124694824
  - -0.10527324676513672
  - -0.11582803726196289
  - -0.12998294830322266
  - -0.10471630096435547
  - -0.10564374923706055
  - -0.10552692413330078
  - -0.0912303477525711
  - -0.11243081092834473
  - -0.1055765151977539
  - -0.08674287796020508
  - -0.1027226448059082
  - -0.1023406982421875
  - -0.10526180267333984
  - -0.10760211944580078
  - -0.11200904846191406
  - -4.1677045822143555
  - -0.11257386207580566
  - -0.10602450370788574
  - -0.0993337631225586
  - -0.10192632675170898
  - -0.10745835304260254
  - -0.10533404350280762
  - -0.09721851348876953
  - -0.10464048385620117
  - -0.1128382682800293
  - -0.10531044006347656
  - -0.1033473014831543
  - -0.11964668333530426
- - -0.10220098495483398
  - -0.10497331619262695
  - -0.10744571685791016
  - -0.10435223579406738
  - -0.10256576538085938
  - -0.10239410400390625
  - -0.10475969314575195
  - -0.10226821899414062
  - -0.10446453094482422
  - -0.10464811325073242
  - -0.10491752624511719
  - -0.10139968991279602
  - -0.11336398124694824
  - -0.10527324676513672
  - -0.11582803726196289
  - -0.12998294830322266
  - -0.10471630096435547
  - -0.10564374923706055
  - -0.10552692413330078
  - -0.0912303477525711
  - -0.11243081092834473
  - -0.1055765151977539
  - -0.08674287796020508
  - -0.1027226448059082
  - -0.1023406982421875
  - -0.10526180267333984
  - -0.10760211944580078
  - -0.11200904846191406
  - -4.281667232513428
  - -0.14751863479614258
  - -0.10595369338989258
  - -0.09965324401855469
  - -0.10178804397583008
  - -0.10748696327209473
  - -0.10534858703613281
  - -0.09721660614013672
  - -0.1045989990234375
  - -0.11283254623413086
  - -0.10531854629516602
  - -0.10332059860229492
  - -0.12042239308357239
- - -0.10220098495483398
  - -0.10497331619262695
  - -0.10744571685791016
  - -0.10435223579406738
  - -0.10256576538085938
  - -0.10239410400390625
  - -0.10475969314575195
  - -0.10226821899414062
  - -0.10446453094482422
  - -0.10464811325073242
  - -0.10491752624511719
  - -0.10139968991279602
  - -0.11336398124694824
  - -0.10527324676513672
  - -0.11582803726196289
  - -0.12998294830322266
  - -0.10471630096435547
  - -0.10564374923706055
  - -0.10552692413330078
  - -0.0912303477525711
  - -0.11243081092834473
  - -0.1055765151977539
  - -0.08674287796020508
  - -0.1027226448059082
  - -0.1023406982421875
  - -0.10526180267333984
  - -0.10760211944580078
  - -0.11200904846191406
  - -4.3237810134887695
  - -0.1193075180053711
  - -0.10593128204345703
  - -0.09938669204711914
  - -0.10198068618774414
  - -0.10749053955078125
  - -0.10535383224487305
  - -0.09712409973144531
  - -0.10459041595458984
  - -0.11285972595214844
  - -0.1053018569946289
  - -0.10330867767333984
  - -0.12074583768844604
- - -0.10220098495483398
  - -0.10497331619262695
  - -0.10744571685791016
  - -0.10435223579406738
  - -0.10256576538085938
  - -0.10239410400390625
  - -0.10475969314575195
  - -0.10226821899414062
  - -0.10446453094482422
  - -0.10464811325073242
  - -0.10491752624511719
  - -0.10139968991279602
  - -0.11336398124694824
  - -0.10527324676513672
  - -0.11582803726196289
  - -0.12998294830322266
  - -0.10471630096435547
  - -0.10564374923706055
  - -0.10552692413330078
  - -0.0912303477525711
  - -0.11243081092834473
  - -0.1055765151977539
  - -0.08674287796020508
  - -0.1027226448059082
  - -0.1023406982421875
  - -0.10526180267333984
  - -0.10760211944580078
  - -0.11200904846191406
  - -4.359947681427002
  - -0.16042470932006836
  - -0.10588550567626953
  - -0.09895181655883789
  - -0.10262346267700195
  - -0.10734820365905762
  - -0.10535955429077148
  - -0.0970315933227539
  - -0.10457801818847656
  - -0.11339044570922852
  - -0.10505914688110352
  - -0.10334157943725586
  - -0.11969724297523499
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'people'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'poker_player'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'people'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'True'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'people'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'people'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'people'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('cond', 'Between')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'people'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('cond', 'Gt')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'people'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('cond', 'In')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'people'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Nationality'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'NoneAggOp')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'people'
