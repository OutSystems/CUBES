db: tests-examples/db2csv/concert_singer/tables/concert_singer.sqlite
inputs:
 - tests-examples/db2csv/concert_singer/tables/singer.csv
output: tests-examples/db2csv/concert_singer/tables/0013_dev.csv
raw_question: List all song names by singers above the average age. 
question_index: 12 
functions:
 - avg
columns:
 - age
filters:
 - '>'
comment: |-
  SELECT song_name
  FROM singer
  WHERE age >
      (SELECT avg(age)
       FROM singer)

sql: |-
  SELECT song_name
  FROM singer
  WHERE age >
      (SELECT avg(age)
       FROM singer)
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- - age
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
smbop_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_functions:
- - avg
- - avg
- - avg
- - avg
- - avg
- - avg
- - avg
- - avg
- []
- []
smbop_beam_columns:
- - age
- - age
- - age
  - song_name
- - age
- - age
  - song_name
- - age
- - age
  - song_name
- - age
- []
- - age
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '>'
- []
- - '>'
- []
- - '>'
- - '>'
- - '!='
- []
- []
- - '>'
smbop_beam_inferred_code:
  - SELECT singer.song_name FROM singer WHERE singer.age > (SELECT AVG( singer.age ) FROM singer)
  - SELECT AVG( singer.age ) FROM singer
  - SELECT singer.song_name FROM singer WHERE singer.song_name > (SELECT AVG( singer.age ) FROM singer)
  - SELECT singer.song_name FROM singer WHERE singer.age NOT IN (SELECT AVG( singer.age ) FROM singer)
  - SELECT AVG( singer.song_name ) FROM singer WHERE singer.age > (SELECT AVG( singer.age ) FROM singer)
  - SELECT singer.song_name FROM singer WHERE singer.age > (SELECT AVG( singer.age ) FROM singer) ORDER BY singer.song_name DESC
  - SELECT singer.song_name FROM singer WHERE singer.song_name != (SELECT AVG( singer.age ) FROM singer)
  - SELECT AVG( singer.age ) FROM singer GROUP BY singer.age
  - SELECT singer.age FROM singer
  - SELECT singer.song_name FROM singer WHERE singer.age > singer.age
smbop_beam_inferred_code_w_terminals:
  - SELECT singer.song_name FROM singer WHERE singer.age > (SELECT AVG( singer.age ) FROM singer)
  - SELECT AVG( singer.age ) FROM singer
  - SELECT singer.song_name FROM singer WHERE singer.song_name > (SELECT AVG( singer.age ) FROM singer)
  - SELECT singer.song_name FROM singer WHERE singer.age NOT IN (SELECT AVG( singer.age ) FROM singer)
  - SELECT AVG( singer.song_name ) FROM singer WHERE singer.age > (SELECT AVG( singer.age ) FROM singer)
  - SELECT singer.song_name FROM singer WHERE singer.age > (SELECT AVG( singer.age ) FROM singer) ORDER BY singer.song_name DESC
  - SELECT singer.song_name FROM singer WHERE singer.song_name != (SELECT AVG( singer.age ) FROM singer)
  - SELECT AVG( singer.age ) FROM singer GROUP BY singer.age
  - SELECT singer.age FROM singer
  - SELECT singer.song_name FROM singer WHERE singer.age > singer.age
ratsql_beam_join_columns:
- []
- []
- - singer_id
  - concert_id
- - singer_id
  - stadium_id
  - concert_id
- - singer_id
- []
- - singer_id
  - stadium_id
  - concert_id
- []
- []
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
ratsql_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_functions:
- - avg
- - avg
- - avg
- - avg
- - avg
- - avg
- - avg
- - avg
- - avg
ratsql_beam_columns:
- - age
- - age
- - age
- - age
- - age
- - age
- - age
- - age
- - age
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
ratsql_beam_inferred_code:
  - SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
  - SELECT DISTINCT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
  - SELECT singer.Song_Name FROM singer JOIN concert JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID AND singer_in_concert.concert_ID = concert.concert_ID WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
  - SELECT singer.Song_Name FROM singer WHERE DISTINCT singer.Age > (SELECT Avg(singer.Age) FROM singer)
  - SELECT singer.Song_Name FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
  - SELECT singer.Song_Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
  - SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(DISTINCT singer.Age) FROM singer)
  - SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID)
  - SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT DISTINCT Avg(singer.Age) FROM singer)
  - SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer LIMIT 1)
ratsql_beam_inferred_code_w_terminals:
  - SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
  - SELECT DISTINCT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
  - SELECT singer.Song_Name FROM singer JOIN concert JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID AND singer_in_concert.concert_ID = concert.concert_ID WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
  - SELECT singer.Song_Name FROM singer WHERE DISTINCT singer.Age > (SELECT Avg(singer.Age) FROM singer)
  - SELECT singer.Song_Name FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
  - SELECT singer.Song_Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
  - SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(DISTINCT singer.Age) FROM singer)
  - SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID)
  - SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT DISTINCT Avg(singer.Age) FROM singer)
  - SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer LIMIT 1)
ratsql_beam_score_history:
- - -0.10522985458374023
  - -0.10454511642456055
  - -0.11144351959228516
  - -0.10436463356018066
  - -0.1011052131652832
  - -0.1021723747253418
  - -0.10447072982788086
  - -0.10169219970703125
  - -0.10441160202026367
  - -0.1053318977355957
  - -0.10553216934204102
  - -0.1272561103105545
  - -0.11340451240539551
  - -0.10564470291137695
  - -0.08899688720703125
  - -0.10226154327392578
  - -0.09853887557983398
  - -0.10268163681030273
  - -0.10415792465209961
  - -0.10466766357421875
  - -0.10368919372558594
  - -0.10466058552265167
  - -0.11217021942138672
  - -0.10580134391784668
  - -0.09636163711547852
  - -0.09328556060791016
  - -0.10398626327514648
  - -0.10312938690185547
  - -0.11002039909362793
  - -0.10454344749450684
  - -0.10373783111572266
  - -0.10415077209472656
  - -0.11014223098754883
  - -0.11259889602661133
  - -0.10601329803466797
  - -0.10441970825195312
  - -0.10521507263183594
  - -0.07436159253120422
  - -0.1115720272064209
  - -0.10549235343933105
  - -0.10713052749633789
  - -0.10550165176391602
  - -0.10292720794677734
  - -0.10788297653198242
  - -0.10489702224731445
  - -0.0985260009765625
  - -0.10478925704956055
  - -0.11000728607177734
  - -0.10505485534667969
  - -0.10395574569702148
  - -0.09007341414690018
  - -0.10159540176391602
  - -0.10239505767822266
  - -0.10755300521850586
  - -0.10461902618408203
  - -0.09911203384399414
  - -0.10458707809448242
  - -0.11025190353393555
  - -0.10494661331176758
  - -0.10367536544799805
  - -0.1016465425491333
- - -0.10522985458374023
  - -0.10454511642456055
  - -3.3909010887145996
  - -0.10428309440612793
  - -0.10082292556762695
  - -0.10230350494384766
  - -0.10444879531860352
  - -0.10160303115844727
  - -0.1043539047241211
  - -0.10506629943847656
  - -0.10521221160888672
  - -0.1258004605770111
  - -0.11335253715515137
  - -0.10561943054199219
  - -0.08918094635009766
  - -0.10143852233886719
  - -0.09938240051269531
  - -0.10266447067260742
  - -0.10412836074829102
  - -0.10469388961791992
  - -0.1033172607421875
  - -0.1128573790192604
  - -0.11221122741699219
  - -0.10580158233642578
  - -0.09618520736694336
  - -0.09325361251831055
  - -0.10394048690795898
  - -0.1031332015991211
  - -0.11000609397888184
  - -0.10454511642456055
  - -0.10373640060424805
  - -0.10409832000732422
  - -0.1098484992980957
  - -0.1126255989074707
  - -0.1060032844543457
  - -0.10443115234375
  - -0.10521411895751953
  - -0.07391627877950668
  - -0.11156272888183594
  - -0.10549044609069824
  - -0.10811996459960938
  - -0.10536003112792969
  - -0.10293436050415039
  - -0.10788488388061523
  - -0.10489869117736816
  - -0.09850502014160156
  - -0.10480260848999023
  - -0.11000680923461914
  - -0.10505485534667969
  - -0.1039571762084961
  - -0.09008550643920898
  - -0.101593017578125
  - -0.10239505767822266
  - -0.10755300521850586
  - -0.10461926460266113
  - -0.09911203384399414
  - -0.10459232330322266
  - -0.1102595329284668
  - -0.10494184494018555
  - -0.10367059707641602
  - -0.1018650159239769
- - -0.10522985458374023
  - -0.10454511642456055
  - -0.11144351959228516
  - -0.10436463356018066
  - -0.1011052131652832
  - -0.1021723747253418
  - -0.10447072982788086
  - -0.10169219970703125
  - -0.10441160202026367
  - -0.1053318977355957
  - -0.10553216934204102
  - -0.1272561103105545
  - -0.11340451240539551
  - -0.10564470291137695
  - -0.08899688720703125
  - -0.10226154327392578
  - -0.09853887557983398
  - -0.10268163681030273
  - -0.10415792465209961
  - -0.10466766357421875
  - -0.10368919372558594
  - -0.10466058552265167
  - -0.11217021942138672
  - -0.10580134391784668
  - -0.09636163711547852
  - -0.09328556060791016
  - -0.10398626327514648
  - -0.10312938690185547
  - -0.11002039909362793
  - -0.10454344749450684
  - -0.10373783111572266
  - -0.10415077209472656
  - -0.11014223098754883
  - -0.11259889602661133
  - -0.10601329803466797
  - -0.10441970825195312
  - -0.10521507263183594
  - -0.07436159253120422
  - -0.1115720272064209
  - -0.10549235343933105
  - -0.10713052749633789
  - -0.10550165176391602
  - -0.10292720794677734
  - -0.10788297653198242
  - -0.10489702224731445
  - -0.0985260009765625
  - -0.10478925704956055
  - -0.11000728607177734
  - -0.10505485534667969
  - -0.10395574569702148
  - -0.09007341414690018
  - -0.10159540176391602
  - -0.10239505767822266
  - -0.10755300521850586
  - -0.10461902618408203
  - -0.09911203384399414
  - -0.10458707809448242
  - -0.11025190353393555
  - -0.10494661331176758
  - -0.10367536544799805
  - -3.4151036739349365
- - -0.10522985458374023
  - -0.10454511642456055
  - -0.11144351959228516
  - -0.10436463356018066
  - -0.1011052131652832
  - -0.1021723747253418
  - -0.10447072982788086
  - -0.10169219970703125
  - -0.10441160202026367
  - -0.1053318977355957
  - -0.10553216934204102
  - -0.1272561103105545
  - -0.11340451240539551
  - -0.10564470291137695
  - -0.08899688720703125
  - -0.10226154327392578
  - -0.09853887557983398
  - -0.10268163681030273
  - -0.10415792465209961
  - -0.10466766357421875
  - -0.10368919372558594
  - -0.10466058552265167
  - -3.44143009185791
  - -0.10589003562927246
  - -0.09439802169799805
  - -0.09290027618408203
  - -0.10410547256469727
  - -0.10367345809936523
  - -0.11002373695373535
  - -0.10457277297973633
  - -0.10355758666992188
  - -0.10395097732543945
  - -0.11217117309570312
  - -0.11284637451171875
  - -0.10592937469482422
  - -0.10442447662353516
  - -0.10520792007446289
  - -0.07497770339250565
  - -0.1116483211517334
  - -0.10548782348632812
  - -0.10784912109375
  - -0.1044926643371582
  - -0.10321378707885742
  - -0.10790514945983887
  - -0.10489153861999512
  - -0.09848880767822266
  - -0.10468578338623047
  - -0.1099700927734375
  - -0.10503053665161133
  - -0.10393047332763672
  - -0.08928894996643066
  - -0.10157537460327148
  - -0.10239124298095703
  - -0.10755252838134766
  - -0.10462141036987305
  - -0.09910917282104492
  - -0.10459184646606445
  - -0.11024808883666992
  - -0.10494709014892578
  - -0.10367727279663086
  - -0.10165020078420639
- - -0.10522985458374023
  - -0.10454511642456055
  - -0.11144351959228516
  - -0.10436463356018066
  - -0.1011052131652832
  - -0.1021723747253418
  - -0.10447072982788086
  - -0.10169219970703125
  - -0.10441160202026367
  - -0.1053318977355957
  - -0.10553216934204102
  - -0.1272561103105545
  - -0.11340451240539551
  - -0.10564470291137695
  - -0.08899688720703125
  - -0.10226154327392578
  - -0.09853887557983398
  - -0.10268163681030273
  - -0.10415792465209961
  - -0.10466766357421875
  - -0.10368919372558594
  - -0.10466058552265167
  - -0.11217021942138672
  - -0.10580134391784668
  - -0.09636163711547852
  - -0.09328556060791016
  - -0.10398626327514648
  - -0.10312938690185547
  - -0.11002039909362793
  - -0.10454344749450684
  - -0.10373783111572266
  - -0.10415077209472656
  - -0.11014223098754883
  - -0.11259889602661133
  - -0.10601329803466797
  - -0.10441970825195312
  - -0.10521507263183594
  - -0.07436159253120422
  - -0.1115720272064209
  - -0.10549235343933105
  - -0.10713052749633789
  - -0.10550165176391602
  - -0.10292720794677734
  - -0.10788297653198242
  - -0.10489702224731445
  - -0.0985260009765625
  - -0.10478925704956055
  - -0.11000728607177734
  - -0.10505485534667969
  - -0.10395574569702148
  - -0.09007341414690018
  - -0.10159540176391602
  - -0.10239505767822266
  - -0.10755300521850586
  - -0.10461902618408203
  - -0.09911203384399414
  - -0.10458707809448242
  - -0.11025190353393555
  - -0.10494661331176758
  - -0.10367536544799805
  - -3.439265727996826
- - -0.10522985458374023
  - -0.10454511642456055
  - -0.11144351959228516
  - -0.10436463356018066
  - -0.1011052131652832
  - -0.1021723747253418
  - -0.10447072982788086
  - -0.10169219970703125
  - -0.10441160202026367
  - -0.1053318977355957
  - -0.10553216934204102
  - -0.1272561103105545
  - -0.11340451240539551
  - -0.10564470291137695
  - -0.08899688720703125
  - -0.10226154327392578
  - -0.09853887557983398
  - -0.10268163681030273
  - -0.10415792465209961
  - -0.10466766357421875
  - -0.10368919372558594
  - -0.10466058552265167
  - -0.11217021942138672
  - -0.10580134391784668
  - -0.09636163711547852
  - -0.09328556060791016
  - -0.10398626327514648
  - -0.10312938690185547
  - -0.11002039909362793
  - -0.10454344749450684
  - -0.10373783111572266
  - -0.10415077209472656
  - -0.11014223098754883
  - -0.11259889602661133
  - -0.10601329803466797
  - -0.10441970825195312
  - -0.10521507263183594
  - -0.07436159253120422
  - -0.1115720272064209
  - -0.10549235343933105
  - -0.10713052749633789
  - -0.10550165176391602
  - -0.10292720794677734
  - -0.10788297653198242
  - -0.10489702224731445
  - -0.0985260009765625
  - -0.10478925704956055
  - -0.11000728607177734
  - -0.10505485534667969
  - -0.10395574569702148
  - -0.09007341414690018
  - -0.10159540176391602
  - -0.10239505767822266
  - -0.10755300521850586
  - -0.10461902618408203
  - -0.09911203384399414
  - -0.10458707809448242
  - -0.11025190353393555
  - -0.10494661331176758
  - -0.10367536544799805
  - -3.451756238937378
- - -0.10522985458374023
  - -0.10454511642456055
  - -0.11144351959228516
  - -0.10436463356018066
  - -0.1011052131652832
  - -0.1021723747253418
  - -0.10447072982788086
  - -0.10169219970703125
  - -0.10441160202026367
  - -0.1053318977355957
  - -0.10553216934204102
  - -0.1272561103105545
  - -0.11340451240539551
  - -0.10564470291137695
  - -0.08899688720703125
  - -0.10226154327392578
  - -0.09853887557983398
  - -0.10268163681030273
  - -0.10415792465209961
  - -0.10466766357421875
  - -0.10368919372558594
  - -0.10466058552265167
  - -0.11217021942138672
  - -0.10580134391784668
  - -0.09636163711547852
  - -0.09328556060791016
  - -0.10398626327514648
  - -0.10312938690185547
  - -0.11002039909362793
  - -0.10454344749450684
  - -0.10373783111572266
  - -0.10415077209472656
  - -0.11014223098754883
  - -0.11259889602661133
  - -0.10601329803466797
  - -0.10441970825195312
  - -0.10521507263183594
  - -0.07436159253120422
  - -3.45631742477417
  - -0.10583138465881348
  - -0.11333274841308594
  - -0.1043691635131836
  - -0.10292959213256836
  - -0.1078035831451416
  - -0.10489988327026367
  - -0.0984034538269043
  - -0.10492515563964844
  - -0.11001014709472656
  - -0.1050729751586914
  - -0.10398435592651367
  - -0.09022515267133713
  - -0.1015920639038086
  - -0.10239124298095703
  - -0.10755133628845215
  - -0.10462236404418945
  - -0.09911823272705078
  - -0.10459280014038086
  - -0.1102595329284668
  - -0.10494518280029297
  - -0.10367822647094727
  - -0.1018281951546669
- - -0.10522985458374023
  - -0.10454511642456055
  - -0.11144351959228516
  - -0.10436463356018066
  - -0.1011052131652832
  - -0.1021723747253418
  - -0.10447072982788086
  - -0.10169219970703125
  - -0.10441160202026367
  - -0.1053318977355957
  - -0.10553216934204102
  - -0.1272561103105545
  - -0.11340451240539551
  - -0.10564470291137695
  - -0.08899688720703125
  - -0.10226154327392578
  - -0.09853887557983398
  - -0.10268163681030273
  - -0.10415792465209961
  - -0.10466766357421875
  - -0.10368919372558594
  - -0.10466058552265167
  - -0.11217021942138672
  - -0.10580134391784668
  - -0.09636163711547852
  - -0.09328556060791016
  - -0.10398626327514648
  - -0.10312938690185547
  - -0.11002039909362793
  - -0.10454344749450684
  - -0.10373783111572266
  - -0.10415077209472656
  - -0.11014223098754883
  - -0.11259889602661133
  - -0.10601329803466797
  - -0.10441970825195312
  - -0.10521507263183594
  - -0.07436159253120422
  - -0.1115720272064209
  - -0.10549235343933105
  - -0.10713052749633789
  - -0.10550165176391602
  - -0.10292720794677734
  - -0.10788297653198242
  - -0.10489702224731445
  - -0.0985260009765625
  - -0.10478925704956055
  - -0.11000728607177734
  - -0.10505485534667969
  - -0.10395574569702148
  - -3.457462787628174
  - -0.10355329513549805
  - -0.10235118865966797
  - -0.10742616653442383
  - -0.10466670989990234
  - -0.09817266464233398
  - -0.10483932495117188
  - -0.11021089553833008
  - -0.10488367080688477
  - -0.10386085510253906
  - -0.09373116493225098
- - -0.10522985458374023
  - -0.10454511642456055
  - -0.11144351959228516
  - -0.10436463356018066
  - -0.1011052131652832
  - -0.1021723747253418
  - -0.10447072982788086
  - -0.10169219970703125
  - -0.10441160202026367
  - -0.1053318977355957
  - -0.10553216934204102
  - -0.1272561103105545
  - -0.11340451240539551
  - -0.10564470291137695
  - -0.08899688720703125
  - -0.10226154327392578
  - -0.09853887557983398
  - -0.10268163681030273
  - -0.10415792465209961
  - -0.10466766357421875
  - -0.10368919372558594
  - -0.10466058552265167
  - -0.11217021942138672
  - -0.10580134391784668
  - -0.09636163711547852
  - -0.09328556060791016
  - -0.10398626327514648
  - -0.10312938690185547
  - -3.4833076000213623
  - -0.10390424728393555
  - -0.10383033752441406
  - -0.10569286346435547
  - -0.10941123962402344
  - -0.1119379997253418
  - -0.10571670532226562
  - -0.1044301986694336
  - -0.10521316528320312
  - -0.06634095311164856
  - -0.11133885383605957
  - -0.10551285743713379
  - -0.10799074172973633
  - -0.10577392578125
  - -0.10288572311401367
  - -0.10787034034729004
  - -0.10489821434020996
  - -0.09849786758422852
  - -0.10483980178833008
  - -0.11003255844116211
  - -0.10506772994995117
  - -0.1039571762084961
  - -0.0900956392288208
  - -0.10160589218139648
  - -0.10239458084106445
  - -0.10755300521850586
  - -0.10461688041687012
  - -0.09911060333251953
  - -0.10458803176879883
  - -0.11025238037109375
  - -0.10494756698608398
  - -0.10367536544799805
  - -0.10159754008054733
- - -0.10522985458374023
  - -0.10454511642456055
  - -0.11144351959228516
  - -0.10436463356018066
  - -0.1011052131652832
  - -0.1021723747253418
  - -0.10447072982788086
  - -0.10169219970703125
  - -0.10441160202026367
  - -0.1053318977355957
  - -0.10553216934204102
  - -0.1272561103105545
  - -0.11340451240539551
  - -0.10564470291137695
  - -0.08899688720703125
  - -0.10226154327392578
  - -0.09853887557983398
  - -0.10268163681030273
  - -0.10415792465209961
  - -0.10466766357421875
  - -0.10368919372558594
  - -0.10466058552265167
  - -0.11217021942138672
  - -0.10580134391784668
  - -0.09636163711547852
  - -0.09328556060791016
  - -0.10398626327514648
  - -0.10312938690185547
  - -0.11002039909362793
  - -0.10454344749450684
  - -0.10373783111572266
  - -0.10415077209472656
  - -0.11014223098754883
  - -0.11259889602661133
  - -0.10601329803466797
  - -0.10441970825195312
  - -0.10521507263183594
  - -0.07436159253120422
  - -0.1115720272064209
  - -0.10549235343933105
  - -0.10713052749633789
  - -0.10550165176391602
  - -0.10292720794677734
  - -3.5450820922851562
  - -0.10477042198181152
  - -0.09842109680175781
  - -0.1050410270690918
  - -0.11010217666625977
  - -0.10513067245483398
  - -0.10396194458007812
  - -0.0905706062912941
  - -0.10161352157592773
  - -0.10239696502685547
  - -0.10755634307861328
  - -0.10461950302124023
  - -0.09909677505493164
  - -0.10458755493164062
  - -0.1102452278137207
  - -0.10494470596313477
  - -0.10367107391357422
  - -0.10166064649820328
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Song_Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Song_Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Song_Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Song_Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'True'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Song_Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'stadium'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Song_Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer_in_concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Song_Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Song_Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'stadium'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Song_Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Song_Name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'ValSql')
  - ('ValSql', (True,))
  - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
