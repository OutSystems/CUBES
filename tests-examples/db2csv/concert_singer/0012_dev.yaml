db: tests-examples/db2csv/concert_singer/tables/concert_singer.sqlite
inputs:
 - tests-examples/db2csv/concert_singer/tables/singer.csv
output: tests-examples/db2csv/concert_singer/tables/0012_dev.csv
raw_question: How many singers are from each country? 
question_index: 11 
groupby_columns:
 - country
functions:
 - count
comment: |-
  SELECT country,
         count(*)
  FROM singer
  GROUP BY country

sql: |-
  SELECT country,
         count(*)
  FROM singer
  GROUP BY country
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- - country
- - country
- - country
- - country
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
smbop_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
smbop_beam_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT singer.country , COUNT( * ) FROM singer GROUP BY singer.country
  - SELECT singer.country , COUNT( * ) FROM singer_in_concert , singer GROUP BY singer.country
  - SELECT singer.country , COUNT( * ) FROM stadium , singer GROUP BY singer.country
  - SELECT singer.country , COUNT( * ) FROM concert , singer GROUP BY singer.country
  - SELECT singer.country , COUNT( * ) FROM stadium , singer
  - SELECT singer.country , COUNT( * ) FROM singer_in_concert , singer
  - SELECT singer.country , COUNT( * ) FROM concert , singer
  - SELECT singer.country , COUNT( * ) FROM singer
  - SELECT singer.country , COUNT( * ) FROM singer ORDER BY singer.country DESC
  - SELECT singer.country , COUNT( * ) FROM singer ORDER BY singer.country ASC
smbop_beam_inferred_code_w_terminals:
  - SELECT singer.country , COUNT( * ) FROM singer GROUP BY singer.country
  - SELECT singer.country , COUNT( * ) FROM singer_in_concert , singer GROUP BY singer.country
  - SELECT singer.country , COUNT( * ) FROM stadium , singer GROUP BY singer.country
  - SELECT singer.country , COUNT( * ) FROM concert , singer GROUP BY singer.country
  - SELECT singer.country , COUNT( * ) FROM stadium , singer
  - SELECT singer.country , COUNT( * ) FROM singer_in_concert , singer
  - SELECT singer.country , COUNT( * ) FROM concert , singer
  - SELECT singer.country , COUNT( * ) FROM singer
  - SELECT singer.country , COUNT( * ) FROM singer ORDER BY singer.country DESC
  - SELECT singer.country , COUNT( * ) FROM singer ORDER BY singer.country ASC
ratsql_beam_join_columns:
- []
- - singer_id
  - concert_id
- - singer_id
  - stadium_id
  - concert_id
- - singer_id
- []
- []
- []
ratsql_beam_groupby_columns:
- - country
- - country
- - country
- - country
- - country
- - country
- - country
ratsql_beam_tables:
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
ratsql_beam_constants:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT Count(*), singer.Country FROM singer GROUP BY singer.Country
  - SELECT Count(*), singer.Country FROM singer JOIN concert JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID AND singer_in_concert.concert_ID = concert.concert_ID GROUP BY singer.Country
  - SELECT Count(*), DISTINCT singer.Country FROM singer GROUP BY singer.Country
  - SELECT Count(*), singer.Country FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY singer.Country
  - SELECT Count(*), singer.Country FROM singer GROUP BY DISTINCT singer.Country
  - SELECT Count(DISTINCT *), singer.Country FROM singer GROUP BY singer.Country
  - SELECT Count(*), singer.Country FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Country
  - SELECT Count(*), singer.Country FROM singer GROUP BY singer.Country LIMIT 1
  - SELECT DISTINCT Count(*), singer.Country FROM singer GROUP BY singer.Country
  - SELECT singer.Country, Count(*) FROM singer GROUP BY singer.Country
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(*), singer.Country FROM singer GROUP BY singer.Country
  - SELECT Count(*), singer.Country FROM singer JOIN concert JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID AND singer_in_concert.concert_ID = concert.concert_ID GROUP BY singer.Country
  - SELECT Count(*), DISTINCT singer.Country FROM singer GROUP BY singer.Country
  - SELECT Count(*), singer.Country FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY singer.Country
  - SELECT Count(*), singer.Country FROM singer GROUP BY DISTINCT singer.Country
  - SELECT Count(DISTINCT *), singer.Country FROM singer GROUP BY singer.Country
  - SELECT Count(*), singer.Country FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Country
  - SELECT Count(*), singer.Country FROM singer GROUP BY singer.Country LIMIT 1
  - SELECT DISTINCT Count(*), singer.Country FROM singer GROUP BY singer.Country
  - SELECT singer.Country, Count(*) FROM singer GROUP BY singer.Country
ratsql_beam_score_history:
- - -0.10546302795410156
  - -0.11215496063232422
  - -0.10820651054382324
  - -0.10440278053283691
  - -0.13457918167114258
  - -0.10752296447753906
  - -0.13512754440307617
  - -0.10151195526123047
  - -0.1085977554321289
  - -0.10571622848510742
  - -0.1043701171875
  - -0.0954342782497406
  - -0.11078095436096191
  - -0.10310649871826172
  - -0.10295486450195312
  - -0.1069488525390625
  - -0.10349178314208984
  - -0.10712385177612305
  - -0.10495758056640625
  - -0.10634088516235352
  - -0.07906555384397507
  - -0.11412620544433594
  - -0.1061408519744873
  - -0.1061697006225586
  - -0.10362720489501953
  - -0.10049057006835938
  - -0.10529327392578125
  - -0.10429763793945312
  - -0.11699679493904114
  - -0.11155462265014648
  - -0.10562610626220703
  - -0.10197305679321289
  - -0.10721230506896973
  - -0.10511922836303711
  - -0.09780740737915039
  - -0.10617733001708984
  - -0.10773944854736328
  - -0.10476064682006836
  - -0.10404062271118164
  - -0.10032638907432556
- - -0.10546302795410156
  - -0.11215496063232422
  - -0.10820651054382324
  - -0.10440278053283691
  - -0.13457918167114258
  - -0.10752296447753906
  - -0.13512754440307617
  - -0.10151195526123047
  - -0.1085977554321289
  - -0.10571622848510742
  - -0.1043701171875
  - -0.0954342782497406
  - -0.11078095436096191
  - -0.10310649871826172
  - -0.10295486450195312
  - -0.1069488525390625
  - -0.10349178314208984
  - -0.10712385177612305
  - -0.10495758056640625
  - -0.10634088516235352
  - -0.07906555384397507
  - -0.11412620544433594
  - -0.1061408519744873
  - -0.1061697006225586
  - -0.10362720489501953
  - -0.10049057006835938
  - -0.10529327392578125
  - -0.10429763793945312
  - -0.11699679493904114
  - -0.11155462265014648
  - -0.10562610626220703
  - -0.10197305679321289
  - -0.10721230506896973
  - -0.10511922836303711
  - -0.09780740737915039
  - -0.10617733001708984
  - -0.10773944854736328
  - -0.10476064682006836
  - -0.10404062271118164
  - -3.4069957733154297
- - -0.10546302795410156
  - -0.11215496063232422
  - -0.10820651054382324
  - -0.10440278053283691
  - -0.13457918167114258
  - -0.10752296447753906
  - -0.13512754440307617
  - -0.10151195526123047
  - -0.1085977554321289
  - -0.10571622848510742
  - -0.1043701171875
  - -0.0954342782497406
  - -0.11078095436096191
  - -0.10310649871826172
  - -0.10295486450195312
  - -0.1069488525390625
  - -0.10349178314208984
  - -0.10712385177612305
  - -0.10495758056640625
  - -0.10634088516235352
  - -0.07906555384397507
  - -3.422530174255371
  - -0.1059718132019043
  - -0.10859918594360352
  - -0.10220146179199219
  - -0.10048723220825195
  - -0.1053309440612793
  - -0.10422849655151367
  - -0.11894383281469345
  - -0.11156463623046875
  - -0.10562372207641602
  - -0.10192489624023438
  - -0.10720276832580566
  - -0.10512208938598633
  - -0.09784507751464844
  - -0.10640192031860352
  - -0.10789251327514648
  - -0.10475587844848633
  - -0.1040501594543457
  - -0.09961963444948196
- - -0.10546302795410156
  - -0.11215496063232422
  - -0.10820651054382324
  - -0.10440278053283691
  - -0.13457918167114258
  - -0.10752296447753906
  - -0.13512754440307617
  - -0.10151195526123047
  - -0.1085977554321289
  - -0.10571622848510742
  - -0.1043701171875
  - -0.0954342782497406
  - -0.11078095436096191
  - -0.10310649871826172
  - -0.10295486450195312
  - -0.1069488525390625
  - -0.10349178314208984
  - -0.10712385177612305
  - -0.10495758056640625
  - -0.10634088516235352
  - -0.07906555384397507
  - -0.11412620544433594
  - -0.1061408519744873
  - -0.1061697006225586
  - -0.10362720489501953
  - -0.10049057006835938
  - -0.10529327392578125
  - -0.10429763793945312
  - -0.11699679493904114
  - -0.11155462265014648
  - -0.10562610626220703
  - -0.10197305679321289
  - -0.10721230506896973
  - -0.10511922836303711
  - -0.09780740737915039
  - -0.10617733001708984
  - -0.10773944854736328
  - -0.10476064682006836
  - -0.10404062271118164
  - -3.4348928928375244
- - -0.10546302795410156
  - -0.11215496063232422
  - -0.10820651054382324
  - -0.10440278053283691
  - -0.13457918167114258
  - -0.10752296447753906
  - -0.13512754440307617
  - -0.10151195526123047
  - -0.1085977554321289
  - -0.10571622848510742
  - -0.1043701171875
  - -0.0954342782497406
  - -0.11078095436096191
  - -0.10310649871826172
  - -0.10295486450195312
  - -0.1069488525390625
  - -0.10349178314208984
  - -0.10712385177612305
  - -0.10495758056640625
  - -0.10634088516235352
  - -0.07906555384397507
  - -0.11412620544433594
  - -0.1061408519744873
  - -0.1061697006225586
  - -0.10362720489501953
  - -0.10049057006835938
  - -0.10529327392578125
  - -0.10429763793945312
  - -0.11699679493904114
  - -3.450802803039551
  - -0.10534381866455078
  - -0.10789823532104492
  - -0.10705208778381348
  - -0.10513877868652344
  - -0.09813690185546875
  - -0.10631084442138672
  - -0.1079254150390625
  - -0.10477399826049805
  - -0.10402345657348633
  - -0.10044758021831512
- - -0.10546302795410156
  - -0.11215496063232422
  - -0.10820651054382324
  - -0.10440278053283691
  - -0.13457918167114258
  - -0.10752296447753906
  - -0.13512754440307617
  - -0.10151195526123047
  - -0.1085977554321289
  - -0.10571622848510742
  - -0.1043701171875
  - -0.0954342782497406
  - -3.480156421661377
  - -0.10328125953674316
  - -0.10332727432250977
  - -0.10687065124511719
  - -0.1036076545715332
  - -0.10762357711791992
  - -0.10504007339477539
  - -0.10624217987060547
  - -0.07864294201135635
  - -0.11413788795471191
  - -0.10612297058105469
  - -0.10802745819091797
  - -0.1035914421081543
  - -0.10056734085083008
  - -0.10554647445678711
  - -0.10420465469360352
  - -0.11987997591495514
  - -0.11153745651245117
  - -0.10558462142944336
  - -0.10218191146850586
  - -0.10719466209411621
  - -0.10511231422424316
  - -0.09797382354736328
  - -0.10610198974609375
  - -0.10788536071777344
  - -0.10476255416870117
  - -0.10403299331665039
  - -0.10088683664798737
- - -0.10546302795410156
  - -0.11215496063232422
  - -0.10820651054382324
  - -0.10440278053283691
  - -0.13457918167114258
  - -0.10752296447753906
  - -0.13512754440307617
  - -0.10151195526123047
  - -0.1085977554321289
  - -0.10571622848510742
  - -0.1043701171875
  - -0.0954342782497406
  - -0.11078095436096191
  - -0.10310649871826172
  - -0.10295486450195312
  - -0.1069488525390625
  - -0.10349178314208984
  - -0.10712385177612305
  - -0.10495758056640625
  - -0.10634088516235352
  - -0.07906555384397507
  - -0.11412620544433594
  - -0.1061408519744873
  - -0.1061697006225586
  - -0.10362720489501953
  - -0.10049057006835938
  - -0.10529327392578125
  - -0.10429763793945312
  - -0.11699679493904114
  - -0.11155462265014648
  - -0.10562610626220703
  - -0.10197305679321289
  - -0.10721230506896973
  - -0.10511922836303711
  - -0.09780740737915039
  - -0.10617733001708984
  - -0.10773944854736328
  - -0.10476064682006836
  - -0.10404062271118164
  - -3.5036158561706543
- - -0.10546302795410156
  - -0.11215496063232422
  - -0.10820651054382324
  - -0.10440278053283691
  - -0.13457918167114258
  - -0.10752296447753906
  - -0.13512754440307617
  - -0.10151195526123047
  - -0.1085977554321289
  - -0.10571622848510742
  - -0.1043701171875
  - -0.0954342782497406
  - -0.11078095436096191
  - -0.10310649871826172
  - -0.10295486450195312
  - -0.1069488525390625
  - -0.10349178314208984
  - -0.10712385177612305
  - -0.10495758056640625
  - -0.10634088516235352
  - -0.07906555384397507
  - -0.11412620544433594
  - -0.1061408519744873
  - -0.1061697006225586
  - -0.10362720489501953
  - -0.10049057006835938
  - -0.10529327392578125
  - -0.10429763793945312
  - -0.11699679493904114
  - -0.11155462265014648
  - -0.10562610626220703
  - -0.10197305679321289
  - -3.549740791320801
  - -0.1052703857421875
  - -0.09832000732421875
  - -0.10566139221191406
  - -0.10758733749389648
  - -0.1048135757446289
  - -0.10399103164672852
  - -0.09812769293785095
- - -0.10546302795410156
  - -0.11215496063232422
  - -3.5425772666931152
  - -0.10430479049682617
  - -0.14184331893920898
  - -0.10689067840576172
  - -0.1438312530517578
  - -0.1015472412109375
  - -0.10839223861694336
  - -0.10561800003051758
  - -0.1043863296508789
  - -0.09501462429761887
  - -0.11073923110961914
  - -0.10312652587890625
  - -0.10257577896118164
  - -0.1072683334350586
  - -0.10352611541748047
  - -0.1072230339050293
  - -0.10485601425170898
  - -0.10628461837768555
  - -0.08134454488754272
  - -0.1140742301940918
  - -0.1061396598815918
  - -0.10599660873413086
  - -0.10359811782836914
  - -0.10037755966186523
  - -0.1053166389465332
  - -0.10429620742797852
  - -0.11733629554510117
  - -0.11155152320861816
  - -0.10562634468078613
  - -0.101898193359375
  - -0.10721135139465332
  - -0.10511898994445801
  - -0.09781646728515625
  - -0.10619878768920898
  - -0.1078338623046875
  - -0.10476207733154297
  - -0.10404157638549805
  - -0.1002759262919426
- - -0.10546302795410156
  - -0.11215496063232422
  - -0.10820651054382324
  - -0.10440278053283691
  - -0.13457918167114258
  - -0.10752296447753906
  - -4.50956916809082
  - -0.10264015197753906
  - -0.10542583465576172
  - -0.10572052001953125
  - -0.10695075988769531
  - -0.09659261256456375
  - -0.11362028121948242
  - -0.10582351684570312
  - -0.10276174545288086
  - -0.1078338623046875
  - -0.10207700729370117
  - -0.10843801498413086
  - -0.10643291473388672
  - -0.10524988174438477
  - -0.12092427164316177
  - -0.11143016815185547
  - -0.10512042045593262
  - -0.12221193313598633
  - -0.10827970504760742
  - -0.09977340698242188
  - -0.1062765121459961
  - -0.10459041595458984
  - -0.12138651311397552
  - -0.11136412620544434
  - -0.10558009147644043
  - -0.10264158248901367
  - -0.10722064971923828
  - -0.10510015487670898
  - -0.09811782836914062
  - -0.10692596435546875
  - -0.10899114608764648
  - -0.10474824905395508
  - -0.10412406921386719
  - -0.09960000216960907
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'stadium'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'True'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'True'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer_in_concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
