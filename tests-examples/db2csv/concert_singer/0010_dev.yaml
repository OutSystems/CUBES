db: tests-examples/db2csv/concert_singer/tables/concert_singer.sqlite
inputs:
 - tests-examples/db2csv/concert_singer/tables/singer.csv
output: tests-examples/db2csv/concert_singer/tables/0010_dev.csv
raw_question: What are  the different countries with singers above age 20? 
question_index: 9 
constants:
 - 20
columns:
 - age
filters:
 - '>'
comment: |-
  SELECT DISTINCT country
  FROM singer
  WHERE age > 20

sql: |-
  SELECT DISTINCT country
  FROM singer
  WHERE age > 20
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
smbop_beam_constants:
- - 20
- - 20
- - 20
- - 20
- - 20
- - 20
- - 20
- - 20
- - 20
- - 20
smbop_beam_functions:
- []
- []
- - avg
- []
- []
- []
- []
- - max
- []
- []
smbop_beam_columns:
- - age
- - 20
- - age
  - country
- - age
- - age
- - age
- - age
- - age
  - country
- - age
- - age
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '>'
- - '>'
- - '>'
- - '='
- - '>='
  - '>'
- - '!='
- - '='
- - '>'
- - '<'
- - '<'
smbop_beam_inferred_code:
  - SELECT DISTINCT singer.country FROM singer WHERE singer.age > 20
  - SELECT DISTINCT singer.country FROM singer WHERE 20 > 20
  - SELECT AVG( singer.country ) FROM singer WHERE singer.age > 20
  - SELECT DISTINCT singer.country FROM singer WHERE singer.age = 20
  - SELECT DISTINCT singer.country FROM singer WHERE singer.age >= 20
  - SELECT DISTINCT singer.country FROM singer WHERE singer.age != 20
  - SELECT DISTINCT singer.country FROM singer_in_concert, singer WHERE singer.age = 20
  - SELECT MAX( singer.country ) FROM singer WHERE singer.age > 20
  - SELECT DISTINCT singer.country FROM singer_in_concert, singer WHERE singer.age<20
  - SELECT DISTINCT singer.country FROM stadium, singer WHERE singer.age<20
smbop_beam_inferred_code_w_terminals:
  - SELECT DISTINCT singer.country FROM singer WHERE singer.age > 20
  - SELECT DISTINCT singer.country FROM singer WHERE 20 > 20
  - SELECT AVG( singer.country ) FROM singer WHERE singer.age > 20
  - SELECT DISTINCT singer.country FROM singer WHERE singer.age = 20
  - SELECT DISTINCT singer.country FROM singer WHERE singer.age >= 20
  - SELECT DISTINCT singer.country FROM singer WHERE singer.age != 20
  - SELECT DISTINCT singer.country FROM singer_in_concert, singer WHERE singer.age = 20
  - SELECT MAX( singer.country ) FROM singer WHERE singer.age > 20
  - SELECT DISTINCT singer.country FROM singer_in_concert, singer WHERE singer.age<20
  - SELECT DISTINCT singer.country FROM stadium, singer WHERE singer.age<20
ratsql_beam_join_columns:
- []
- []
- - singer_id
  - stadium_id
  - concert_id
- - singer_id
- - singer_id
  - concert_id
- []
- []
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
ratsql_beam_constants:
- - 20
- - 20
- - 20
- - 20
- - 20
- - 20
- - 20
ratsql_beam_functions:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_columns:
- - age
- - age
- - age
- - age
- - age
- - age
- - age
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
ratsql_beam_inferred_code:
  - SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 'terminal'
  - SELECT singer.Country FROM singer WHERE singer.Age > 'terminal'
  - SELECT DISTINCT singer.Country FROM singer WHERE DISTINCT singer.Age > 'terminal'
  - SELECT DISTINCT DISTINCT singer.Country FROM singer WHERE singer.Age > 'terminal'
  - SELECT DISTINCT singer.Country FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Age > 'terminal'
  - SELECT DISTINCT singer.Country FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer.Age > 'terminal'
  - SELECT DISTINCT singer.Country FROM singer JOIN concert JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID AND singer_in_concert.concert_ID = concert.concert_ID WHERE singer.Age > 'terminal'
  - SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 'terminal' LIMIT 1
  - SELECT DISTINCT singer.Country FROM singer WHERE * > 'terminal'
  - SELECT DISTINCT singer.Is_male FROM singer WHERE singer.Age > 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 20
  - SELECT singer.Country FROM singer WHERE singer.Age > 20
  - SELECT DISTINCT singer.Country FROM singer WHERE DISTINCT singer.Age > 20
  - SELECT DISTINCT DISTINCT singer.Country FROM singer WHERE singer.Age > 20
  - SELECT DISTINCT singer.Country FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Age > 20
  - SELECT DISTINCT singer.Country FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer.Age > 20
  - SELECT DISTINCT singer.Country FROM singer JOIN concert JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID AND singer_in_concert.concert_ID = concert.concert_ID WHERE singer.Age > 20
  - SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 20 LIMIT 1
  - SELECT DISTINCT singer.Country FROM singer WHERE * > 20
  - SELECT DISTINCT singer.Is_male FROM singer WHERE singer.Age > 20
ratsql_beam_score_history:
- - -0.10440206527709961
  - -0.10466384887695312
  - -0.15005731582641602
  - -0.10464930534362793
  - -0.09966135025024414
  - -0.10234689712524414
  - -0.10435724258422852
  - -0.10117912292480469
  - -0.10436487197875977
  - -0.10495424270629883
  - -0.10472679138183594
  - -0.09788289666175842
  - -0.11294198036193848
  - -0.10651636123657227
  - -0.09100627899169922
  - -0.12496232986450195
  - -0.0943913459777832
  - -0.10224580764770508
  - -0.1039891242980957
  - -0.1048135757446289
  - -0.10317325592041016
  - -0.08954916149377823
  - -0.11099720001220703
  - -0.10598230361938477
  - -0.1094503402709961
  - -0.10530805587768555
  - -0.10270118713378906
  - -0.10738015174865723
  - -0.10486102104187012
  - -0.10036516189575195
  - -0.10409164428710938
  - -0.10828781127929688
  - -0.10476207733154297
  - -0.10418033599853516
  - -0.09813223779201508
- - -0.10440206527709961
  - -0.10466384887695312
  - -2.7242228984832764
  - -0.10528922080993652
  - -0.10099315643310547
  - -0.10234260559082031
  - -0.10462570190429688
  - -0.10129499435424805
  - -0.104339599609375
  - -0.10507392883300781
  - -0.10485029220581055
  - -0.10429751873016357
  - -0.11291790008544922
  - -0.10621809959411621
  - -0.09446048736572266
  - -0.12349796295166016
  - -0.09458351135253906
  - -0.10218620300292969
  - -0.10402393341064453
  - -0.10477590560913086
  - -0.1036825180053711
  - -0.08847767859697342
  - -0.11087703704833984
  - -0.10597467422485352
  - -0.10837030410766602
  - -0.10538005828857422
  - -0.10267400741577148
  - -0.10738182067871094
  - -0.10485315322875977
  - -0.10049915313720703
  - -0.10416269302368164
  - -0.10844564437866211
  - -0.10478067398071289
  - -0.10410881042480469
  - -0.09732832759618759
- - -0.10440206527709961
  - -0.10466384887695312
  - -0.15005731582641602
  - -0.10464930534362793
  - -0.09966135025024414
  - -0.10234689712524414
  - -0.10435724258422852
  - -0.10117912292480469
  - -0.10436487197875977
  - -0.10495424270629883
  - -0.10472679138183594
  - -0.09788289666175842
  - -0.11294198036193848
  - -0.10651636123657227
  - -0.09100627899169922
  - -0.12496232986450195
  - -0.0943913459777832
  - -0.10224580764770508
  - -0.1039891242980957
  - -0.1048135757446289
  - -0.10317325592041016
  - -0.08954916149377823
  - -3.4510819911956787
  - -0.10602569580078125
  - -0.11573028564453125
  - -0.10508966445922852
  - -0.10274600982666016
  - -0.10737085342407227
  - -0.10491132736206055
  - -0.09953165054321289
  - -0.10438060760498047
  - -0.10834503173828125
  - -0.10473012924194336
  - -0.10412073135375977
  - -0.09931464493274689
- - -0.10440206527709961
  - -0.10466384887695312
  - -0.15005731582641602
  - -0.10464930534362793
  - -0.09966135025024414
  - -0.10234689712524414
  - -0.10435724258422852
  - -0.10117912292480469
  - -0.10436487197875977
  - -0.10495424270629883
  - -0.10472679138183594
  - -0.09788289666175842
  - -3.4494152069091797
  - -0.10774683952331543
  - -0.08909225463867188
  - -0.1327967643737793
  - -0.09437227249145508
  - -0.10203027725219727
  - -0.10394620895385742
  - -0.10480594635009766
  - -0.10302257537841797
  - -0.10123681277036667
  - -0.11106181144714355
  - -0.10596299171447754
  - -0.10877323150634766
  - -0.10567235946655273
  - -0.10269737243652344
  - -0.10738301277160645
  - -0.10488533973693848
  - -0.1005086898803711
  - -0.10403299331665039
  - -0.10820817947387695
  - -0.10476160049438477
  - -0.10423469543457031
  - -0.09828405827283859
- - -0.10440206527709961
  - -0.10466384887695312
  - -0.15005731582641602
  - -0.10464930534362793
  - -0.09966135025024414
  - -0.10234689712524414
  - -0.10435724258422852
  - -0.10117912292480469
  - -0.10436487197875977
  - -0.10495424270629883
  - -0.10472679138183594
  - -0.09788289666175842
  - -0.11294198036193848
  - -0.10651636123657227
  - -0.09100627899169922
  - -0.12496232986450195
  - -0.0943913459777832
  - -0.10224580764770508
  - -0.1039891242980957
  - -0.1048135757446289
  - -0.10317325592041016
  - -0.08954916149377823
  - -0.11099720001220703
  - -0.10598230361938477
  - -0.1094503402709961
  - -0.10530805587768555
  - -0.10270118713378906
  - -0.10738015174865723
  - -0.10486102104187012
  - -0.10036516189575195
  - -0.10409164428710938
  - -0.10828781127929688
  - -0.10476207733154297
  - -0.10418033599853516
  - -3.4585788249969482
- - -0.10440206527709961
  - -0.10466384887695312
  - -0.15005731582641602
  - -0.10464930534362793
  - -0.09966135025024414
  - -0.10234689712524414
  - -0.10435724258422852
  - -0.10117912292480469
  - -0.10436487197875977
  - -0.10495424270629883
  - -0.10472679138183594
  - -0.09788289666175842
  - -0.11294198036193848
  - -0.10651636123657227
  - -0.09100627899169922
  - -0.12496232986450195
  - -0.0943913459777832
  - -0.10224580764770508
  - -0.1039891242980957
  - -0.1048135757446289
  - -0.10317325592041016
  - -0.08954916149377823
  - -0.11099720001220703
  - -0.10598230361938477
  - -0.1094503402709961
  - -0.10530805587768555
  - -0.10270118713378906
  - -0.10738015174865723
  - -0.10486102104187012
  - -0.10036516189575195
  - -0.10409164428710938
  - -0.10828781127929688
  - -0.10476207733154297
  - -0.10418033599853516
  - -3.473119020462036
- - -0.10440206527709961
  - -0.10466384887695312
  - -0.15005731582641602
  - -0.10464930534362793
  - -0.09966135025024414
  - -0.10234689712524414
  - -0.10435724258422852
  - -0.10117912292480469
  - -0.10436487197875977
  - -0.10495424270629883
  - -0.10472679138183594
  - -0.09788289666175842
  - -0.11294198036193848
  - -0.10651636123657227
  - -0.09100627899169922
  - -0.12496232986450195
  - -0.0943913459777832
  - -0.10224580764770508
  - -0.1039891242980957
  - -0.1048135757446289
  - -0.10317325592041016
  - -0.08954916149377823
  - -0.11099720001220703
  - -0.10598230361938477
  - -0.1094503402709961
  - -0.10530805587768555
  - -0.10270118713378906
  - -0.10738015174865723
  - -0.10486102104187012
  - -0.10036516189575195
  - -0.10409164428710938
  - -0.10828781127929688
  - -0.10476207733154297
  - -0.10418033599853516
  - -3.474531412124634
- - -0.10440206527709961
  - -0.10466384887695312
  - -0.15005731582641602
  - -0.10464930534362793
  - -0.09966135025024414
  - -0.10234689712524414
  - -0.10435724258422852
  - -0.10117912292480469
  - -0.10436487197875977
  - -0.10495424270629883
  - -0.10472679138183594
  - -0.09788289666175842
  - -0.11294198036193848
  - -0.10651636123657227
  - -0.09100627899169922
  - -0.12496232986450195
  - -0.0943913459777832
  - -0.10224580764770508
  - -0.1039891242980957
  - -0.1048135757446289
  - -0.10317325592041016
  - -0.08954916149377823
  - -0.11099720001220703
  - -0.10598230361938477
  - -0.1094503402709961
  - -0.10530805587768555
  - -0.10270118713378906
  - -3.5541350841522217
  - -0.10490560531616211
  - -0.10028791427612305
  - -0.10407686233520508
  - -0.10831069946289062
  - -0.10481882095336914
  - -0.10424661636352539
  - -0.09748362749814987
- - -0.10440206527709961
  - -0.10466384887695312
  - -0.15005731582641602
  - -0.10464930534362793
  - -0.09966135025024414
  - -0.10234689712524414
  - -0.10435724258422852
  - -0.10117912292480469
  - -0.10436487197875977
  - -0.10495424270629883
  - -0.10472679138183594
  - -0.09788289666175842
  - -0.11294198036193848
  - -0.10651636123657227
  - -0.09100627899169922
  - -0.12496232986450195
  - -0.0943913459777832
  - -0.10224580764770508
  - -0.1039891242980957
  - -0.1048135757446289
  - -0.10317325592041016
  - -5.222558498382568
  - -0.11111021041870117
  - -0.10606765747070312
  - -0.10977029800415039
  - -0.10741472244262695
  - -0.10259246826171875
  - -0.10733342170715332
  - -0.10494256019592285
  - -0.0983572006225586
  - -0.10349607467651367
  - -0.10715389251708984
  - -0.1047372817993164
  - -0.1042780876159668
  - -0.09638305008411407
- - -0.10440206527709961
  - -0.10466384887695312
  - -0.15005731582641602
  - -0.10464930534362793
  - -0.09966135025024414
  - -0.10234689712524414
  - -0.10435724258422852
  - -0.10117912292480469
  - -0.10436487197875977
  - -0.10495424270629883
  - -0.10472679138183594
  - -5.262424945831299
  - -0.11158132553100586
  - -0.10619783401489258
  - -0.09296274185180664
  - -0.1125478744506836
  - -0.09349918365478516
  - -0.10236501693725586
  - -0.10411548614501953
  - -0.10492753982543945
  - -0.10335254669189453
  - -0.09684378653764725
  - -0.11101412773132324
  - -0.10593867301940918
  - -0.10988283157348633
  - -0.1045217514038086
  - -0.10260868072509766
  - -0.10741543769836426
  - -0.10483622550964355
  - -0.09970235824584961
  - -0.10416412353515625
  - -0.10845232009887695
  - -0.10477638244628906
  - -0.10416173934936523
  - -0.09777014702558517
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'stadium'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer_in_concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Is_male'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
