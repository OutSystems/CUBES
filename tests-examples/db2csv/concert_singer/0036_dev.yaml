db: tests-examples/db2csv/concert_singer/tables/concert_singer.sqlite
inputs:
 - tests-examples/db2csv/concert_singer/tables/singer.csv
 - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
output: tests-examples/db2csv/concert_singer/tables/0036_dev.csv
raw_question: List singer names and number of concerts for each singer. 
question_index: 35 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants: []
join_columns:
 - singer_id
groupby_columns:
 - singer_id
orderby_columns: []
functions:
 - count
columns: []
filters: []
ieu: []
comment: |-
  SELECT T2.name,
         count(*)
  FROM singer_in_concert AS T1
  JOIN singer AS T2 ON T1.singer_id = T2.singer_id
  GROUP BY T2.singer_id

sql: |-
  SELECT T2.name,
         count(*)
  FROM singer_in_concert AS T1
  JOIN singer AS T2 ON T1.singer_id = T2.singer_id
  GROUP BY T2.singer_id
smbop_beam_join_columns:
- - singer_id
- - singer_id
- - singer_id
- []
- - singer_id
- []
- - singer_id
- - singer_id
- []
- - singer_id
smbop_beam_groupby_columns:
- - singer_id
- - singer_id
- - name
- - singer_id
- - name
- - name
- []
- []
- []
- []
smbop_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- - order
- - order
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/concert.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/concert.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/concert.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
smbop_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
smbop_beam_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT singer.name , COUNT( * ) FROM singer_in_concert JOIN singer ON singer_in_concert.singer_id = singer.singer_id GROUP BY singer_in_concert.singer_id
  - SELECT singer_in_concert.singer_id , COUNT( * ) FROM singer_in_concert JOIN singer ON singer_in_concert.singer_id = singer.singer_id GROUP BY singer_in_concert.singer_id
  - SELECT singer.name , COUNT( * ) FROM singer_in_concert JOIN singer ON singer_in_concert.singer_id = singer.singer_id GROUP BY singer.name
  - SELECT singer.name , COUNT( * ) FROM singer_in_concert , concert , singer GROUP BY singer_in_concert.singer_id
  - SELECT singer_in_concert.singer_id , COUNT( * ) FROM singer_in_concert JOIN singer ON singer_in_concert.singer_id = singer.singer_id GROUP BY singer.name
  - SELECT singer.name , COUNT( * ) FROM singer_in_concert , concert , singer GROUP BY singer.name
  - SELECT singer.name , COUNT( * ) FROM singer_in_concert JOIN singer ON singer_in_concert.singer_id = singer.singer_id ORDER BY singer_in_concert.singer_id DESC
  - SELECT singer.name , COUNT( * ) FROM singer_in_concert JOIN singer ON singer_in_concert.singer_id = singer.singer_id ORDER BY singer_in_concert.singer_id ASC
  - SELECT singer.name , COUNT( * ) FROM singer_in_concert , concert , singer
  - SELECT singer.name , COUNT( * ) FROM singer_in_concert JOIN singer ON singer_in_concert.singer_id = singer.singer_id
smbop_beam_inferred_code_w_terminals:
  - SELECT singer.name , COUNT( * ) FROM singer_in_concert JOIN singer ON singer_in_concert.singer_id = singer.singer_id GROUP BY singer_in_concert.singer_id
  - SELECT singer_in_concert.singer_id , COUNT( * ) FROM singer_in_concert JOIN singer ON singer_in_concert.singer_id = singer.singer_id GROUP BY singer_in_concert.singer_id
  - SELECT singer.name , COUNT( * ) FROM singer_in_concert JOIN singer ON singer_in_concert.singer_id = singer.singer_id GROUP BY singer.name
  - SELECT singer.name , COUNT( * ) FROM singer_in_concert , concert , singer GROUP BY singer_in_concert.singer_id
  - SELECT singer_in_concert.singer_id , COUNT( * ) FROM singer_in_concert JOIN singer ON singer_in_concert.singer_id = singer.singer_id GROUP BY singer.name
  - SELECT singer.name , COUNT( * ) FROM singer_in_concert , concert , singer GROUP BY singer.name
  - SELECT singer.name , COUNT( * ) FROM singer_in_concert JOIN singer ON singer_in_concert.singer_id = singer.singer_id ORDER BY singer_in_concert.singer_id DESC
  - SELECT singer.name , COUNT( * ) FROM singer_in_concert JOIN singer ON singer_in_concert.singer_id = singer.singer_id ORDER BY singer_in_concert.singer_id ASC
  - SELECT singer.name , COUNT( * ) FROM singer_in_concert , concert , singer
  - SELECT singer.name , COUNT( * ) FROM singer_in_concert JOIN singer ON singer_in_concert.singer_id = singer.singer_id
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - True
  - True
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- - singer_id
- - singer_id
- - singer_id
  - concert_id
  - stadium_id
- - singer_id
- - singer_id
  - concert_id
- - singer_id
- - singer_id
- - singer_id
  - concert_id
  - stadium_id
ratsql_beam_groupby_columns:
- - singer_id
- - name
- - singer_id
- - singer_id
- - singer_id
- - singer_id
- - singer_id
- - name
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
ratsql_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- - '1'
- []
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT singer.Name, Count(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer_in_concert.Singer_ID
  - SELECT singer.Name, Count(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name
  - SELECT singer.Name, Count(*) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID AND stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID AND concert.concert_ID = singer_in_concert.concert_ID GROUP BY singer_in_concert.Singer_ID
  - SELECT singer.Name, Count(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Singer_ID
  - SELECT singer.Name, Count(*) FROM singer JOIN concert JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID AND singer_in_concert.concert_ID = concert.concert_ID AND singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer_in_concert.Singer_ID
  - SELECT DISTINCT singer.Name, Count(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer_in_concert.Singer_ID
  - SELECT singer.Name, Count(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY DISTINCT singer_in_concert.Singer_ID
  - SELECT singer.Name, Count(DISTINCT *) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer_in_concert.Singer_ID
  - SELECT singer.Name, Count(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer_in_concert.Singer_ID LIMIT 1
  - SELECT singer.Name, Count(*) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY singer.Name
ratsql_beam_inferred_code_w_terminals:
  - SELECT singer.Name, Count(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer_in_concert.Singer_ID
  - SELECT singer.Name, Count(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name
  - SELECT singer.Name, Count(*) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID AND stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID AND concert.concert_ID = singer_in_concert.concert_ID GROUP BY singer_in_concert.Singer_ID
  - SELECT singer.Name, Count(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Singer_ID
  - SELECT singer.Name, Count(*) FROM singer JOIN concert JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID AND singer_in_concert.concert_ID = concert.concert_ID AND singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer_in_concert.Singer_ID
  - SELECT DISTINCT singer.Name, Count(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer_in_concert.Singer_ID
  - SELECT singer.Name, Count(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY DISTINCT singer_in_concert.Singer_ID
  - SELECT singer.Name, Count(DISTINCT *) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer_in_concert.Singer_ID
  - SELECT singer.Name, Count(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer_in_concert.Singer_ID LIMIT 1
  - SELECT singer.Name, Count(*) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY singer.Name
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - True
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10517311096191406
  - -0.10460662841796875
  - -0.10631966590881348
  - -0.10470890998840332
  - -0.12345457077026367
  - -0.10217475891113281
  - -0.10430097579956055
  - -0.10079193115234375
  - -0.10509538650512695
  - -0.10475492477416992
  - -0.1049656867980957
  - -0.06408294290304184
  - -0.1135714054107666
  - -0.10483574867248535
  - -0.10267496109008789
  - -0.1171274185180664
  - -0.10030603408813477
  - -0.10640287399291992
  - -0.10620403289794922
  - -0.10646772384643555
  - -0.13088633120059967
  - -0.11092114448547363
  - -0.10514545440673828
  - -0.11871767044067383
  - -0.11107110977172852
  - -0.0997915267944336
  - -0.10482168197631836
  - -0.1040506362915039
  - -0.578113853931427
  - -0.11168766021728516
  - -0.10530424118041992
  - -0.10325002670288086
  - -0.10739278793334961
  - -0.10489487648010254
  - -0.09774208068847656
  - -0.10585832595825195
  - -0.15677309036254883
  - -0.10587072372436523
  - -0.10428667068481445
  - -0.7955774068832397
  - -0.1047201156616211
  - -0.10384082794189453
  - -0.08516261726617813
- - -0.10517311096191406
  - -0.10460662841796875
  - -0.10631966590881348
  - -0.10470890998840332
  - -0.12345457077026367
  - -0.10217475891113281
  - -0.10430097579956055
  - -0.10079193115234375
  - -0.10509538650512695
  - -0.10475492477416992
  - -0.1049656867980957
  - -0.06408294290304184
  - -0.1135714054107666
  - -0.10483574867248535
  - -0.10267496109008789
  - -0.1171274185180664
  - -0.10030603408813477
  - -0.10640287399291992
  - -0.10620403289794922
  - -0.10646772384643555
  - -0.13088633120059967
  - -0.11092114448547363
  - -0.10514545440673828
  - -0.11871767044067383
  - -0.11107110977172852
  - -0.0997915267944336
  - -0.10482168197631836
  - -0.1040506362915039
  - -1.831673264503479
  - -0.10880780220031738
  - -0.10549664497375488
  - -0.10346603393554688
  - -0.10725712776184082
  - -0.10468578338623047
  - -0.09900760650634766
  - -0.10647392272949219
  - -0.19160890579223633
  - -0.10593557357788086
  - -0.10425472259521484
  - -0.7526037096977234
  - -0.10467720031738281
  - -0.10378503799438477
  - -0.08427567780017853
- - -0.10517311096191406
  - -0.10460662841796875
  - -0.10631966590881348
  - -0.10470890998840332
  - -0.12345457077026367
  - -0.10217475891113281
  - -0.10430097579956055
  - -0.10079193115234375
  - -0.10509538650512695
  - -0.10475492477416992
  - -0.1049656867980957
  - -0.06408294290304184
  - -0.1135714054107666
  - -0.10483574867248535
  - -0.10267496109008789
  - -0.1171274185180664
  - -0.10030603408813477
  - -0.10640287399291992
  - -0.10620403289794922
  - -0.10646772384643555
  - -0.13088633120059967
  - -0.11092114448547363
  - -0.10514545440673828
  - -0.11871767044067383
  - -0.11107110977172852
  - -0.0997915267944336
  - -0.10482168197631836
  - -0.1040506362915039
  - -0.578113853931427
  - -0.11168766021728516
  - -0.10530424118041992
  - -0.10325002670288086
  - -0.10739278793334961
  - -0.10489487648010254
  - -0.09774208068847656
  - -0.10585832595825195
  - -0.15677309036254883
  - -0.10587072372436523
  - -0.10428667068481445
  - -2.6662418842315674
  - -0.10470008850097656
  - -0.1041250228881836
  - -0.31847262382507324
- - -0.10517311096191406
  - -0.10460662841796875
  - -0.10631966590881348
  - -0.10470890998840332
  - -0.12345457077026367
  - -0.10217475891113281
  - -0.10430097579956055
  - -0.10079193115234375
  - -0.10509538650512695
  - -0.10475492477416992
  - -0.1049656867980957
  - -0.06408294290304184
  - -0.1135714054107666
  - -0.10483574867248535
  - -0.10267496109008789
  - -0.1171274185180664
  - -0.10030603408813477
  - -0.10640287399291992
  - -0.10620403289794922
  - -0.10646772384643555
  - -0.13088633120059967
  - -0.11092114448547363
  - -0.10514545440673828
  - -0.11871767044067383
  - -0.11107110977172852
  - -0.0997915267944336
  - -0.10482168197631836
  - -0.1040506362915039
  - -2.9685802459716797
  - -0.11028218269348145
  - -0.10541248321533203
  - -0.10544824600219727
  - -0.1073460578918457
  - -0.1048288345336914
  - -0.0978231430053711
  - -0.10590648651123047
  - -0.17193222045898438
  - -0.10591459274291992
  - -0.10419893264770508
  - -0.7809954881668091
  - -0.10469341278076172
  - -0.10381317138671875
  - -0.08510722219944
- - -0.10517311096191406
  - -0.10460662841796875
  - -0.10631966590881348
  - -0.10470890998840332
  - -0.12345457077026367
  - -0.10217475891113281
  - -0.10430097579956055
  - -0.10079193115234375
  - -0.10509538650512695
  - -0.10475492477416992
  - -0.1049656867980957
  - -0.06408294290304184
  - -0.1135714054107666
  - -0.10483574867248535
  - -0.10267496109008789
  - -0.1171274185180664
  - -0.10030603408813477
  - -0.10640287399291992
  - -0.10620403289794922
  - -0.10646772384643555
  - -0.13088633120059967
  - -0.11092114448547363
  - -0.10514545440673828
  - -0.11871767044067383
  - -0.11107110977172852
  - -0.0997915267944336
  - -0.10482168197631836
  - -0.1040506362915039
  - -0.578113853931427
  - -0.11168766021728516
  - -0.10530424118041992
  - -0.10325002670288086
  - -0.10739278793334961
  - -0.10489487648010254
  - -0.09774208068847656
  - -0.10585832595825195
  - -0.15677309036254883
  - -0.10587072372436523
  - -0.10428667068481445
  - -2.990097999572754
  - -0.10489368438720703
  - -0.1054983139038086
  - -0.3313505947589874
- - -0.10517311096191406
  - -0.10460662841796875
  - -0.10631966590881348
  - -0.10470890998840332
  - -0.12345457077026367
  - -0.10217475891113281
  - -0.10430097579956055
  - -0.10079193115234375
  - -0.10509538650512695
  - -0.10475492477416992
  - -0.1049656867980957
  - -0.06408294290304184
  - -3.4418468475341797
  - -0.10380959510803223
  - -0.10251951217651367
  - -0.11618757247924805
  - -0.10091590881347656
  - -0.10694074630737305
  - -0.10603761672973633
  - -0.10631847381591797
  - -0.1308816373348236
  - -0.11107134819030762
  - -0.1052100658416748
  - -0.11923456192016602
  - -0.11119794845581055
  - -0.09982585906982422
  - -0.10477542877197266
  - -0.10406827926635742
  - -0.5805585980415344
  - -0.1116797924041748
  - -0.10530829429626465
  - -0.10326194763183594
  - -0.107391357421875
  - -0.10489535331726074
  - -0.09777116775512695
  - -0.10592365264892578
  - -0.16167449951171875
  - -0.10586214065551758
  - -0.10430145263671875
  - -0.7819572687149048
  - -0.10473775863647461
  - -0.10383462905883789
  - -0.08520016819238663
- - -0.10517311096191406
  - -0.10460662841796875
  - -0.10631966590881348
  - -0.10470890998840332
  - -0.12345457077026367
  - -0.10217475891113281
  - -0.10430097579956055
  - -0.10079193115234375
  - -0.10509538650512695
  - -0.10475492477416992
  - -0.1049656867980957
  - -0.06408294290304184
  - -0.1135714054107666
  - -0.10483574867248535
  - -0.10267496109008789
  - -0.1171274185180664
  - -0.10030603408813477
  - -0.10640287399291992
  - -0.10620403289794922
  - -0.10646772384643555
  - -0.13088633120059967
  - -0.11092114448547363
  - -0.10514545440673828
  - -0.11871767044067383
  - -0.11107110977172852
  - -0.0997915267944336
  - -0.10482168197631836
  - -0.1040506362915039
  - -0.578113853931427
  - -3.4579224586486816
  - -0.10642266273498535
  - -0.10848474502563477
  - -0.1072998046875
  - -0.10497093200683594
  - -0.09797048568725586
  - -0.10635995864868164
  - -0.15012073516845703
  - -0.10584354400634766
  - -0.1043248176574707
  - -0.8033633828163147
  - -0.10472249984741211
  - -0.10384368896484375
  - -0.08518801629543304
- - -0.10517311096191406
  - -0.10460662841796875
  - -0.10631966590881348
  - -0.10470890998840332
  - -0.12345457077026367
  - -0.10217475891113281
  - -0.10430097579956055
  - -0.10079193115234375
  - -0.10509538650512695
  - -0.10475492477416992
  - -0.1049656867980957
  - -0.06408294290304184
  - -0.1135714054107666
  - -0.10483574867248535
  - -0.10267496109008789
  - -0.1171274185180664
  - -0.10030603408813477
  - -0.10640287399291992
  - -0.10620403289794922
  - -0.10646772384643555
  - -0.13088633120059967
  - -3.4839296340942383
  - -0.10482144355773926
  - -0.11915874481201172
  - -0.11200189590454102
  - -0.09965658187866211
  - -0.10492181777954102
  - -0.1041407585144043
  - -0.574058473110199
  - -0.11170268058776855
  - -0.10528802871704102
  - -0.10327625274658203
  - -0.10739636421203613
  - -0.10489153861999512
  - -0.09782648086547852
  - -0.10592365264892578
  - -0.15731048583984375
  - -0.10588455200195312
  - -0.10427474975585938
  - -0.7950615882873535
  - -0.10472297668457031
  - -0.10383844375610352
  - -0.08510448783636093
- - -0.10517311096191406
  - -0.10460662841796875
  - -0.10631966590881348
  - -0.10470890998840332
  - -0.12345457077026367
  - -0.10217475891113281
  - -0.10430097579956055
  - -0.10079193115234375
  - -0.10509538650512695
  - -0.10475492477416992
  - -0.1049656867980957
  - -0.06408294290304184
  - -0.1135714054107666
  - -0.10483574867248535
  - -0.10267496109008789
  - -0.1171274185180664
  - -0.10030603408813477
  - -0.10640287399291992
  - -0.10620403289794922
  - -0.10646772384643555
  - -0.13088633120059967
  - -0.11092114448547363
  - -0.10514545440673828
  - -0.11871767044067383
  - -0.11107110977172852
  - -0.0997915267944336
  - -0.10482168197631836
  - -0.1040506362915039
  - -0.578113853931427
  - -0.11168766021728516
  - -0.10530424118041992
  - -0.10325002670288086
  - -3.55370831489563
  - -0.10492897033691406
  - -0.09830427169799805
  - -0.10541391372680664
  - -0.15820646286010742
  - -0.10574722290039062
  - -0.1043848991394043
  - -0.782926082611084
  - -0.10467529296875
  - -0.10384321212768555
  - -0.0854899063706398
- - -0.10517311096191406
  - -0.10460662841796875
  - -0.10631966590881348
  - -0.10470890998840332
  - -0.12345457077026367
  - -0.10217475891113281
  - -0.10430097579956055
  - -0.10079193115234375
  - -0.10509538650512695
  - -0.10475492477416992
  - -0.1049656867980957
  - -0.06408294290304184
  - -0.1135714054107666
  - -0.10483574867248535
  - -0.10267496109008789
  - -0.1171274185180664
  - -0.10030603408813477
  - -0.10640287399291992
  - -0.10620403289794922
  - -0.10646772384643555
  - -0.13088633120059967
  - -0.11092114448547363
  - -0.10514545440673828
  - -0.11871767044067383
  - -0.11107110977172852
  - -0.0997915267944336
  - -0.10482168197631836
  - -0.1040506362915039
  - -1.831673264503479
  - -0.10880780220031738
  - -0.10549664497375488
  - -0.10346603393554688
  - -0.10725712776184082
  - -0.10468578338623047
  - -0.09900760650634766
  - -0.10647392272949219
  - -0.19160890579223633
  - -0.10593557357788086
  - -0.10425472259521484
  - -2.68696928024292
  - -0.10478401184082031
  - -0.1038522720336914
  - -0.35974109172821045
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Singer_ID'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer_in_concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer_in_concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Singer_ID'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'stadium'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Singer_ID'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer_in_concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Singer_ID'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'concert'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer_in_concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'True'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Singer_ID'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer_in_concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Singer_ID'
  - 'True'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer_in_concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Singer_ID'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer_in_concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Singer_ID'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer_in_concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, False))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Name'
  - 'False'
  - '<EOS>'
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'stadium'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
