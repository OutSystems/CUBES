db: tests-examples/db2csv/concert_singer/tables/concert_singer.sqlite
inputs:
 - tests-examples/db2csv/concert_singer/tables/singer.csv
output: tests-examples/db2csv/concert_singer/tables/0006_dev.csv
raw_question: What is the average, minimum, and maximum age for all French singers? 
question_index: 5 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - France
join_columns: []
groupby_columns: []
orderby_columns: []
functions:
 - avg
 - max
 - min
columns:
 - age
 - country
filters:
 - '='
ieu: []
comment: |-
  SELECT avg(age),
         min(age),
         max(age)
  FROM singer
  WHERE country = 'France'

sql: |-
  SELECT avg(age),
         min(age),
         max(age)
  FROM singer
  WHERE country = 'France'
smbop_beam_join_columns:
- []
smbop_beam_groupby_columns:
- []
smbop_beam_orderby_columns:
- []
smbop_beam_tables:
- - tests-examples/db2csv/concert_singer/tables/singer.csv
smbop_beam_constants:
- - France
smbop_beam_functions:
- - avg
  - max
  - min
smbop_beam_columns:
- - age
  - country
smbop_beam_ieu:
- []
smbop_beam_filters:
- - '='
smbop_beam_inferred_code:
  - SELECT AVG( singer.age ) , MIN( singer.age ) , MAX( singer.age ) FROM singer WHERE singer.country = 'French'
smbop_beam_inferred_code_w_terminals:
  - SELECT AVG( singer.age ) , MIN( singer.age ) , MAX( singer.age ) FROM singer WHERE singer.country = 'French'
smbop_beam_has_limit:
  - False
smbop_beam_has_order_by:
  - False
smbop_beam_order_by_direction:
- []
ratsql_beam_join_columns:
- - singer_id
  - concert_id
  - stadium_id
- - singer_id
  - concert_id
  - stadium_id
- - singer_id
  - concert_id
  - stadium_id
- - singer_id
  - concert_id
  - stadium_id
- []
- []
- - singer_id
  - concert_id
  - stadium_id
- - singer_id
  - concert_id
  - stadium_id
- - singer_id
  - concert_id
  - stadium_id
- - singer_id
  - concert_id
  - stadium_id
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_orderby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
ratsql_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_functions:
- - avg
  - max
  - min
- - avg
  - max
  - min
- - avg
  - max
  - min
- - avg
  - max
  - min
- - avg
  - max
  - min
- - avg
  - max
  - min
- - avg
  - max
  - min
- - avg
  - max
  - min
- - avg
  - max
  - min
- - avg
  - max
  - min
ratsql_beam_columns:
- - age
  - is_male
  - average
- - age
  - is_male
  - average
- - age
  - average
  - country
- - age
  - average
  - country
- - age
  - is_male
- - age
  - country
- - age
  - is_male
  - average
- - age
  - is_male
  - average
- - age
  - average
  - country
- - age
  - average
  - country
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Avg(stadium.Average), Min(singer.Age), Max(singer.Age) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Is_male = 'terminal'
  - SELECT Avg(stadium.Average), Min(singer.Age), Max(singer.Age) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID AND stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID AND concert.concert_ID = singer_in_concert.concert_ID WHERE singer.Is_male = 'terminal'
  - SELECT Avg(stadium.Average), Min(singer.Age), Max(singer.Age) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Country = 'terminal'
  - SELECT Avg(stadium.Average), Min(singer.Age), Max(singer.Age) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID AND stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID AND concert.concert_ID = singer_in_concert.concert_ID WHERE singer.Country = 'terminal'
  - SELECT Avg(singer.Age), Min(singer.Age), Max(singer.Age) FROM singer WHERE singer.Is_male = 'terminal'
  - SELECT Avg(singer.Age), Min(singer.Age), Max(singer.Age) FROM singer WHERE singer.Country = 'terminal'
  - SELECT Avg(stadium.Average), Min(singer.Age), Max(singer.Age) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID AND stadium.Stadium_ID = concert.Stadium_ID AND stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID AND concert.concert_ID = singer_in_concert.concert_ID WHERE singer.Is_male = 'terminal'
  - SELECT Avg(stadium.Average), Min(singer.Age), Max(singer.Age) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID AND stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Is_male = 'terminal'
  - SELECT Avg(stadium.Average), Min(singer.Age), Max(singer.Age) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID AND stadium.Stadium_ID = concert.Stadium_ID AND stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID AND concert.concert_ID = singer_in_concert.concert_ID WHERE singer.Country = 'terminal'
  - SELECT Avg(stadium.Average), Min(singer.Age), Max(singer.Age) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID AND stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Country = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Avg(stadium.Average), Min(singer.Age), Max(singer.Age) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Is_male = 't'
  - SELECT Avg(stadium.Average), Min(singer.Age), Max(singer.Age) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID AND stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID AND concert.concert_ID = singer_in_concert.concert_ID WHERE singer.Is_male = 't'
  - 
  - 
  - SELECT Avg(singer.Age), Min(singer.Age), Max(singer.Age) FROM singer WHERE singer.Is_male = 't'
  - 
  - SELECT Avg(stadium.Average), Min(singer.Age), Max(singer.Age) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID AND stadium.Stadium_ID = concert.Stadium_ID AND stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID AND concert.concert_ID = singer_in_concert.concert_ID WHERE singer.Is_male = 't'
  - SELECT Avg(stadium.Average), Min(singer.Age), Max(singer.Age) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID AND stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Is_male = 't'
  - 
  - 
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10375070571899414
  - -0.10409402847290039
  - -0.10492873191833496
  - -0.10565924644470215
  - -0.2089834213256836
  - -0.10131072998046875
  - -0.16249322891235352
  - -0.10513782501220703
  - -0.10626649856567383
  - -0.10408353805541992
  - -0.10532522201538086
  - -0.1779310256242752
  - -0.11153626441955566
  - -0.10580062866210938
  - -0.11446666717529297
  - -0.1020350456237793
  - -0.09603214263916016
  - -0.10594463348388672
  - -0.10391473770141602
  - -0.10528707504272461
  - -0.15064896643161774
  - -0.11121249198913574
  - -0.10524296760559082
  - -0.10189485549926758
  - -0.0990133285522461
  - -0.10113286972045898
  - -0.10701131820678711
  - -0.10434198379516602
  - -0.1049346923828125
  - -0.05284770578145981
  - -0.11134624481201172
  - -0.10525965690612793
  - -0.0905756950378418
  - -0.10260200500488281
  - -0.10046863555908203
  - -0.10170984268188477
  - -0.10527420043945312
  - -0.1044912338256836
  - -0.10378885269165039
  - -0.7972501516342163
  - -0.11339879035949707
  - -0.10512971878051758
  - -0.10714054107666016
  - -0.1017599105834961
  - -0.10267162322998047
  - -0.10750246047973633
  - -0.10452723503112793
  - -0.09765434265136719
  - -0.10493993759155273
  - -1.831254005432129
  - -0.10483694076538086
  - -0.1031332015991211
  - -0.10206998884677887
- - -0.10375070571899414
  - -0.10409402847290039
  - -0.10492873191833496
  - -0.10565924644470215
  - -0.2089834213256836
  - -0.10131072998046875
  - -0.16249322891235352
  - -0.10513782501220703
  - -0.10626649856567383
  - -0.10408353805541992
  - -0.10532522201538086
  - -0.1779310256242752
  - -0.11153626441955566
  - -0.10580062866210938
  - -0.11446666717529297
  - -0.1020350456237793
  - -0.09603214263916016
  - -0.10594463348388672
  - -0.10391473770141602
  - -0.10528707504272461
  - -0.15064896643161774
  - -0.11121249198913574
  - -0.10524296760559082
  - -0.10189485549926758
  - -0.0990133285522461
  - -0.10113286972045898
  - -0.10701131820678711
  - -0.10434198379516602
  - -0.1049346923828125
  - -0.05284770578145981
  - -0.11134624481201172
  - -0.10525965690612793
  - -0.0905756950378418
  - -0.10260200500488281
  - -0.10046863555908203
  - -0.10170984268188477
  - -0.10527420043945312
  - -0.1044912338256836
  - -0.10378885269165039
  - -0.7972501516342163
  - -0.11339879035949707
  - -0.10512971878051758
  - -0.10714054107666016
  - -0.1017599105834961
  - -0.10267162322998047
  - -0.10750246047973633
  - -0.10452723503112793
  - -0.09765434265136719
  - -0.10493993759155273
  - -0.46343374252319336
  - -0.10495710372924805
  - -0.10422182083129883
  - -0.7086808085441589
  - -0.10516595840454102
  - -0.10311508178710938
  - -0.13222788274288177
  - -0.10725975036621094
  - -0.10432863235473633
  - -0.43436381220817566
- - -0.10375070571899414
  - -0.10409402847290039
  - -0.10492873191833496
  - -0.10565924644470215
  - -0.2089834213256836
  - -0.10131072998046875
  - -0.16249322891235352
  - -0.10513782501220703
  - -0.10626649856567383
  - -0.10408353805541992
  - -0.10532522201538086
  - -0.1779310256242752
  - -0.11153626441955566
  - -0.10580062866210938
  - -0.11446666717529297
  - -0.1020350456237793
  - -0.09603214263916016
  - -0.10594463348388672
  - -0.10391473770141602
  - -0.10528707504272461
  - -0.15064896643161774
  - -0.11121249198913574
  - -0.10524296760559082
  - -0.10189485549926758
  - -0.0990133285522461
  - -0.10113286972045898
  - -0.10701131820678711
  - -0.10434198379516602
  - -0.1049346923828125
  - -0.05284770578145981
  - -0.11134624481201172
  - -0.10525965690612793
  - -0.0905756950378418
  - -0.10260200500488281
  - -0.10046863555908203
  - -0.10170984268188477
  - -0.10527420043945312
  - -0.1044912338256836
  - -0.10378885269165039
  - -0.9759998917579651
  - -0.11305761337280273
  - -0.10521078109741211
  - -0.10981273651123047
  - -0.10145187377929688
  - -0.10254764556884766
  - -0.10753440856933594
  - -0.10454154014587402
  - -0.09796142578125
  - -0.10484933853149414
  - -1.898665428161621
  - -0.10486030578613281
  - -0.10315418243408203
  - -0.10134841501712799
- - -0.10375070571899414
  - -0.10409402847290039
  - -0.10492873191833496
  - -0.10565924644470215
  - -0.2089834213256836
  - -0.10131072998046875
  - -0.16249322891235352
  - -0.10513782501220703
  - -0.10626649856567383
  - -0.10408353805541992
  - -0.10532522201538086
  - -0.1779310256242752
  - -0.11153626441955566
  - -0.10580062866210938
  - -0.11446666717529297
  - -0.1020350456237793
  - -0.09603214263916016
  - -0.10594463348388672
  - -0.10391473770141602
  - -0.10528707504272461
  - -0.15064896643161774
  - -0.11121249198913574
  - -0.10524296760559082
  - -0.10189485549926758
  - -0.0990133285522461
  - -0.10113286972045898
  - -0.10701131820678711
  - -0.10434198379516602
  - -0.1049346923828125
  - -0.05284770578145981
  - -0.11134624481201172
  - -0.10525965690612793
  - -0.0905756950378418
  - -0.10260200500488281
  - -0.10046863555908203
  - -0.10170984268188477
  - -0.10527420043945312
  - -0.1044912338256836
  - -0.10378885269165039
  - -0.9759998917579651
  - -0.11305761337280273
  - -0.10521078109741211
  - -0.10981273651123047
  - -0.10145187377929688
  - -0.10254764556884766
  - -0.10753440856933594
  - -0.10454154014587402
  - -0.09796142578125
  - -0.10484933853149414
  - -0.4297142028808594
  - -0.1049351692199707
  - -0.10421562194824219
  - -0.7084736227989197
  - -0.10515308380126953
  - -0.10311508178710938
  - -0.13239967823028564
  - -0.10719060897827148
  - -0.10434770584106445
  - -0.43451589345932007
- - -0.10375070571899414
  - -0.10409402847290039
  - -0.10492873191833496
  - -0.10565924644470215
  - -0.2089834213256836
  - -0.10131072998046875
  - -0.16249322891235352
  - -0.10513782501220703
  - -0.10626649856567383
  - -0.10408353805541992
  - -0.10532522201538086
  - -2.8151581287384033
  - -0.11591601371765137
  - -0.10503005981445312
  - -0.11077737808227539
  - -0.10782384872436523
  - -0.0980844497680664
  - -0.1065516471862793
  - -0.10479211807250977
  - -0.10514354705810547
  - -0.07893095165491104
  - -0.11051607131958008
  - -0.1051630973815918
  - -0.10166215896606445
  - -0.10158681869506836
  - -0.10052299499511719
  - -0.10796642303466797
  - -0.10478448867797852
  - -0.1050410270690918
  - -0.0506766140460968
  - -0.11156511306762695
  - -0.10524535179138184
  - -0.09114933013916016
  - -0.10283374786376953
  - -0.10046672821044922
  - -0.10165786743164062
  - -0.10524892807006836
  - -0.1045079231262207
  - -0.1039433479309082
  - -0.7971960306167603
  - -0.11334848403930664
  - -0.10512137413024902
  - -0.10667085647583008
  - -0.10175180435180664
  - -0.10250377655029297
  - -0.1076650619506836
  - -0.1045217514038086
  - -0.09761571884155273
  - -0.10412168502807617
  - -0.10613536834716797
  - -0.10518026351928711
  - -0.1037898063659668
  - -0.0932449921965599
- - -0.10375070571899414
  - -0.10409402847290039
  - -0.10492873191833496
  - -0.10565924644470215
  - -0.2089834213256836
  - -0.10131072998046875
  - -0.16249322891235352
  - -0.10513782501220703
  - -0.10626649856567383
  - -0.10408353805541992
  - -0.10532522201538086
  - -2.8151581287384033
  - -0.11591601371765137
  - -0.10503005981445312
  - -0.11077737808227539
  - -0.10782384872436523
  - -0.0980844497680664
  - -0.1065516471862793
  - -0.10479211807250977
  - -0.10514354705810547
  - -0.07893095165491104
  - -0.11051607131958008
  - -0.1051630973815918
  - -0.10166215896606445
  - -0.10158681869506836
  - -0.10052299499511719
  - -0.10796642303466797
  - -0.10478448867797852
  - -0.1050410270690918
  - -0.0506766140460968
  - -0.11156511306762695
  - -0.10524535179138184
  - -0.09114933013916016
  - -0.10283374786376953
  - -0.10046672821044922
  - -0.10165786743164062
  - -0.10524892807006836
  - -0.1045079231262207
  - -0.1039433479309082
  - -0.9759493470191956
  - -0.11299490928649902
  - -0.1052091121673584
  - -0.10928010940551758
  - -0.10144472122192383
  - -0.10245132446289062
  - -0.10765576362609863
  - -0.10454344749450684
  - -0.09759998321533203
  - -0.10378265380859375
  - -0.10572147369384766
  - -0.10512065887451172
  - -0.10379600524902344
  - -0.09305547177791595
- - -0.10375070571899414
  - -0.10409402847290039
  - -0.10492873191833496
  - -0.10565924644470215
  - -0.2089834213256836
  - -0.10131072998046875
  - -0.16249322891235352
  - -0.10513782501220703
  - -0.10626649856567383
  - -0.10408353805541992
  - -0.10532522201538086
  - -0.1779310256242752
  - -0.11153626441955566
  - -0.10580062866210938
  - -0.11446666717529297
  - -0.1020350456237793
  - -0.09603214263916016
  - -0.10594463348388672
  - -0.10391473770141602
  - -0.10528707504272461
  - -0.15064896643161774
  - -0.11121249198913574
  - -0.10524296760559082
  - -0.10189485549926758
  - -0.0990133285522461
  - -0.10113286972045898
  - -0.10701131820678711
  - -0.10434198379516602
  - -0.1049346923828125
  - -0.05284770578145981
  - -0.11134624481201172
  - -0.10525965690612793
  - -0.0905756950378418
  - -0.10260200500488281
  - -0.10046863555908203
  - -0.10170984268188477
  - -0.10527420043945312
  - -0.1044912338256836
  - -0.10378885269165039
  - -0.7972501516342163
  - -0.11339879035949707
  - -0.10512971878051758
  - -0.10714054107666016
  - -0.1017599105834961
  - -0.10267162322998047
  - -0.10750246047973633
  - -0.10452723503112793
  - -0.09765434265136719
  - -0.10493993759155273
  - -0.46343374252319336
  - -0.10495710372924805
  - -0.10422182083129883
  - -0.7086808085441589
  - -0.10516595840454102
  - -0.10311508178710938
  - -0.13222788274288177
  - -0.10725975036621094
  - -0.10432863235473633
  - -1.9902257919311523
- - -0.10375070571899414
  - -0.10409402847290039
  - -0.10492873191833496
  - -0.10565924644470215
  - -0.2089834213256836
  - -0.10131072998046875
  - -0.16249322891235352
  - -0.10513782501220703
  - -0.10626649856567383
  - -0.10408353805541992
  - -0.10532522201538086
  - -0.1779310256242752
  - -0.11153626441955566
  - -0.10580062866210938
  - -0.11446666717529297
  - -0.1020350456237793
  - -0.09603214263916016
  - -0.10594463348388672
  - -0.10391473770141602
  - -0.10528707504272461
  - -0.15064896643161774
  - -0.11121249198913574
  - -0.10524296760559082
  - -0.10189485549926758
  - -0.0990133285522461
  - -0.10113286972045898
  - -0.10701131820678711
  - -0.10434198379516602
  - -0.1049346923828125
  - -0.05284770578145981
  - -0.11134624481201172
  - -0.10525965690612793
  - -0.0905756950378418
  - -0.10260200500488281
  - -0.10046863555908203
  - -0.10170984268188477
  - -0.10527420043945312
  - -0.1044912338256836
  - -0.10378885269165039
  - -0.7972501516342163
  - -0.11339879035949707
  - -0.10512971878051758
  - -0.10714054107666016
  - -0.1017599105834961
  - -0.10267162322998047
  - -0.10750246047973633
  - -0.10452723503112793
  - -0.09765434265136719
  - -0.10493993759155273
  - -0.46343374252319336
  - -0.10495710372924805
  - -0.10422182083129883
  - -2.094179630279541
  - -0.10708045959472656
  - -0.10318994522094727
  - -0.5281031727790833
  - -0.1060791015625
  - -0.10422515869140625
  - -0.3318551480770111
- - -0.10375070571899414
  - -0.10409402847290039
  - -0.10492873191833496
  - -0.10565924644470215
  - -0.2089834213256836
  - -0.10131072998046875
  - -0.16249322891235352
  - -0.10513782501220703
  - -0.10626649856567383
  - -0.10408353805541992
  - -0.10532522201538086
  - -0.1779310256242752
  - -0.11153626441955566
  - -0.10580062866210938
  - -0.11446666717529297
  - -0.1020350456237793
  - -0.09603214263916016
  - -0.10594463348388672
  - -0.10391473770141602
  - -0.10528707504272461
  - -0.15064896643161774
  - -0.11121249198913574
  - -0.10524296760559082
  - -0.10189485549926758
  - -0.0990133285522461
  - -0.10113286972045898
  - -0.10701131820678711
  - -0.10434198379516602
  - -0.1049346923828125
  - -0.05284770578145981
  - -0.11134624481201172
  - -0.10525965690612793
  - -0.0905756950378418
  - -0.10260200500488281
  - -0.10046863555908203
  - -0.10170984268188477
  - -0.10527420043945312
  - -0.1044912338256836
  - -0.10378885269165039
  - -0.9759998917579651
  - -0.11305761337280273
  - -0.10521078109741211
  - -0.10981273651123047
  - -0.10145187377929688
  - -0.10254764556884766
  - -0.10753440856933594
  - -0.10454154014587402
  - -0.09796142578125
  - -0.10484933853149414
  - -0.4297142028808594
  - -0.1049351692199707
  - -0.10421562194824219
  - -0.7084736227989197
  - -0.10515308380126953
  - -0.10311508178710938
  - -0.13239967823028564
  - -0.10719060897827148
  - -0.10434770584106445
  - -1.9897887706756592
- - -0.10375070571899414
  - -0.10409402847290039
  - -0.10492873191833496
  - -0.10565924644470215
  - -0.2089834213256836
  - -0.10131072998046875
  - -0.16249322891235352
  - -0.10513782501220703
  - -0.10626649856567383
  - -0.10408353805541992
  - -0.10532522201538086
  - -0.1779310256242752
  - -0.11153626441955566
  - -0.10580062866210938
  - -0.11446666717529297
  - -0.1020350456237793
  - -0.09603214263916016
  - -0.10594463348388672
  - -0.10391473770141602
  - -0.10528707504272461
  - -0.15064896643161774
  - -0.11121249198913574
  - -0.10524296760559082
  - -0.10189485549926758
  - -0.0990133285522461
  - -0.10113286972045898
  - -0.10701131820678711
  - -0.10434198379516602
  - -0.1049346923828125
  - -0.05284770578145981
  - -0.11134624481201172
  - -0.10525965690612793
  - -0.0905756950378418
  - -0.10260200500488281
  - -0.10046863555908203
  - -0.10170984268188477
  - -0.10527420043945312
  - -0.1044912338256836
  - -0.10378885269165039
  - -0.9759998917579651
  - -0.11305761337280273
  - -0.10521078109741211
  - -0.10981273651123047
  - -0.10145187377929688
  - -0.10254764556884766
  - -0.10753440856933594
  - -0.10454154014587402
  - -0.09796142578125
  - -0.10484933853149414
  - -0.4297142028808594
  - -0.1049351692199707
  - -0.10421562194824219
  - -2.0932679176330566
  - -0.10701990127563477
  - -0.10319280624389648
  - -0.5305624008178711
  - -0.10605478286743164
  - -0.1042623519897461
  - -0.33170151710510254
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Average'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Is_male'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Average'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Is_male'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer_in_concert'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Average'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Average'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer_in_concert'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Is_male'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Average'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Is_male'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer_in_concert'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Average'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Is_male'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'concert'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Average'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer_in_concert'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 3)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Average'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Min')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 3)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'concert'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
