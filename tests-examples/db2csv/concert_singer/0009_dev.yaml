db: tests-examples/db2csv/concert_singer/tables/concert_singer.sqlite
inputs:
 - tests-examples/db2csv/concert_singer/tables/singer.csv
output: tests-examples/db2csv/concert_singer/tables/0009_dev.csv
raw_question: What are all distinct countries where singers above age 20 are from? 
question_index: 8 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - 20
join_columns: []
groupby_columns: []
functions: []
columns:
 - age
filters:
 - '>'
ieu: []
comment: |-
  SELECT DISTINCT country
  FROM singer
  WHERE age > 20

sql: |-
  SELECT DISTINCT country
  FROM singer
  WHERE age > 20
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
smbop_beam_constants:
- - 20
- - 20
- - 20
- - 20
- - 20
- - 20
- - 20
- - 20
- - 20
- - 20
smbop_beam_functions:
- []
- []
- - avg
- []
- []
- []
- []
- []
- []
- []
smbop_beam_columns:
- - age
- - 20
- - country
  - age
- - age
- - age
- - age
- - age
- - age
- - age
- - age
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '>'
- - '>'
- - '>'
- - '='
- - '>'
  - '>='
- - '<'
- - '='
- - '<'
- - '<'
- - '<'
smbop_beam_inferred_code:
  - SELECT DISTINCT singer.country FROM singer WHERE singer.age > 20
  - SELECT DISTINCT singer.country FROM singer WHERE 20 > 20
  - SELECT AVG( singer.country ) FROM singer WHERE singer.age > 20
  - SELECT DISTINCT singer.country FROM singer WHERE singer.age = 20
  - SELECT DISTINCT singer.country FROM singer WHERE singer.age >= 20
  - SELECT DISTINCT singer.country FROM singer WHERE singer.age<20
  - SELECT DISTINCT singer.country FROM singer_in_concert, singer WHERE singer.age = 20
  - SELECT DISTINCT singer.country FROM singer_in_concert, singer WHERE singer.age<20
  - SELECT DISTINCT singer.country FROM stadium, singer WHERE singer.age<20
  - SELECT DISTINCT singer.country FROM concert, singer WHERE singer.age<20
smbop_beam_inferred_code_w_terminals:
  - SELECT DISTINCT singer.country FROM singer WHERE singer.age > 20
  - SELECT DISTINCT singer.country FROM singer WHERE 20 > 20
  - SELECT AVG( singer.country ) FROM singer WHERE singer.age > 20
  - SELECT DISTINCT singer.country FROM singer WHERE singer.age = 20
  - SELECT DISTINCT singer.country FROM singer WHERE singer.age >= 20
  - SELECT DISTINCT singer.country FROM singer WHERE singer.age<20
  - SELECT DISTINCT singer.country FROM singer_in_concert, singer WHERE singer.age = 20
  - SELECT DISTINCT singer.country FROM singer_in_concert, singer WHERE singer.age<20
  - SELECT DISTINCT singer.country FROM stadium, singer WHERE singer.age<20
  - SELECT DISTINCT singer.country FROM concert, singer WHERE singer.age<20
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- []
- []
- - singer_id
  - concert_id
- - singer_id
  - stadium_id
  - concert_id
- - singer_id
- []
- []
- []
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
  - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
ratsql_beam_constants:
- - 20
- - 20
- - 20
- - 20
- - 20
- - 20
- - 20
- - 20
  - '1'
- - 20
- - 20
ratsql_beam_functions:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_columns:
- - age
- - age
- - age
- - age
- - age
- - age
- - age
- - singer_id
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '>'
- - '<'
- - '>'
ratsql_beam_inferred_code:
  - SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 'terminal'
  - SELECT singer.Country FROM singer WHERE singer.Age > 'terminal'
  - SELECT DISTINCT singer.Country FROM singer JOIN concert JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID AND singer_in_concert.concert_ID = concert.concert_ID WHERE singer.Age > 'terminal'
  - SELECT DISTINCT singer.Country FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Age > 'terminal'
  - SELECT DISTINCT singer.Country FROM singer WHERE DISTINCT singer.Age > 'terminal'
  - SELECT DISTINCT DISTINCT singer.Country FROM singer WHERE singer.Age > 'terminal'
  - SELECT DISTINCT singer.Country FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer.Age > 'terminal'
  - SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 'terminal' LIMIT 1
  - SELECT DISTINCT singer.Country FROM singer WHERE singer.Age < 'terminal'
  - SELECT DISTINCT singer.Country FROM singer WHERE singer.Singer_ID > 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 20
  - SELECT singer.Country FROM singer WHERE singer.Age > 20
  - SELECT DISTINCT singer.Country FROM singer JOIN concert JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID AND singer_in_concert.concert_ID = concert.concert_ID WHERE singer.Age > 20
  - SELECT DISTINCT singer.Country FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Age > 20
  - SELECT DISTINCT singer.Country FROM singer WHERE DISTINCT singer.Age > 20
  - SELECT DISTINCT DISTINCT singer.Country FROM singer WHERE singer.Age > 20
  - SELECT DISTINCT singer.Country FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer.Age > 20
  - SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 20 LIMIT 1
  - SELECT DISTINCT singer.Country FROM singer WHERE singer.Age < 20
  - SELECT DISTINCT singer.Country FROM singer WHERE singer.Singer_ID > 20
ratsql_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - True
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10365867614746094
  - -0.1049656867980957
  - -0.11970400810241699
  - -0.10457205772399902
  - -0.09896326065063477
  - -0.1025857925415039
  - -0.10422515869140625
  - -0.10160017013549805
  - -0.10428953170776367
  - -0.10496377944946289
  - -0.10483503341674805
  - -0.08221519738435745
  - -0.11137127876281738
  - -0.10633730888366699
  - -0.09933853149414062
  - -0.11390876770019531
  - -0.09461069107055664
  - -0.10198354721069336
  - -0.10390186309814453
  - -0.10445261001586914
  - -0.10307884216308594
  - -0.08714121580123901
  - -0.11095905303955078
  - -0.10582995414733887
  - -0.10638046264648438
  - -0.10412025451660156
  - -0.10251712799072266
  - -0.10743141174316406
  - -0.10483932495117188
  - -0.09922122955322266
  - -0.10397100448608398
  - -0.1082158088684082
  - -0.10493993759155273
  - -0.10374832153320312
  - -0.10088759660720825
- - -0.10365867614746094
  - -0.1049656867980957
  - -3.286233425140381
  - -0.10514950752258301
  - -0.10063409805297852
  - -0.10292577743530273
  - -0.10541439056396484
  - -0.10198116302490234
  - -0.10436439514160156
  - -0.10480308532714844
  - -0.10511589050292969
  - -0.09221921116113663
  - -0.11125659942626953
  - -0.10631489753723145
  - -0.10090065002441406
  - -0.11688375473022461
  - -0.09567499160766602
  - -0.1020808219909668
  - -0.10395622253417969
  - -0.10450315475463867
  - -0.10293436050415039
  - -0.09766732901334763
  - -0.11098241806030273
  - -0.1057736873626709
  - -0.10653257369995117
  - -0.10405635833740234
  - -0.10259294509887695
  - -0.10744953155517578
  - -0.10484766960144043
  - -0.09972047805786133
  - -0.10409164428710938
  - -0.10838508605957031
  - -0.10500097274780273
  - -0.10376644134521484
  - -0.0994071513414383
- - -0.10365867614746094
  - -0.1049656867980957
  - -0.11970400810241699
  - -0.10457205772399902
  - -0.09896326065063477
  - -0.1025857925415039
  - -0.10422515869140625
  - -0.10160017013549805
  - -0.10428953170776367
  - -0.10496377944946289
  - -0.10483503341674805
  - -0.08221519738435745
  - -0.11137127876281738
  - -0.10633730888366699
  - -0.09933853149414062
  - -0.11390876770019531
  - -0.09461069107055664
  - -0.10198354721069336
  - -0.10390186309814453
  - -0.10445261001586914
  - -0.10307884216308594
  - -0.08714121580123901
  - -0.11095905303955078
  - -0.10582995414733887
  - -0.10638046264648438
  - -0.10412025451660156
  - -0.10251712799072266
  - -0.10743141174316406
  - -0.10483932495117188
  - -0.09922122955322266
  - -0.10397100448608398
  - -0.1082158088684082
  - -0.10493993759155273
  - -0.10374832153320312
  - -3.41190505027771
- - -0.10365867614746094
  - -0.1049656867980957
  - -0.11970400810241699
  - -0.10457205772399902
  - -0.09896326065063477
  - -0.1025857925415039
  - -0.10422515869140625
  - -0.10160017013549805
  - -0.10428953170776367
  - -0.10496377944946289
  - -0.10483503341674805
  - -0.08221519738435745
  - -0.11137127876281738
  - -0.10633730888366699
  - -0.09933853149414062
  - -0.11390876770019531
  - -0.09461069107055664
  - -0.10198354721069336
  - -0.10390186309814453
  - -0.10445261001586914
  - -0.10307884216308594
  - -0.08714121580123901
  - -0.11095905303955078
  - -0.10582995414733887
  - -0.10638046264648438
  - -0.10412025451660156
  - -0.10251712799072266
  - -0.10743141174316406
  - -0.10483932495117188
  - -0.09922122955322266
  - -0.10397100448608398
  - -0.1082158088684082
  - -0.10493993759155273
  - -0.10374832153320312
  - -3.414975881576538
- - -0.10365867614746094
  - -0.1049656867980957
  - -0.11970400810241699
  - -0.10457205772399902
  - -0.09896326065063477
  - -0.1025857925415039
  - -0.10422515869140625
  - -0.10160017013549805
  - -0.10428953170776367
  - -0.10496377944946289
  - -0.10483503341674805
  - -0.08221519738435745
  - -0.11137127876281738
  - -0.10633730888366699
  - -0.09933853149414062
  - -0.11390876770019531
  - -0.09461069107055664
  - -0.10198354721069336
  - -0.10390186309814453
  - -0.10445261001586914
  - -0.10307884216308594
  - -0.08714121580123901
  - -3.4544432163238525
  - -0.10586953163146973
  - -0.10809850692749023
  - -0.10380697250366211
  - -0.10271358489990234
  - -0.10740470886230469
  - -0.10489177703857422
  - -0.09807205200195312
  - -0.10413122177124023
  - -0.1081857681274414
  - -0.10496091842651367
  - -0.10369586944580078
  - -0.10353220254182816
- - -0.10365867614746094
  - -0.1049656867980957
  - -0.11970400810241699
  - -0.10457205772399902
  - -0.09896326065063477
  - -0.1025857925415039
  - -0.10422515869140625
  - -0.10160017013549805
  - -0.10428953170776367
  - -0.10496377944946289
  - -0.10483503341674805
  - -0.08221519738435745
  - -3.4749321937561035
  - -0.10637950897216797
  - -0.08981513977050781
  - -0.11963033676147461
  - -0.09624767303466797
  - -0.10216760635375977
  - -0.10392475128173828
  - -0.10451364517211914
  - -0.10270261764526367
  - -0.10710922628641129
  - -0.1110384464263916
  - -0.1057736873626709
  - -0.10659456253051758
  - -0.1043996810913086
  - -0.10257959365844727
  - -0.10742473602294922
  - -0.10485482215881348
  - -0.0994873046875
  - -0.10399770736694336
  - -0.10822772979736328
  - -0.10496997833251953
  - -0.10378217697143555
  - -0.10112282633781433
- - -0.10365867614746094
  - -0.1049656867980957
  - -0.11970400810241699
  - -0.10457205772399902
  - -0.09896326065063477
  - -0.1025857925415039
  - -0.10422515869140625
  - -0.10160017013549805
  - -0.10428953170776367
  - -0.10496377944946289
  - -0.10483503341674805
  - -0.08221519738435745
  - -0.11137127876281738
  - -0.10633730888366699
  - -0.09933853149414062
  - -0.11390876770019531
  - -0.09461069107055664
  - -0.10198354721069336
  - -0.10390186309814453
  - -0.10445261001586914
  - -0.10307884216308594
  - -0.08714121580123901
  - -0.11095905303955078
  - -0.10582995414733887
  - -0.10638046264648438
  - -0.10412025451660156
  - -0.10251712799072266
  - -0.10743141174316406
  - -0.10483932495117188
  - -0.09922122955322266
  - -0.10397100448608398
  - -0.1082158088684082
  - -0.10493993759155273
  - -0.10374832153320312
  - -3.5029003620147705
- - -0.10365867614746094
  - -0.1049656867980957
  - -0.11970400810241699
  - -0.10457205772399902
  - -0.09896326065063477
  - -0.1025857925415039
  - -0.10422515869140625
  - -0.10160017013549805
  - -0.10428953170776367
  - -0.10496377944946289
  - -0.10483503341674805
  - -0.08221519738435745
  - -0.11137127876281738
  - -0.10633730888366699
  - -0.09933853149414062
  - -0.11390876770019531
  - -0.09461069107055664
  - -0.10198354721069336
  - -0.10390186309814453
  - -0.10445261001586914
  - -0.10307884216308594
  - -0.08714121580123901
  - -0.11095905303955078
  - -0.10582995414733887
  - -0.10638046264648438
  - -0.10412025451660156
  - -0.10251712799072266
  - -3.553886890411377
  - -0.10494065284729004
  - -0.09953498840332031
  - -0.10387992858886719
  - -0.10828781127929688
  - -0.10502958297729492
  - -0.10381555557250977
  - -0.10005418956279755
- - -0.10365867614746094
  - -0.1049656867980957
  - -0.11970400810241699
  - -0.10457205772399902
  - -0.09896326065063477
  - -0.1025857925415039
  - -0.10422515869140625
  - -0.10160017013549805
  - -0.10428953170776367
  - -0.10496377944946289
  - -0.10483503341674805
  - -0.08221519738435745
  - -0.11137127876281738
  - -0.10633730888366699
  - -0.09933853149414062
  - -5.11405086517334
  - -0.08455705642700195
  - -0.10093498229980469
  - -0.1044759750366211
  - -0.10468721389770508
  - -0.10412311553955078
  - -0.04976920038461685
  - -0.11150383949279785
  - -0.10567712783813477
  - -0.10532093048095703
  - -0.10385274887084961
  - -0.10268926620483398
  - -0.10743927955627441
  - -0.10482215881347656
  - -0.09864044189453125
  - -0.10370492935180664
  - -0.1080331802368164
  - -0.10490131378173828
  - -0.10380268096923828
  - -0.10192594677209854
- - -0.10365867614746094
  - -0.1049656867980957
  - -0.11970400810241699
  - -0.10457205772399902
  - -0.09896326065063477
  - -0.1025857925415039
  - -0.10422515869140625
  - -0.10160017013549805
  - -0.10428953170776367
  - -0.10496377944946289
  - -0.10483503341674805
  - -0.08221519738435745
  - -0.11137127876281738
  - -0.10633730888366699
  - -0.09933853149414062
  - -0.11390876770019531
  - -0.09461069107055664
  - -0.10198354721069336
  - -0.10390186309814453
  - -0.10445261001586914
  - -0.10307884216308594
  - -5.2370405197143555
  - -0.11058998107910156
  - -0.10592436790466309
  - -0.10846424102783203
  - -0.10165786743164062
  - -0.10242748260498047
  - -0.10744953155517578
  - -0.10486888885498047
  - -0.09905052185058594
  - -0.10455799102783203
  - -0.10787057876586914
  - -0.10492420196533203
  - -0.1037135124206543
  - -0.10725091397762299
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'stadium'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer_in_concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Lt')
  - ('Lt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Age'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Country'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Gt')
  - ('Gt', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Singer_ID'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
