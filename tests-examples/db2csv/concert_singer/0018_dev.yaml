db: tests-examples/db2csv/concert_singer/tables/concert_singer.sqlite
inputs:
 - tests-examples/db2csv/concert_singer/tables/stadium.csv
output: tests-examples/db2csv/concert_singer/tables/0018_dev.csv
raw_question: What is the average and maximum capacities for all stadiums ? 
question_index: 17 
functions:
 - avg
 - max
columns:
 - capacity
comment: |-
  select avg(capacity),
         max(capacity)
  from stadium

sql: |-
  select avg(capacity),
         max(capacity)
  from stadium
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
smbop_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_functions:
- - avg
  - max
- - avg
  - max
- - avg
  - max
- - avg
- - avg
- - avg
- - avg
- - avg
- - avg
  - max
smbop_beam_columns:
- - highest
  - average
- - highest
  - average
- - highest
  - capacity
- - average
  - capacity
- - average
  - capacity
- - average
- - capacity
- - capacity
- - highest
  - average
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT MAX( stadium.highest ) , AVG( stadium.average ) FROM stadium
  - SELECT AVG( stadium.average ) , MAX( stadium.highest ) FROM stadium
  - SELECT AVG( stadium.capacity ) , MAX( stadium.highest ) FROM stadium
  - SELECT AVG( stadium.average ) , AVG( stadium.capacity ) FROM stadium
  - SELECT AVG( stadium.capacity ) , AVG( stadium.average ) FROM stadium
  - SELECT stadium.capacity , AVG( stadium.average ) FROM stadium
  - SELECT stadium.average , AVG( stadium.capacity ) FROM stadium
  - SELECT AVG( stadium.capacity ) , AVG( stadium.capacity ) FROM stadium
  - SELECT MAX( stadium.highest ) , AVG( stadium.average ) FROM singer , stadium
smbop_beam_inferred_code_w_terminals:
  - SELECT MAX( stadium.highest ) , AVG( stadium.average ) FROM stadium
  - SELECT AVG( stadium.average ) , MAX( stadium.highest ) FROM stadium
  - SELECT AVG( stadium.capacity ) , MAX( stadium.highest ) FROM stadium
  - SELECT AVG( stadium.average ) , AVG( stadium.capacity ) FROM stadium
  - SELECT AVG( stadium.capacity ) , AVG( stadium.average ) FROM stadium
  - SELECT stadium.capacity , AVG( stadium.average ) FROM stadium
  - SELECT stadium.average , AVG( stadium.capacity ) FROM stadium
  - SELECT AVG( stadium.capacity ) , AVG( stadium.capacity ) FROM stadium
  - SELECT MAX( stadium.highest ) , AVG( stadium.average ) FROM singer , stadium
ratsql_beam_join_columns:
- []
- []
- []
- []
- []
- []
- - stadium_id
- - singer_id
  - stadium_id
  - concert_id
- - stadium_id
  - concert_id
- []
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
- - tests-examples/db2csv/concert_singer/tables/singer.csv
  - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
  - tests-examples/db2csv/concert_singer/tables/concert.csv
  - tests-examples/db2csv/concert_singer/tables/singer_in_concert.csv
- - tests-examples/db2csv/concert_singer/tables/stadium.csv
ratsql_beam_constants:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_functions:
- - avg
  - max
- - avg
  - max
- - avg
  - max
- - avg
  - max
- - avg
  - max
- - avg
  - max
- - avg
  - max
- - avg
  - max
- - avg
  - max
- - avg
  - max
ratsql_beam_columns:
- - capacity
- - average
  - capacity
- - capacity
- - capacity
- - capacity
- - capacity
- - capacity
- - capacity
- - capacity
- - average
  - capacity
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT Avg(stadium.Capacity), Max(stadium.Capacity) FROM stadium
  - SELECT Avg(stadium.Average), Max(stadium.Capacity) FROM stadium
  - SELECT Avg(stadium.Capacity), Max(DISTINCT stadium.Capacity) FROM stadium
  - SELECT Avg(DISTINCT stadium.Capacity), Max(stadium.Capacity) FROM stadium
  - SELECT Avg(stadium.Capacity), Max(stadium.Capacity) FROM stadium LIMIT 1
  - SELECT DISTINCT Avg(stadium.Capacity), Max(stadium.Capacity) FROM stadium
  - SELECT Avg(stadium.Capacity), Max(stadium.Capacity) FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID
  - SELECT Avg(stadium.Capacity), Max(stadium.Capacity) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID
  - SELECT Avg(stadium.Capacity), Max(stadium.Capacity) FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID
  - SELECT Avg(stadium.Average), Max(DISTINCT stadium.Capacity) FROM stadium
ratsql_beam_inferred_code_w_terminals:
  - SELECT Avg(stadium.Capacity), Max(stadium.Capacity) FROM stadium
  - SELECT Avg(stadium.Average), Max(stadium.Capacity) FROM stadium
  - SELECT Avg(stadium.Capacity), Max(DISTINCT stadium.Capacity) FROM stadium
  - SELECT Avg(DISTINCT stadium.Capacity), Max(stadium.Capacity) FROM stadium
  - SELECT Avg(stadium.Capacity), Max(stadium.Capacity) FROM stadium LIMIT 1
  - SELECT DISTINCT Avg(stadium.Capacity), Max(stadium.Capacity) FROM stadium
  - SELECT Avg(stadium.Capacity), Max(stadium.Capacity) FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID
  - SELECT Avg(stadium.Capacity), Max(stadium.Capacity) FROM stadium JOIN singer JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID
  - SELECT Avg(stadium.Capacity), Max(stadium.Capacity) FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID
  - SELECT Avg(stadium.Average), Max(DISTINCT stadium.Capacity) FROM stadium
ratsql_beam_score_history:
- - -0.10486268997192383
  - -0.10411310195922852
  - -0.10787439346313477
  - -0.10408449172973633
  - -0.12461614608764648
  - -0.09917497634887695
  - -0.08655548095703125
  - -0.1145939826965332
  - -0.10536909103393555
  - -0.10478401184082031
  - -0.10540342330932617
  - -0.5830364227294922
  - -0.10889959335327148
  - -0.10512995719909668
  - -0.10104751586914062
  - -0.13546323776245117
  - -0.1034536361694336
  - -0.10595321655273438
  - -0.10503339767456055
  - -0.10509252548217773
  - -0.07048597186803818
  - -0.11458230018615723
  - -0.1054072380065918
  - -0.11352729797363281
  - -0.10463523864746094
  - -0.10210752487182617
  - -0.10753798484802246
  - -0.10455179214477539
  - -0.09786176681518555
  - -0.10448694229125977
  - -0.10987138748168945
  - -0.10466241836547852
  - -0.10408544540405273
  - -0.08640376478433609
- - -0.10486268997192383
  - -0.10411310195922852
  - -0.10787439346313477
  - -0.10408449172973633
  - -0.12461614608764648
  - -0.09917497634887695
  - -0.08655548095703125
  - -0.1145939826965332
  - -0.10536909103393555
  - -0.10478401184082031
  - -0.10540342330932617
  - -0.9572089314460754
  - -0.10900044441223145
  - -0.10496735572814941
  - -0.09938907623291016
  - -0.16299819946289062
  - -0.10191774368286133
  - -0.10564756393432617
  - -0.10464859008789062
  - -0.1049356460571289
  - -0.0729532539844513
  - -0.11415219306945801
  - -0.10540056228637695
  - -0.11403131484985352
  - -0.10469484329223633
  - -0.10208320617675781
  - -0.10751891136169434
  - -0.10455107688903809
  - -0.09784364700317383
  - -0.10444068908691406
  - -0.10985803604125977
  - -0.10466670989990234
  - -0.10410451889038086
  - -0.08626948297023773
- - -0.10486268997192383
  - -0.10411310195922852
  - -0.10787439346313477
  - -0.10408449172973633
  - -0.12461614608764648
  - -0.09917497634887695
  - -0.08655548095703125
  - -0.1145939826965332
  - -0.10536909103393555
  - -0.10478401184082031
  - -0.10540342330932617
  - -0.5830364227294922
  - -0.10889959335327148
  - -0.10512995719909668
  - -0.10104751586914062
  - -0.13546323776245117
  - -0.1034536361694336
  - -0.10595321655273438
  - -0.10503339767456055
  - -0.10509252548217773
  - -0.07048597186803818
  - -3.394115447998047
  - -0.10571980476379395
  - -0.1157684326171875
  - -0.10470247268676758
  - -0.10219097137451172
  - -0.10751771926879883
  - -0.10454916954040527
  - -0.09759902954101562
  - -0.10445833206176758
  - -0.10985994338989258
  - -0.10466766357421875
  - -0.10411977767944336
  - -0.08622650057077408
- - -0.10486268997192383
  - -0.10411310195922852
  - -0.10787439346313477
  - -0.10408449172973633
  - -0.12461614608764648
  - -0.09917497634887695
  - -0.08655548095703125
  - -0.1145939826965332
  - -0.10536909103393555
  - -0.10478401184082031
  - -0.10540342330932617
  - -0.5830364227294922
  - -3.515636682510376
  - -0.10532116889953613
  - -0.10223674774169922
  - -0.13596296310424805
  - -0.10264348983764648
  - -0.10588979721069336
  - -0.10507583618164062
  - -0.1048727035522461
  - -0.07476068288087845
  - -0.11411142349243164
  - -0.10540390014648438
  - -0.11334609985351562
  - -0.10457754135131836
  - -0.10212039947509766
  - -0.10754013061523438
  - -0.10455179214477539
  - -0.0978550910949707
  - -0.1044926643371582
  - -0.1098480224609375
  - -0.10466337203979492
  - -0.10409879684448242
  - -0.08638670295476913
- - -0.10486268997192383
  - -0.10411310195922852
  - -0.10787439346313477
  - -0.10408449172973633
  - -0.12461614608764648
  - -0.09917497634887695
  - -0.08655548095703125
  - -0.1145939826965332
  - -0.10536909103393555
  - -0.10478401184082031
  - -0.10540342330932617
  - -0.5830364227294922
  - -0.10889959335327148
  - -0.10512995719909668
  - -0.10104751586914062
  - -0.13546323776245117
  - -0.1034536361694336
  - -0.10595321655273438
  - -0.10503339767456055
  - -0.10509252548217773
  - -0.07048597186803818
  - -0.11458230018615723
  - -0.1054072380065918
  - -0.11352729797363281
  - -0.10463523864746094
  - -0.10210752487182617
  - -3.5559310913085938
  - -0.10446953773498535
  - -0.09792613983154297
  - -0.10404396057128906
  - -0.109344482421875
  - -0.1046757698059082
  - -0.1041574478149414
  - -0.08631332963705063
- - -0.10486268997192383
  - -0.10411310195922852
  - -3.523834466934204
  - -0.10368919372558594
  - -0.1358814239501953
  - -0.09780311584472656
  - -0.08932113647460938
  - -0.11491918563842773
  - -0.10542964935302734
  - -0.10468006134033203
  - -0.10528755187988281
  - -0.6151127815246582
  - -0.10937881469726562
  - -0.1050870418548584
  - -0.1022186279296875
  - -0.1288127899169922
  - -0.1032114028930664
  - -0.10588216781616211
  - -0.10505819320678711
  - -0.10491466522216797
  - -0.07236085087060928
  - -0.1142425537109375
  - -0.10539579391479492
  - -0.11336612701416016
  - -0.10452604293823242
  - -0.10211753845214844
  - -0.10753822326660156
  - -0.1045529842376709
  - -0.09785842895507812
  - -0.10448455810546875
  - -0.10984563827514648
  - -0.1046600341796875
  - -0.10407590866088867
  - -0.08635061979293823
- - -0.10486268997192383
  - -0.10411310195922852
  - -0.10787439346313477
  - -0.10408449172973633
  - -0.12461614608764648
  - -0.09917497634887695
  - -0.08655548095703125
  - -0.1145939826965332
  - -0.10536909103393555
  - -0.10478401184082031
  - -0.10540342330932617
  - -0.5830364227294922
  - -0.10889959335327148
  - -0.10512995719909668
  - -0.10104751586914062
  - -0.13546323776245117
  - -0.1034536361694336
  - -0.10595321655273438
  - -0.10503339767456055
  - -0.10509252548217773
  - -0.07048597186803818
  - -0.11458230018615723
  - -0.1054072380065918
  - -0.11352729797363281
  - -0.10463523864746094
  - -0.10210752487182617
  - -0.10753798484802246
  - -0.10455179214477539
  - -0.09786176681518555
  - -0.10448694229125977
  - -0.10987138748168945
  - -0.10466241836547852
  - -0.10408544540405273
  - -3.5574514865875244
- - -0.10486268997192383
  - -0.10411310195922852
  - -0.10787439346313477
  - -0.10408449172973633
  - -0.12461614608764648
  - -0.09917497634887695
  - -0.08655548095703125
  - -0.1145939826965332
  - -0.10536909103393555
  - -0.10478401184082031
  - -0.10540342330932617
  - -0.5830364227294922
  - -0.10889959335327148
  - -0.10512995719909668
  - -0.10104751586914062
  - -0.13546323776245117
  - -0.1034536361694336
  - -0.10595321655273438
  - -0.10503339767456055
  - -0.10509252548217773
  - -0.07048597186803818
  - -0.11458230018615723
  - -0.1054072380065918
  - -0.11352729797363281
  - -0.10463523864746094
  - -0.10210752487182617
  - -0.10753798484802246
  - -0.10455179214477539
  - -0.09786176681518555
  - -0.10448694229125977
  - -0.10987138748168945
  - -0.10466241836547852
  - -0.10408544540405273
  - -3.6018009185791016
- - -0.10486268997192383
  - -0.10411310195922852
  - -0.10787439346313477
  - -0.10408449172973633
  - -0.12461614608764648
  - -0.09917497634887695
  - -0.08655548095703125
  - -0.1145939826965332
  - -0.10536909103393555
  - -0.10478401184082031
  - -0.10540342330932617
  - -0.5830364227294922
  - -0.10889959335327148
  - -0.10512995719909668
  - -0.10104751586914062
  - -0.13546323776245117
  - -0.1034536361694336
  - -0.10595321655273438
  - -0.10503339767456055
  - -0.10509252548217773
  - -0.07048597186803818
  - -0.11458230018615723
  - -0.1054072380065918
  - -0.11352729797363281
  - -0.10463523864746094
  - -0.10210752487182617
  - -0.10753798484802246
  - -0.10455179214477539
  - -0.09786176681518555
  - -0.10448694229125977
  - -0.10987138748168945
  - -0.10466241836547852
  - -0.10408544540405273
  - -3.6122803688049316
- - -0.10486268997192383
  - -0.10411310195922852
  - -0.10787439346313477
  - -0.10408449172973633
  - -0.12461614608764648
  - -0.09917497634887695
  - -0.08655548095703125
  - -0.1145939826965332
  - -0.10536909103393555
  - -0.10478401184082031
  - -0.10540342330932617
  - -0.9572089314460754
  - -0.10900044441223145
  - -0.10496735572814941
  - -0.09938907623291016
  - -0.16299819946289062
  - -0.10191774368286133
  - -0.10564756393432617
  - -0.10464859008789062
  - -0.1049356460571289
  - -0.0729532539844513
  - -3.4039688110351562
  - -0.10569548606872559
  - -0.11561250686645508
  - -0.10495662689208984
  - -0.10218191146850586
  - -0.10749673843383789
  - -0.10454797744750977
  - -0.09757471084594727
  - -0.10443115234375
  - -0.10984992980957031
  - -0.10467195510864258
  - -0.10413742065429688
  - -0.08603335171937943
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Capacity'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Capacity'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'stadium'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Average'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Capacity'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'stadium'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Capacity'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Capacity'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'stadium'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Capacity'
  - 'True'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Capacity'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'stadium'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Capacity'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Capacity'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'stadium'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Capacity'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Capacity'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'stadium'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Capacity'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Capacity'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Capacity'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Capacity'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Capacity'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Capacity'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'singer_in_concert'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'Avg')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Average'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'Max')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'Capacity'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'stadium'
