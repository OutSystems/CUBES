db: tests-examples/db2csv/voter_1/tables/voter_1.sqlite
inputs:
 - tests-examples/db2csv/voter_1/tables/votes.csv
 - tests-examples/db2csv/voter_1/tables/contestants.csv
output: tests-examples/db2csv/voter_1/tables/0008_dev.csv
raw_question: What are the contestant numbers and names of the contestants who had at least two votes? 
question_index: 694 
constants:
 - 2
join_columns:
 - contestant_number
groupby_columns:
 - contestant_number
functions:
 - count
comment: |-
  SELECT T1.contestant_number,
         T1.contestant_name
  FROM contestants AS T1
  JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number
  GROUP BY T1.contestant_number
  HAVING count(*) >= 2

sql: |-
  SELECT T1.contestant_number,
         T1.contestant_name
  FROM contestants AS T1
  JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number
  GROUP BY T1.contestant_number
  HAVING count(*) >= 2
smbop_beam_join_columns:
- - contestant_number
- - contestant_number
- - contestant_number
- - contestant_number
smbop_beam_groupby_columns:
- - contestant_number
- - contestant_number
- - contestant_number
- - contestant_number
smbop_beam_tables:
- - tests-examples/db2csv/voter_1/tables/votes.csv
  - tests-examples/db2csv/voter_1/tables/contestants.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
  - tests-examples/db2csv/voter_1/tables/contestants.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
  - tests-examples/db2csv/voter_1/tables/contestants.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
  - tests-examples/db2csv/voter_1/tables/contestants.csv
smbop_beam_constants:
- - 2
- - 2
- - 2
- - 2
smbop_beam_functions:
- - count
- - count
- - count
- - count
smbop_beam_columns:
- []
- []
- []
- []
smbop_beam_ieu:
- []
- []
- []
- []
smbop_beam_filters:
- []
- []
- []
- []
smbop_beam_inferred_code:
  - SELECT contestants.contestant_number , contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY contestants.contestant_number HAVING COUNT( * ) >= 2
  - SELECT contestants.contestant_number , contestants.contestant_name FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number GROUP BY contestants.contestant_number HAVING COUNT( * ) >= 2
  - SELECT DISTINCT contestants.contestant_number , contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY contestants.contestant_number HAVING COUNT( * ) >= 2
  - SELECT DISTINCT contestants.contestant_number , contestants.contestant_name FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number GROUP BY contestants.contestant_number HAVING COUNT( * ) >= 2
smbop_beam_inferred_code_w_terminals:
  - SELECT contestants.contestant_number , contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY contestants.contestant_number HAVING COUNT( * ) >= 2
  - SELECT contestants.contestant_number , contestants.contestant_name FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number GROUP BY contestants.contestant_number HAVING COUNT( * ) >= 2
  - SELECT DISTINCT contestants.contestant_number , contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY contestants.contestant_number HAVING COUNT( * ) >= 2
  - SELECT DISTINCT contestants.contestant_number , contestants.contestant_name FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number GROUP BY contestants.contestant_number HAVING COUNT( * ) >= 2
ratsql_beam_join_columns:
- - contestant_number
- - contestant_number
- - state
  - contestant_number
- - contestant_number
- - contestant_number
- - contestant_number
- - contestant_number
ratsql_beam_groupby_columns:
- - contestant_number
- - contestant_name
- - contestant_number
- - contestant_number
- - contestant_number
- - contestant_number
- - contestant_number
ratsql_beam_tables:
- - tests-examples/db2csv/voter_1/tables/votes.csv
  - tests-examples/db2csv/voter_1/tables/contestants.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
  - tests-examples/db2csv/voter_1/tables/contestants.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
  - tests-examples/db2csv/voter_1/tables/contestants.csv
  - tests-examples/db2csv/voter_1/tables/area_code_state.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
  - tests-examples/db2csv/voter_1/tables/contestants.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
  - tests-examples/db2csv/voter_1/tables/contestants.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
  - tests-examples/db2csv/voter_1/tables/contestants.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
  - tests-examples/db2csv/voter_1/tables/contestants.csv
ratsql_beam_constants:
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
- - 2
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_inferred_code:
  - SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY VOTES.contestant_number HAVING Count(*) >= 'terminal'
  - SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY CONTESTANTS.contestant_name HAVING Count(*) >= 'terminal'
  - SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM AREA_CODE_STATE JOIN CONTESTANTS JOIN VOTES ON AREA_CODE_STATE.state = VOTES.state AND VOTES.contestant_number = CONTESTANTS.contestant_number AND AREA_CODE_STATE.state = VOTES.state GROUP BY VOTES.contestant_number HAVING Count(*) >= 'terminal'
  - SELECT VOTES.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY VOTES.contestant_number HAVING Count(*) >= 'terminal'
  - SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY CONTESTANTS.contestant_number HAVING Count(*) >= 'terminal'
  - SELECT DISTINCT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY VOTES.contestant_number HAVING Count(*) >= 'terminal'
  - SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY DISTINCT VOTES.contestant_number HAVING Count(*) >= 'terminal'
  - SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY VOTES.contestant_number HAVING Count(DISTINCT *) >= 'terminal'
  - SELECT CONTESTANTS.contestant_number, DISTINCT CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY VOTES.contestant_number HAVING Count(*) >= 'terminal'
  - SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY VOTES.contestant_number HAVING Count(*) >= 'terminal' LIMIT 1
ratsql_beam_inferred_code_w_terminals:
  - SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY VOTES.contestant_number HAVING Count(*) >= 2
  - SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY CONTESTANTS.contestant_name HAVING Count(*) >= 2
  - SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM AREA_CODE_STATE JOIN CONTESTANTS JOIN VOTES ON AREA_CODE_STATE.state = VOTES.state AND VOTES.contestant_number = CONTESTANTS.contestant_number AND AREA_CODE_STATE.state = VOTES.state GROUP BY VOTES.contestant_number HAVING Count(*) >= 2
  - SELECT VOTES.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY VOTES.contestant_number HAVING Count(*) >= 2
  - SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY CONTESTANTS.contestant_number HAVING Count(*) >= 2
  - SELECT DISTINCT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY VOTES.contestant_number HAVING Count(*) >= 2
  - SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY DISTINCT VOTES.contestant_number HAVING Count(*) >= 2
  - SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY VOTES.contestant_number HAVING Count(DISTINCT *) >= 2
  - SELECT CONTESTANTS.contestant_number, DISTINCT CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY VOTES.contestant_number HAVING Count(*) >= 2
  - SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY VOTES.contestant_number HAVING Count(*) >= 2 LIMIT 1
ratsql_beam_score_history:
- - -0.10297822952270508
  - -0.10544967651367188
  - -0.11563920974731445
  - -0.10432696342468262
  - -0.12460708618164062
  - -0.10219764709472656
  - -0.10460901260375977
  - -0.10199975967407227
  - -0.10420656204223633
  - -0.1052541732788086
  - -0.1047205924987793
  - -0.14506199955940247
  - -0.11339855194091797
  - -0.10545611381530762
  - -0.10250425338745117
  - -0.10592794418334961
  - -0.1019887924194336
  - -0.10519933700561523
  - -0.10676097869873047
  - -0.10532951354980469
  - -0.057420309633016586
  - -0.11126422882080078
  - -0.10565686225891113
  - -0.11151647567749023
  - -0.12835359573364258
  - -0.10090923309326172
  - -0.10495567321777344
  - -0.10473918914794922
  - -0.29469218850135803
  - -0.11167550086975098
  - -0.10573482513427734
  - -0.06270170211791992
  - -0.11960840225219727
  - -0.10188865661621094
  - -0.10490179061889648
  - -0.10739994049072266
  - -0.11624574661254883
  - -0.09539104253053665
  - -0.11077117919921875
  - -0.1062002182006836
  - -0.10097408294677734
  - -0.09834051132202148
  - -0.10735607147216797
  - -0.10516357421875
  - -0.093658447265625
  - -0.10371923446655273
  - -0.11380958557128906
  - -0.1049203872680664
  - -0.10697078704833984
  - -0.4991757273674011
  - -0.10665512084960938
  - -0.10467672348022461
  - -0.052958738058805466
- - -0.10297822952270508
  - -0.10544967651367188
  - -0.11563920974731445
  - -0.10432696342468262
  - -0.12460708618164062
  - -0.10219764709472656
  - -0.10460901260375977
  - -0.10199975967407227
  - -0.10420656204223633
  - -0.1052541732788086
  - -0.1047205924987793
  - -0.14506199955940247
  - -0.11339855194091797
  - -0.10545611381530762
  - -0.10250425338745117
  - -0.10592794418334961
  - -0.1019887924194336
  - -0.10519933700561523
  - -0.10676097869873047
  - -0.10532951354980469
  - -0.057420309633016586
  - -0.11126422882080078
  - -0.10565686225891113
  - -0.11151647567749023
  - -0.12835359573364258
  - -0.10090923309326172
  - -0.10495567321777344
  - -0.10473918914794922
  - -2.3212032318115234
  - -0.11026811599731445
  - -0.10570240020751953
  - -0.07603597640991211
  - -0.11356782913208008
  - -0.10192012786865234
  - -0.10557937622070312
  - -0.10785913467407227
  - -0.1155080795288086
  - -0.0967501848936081
  - -0.11092805862426758
  - -0.10621023178100586
  - -0.1011347770690918
  - -0.09869766235351562
  - -0.10728025436401367
  - -0.10512042045593262
  - -0.09357404708862305
  - -0.10369873046875
  - -0.11336946487426758
  - -0.10494041442871094
  - -0.10704278945922852
  - -0.5005377531051636
  - -0.10657930374145508
  - -0.10466766357421875
  - -0.05281129851937294
- - -0.10297822952270508
  - -0.10544967651367188
  - -0.11563920974731445
  - -0.10432696342468262
  - -0.12460708618164062
  - -0.10219764709472656
  - -0.10460901260375977
  - -0.10199975967407227
  - -0.10420656204223633
  - -0.1052541732788086
  - -0.1047205924987793
  - -0.14506199955940247
  - -0.11339855194091797
  - -0.10545611381530762
  - -0.10250425338745117
  - -0.10592794418334961
  - -0.1019887924194336
  - -0.10519933700561523
  - -0.10676097869873047
  - -0.10532951354980469
  - -0.057420309633016586
  - -0.11126422882080078
  - -0.10565686225891113
  - -0.11151647567749023
  - -0.12835359573364258
  - -0.10090923309326172
  - -0.10495567321777344
  - -0.10473918914794922
  - -0.29469218850135803
  - -0.11167550086975098
  - -0.10573482513427734
  - -0.06270170211791992
  - -0.11960840225219727
  - -0.10188865661621094
  - -0.10490179061889648
  - -0.10739994049072266
  - -0.11624574661254883
  - -0.09539104253053665
  - -0.11077117919921875
  - -0.1062002182006836
  - -0.10097408294677734
  - -0.09834051132202148
  - -0.10735607147216797
  - -0.10516357421875
  - -0.093658447265625
  - -0.10371923446655273
  - -0.11380958557128906
  - -0.1049203872680664
  - -0.10697078704833984
  - -3.056112289428711
  - -0.10765218734741211
  - -0.10523748397827148
  - -0.226808562874794
- - -0.10297822952270508
  - -0.10544967651367188
  - -0.11563920974731445
  - -0.10432696342468262
  - -0.12460708618164062
  - -0.10219764709472656
  - -0.10460901260375977
  - -0.10199975967407227
  - -0.10420656204223633
  - -0.1052541732788086
  - -0.1047205924987793
  - -3.2756974697113037
  - -0.11254525184631348
  - -0.10564231872558594
  - -0.10188961029052734
  - -0.10445165634155273
  - -0.10184907913208008
  - -0.10552740097045898
  - -0.10707569122314453
  - -0.1058492660522461
  - -0.07535476982593536
  - -0.11159348487854004
  - -0.10562467575073242
  - -0.11292552947998047
  - -0.12689685821533203
  - -0.10211896896362305
  - -0.10592174530029297
  - -0.10486650466918945
  - -0.20606181025505066
  - -0.11160826683044434
  - -0.10590219497680664
  - -0.06105947494506836
  - -0.12324094772338867
  - -0.1019735336303711
  - -0.10503864288330078
  - -0.10738182067871094
  - -0.11766386032104492
  - -0.09391621500253677
  - -0.11077165603637695
  - -0.10618114471435547
  - -0.10116052627563477
  - -0.09870529174804688
  - -0.10738468170166016
  - -0.10519838333129883
  - -0.09562444686889648
  - -0.10430717468261719
  - -0.11508321762084961
  - -0.10479021072387695
  - -0.10785913467407227
  - -0.43031272292137146
  - -0.10797739028930664
  - -0.10512256622314453
  - -0.05620812252163887
- - -0.10297822952270508
  - -0.10544967651367188
  - -0.11563920974731445
  - -0.10432696342468262
  - -0.12460708618164062
  - -0.10219764709472656
  - -0.10460901260375977
  - -0.10199975967407227
  - -0.10420656204223633
  - -0.1052541732788086
  - -0.1047205924987793
  - -0.14506199955940247
  - -0.11339855194091797
  - -0.10545611381530762
  - -0.10250425338745117
  - -0.10592794418334961
  - -0.1019887924194336
  - -0.10519933700561523
  - -0.10676097869873047
  - -0.10532951354980469
  - -0.057420309633016586
  - -0.11126422882080078
  - -0.10565686225891113
  - -0.11151647567749023
  - -0.12835359573364258
  - -0.10090923309326172
  - -0.10495567321777344
  - -0.10473918914794922
  - -3.3326215744018555
  - -0.1098790168762207
  - -0.10578346252441406
  - -0.06358051300048828
  - -0.12461185455322266
  - -0.10207223892211914
  - -0.10468482971191406
  - -0.10759162902832031
  - -0.1151132583618164
  - -0.09181462973356247
  - -0.11089348793029785
  - -0.10620808601379395
  - -0.10102319717407227
  - -0.09773874282836914
  - -0.10726356506347656
  - -0.10511398315429688
  - -0.09361600875854492
  - -0.10373592376708984
  - -0.11353254318237305
  - -0.1049489974975586
  - -0.10711097717285156
  - -0.4976944923400879
  - -0.1066126823425293
  - -0.10467910766601562
  - -0.05290537327528
- - -0.10297822952270508
  - -0.10544967651367188
  - -3.2956652641296387
  - -0.10436773300170898
  - -0.12362432479858398
  - -0.10203170776367188
  - -0.10470867156982422
  - -0.10212039947509766
  - -0.10421466827392578
  - -0.10523700714111328
  - -0.10468101501464844
  - -0.14633482694625854
  - -0.11337780952453613
  - -0.10544538497924805
  - -0.10262632369995117
  - -0.1058802604675293
  - -0.10198307037353516
  - -0.10521078109741211
  - -0.10675239562988281
  - -0.10532331466674805
  - -0.05719449371099472
  - -0.11125683784484863
  - -0.10564637184143066
  - -0.1115865707397461
  - -0.12841510772705078
  - -0.10087299346923828
  - -0.10494613647460938
  - -0.10474300384521484
  - -0.2954847812652588
  - -0.11167573928833008
  - -0.10573530197143555
  - -0.06266021728515625
  - -0.11958169937133789
  - -0.10188770294189453
  - -0.1049032211303711
  - -0.10739469528198242
  - -0.11625003814697266
  - -0.09531789273023605
  - -0.11077332496643066
  - -0.10619997978210449
  - -0.10097837448120117
  - -0.09833765029907227
  - -0.10735535621643066
  - -0.10516357421875
  - -0.09365558624267578
  - -0.10372066497802734
  - -0.11381196975708008
  - -0.1049203872680664
  - -0.10697221755981445
  - -0.4990970492362976
  - -0.10665607452392578
  - -0.10467672348022461
  - -0.05295150354504585
- - -0.10297822952270508
  - -0.10544967651367188
  - -0.11563920974731445
  - -0.10432696342468262
  - -0.12460708618164062
  - -0.10219764709472656
  - -0.10460901260375977
  - -0.10199975967407227
  - -0.10420656204223633
  - -0.1052541732788086
  - -0.1047205924987793
  - -0.14506199955940247
  - -0.11339855194091797
  - -0.10545611381530762
  - -0.10250425338745117
  - -0.10592794418334961
  - -0.1019887924194336
  - -0.10519933700561523
  - -0.10676097869873047
  - -0.10532951354980469
  - -0.057420309633016586
  - -0.11126422882080078
  - -0.10565686225891113
  - -0.11151647567749023
  - -0.12835359573364258
  - -0.10090923309326172
  - -0.10495567321777344
  - -0.10473918914794922
  - -0.29469218850135803
  - -3.455059051513672
  - -0.10568785667419434
  - -0.06084442138671875
  - -0.1231694221496582
  - -0.10205221176147461
  - -0.10486507415771484
  - -0.10730600357055664
  - -0.11623287200927734
  - -0.0945490300655365
  - -0.11079072952270508
  - -0.10619783401489258
  - -0.10126638412475586
  - -0.09867143630981445
  - -0.10733509063720703
  - -0.10515737533569336
  - -0.09369850158691406
  - -0.10377311706542969
  - -0.11392879486083984
  - -0.10492229461669922
  - -0.10704755783081055
  - -0.4985923767089844
  - -0.10662269592285156
  - -0.10469245910644531
  - -0.052973777055740356
- - -0.10297822952270508
  - -0.10544967651367188
  - -0.11563920974731445
  - -0.10432696342468262
  - -0.12460708618164062
  - -0.10219764709472656
  - -0.10460901260375977
  - -0.10199975967407227
  - -0.10420656204223633
  - -0.1052541732788086
  - -0.1047205924987793
  - -0.14506199955940247
  - -0.11339855194091797
  - -0.10545611381530762
  - -0.10250425338745117
  - -0.10592794418334961
  - -0.1019887924194336
  - -0.10519933700561523
  - -0.10676097869873047
  - -0.10532951354980469
  - -0.057420309633016586
  - -0.11126422882080078
  - -0.10565686225891113
  - -0.11151647567749023
  - -0.12835359573364258
  - -0.10090923309326172
  - -0.10495567321777344
  - -0.10473918914794922
  - -0.29469218850135803
  - -0.11167550086975098
  - -0.10573482513427734
  - -0.06270170211791992
  - -0.11960840225219727
  - -0.10188865661621094
  - -0.10490179061889648
  - -0.10739994049072266
  - -0.11624574661254883
  - -0.09539104253053665
  - -3.47428822517395
  - -0.10628795623779297
  - -0.10097408294677734
  - -0.0988168716430664
  - -0.10734915733337402
  - -0.10520195960998535
  - -0.09444618225097656
  - -0.10373687744140625
  - -0.11404800415039062
  - -0.10487747192382812
  - -0.10688924789428711
  - -0.5001247525215149
  - -0.10672616958618164
  - -0.10466861724853516
  - -0.05323965474963188
- - -0.10297822952270508
  - -0.10544967651367188
  - -0.11563920974731445
  - -0.10432696342468262
  - -0.12460708618164062
  - -0.10219764709472656
  - -0.10460901260375977
  - -0.10199975967407227
  - -0.10420656204223633
  - -0.1052541732788086
  - -0.1047205924987793
  - -0.14506199955940247
  - -0.11339855194091797
  - -0.10545611381530762
  - -0.10250425338745117
  - -0.10592794418334961
  - -0.1019887924194336
  - -0.10519933700561523
  - -0.10676097869873047
  - -0.10532951354980469
  - -0.057420309633016586
  - -3.4729738235473633
  - -0.10535430908203125
  - -0.11136150360107422
  - -0.13168096542358398
  - -0.100738525390625
  - -0.10492277145385742
  - -0.10464763641357422
  - -0.30034828186035156
  - -0.11173105239868164
  - -0.10572934150695801
  - -0.06266117095947266
  - -0.12004470825195312
  - -0.10184812545776367
  - -0.10490655899047852
  - -0.10738372802734375
  - -0.11623668670654297
  - -0.09558304399251938
  - -0.1107633113861084
  - -0.10619974136352539
  - -0.10096406936645508
  - -0.0984654426574707
  - -0.10735797882080078
  - -0.10516524314880371
  - -0.0937042236328125
  - -0.10367059707641602
  - -0.11360883712768555
  - -0.10492134094238281
  - -0.10695314407348633
  - -0.5053279399871826
  - -0.10652685165405273
  - -0.10465192794799805
  - -0.052846238017082214
- - -0.10297822952270508
  - -0.10544967651367188
  - -0.11563920974731445
  - -0.10432696342468262
  - -0.12460708618164062
  - -0.10219764709472656
  - -0.10460901260375977
  - -0.10199975967407227
  - -0.10420656204223633
  - -0.1052541732788086
  - -0.1047205924987793
  - -0.14506199955940247
  - -0.11339855194091797
  - -0.10545611381530762
  - -0.10250425338745117
  - -0.10592794418334961
  - -0.1019887924194336
  - -0.10519933700561523
  - -0.10676097869873047
  - -0.10532951354980469
  - -0.057420309633016586
  - -0.11126422882080078
  - -0.10565686225891113
  - -0.11151647567749023
  - -0.12835359573364258
  - -0.10090923309326172
  - -0.10495567321777344
  - -0.10473918914794922
  - -0.29469218850135803
  - -0.11167550086975098
  - -0.10573482513427734
  - -0.06270170211791992
  - -0.11960840225219727
  - -0.10188865661621094
  - -0.10490179061889648
  - -0.10739994049072266
  - -0.11624574661254883
  - -0.09539104253053665
  - -0.11077117919921875
  - -0.1062002182006836
  - -0.10097408294677734
  - -0.09834051132202148
  - -3.5484440326690674
  - -0.1053154468536377
  - -0.09380054473876953
  - -0.10390472412109375
  - -0.11459636688232422
  - -0.10488319396972656
  - -0.10694074630737305
  - -0.49892598390579224
  - -0.10669994354248047
  - -0.10469675064086914
  - -0.05269380286335945
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'VOTES'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'CONTESTANTS'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_name'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'VOTES'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'CONTESTANTS'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'AREA_CODE_STATE'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'VOTES'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'VOTES'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'CONTESTANTS'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'VOTES'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'CONTESTANTS'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'VOTES'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'CONTESTANTS'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'True'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'VOTES'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'CONTESTANTS'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'VOTES'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'CONTESTANTS'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_name'
  - 'True'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'VOTES'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'CONTESTANTS'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 2)
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('agg', (True, True))
  - ('agg_type', 'NoneAggOp')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_name'
  - 'False'
  - '<EOS>'
  - ('sql_where', (False,))
  - ('sql_groupby', (True, True))
  - ('col_unit*', 1)
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('cond', 'Ge')
  - ('Ge', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'Count')
  - ('agg_type', 'Avg')
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 2)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'VOTES'
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'CONTESTANTS'
