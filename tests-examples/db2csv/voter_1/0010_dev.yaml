db: tests-examples/db2csv/voter_1/tables/voter_1.sqlite
inputs:
 - tests-examples/db2csv/voter_1/tables/votes.csv
output: tests-examples/db2csv/voter_1/tables/0010_dev.csv
raw_question: What are the number of votes from state 'NY' or 'CA'? 
question_index: 696 
has_limit: False 
has_order_by: False 
order_by_direction: []
constants:
 - CA
 - NY
join_columns: []
groupby_columns: []
functions:
 - count
columns:
 - state
filters:
 - '='
ieu: []
comment: |-
  SELECT count(*)
  FROM votes
  WHERE state = 'NY'
    OR state = 'CA'

sql: |-
  SELECT count(*)
  FROM votes
  WHERE state = 'NY'
    OR state = 'CA'
smbop_beam_join_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_tables:
- - tests-examples/db2csv/voter_1/tables/votes.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
smbop_beam_constants:
- - CA
  - NY
- - CA
  - NY
- - CA
  - NY
- - CA
  - NY
- - CA
  - NY
- - CA
  - NY
- - CA
  - NY
- - CA
  - NY
- - CA
  - NY
- - CA
  - NY
smbop_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
- - count
smbop_beam_columns:
- - state
- - state
- - state
- - state
- - state
- - state
- - state
- - state
- - state
- - state
smbop_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
smbop_beam_filters:
- - '='
- - '='
- - '='
- - 'like'
- - '='
  - 'like'
- - '='
- - '='
- - '='
- - '!='
- - '='
smbop_beam_inferred_code:
  - SELECT COUNT( * ) FROM votes WHERE votes.state = 'NY' OR votes.state = 'CA'
  - SELECT COUNT( * ) FROM votes WHERE votes.state = 'NY' AND votes.state = 'NY' or 'CA' OR votes.state = 'CA'
  - SELECT COUNT( * ) FROM votes WHERE votes.state = 'NY' AND votes.state = 'CA' OR votes.state = 'CA'
  - SELECT COUNT( * ) FROM votes WHERE votes.state LIKE '%NY%' OR votes.state LIKE '%CA%'
  - SELECT COUNT( * ) FROM votes WHERE votes.state = 'NY' AND votes.state LIKE '%NY%' OR votes.state LIKE '%CA%'
  - SELECT COUNT( * ) FROM votes WHERE votes.state = 'NY' or 'CA' OR votes.state = 'CA'
  - SELECT COUNT( * ) FROM votes WHERE votes.state = 'NY' OR votes.state = 'NY' or 'CA'
  - SELECT COUNT( * ) FROM votes WHERE votes.state = 'NY' OR votes.state = 'NY'
  - SELECT COUNT( * ) FROM votes WHERE votes.state != 'NY' OR votes.state != 'CA'
  - SELECT COUNT( * ) FROM votes WHERE votes.state = 'CA' OR votes.state = 'NY'
smbop_beam_inferred_code_w_terminals:
  - SELECT COUNT( * ) FROM votes WHERE votes.state = 'NY' OR votes.state = 'CA'
  - SELECT COUNT( * ) FROM votes WHERE votes.state = 'NY' AND votes.state = 'NY' or 'CA' OR votes.state = 'CA'
  - SELECT COUNT( * ) FROM votes WHERE votes.state = 'NY' AND votes.state = 'CA' OR votes.state = 'CA'
  - SELECT COUNT( * ) FROM votes WHERE votes.state LIKE '%NY%' OR votes.state LIKE '%CA%'
  - SELECT COUNT( * ) FROM votes WHERE votes.state = 'NY' AND votes.state LIKE '%NY%' OR votes.state LIKE '%CA%'
  - SELECT COUNT( * ) FROM votes WHERE votes.state = 'NY' or 'CA' OR votes.state = 'CA'
  - SELECT COUNT( * ) FROM votes WHERE votes.state = 'NY' OR votes.state = 'NY' or 'CA'
  - SELECT COUNT( * ) FROM votes WHERE votes.state = 'NY' OR votes.state = 'NY'
  - SELECT COUNT( * ) FROM votes WHERE votes.state != 'NY' OR votes.state != 'CA'
  - SELECT COUNT( * ) FROM votes WHERE votes.state = 'CA' OR votes.state = 'NY'
smbop_beam_has_limit:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
  - False
smbop_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_join_columns:
- []
- - state
- - contestant_number
- []
- []
- []
- []
ratsql_beam_groupby_columns:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_tables:
- - tests-examples/db2csv/voter_1/tables/votes.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
  - tests-examples/db2csv/voter_1/tables/area_code_state.csv
- - tests-examples/db2csv/voter_1/tables/contestants.csv
  - tests-examples/db2csv/voter_1/tables/votes.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
- - tests-examples/db2csv/voter_1/tables/votes.csv
ratsql_beam_constants:
- - CA
  - NY
- - CA
  - NY
- - CA
  - NY
- - CA
  - NY
- - CA
  - NY
- - CA
  - NY
- - CA
  - NY
  - '1'
- - CA
  - NY
- - CA
  - NY
- - CA
  - NY
ratsql_beam_functions:
- - count
- - count
- - count
- - count
- - count
- - count
- - count
ratsql_beam_columns:
- - state
- - state
- - state
- - state
- - state
- - state
  - contestant_number
- - state
  - vote_id
ratsql_beam_ieu:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_filters:
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
- - '='
ratsql_beam_inferred_code:
  - SELECT Count(*) FROM VOTES WHERE VOTES.state = 'terminal' OR VOTES.state = 'terminal'
  - SELECT Count(*) FROM AREA_CODE_STATE JOIN VOTES ON AREA_CODE_STATE.state = VOTES.state WHERE VOTES.state = 'terminal' OR VOTES.state = 'terminal'
  - SELECT Count(*) FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number WHERE VOTES.state = 'terminal' OR VOTES.state = 'terminal'
  - SELECT Count(*) FROM VOTES WHERE DISTINCT VOTES.state = 'terminal' OR VOTES.state = 'terminal'
  - SELECT Count(*) FROM VOTES WHERE VOTES.state = 'terminal' OR DISTINCT VOTES.state = 'terminal'
  - SELECT Count(DISTINCT *) FROM VOTES WHERE VOTES.state = 'terminal' OR VOTES.state = 'terminal'
  - SELECT Count(*) FROM VOTES WHERE VOTES.state = 'terminal' OR VOTES.state = 'terminal' LIMIT 1
  - SELECT DISTINCT Count(*) FROM VOTES WHERE VOTES.state = 'terminal' OR VOTES.state = 'terminal'
  - SELECT Count(*) FROM VOTES WHERE VOTES.contestant_number = 'terminal' OR VOTES.state = 'terminal'
  - SELECT Count(*) FROM VOTES WHERE VOTES.vote_id = 'terminal' OR VOTES.state = 'terminal'
ratsql_beam_inferred_code_w_terminals:
  - SELECT Count(*) FROM VOTES WHERE VOTES.state = 'CA' OR VOTES.state = 'NY'
  - SELECT Count(*) FROM AREA_CODE_STATE JOIN VOTES ON AREA_CODE_STATE.state = VOTES.state WHERE VOTES.state = 'CA' OR VOTES.state = 'NY'
  - SELECT Count(*) FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number WHERE VOTES.state = 'CA' OR VOTES.state = 'NY'
  - SELECT Count(*) FROM VOTES WHERE DISTINCT VOTES.state = 'CA' OR VOTES.state = 'NY'
  - SELECT Count(*) FROM VOTES WHERE VOTES.state = 'CA' OR DISTINCT VOTES.state = 'NY'
  - SELECT Count(DISTINCT *) FROM VOTES WHERE VOTES.state = 'CA' OR VOTES.state = 'NY'
  - SELECT Count(*) FROM VOTES WHERE VOTES.state = 'CA' OR VOTES.state = 'NY' LIMIT 1
  - SELECT DISTINCT Count(*) FROM VOTES WHERE VOTES.state = 'CA' OR VOTES.state = 'NY'
  - SELECT Count(*) FROM VOTES WHERE VOTES.contestant_number = 'NY' OR VOTES.state = 'CA'
  - SELECT Count(*) FROM VOTES WHERE VOTES.vote_id = 'NY' OR VOTES.state = 'CA'
ratsql_beam_has_limit:
  - False
  - False
  - False
  - True
  - False
  - False
  - False
ratsql_beam_has_order_by:
  - False
  - False
  - False
  - False
  - False
  - False
  - False
ratsql_beam_order_by_direction:
- []
- []
- []
- []
- []
- []
- []
ratsql_beam_score_history:
- - -0.10270166397094727
  - -0.10544967651367188
  - -0.10668015480041504
  - -0.10407400131225586
  - -0.10144233703613281
  - -0.10261106491088867
  - -0.10924863815307617
  - -0.1014552116394043
  - -0.10685539245605469
  - -0.10482358932495117
  - -0.10537528991699219
  - -0.08602394908666611
  - -0.11026477813720703
  - -0.10511612892150879
  - -0.09537267684936523
  - -0.0891265869140625
  - -0.11525440216064453
  - -0.1094822883605957
  - -0.10079336166381836
  - -0.10126304626464844
  - -0.10361194610595703
  - -0.10414886474609375
  - -0.10561990737915039
  - -0.1096024289727211
  - -0.11214709281921387
  - -0.10580205917358398
  - -0.10761117935180664
  - -0.09160041809082031
  - -0.10024070739746094
  - -0.10283994674682617
  - -0.10387945175170898
  - -0.10408449172973633
  - -0.10319805145263672
  - -0.06224365904927254
  - -0.110687255859375
  - -0.10578799247741699
  - -0.10580921173095703
  - -0.10092592239379883
  - -0.10254716873168945
  - -0.1081697940826416
  - -0.10449337959289551
  - -0.09676599502563477
  - -0.1038360595703125
  - -0.10947751998901367
  - -0.10588788986206055
  - -0.10334587097167969
  - -0.10528653115034103
- - -0.10270166397094727
  - -0.10544967651367188
  - -0.10668015480041504
  - -0.10407400131225586
  - -0.10144233703613281
  - -0.10261106491088867
  - -0.10924863815307617
  - -0.1014552116394043
  - -0.10685539245605469
  - -0.10482358932495117
  - -0.10537528991699219
  - -0.08602394908666611
  - -0.11026477813720703
  - -0.10511612892150879
  - -0.09537267684936523
  - -0.0891265869140625
  - -0.11525440216064453
  - -0.1094822883605957
  - -0.10079336166381836
  - -0.10126304626464844
  - -0.10361194610595703
  - -0.10414886474609375
  - -0.10561990737915039
  - -0.1096024289727211
  - -0.11214709281921387
  - -0.10580205917358398
  - -0.10761117935180664
  - -0.09160041809082031
  - -0.10024070739746094
  - -0.10283994674682617
  - -0.10387945175170898
  - -0.10408449172973633
  - -0.10319805145263672
  - -0.06224365904927254
  - -0.110687255859375
  - -0.10578799247741699
  - -0.10580921173095703
  - -0.10092592239379883
  - -0.10254716873168945
  - -0.1081697940826416
  - -0.10449337959289551
  - -0.09676599502563477
  - -0.1038360595703125
  - -0.10947751998901367
  - -0.10588788986206055
  - -0.10334587097167969
  - -2.9910948276519775
- - -0.10270166397094727
  - -0.10544967651367188
  - -0.10668015480041504
  - -0.10407400131225586
  - -0.10144233703613281
  - -0.10261106491088867
  - -0.10924863815307617
  - -0.1014552116394043
  - -0.10685539245605469
  - -0.10482358932495117
  - -0.10537528991699219
  - -0.08602394908666611
  - -0.11026477813720703
  - -0.10511612892150879
  - -0.09537267684936523
  - -0.0891265869140625
  - -0.11525440216064453
  - -0.1094822883605957
  - -0.10079336166381836
  - -0.10126304626464844
  - -0.10361194610595703
  - -0.10414886474609375
  - -0.10561990737915039
  - -0.1096024289727211
  - -0.11214709281921387
  - -0.10580205917358398
  - -0.10761117935180664
  - -0.09160041809082031
  - -0.10024070739746094
  - -0.10283994674682617
  - -0.10387945175170898
  - -0.10408449172973633
  - -0.10319805145263672
  - -0.06224365904927254
  - -0.110687255859375
  - -0.10578799247741699
  - -0.10580921173095703
  - -0.10092592239379883
  - -0.10254716873168945
  - -0.1081697940826416
  - -0.10449337959289551
  - -0.09676599502563477
  - -0.1038360595703125
  - -0.10947751998901367
  - -0.10588788986206055
  - -0.10334587097167969
  - -3.0017285346984863
- - -0.10270166397094727
  - -0.10544967651367188
  - -0.10668015480041504
  - -0.10407400131225586
  - -0.10144233703613281
  - -0.10261106491088867
  - -0.10924863815307617
  - -0.1014552116394043
  - -0.10685539245605469
  - -0.10482358932495117
  - -0.10537528991699219
  - -0.08602394908666611
  - -0.11026477813720703
  - -0.10511612892150879
  - -0.09537267684936523
  - -0.0891265869140625
  - -0.11525440216064453
  - -0.1094822883605957
  - -0.10079336166381836
  - -0.10126304626464844
  - -0.10361194610595703
  - -0.10414886474609375
  - -0.10561990737915039
  - -0.1096024289727211
  - -3.436062812805176
  - -0.10568499565124512
  - -0.10786914825439453
  - -0.08921289443969727
  - -0.10029220581054688
  - -0.10247135162353516
  - -0.10378265380859375
  - -0.1041116714477539
  - -0.10312557220458984
  - -0.05727532505989075
  - -0.11073517799377441
  - -0.10579395294189453
  - -0.1058650016784668
  - -0.10089683532714844
  - -0.10253477096557617
  - -0.10816478729248047
  - -0.10448837280273438
  - -0.09680986404418945
  - -0.10388946533203125
  - -0.10960769653320312
  - -0.1058802604675293
  - -0.10334396362304688
  - -0.10540486872196198
- - -0.10270166397094727
  - -0.10544967651367188
  - -0.10668015480041504
  - -0.10407400131225586
  - -0.10144233703613281
  - -0.10261106491088867
  - -0.10924863815307617
  - -0.1014552116394043
  - -0.10685539245605469
  - -0.10482358932495117
  - -0.10537528991699219
  - -0.08602394908666611
  - -0.11026477813720703
  - -0.10511612892150879
  - -0.09537267684936523
  - -0.0891265869140625
  - -0.11525440216064453
  - -0.1094822883605957
  - -0.10079336166381836
  - -0.10126304626464844
  - -0.10361194610595703
  - -0.10414886474609375
  - -0.10561990737915039
  - -0.1096024289727211
  - -0.11214709281921387
  - -0.10580205917358398
  - -0.10761117935180664
  - -0.09160041809082031
  - -0.10024070739746094
  - -0.10283994674682617
  - -0.10387945175170898
  - -0.10408449172973633
  - -0.10319805145263672
  - -0.06224365904927254
  - -3.4630343914031982
  - -0.1064455509185791
  - -0.10582828521728516
  - -0.10097599029541016
  - -0.10268259048461914
  - -0.10815930366516113
  - -0.10451817512512207
  - -0.09696435928344727
  - -0.10376453399658203
  - -0.10994529724121094
  - -0.10574626922607422
  - -0.10332345962524414
  - -0.1059962585568428
- - -0.10270166397094727
  - -0.10544967651367188
  - -0.10668015480041504
  - -0.10407400131225586
  - -0.10144233703613281
  - -0.10261106491088867
  - -0.10924863815307617
  - -0.1014552116394043
  - -0.10685539245605469
  - -0.10482358932495117
  - -0.10537528991699219
  - -0.08602394908666611
  - -3.48696231842041
  - -0.10494518280029297
  - -0.0945587158203125
  - -0.09357786178588867
  - -0.11487960815429688
  - -0.10986804962158203
  - -0.10062646865844727
  - -0.1012110710144043
  - -0.10354375839233398
  - -0.10410547256469727
  - -0.10561704635620117
  - -0.1102273166179657
  - -0.11216282844543457
  - -0.10579943656921387
  - -0.10750532150268555
  - -0.09140348434448242
  - -0.10023784637451172
  - -0.10281610488891602
  - -0.1038808822631836
  - -0.10408353805541992
  - -0.10320329666137695
  - -0.06205142289400101
  - -0.11068058013916016
  - -0.10578322410583496
  - -0.10580205917358398
  - -0.1009373664855957
  - -0.10253429412841797
  - -0.10817956924438477
  - -0.1044914722442627
  - -0.09676218032836914
  - -0.1038827896118164
  - -0.10965490341186523
  - -0.1058950424194336
  - -0.1033015251159668
  - -0.10469622910022736
- - -0.10270166397094727
  - -0.10544967651367188
  - -0.10668015480041504
  - -0.10407400131225586
  - -0.10144233703613281
  - -0.10261106491088867
  - -0.10924863815307617
  - -0.1014552116394043
  - -0.10685539245605469
  - -0.10482358932495117
  - -0.10537528991699219
  - -0.08602394908666611
  - -0.11026477813720703
  - -0.10511612892150879
  - -0.09537267684936523
  - -0.0891265869140625
  - -0.11525440216064453
  - -0.1094822883605957
  - -0.10079336166381836
  - -0.10126304626464844
  - -0.10361194610595703
  - -0.10414886474609375
  - -0.10561990737915039
  - -0.1096024289727211
  - -0.11214709281921387
  - -0.10580205917358398
  - -0.10761117935180664
  - -0.09160041809082031
  - -0.10024070739746094
  - -0.10283994674682617
  - -0.10387945175170898
  - -0.10408449172973633
  - -0.10319805145263672
  - -0.06224365904927254
  - -0.110687255859375
  - -0.10578799247741699
  - -0.10580921173095703
  - -0.10092592239379883
  - -0.10254716873168945
  - -3.5469818115234375
  - -0.10312223434448242
  - -0.0959310531616211
  - -0.1037297248840332
  - -0.11000776290893555
  - -0.10574579238891602
  - -0.10349273681640625
  - -0.10542558133602142
- - -0.10270166397094727
  - -0.10544967651367188
  - -3.5549774169921875
  - -0.10411667823791504
  - -0.10162115097045898
  - -0.10235404968261719
  - -0.10990524291992188
  - -0.10162544250488281
  - -0.10692071914672852
  - -0.1048736572265625
  - -0.10542011260986328
  - -0.09204906970262527
  - -0.11032438278198242
  - -0.1051626205444336
  - -0.09500312805175781
  - -0.09609508514404297
  - -0.11607599258422852
  - -0.10941553115844727
  - -0.10097932815551758
  - -0.10130786895751953
  - -0.10344648361206055
  - -0.10413742065429688
  - -0.10565423965454102
  - -0.11027386784553528
  - -0.1121368408203125
  - -0.105804443359375
  - -0.10758733749389648
  - -0.09177207946777344
  - -0.10025930404663086
  - -0.10286235809326172
  - -0.10387277603149414
  - -0.1040806770324707
  - -0.10322046279907227
  - -0.06295067816972733
  - -0.11066150665283203
  - -0.10580015182495117
  - -0.10578393936157227
  - -0.10093832015991211
  - -0.10257768630981445
  - -0.10817337036132812
  - -0.10449337959289551
  - -0.09674978256225586
  - -0.10382461547851562
  - -0.10946989059448242
  - -0.10588216781616211
  - -0.10334348678588867
  - -0.10530144721269608
- - -0.10270166397094727
  - -0.10544967651367188
  - -0.10668015480041504
  - -0.10407400131225586
  - -0.10144233703613281
  - -0.10261106491088867
  - -0.10924863815307617
  - -0.1014552116394043
  - -0.10685539245605469
  - -0.10482358932495117
  - -0.10537528991699219
  - -0.08602394908666611
  - -0.11026477813720703
  - -0.10511612892150879
  - -0.09537267684936523
  - -0.0891265869140625
  - -0.11525440216064453
  - -0.1094822883605957
  - -0.10079336166381836
  - -0.10126304626464844
  - -0.10361194610595703
  - -0.10414886474609375
  - -0.10561990737915039
  - -4.434127330780029
  - -0.11442303657531738
  - -0.10521411895751953
  - -0.1113576889038086
  - -0.09429454803466797
  - -0.10070228576660156
  - -0.1023411750793457
  - -0.10368061065673828
  - -0.10431051254272461
  - -0.10400247573852539
  - -0.048752423375844955
  - -0.11063909530639648
  - -0.10575389862060547
  - -0.10587739944458008
  - -0.10095834732055664
  - -0.10248994827270508
  - -0.1081533432006836
  - -0.10447168350219727
  - -0.09678268432617188
  - -0.10392284393310547
  - -0.10978269577026367
  - -0.10583066940307617
  - -0.10323619842529297
  - -0.10427851229906082
- - -0.10270166397094727
  - -0.10544967651367188
  - -0.10668015480041504
  - -0.10407400131225586
  - -0.10144233703613281
  - -0.10261106491088867
  - -0.10924863815307617
  - -0.1014552116394043
  - -0.10685539245605469
  - -0.10482358932495117
  - -0.10537528991699219
  - -0.08602394908666611
  - -0.11026477813720703
  - -0.10511612892150879
  - -0.09537267684936523
  - -0.0891265869140625
  - -0.11525440216064453
  - -0.1094822883605957
  - -0.10079336166381836
  - -0.10126304626464844
  - -0.10361194610595703
  - -0.10414886474609375
  - -0.10561990737915039
  - -4.308746814727783
  - -0.112945556640625
  - -0.10524153709411621
  - -0.2738828659057617
  - -0.09009122848510742
  - -0.1009054183959961
  - -0.10261678695678711
  - -0.10376167297363281
  - -0.10430574417114258
  - -0.10412216186523438
  - -0.04452674835920334
  - -0.11046743392944336
  - -0.10572433471679688
  - -0.10581827163696289
  - -0.1009221076965332
  - -0.10245180130004883
  - -0.10816693305969238
  - -0.10447430610656738
  - -0.09683799743652344
  - -0.10393667221069336
  - -0.10973978042602539
  - -0.1058053970336914
  - -0.10322999954223633
  - -0.10396473109722137
ratsql_beam_actions:
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'VOTES'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'AREA_CODE_STATE'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'CONTESTANTS'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'VOTES'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'True'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'VOTES'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'True'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'VOTES'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'True'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'VOTES'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'True'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'VOTES'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'contestant_number'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'VOTES'
- - ('sql', (True, True, True, True, True, True))
  - ('select', ('bool', True))
  - 'False'
  - '<EOS>'
  - ('agg*', 1)
  - ('agg', (True, True))
  - ('agg_type', 'Count')
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - '*'
  - 'False'
  - '<EOS>'
  - ('sql_where', (True,))
  - ('cond', 'Or')
  - ('Or', (True, True))
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'vote_id'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('cond', 'Eq')
  - ('Eq', (True, True))
  - ('val_unit', 'Column')
  - ('Column', (True,))
  - ('col_unit', (True, 'int', 'bool'))
  - ('agg_type', 'NoneAggOp')
  - 'state'
  - 'False'
  - '<EOS>'
  - ('val', 'Terminal')
  - ('sql_groupby', (False, False))
  - ('sql_orderby', (False, 'bool'))
  - 'False'
  - '<EOS>'
  - ('sql_ieu', (False, False, False))
  - ('from', (True, False))
  - ('table_unit*', 1)
  - ('table_unit_seq_elem', 'Table')
  - ('Table', ('int',))
  - 'VOTES'
